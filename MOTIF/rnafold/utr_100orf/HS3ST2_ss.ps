%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGGGCCACAGCAGCUCAGCCGCCGGUGCCCCCUCGGAAACCAUGACCCCCGGCGCGGGCCCAUGGAGCCAUGGCCUAUAGGGUCCUGGGCCGCGCGGGGCCACCUCAGCCGCGGAGGGCGCGCAGGCUGCUCUUCGCCUUCACGCUCUCGCUCUCCUGCACUUACCUGU\
) } def
/len { sequence length } bind def

/coor [
[224.58988953 547.89306641]
[237.11024475 539.16357422]
[234.66961670 524.36346436]
[232.22898865 509.56335449]
[229.78834534 494.76324463]
[227.34771729 479.96313477]
[224.50489807 465.23498535]
[221.26199341 450.58972168]
[207.55343628 444.82662964]
[199.77503967 431.94406128]
[201.08923340 416.77413940]
[211.20083618 405.15252686]
[207.95793152 390.50726318]
[204.71502686 375.86199951]
[200.15756226 361.57110596]
[194.32307434 347.75234985]
[180.47007751 342.40164185]
[174.35621643 328.47055054]
[180.06243896 313.97653198]
[174.22795105 300.15774536]
[168.39346313 286.33895874]
[162.55897522 272.52017212]
[156.72448730 258.70138550]
[143.47781372 256.88607788]
[132.77764893 248.68943787]
[127.49121094 236.17283630]
[129.10162354 222.57228088]
[137.29362488 211.46195984]
[131.71101379 197.53950500]
[126.12841797 183.61706543]
[120.54582214 169.69461060]
[114.96322632 155.77215576]
[109.38062286 141.84971619]
[103.67184448 127.97852325]
[97.83735657 114.15974426]
[86.80403900 105.57152557]
[88.34386444 91.67474365]
[82.50937653 77.85596466]
[76.67488098 64.03717804]
[61.50009155 64.07447815]
[47.50482941 58.31464386]
[36.80990219 47.66419220]
[31.02307320 33.76814270]
[30.99741554 18.75600624]
[36.70570374 4.91545486]
[47.24929047 -5.65630245]
[41.41479874 -19.47508430]
[28.91899872 -29.17897606]
[31.09652710 -43.91354752]
[25.26203728 -57.73233032]
[19.42754936 -71.55110931]
[13.59305954 -85.36989594]
[8.51558781 -89.69405365]
[6.68627167 -95.12216949]
[7.80771685 -99.79796600]
[2.47884917 -113.81948853]
[-2.85001874 -127.84101868]
[-8.17888641 -141.86253357]
[-13.50775433 -155.88406372]
[-18.83662224 -169.90559387]
[-24.83166504 -176.84584045]
[-24.13241196 -184.23040771]
[-29.20579147 -198.34638977]
[-34.27917099 -212.46237183]
[-39.35255051 -226.57833862]
[-45.22058105 -233.62629700]
[-44.38735199 -240.99696350]
[-49.20356750 -255.20274353]
[-54.01978683 -269.40850830]
[-65.77838898 -279.99368286]
[-62.53725052 -294.53137207]
[-67.35346985 -308.73715210]
[-82.43158722 -311.66049194]
[-94.01742554 -321.74334717]
[-98.99444580 -336.27346802]
[-96.02385712 -351.34237671]
[-85.90473175 -362.89654541]
[-71.35906982 -367.82800293]
[-56.29957199 -364.81018066]
[-44.77717590 -354.65487671]
[-39.89134216 -340.09384155]
[-42.95633698 -325.04388428]
[-53.14769363 -313.55337524]
[-48.33147430 -299.34759521]
[-36.91736603 -289.77850342]
[-39.81401062 -274.22473145]
[-34.99779510 -260.01895142]
[-30.18157578 -245.81318665]
[-25.23657417 -231.65171814]
[-20.16319466 -217.53575134]
[-15.08981419 -203.41976929]
[-10.01643467 -189.30378723]
[-4.81509686 -175.23446655]
[0.51377076 -161.21293640]
[5.84263849 -147.19140625]
[11.17150688 -133.16987610]
[16.50037384 -119.14836121]
[21.82924271 -105.12683105]
[27.41184044 -91.20438385]
[33.24633026 -77.38560486]
[39.08081818 -63.56682205]
[44.91530991 -49.74803925]
[56.99378967 -41.03255844]
[55.23358154 -25.30957413]
[61.06806946 -11.49079227]
[75.99775696 -11.67422009]
[89.89791107 -6.11263275]
[100.63878632 4.37538195]
[106.56188965 18.21389580]
[106.73600769 33.30638885]
[101.10346222 47.35336304]
[90.49366760 58.20269012]
[96.32815552 72.02147675]
[102.16264343 85.84025574]
[113.19596100 94.42847443]
[111.65613556 108.32525635]
[117.49062347 122.14403534]
[123.73372650 128.86201477]
[123.30307007 136.26712036]
[128.88566589 150.18955994]
[134.46827698 164.11201477]
[140.05087280 178.03445435]
[145.63346863 191.95690918]
[151.21606445 205.87936401]
[167.65705872 209.77976990]
[178.43682861 222.57563782]
[179.46835327 239.10887146]
[170.54325867 252.86691284]
[176.37776184 266.68569946]
[182.21224976 280.50448608]
[188.04673767 294.32324219]
[193.88122559 308.14202881]
[208.24826050 314.16082764]
[213.96841431 328.25817871]
[208.14186096 341.91784668]
[213.97634888 355.73663330]
[217.75997925 341.22167969]
[228.20811462 330.45892334]
[242.60449219 326.24652100]
[257.20635986 329.67953491]
[268.21752930 339.86550903]
[272.77539062 354.15628052]
[269.69494629 368.83654785]
[259.77709961 380.08981323]
[245.60021973 384.99044800]
[230.85000610 382.26440430]
[219.36029053 372.61911011]
[222.60319519 387.26437378]
[225.84609985 401.90963745]
[239.91865540 408.17614746]
[247.51414490 421.37316895]
[245.90139771 436.33523560]
[235.90725708 447.34683228]
[239.15016174 461.99206543]
[242.72805786 465.89047241]
[244.27345276 470.33035278]
[243.92404175 474.43762207]
[242.14782715 477.52249146]
[244.58845520 492.32260132]
[247.02909851 507.12271118]
[249.46972656 521.92285156]
[251.91035461 536.72296143]
[266.57064819 540.97015381]
[277.93057251 551.16400146]
[283.73464966 565.28051758]
[282.83044434 580.51678467]
[275.39749146 593.84771729]
[262.91159058 602.62646484]
[247.85188293 605.10986328]
[233.20843506 600.80499268]
[221.88871765 590.56646729]
[216.14028931 576.42724609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 162]
[3 161]
[4 160]
[5 159]
[6 158]
[7 154]
[8 153]
[12 149]
[13 148]
[14 147]
[15 136]
[16 135]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[28 124]
[29 123]
[30 122]
[31 121]
[32 120]
[33 119]
[34 117]
[35 116]
[37 114]
[38 113]
[39 112]
[46 105]
[47 104]
[49 102]
[50 101]
[51 100]
[52 99]
[55 98]
[56 97]
[57 96]
[58 95]
[59 94]
[60 93]
[62 92]
[63 91]
[64 90]
[65 89]
[67 88]
[68 87]
[69 86]
[71 84]
[72 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
