%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGGCUGGCGGCCGGCGGGAGAGGCGGCCGGCCUGGACUGGCCCGAGAGGGAUCCCGGUUCCCAGAACAGACCUAGGAGGCGGCCUCGAGGGCGGACGGCAGGGAGGGCCAGCAUGCCCCGACUGCUGCACCCCGCCCUGCCGCUGCUCCUGGGCGCCACGCUGACCUUCCGGGCGCUCCGGCGCGCGCUCUGUCGCCUGCCCCUACCCGUGC\
) } def
/len { sequence length } bind def

/coor [
[84.83192444 565.92437744]
[79.88653564 551.21649170]
[84.56283569 536.42077637]
[97.06269836 527.22662354]
[96.84453583 512.22821045]
[96.62638092 497.22979736]
[85.79657745 487.06854248]
[85.36167908 471.86111450]
[96.09315491 460.57070923]
[95.87500000 445.57229614]
[92.63587189 438.93243408]
[95.76432800 430.35455322]
[95.76432800 415.35455322]
[95.76432800 400.35455322]
[88.02703094 387.62728882]
[95.76432800 373.82708740]
[95.76432800 358.82708740]
[95.76432800 343.82708740]
[95.76432800 328.82708740]
[95.76432800 313.82708740]
[88.02703094 301.09982300]
[95.76432800 287.29965210]
[95.76432800 272.29965210]
[95.76432800 257.29965210]
[95.76432800 242.29965210]
[95.65525055 227.30004883]
[95.43708801 212.30163574]
[95.21893311 197.30322266]
[94.89170837 182.30679321]
[94.45543671 167.31314087]
[94.01916504 152.31948853]
[93.58289337 137.32583618]
[93.14662933 122.33218384]
[73.94217682 104.67446136]
[82.02914429 76.49542999]
[67.08622742 77.80277252]
[52.14330292 79.11010742]
[37.20038223 80.41744232]
[22.27805710 81.94197083]
[7.37948132 83.68336487]
[-7.51909447 85.42475891]
[-22.41766930 87.16614532]
[-37.31624603 88.90753937]
[-52.17328644 90.97353363]
[-66.98171997 93.36313629]
[-81.79016113 95.75273895]
[-94.15596008 106.52395630]
[-109.57705688 100.94526672]
[-112.18955231 84.75555420]
[-99.30593109 74.60939789]
[-84.17976379 80.94430542]
[-69.37132263 78.55470276]
[-54.56288910 76.16509247]
[-52.21458817 73.53967285]
[-48.47952652 71.91946411]
[-43.84318161 71.94319153]
[-39.05764008 74.00896454]
[-24.15906334 72.26757050]
[-9.26048756 70.52617645]
[5.63808727 68.78479004]
[20.53666306 67.04339600]
[24.14697838 63.92216873]
[29.75529861 63.03335190]
[35.89304733 65.47451782]
[50.83596802 64.16718292]
[65.77888489 62.85984802]
[80.72180939 61.55251312]
[65.81037140 59.92491531]
[55.01533127 49.51016235]
[52.85423660 34.66665649]
[60.23146820 21.60616684]
[74.05977631 15.79429245]
[88.55223846 19.66321182]
[97.64399719 31.59384346]
[97.52986908 46.59460449]
[100.56313324 31.90449715]
[103.59639740 17.21438789]
[106.62966156 2.52427793]
[109.66292572 -12.16583157]
[112.69618988 -26.85593987]
[115.72945404 -41.54605103]
[118.54874420 -56.27872086]
[121.15346527 -71.05083466]
[123.75819397 -85.82295227]
[126.36291504 -100.59506989]
[128.96763611 -115.36718750]
[127.34202576 -119.38434601]
[127.10118103 -123.31494141]
[128.04827881 -126.73488617]
[129.86915588 -129.32737732]
[132.17733765 -130.91180420]
[135.63658142 -145.50747681]
[139.09582520 -160.10316467]
[142.55505371 -174.69883728]
[146.01429749 -189.29450989]
[149.47352600 -203.89018250]
[152.93276978 -218.48585510]
[145.55461121 -238.60745239]
[160.35545349 -252.99429321]
[163.17474365 -267.72695923]
[165.99403381 -282.45962524]
[168.81333923 -297.19232178]
[171.63262939 -311.92498779]
[174.45191956 -326.65765381]
[164.00944519 -337.98287964]
[162.25840759 -353.10861206]
[169.66212463 -366.21008301]
[183.19882202 -372.36605835]
[186.01811218 -387.09872437]
[188.83740234 -401.83139038]
[191.65669250 -416.56405640]
[182.57470703 -429.49822998]
[185.38088989 -445.05142212]
[198.41036987 -453.99612427]
[213.93299866 -451.02566528]
[222.73947144 -437.90234375]
[219.60505676 -422.41198730]
[206.38935852 -413.74475098]
[203.57006836 -399.01208496]
[200.75077820 -384.27941895]
[197.93148804 -369.54675293]
[208.23896790 -358.82791138]
[210.28245544 -343.91857910]
[203.07061768 -330.50802612]
[189.18458557 -323.83834839]
[186.36529541 -309.10568237]
[183.54600525 -294.37301636]
[180.72671509 -279.64035034]
[177.90742493 -264.90768433]
[175.08813477 -250.17500305]
[181.20025635 -243.74391174]
[183.70796204 -235.09016418]
[181.92791748 -226.11772156]
[176.13502502 -218.86166382]
[167.52844238 -215.02661133]
[164.06919861 -200.43093872]
[160.60997009 -185.83526611]
[157.15072632 -171.23959351]
[153.69149780 -156.64392090]
[150.23225403 -142.04824829]
[146.77301025 -127.45257568]
[143.73974609 -112.76246643]
[141.13502502 -97.99034882]
[138.53030396 -83.21823120]
[135.92558289 -68.44611359]
[133.32086182 -53.67399979]
[135.27551270 -49.32017899]
[134.51850891 -43.69255066]
[130.41955566 -38.51278687]
[127.38629913 -23.82267761]
[124.35303497 -9.13256741]
[121.31977081 5.55754137]
[118.28650665 20.24765015]
[115.25324249 34.93775940]
[112.21997833 49.62786865]
[120.73404694 61.97739029]
[135.54248047 64.36699677]
[150.35092163 66.75659943]
[165.15936279 69.14620209]
[179.96778870 71.53580475]
[188.93452454 69.81381226]
[194.97358704 74.06935120]
[209.74569702 76.67407990]
[220.13754272 65.27174377]
[235.05014038 61.31983185]
[249.72496033 66.07937622]
[259.47930908 78.03163147]
[261.20059204 93.36266327]
[254.33959961 107.18041229]
[241.08560181 115.07566833]
[225.66792297 114.52909851]
[213.00628662 105.71509552]
[207.14097595 91.44618988]
[192.36885071 88.84146881]
[177.57818604 86.34423828]
[162.76976013 83.95463562]
[147.96131897 81.56503296]
[133.15287781 79.17543030]
[118.34444427 76.78582764]
[126.15061951 104.12384033]
[108.14028168 121.89591217]
[108.57655334 136.88955688]
[109.01282501 151.88322449]
[109.44908905 166.87687683]
[109.88536072 181.87052917]
[113.26198578 190.35379028]
[110.21734619 197.08506775]
[110.43550110 212.08348083]
[110.65366364 227.08189392]
[113.90654755 235.61337280]
[110.76432800 242.29965210]
[110.76432800 257.29965210]
[110.76432800 272.29965210]
[110.76432800 287.29965210]
[118.50163269 301.09982300]
[110.76432800 313.82708740]
[110.76432800 328.82708740]
[110.76432800 343.82708740]
[110.76432800 358.82708740]
[110.76432800 373.82708740]
[118.50163269 387.62728882]
[110.76432800 400.35455322]
[110.76432800 415.35455322]
[110.76432800 430.35455322]
[110.87341309 445.35415649]
[111.09157562 460.35256958]
[122.14688873 471.32604980]
[122.15447998 486.53970337]
[111.62479401 497.01162720]
[111.84294891 512.01000977]
[112.06111145 527.00842285]
[124.82309723 535.83520508]
[129.92774963 550.48858643]
[125.41222382 565.33410645]
[113.01284027 574.66339111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 211]
[5 210]
[6 209]
[9 206]
[10 205]
[12 204]
[13 203]
[14 202]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[22 194]
[23 193]
[24 192]
[25 191]
[26 189]
[27 188]
[28 187]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[35 67]
[36 66]
[37 65]
[38 64]
[39 61]
[40 60]
[41 59]
[42 58]
[43 57]
[44 53]
[45 52]
[46 51]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[91 141]
[92 140]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[99 130]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[108 121]
[109 120]
[110 119]
[111 118]
[156 179]
[157 178]
[158 177]
[159 176]
[160 175]
[162 174]
[163 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
