%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGGCGGCGCGGGCGGGCCGGCCGGGCUGUGCACCUGCGCCUCGGCGGGCCGCCUGGGGCACCGUCCCCGGCCCGCCCGGCCCCGCCAUGGCCCGGCCGCAGAGGACUCCGGCGCGCAGUCCCGAUAGCAUCGUCGAGGUGAAGAGCAAAUUUGACGCCGAGUUCCGACGCUUCGCGCUGCCUCGCG\
) } def
/len { sequence length } bind def

/coor [
[88.02489471 395.70233154]
[80.29638672 381.23852539]
[89.18674469 367.45834351]
[89.43217468 352.46032715]
[89.67759705 337.46234131]
[89.92301941 322.46435547]
[90.16844940 307.46636963]
[90.41387177 292.46838379]
[90.65930176 277.47036743]
[90.90472412 262.47238159]
[91.15015411 247.47439575]
[91.39557648 232.47640991]
[91.64100647 217.47840881]
[91.88642883 202.48042297]
[92.13185883 187.48242188]
[92.37728119 172.48443604]
[92.50000000 157.48493958]
[92.50000000 142.48493958]
[92.50000000 127.48493958]
[75.68408203 114.84613800]
[72.12492371 94.11339569]
[58.78218460 87.25983429]
[49.70269775 86.11877441]
[45.27856827 80.18342590]
[32.04974747 73.11248016]
[18.82093048 66.04152679]
[5.59211111 58.97057343]
[-7.63670778 51.89962387]
[-20.86552620 44.82867432]
[-34.09434509 37.75772095]
[-47.32316589 30.68677139]
[-60.55198288 23.61581993]
[-73.78079987 16.54486847]
[-87.00962067 9.47391701]
[-100.23844147 2.40296650]
[-98.54087067 17.30659866]
[-109.01502991 28.04401016]
[-123.95619965 26.71684074]
[-132.37377930 14.30134487]
[-128.07583618 -0.06972869]
[-114.22444916 -5.82515192]
[-126.83117676 -13.95352554]
[-139.63359070 -21.77006721]
[-152.62396240 -29.27006721]
[-165.61434937 -36.77006531]
[-178.26292419 -34.19174576]
[-188.93244934 -40.71883011]
[-192.18028259 -52.38169098]
[-205.04620361 -60.09323120]
[-217.91213989 -67.80477142]
[-230.77806091 -75.51631165]
[-243.64399719 -83.22785187]
[-256.50991821 -90.93939209]
[-269.37585449 -98.65093231]
[-282.24179077 -106.36248016]
[-295.10772705 -114.07402039]
[-300.35906982 -114.15650940]
[-304.62081909 -116.06335449]
[-307.36187744 -119.10810089]
[-308.40252686 -122.49286652]
[-320.87457275 -130.82641602]
[-333.34661865 -139.15997314]
[-345.81866455 -147.49353027]
[-358.29071045 -155.82708740]
[-374.81964111 -159.59948730]
[-375.77032471 -176.52676392]
[-359.76773071 -182.12622070]
[-349.95715332 -168.29913330]
[-337.48510742 -159.96557617]
[-325.01306152 -151.63201904]
[-312.54101562 -143.29846191]
[-300.06896973 -134.96490479]
[-287.39617920 -126.93994904]
[-274.53024292 -119.22840881]
[-261.66430664 -111.51686859]
[-248.79838562 -103.80532074]
[-235.93244934 -96.09378052]
[-223.06652832 -88.38224030]
[-210.20059204 -80.67070007]
[-197.33467102 -72.95915985]
[-184.46873474 -65.24761963]
[-166.93925476 -65.91374207]
[-158.11434937 -49.76044846]
[-145.12396240 -42.26044846]
[-132.13359070 -34.76044846]
[-128.63761902 -35.32416153]
[-124.69452667 -34.21244431]
[-121.09940338 -31.23357201]
[-118.70280457 -26.56025124]
[-106.09607697 -18.43187714]
[-93.16748810 -10.82585239]
[-79.93866730 -3.75490165]
[-66.70985413 3.31604958]
[-53.48103333 10.38700104]
[-40.25221252 17.45795250]
[-27.02339554 24.52890205]
[-13.79457569 31.59985352]
[-0.56575680 38.67080307]
[12.66306210 45.74175644]
[25.89188194 52.81270599]
[39.12070084 59.88365936]
[52.34951782 66.95461273]
[65.63574219 73.91709900]
[78.97848511 80.77065277]
[90.46366882 73.15357971]
[104.18032837 71.81850433]
[116.91880798 77.07782745]
[125.69831848 87.70088959]
[140.45600891 85.01563263]
[155.21369934 82.33038330]
[169.97138977 79.64512634]
[184.72908020 76.95987701]
[199.48677063 74.27462006]
[207.38464355 69.65264893]
[214.50775146 71.66823578]
[229.30740356 69.22480011]
[244.10705566 66.78137207]
[258.90670776 64.33793640]
[273.68588257 61.77350998]
[288.44357300 59.08825684]
[296.34143066 54.46628189]
[303.46453857 56.48186874]
[318.26419067 54.03843689]
[333.06384277 51.59500504]
[335.37557983 36.65802383]
[342.18176270 23.18515015]
[352.80462646 12.49014950]
[366.19491577 5.61154890]
[381.03552246 3.21179748]
[395.87106323 5.51348829]
[409.25054932 12.27877426]
[419.86941528 22.83387947]
[426.69653320 36.13618469]
[441.49618530 33.69275284]
[456.29583740 31.24932098]
[471.09548950 28.80588913]
[481.57135010 16.65535545]
[497.59646606 17.41395378]
[506.87771606 30.49975014]
[502.29531860 45.87444305]
[487.36450195 51.74388504]
[473.53890991 43.60553741]
[458.73925781 46.04897308]
[443.93960571 48.49240494]
[429.13995361 50.93583679]
[426.95104980 65.72669983]
[420.28857422 79.13496399]
[409.79373169 89.84191132]
[396.48538208 96.79018402]
[381.66098022 99.28813934]
[366.77026367 97.07875824]
[353.27334595 90.36594391]
[342.49765015 79.79585266]
[335.50726318 66.39465332]
[320.70764160 68.83808899]
[305.90798950 71.28151703]
[291.12881470 73.84594727]
[276.37112427 76.53119659]
[270.34344482 80.82866669]
[261.35012817 79.13758850]
[246.55049133 81.58102417]
[231.75083923 84.02445221]
[216.95118713 86.46788788]
[202.17202759 89.03231049]
[187.41433716 91.71756744]
[172.65664673 94.40281677]
[157.89895630 97.08807373]
[143.14126587 99.77332306]
[128.38357544 102.45858002]
[126.34072113 110.85533905]
[121.87435150 118.25334167]
[115.39541626 123.97192383]
[107.50000000 127.48493958]
[107.50000000 142.48493958]
[107.50000000 157.48493958]
[110.63346100 166.08264160]
[107.37527466 172.72985840]
[107.12985229 187.72785950]
[106.88442230 202.72584534]
[106.63899994 217.72383118]
[106.39356995 232.72183228]
[106.14814758 247.71981812]
[105.90271759 262.71780396]
[105.65729523 277.71582031]
[105.41186523 292.71380615]
[105.16644287 307.71179199]
[104.92101288 322.70977783]
[104.67559052 337.70776367]
[104.43016052 352.70578003]
[104.18473816 367.70376587]
[112.61946106 381.76745605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[17 175]
[18 174]
[19 173]
[21 104]
[22 103]
[24 102]
[25 101]
[26 100]
[27 99]
[28 98]
[29 97]
[30 96]
[31 95]
[32 94]
[33 93]
[34 92]
[35 91]
[41 90]
[42 89]
[43 85]
[44 84]
[45 83]
[48 81]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[54 75]
[55 74]
[56 73]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[108 169]
[109 168]
[110 167]
[111 166]
[112 165]
[113 164]
[115 163]
[116 162]
[117 161]
[118 160]
[119 158]
[120 157]
[122 156]
[123 155]
[124 154]
[133 145]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
