%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAGGGCCUGACAUCUCCCCAGAACAGACGUUUGAACAGAGCAGGCUUCUGAGGUCUCCAAAAUGCCUGUCCCAGCCUCCUGGCCCCAUCCUCCUGGUCCUUUCCUGCUUCUGACUCUACUGCUGGGACUUACAGAAGUGGCAGGUGAGGAGGAGCUACAGA\
) } def
/len { sequence length } bind def

/coor [
[-2.92881370 214.65281677]
[0.27375191 229.30694580]
[-5.61471224 243.10281372]
[-18.41198158 250.92778015]
[-33.37548065 249.88194275]
[-44.95983505 240.35289001]
[-48.87196350 225.87202454]
[-43.66306305 211.80714417]
[-57.01524734 218.64228821]
[-70.36743164 225.47741699]
[-83.71961975 232.31256104]
[-97.07180786 239.14770508]
[-110.42399597 245.98283386]
[-112.69521332 249.80110168]
[-115.76729584 252.41021729]
[-119.15255737 253.70657349]
[-122.38074493 253.75880432]
[-125.05464935 252.78651428]
[-138.88552856 258.59225464]
[-152.71641541 264.39801025]
[-154.61840820 280.80178833]
[-164.46652222 293.94058228]
[-179.50514221 300.29544067]
[-195.60484314 298.22387695]
[-208.39625549 288.38327026]
[-222.11479187 294.44973755]
[-235.83331299 300.51617432]
[-249.55184937 306.58264160]
[-258.78225708 320.13739014]
[-275.11395264 318.65133667]
[-281.74624634 303.65316772]
[-271.85644531 290.57174683]
[-255.61830139 292.86410522]
[-241.89976501 286.79763794]
[-228.18124390 280.73120117]
[-214.46270752 274.66473389]
[-213.89387512 260.99594116]
[-207.45198059 248.85183716]
[-196.34747314 240.63641357]
[-182.72004700 238.00376892]
[-169.22634888 241.52534485]
[-158.52217102 250.56713867]
[-144.69128418 244.76138306]
[-130.86041260 238.95562744]
[-117.25913239 232.63064575]
[-103.90694427 225.79551697]
[-90.55475616 218.96037292]
[-77.20257568 212.12522888]
[-63.85038757 205.29010010]
[-50.49820328 198.45495605]
[-37.70118713 190.62957764]
[-25.53264809 181.85879517]
[-13.36410904 173.08801270]
[-1.19556880 164.31723022]
[4.60510683 150.59858704]
[20.32444954 148.80613708]
[32.49298859 140.03535461]
[36.09641647 133.54458618]
[44.97582626 131.21630859]
[57.30816650 122.67737579]
[69.64051056 114.13844299]
[81.97284698 105.59951019]
[67.05641937 107.18068695]
[53.25650406 113.05966187]
[38.26169586 113.45437622]
[24.17159843 108.30956268]
[12.95912838 98.34559631]
[6.19427490 84.95766449]
[4.82426453 70.02036285]
[9.04092884 55.62523270]
[18.25384331 43.78791046]
[31.17299843 36.16587448]
[45.98943329 33.82638168]
[60.62852859 37.09700394]
[73.04048157 45.51979065]
[81.48736572 57.91536331]
[84.78634644 72.54593658]
[92.22555542 85.57122803]
[91.94169617 70.57391357]
[91.65782928 55.57660294]
[82.73218536 41.81924438]
[90.42359924 27.33566284]
[106.81981659 27.02532387]
[115.05380249 41.20747757]
[106.65514374 55.29273987]
[106.93901062 70.29005432]
[107.22286987 85.28736877]
[121.89965820 88.38765717]
[136.57514954 91.48768616]
[142.90011597 77.88641357]
[149.22509766 64.28514099]
[143.56935120 49.52749634]
[150.08158875 35.12727356]
[164.89820862 29.62787437]
[179.22877502 36.29199219]
[184.57121277 51.16592407]
[177.75595093 65.42523193]
[162.82637024 70.61011505]
[156.50138855 84.21139526]
[150.17642212 97.81266785]
[157.51193237 110.89663696]
[172.41532898 112.59625244]
[187.31872559 114.29586792]
[202.22212219 115.99548340]
[217.12551880 117.69509888]
[231.71351624 111.57128906]
[243.48213196 120.70085907]
[258.38552856 122.40047455]
[273.28894043 124.10009003]
[288.19232178 125.79970551]
[303.09573364 127.49932098]
[317.99911499 129.19894409]
[307.66107178 118.33042908]
[304.70758057 103.62407684]
[310.04782104 89.60688019]
[322.03790283 80.59370422]
[336.98703003 79.35903931]
[350.29339600 86.28295898]
[357.86096191 99.23408508]
[357.36026001 114.22572327]
[348.94540405 126.64305115]
[335.20553589 132.66384888]
[349.60519409 136.86506653]
[364.00482178 141.06628418]
[379.41973877 137.50382996]
[389.47055054 148.49612427]
[403.87020874 152.69734192]
[418.26983643 156.89855957]
[431.17294312 148.06433105]
[446.73071289 149.64230347]
[457.59722900 160.88742065]
[458.64166260 176.49008179]
[449.37088013 189.08319092]
[434.16223145 192.72065735]
[420.19680786 185.68499756]
[414.06863403 171.29820251]
[399.66897583 167.09698486]
[385.26931763 162.89576721]
[370.88436890 166.75872803]
[359.80361938 155.46592712]
[345.40396118 151.26470947]
[331.00433350 147.06349182]
[316.29949951 144.10234070]
[301.39611816 142.40272522]
[286.49270630 140.70310974]
[271.58932495 139.00349426]
[256.68591309 137.30387878]
[241.78251648 135.60426331]
[228.26051331 141.84963989]
[215.42590332 132.59849548]
[200.52250671 130.89888000]
[185.61911011 129.19926453]
[170.71571350 127.49964905]
[155.81231689 125.80003357]
[90.51177979 117.93184662]
[78.17944336 126.47077942]
[65.84709930 135.00971985]
[53.51475906 143.54864502]
[41.26377106 152.20388794]
[29.09523201 160.97468567]
[22.42418098 175.32067871]
[7.57521439 176.48577881]
[-4.59332561 185.25656128]
[-16.76186562 194.02734375]
[-28.93040466 202.79812622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 50]
[9 49]
[10 48]
[11 47]
[12 46]
[13 45]
[18 44]
[19 43]
[20 42]
[25 36]
[26 35]
[27 34]
[28 33]
[51 165]
[52 164]
[53 163]
[54 162]
[56 160]
[57 159]
[59 158]
[60 157]
[61 156]
[62 155]
[78 87]
[79 86]
[80 85]
[89 100]
[90 99]
[91 98]
[101 154]
[102 153]
[103 152]
[104 151]
[105 150]
[107 148]
[108 147]
[109 146]
[110 145]
[111 144]
[112 143]
[122 142]
[123 141]
[124 140]
[126 138]
[127 137]
[128 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
