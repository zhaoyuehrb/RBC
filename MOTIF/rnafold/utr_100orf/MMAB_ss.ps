%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGUGGGUGGAGUCACCCCGCGGACUGGACGGGAACCUGGCGGGGUCAGGUCCCGUCAAGCAGCCUGGCUCAUGGCUGUGUGCGGCCUGGGGAGCCGUCUUGGCCUGGGGAGCCGUCUUGGCCUGCGCGGGUGCUUCGGCGCCGCCAGGCUCCUGUAUCCCCGUUUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[6.01295042 445.49517822]
[-1.49335432 450.59857178]
[-10.37148666 451.63931274]
[-17.63573456 464.76296997]
[-24.89998055 477.88665771]
[-32.16423035 491.01031494]
[-39.42847443 504.13400269]
[-46.69272232 517.25769043]
[-53.95697021 530.38134766]
[-61.10244751 543.57006836]
[-68.12857819 556.82275391]
[-66.99611664 573.18273926]
[-80.74736023 582.11779785]
[-95.23620605 574.43627930]
[-95.55776978 558.04028320]
[-81.38125610 549.79656982]
[-74.35512543 536.54394531]
[-73.99887848 529.13574219]
[-67.08064270 523.11706543]
[-59.81639481 509.99340820]
[-52.55214691 496.86975098]
[-45.28789902 483.74606323]
[-38.02365112 470.62240601]
[-30.75940323 457.49874878]
[-23.49515724 444.37506104]
[-25.72171211 423.87515259]
[-7.27628803 413.01153564]
[-0.73319554 399.51382446]
[5.80989695 386.01611328]
[12.35298920 372.51843262]
[18.89608192 359.02072144]
[24.19567108 344.98809814]
[28.20859528 330.53485107]
[32.22151947 316.08160400]
[36.23444748 301.62835693]
[40.24737167 287.17510986]
[36.19700241 272.84179688]
[47.34421539 261.61459351]
[51.35713959 247.16133118]
[55.37006378 232.70808411]
[59.38298798 218.25483704]
[63.39591599 203.80158997]
[67.40883636 189.34834290]
[71.42176819 174.89508057]
[75.43469238 160.44183350]
[71.38432312 146.10852051]
[82.53153229 134.88131714]
[86.54445648 120.42807007]
[90.55738068 105.97481537]
[94.43966675 91.48593140]
[98.19100189 76.96258545]
[101.94232941 62.43924332]
[105.69365692 47.91589737]
[109.31372833 33.35928345]
[112.80223846 18.77057838]
[116.29074860 4.18187380]
[119.77925873 -10.40683079]
[123.26777649 -24.99553490]
[121.75582886 -30.06392288]
[122.30695343 -34.73077011]
[124.41564941 -38.27096558]
[127.36032104 -40.26912308]
[131.63352966 -54.64756775]
[135.90673828 -69.02600861]
[140.17996216 -83.40445709]
[144.32319641 -97.82089233]
[148.33612061 -112.27413940]
[151.82463074 -126.86284637]
[154.78417969 -141.56797791]
[157.74372864 -156.27311707]
[160.70327759 -170.97825623]
[163.66282654 -185.68339539]
[166.62237549 -200.38853455]
[155.53579712 -215.71760559]
[159.07809448 -233.97676086]
[174.55334473 -243.70896912]
[176.98008728 -258.51135254]
[179.40681458 -273.31375122]
[181.83354187 -288.11614990]
[184.26026917 -302.91854858]
[175.18450928 -312.89868164]
[173.54882812 -326.09262085]
[179.72911072 -337.64324951]
[191.26506042 -343.42846680]
[193.95863342 -358.18466187]
[196.65222168 -372.94082642]
[199.34579468 -387.69699097]
[202.03938293 -402.45315552]
[191.92137146 -414.37625122]
[191.88624573 -430.01379395]
[201.95057678 -441.98223877]
[217.36230469 -444.63040161]
[230.84446716 -436.70797729]
[236.03121948 -421.95562744]
[230.47351074 -407.33898926]
[216.79554749 -399.75958252]
[214.10197449 -385.00341797]
[211.40838623 -370.24725342]
[208.71481323 -355.49105835]
[206.02122498 -340.73489380]
[216.16563416 -327.34066772]
[213.44702148 -310.41812134]
[199.06266785 -300.49182129]
[196.63594055 -285.68942261]
[194.20921326 -270.88702393]
[191.78247070 -256.08462524]
[189.35574341 -241.28224182]
[197.88830566 -233.64787292]
[201.70050049 -222.72453308]
[199.73049927 -211.20217896]
[192.35578918 -201.97822571]
[181.32751465 -197.42898560]
[178.36796570 -182.72384644]
[175.40841675 -168.01870728]
[172.44886780 -153.31356812]
[169.48931885 -138.60842896]
[166.52976990 -123.90328979]
[168.00161743 -121.47899628]
[168.58477783 -118.31578064]
[167.98915100 -114.75551605]
[166.05607605 -111.23991394]
[162.78936768 -108.26121521]
[158.77644348 -93.80796051]
[160.02105713 -86.49639130]
[154.55839539 -79.13124084]
[150.28518677 -64.75279999]
[146.01197815 -50.37435532]
[141.73876953 -35.99591064]
[137.85647583 -21.50702286]
[134.36796570 -6.91831827]
[130.87945557 7.67038536]
[127.39094543 22.25909042]
[123.90242767 36.84779358]
[125.41020203 44.10966492]
[120.21700287 51.66722870]
[116.46567535 66.19057465]
[112.71434021 80.71392059]
[108.96301270 95.23725891]
[110.15803528 103.23919678]
[105.01063538 109.98774719]
[100.99771118 124.44099426]
[96.98477936 138.89424133]
[100.74812317 154.26135254]
[89.88793945 164.45475769]
[85.87501526 178.90800476]
[81.86209106 193.36126709]
[77.84916687 207.81451416]
[73.83624268 222.26776123]
[69.82331085 236.72100830]
[65.81038666 251.17425537]
[61.79746246 265.62750244]
[65.56080627 280.99462891]
[54.70062256 291.18801880]
[50.68769455 305.64126587]
[46.67477036 320.09454346]
[42.66184616 334.54779053]
[38.64892197 349.00103760]
[50.62449646 339.96856689]
[65.49678040 338.01528931]
[79.39857483 343.64910889]
[88.71506500 355.40509033]
[91.02369690 370.22634888]
[85.72418213 384.25900269]
[74.19453430 393.85415649]
[59.43275070 396.51684570]
[45.27729797 391.55468750]
[35.40895844 380.25796509]
[32.39378357 365.56381226]
[25.85069084 379.06152344]
[19.30759811 392.55920410]
[12.76450539 406.05691528]
[6.22141314 419.55462646]
[10.49767303 428.02722168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 17]
[11 16]
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[38 151]
[39 150]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 144]
[47 142]
[48 141]
[49 140]
[50 138]
[51 137]
[52 136]
[53 135]
[54 133]
[55 132]
[56 131]
[57 130]
[58 129]
[62 128]
[63 127]
[64 126]
[65 125]
[66 123]
[67 122]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
