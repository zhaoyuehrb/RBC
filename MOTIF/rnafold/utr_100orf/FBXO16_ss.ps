%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAGACGGUGAUUGGGCUGCUGGAAGCUGGGAGGGGUGAGGGACUGGAGGGAGUCGGAGAAAAAGCUGACCUAAUGAAACUGUGGCAACGUCAGCGCUUGAGGCUUGAAGAGGGAGACAAGCUAAAAGAGGAUAUCCAGUUGUUUCAUGAUGGCAUUUGCACCUCCAAAAAACACAGAUGGUCCCAAAAUGCAGACAAAGAUGAGCACCUGGACACCCCUAAACCAUCAGCUAUUGAAUGACCGGG\
) } def
/len { sequence length } bind def

/coor [
[147.83996582 788.30389404]
[135.66218567 797.57531738]
[120.56869507 800.11407471]
[106.02787781 795.33673096]
[95.38110352 784.34106445]
[91.07492828 769.65380859]
[94.09886932 754.64996338]
[103.75804901 742.77740479]
[117.83287048 736.76422119]
[118.96276855 721.80682373]
[120.09267426 706.84948730]
[121.22257233 691.89208984]
[114.46596527 678.61816406]
[123.22080231 665.44000244]
[124.35070801 650.48260498]
[125.48060608 635.52520752]
[118.72399139 622.25128174]
[127.47883606 609.07318115]
[128.60873413 594.11578369]
[118.73540497 583.02282715]
[119.66821289 567.83782959]
[131.37043762 557.55700684]
[132.50033569 542.59960938]
[133.63024902 527.64221191]
[134.76014709 512.68481445]
[135.89004517 497.72744751]
[134.19300842 495.52651978]
[133.25425720 492.52911377]
[133.37837219 489.01669312]
[134.76399231 485.37466431]
[137.47113037 482.05310059]
[139.35113525 467.17138672]
[141.23114014 452.28967285]
[132.47180176 435.03497314]
[144.96867371 419.19659424]
[146.47409058 404.27230835]
[147.97952271 389.34805298]
[149.48495483 374.42379761]
[150.99037170 359.49951172]
[152.49580383 344.57525635]
[154.00122070 329.65100098]
[135.06094360 299.64959717]
[151.85820007 275.39047241]
[148.31071472 260.81600952]
[144.76322937 246.24153137]
[141.21574402 231.66705322]
[137.66825867 217.09259033]
[134.12077332 202.51811218]
[129.39598083 188.28166199]
[123.52537537 174.47819519]
[117.65476990 160.67471313]
[111.78416443 146.87123108]
[105.91355896 133.06774902]
[88.56568909 131.58644104]
[74.28949738 121.61981964]
[66.92011261 105.84530640]
[51.93905640 105.09164429]
[36.95800400 104.33797455]
[21.97694969 103.58431244]
[6.99589443 102.83065033]
[-2.63884091 114.99417877]
[-17.59207916 119.13909149]
[-32.11399460 113.67158508]
[-40.62061310 100.69403076]
[-39.84096527 85.19654846]
[-30.07484818 73.13825226]
[-15.07752514 69.15579987]
[-0.61577767 74.78051758]
[7.74955940 87.84959412]
[22.73061371 88.60325623]
[37.71166611 89.35692596]
[52.69272232 90.11058807]
[67.67377472 90.86425018]
[70.10913086 84.67085266]
[73.71764374 79.07908630]
[78.35768890 74.30842590]
[83.84714508 70.54610443]
[79.75286102 56.11569214]
[75.65858459 41.68527603]
[71.56430817 27.25486183]
[67.47002411 12.82444763]
[63.37574768 -1.60596764]
[59.28146744 -16.03638268]
[43.84429932 -24.29088020]
[39.25597382 -40.83372116]
[47.88917542 -55.27984238]
[43.61388397 -69.65766907]
[39.33859634 -84.03549957]
[28.01078033 -87.54240417]
[19.85730362 -95.98716736]
[16.81279564 -107.20002747]
[19.51935768 -118.37609100]
[27.19516182 -126.77688599]
[23.28253937 -141.25761414]
[19.36991501 -155.73834229]
[8.13380718 -159.52880859]
[0.19512232 -168.17579651]
[-2.56664371 -179.46162415]
[0.41991973 -190.56614685]
[8.30441189 -198.77139282]
[4.75692654 -213.34587097]
[1.20944154 -227.92034912]
[-12.00902462 -236.16110229]
[-15.39906025 -250.99221802]
[-7.46130705 -263.54321289]
[-11.00879192 -278.11770630]
[-14.55627728 -292.69216919]
[-18.10376167 -307.26666260]
[-21.65124702 -321.84112549]
[-25.19873238 -336.41561890]
[-39.96111679 -340.65441895]
[-50.61476135 -351.71765137]
[-54.29388046 -366.62939453]
[-50.00881958 -381.37841797]
[-38.91222763 -391.99734497]
[-23.98904228 -395.62969971]
[-9.25351906 -391.29843140]
[1.33055854 -380.16860962]
[4.91612625 -365.23410034]
[0.53868502 -350.51223755]
[-10.62425613 -339.96310425]
[-7.07677078 -325.38861084]
[-3.52928567 -310.81414795]
[0.01819918 -296.23965454]
[3.56568408 -281.66519165]
[7.11316919 -267.09069824]
[19.93116570 -259.59173584]
[23.73643875 -244.86167908]
[15.78391743 -231.46783447]
[19.33140182 -216.89335632]
[22.87888718 -202.31887817]
[39.06988144 -193.73780823]
[43.90489197 -175.73110962]
[33.85063934 -159.65095520]
[37.76326370 -145.17024231]
[41.67588425 -130.68951416]
[58.07741165 -122.51802826]
[63.36340332 -104.63851929]
[53.71642303 -88.31078339]
[57.99171066 -73.93296051]
[62.26700211 -59.55513000]
[74.33172607 -55.07269669]
[81.72880554 -44.30348206]
[81.57849121 -31.04495430]
[73.71188354 -20.13066101]
[77.80615997 -5.70024681]
[81.90044403 8.73016834]
[85.99472046 23.16058350]
[90.08899689 37.59099960]
[94.18328094 52.02141190]
[98.27755737 66.45182800]
[102.93041229 66.53569794]
[107.52703094 67.26178741]
[111.97919464 68.61615753]
[116.20146179 70.57281494]
[120.11281586 73.09421539]
[131.54945374 63.38837433]
[136.55964661 47.77331924]
[152.64283752 44.56967926]
[163.25399780 57.07308960]
[157.47729492 72.42110443]
[141.25529480 74.82501221]
[129.81864929 84.53085327]
[132.68867493 107.73932648]
[119.71704102 127.19715118]
[125.58764648 141.00062561]
[131.45825195 154.80410767]
[137.32885742 168.60758972]
[143.19946289 182.41105652]
[145.11822510 167.53428650]
[152.86311340 154.68840027]
[165.12374878 146.04682922]
[179.82572937 143.07165527]
[194.48159790 146.26626587]
[206.61169434 155.09013367]
[214.16369629 168.05035400]
[215.85986328 182.95414734]
[211.41322327 197.27990723]
[201.57611084 208.60382080]
[188.01289368 215.00999451]
[173.01834106 215.41452026]
[159.12944031 209.74897766]
[148.69525146 198.97062683]
[152.24273682 213.54510498]
[155.79022217 228.11956787]
[159.33770752 242.69404602]
[162.88519287 257.26852417]
[166.43267822 271.84301758]
[174.98661804 271.67587280]
[183.75253296 274.67123413]
[191.53881836 280.90582275]
[197.14419556 290.00677490]
[199.52546692 301.16006470]
[213.60647583 306.32971191]
[227.68748474 311.49935913]
[238.60763550 300.83572388]
[253.07586670 295.97433472]
[268.21948242 297.88043213]
[281.03173828 306.17553711]
[288.96875000 319.21264648]
[290.45458984 334.40328979]
[285.19427490 348.73129272]
[274.23220825 359.35183716]
[259.74496460 364.15621948]
[244.60894775 362.19052124]
[231.82945251 353.84500122]
[223.94386292 340.77673340]
[222.51785278 325.58038330]
[208.43684387 320.41073608]
[194.35583496 315.24108887]
[187.99824524 319.21990967]
[201.24742126 326.25265503]
[201.78155518 341.24316406]
[189.06652832 349.20104980]
[175.81723022 342.16854858]
[175.28308105 327.17758179]
[168.92549133 331.15643311]
[167.42005920 346.08068848]
[165.91464233 361.00494385]
[164.40921021 375.92922974]
[162.90379333 390.85348511]
[161.39836121 405.77774048]
[159.89294434 420.70202637]
[167.22903442 428.68923950]
[168.93728638 439.17678833]
[164.69367981 448.67874146]
[156.11285400 454.16964722]
[154.23284912 469.05139160]
[152.35285950 483.93310547]
[150.84742737 498.85736084]
[149.71752930 513.81475830]
[148.58763123 528.77215576]
[147.45771790 543.72949219]
[146.32781982 558.68688965]
[156.35279846 570.60906982]
[154.99385071 585.76184082]
[143.56611633 595.24566650]
[142.43621826 610.20306396]
[149.11201477 624.54687500]
[140.43798828 636.65515137]
[139.30809021 651.61248779]
[138.17819214 666.56988525]
[144.85398865 680.91369629]
[136.17996216 693.02197266]
[135.05004883 707.97937012]
[133.92015076 722.93676758]
[132.79025269 737.89410400]
[145.80201721 745.95343018]
[153.56800842 759.14239502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 247]
[10 246]
[11 245]
[12 244]
[14 242]
[15 241]
[16 240]
[18 238]
[19 237]
[22 234]
[23 233]
[24 232]
[25 231]
[26 230]
[31 229]
[32 228]
[33 227]
[35 223]
[36 222]
[37 221]
[38 220]
[39 219]
[40 218]
[41 217]
[43 188]
[44 187]
[45 186]
[46 185]
[47 184]
[48 183]
[49 169]
[50 168]
[51 167]
[52 166]
[53 165]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 146]
[83 145]
[86 141]
[87 140]
[88 139]
[93 136]
[94 135]
[95 134]
[100 131]
[101 130]
[102 129]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
[156 163]
[157 162]
[193 210]
[194 209]
[195 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
