%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUUCCGAUAUCAACUUCCUCAAACCUCUGAUGAGCUGCUGCUGCUCGACUCUGAGGUGCAUUCUUUUUUUGAUGAGAGGCAUCUCUAGGUACCAUCCCUGACCUGGUCCUCAUGCUGCCGAGGCUGUUGCUGUUGAUCUGUGCUCCACUCUGUGAACCUGCCGAGCUGUUUUUGAUAGCCAGCCCCUCCCAUCCCACAGAGGGGAGCCCAG\
) } def
/len { sequence length } bind def

/coor [
[328.53295898 241.32391357]
[319.83795166 241.30976868]
[311.57714844 238.46026611]
[304.65405273 233.05725098]
[299.83557129 225.66345215]
[297.66693115 217.06394958]
[298.41021729 208.18283081]
[285.56912231 200.43002319]
[272.72802734 192.67720032]
[259.88693237 184.92437744]
[247.04582214 177.17156982]
[232.15129089 177.21711731]
[224.33639526 163.46073914]
[211.49528503 155.70791626]
[198.65419006 147.95509338]
[185.81309509 140.20228577]
[171.45994568 144.01315308]
[158.32679749 136.33361816]
[154.42692566 121.25287628]
[141.58583069 113.50005341]
[128.74473572 105.74723816]
[115.90363312 97.99441528]
[121.54529572 113.88259125]
[110.43087006 133.65200806]
[82.65445709 141.34109497]
[68.50141144 146.31011963]
[54.34836578 151.27914429]
[40.19532013 156.24818420]
[26.04227257 161.21720886]
[15.58443069 173.08920288]
[1.01266015 170.00491333]
[-13.14038658 174.97395325]
[-27.21896553 180.15020752]
[-41.22003937 185.53257751]
[-55.22111511 190.91494751]
[-69.22219086 196.29731750]
[-83.22325897 201.67968750]
[-88.13568115 216.52563477]
[-101.46868896 224.69662476]
[-116.92684937 222.33454895]
[-127.21128082 210.55471802]
[-127.46600342 194.91920471]
[-117.57073975 182.81062317]
[-102.19772339 179.94627380]
[-88.60563660 187.67861938]
[-74.60456085 182.29624939]
[-60.60348511 176.91387939]
[-46.60240936 171.53150940]
[-32.60133743 166.14913940]
[-29.87755394 162.22863770]
[-24.66300774 159.97631836]
[-18.10941696 160.82090759]
[-3.95636940 155.85186768]
[5.48915100 144.33529663]
[21.07324219 147.06416321]
[35.22628784 142.09513855]
[49.37933731 137.12609863]
[63.53238297 132.15707397]
[77.68543243 127.18804169]
[78.40000916 119.72216034]
[63.46827316 118.29275513]
[64.89793396 103.36103821]
[79.82917023 104.79040527]
[80.54375458 97.32452393]
[67.59023285 89.76104736]
[54.63670349 82.19756317]
[41.68318176 74.63408661]
[27.53161812 80.99906158]
[12.34843636 77.79740906]
[1.97187746 66.26022339]
[0.39194104 50.82378769]
[8.21614456 37.42373276]
[22.43592262 31.21265221]
[37.58348083 34.57882690]
[47.83427048 46.22790146]
[49.24665833 61.68056488]
[62.20018387 69.24404144]
[75.15370941 76.80751801]
[88.10723114 84.37099457]
[100.34519196 75.69734192]
[97.49987793 60.96967697]
[94.65455627 46.24201202]
[91.80923462 31.51434326]
[77.11023712 27.55190277]
[65.63604736 17.64079857]
[59.62749100 3.78737354]
[60.22718811 -11.23931503]
[67.26267242 -24.46094131]
[79.29120636 -33.28022766]
[76.44588470 -48.00789642]
[73.60056305 -62.73556137]
[68.90113068 -70.56566620]
[70.82324219 -77.70021820]
[68.19442749 -92.46807098]
[65.56561279 -107.23591614]
[62.93679428 -122.00376129]
[48.65834045 -127.84579468]
[39.82370377 -140.49302673]
[39.25198364 -155.90980530]
[47.12561417 -169.17665100]
[60.93214798 -176.06019592]
[76.26596832 -174.36390686]
[88.23411560 -164.62907410]
[93.01759338 -149.96203613]
[89.09001160 -135.04301453]
[77.70464325 -124.63257599]
[80.33345795 -109.86473083]
[82.96227264 -95.09688568]
[85.59108734 -80.32903290]
[88.32823181 -65.58087921]
[91.17355347 -50.85321426]
[94.01886749 -36.12554932]
[108.46687317 -32.42141342]
[119.92096710 -22.77189255]
[126.07476807 -9.04994965]
[125.65884399 6.04465818]
[118.70214844 19.51652908]
[106.53689575 28.66902351]
[109.38221741 43.39669037]
[112.22753906 58.12435532]
[115.07286072 72.85202026]
[123.65645599 85.15332031]
[136.49755859 92.90613556]
[149.33865356 100.65895844]
[162.17974854 108.41177368]
[177.34141541 104.83944702]
[190.25367737 112.88483429]
[193.56591797 127.36118317]
[206.40701294 135.11399841]
[219.24810791 142.86682129]
[232.08920288 150.61962891]
[247.90222168 151.12861633]
[254.79864502 164.33045959]
[267.63973999 172.08328247]
[280.48083496 179.83610535]
[293.32192993 187.58891296]
[306.16302490 195.34173584]
[326.89132690 188.54418945]
[345.62213135 199.15969849]
[350.31433105 219.88021851]
[363.68942261 226.67045593]
[377.06448364 233.46067810]
[392.87225342 232.80863953]
[400.71826172 245.46917725]
[414.09335327 252.25939941]
[427.46844482 259.04962158]
[440.84350586 265.83987427]
[454.21859741 272.63009644]
[470.02636719 271.97805786]
[477.87237549 284.63858032]
[491.24746704 291.42883301]
[504.62252808 298.21905518]
[517.99761963 305.00927734]
[531.37268066 311.79949951]
[544.74780273 318.58975220]
[558.12286377 325.37997437]
[568.54248047 313.69842529]
[581.61785889 305.11282349]
[596.45739746 300.20178223]
[612.05090332 299.29345703]
[627.33843994 302.44390869]
[641.28240967 309.43338013]
[652.93786621 319.78179932]
[661.51660156 332.78167725]
[666.44061279 347.54647827]
[667.38067627 363.07113647]
[664.27862549 378.30038452]
[677.75195312 384.89352417]
[691.22528076 391.48669434]
[704.69860840 398.07983398]
[718.21997070 404.57391357]
[731.78863525 410.96856689]
[746.57507324 405.38861084]
[760.94171143 411.97460938]
[766.36505127 426.81924438]
[759.62750244 441.11544800]
[744.72637939 446.38153076]
[730.50219727 439.49322510]
[725.39398193 424.53723145]
[711.82531738 418.14257812]
[704.43634033 418.13455200]
[698.10546875 411.55316162]
[684.63214111 404.95999146]
[671.15881348 398.36685181]
[657.68548584 391.77368164]
[648.41467285 402.78936768]
[636.76586914 411.26696777]
[623.41564941 416.70849609]
[609.14093018 418.79238892]
[594.77343750 417.39263916]
[581.15148926 412.58639526]
[569.07104492 404.64959717]
[559.23895264 394.04135132]
[552.23205566 381.37719727]
[548.46289062 367.39346313]
[548.15557861 352.90447998]
[551.33264160 338.75506592]
[537.95751953 331.96481323]
[524.58245850 325.17459106]
[511.20739746 318.38436890]
[497.83230591 311.59414673]
[484.45721436 304.80389404]
[471.08215332 298.01367188]
[456.23104858 299.15139771]
[447.42837524 286.00518799]
[434.05328369 279.21493530]
[420.67819214 272.42471313]
[407.30313110 265.63449097]
[393.92803955 258.84426880]
[379.07696533 259.98199463]
[370.27426147 246.83575439]
[356.89916992 240.04553223]
[343.52410889 233.25529480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[13 131]
[14 130]
[15 129]
[16 128]
[19 125]
[20 124]
[21 123]
[22 122]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[31 53]
[32 52]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[64 79]
[65 78]
[66 77]
[67 76]
[80 121]
[81 120]
[82 119]
[83 118]
[89 112]
[90 111]
[91 110]
[93 109]
[94 108]
[95 107]
[96 106]
[140 213]
[141 212]
[142 211]
[144 209]
[145 208]
[146 207]
[147 206]
[148 205]
[150 203]
[151 202]
[152 201]
[153 200]
[154 199]
[155 198]
[156 197]
[167 185]
[168 184]
[169 183]
[170 182]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
