%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCCAUUUCACGAUUCCAUAGUUGUGAUUUUUCCUUGCCAUUUCUUUUGUCUUCCAGUCAAAGGUAUGCAGGCAGGAUGAGUGCAAACACCUCCAUGGUGACUGAGUUUCUUCUUCUCGGCUUCUCCCACCUGGCCGACCUCCAGGGCUUGCUCUUCUCUGUCUUUCUCACUAUCU\
) } def
/len { sequence length } bind def

/coor [
[3.84687972 350.73843384]
[-10.66055679 354.55081177]
[-25.66053772 354.52676392]
[-40.15566635 350.66784668]
[-53.18211365 343.23065186]
[-63.87371445 332.70974731]
[-71.51954651 319.80465698]
[-75.61145782 305.37182617]
[-73.32499695 290.54711914]
[-82.43890381 302.46081543]
[-91.55281067 314.37454224]
[-100.66671753 326.28826904]
[-109.78063202 338.20196533]
[-118.89453888 350.11569214]
[-128.00845337 362.02941895]
[-137.12236023 373.94311523]
[-138.70124817 390.26608276]
[-153.73686218 396.81301880]
[-166.76185608 386.84899902]
[-164.37721252 370.62414551]
[-149.03607178 364.82922363]
[-139.92216492 352.91549683]
[-130.80825806 341.00177002]
[-121.69434357 329.08807373]
[-112.58043671 317.17434692]
[-103.46652985 305.26062012]
[-94.35262299 293.34692383]
[-85.23870850 281.43319702]
[-87.39208221 274.24896240]
[-101.10202789 280.33480835]
[-110.67337036 291.88424683]
[-125.67158508 292.11569214]
[-135.59471130 280.86706543]
[-133.49443054 266.01483154]
[-120.84140015 257.95874023]
[-106.49593353 262.33932495]
[-91.69882965 259.88055420]
[-93.85220337 252.69631958]
[-108.01668549 247.75999451]
[-117.18109131 247.88822937]
[-122.38626862 242.60952759]
[-136.46142578 237.42398071]
[-148.49786377 242.11396790]
[-160.12619019 237.48269653]
[-165.29893494 226.52703857]
[-179.28038025 221.09388733]
[-193.26184082 215.66075134]
[-207.24328613 210.22760010]
[-221.22473145 204.79446411]
[-235.20619202 199.36131287]
[-250.87181091 201.57467651]
[-259.93234253 189.75282288]
[-273.91378784 184.31968689]
[-290.86743164 184.21836853]
[-295.46331787 167.89923096]
[-281.05419922 158.96537781]
[-268.48065186 170.33822632]
[-254.49919128 175.77137756]
[-239.83361816 173.16940308]
[-229.77304077 185.37986755]
[-215.79159546 190.81300354]
[-201.81015015 196.24615479]
[-187.82868958 201.67929077]
[-173.84724426 207.11244202]
[-159.86579895 212.54557800]
[-142.70648193 208.92974854]
[-131.27587891 223.34883118]
[-117.20072174 228.53436279]
[-103.08035278 233.59550476]
[-88.91587067 238.53184509]
[-73.99989319 236.94636536]
[-61.18958664 229.14277649]
[-48.37928009 221.33917236]
[-35.56897354 213.53558350]
[-22.75866890 205.73199463]
[-9.94836140 197.92840576]
[2.79258275 190.01206970]
[15.46317291 181.98361206]
[22.07273674 168.63583374]
[37.87106323 167.78530884]
[50.54165268 159.75685120]
[63.21224213 151.72839355]
[75.88283539 143.69993591]
[88.40975952 135.44911194]
[100.78912354 126.97848511]
[82.28133392 127.10192108]
[64.97359467 114.13236237]
[57.92566681 90.38048553]
[67.34375000 64.07410431]
[70.49694824 49.40927124]
[73.65013885 34.74443817]
[76.80333710 20.07960320]
[69.34012604 5.87819386]
[75.92166901 -8.75269222]
[91.49916840 -12.58949089]
[104.12290192 -2.68893743]
[104.10901642 13.35410976]
[91.46817017 23.23279762]
[88.31497955 37.89763260]
[85.16178131 52.56246567]
[82.00859070 67.22730255]
[95.08689880 74.57425690]
[108.16403961 81.92057037]
[119.04769135 71.59845734]
[129.93135071 61.27633667]
[140.81500244 50.95421982]
[151.69865417 40.63210297]
[148.71856689 25.49530602]
[154.41636658 11.15868950]
[166.97392273 2.19701624]
[182.38414001 1.46992373]
[195.72969055 9.20942402]
[202.75204468 22.94587135]
[201.21040344 38.29601669]
[191.59671021 50.36167908]
[176.97863770 55.29275513]
[162.02076721 51.51575470]
[151.13711548 61.83787155]
[140.25346375 72.15998840]
[129.36981201 82.48210907]
[118.48616028 92.80422211]
[120.57604980 100.00716400]
[134.98193359 95.82738495]
[149.38781738 91.64760590]
[161.79701233 83.22074890]
[173.64605713 92.41857910]
[168.55993652 106.52997589]
[153.56759644 106.05348206]
[139.16171265 110.23326874]
[124.75582886 114.41304779]
[126.84572601 121.61598969]
[141.56391907 124.50988007]
[156.28211975 127.40377045]
[171.00032043 130.29766846]
[185.71852112 133.19155884]
[197.77803040 123.23654175]
[213.41461182 123.41395569]
[225.24513245 133.64002991]
[227.68360901 149.08631897]
[219.57864380 162.45956421]
[204.75717163 167.44532776]
[190.21742249 161.68946838]
[182.82463074 147.90975952]
[168.10643005 145.01585388]
[153.38822937 142.12196350]
[138.67002869 139.22807312]
[123.95182800 136.33418274]
[109.25974274 139.35784912]
[96.88037872 147.82847595]
[93.65882874 153.65773010]
[88.71191406 156.53144836]
[83.91129303 156.37052917]
[71.24069977 164.39898682]
[58.57011414 172.42744446]
[45.89952087 180.45590210]
[38.38367462 194.37791443]
[23.49163246 194.65420532]
[10.82104111 202.68266296]
[5.22567081 209.94177246]
[-2.14476991 210.73870850]
[-14.95507622 218.54229736]
[-27.76538277 226.34588623]
[-40.57569122 234.14949036]
[-53.38599777 241.95307922]
[-66.19630432 249.75666809]
[-51.21295929 249.04995728]
[-37.88703537 242.16375732]
[-23.24327660 238.91409302]
[-8.25539970 239.51701355]
[6.08000708 243.93246460]
[18.80973434 251.86682129]
[29.08734512 262.79251099]
[36.22944260 275.98306274]
[39.76113129 290.56137085]
[39.44757843 305.55807495]
[35.30962753 319.97604370]
[27.62242699 332.85653687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[38 70]
[39 69]
[41 68]
[42 67]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[52 58]
[53 57]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 158]
[78 157]
[80 155]
[81 154]
[82 153]
[83 152]
[84 149]
[85 148]
[89 101]
[90 100]
[91 99]
[92 98]
[103 121]
[104 120]
[105 119]
[106 118]
[107 117]
[131 147]
[132 146]
[133 145]
[134 144]
[135 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
