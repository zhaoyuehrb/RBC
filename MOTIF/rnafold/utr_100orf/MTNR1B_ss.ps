%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGAGCUGGGCAGGGAAGAGAGCGCCCGGCUCAGUACUGCGCGCGCCCUGCGGCUGUCCGGGGCCGCGCGGUGGCCAAAGCACAGCGCGGGAGAGUCUGCGAUGUCAGAGAACGGCUCCUUCGCCAACUGCUGCGAGGCGGGCGGGUGGGCAGUGCGCCCGGGCUGGUCGGGGGCUGGCAGCGCGCGGCCCUCCAGGACCC\
) } def
/len { sequence length } bind def

/coor [
[119.62184143 151.39372253]
[134.61218262 151.91690063]
[123.22111511 142.15762329]
[111.83003998 132.39834595]
[96.95836639 134.35624695]
[88.48132324 146.73120117]
[80.00427246 159.10617065]
[71.52722931 171.48112488]
[63.05018234 183.85609436]
[54.57313538 196.23104858]
[46.09609222 208.60601807]
[37.61904526 220.98098755]
[29.14199829 233.35594177]
[36.78908920 246.56521606]
[37.93902969 261.78494263]
[32.36350250 275.99325562]
[21.16952896 286.36907959]
[6.57968092 290.85229492]
[-8.50921440 288.55273438]
[-21.10124779 279.92697144]
[-28.69626236 266.68771362]
[-29.78626060 251.46356201]
[-24.15482330 237.27731323]
[-12.92007542 226.94564819]
[1.68731308 222.51992798]
[16.76703644 224.87889099]
[25.24408340 212.50393677]
[33.72113037 200.12896729]
[42.19817352 187.75401306]
[50.67522049 175.37904358]
[59.15226746 163.00408936]
[67.62931061 150.62911987]
[76.10636139 138.25416565]
[84.58340454 125.87919617]
[75.00286865 116.51387787]
[70.47183990 103.98334503]
[71.83193970 90.80176544]
[57.00945663 88.50089264]
[42.18697739 86.20001221]
[27.36449432 83.89913940]
[12.54201126 81.59826660]
[-2.28047061 79.29739380]
[-17.10295296 76.99651337]
[-31.92543411 74.69564056]
[-46.74791718 72.39476776]
[-55.71374512 74.17131805]
[-61.78022766 69.94263458]
[-76.56552124 67.41378021]
[-91.35081482 64.88491821]
[-106.13610077 62.35606384]
[-120.92139435 59.82720184]
[-135.70669556 57.29834366]
[-146.71879578 68.23054504]
[-162.05868530 70.56885529]
[-175.82783508 63.41413498]
[-182.73175049 49.51752853]
[-180.11570740 34.22256088]
[-168.98565674 23.41046143]
[-153.62130737 21.23870277]
[-139.93058777 28.54236984]
[-133.17782593 42.51305389]
[-118.39253998 45.04191208]
[-103.60724640 47.57077026]
[-88.82195282 50.09962845]
[-74.03665924 52.62848663]
[-59.25136948 55.15734482]
[-44.44704056 57.57228470]
[-29.62455940 59.87315750]
[-14.80207825 62.17403412]
[0.02040413 64.47490692]
[14.84288597 66.77577972]
[29.66536903 69.07666016]
[44.48785019 71.37753296]
[59.31033325 73.67840576]
[74.13281250 75.97928619]
[86.44213867 67.40720367]
[89.42510986 52.70679855]
[92.40808105 38.00639343]
[83.72358704 27.70667839]
[82.57534790 14.47868347]
[89.15944672 3.17304444]
[100.87740326 -2.19375205]
[104.08639526 -16.84647751]
[107.29539490 -31.49920082]
[110.39147186 -46.17620087]
[113.37444305 -60.87660599]
[116.35741425 -75.57701111]
[109.09117889 -94.37641144]
[122.50114441 -108.30247498]
[125.03000641 -123.08776855]
[127.55886078 -137.87306213]
[130.08772278 -152.65835571]
[132.61657715 -167.44364929]
[127.31661224 -182.35072327]
[137.08885193 -193.59138489]
[139.61772156 -208.37667847]
[142.14657593 -223.16197205]
[144.67543030 -237.94726562]
[147.20428467 -252.73255920]
[134.02574158 -260.22265625]
[124.20610046 -271.77041626]
[118.93112183 -285.98132324]
[118.83779144 -301.13940430]
[123.93737793 -315.41421509]
[133.61407471 -327.08200073]
[146.69938660 -334.73382568]
[161.61318970 -337.44567871]
[176.55458069 -334.89013672]
[189.71929932 -327.37573242]
[199.51763916 -315.80993652]
[204.76643372 -301.58929443]
[204.83181763 -286.43109131]
[199.70593262 -272.16571045]
[190.00775146 -260.51577759]
[176.90835571 -252.88807678]
[161.98957825 -250.20368958]
[159.46072388 -235.41839600]
[156.93186951 -220.63310242]
[154.40301514 -205.84780884]
[151.87414551 -191.06253052]
[157.35499573 -177.21299744]
[147.40187073 -164.91479492]
[144.87301636 -150.12950134]
[142.34416199 -135.34420776]
[139.81529236 -120.55891418]
[137.28643799 -105.77362061]
[143.92024231 -97.99254608]
[145.19993591 -87.62651825]
[140.46276855 -78.07204437]
[131.05781555 -72.59403229]
[128.07484436 -57.89363098]
[125.09187317 -43.19322968]
[126.84353638 -36.00882339]
[121.94812012 -28.29020500]
[118.73912048 -13.63748074]
[115.53012085 1.01524413]
[125.19940948 14.77239704]
[121.86412811 31.59803009]
[107.10848999 40.98936844]
[104.12551117 55.68976974]
[101.14253998 70.39017487]
[121.50969696 79.38175201]
[129.95918274 100.11225891]
[121.58931732 121.00727844]
[132.98039246 130.76655579]
[144.37145996 140.52583313]
[156.41096497 149.47291565]
[169.04110718 157.56484985]
[184.83497620 158.49464417]
[191.37747192 171.87541199]
[204.00761414 179.96734619]
[216.63777161 188.05928040]
[229.26791382 196.15122986]
[245.06176758 197.08102417]
[251.60427856 210.46179199]
[264.23440552 218.55372620]
[276.86456299 226.64566040]
[289.49468994 234.73759460]
[302.12484741 242.82954407]
[314.75500488 250.92147827]
[327.50823975 258.81796265]
[340.38159180 266.51712036]
[353.25494385 274.21627808]
[366.12829590 281.91543579]
[381.94329834 282.35839844]
[388.89474487 295.53134155]
[401.76809692 303.23049927]
[417.03198242 299.13302612]
[430.68060303 307.10116577]
[434.61645508 322.40753174]
[426.50448608 335.97113037]
[411.15734863 339.74493408]
[397.68026733 331.48999023]
[394.06893921 316.10385132]
[381.19558716 308.40469360]
[366.30139160 308.51242065]
[358.42913818 294.78875732]
[345.55578613 287.08959961]
[332.68243408 279.39047241]
[319.80908203 271.69131470]
[315.03619385 271.96847534]
[310.03945923 269.24642944]
[306.66305542 263.55160522]
[294.03289795 255.45968628]
[281.40277100 247.36773682]
[268.77261353 239.27580261]
[256.14248657 231.18386841]
[243.51232910 223.09193420]
[228.62187195 222.74092102]
[221.17596436 208.78137207]
[208.54582214 200.68942261]
[195.91567993 192.59748840]
[183.28553772 184.50555420]
[168.39506531 184.15454102]
[160.94917297 170.19499207]
[148.31903076 162.10305786]
[153.14384460 176.30590820]
[149.63098145 190.88876343]
[138.86802673 201.33668518]
[124.18727875 204.41493225]
[110.13397217 199.17047119]
[101.05908203 187.22700500]
[99.77225494 172.28230286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[4 144]
[5 34]
[6 33]
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[76 141]
[77 140]
[78 139]
[82 136]
[83 135]
[84 134]
[85 132]
[86 131]
[87 130]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[147 196]
[148 195]
[150 193]
[151 192]
[152 191]
[153 190]
[155 188]
[156 187]
[157 186]
[158 185]
[159 184]
[160 183]
[161 180]
[162 179]
[163 178]
[164 177]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
