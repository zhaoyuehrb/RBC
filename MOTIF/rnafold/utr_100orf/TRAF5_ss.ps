%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCGCCGCCGCCGCCGGCCGCAGCCAGGAGCAGCAGCCGCGCCUGCAGACCGGCCUCGCGGAGCCCGCGCGCCGAGCCCCACAAUGGCUUAUUCAGAAGAGCAUAAAGGUAUGCCCUGUGGUUUCAUCCGCCAGAAUUCCGGCAACUCCAUUUCCUUGGACUUUGAGCCCAGUAUAGAGUACC\
) } def
/len { sequence length } bind def

/coor [
[138.73844910 239.83615112]
[134.57702637 228.47305298]
[133.56024170 216.53755188]
[135.69561768 204.87509155]
[140.76963806 194.29492188]
[148.36720276 185.51397705]
[140.00732422 173.05955505]
[131.64746094 160.60513306]
[123.28759766 148.15071106]
[100.50306702 153.48411560]
[77.62224579 148.58023071]
[59.02470016 134.37773132]
[46.29503632 142.31217957]
[38.02413940 158.75303650]
[20.48458290 158.68589783]
[7.89074278 166.83422852]
[-4.63383436 175.08860779]
[-17.08825684 183.44848633]
[-29.54267883 191.80834961]
[-41.99710083 200.16821289]
[-49.14312363 214.28363037]
[-64.02269745 214.95260620]
[-76.47711945 223.31246948]
[-83.62314606 237.42788696]
[-98.50271606 238.09686279]
[-110.95713806 246.45674133]
[-115.45212555 261.85720825]
[-130.34936523 267.81137085]
[-144.22096252 259.75170898]
[-146.42581177 243.86087036]
[-135.27255249 232.32899475]
[-119.31700897 234.00231934]
[-106.86258698 225.64244080]
[-100.60738373 212.12498474]
[-84.83699036 210.85804749]
[-72.38256836 202.49818420]
[-66.12736511 188.98072815]
[-50.35696793 187.71379089]
[-37.90254593 179.35392761]
[-25.44812393 170.99406433]
[-12.99370098 162.63418579]
[-9.18390846 156.28193665]
[-0.25758299 154.24038696]
[12.33625603 146.09205627]
[15.18395329 134.32138062]
[25.62828255 127.43300629]
[38.36057663 129.58251953]
[51.09024048 121.64806366]
[43.50716400 108.00868225]
[39.92308044 91.83747864]
[41.14400864 74.35578156]
[47.59280014 57.02981186]
[59.23820877 41.44888687]
[46.92675781 32.87986374]
[34.61530685 24.31084061]
[22.30385399 15.74181843]
[9.47903156 17.24369431]
[-0.60300225 9.83516216]
[-2.85086966 -2.06463814]
[-15.01583862 -10.84037304]
[-27.18080711 -19.61610794]
[-39.34577560 -28.39184380]
[-51.51074600 -37.16757965]
[-67.89365387 -41.53067780]
[-68.23630524 -58.48116302]
[-52.04310989 -63.50278473]
[-42.73501205 -49.33254623]
[-30.57004166 -40.55681229]
[-18.40507317 -31.78107643]
[-6.24010372 -23.00534248]
[5.92486525 -14.22960758]
[23.44531059 -13.40830421]
[30.87287712 3.43036652]
[43.18432999 11.99938965]
[55.49578094 20.56841278]
[67.80723572 29.13743591]
[79.89765930 20.25928116]
[75.40721130 5.94719172]
[70.91676331 -8.36489677]
[66.42631531 -22.67698669]
[51.91900253 -28.51409531]
[44.60342789 -42.33496475]
[47.93378067 -57.61379623]
[60.33757401 -67.13639832]
[75.95811462 -66.40648651]
[87.41985321 -55.76870346]
[89.31092072 -40.24588776]
[80.73840332 -27.16743279]
[85.22885132 -12.85534382]
[89.71929932 1.45674491]
[94.20974731 15.76883411]
[101.64965057 16.71637344]
[103.54473114 1.83656561]
[105.43980408 -13.04324245]
[107.33511353 -27.92302132]
[122.21486664 -26.02748108]
[120.31961060 -11.14816284]
[118.42453766 3.73164439]
[116.52945709 18.61145210]
[123.96936035 19.55899239]
[131.90382385 6.82932758]
[132.63740540 -8.97486305]
[145.93588257 -15.68303585]
[153.87034607 -28.41269875]
[161.80480957 -41.14236450]
[169.73925781 -53.87202835]
[177.67372131 -66.60169220]
[177.68650818 -83.00083160]
[192.02815247 -90.95378113]
[205.94519043 -82.27922058]
[205.12098694 -65.90080261]
[190.40338135 -58.66723251]
[182.46893311 -45.93756866]
[174.53446960 -33.20790482]
[166.60000610 -20.47823906]
[158.66554260 -7.74857521]
[158.49949646 7.14510441]
[144.63348389 14.76378822]
[136.69902039 27.49345207]
[146.66044617 38.70817947]
[160.23716736 32.33066177]
[173.81387329 25.95314407]
[187.39059448 19.57562447]
[192.51771545 4.62610531]
[206.75056458 -2.24423289]
[221.64505005 3.04066014]
[228.36451721 17.34535217]
[222.92245483 32.18312073]
[208.54751587 38.75098419]
[193.76811218 33.15234375]
[180.19139099 39.52986145]
[166.61468506 45.90737915]
[153.03796387 52.28489685]
[158.83801270 63.27543259]
[162.48352051 74.79811096]
[163.97077942 86.44795990]
[163.36955261 97.83557892]
[160.81745911 108.60005188]
[156.51216125 118.42037964]
[150.70173645 127.02503967]
[143.67350769 134.19940186]
[135.74201965 139.79084778]
[144.10188293 152.24526978]
[152.46174622 164.69969177]
[160.82162476 177.15411377]
[180.69398499 172.52894592]
[200.93104553 177.46873474]
[217.08811951 191.28511047]
[225.43966675 211.29920959]
[223.83410645 233.35530090]
[236.69595337 241.07363892]
[249.55781555 248.79196167]
[264.82778931 244.71725464]
[278.46450806 252.70571899]
[282.37756348 268.01791382]
[274.24536133 281.56942749]
[258.89263916 285.32034302]
[245.42788696 277.04534912]
[241.83949280 261.65383911]
[228.97763062 253.93548584]
[216.11576843 246.21716309]
[205.15699768 256.45947266]
[211.98941040 269.81304932]
[218.82183838 283.16662598]
[225.65425110 296.52020264]
[232.48667908 309.87377930]
[239.31910706 323.22735596]
[252.49305725 331.98852539]
[251.40222168 346.84310913]
[258.23464966 360.19668579]
[270.83197021 371.54321289]
[263.41613770 386.78927612]
[246.71301270 383.88378906]
[244.88105774 367.02911377]
[238.04862976 353.67553711]
[225.36338806 345.86953735]
[225.96553040 330.05978394]
[219.13310242 316.70620728]
[212.30067444 303.35263062]
[205.46826172 289.99905396]
[198.63583374 276.64547729]
[191.80342102 263.29190063]
[179.16778564 264.69372559]
[166.72903442 262.74322510]
[155.35238647 257.64111328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 145]
[7 144]
[8 143]
[9 142]
[12 48]
[13 47]
[15 44]
[16 43]
[17 41]
[18 40]
[19 39]
[20 38]
[22 36]
[23 35]
[25 33]
[26 32]
[53 76]
[54 75]
[55 74]
[56 73]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[77 91]
[78 90]
[79 89]
[80 88]
[100 119]
[101 118]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
[120 133]
[121 132]
[122 131]
[123 130]
[150 161]
[151 160]
[152 159]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
[169 175]
[170 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
