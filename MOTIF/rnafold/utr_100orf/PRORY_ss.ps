%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGGAGGACAAGGACUCAGGGGUCUGCUGGUCCAUCUCUGCACCUUGAAACAGCAGCUGGGGCACCAGAAGUAACCCUUACAGCCAACACCAUGUGAUGAUGAGGAGGAGUCCAUCUGGGUUAAAGAGCCCACGUGUGAGCCAAGGCAGGAAACCCCGGGAUCCAGAAAGCCUUCUGUUUUUGCGAUGCUGCCUGG\
) } def
/len { sequence length } bind def

/coor [
[278.10296631 576.39257812]
[273.87698364 562.00018311]
[269.65097046 547.60778809]
[265.42498779 533.21539307]
[261.19900513 518.82299805]
[256.97302246 504.43063354]
[252.74702454 490.03823853]
[248.52104187 475.64584351]
[231.66043091 472.20251465]
[218.79574585 460.63934326]
[213.52641296 444.07043457]
[217.38790894 427.02682495]
[229.40576172 414.21722412]
[224.72526550 399.96618652]
[220.04475403 385.71511841]
[215.25134277 371.50161743]
[210.34533691 357.32659912]
[205.43931580 343.15158081]
[200.27520752 337.85321045]
[200.56983948 328.71258545]
[195.88934326 314.46151733]
[191.20884705 300.21044922]
[186.52833557 285.95938110]
[181.84783936 271.70831299]
[176.82951355 257.57266235]
[171.47622681 243.56045532]
[166.12294006 229.54823303]
[160.76963806 215.53602600]
[155.41635132 201.52380371]
[149.84141541 187.59828186]
[144.04623413 173.76296997]
[138.25105286 159.92765808]
[126.19740295 151.17787170]
[128.00230408 135.45996094]
[122.20713043 121.62464142]
[110.17442322 133.68867493]
[91.70932007 138.50418091]
[71.34603882 132.83772278]
[55.08625793 116.29040527]
[40.10324860 117.00413513]
[25.12023926 117.71786499]
[10.13722897 118.43159485]
[3.73518562 132.33383179]
[-8.40130615 141.65930176]
[-23.48337173 144.26504517]
[-38.04526138 139.55229187]
[-48.74075699 128.60400391]
[-53.11211777 113.93602753]
[-50.15483093 98.91893005]
[-40.54846573 87.00355530]
[-26.50048828 80.92794800]
[-11.23902512 82.08825684]
[1.72895348 90.21784210]
[9.42350006 103.44858551]
[24.40650940 102.73485565]
[39.38951874 102.02112579]
[54.37253189 101.30739594]
[57.32805634 86.60144806]
[43.78416061 80.15452576]
[30.24026108 73.70760345]
[16.69636345 67.26068115]
[0.40057653 69.09898376]
[-9.12032604 55.74666595]
[-2.07205558 40.93944168]
[14.29473114 39.90971375]
[23.14328766 53.71678162]
[36.68718338 60.16370392]
[50.23108292 66.61062622]
[63.77498245 73.05754852]
[69.74319458 68.51548004]
[57.41520691 59.97026443]
[61.73281097 45.60508728]
[76.72912598 45.27247620]
[81.67961884 59.43133163]
[87.64783478 54.88925934]
[85.04311371 40.11714554]
[82.32128143 25.36615753]
[79.48251343 10.63722610]
[76.64374542 -4.09170389]
[73.80497742 -18.82063484]
[61.42647934 -32.44681168]
[67.79586029 -48.79424286]
[64.72376251 -63.47628021]
[54.37095642 -71.18097687]
[52.11896515 -83.48070526]
[58.63924408 -93.67749023]
[55.80047226 -108.40642548]
[45.59129715 -120.49291229]
[50.78012085 -134.45448303]
[47.94135284 -149.18341064]
[45.10258484 -163.91233826]
[36.16793442 -178.32096863]
[47.54010391 -190.89514160]
[62.77101517 -183.44828796]
[59.83151627 -166.75111389]
[62.67028427 -152.02218628]
[65.50905609 -137.29324341]
[75.51518250 -126.26026917]
[70.52940369 -111.24519348]
[73.36817169 -96.51625824]
[85.55875397 -83.89891815]
[79.40579987 -66.54837799]
[82.47789764 -51.86634445]
[92.43138885 -44.98036957]
[95.10619354 -32.76562119]
[88.53390503 -21.65940285]
[91.37267303 -6.93047285]
[94.21144104 7.79845762]
[97.05020905 22.52738762]
[101.40770721 28.50677681]
[99.81523132 37.51242065]
[102.41995239 52.28453827]
[123.73619080 68.56912231]
[129.34556580 90.01905060]
[140.52453613 80.01751709]
[151.70350647 70.01598358]
[156.82928467 55.04811859]
[171.47346497 52.32830429]
[182.65243530 42.32676697]
[193.83139038 32.32523346]
[205.01036072 22.32369804]
[216.18933105 12.32216263]
[227.36830139 2.32062745]
[231.96852112 -13.42008209]
[247.96244812 -17.04312325]
[258.89688110 -4.82142210]
[253.52343750 10.67238331]
[237.36982727 13.49959373]
[226.19085693 23.50112915]
[215.01190186 33.50266266]
[203.83293152 43.50419998]
[192.65396118 53.50573349]
[181.47499084 63.50727081]
[177.14880371 77.75975800]
[161.70503235 81.19494629]
[150.52606201 91.19647980]
[139.34710693 101.19801331]
[136.04244995 115.82946014]
[141.83761597 129.66477966]
[154.30578613 139.40415955]
[152.08636475 154.13247681]
[157.88154602 167.96778870]
[163.67672729 181.80311584]
[168.71099854 186.11540222]
[170.53045654 191.51350403]
[169.42855835 196.17051697]
[174.78186035 210.18272400]
[180.13514709 224.19494629]
[185.48844910 238.20716858]
[190.84173584 252.21937561]
[194.91146851 255.52198792]
[197.08312988 259.64505005]
[197.36267090 263.72534180]
[196.09890747 267.02783203]
[200.77940369 281.27890015]
[205.45991516 295.52996826]
[210.14041138 309.78100586]
[214.82090759 324.03207397]
[219.61431885 338.24557495]
[224.52033997 352.42059326]
[229.42636108 366.59561157]
[235.19645691 373.69091797]
[234.29582214 381.03460693]
[238.97633362 395.28567505]
[243.65682983 409.53674316]
[256.50308228 410.97134399]
[267.80972290 417.13882446]
[275.91152954 427.09054565]
[279.63058472 439.32360840]
[278.44738770 452.00765991]
[272.57324219 463.25894165]
[262.91342163 471.41983032]
[267.13943481 485.81222534]
[271.36541748 500.20462036]
[275.59140015 514.59704590]
[279.81738281 528.98944092]
[284.04336548 543.38183594]
[288.26937866 557.77423096]
[292.49536133 572.16662598]
[308.59863281 575.89611816]
[320.55740356 587.17083740]
[325.17489624 602.84667969]
[321.28253174 618.62145996]
[310.03375244 630.21539307]
[314.48754883 644.53894043]
[318.94134521 658.86248779]
[331.34860229 669.58587646]
[328.00012207 685.63952637]
[312.34054565 690.50878906]
[300.47909546 679.18457031]
[304.61782837 663.31628418]
[300.16403198 648.99273682]
[295.71020508 634.66918945]
[282.21380615 632.54315186]
[270.89706421 624.77032471]
[264.00241089 612.82165527]
[262.92578125 599.00213623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[13 165]
[14 164]
[15 163]
[16 161]
[17 160]
[18 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 150]
[26 149]
[27 148]
[28 147]
[29 146]
[30 143]
[31 142]
[32 141]
[34 139]
[35 138]
[39 57]
[40 56]
[41 55]
[42 54]
[58 69]
[59 68]
[60 67]
[61 66]
[75 112]
[76 111]
[77 109]
[78 108]
[79 107]
[80 106]
[82 103]
[83 102]
[86 100]
[87 99]
[89 97]
[90 96]
[91 95]
[114 137]
[115 136]
[116 135]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
