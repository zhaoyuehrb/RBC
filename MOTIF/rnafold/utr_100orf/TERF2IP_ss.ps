%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUCGAUGCGCCGCGGCUGCUGCUGCGCAGGCCCAGUGCUGCGCUUCGCGGCAGAGGCGUCUGCGGUGACAGCUCAGUCAGUUGAGCUCUGUGUGCCAGGCGCUCGCGAGGGGGUAGCUCUUCUAGUAGUGCUCGGCGUCAGACAUGGCGGAGGCGAUGGAUUUGGGCAAAGACCCCAACGGGCCCACCCAUUCCUCGACUCUGUUCGUGAGGGACGACGGCAGCUCCAUGUCCUUCUACGUGC\
) } def
/len { sequence length } bind def

/coor [
[271.60675049 95.92718506]
[271.06369019 91.40912628]
[256.17303467 93.21717834]
[241.28240967 95.02523041]
[229.58056641 104.24021912]
[214.94837952 98.22275543]
[200.05775452 100.03080750]
[185.16711426 101.83885956]
[178.92082214 105.75575256]
[170.07574463 103.57396698]
[155.16333008 105.19248199]
[140.25090027 106.81099701]
[125.33847809 108.42951202]
[110.42604828 110.04802704]
[97.76522064 118.09187317]
[89.96437836 130.90385437]
[82.16353607 143.71583557]
[74.36268616 156.52781677]
[66.56184387 169.33978271]
[66.72062683 185.73817444]
[52.46297455 193.84072876]
[38.45593643 185.31224060]
[39.10875320 168.92610168]
[53.74986267 161.53894043]
[61.55070877 148.72695923]
[69.35155487 135.91499329]
[77.15239716 123.10300446]
[84.95324707 110.29103088]
[75.36838531 98.75280762]
[61.34313965 104.07188416]
[47.31789780 109.39096069]
[33.29265213 114.71002960]
[19.26741028 120.02910614]
[5.24216604 125.34817505]
[-8.74896812 130.75633240]
[-22.70542526 136.25335693]
[-29.07151604 150.46992493]
[-43.30365372 155.84587097]
[-56.81774139 149.68916321]
[-70.77420044 155.18618774]
[-84.73065948 160.68321228]
[-98.68711853 166.18023682]
[-112.64357758 171.67727661]
[-126.60002899 177.17430115]
[-140.55648804 182.67132568]
[-153.07791138 194.10156250]
[-167.52772522 185.23368835]
[-163.00651550 168.89370728]
[-146.05351257 168.71485901]
[-132.09706116 163.21783447]
[-118.14060211 157.72080994]
[-104.18414307 152.22378540]
[-90.22768402 146.72676086]
[-76.27122498 141.22973633]
[-62.31476974 135.73271179]
[-56.62908554 122.01379395]
[-42.55355835 116.24021912]
[-28.20244980 122.29690552]
[-14.24599266 116.79988098]
[-9.18636990 111.43717957]
[-0.07690734 111.32293701]
[13.94833660 106.00386047]
[27.97357941 100.68478394]
[41.99882507 95.36571503]
[56.02406693 90.04663849]
[70.04930878 84.72756958]
[71.38304138 69.78697968]
[58.52171326 62.06776810]
[45.66038513 54.34855652]
[27.23558998 54.45354843]
[19.34470177 38.76744080]
[6.38623524 31.21243477]
[-6.57223129 23.65742683]
[-19.62574005 16.26784515]
[-32.77217865 9.04488468]
[-45.91861725 1.82192314]
[-59.06505203 -5.40103817]
[-72.21149445 -12.62399960]
[-85.35793304 -19.84696007]
[-101.73299408 -18.95857811]
[-110.46202087 -32.84152603]
[-102.56532288 -47.21421814]
[-86.16635895 -47.29125977]
[-78.13497162 -32.99339676]
[-64.98853302 -25.77043724]
[-51.84209442 -18.54747581]
[-38.69565582 -11.32451439]
[-25.54921722 -4.10155392]
[-12.40277863 3.12140751]
[-7.66896915 2.67954516]
[-2.60388756 5.19044352]
[0.98277587 10.69896030]
[13.94124317 18.25396729]
[26.89970970 25.80897522]
[38.65776825 23.03134537]
[49.50931931 29.19967651]
[53.37959290 41.48722839]
[66.24092102 49.20643997]
[79.10224915 56.92565155]
[108.76111603 72.38778687]
[108.80753326 95.13560486]
[123.71996307 93.51708984]
[138.63238525 91.89857483]
[153.54481506 90.28005981]
[168.45722961 88.66154480]
[183.35906982 86.94822693]
[198.24969482 85.14017487]
[213.14033508 83.33212280]
[225.90725708 73.98781586]
[239.47436523 80.13459778]
[254.36499023 78.32654572]
[269.25561523 76.51849365]
[283.10467529 70.75621796]
[294.88296509 61.46793747]
[306.66122437 52.17965317]
[318.43951416 42.89137268]
[330.21777344 33.60309219]
[337.27294922 20.36585045]
[338.41656494 5.40950727]
[339.56015015 -9.54683495]
[332.89749146 -23.89673424]
[341.58261108 -35.99707031]
[342.72619629 -50.95341492]
[332.24649048 -62.78350830]
[333.28472900 -78.55365753]
[345.22497559 -88.90770721]
[360.98324585 -87.70278931]
[371.21047974 -75.65376282]
[369.83905029 -59.90908813]
[357.68255615 -49.80981445]
[356.53894043 -34.85347366]
[363.28341675 -21.57335091]
[354.51651001 -8.40323639]
[353.37289429 6.55310631]
[352.22930908 21.50944901]
[359.35333252 23.85427666]
[370.53869629 13.85990238]
[373.60137939 28.54393196]
[380.72540283 30.88875961]
[388.68856812 18.17703247]
[396.65173340 5.46530628]
[404.61489868 -7.24642038]
[412.57806396 -19.95814705]
[412.62786865 -36.35721970]
[426.98742676 -44.27778244]
[440.88485718 -35.57183838]
[440.02368164 -19.19532013]
[425.28979492 -11.99498177]
[417.32662964 0.71674514]
[409.36346436 13.42847157]
[401.40029907 26.14019775]
[393.43713379 38.85192490]
[402.19207764 51.03187943]
[416.77871704 47.53483582]
[431.36538696 44.03779221]
[445.95205688 40.54075241]
[453.54605103 35.50820160]
[460.74645996 37.09324646]
[475.37643433 33.78200912]
[490.00637817 30.47077179]
[504.63635254 27.15953445]
[519.26629639 23.84829712]
[524.51202393 14.35396481]
[533.91680908 9.40409565]
[544.27630615 10.41321754]
[552.20745850 16.80999947]
[566.91693115 13.87195110]
[581.62634277 10.93390179]
[596.33581543 7.99585295]
[611.04528809 5.05780411]
[600.11151123 -5.21119595]
[601.19287109 -20.17216682]
[613.48974609 -28.76207733]
[627.90911865 -24.62903786]
[633.78839111 -10.82926178]
[626.78143311 2.43190098]
[641.64788818 0.43460813]
[652.48437500 -11.39541435]
[668.47943115 -10.15527630]
[677.36297607 3.20369601]
[672.32031250 18.43364143]
[657.21978760 23.85144806]
[643.64514160 15.30104065]
[628.77874756 17.29833412]
[613.98333740 19.76725197]
[599.27386475 22.70530128]
[584.56439209 25.64335060]
[569.85498047 28.58139992]
[555.14550781 31.51944733]
[541.56274414 45.30064011]
[522.57751465 38.47825623]
[507.94757080 41.78949356]
[493.31762695 45.10073090]
[478.68765259 48.41196823]
[464.05770874 51.72320557]
[449.44909668 55.12741470]
[434.86242676 58.62445450]
[420.27575684 62.12149811]
[405.68911743 65.61853790]
[359.25567627 70.92427826]
[339.50607300 45.38136673]
[327.72778320 54.66965103]
[315.94952393 63.95793152]
[304.17123413 73.24621582]
[292.39294434 82.53449249]
[289.64224243 97.28012085]
[297.27947998 110.19028473]
[310.96517944 118.12832642]
[310.78598022 133.02185059]
[318.42321777 145.93200684]
[326.06048584 158.84216309]
[333.77969360 171.70349121]
[341.58053589 184.51547241]
[349.38140869 197.32745361]
[357.18225098 210.13943481]
[364.98309326 222.95141602]
[372.78393555 235.76339722]
[380.58477783 248.57537842]
[388.38562012 261.38735962]
[400.69754028 265.17941284]
[406.93475342 275.99151611]
[404.23196411 287.76699829]
[411.86923218 300.67715454]
[426.98880005 306.04162598]
[432.08520508 321.25366211]
[423.24887085 334.64392090]
[407.25830078 335.94052124]
[396.38009644 324.14883423]
[398.95907593 308.31442261]
[391.32180786 295.40426636]
[375.58581543 287.61328125]
[375.57363892 269.18820190]
[367.77279663 256.37622070]
[359.97195435 243.56423950]
[352.17111206 230.75225830]
[344.37026978 217.94027710]
[336.56942749 205.12829590]
[328.76858521 192.31631470]
[320.96771240 179.50434875]
[314.81936646 175.43540955]
[313.15032959 166.47943115]
[305.51306152 153.56927490]
[297.87579346 140.65911865]
[284.73638916 133.64448547]
[284.36932373 117.82754517]
[276.73208618 104.91738892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 112]
[3 111]
[4 110]
[6 108]
[7 107]
[8 106]
[10 105]
[11 104]
[12 103]
[13 102]
[14 101]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[29 66]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[35 59]
[36 58]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[67 99]
[68 98]
[69 97]
[71 94]
[72 93]
[73 92]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[113 205]
[114 204]
[115 203]
[116 202]
[117 201]
[118 135]
[119 134]
[120 133]
[122 131]
[123 130]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
[153 199]
[154 198]
[155 197]
[156 196]
[158 195]
[159 194]
[160 193]
[161 192]
[162 191]
[166 189]
[167 188]
[168 187]
[169 186]
[170 185]
[176 184]
[177 183]
[206 246]
[207 245]
[209 243]
[210 242]
[211 241]
[212 239]
[213 238]
[214 237]
[215 236]
[216 235]
[217 234]
[218 233]
[219 232]
[222 230]
[223 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
