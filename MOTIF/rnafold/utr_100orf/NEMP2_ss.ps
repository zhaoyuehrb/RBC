%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUCUGAGCCCCCGCGCCACUUCCGCUCCUCGCAGCGGAGCCGGUCCCCUAGGGCUCGGGUCGCACGGAGCUGACCCCUAACGAAAUGGGGCCGCGCCAAGGGCGGUGGUGGCUGCUGCUCUGGCUGCCGCCCCUGGCCACACUGCCCGUGCGCGGGGAGGCGGCGGCGGCAGCGUUAUCAGUUC\
) } def
/len { sequence length } bind def

/coor [
[96.25276947 212.07962036]
[81.60741425 207.23019409]
[71.92653656 195.21835327]
[70.29927063 179.87705994]
[77.24488068 166.10163879]
[90.54703522 158.28779602]
[91.04826355 143.29617310]
[91.54948425 128.30455017]
[92.05071259 113.31291962]
[77.48889160 109.71382904]
[70.94839478 123.21278381]
[72.67388153 139.52090454]
[59.25599289 148.94917297]
[44.49789810 141.79859924]
[43.58146286 125.42507935]
[57.44943619 116.67228699]
[63.98993301 103.17332458]
[60.51263428 88.58194733]
[48.58694839 79.48370361]
[36.66126251 70.38545990]
[24.73557472 61.28722000]
[12.80988884 52.18897629]
[0.88420349 43.09073639]
[-14.78062057 40.87175369]
[-20.20632744 27.00052643]
[-32.13201523 17.90228462]
[-44.05770111 8.80404186]
[-55.98338699 -0.29420036]
[-64.72315216 -3.01943040]
[-68.03063965 -9.64546204]
[-79.80263519 -18.94170952]
[-91.57462311 -28.23795891]
[-109.84468842 -30.46232605]
[-115.71138000 -46.99265289]
[-127.63706970 -56.09089661]
[-136.37683105 -58.81612778]
[-139.68432617 -65.44216156]
[-151.45631409 -74.73840332]
[-163.22830200 -84.03465271]
[-175.00030518 -93.33090210]
[-190.48947144 -91.68061829]
[-202.29551697 -101.27603149]
[-203.77334595 -116.05275726]
[-215.54533386 -125.34900665]
[-227.31733704 -134.64524841]
[-240.59561157 -127.29928589]
[-255.63421631 -125.60125732]
[-270.13803101 -129.77897644]
[-281.90548706 -139.16589355]
[-289.16287231 -152.30725098]
[-290.83148193 -167.18547058]
[-286.68804932 -181.52984619]
[-298.46005249 -190.82609558]
[-310.23202515 -200.12234497]
[-322.00402832 -209.41859436]
[-333.77600098 -218.71484375]
[-349.40158081 -221.19526672]
[-354.59472656 -235.15521240]
[-366.36672974 -244.45146179]
[-378.13873291 -253.74771118]
[-389.91070557 -263.04397583]
[-405.53625488 -265.52438354]
[-410.72943115 -279.48434448]
[-422.50143433 -288.78057861]
[-438.53854370 -288.34381104]
[-448.76840210 -300.70220947]
[-445.34353638 -316.37542725]
[-430.89123535 -323.34033203]
[-416.49801636 -316.25405884]
[-413.20516968 -300.55258179]
[-401.43319702 -291.25634766]
[-386.64962769 -289.44082642]
[-380.61447144 -274.81594849]
[-368.84246826 -265.51971436]
[-357.07049561 -256.22344971]
[-345.29849243 -246.92721558]
[-330.51495361 -245.11170959]
[-324.47976685 -230.48683167]
[-312.70776367 -221.19058228]
[-300.93579102 -211.89433289]
[-289.16378784 -202.59808350]
[-277.39181519 -193.30183411]
[-264.39871216 -200.65771484]
[-249.53898621 -202.48361206]
[-235.07321167 -198.47036743]
[-223.21406555 -189.19953918]
[-215.78788757 -176.05931091]
[-213.95339966 -161.03674316]
[-218.02108765 -146.41723633]
[-206.24909973 -137.12100220]
[-194.47709656 -127.82474518]
[-179.76031494 -129.81271362]
[-167.68942261 -120.55268860]
[-165.70405579 -105.10289764]
[-153.93205261 -95.80664825]
[-142.16006470 -86.51039886]
[-130.38807678 -77.21414948]
[-118.53882599 -68.01658630]
[-106.61313629 -58.91833878]
[-94.57398224 -60.21720886]
[-84.56096649 -52.71775818]
[-82.27837372 -40.00994873]
[-70.50638580 -30.71370125]
[-58.73439407 -21.41745186]
[-46.88514328 -12.21988583]
[-34.95945740 -3.12164354]
[-23.03377151 5.97659874]
[-11.10808468 15.07484150]
[3.70373368 16.64305496]
[9.98244572 31.16504860]
[21.90813255 40.26329041]
[33.83381653 49.36153412]
[45.75950241 58.45977783]
[57.68518829 67.55802155]
[69.61087799 76.65626526]
[133.17189026 80.27828979]
[147.91918945 83.02003479]
[162.66648865 85.76177979]
[177.41378784 88.50353241]
[192.16108704 91.24527740]
[206.90838623 93.98702240]
[221.65568542 96.72877502]
[226.61332703 94.97221375]
[231.27857971 95.27587891]
[234.91175842 97.17957306]
[237.06518555 99.99519348]
[251.65657043 103.47249603]
[266.24795532 106.94979858]
[280.83932495 110.42710114]
[295.43072510 113.90440369]
[310.02209473 117.38170624]
[324.61346436 120.85900879]
[339.20486450 124.33631134]
[353.79623413 127.81361389]
[368.41616821 131.16888428]
[383.06359863 134.40187073]
[397.71105957 137.63487244]
[412.85452271 133.05381775]
[423.61502075 143.35241699]
[438.26245117 146.58541870]
[452.93640137 149.69592285]
[467.63583374 152.68370056]
[482.33526611 155.67149353]
[494.45806885 145.79367065]
[510.09320068 146.07090759]
[521.85821533 156.37229919]
[524.19799805 171.83383179]
[516.00787354 185.15505981]
[501.15484619 190.04611206]
[486.65213013 184.19755554]
[479.34747314 170.37092590]
[464.64804077 167.38313293]
[449.94860840 164.39533997]
[442.75323486 166.14752197]
[435.02944946 161.23286438]
[420.38201904 157.99986267]
[406.28622437 162.81216431]
[394.47805786 152.28231812]
[379.83059692 149.04933167]
[365.18316650 145.81632996]
[357.95950317 147.44802856]
[350.31893921 142.40499878]
[335.72753906 138.92768860]
[321.13616943 135.45039368]
[306.54479980 131.97308350]
[291.95339966 128.49578857]
[277.36203003 125.01847839]
[262.77066040 121.54117584]
[248.17927551 118.06387329]
[233.58789062 114.58657074]
[218.91394043 111.47607422]
[204.16664124 108.73432159]
[189.41934204 105.99257660]
[174.67204285 103.25083160]
[159.92474365 100.50907898]
[145.17744446 97.76733398]
[130.43014526 95.02558136]
[124.58319855 99.72272491]
[126.87195587 114.54708099]
[112.88928986 109.11700439]
[107.04233551 113.81414795]
[106.54110718 128.80577087]
[106.03988647 143.79739380]
[105.53865814 158.78901672]
[118.28919983 167.47389221]
[124.29920197 181.68246460]
[121.65088654 196.88082886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 184]
[7 183]
[8 182]
[9 181]
[10 17]
[11 16]
[18 115]
[19 114]
[20 113]
[21 112]
[22 111]
[23 110]
[25 108]
[26 107]
[27 106]
[28 105]
[30 104]
[31 103]
[32 102]
[34 99]
[35 98]
[37 97]
[38 96]
[39 95]
[40 94]
[43 91]
[44 90]
[45 89]
[52 82]
[53 81]
[54 80]
[55 79]
[56 78]
[58 76]
[59 75]
[60 74]
[61 73]
[63 71]
[64 70]
[116 177]
[117 176]
[118 175]
[119 174]
[120 173]
[121 172]
[122 171]
[126 170]
[127 169]
[128 168]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[134 162]
[135 160]
[136 159]
[137 158]
[139 156]
[140 155]
[141 153]
[142 152]
[143 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
