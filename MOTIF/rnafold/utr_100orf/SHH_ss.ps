%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGGCAGCCAGCGAGGGAGAGAGCGAGCGGGCGAGCCGGAGCGAGGAAGGGAAAGCGCAAGAGAGAGCGCACACGCACACACCCGCCGCGCGCACUCGCGCACGGACCCGCACGGGGACAGCUCGGAAGUCAUCAGUUCCAUGGGCGAGAUGCUGCUGCUGGCGAGAUGUCUGCUGCUAGUCCUCGUCUCCUCGCUGCUGGUAUGCUCGGGACUGGCGUGCGGACCGGGCAGGGGGUUCGGGAAGAGGA\
) } def
/len { sequence length } bind def

/coor [
[151.68608093 551.28735352]
[153.19044495 544.35650635]
[155.98930359 537.82928467]
[159.98388672 531.94555664]
[165.03141785 526.92205811]
[170.95027161 522.94482422]
[166.70797729 508.55722046]
[162.46568298 494.16961670]
[158.13378906 479.80874634]
[153.71246338 465.47515869]
[149.29113770 451.14157104]
[144.86979675 436.80798340]
[140.44847107 422.47436523]
[137.35490417 437.15191650]
[129.55058289 449.96176147]
[117.92623901 459.44198608]
[103.80854797 464.51058960]
[88.80875397 464.58908081]
[74.63877869 459.66851807]
[62.91585541 450.31045532]
[54.97790909 437.58297729]
[51.73089981 422.93862915]
[53.54540634 408.04876709]
[60.21433640 394.61279297]
[70.97657013 384.16415405]
[84.60382080 377.89532471]
[99.54080200 376.52178955]
[114.08275604 380.20028687]
[126.57002258 388.51101685]
[135.57858276 400.50772095]
[133.52803040 385.64852905]
[131.47747803 370.78936768]
[129.42692566 355.93017578]
[127.37636566 341.07098389]
[125.32581329 326.21182251]
[115.92128754 314.66174316]
[121.69941711 299.93341064]
[119.64886475 285.07424927]
[117.59830475 270.21505737]
[115.54775238 255.35588074]
[113.49720001 240.49668884]
[111.35406494 225.65058899]
[109.11843109 210.81811523]
[106.88279724 195.98565674]
[104.64716339 181.15319824]
[102.41152954 166.32073975]
[100.17589569 151.48826599]
[97.94026184 136.65580750]
[95.70462799 121.82334900]
[82.10409546 113.20777893]
[77.88011932 97.67199707]
[64.36558533 91.16374207]
[50.85105133 84.65548706]
[42.54445267 93.53480530]
[29.58288956 97.75875854]
[14.72037029 95.00779724]
[1.77748632 84.60688782]
[-13.21202469 84.04602051]
[-28.20153427 83.48514557]
[-43.19104385 82.92427826]
[-52.66849518 95.21076202]
[-67.56716919 99.54770660]
[-82.15822601 94.26747894]
[-90.83110046 81.40043640]
[-90.25090027 65.89421082]
[-80.64071655 53.71126938]
[-65.69586945 49.53619766]
[-51.16296005 54.97439575]
[-42.63017654 67.93476868]
[-27.64066696 68.49563599]
[-12.65115643 69.05650330]
[2.33835435 69.61737061]
[5.59248209 62.86010742]
[-7.92205095 56.35185242]
[-21.43658447 49.84359360]
[-34.95111847 43.33533859]
[-48.46564865 36.82708359]
[-61.98018265 30.31882668]
[-76.84440613 28.30514336]
[-79.52239227 13.54613209]
[-66.31318665 6.43859673]
[-55.47192764 16.80429459]
[-41.95739365 23.31254959]
[-28.44286156 29.82080650]
[-14.92832756 36.32906342]
[-1.41379464 42.83731842]
[12.10073853 49.34557343]
[15.35486603 42.58830643]
[5.57055521 31.21873283]
[-4.21375608 19.84915733]
[-19.08008957 14.43595982]
[-21.51727295 -0.25789621]
[-31.30158424 -11.62747192]
[-41.08589554 -22.99704742]
[-50.87020874 -34.36662292]
[-66.51937103 -39.26924896]
[-69.83361053 -55.33000565]
[-57.40351868 -66.02696228]
[-42.01610947 -60.35600662]
[-39.50063324 -44.15093613]
[-29.71632004 -32.78136063]
[-19.93200874 -21.41178322]
[-10.14769840 -10.04220772]
[4.01879597 -5.44223881]
[7.15581989 10.06484509]
[16.94013023 21.43442154]
[26.72444153 32.80399704]
[54.34337616 46.34307861]
[57.35931015 71.14095306]
[70.87384033 77.64920807]
[84.38837433 84.15746307]
[90.90177155 79.70391846]
[98.56016541 77.80460358]
[106.39975739 78.69854736]
[115.30706024 66.62958527]
[124.21436310 54.56061554]
[133.12167358 42.49164963]
[142.02897644 30.42268181]
[150.93627930 18.35371399]
[159.84358215 6.28474808]
[168.75088501 -5.78421879]
[177.58277893 -17.90847206]
[186.33892822 -30.08754349]
[195.09509277 -42.26661301]
[196.51509094 -60.63817596]
[212.80216980 -67.20265198]
[221.40580750 -79.48993683]
[230.00946045 -91.77721405]
[238.61311340 -104.06449890]
[239.06439209 -109.21207428]
[241.21624756 -113.27713013]
[244.37808228 -115.79573059]
[247.77529907 -116.64216614]
[256.83236694 -128.59915161]
[265.88943481 -140.55615234]
[274.94650269 -152.51313782]
[269.98190308 -165.35566711]
[271.98855591 -178.86805725]
[280.33770752 -189.54324341]
[292.76861572 -194.66390991]
[305.99972534 -192.99377441]
[315.20513916 -204.83692932]
[324.41055298 -216.68008423]
[322.64117432 -232.15609741]
[332.14550781 -244.03559875]
[346.91040039 -245.62705994]
[356.11584473 -257.47021484]
[365.32125854 -269.31335449]
[374.52667236 -281.15652466]
[372.31307983 -296.80499268]
[381.87960815 -309.38504028]
[397.55062866 -311.43307495]
[410.02880859 -301.73403931]
[411.91104126 -286.04223633]
[402.08065796 -273.66732788]
[386.36984253 -271.95108032]
[377.16439819 -260.10794067]
[367.95898438 -248.26478577]
[358.75357056 -236.42163086]
[360.85467529 -221.72058105]
[351.68777466 -209.57881165]
[336.25372314 -207.47465515]
[327.04827881 -195.63150024]
[317.84286499 -183.78836060]
[322.90802002 -168.16085815]
[317.59796143 -152.43916321]
[303.82110596 -142.89367676]
[286.90347290 -143.45606995]
[277.84643555 -131.49908447]
[268.78936768 -119.54209137]
[259.73229980 -107.58510590]
[250.90039062 -95.46084595]
[242.29673767 -83.17356873]
[233.69309998 -70.88629150]
[225.08944702 -58.59900665]
[226.88261414 -46.65288162]
[219.83795166 -36.35079193]
[207.27415466 -33.51045609]
[198.51800537 -21.33138657]
[189.76185608 -9.15231705]
[188.41268921 -1.90611184]
[180.81983948 3.12308431]
[171.91253662 15.19205093]
[163.00523376 27.26101685]
[154.09793091 39.32998276]
[145.19062805 51.39895248]
[136.28332520 63.46791840]
[127.37602997 75.53688812]
[118.46872711 87.60585022]
[121.58805847 105.35392761]
[110.53708649 119.58771515]
[112.77272034 134.42018127]
[115.00835419 149.25263977]
[117.24398804 164.08509827]
[119.47962189 178.91755676]
[121.71525574 193.75003052]
[123.95088959 208.58248901]
[126.18652344 223.41494751]
[130.54948425 231.40924072]
[128.35638428 238.44613647]
[130.40693665 253.30531311]
[132.45748901 268.16448975]
[134.50804138 283.02368164]
[136.55859375 297.88287354]
[146.10978699 310.49575806]
[140.18499756 324.16125488]
[142.23554993 339.02044678]
[144.28610229 353.87963867]
[146.33665466 368.73880005]
[148.38720703 383.59799194]
[150.43775940 398.45715332]
[155.14878845 402.94577026]
[157.35130310 408.45883179]
[157.06178284 413.82073975]
[154.78207397 418.05303955]
[159.20339966 432.38665771]
[163.62472534 446.72024536]
[168.04605103 461.05383301]
[172.46737671 475.38742065]
[177.97309875 482.64215088]
[176.85327148 489.92733765]
[181.09558105 504.31491089]
[185.33787537 518.70251465]
[208.36953735 524.52252197]
[223.12536621 542.98455811]
[223.71981812 566.49017334]
[210.05769348 585.47766113]
[216.22700500 599.15020752]
[222.39631653 612.82281494]
[228.56561279 626.49542236]
[234.73492432 640.16796875]
[240.90423584 653.84057617]
[255.34121704 660.83721924]
[258.73162842 676.51794434]
[248.47465515 688.85382080]
[232.43855286 688.38183594]
[222.92485046 675.46405029]
[227.23164368 660.00988770]
[221.06233215 646.33728027]
[214.89303589 632.66467285]
[208.72372437 618.99212646]
[202.55441284 605.31951904]
[196.38511658 591.64691162]
[189.44784546 592.54663086]
[182.45642090 592.10992432]
[175.66627502 590.34912109]
[169.32620239 587.32489014]
[163.66920471 583.14434814]
[158.90397644 577.95703125]
[155.20719910 571.94995117]
[152.71694946 565.34027100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 223]
[7 222]
[8 221]
[9 219]
[10 218]
[11 217]
[12 216]
[13 215]
[30 211]
[31 210]
[32 209]
[33 208]
[34 207]
[35 206]
[37 204]
[38 203]
[39 202]
[40 201]
[41 200]
[42 198]
[43 197]
[44 196]
[45 195]
[46 194]
[47 193]
[48 192]
[49 191]
[51 111]
[52 110]
[53 109]
[57 72]
[58 71]
[59 70]
[60 69]
[88 107]
[89 106]
[90 105]
[92 103]
[93 102]
[94 101]
[95 100]
[114 189]
[115 188]
[116 187]
[117 186]
[118 185]
[119 184]
[120 183]
[121 182]
[122 180]
[123 179]
[124 178]
[126 175]
[127 174]
[128 173]
[129 172]
[133 171]
[134 170]
[135 169]
[136 168]
[141 164]
[142 163]
[143 162]
[146 159]
[147 158]
[148 157]
[149 156]
[227 243]
[228 242]
[229 241]
[230 240]
[231 239]
[232 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
