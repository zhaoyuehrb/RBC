%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGAGGAGAGUCGGCGGCCGGAGCCGUCACCCCGGGCGGGGACCCAGCGCAGGCAACUCCGCGCGGCGGCCCGGCCGAGGGAGGGAGCGAGCGGGCGGGCGGGCAAGCCAGACAGCUGGGCCGGAGCAGCCGCGGGCGCCCGAGGGGCCGAGCGAGAUUGUAAACCAUGGCUGUGUGGAUACAAGCUCAGCAGCUCCAAGGAGAAGCCCUUCAUCAGAUGCAAGCGUUAUAUGGCCAGCAUUUUCCCAUUGA\
GGUGCGGCAUUAUU\
) } def
/len { sequence length } bind def

/coor [
[64.80041504 332.92864990]
[50.75802994 338.52355957]
[35.69025040 339.72915649]
[20.93689728 336.43826294]
[7.80982828 328.94348145]
[-2.52370787 317.91128540]
[-9.14485931 304.32263184]
[-11.46487808 289.38580322]
[-9.27746868 274.42895508]
[-2.77713585 260.78210449]
[7.45811653 249.65864563]
[20.51817703 242.04772949]
[35.24175262 238.62606812]
[36.28810120 223.66261292]
[37.33444595 208.69914246]
[38.38079453 193.73568726]
[25.65436554 192.64466858]
[17.09457397 185.59822083]
[3.46330786 191.85830688]
[-10.16795921 198.11837769]
[-23.79922676 204.37844849]
[-37.43049240 210.63853455]
[-51.06175995 216.89860535]
[-64.69302368 223.15869141]
[-71.15712738 229.56106567]
[-78.51950836 229.41127014]
[-92.22269440 235.51231384]
[-105.92587280 241.61337280]
[-119.62905884 247.71441650]
[-106.66996765 255.26837158]
[-104.37783813 270.09219360]
[-114.45021057 281.20739746]
[-129.42747498 280.38201904]
[-138.21748352 268.22735596]
[-134.31097412 253.74589539]
[-148.34571838 259.03985596]
[-162.38046265 264.33380127]
[-172.56185913 276.44372559]
[-187.20085144 273.69616699]
[-201.23559570 278.99011230]
[-215.27033997 284.28408813]
[-229.30508423 289.57803345]
[-243.33982849 294.87197876]
[-257.37457275 300.16595459]
[-264.30541992 316.24624634]
[-280.41067505 322.20449829]
[-295.53051758 314.80407715]
[-309.50271606 320.26098633]
[-315.61645508 334.83486938]
[-330.27621460 340.73968506]
[-344.78463745 334.47219849]
[-350.53411865 319.75082397]
[-344.11361694 305.30947876]
[-329.33227539 299.71597290]
[-314.95962524 306.28878784]
[-300.98742676 300.83190918]
[-297.52743530 288.44131470]
[-287.41864014 280.17395020]
[-274.20019531 279.21298218]
[-262.66851807 286.13119507]
[-248.63378906 280.83724976]
[-234.59904480 275.54330444]
[-220.56430054 270.24932861]
[-206.52955627 264.95538330]
[-192.49481201 259.66140747]
[-183.31727600 247.93017578]
[-167.67442322 250.29907227]
[-153.63967896 245.00511169]
[-139.60493469 239.71115112]
[-125.73010254 234.01123047]
[-112.02692413 227.91018677]
[-98.32373810 221.80914307]
[-84.62055969 215.70808411]
[-70.95310211 209.52742004]
[-57.32183838 203.26734924]
[-43.69057083 197.00726318]
[-30.05930328 190.74719238]
[-16.42803574 184.48710632]
[-2.79676890 178.22703552]
[10.83449841 171.96696472]
[24.94124413 151.78999329]
[50.75186157 164.11329651]
[60.65844345 152.85009766]
[70.56501770 141.58689880]
[80.47160339 130.32369995]
[83.67407227 87.15994263]
[76.94208527 73.75545502]
[70.21009827 60.35096359]
[57.10229111 51.49117279]
[58.30460358 36.64517593]
[51.57261658 23.24068451]
[36.84035110 18.18122864]
[30.20411110 4.49126959]
[35.11832047 -9.52251434]
[28.38633156 -22.92700386]
[21.65434456 -36.33149338]
[14.92235661 -49.73598480]
[3.16681862 -51.19797897]
[-6.33573246 -58.06903458]
[-11.30506897 -68.55826569]
[-10.61751461 -80.02486420]
[-4.55789423 -89.64266205]
[-10.97615051 -103.20017242]
[-28.05703545 -113.94886017]
[-25.55872154 -133.14346313]
[-32.29070663 -146.54795837]
[-39.02269745 -159.95243835]
[-43.32393646 -162.78359985]
[-45.87641525 -166.59211731]
[-46.59956741 -170.55749512]
[-45.74649429 -173.94429016]
[-52.00657272 -187.57556152]
[-58.26664734 -201.20681763]
[-64.52672577 -214.83808899]
[-78.21081543 -223.87567139]
[-76.95613098 -240.22674561]
[-62.05338669 -247.07073975]
[-48.83324814 -237.36714172]
[-50.89545822 -221.09815979]
[-44.63538361 -207.46690369]
[-38.37530518 -193.83563232]
[-32.11522675 -180.20436096]
[-25.61820602 -166.68443298]
[-18.88621902 -153.27993774]
[-12.15423107 -139.87544250]
[-2.24575233 -137.56256104]
[4.91852283 -130.03211975]
[6.81362343 -119.58960724]
[2.58135581 -109.61843109]
[8.99961281 -96.06092072]
[26.59519386 -90.91844940]
[34.95537949 -74.24489594]
[28.32684517 -56.46797180]
[35.05883408 -43.06348038]
[41.79082108 -29.65899086]
[48.52280807 -16.25450134]
[62.69815063 -11.82785130]
[69.71630096 1.67030728]
[64.97710419 16.50869751]
[71.70909119 29.91318703]
[84.33538818 37.81419754]
[83.61458588 53.61897659]
[90.34658051 67.02346802]
[97.07856750 80.42795563]
[111.44841003 84.73000336]
[124.43878937 77.23000336]
[137.42916870 69.73000336]
[150.41955566 62.23000336]
[163.40992737 54.73000336]
[176.40031433 47.23000336]
[189.39070129 39.73000336]
[186.99108887 24.27494431]
[193.91381836 8.46258259]
[209.56042480 -2.11595178]
[230.06533813 -2.79727340]
[241.99215698 -11.89403915]
[253.86584473 -21.06003952]
[265.68600464 -30.29496193]
[277.50616455 -39.52988434]
[283.61727905 -54.12319183]
[298.41006470 -55.86180878]
[310.23022461 -65.09673309]
[322.05038452 -74.33164978]
[333.87054443 -83.56657410]
[345.69070435 -92.80149841]
[348.02545166 -105.46295166]
[358.03076172 -112.91338348]
[370.03414917 -111.60710144]
[381.96096802 -120.70386505]
[393.88775635 -129.80062866]
[405.81457520 -138.89739990]
[417.74139404 -147.99417114]
[423.55838013 -163.32696533]
[439.78665161 -165.68826294]
[449.73193359 -152.64895630]
[443.16336060 -137.62277222]
[426.83816528 -136.06735229]
[414.91134644 -126.97058868]
[402.98452759 -117.87381744]
[391.05770874 -108.77705383]
[379.13092041 -99.68029022]
[373.22964478 -83.13728333]
[354.92562866 -80.98133850]
[343.10546875 -71.74641418]
[331.28530884 -62.51148987]
[319.46514893 -53.27656937]
[307.64498901 -44.04164886]
[302.37933350 -30.10888100]
[286.74108887 -27.70972252]
[274.92092896 -18.47480011]
[263.10076904 -9.23987770]
[259.77658081 -2.66895056]
[251.08891296 0.03277232]
[239.16210938 9.12953854]
[241.64508057 16.20660210]
[246.61103821 30.36072922]
[249.09400940 37.43779373]
[264.08993530 37.08876038]
[279.08587646 36.73972321]
[292.80432129 27.75437546]
[307.32119751 35.38277817]
[307.70278931 51.77748489]
[293.55654907 60.07302856]
[279.43490601 51.73566437]
[264.43896484 52.08469772]
[249.44303894 52.43373108]
[230.69033813 64.77951813]
[210.64462280 63.85118866]
[196.89070129 52.72038651]
[183.90031433 60.22038651]
[170.90992737 67.72038269]
[157.91955566 75.22038269]
[144.92916870 82.72038269]
[131.93878174 90.22038269]
[118.94841003 97.72038269]
[118.29473877 105.19184875]
[130.58203125 113.79547119]
[116.98740387 120.13476562]
[116.33373260 127.60622406]
[127.82440186 137.24804688]
[139.31506348 146.88986206]
[150.80574036 156.53166199]
[162.29640198 166.17347717]
[173.78706360 175.81529236]
[189.31842041 174.62582397]
[200.83424377 184.56767273]
[201.87251282 199.38177490]
[213.36317444 209.02359009]
[228.38618469 205.13914490]
[242.81089783 210.85818481]
[251.09071350 223.98159790]
[250.04188538 239.46319580]
[240.06770325 251.34996033]
[225.00344849 255.07119751]
[210.64161682 249.19602966]
[202.50465393 235.98356628]
[203.72135925 220.51426697]
[192.23069763 210.87245178]
[177.46136475 212.42239380]
[165.67083740 202.80790710]
[164.14524841 187.30596924]
[152.65458679 177.66415405]
[141.16392517 168.02233887]
[129.67324829 158.38052368]
[118.18258667 148.73870850]
[106.69191742 139.09689331]
[91.73480225 140.23027039]
[81.82822418 151.49346924]
[71.92163849 162.75668335]
[62.01506424 174.01988220]
[75.27200317 167.00178528]
[90.24651337 167.87583923]
[102.59693909 176.38858032]
[108.74243927 190.07189941]
[106.90119934 204.95846558]
[97.60706329 216.73211670]
[83.55475616 221.97926331]
[68.81854248 219.17854309]
[57.67099762 209.14199829]
[53.34425354 194.78202820]
[52.29790878 209.74549866]
[51.25156021 224.70895386]
[50.20521164 239.67240906]
[64.30929565 245.10989380]
[76.18302155 254.46437073]
[84.77058411 266.90402222]
[89.30837250 281.32275391]
[89.39290619 296.43844604]
[85.01666260 310.90704346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 263]
[14 262]
[15 261]
[16 260]
[18 80]
[19 79]
[20 78]
[21 77]
[22 76]
[23 75]
[24 74]
[26 73]
[27 72]
[28 71]
[29 70]
[35 69]
[36 68]
[37 67]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[47 56]
[48 55]
[82 250]
[83 249]
[84 248]
[85 247]
[86 144]
[87 143]
[88 142]
[90 140]
[91 139]
[94 136]
[95 135]
[96 134]
[97 133]
[102 130]
[103 129]
[105 125]
[106 124]
[107 123]
[111 122]
[112 121]
[113 120]
[114 119]
[145 215]
[146 214]
[147 213]
[148 212]
[149 211]
[150 210]
[151 209]
[155 194]
[156 193]
[157 191]
[158 190]
[159 189]
[161 187]
[162 186]
[163 185]
[164 184]
[165 183]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
[197 206]
[198 205]
[199 204]
[219 246]
[220 245]
[221 244]
[222 243]
[223 242]
[224 241]
[227 238]
[228 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
