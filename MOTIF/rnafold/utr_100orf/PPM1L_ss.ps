%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCUCCGCCUCCCUCCCGGCGGGCUGUCCCCGCAGUGCUCCCGGACCCGGCGAGCCUUCGGGGCGCGCGUCGCUGGUGGUGGUUGAGGCUCUAGCGAUAAUAAAUGAUAGAGGAUACAAUGACUUUGCUGUCUCUGCUGGGUCGCAUCAUGCGCUACUUCUUGCUGAGACCCGAGACGCUUUUCCUGCUGUGCAUCAGCUUGG\
) } def
/len { sequence length } bind def

/coor [
[67.18047333 127.47196960]
[62.00725937 118.54155731]
[59.17539978 108.74906158]
[44.18237686 109.20650482]
[29.18935204 109.66394806]
[14.19632912 110.12139130]
[2.44701767 123.07928467]
[-14.70099735 123.52381897]
[-26.62663078 111.66809082]
[-41.61093521 112.35411835]
[-56.59523773 113.04015350]
[-71.57954407 113.72618103]
[-86.56385040 114.41221619]
[-101.53594971 115.32667542]
[-116.49236298 116.46934509]
[-131.43962097 117.72603607]
[-146.37687683 119.09666443]
[-161.30323792 120.58114624]
[-176.21784973 122.17940521]
[-191.13246155 123.77766418]
[-206.04705811 125.37591553]
[-220.96166992 126.97417450]
[-235.87628174 128.57243347]
[-250.79089355 130.17068481]
[-265.69287109 131.88262939]
[-280.58139038 133.70814514]
[-295.45553589 135.64714050]
[-310.31445312 137.69949341]
[-318.39099121 141.97515869]
[-325.41543579 139.66804504]
[-340.30395508 141.49357605]
[-355.19244385 143.31909180]
[-370.08096313 145.14460754]
[-384.96945190 146.97012329]
[-397.72540283 156.32940674]
[-411.29971313 150.19854736]
[-426.18820190 152.02406311]
[-434.32901001 156.17607117]
[-441.31747437 153.76210022]
[-456.23208618 155.36036682]
[-471.14669800 156.95861816]
[-486.06127930 158.55686951]
[-500.96328735 160.26881409]
[-515.85180664 162.09432983]
[-530.74029541 163.91984558]
[-543.50622559 174.21369934]
[-558.70434570 168.05340576]
[-560.70013428 151.77615356]
[-547.44049072 142.12658691]
[-532.56579590 149.03134155]
[-517.67730713 147.20582581]
[-502.78878784 145.38031006]
[-496.52981567 141.44448853]
[-487.65954590 143.64227295]
[-472.74493408 142.04400635]
[-457.83032227 140.44575500]
[-442.91571045 138.84748840]
[-428.01373291 137.13555908]
[-413.12524414 135.31004333]
[-401.43420410 126.08132935]
[-386.79498291 132.08161926]
[-371.90646362 130.25610352]
[-357.01797485 128.43058777]
[-342.12945557 126.60506439]
[-327.24096680 124.77954865]
[-312.36682129 122.84056091]
[-297.50787354 120.78820801]
[-291.30963135 116.75738525]
[-282.40689087 118.81964111]
[-267.51840210 116.99412537]
[-261.25939941 113.05829620]
[-252.38914490 115.25608063]
[-237.47453308 113.65782166]
[-222.55993652 112.05957031]
[-207.64532471 110.46131134]
[-192.73071289 108.86305237]
[-177.81610107 107.26479340]
[-162.90148926 105.66653442]
[-156.58320618 101.82661438]
[-147.74749756 104.15941620]
[-132.81025696 102.78878784]
[-126.43413544 99.04566193]
[-117.63503265 101.51293182]
[-102.67861938 100.37026215]
[-98.94179535 97.39041901]
[-93.29237366 96.72899628]
[-87.24987793 99.42790985]
[-72.26557159 98.74187469]
[-57.28126907 98.05584717]
[-42.29696655 97.36981964]
[-27.31266212 96.68378448]
[-20.04309464 86.04226685]
[-7.78837013 81.46357727]
[5.05457783 84.82977295]
[13.73888683 95.12836456]
[28.73191071 94.67092896]
[43.72493362 94.21348572]
[58.71795654 93.75604248]
[60.63294601 85.27415466]
[64.28276062 77.31802368]
[69.53172302 70.24076843]
[76.17269897 64.36185455]
[83.93512726 59.95272446]
[92.49608612 57.22432327]
[101.49364471 56.31710434]
[110.54222107 57.29398727]
[119.24905396 60.13663483]
[127.23126984 64.74521637]
[134.13272095 70.94172668]
[139.63986206 78.47678375]
[143.49589539 87.03961182]
[145.51275635 96.27082825]
[145.58010864 105.77754211]
[160.46861267 103.95202637]
[175.35711670 102.12650299]
[190.24562073 100.30098724]
[191.85391235 92.52523804]
[195.11337280 85.29926300]
[199.86195374 78.96837616]
[205.86651611 73.83370972]
[212.83442688 70.13792419]
[220.42771912 68.05374908]
[228.27952576 67.67588806]
[236.01177979 69.01676178]
[243.25343323 72.00615692]
[249.65824890 76.49491882]
[254.92140198 82.26232910]
[258.79388428 89.02700806]
[261.09442139 96.46061707]
[276.09268188 96.68936157]
[284.72500610 93.69025421]
[291.31747437 97.03769684]
[306.31048584 97.49514008]
[321.30349731 97.95258331]
[336.29653931 98.41002655]
[351.28955078 98.86746979]
[355.04614258 96.67209625]
[358.91659546 95.86952209]
[362.44833374 96.32415771]
[365.27957153 97.76717377]
[367.17483521 99.83770752]
[382.11209106 101.20832825]
[397.04934692 102.57895660]
[411.98657227 103.94958496]
[426.92382812 105.32020569]
[431.67019653 103.12899017]
[436.31723022 102.99369812]
[440.09759521 104.53155518]
[442.50753784 107.11045837]
[457.36648560 109.16281128]
[472.22540283 111.21516418]
[481.15856934 109.28891754]
[487.29461670 113.41378784]
[502.12051392 115.69249725]
[516.94641113 117.97120667]
[527.77227783 106.85452271]
[543.07043457 104.25739288]
[556.95855713 111.17847443]
[564.09625244 124.95645905]
[561.73895264 140.29344177]
[550.79315186 151.29202271]
[535.46771240 153.72305298]
[521.65551758 146.65171814]
[514.66772461 132.79711914]
[499.84182739 130.51840210]
[485.01589966 128.23970032]
[470.17306519 126.07409668]
[455.31411743 124.02174377]
[440.45520020 121.96939087]
[425.55319214 120.25745392]
[410.61596680 118.88683319]
[395.67871094 117.51620483]
[380.74145508 116.14557648]
[365.80419922 114.77495575]
[350.83212280 113.86049652]
[335.83908081 113.40305328]
[320.84606934 112.94561005]
[305.85305786 112.48816681]
[290.86001587 112.03072357]
[275.86395264 111.68761444]
[260.86569214 111.45886993]
[249.21162415 130.76786804]
[228.16891479 139.22303772]
[206.15441895 133.28092957]
[192.07113647 115.18949127]
[177.18263245 117.01500702]
[162.29412842 118.84052277]
[147.40563965 120.66603851]
[139.48057556 133.40155029]
[144.41932678 147.56520081]
[149.35809326 161.72883606]
[154.29684448 175.89247131]
[168.06013489 184.13575745]
[170.05364990 200.05445862]
[158.74815369 211.43713379]
[142.81623840 209.55195618]
[134.47952271 195.84507751]
[140.13320923 180.83123779]
[135.19445801 166.66758728]
[130.25569153 152.50395203]
[125.31693268 138.34031677]
[115.17662048 142.81013489]
[104.38287354 144.68206787]
[93.58271790 143.90585327]
[83.40885925 140.58816528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 98]
[4 97]
[5 96]
[6 95]
[9 91]
[10 90]
[11 89]
[12 88]
[13 87]
[14 84]
[15 83]
[16 81]
[17 80]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[25 70]
[26 69]
[27 67]
[28 66]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[36 59]
[37 58]
[39 57]
[40 56]
[41 55]
[42 54]
[43 52]
[44 51]
[45 50]
[113 188]
[114 187]
[115 186]
[116 185]
[129 181]
[130 180]
[132 179]
[133 178]
[134 177]
[135 176]
[136 175]
[141 174]
[142 173]
[143 172]
[144 171]
[145 170]
[149 169]
[150 168]
[151 167]
[153 166]
[154 165]
[155 164]
[189 201]
[190 200]
[191 199]
[192 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
