%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAGAGGCAGGCUGCGGACUCGGAGCAGCUCGGGGCUGCGCAGCGGGAAGGCUCGCCUAGUCGGUCCGCAUCCGUGUCGACCACCUGUCUGGACACCACGAAGAUGCCACCCGUUGGGGGCAAAAAGGCCAAGAAGGGCAUCCUAGAACGUUUAAAUGCUGGAGAGAUUGUGAUUGGAGAUGGAGGGUUUGUCUUUGCACUGG\
) } def
/len { sequence length } bind def

/coor [
[74.62753296 326.52023315]
[70.57898712 311.80386353]
[73.32502747 296.78979492]
[82.32041931 284.45910645]
[95.77912140 277.26007080]
[95.09309387 262.27575684]
[94.40705872 247.29147339]
[93.72103119 232.30715942]
[93.03499603 217.32286072]
[92.34896851 202.33856201]
[91.66293335 187.35424805]
[90.97690582 172.36994934]
[90.29087830 157.38565063]
[89.60484314 142.40133667]
[88.91881561 127.41703796]
[76.89202881 118.45286560]
[62.33636093 122.07675934]
[47.78069687 125.70065308]
[33.22503281 129.32455444]
[18.66936684 132.94844055]
[4.11370230 136.57234192]
[-3.46127129 141.68423462]
[-10.69156551 140.13871765]
[-25.30080223 143.54022217]
[-39.91003799 146.94171143]
[-47.31429672 170.12150574]
[-76.25210571 178.79417419]
[-89.16555786 186.42585754]
[-102.07901764 194.05754089]
[-114.99247742 201.68922424]
[-127.90593719 209.32090759]
[-140.81939697 216.95259094]
[-151.37901306 230.21649170]
[-167.04774475 223.74136353]
[-165.16319275 206.89247131]
[-148.45108032 204.03913879]
[-135.53761292 196.40745544]
[-122.62416077 188.77577209]
[-109.71070099 181.14408875]
[-96.79724121 173.51240540]
[-83.88378143 165.88072205]
[-85.86173248 158.64624023]
[-100.37024689 154.83795166]
[-89.81761932 144.17727661]
[-91.79556274 136.94279480]
[-106.79556274 136.94279480]
[-121.79556274 136.94279480]
[-136.79556274 136.94279480]
[-151.79556274 136.94279480]
[-165.71936035 145.60649109]
[-180.05479431 137.64236450]
[-180.05479431 121.24321747]
[-165.71936035 113.27909088]
[-151.79556274 121.94279480]
[-136.79556274 121.94279480]
[-121.79556274 121.94279480]
[-106.79556274 121.94279480]
[-91.79556274 121.94279480]
[-79.86832428 115.13789368]
[-67.24010468 113.62520599]
[-55.99628830 116.89209747]
[-47.72895050 123.69089508]
[-43.31153870 132.33248901]
[-28.70230293 128.93098450]
[-14.09306812 125.52947998]
[0.48980680 122.01667786]
[15.04547119 118.39278412]
[29.60113716 114.76888275]
[44.15680313 111.14498901]
[58.71246719 107.52109528]
[73.26812744 103.89720154]
[85.94694519 81.72030640]
[107.52120209 82.44319916]
[118.36763763 72.08198547]
[129.21408081 61.72077179]
[140.06051636 51.35955429]
[150.90695190 40.99834061]
[155.54127502 25.87109375]
[170.08883667 22.67457199]
[180.93527222 12.31335640]
[178.44375610 -4.41460419]
[186.33418274 -19.18552589]
[201.32312012 -26.27304459]
[217.42027283 -23.06371498]
[228.10743713 -33.58913040]
[238.79461670 -44.11454773]
[249.23823547 -54.88166428]
[259.43283081 -65.88484955]
[263.13632202 -81.26648712]
[277.46194458 -85.34394073]
[287.65655518 -96.34712219]
[297.85116577 -107.35031128]
[308.04577637 -118.35349274]
[318.24035645 -129.35667419]
[321.77917480 -137.78213501]
[328.67532349 -140.44842529]
[339.03652954 -151.29486084]
[337.50891113 -171.32481384]
[350.99172974 -185.80166626]
[370.46929932 -185.70324707]
[380.32360840 -197.01220703]
[390.17788696 -208.32116699]
[387.37240601 -229.15728760]
[400.66186523 -245.06765747]
[421.07766724 -245.99089050]
[430.22421265 -257.87957764]
[439.37075806 -269.76824951]
[448.51727295 -281.65695190]
[457.66381836 -293.54562378]
[466.81036377 -305.43432617]
[460.69351196 -329.09454346]
[479.62365723 -349.87478638]
[485.41671753 -363.71099854]
[491.20974731 -377.54721069]
[491.74966431 -394.49255371]
[508.18222046 -398.66470337]
[516.74029541 -384.02926636]
[505.04595947 -371.75415039]
[499.25292969 -357.91796875]
[493.45986938 -344.08175659]
[506.19540405 -336.15667725]
[516.04968262 -347.46563721]
[525.90399170 -358.77459717]
[524.57037354 -374.52252197]
[534.82647705 -386.54696655]
[550.58758545 -387.71405029]
[562.50292969 -377.33135986]
[563.50335693 -361.55877686]
[552.99523926 -349.75387573]
[537.21295166 -348.92028809]
[527.35864258 -337.61132812]
[517.50433350 -326.30236816]
[517.18743896 -316.70919800]
[514.06878662 -307.99502563]
[508.64190674 -300.92510986]
[501.59188843 -296.05249023]
[493.71481323 -293.67630005]
[485.83068848 -293.82836914]
[478.69903564 -296.28778076]
[469.55249023 -284.39910889]
[460.40597534 -272.51040649]
[451.25942993 -260.62173462]
[442.11288452 -248.73303223]
[432.96633911 -236.84436035]
[436.97512817 -228.38243103]
[437.62838745 -218.98371887]
[434.79418945 -209.93803406]
[428.82208252 -202.50216675]
[420.50057983 -197.72526550]
[410.95318604 -196.30094910]
[401.48687744 -198.46687317]
[391.63256836 -187.15789795]
[381.77825928 -175.84893799]
[385.21649170 -166.16966248]
[384.31765747 -155.85615540]
[379.17724609 -146.77699280]
[370.66528320 -140.60496521]
[360.27972412 -138.50909424]
[349.88296509 -140.93363953]
[339.52175903 -130.08720398]
[329.24356079 -119.16207123]
[319.04895020 -108.15888977]
[308.85433960 -97.15570831]
[298.65972900 -86.15251923]
[288.46514893 -75.14933777]
[285.49084473 -60.55472183]
[270.43603516 -55.69024658]
[260.24142456 -44.68706131]
[260.01119995 -41.16490555]
[258.06109619 -37.57973099]
[254.38035583 -34.73976898]
[249.32003784 -33.42737579]
[238.63285828 -22.90196037]
[227.94569397 -12.37654400]
[231.15011597 0.58617270]
[227.50068665 13.54321289]
[217.84794617 23.08019829]
[204.63873291 26.62925339]
[191.29649353 23.15979576]
[180.45005798 33.52101135]
[176.59153748 47.90715408]
[161.26817322 51.84477997]
[150.42172241 62.20599365]
[139.57528687 72.56720734]
[128.72885132 82.92842102]
[117.88241577 93.28963470]
[119.85408783 111.72393799]
[103.90311432 126.73100281]
[104.58914948 141.71530151]
[105.27517700 156.69961548]
[105.96121216 171.68391418]
[106.64723969 186.66822815]
[107.33327484 201.65252686]
[108.01930237 216.63682556]
[108.70532990 231.62113953]
[109.39136505 246.60543823]
[110.07739258 261.58975220]
[110.76342773 276.57403564]
[124.82363892 282.51318359]
[134.90811157 293.97030640]
[139.01457214 308.67065430]
[136.32768250 323.69540405]
[127.38092041 336.06140137]
[113.95066833 343.31338501]
[98.70352173 344.01144409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[15 188]
[16 71]
[17 70]
[18 69]
[19 68]
[20 67]
[21 66]
[23 65]
[24 64]
[25 63]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[73 186]
[74 185]
[75 184]
[76 183]
[77 182]
[79 180]
[80 179]
[84 174]
[85 173]
[86 172]
[87 168]
[88 167]
[90 165]
[91 164]
[92 163]
[93 162]
[94 161]
[96 160]
[97 159]
[100 153]
[101 152]
[102 151]
[105 144]
[106 143]
[107 142]
[108 141]
[109 140]
[110 139]
[112 120]
[113 119]
[114 118]
[121 132]
[122 131]
[123 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
