%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCAUGCGCUCGAAGGGAGGUGGAGGCGCAGGUCCGGGCGAAGGGCGAUACGGUGGCCGAGAGGGCACGGAGAGGAGGACGGUGGCUGACGAGAUCCGGCAUGGAGCAUCUGGAGCGCUGCGAGUGGUUGUUGCGGGGAACGCUGGUGCGGGCGGCCGUGCGGCGCUACCUGCCCUGGGCCCUGGUGGCCUCCAUGCUGG\
) } def
/len { sequence length } bind def

/coor [
[-43.57762527 552.76116943]
[-46.99542618 567.36657715]
[-50.41323090 581.97198486]
[-53.83103180 596.57745361]
[-57.24883652 611.18286133]
[-51.98561478 626.71447754]
[-63.00662994 638.85815430]
[-78.97440338 635.12158203]
[-83.46266174 619.34857178]
[-71.85426331 607.76507568]
[-68.43646240 593.15966797]
[-65.01866150 578.55419922]
[-61.60085678 563.94879150]
[-58.18305588 549.34332275]
[-66.50867462 543.19061279]
[-72.33245850 534.58544922]
[-74.96892548 524.49530029]
[-74.09265137 514.06494141]
[-69.77823639 504.48638916]
[-62.49468231 496.86291504]
[-53.05453110 492.08184814]
[-42.52326202 490.71127319]
[-38.21713638 476.34265137]
[-34.02123260 461.94146729]
[-29.93580055 447.50854492]
[-25.85036659 433.07562256]
[-21.76493454 418.64270020]
[-17.67950249 404.20977783]
[-13.59406948 389.77685547]
[-9.50863743 375.34393311]
[-5.42320490 360.91101074]
[-6.62677479 353.61538696]
[-1.16300118 346.28912354]
[3.14312530 331.92050171]
[1.79787266 328.65640259]
[1.96965563 324.57775879]
[4.02441692 320.40600586]
[7.99146509 316.99884033]
[12.95339966 302.84332275]
[17.80672264 288.65017700]
[22.55115128 274.42025757]
[27.29557991 260.19033813]
[32.04000854 245.96043396]
[25.17091751 232.79414368]
[29.77973366 218.29541016]
[43.63632202 211.17974854]
[48.38075256 196.94982910]
[53.12517929 182.71990967]
[57.86960983 168.49000549]
[62.61403656 154.26008606]
[67.35846710 140.03018188]
[58.35480499 152.02743530]
[43.42451096 153.47184753]
[32.28802109 143.42303467]
[32.19580078 128.42332458]
[43.20788574 118.23833466]
[58.15442276 119.49884796]
[44.37444305 113.57329559]
[30.59446716 107.64773560]
[14.86020947 109.30413818]
[6.22462988 97.16841125]
[-7.55534744 91.24285126]
[-23.76914406 93.70146942]
[-33.79248047 80.72207642]
[-27.31420898 65.65675354]
[-10.99861717 64.00341034]
[-1.62978959 77.46287537]
[12.15018749 83.38842773]
[26.89880943 81.30818939]
[36.52002716 93.86775970]
[50.30000305 99.79331207]
[64.07997894 105.71887207]
[69.40355682 100.43592834]
[56.06465912 93.57489777]
[58.46796799 78.76867676]
[73.29219055 76.47901154]
[80.05072021 89.87004089]
[85.37429810 84.58709717]
[79.55450439 70.76212311]
[73.73470306 56.93714523]
[58.76567459 53.29924393]
[48.92405701 41.68047333]
[47.82411957 26.67200279]
[55.67867661 14.04489136]
[49.85887909 0.21991490]
[34.71985626 -3.18444896]
[24.49847412 -14.85933399]
[23.12505913 -30.31550980]
[31.12771606 -43.60976028]
[45.42926407 -49.63017654]
[60.53046036 -46.06178284]
[70.62459564 -34.27670288]
[71.83026123 -18.80653572]
[63.68385315 -5.59988165]
[69.50365448 8.22509480]
[84.02420807 11.43312359]
[93.98928833 22.70969772]
[95.42024994 37.86904144]
[87.55968475 51.11734772]
[93.37947845 64.94232178]
[99.19927216 78.76730347]
[106.63573456 77.79309845]
[128.94511414 74.87050629]
[131.00741577 60.01295471]
[122.51646423 46.40106964]
[128.00027466 31.32435417]
[143.25213623 26.34836769]
[156.57211304 35.29026413]
[157.74227905 51.29058456]
[145.86497498 62.07525253]
[143.80267334 76.93280792]
[149.43989563 81.87969971]
[159.33386230 70.60543060]
[170.60797119 80.49958801]
[160.71432495 91.77349091]
[166.35154724 96.72038269]
[180.81535339 92.74565887]
[195.24827576 88.66022491]
[209.64945984 84.46432495]
[224.05065918 80.26842499]
[238.45185852 76.07251740]
[252.85304260 71.87661743]
[267.25424194 67.68071747]
[281.65542603 63.48481369]
[296.05664062 59.28890991]
[310.45782471 55.09300613]
[315.30401611 50.58437729]
[320.86492920 49.38386917]
[325.36492920 50.99646378]
[339.88793945 47.24385452]
[354.41094971 43.49124527]
[368.93395996 39.73863983]
[383.45697021 35.98603058]
[397.97998047 32.23342133]
[412.50299072 28.48081017]
[427.02603149 24.72820282]
[441.45895386 20.64276886]
[455.79415894 16.22667313]
[466.70477295 4.76942682]
[481.14590454 8.41682053]
[495.48110962 4.00072336]
[504.22351074 -9.45104313]
[520.20458984 -10.85952568]
[531.16510010 0.85574341]
[528.69702148 16.70781136]
[514.69366455 24.53632927]
[499.89721680 18.33592796]
[485.56201172 22.75202560]
[475.67669678 33.89340210]
[460.21023560 30.56187630]
[445.87503052 34.97797394]
[443.91122437 37.91182327]
[440.42657471 40.03830338]
[435.81689453 40.65195084]
[430.77862549 39.25121689]
[416.25561523 43.00382614]
[401.73260498 46.75643539]
[387.20959473 50.50904083]
[372.68658447 54.26165009]
[358.16357422 58.01425934]
[343.64053345 61.76686859]
[329.11752319 65.51947784]
[314.65371704 69.49420166]
[300.25253296 73.69010162]
[285.85134888 77.88600922]
[271.45013428 82.08190918]
[257.04895020 86.27780914]
[242.64775085 90.47371674]
[228.24656677 94.66961670]
[213.84536743 98.86551666]
[199.44416809 103.06142426]
[193.89907837 107.95292664]
[184.79006958 107.20946503]
[170.32626343 111.18418884]
[81.58837891 144.77461243]
[76.84394836 159.00451660]
[72.09951782 173.23443604]
[67.35509491 187.46434021]
[62.61066437 201.69425964]
[57.86623383 215.92416382]
[64.68011475 229.93162537]
[59.66587830 244.29519653]
[46.26992035 250.70486450]
[41.52549362 264.93478394]
[36.78106308 279.16467285]
[32.03663635 293.39459229]
[32.29068375 302.53036499]
[27.10893631 307.80523682]
[22.14700127 321.96078491]
[17.51174736 336.22662354]
[13.20561981 350.59524536]
[9.00971699 364.99645996]
[4.92428493 379.42938232]
[0.83885241 393.86230469]
[-3.24658012 408.29522705]
[-7.33201265 422.72814941]
[-11.41744518 437.16104126]
[-15.50287724 451.59396362]
[-19.58831024 466.02688599]
[-18.91466522 475.14135742]
[-23.84851456 480.64880371]
[-28.15464020 495.01739502]
[-15.21011829 510.24746704]
[-14.09311581 530.05969238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[22 202]
[23 201]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[30 193]
[31 192]
[33 191]
[34 190]
[38 189]
[39 188]
[40 186]
[41 185]
[42 184]
[43 183]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[57 72]
[58 71]
[59 70]
[61 68]
[62 67]
[78 101]
[79 100]
[80 99]
[84 95]
[85 94]
[103 111]
[104 110]
[116 174]
[117 173]
[118 171]
[119 170]
[120 169]
[121 168]
[122 167]
[123 166]
[124 165]
[125 164]
[126 163]
[129 162]
[130 161]
[131 160]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[137 151]
[138 150]
[140 148]
[141 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
