%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAAAGGAAACUGUUGAGAAACCGAAACUACUGGGGAAAGGGAGGGCUCACUGAGAACCAUCCCAGUAACCCGACCGCCGCUGGUCUUCGCUGGACACCAUGAAUCACACUGUCCAAACCUUCUUCUCUCCUGUCAACAGUGGCCAGCCCCCCAACUAUGAGAUGCUCAAGGAGGAGCACGAGGUGGCUGUGCUGGGGG\
) } def
/len { sequence length } bind def

/coor [
[334.27014160 462.29086304]
[327.19351196 459.54275513]
[321.09051514 454.98275757]
[316.41613770 448.93280029]
[313.52368164 441.82659912]
[312.63812256 434.17843628]
[313.83853149 426.54605103]
[317.05139160 419.48992920]
[307.03756714 408.32196045]
[292.19738770 407.77053833]
[281.88284302 396.58731079]
[282.56182861 381.02526855]
[272.54800415 369.85729980]
[262.53417969 358.68936157]
[252.52037048 347.52139282]
[242.50654602 336.35342407]
[232.49272156 325.18545532]
[222.47889709 314.01748657]
[212.46507263 302.84954834]
[215.14276123 317.60861206]
[212.46682739 332.36798096]
[204.77815247 345.24758911]
[193.05613708 354.60678101]
[178.79397583 359.25335693]
[163.80841064 358.59539795]
[150.00834656 352.71676636]
[139.15170288 342.36624146]
[132.62139893 328.86236572]
[131.24929810 313.92523193]
[135.21018982 299.45764160]
[143.99951172 287.30249023]
[156.49765015 279.00811768]
[171.11256409 275.63113403]
[185.98257446 277.60165405]
[199.21160889 284.66723633]
[191.64437866 271.71591187]
[184.07713318 258.76458740]
[176.50988770 245.81326294]
[168.94264221 232.86193848]
[155.84140015 225.77627563]
[155.55999756 209.95758057]
[147.99275208 197.00624084]
[140.42552185 184.05491638]
[132.85827637 171.10359192]
[125.29103088 158.15226746]
[117.72378540 145.20094299]
[110.15654755 132.24961853]
[96.93878174 138.51248169]
[80.56190491 138.86709595]
[63.78710175 131.93028259]
[49.90589523 117.61940765]
[42.13664246 97.32424164]
[27.85644722 92.73337555]
[13.57625103 88.14251709]
[-0.70394576 83.55165863]
[-16.20994759 86.69403076]
[-25.95841980 75.43274689]
[-40.23861694 70.84188843]
[-56.14584732 74.82836151]
[-67.35588837 62.85894394]
[-62.33681488 47.24674225]
[-46.25181198 44.05224991]
[-35.64775848 56.56168747]
[-21.36756134 61.15254974]
[-6.88297510 57.68181229]
[3.88691306 69.27146149]
[18.16711044 73.86231995]
[32.44730759 78.45318604]
[46.72750473 83.04404449]
[51.19231796 77.01781464]
[36.97035217 72.24961853]
[37.11037064 57.25027084]
[51.41887283 52.74840927]
[60.12195206 64.96536255]
[64.58676910 58.93913269]
[56.03628540 46.61479950]
[47.48580170 34.29046249]
[38.93531799 21.96612930]
[23.34049988 19.40151787]
[14.19476223 6.51233530]
[16.92410851 -9.05449581]
[29.90926361 -18.06344986]
[45.44636917 -15.16967583]
[54.31753159 -2.08999658]
[51.25965118 13.41564465]
[59.81013489 25.73997879]
[68.36061859 38.06431580]
[76.91110229 50.38864899]
[84.22120667 48.71162033]
[76.51343536 35.84342957]
[86.37000275 24.53643417]
[100.16942596 30.41654968]
[98.84140778 45.35756302]
[106.15150452 43.68053436]
[108.47498322 28.86157799]
[110.79845428 14.04262066]
[113.12192535 -0.77633607]
[115.44539642 -15.59529305]
[117.76886749 -30.41424942]
[110.85934448 -38.82648849]
[109.74715424 -49.43478394]
[114.55960846 -58.70707703]
[123.49115753 -63.68917847]
[126.27437592 -78.42871094]
[118.45620728 -92.43784332]
[124.66754913 -107.22969055]
[140.14358521 -111.45722198]
[153.01242065 -101.87742615]
[153.40219116 -85.83910370]
[141.01390076 -75.64549255]
[138.23068237 -60.90596390]
[145.94694519 -43.18070602]
[132.58782959 -28.09077644]
[130.26435852 -13.27182007]
[127.94087982 1.54713666]
[125.61740875 16.36609268]
[123.29393768 31.18504906]
[120.97046661 46.00400543]
[143.10694885 74.88980865]
[141.40734863 106.06496429]
[123.10787201 124.68237305]
[130.67510986 137.63369751]
[138.24235535 150.58502197]
[145.80960083 163.53634644]
[153.37684631 176.48768616]
[160.94409180 189.43901062]
[168.51132202 202.39033508]
[182.15382385 210.40235901]
[181.89396667 225.29470825]
[189.46121216 238.24603271]
[197.02845764 251.19735718]
[204.59570312 264.14868164]
[212.16293335 277.10000610]
[219.47213745 280.42041016]
[223.47218323 286.42749023]
[223.63304138 292.83572388]
[233.64686584 304.00369263]
[243.66067505 315.17163086]
[253.67449951 326.33959961]
[263.68832397 337.50756836]
[273.70214844 348.67553711]
[283.71597290 359.84347534]
[293.72979736 371.01144409]
[309.27346802 372.02731323]
[319.26980591 383.49588013]
[318.20553589 398.30813599]
[328.21936035 409.47610474]
[351.27029419 408.60379028]
[367.25476074 424.86105347]
[366.02182007 447.35809326]
[377.18978882 457.37191772]
[388.35775757 467.38574219]
[399.52572632 477.39956665]
[428.79251099 469.36187744]
[442.39257812 475.68939209]
[457.08239746 470.50793457]
[470.78466797 477.11871338]
[475.63388062 491.15512085]
[489.23394775 497.48263550]
[498.34213257 498.26672363]
[502.99517822 504.01577759]
[516.49523926 510.55404663]
[529.99523926 517.09228516]
[543.49530029 523.63055420]
[560.38604736 525.09289551]
[563.65673828 541.72833252]
[548.57678223 549.47637939]
[536.95703125 537.13061523]
[523.45697021 530.59234619]
[509.95693970 524.05407715]
[496.45690918 517.51580811]
[482.90643311 511.08273315]
[469.30633545 504.75518799]
[455.44601440 510.08688354]
[441.56344604 503.86361694]
[436.06506348 489.28948975]
[422.46496582 482.96197510]
[412.02459717 493.73223877]
[418.77203369 507.12896729]
[425.51947021 520.52569580]
[432.26687622 533.92242432]
[439.01431274 547.31915283]
[445.67437744 553.58148193]
[445.76068115 560.97711182]
[452.29895020 574.47711182]
[466.16546631 583.23223877]
[465.24630737 599.60559082]
[450.48703003 606.75372314]
[437.07070923 597.32324219]
[438.79888916 581.01538086]
[432.26062012 567.51538086]
[425.61758423 554.06658936]
[418.87014771 540.66986084]
[412.12274170 527.27313232]
[405.37530518 513.87640381]
[398.62789917 500.47967529]
[389.51190186 488.56753540]
[378.34393311 478.55371094]
[367.17596436 468.53988647]
[356.00799561 458.52606201]
[349.22372437 461.74838257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 147]
[9 146]
[12 143]
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[35 133]
[36 132]
[37 131]
[38 130]
[39 129]
[41 127]
[42 126]
[43 125]
[44 124]
[45 123]
[46 122]
[47 121]
[52 69]
[53 68]
[54 67]
[55 66]
[57 64]
[58 63]
[75 88]
[76 87]
[77 86]
[78 85]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[103 111]
[104 110]
[150 200]
[151 199]
[152 198]
[153 197]
[154 177]
[155 176]
[158 173]
[159 172]
[161 171]
[162 170]
[163 169]
[164 168]
[178 196]
[179 195]
[180 194]
[181 193]
[182 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
