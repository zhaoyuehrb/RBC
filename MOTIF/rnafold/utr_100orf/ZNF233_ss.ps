%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCUUGUGUACUUCCGCUGCAGGAGGGCGAAGCAGCCGUCAUCUAUCCCCUCUGGGAGUUCUGCCUUCCCAGGACCCUGCCCUUCCCCAGAAGGAGCAGGAGAAAAUGACCAAGUUUCAGGAGAUGGUGACAUUCAAGGAUGUGGCUGUGGUCUUCACCAGGGAGGAGCUGGGGUUGCUGGACCUUGCCCAGAGAAAGCUGUACC\
) } def
/len { sequence length } bind def

/coor [
[323.04458618 652.65405273]
[316.65377808 639.08361816]
[310.26296997 625.51312256]
[303.87216187 611.94268799]
[297.48135376 598.37219238]
[291.09054565 584.80175781]
[284.69973755 571.23126221]
[279.00415039 566.51776123]
[278.31668091 557.40600586]
[272.13253784 543.74011230]
[259.83627319 535.33471680]
[261.19595337 519.57202148]
[255.01182556 505.90615845]
[248.82769775 492.24026489]
[242.64356995 478.57437134]
[236.45944214 464.90847778]
[230.83605957 460.10906982]
[230.28692627 450.98794556]
[224.31091309 437.22976685]
[218.33488464 423.47161865]
[205.80288696 420.46737671]
[197.16114807 410.64642334]
[195.73365784 397.44711304]
[202.26446533 385.66519165]
[196.49794006 371.81790161]
[190.73139954 357.97061157]
[184.96487427 344.12335205]
[179.19834900 330.27606201]
[173.43180847 316.42880249]
[163.66864014 313.40029907]
[157.04634094 305.32720947]
[155.93951416 294.72351074]
[160.95399475 285.06692505]
[155.61036682 271.05099487]
[150.26675415 257.03509521]
[144.92312622 243.01919556]
[139.57949829 229.00328064]
[134.23587036 214.98738098]
[128.89224243 200.97146606]
[123.57038879 195.83973694]
[123.57564545 186.70208740]
[118.44534302 172.60670471]
[113.31504059 158.51132202]
[108.18473816 144.41592407]
[103.05444336 130.32054138]
[79.07278442 132.09309387]
[56.11421204 114.28691101]
[41.11809921 113.94546509]
[26.12198639 113.60401154]
[11.12587261 113.26256561]
[-2.99153638 121.60707092]
[-17.14196777 113.31868744]
[-16.76867104 96.92378998]
[-2.25566149 89.28804779]
[11.46732044 98.26645660]
[26.46343422 98.60790253]
[41.45954514 98.94934845]
[56.45566177 99.29079437]
[60.17277527 84.75865936]
[46.85449982 77.85768127]
[33.53622055 70.95671082]
[20.21794128 64.05573273]
[6.89966393 57.15475464]
[-6.41861439 50.25378036]
[-21.40467453 55.27309799]
[-35.51316071 48.15085983]
[-40.37375259 33.11257172]
[-33.10275269 19.08017540]
[-18.01391220 14.37884808]
[-4.05917549 21.79780197]
[0.48236108 36.93550110]
[13.80063915 43.83647919]
[27.11891747 50.73745346]
[40.43719482 57.63842773]
[53.75547409 64.53940582]
[67.07375336 71.44038391]
[77.87965393 61.03689194]
[71.48884583 47.46642685]
[65.09803009 33.89595795]
[58.70722580 20.32549286]
[52.31641769 6.75502634]
[45.82281494 -6.76655388]
[39.22679520 -20.23847008]
[32.63077164 -33.71038437]
[26.03475189 -47.18230057]
[19.43873024 -60.65421677]
[5.53483963 -69.34983826]
[6.38385630 -85.72699738]
[21.11238480 -92.93827057]
[34.56897736 -83.56532288]
[32.91064835 -67.25023651]
[39.50666809 -53.77832031]
[46.10268784 -40.30640411]
[52.69870758 -26.83448982]
[59.29473114 -13.36257458]
[65.06118774 -8.73604679]
[65.88687897 0.36421773]
[72.27769470 13.93468475]
[78.66850281 27.50515175]
[85.05931091 41.07561874]
[91.45011902 54.64608383]
[100.97042084 61.69890594]
[107.15464020 70.37778473]
[114.15647888 57.11225510]
[121.15831757 43.84672546]
[113.10078430 30.84582520]
[112.63562775 15.65765858]
[119.78768158 2.36425853]
[132.54798889 -5.51169777]
[147.43696594 -5.94022179]
[154.43881226 -19.20574951]
[161.44065857 -32.47127914]
[168.44248962 -45.73680496]
[164.00451660 -60.66805267]
[171.29435730 -74.02143860]
[185.55636597 -78.16035461]
[192.55819702 -91.42588043]
[191.39578247 -107.78378296]
[205.13063049 -116.74401855]
[219.63352966 -109.08907318]
[219.98512268 -92.69369507]
[205.82373047 -84.42404175]
[198.82188416 -71.15851593]
[203.45153809 -57.04816437]
[196.53964233 -43.49528885]
[181.70802307 -38.73496628]
[174.70617676 -25.46943855]
[167.70434570 -12.20390987]
[160.70249939 1.06161845]
[168.74929810 13.59615803]
[169.44624329 28.57514954]
[162.50614929 41.98042679]
[149.70393372 50.16577911]
[134.42384338 50.84856796]
[127.42200470 64.11409760]
[120.42016602 77.37962341]
[129.64846802 92.95491028]
[128.41300964 111.01660156]
[117.14982605 125.19023895]
[122.28012848 139.28562927]
[127.41043091 153.38101196]
[132.54074097 167.47640991]
[137.67103577 181.57179260]
[142.90815735 195.62783813]
[148.25178528 209.64375305]
[153.59539795 223.65966797]
[158.93902588 237.67556763]
[164.28265381 251.69148254]
[169.62628174 265.70739746]
[174.96990967 279.72329712]
[191.16551208 291.72253418]
[187.27908325 310.66226196]
[193.04562378 324.50955200]
[198.81214905 338.35681152]
[204.57868958 352.20410156]
[210.34521484 366.05136108]
[216.11174011 379.89865112]
[232.40446472 386.26373291]
[238.92588806 402.12991333]
[232.09306335 417.49557495]
[238.06907654 431.25375366]
[244.04508972 445.01193237]
[250.12533569 458.72436523]
[256.30944824 472.39025879]
[262.49359131 486.05612183]
[268.67770386 499.72201538]
[274.86184692 513.38793945]
[287.60043335 522.77081299]
[285.79843140 537.55596924]
[291.98257446 551.22186279]
[298.27020264 564.84045410]
[304.66101074 578.41094971]
[311.05181885 591.98138428]
[317.44262695 605.55187988]
[323.83343506 619.12231445]
[330.22424316 632.69281006]
[336.61505127 646.26324463]
[345.74453735 653.00445557]
[346.64349365 663.03973389]
[355.57040405 675.09423828]
[364.49731445 687.14868164]
[373.42422485 699.20312500]
[389.04293823 699.97119141]
[400.47866821 710.63696289]
[402.33181763 726.16436768]
[393.72735596 739.22180176]
[378.72808838 743.64404297]
[364.41619873 737.34295654]
[357.54931641 723.29376221]
[361.36978149 708.13006592]
[352.44284058 696.07562256]
[343.51593018 684.02111816]
[334.58901978 671.96667480]
[335.50177002 686.93884277]
[330.78842163 701.17907715]
[321.12326050 712.65014648]
[307.88900757 719.71093750]
[292.97897339 721.35131836]
[278.52621460 717.33666992]
[266.59832764 708.24133301]
[258.90176392 695.36645508]
[256.53756714 680.55389404]
[259.84402466 665.92285156]
[268.34802246 653.56640625]
[280.83303833 645.25231934]
[295.51293945 642.16998291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[9 170]
[10 169]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[18 162]
[19 161]
[20 160]
[24 157]
[25 156]
[26 155]
[27 154]
[28 153]
[29 152]
[33 150]
[34 149]
[35 148]
[36 147]
[37 146]
[38 145]
[39 144]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[47 58]
[48 57]
[49 56]
[50 55]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[103 136]
[104 135]
[105 134]
[110 129]
[111 128]
[112 127]
[113 126]
[116 123]
[117 122]
[179 193]
[180 192]
[181 191]
[182 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
