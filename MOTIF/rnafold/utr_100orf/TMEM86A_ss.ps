%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGGGCUAGCUGACAGAACCCCGGCGCCGGGCGCUCGGGAGGUAUUGUCCGUCCCUCCGGGCUUUGUAGAAUCGUCGCCGGCUUACCUGGCCGUGGGCGCGUCCUGGCCGCUGCAGCCCGGAGCAGGGUGCCAGCCGCCGCCGCCGCCGCCAUGGUGUCCCCGGUCACUGUGGUGAAGAGUGAAGGACCCAAACUGGUGCCGUUCUUCAAGGCCACCUGCGUGUAUUUUGUGCUCUGGCUGCCCUCAUCUA\
) } def
/len { sequence length } bind def

/coor [
[106.48059082 339.69580078]
[96.41896820 328.57089233]
[92.60516357 314.06253052]
[87.84608459 328.28753662]
[83.08700562 342.51257324]
[78.32792664 356.73757935]
[89.58467865 366.99453735]
[95.69040680 380.94589233]
[95.58724976 396.17446899]
[89.29308319 410.04180908]
[77.89841461 420.14532471]
[63.37742615 424.73455811]
[48.24597549 423.01434326]
[35.12567902 415.28271484]
[26.28970528 402.87927246]
[23.26893997 387.95297241]
[26.58674812 373.08984375]
[35.66830063 360.86508179]
[48.94016647 353.39663696]
[64.10290527 351.97848511]
[68.86198425 337.75347900]
[73.62106323 323.52847290]
[78.38014221 309.30343628]
[82.15737915 294.78680420]
[84.93515778 280.04626465]
[87.71293640 265.30569458]
[90.39914703 250.54818726]
[92.99367523 235.77427673]
[95.58821106 221.00036621]
[98.18273926 206.22645569]
[100.77727509 191.45254517]
[103.28002930 176.66281128]
[105.69091034 161.85783386]
[108.10179138 147.05284119]
[110.51268005 132.24786377]
[104.60769653 127.62387848]
[92.79773712 118.37591553]
[86.89275360 113.75193024]
[73.09774780 119.64241028]
[59.30274200 125.53289032]
[45.50773239 131.42337036]
[31.74956512 137.39939880]
[18.02876282 143.46070862]
[12.55672932 158.28746033]
[-1.83144343 164.82626343]
[-16.59950638 159.19778442]
[-22.98583031 144.74128723]
[-17.20152283 130.03355408]
[-2.67831063 123.80043030]
[11.96744251 129.73991394]
[25.68824387 123.67858887]
[30.52350998 118.11603546]
[39.61725235 117.62836456]
[53.41225815 111.73788452]
[67.20726776 105.84740448]
[81.00227356 99.95692444]
[82.95246887 85.08423615]
[71.14250946 75.83627319]
[59.33255005 66.58831024]
[47.52259064 57.34035110]
[35.71262741 48.09238815]
[23.90266800 38.84442139]
[12.09270668 29.59646034]
[0.28274614 20.34849739]
[-6.15621567 19.05310631]
[-10.35992336 15.27927017]
[-11.70188713 10.72131348]
[-23.27855873 1.18293464]
[-34.85523224 -8.35544395]
[-46.43190384 -17.89382172]
[-53.07522964 -13.77748680]
[-60.99436569 -11.84867859]
[-69.45587921 -12.49676704]
[-77.61089325 -15.86222744]
[-84.58005524 -21.80394745]
[-89.54706573 -29.89554024]
[-91.85101318 -39.45262909]
[-104.41921997 -47.64043045]
[-116.98743439 -55.82823181]
[-125.85975647 -57.88148499]
[-129.65998840 -64.19654083]
[-142.12556458 -72.53977203]
[-154.59114075 -80.88300323]
[-167.05671692 -89.22623444]
[-183.01000977 -87.53160858]
[-194.17866516 -99.04859161]
[-191.99502563 -114.94234467]
[-178.13420105 -123.02053070]
[-163.22903442 -117.08626556]
[-158.71348572 -101.69181061]
[-146.24790955 -93.34857941]
[-133.78233337 -85.00534821]
[-121.31676483 -76.66211700]
[-108.79962921 -68.39643860]
[-96.23142242 -60.20864105]
[-83.66320801 -52.02083969]
[-73.02373505 -62.59446335]
[-81.13334656 -75.21326447]
[-89.24295807 -87.83206940]
[-104.74182892 -88.58344269]
[-116.81792450 -98.32754517]
[-120.82773590 -113.31758118]
[-115.22940826 -127.78956604]
[-102.17561340 -136.17872620]
[-86.68579865 -135.25926208]
[-74.71612549 -125.38473511]
[-70.86916351 -110.35208130]
[-76.62415314 -95.94168091]
[-68.51454163 -83.32287598]
[-60.40493011 -70.70407867]
[-36.39830780 -54.70977402]
[-36.89352417 -29.47049522]
[-25.31685257 -19.93211555]
[-13.74018097 -10.39373779]
[-2.16350865 -0.85535908]
[9.53070927 8.53853607]
[21.34066963 17.78649902]
[33.15063095 27.03446198]
[44.96059036 36.28242493]
[56.77055359 45.53038788]
[68.58051300 54.77835083]
[80.39047241 64.02631378]
[92.20043945 73.27427673]
[107.09619141 75.03964996]
[120.74066925 68.80842590]
[134.38514709 62.57720184]
[148.02963257 56.34597397]
[161.67410278 50.11474991]
[167.27539062 35.57984924]
[181.20159912 29.45487213]
[195.02389526 34.88441467]
[208.66836548 28.65319061]
[222.31285095 22.42196465]
[219.24583435 -2.42800617]
[243.41877747 -25.62793922]
[248.87823486 -39.59913254]
[246.69439697 -55.26889038]
[258.53329468 -64.30713654]
[263.99276733 -78.27832794]
[260.99105835 -94.40041351]
[273.62652588 -104.85395813]
[288.90090942 -98.88525391]
[291.10119629 -82.63438416]
[277.96395874 -72.81885529]
[272.50448608 -58.84766388]
[275.07882690 -44.17721939]
[262.84942627 -34.13966370]
[257.38995361 -20.16847229]
[269.48126221 -11.29152679]
[281.17550659 -20.68542099]
[292.86972046 -30.07931709]
[304.56393433 -39.47321320]
[316.25814819 -48.86710739]
[327.95236206 -58.26100159]
[339.64657593 -67.65489960]
[351.34078979 -77.04878998]
[363.03503418 -86.44268799]
[374.72924805 -95.83657837]
[373.84359741 -111.32836151]
[382.26123047 -124.36380768]
[396.74542236 -129.93052673]
[411.72665405 -125.88800812]
[421.44436646 -113.79066467]
[422.16189575 -98.29019165]
[413.60336304 -85.34682465]
[399.05963135 -79.93756104]
[384.12313843 -84.14236450]
[372.42892456 -74.74846649]
[360.73471069 -65.35457611]
[349.04046631 -55.96067810]
[337.34625244 -46.56678391]
[325.65203857 -37.17288971]
[313.95782471 -27.77899361]
[302.26361084 -18.38509941]
[290.56939697 -8.99120331]
[278.87518311 0.40269157]
[280.80880737 7.64913988]
[293.39733887 -0.50740308]
[305.04470825 8.94449806]
[299.65463257 22.94260788]
[284.67611694 22.14203644]
[286.60974121 29.38848495]
[301.42941284 31.70740318]
[316.24908447 34.02632141]
[331.06875610 36.34523773]
[345.88842773 38.66415787]
[360.70809937 40.98307419]
[375.52777100 43.30199432]
[390.34744263 45.62091064]
[405.22012329 47.57110977]
[420.13665771 49.15138245]
[435.05319214 50.73165894]
[451.44116211 46.38764954]
[460.15203857 60.93263626]
[448.58688354 73.32955933]
[433.47290039 65.64818573]
[418.55636597 64.06790924]
[403.63986206 62.48763275]
[401.38946533 64.11592102]
[398.36703491 64.96318817]
[394.86248779 64.73411560]
[391.26608276 63.24209595]
[388.02853394 60.44057846]
[373.20886230 58.12166214]
[358.38919067 55.80274582]
[343.56951904 53.48382568]
[328.74984741 51.16490936]
[313.93017578 48.84599304]
[299.11050415 46.52707291]
[284.29083252 44.20815659]
[248.78918457 54.46471786]
[228.54408264 36.06644440]
[214.89959717 42.29766846]
[201.25511169 48.52889633]
[196.30682373 62.53067780]
[182.55813599 69.04439545]
[167.90533447 63.75923157]
[154.26084900 69.99045563]
[140.61637878 76.22167969]
[126.97189331 82.45290375]
[113.32741547 88.68412781]
[128.28898621 89.75722504]
[143.12765503 87.56323242]
[157.29762268 92.48381042]
[167.58296204 103.40222931]
[171.64936829 117.84052277]
[168.57397461 132.52186584]
[159.05476379 144.11430359]
[145.25212097 149.98686218]
[130.29980469 148.80717468]
[125.31766510 134.65873718]
[122.90678406 149.46372986]
[120.49589539 164.26870728]
[118.08501434 179.07369995]
[119.79206085 188.01908875]
[115.55118561 194.04708862]
[112.95664978 208.82099915]
[110.36212158 223.59490967]
[107.76758575 238.36880493]
[105.17305756 253.14271545]
[106.76889801 262.10861206]
[102.45349121 268.08349609]
[99.67571259 282.82403564]
[96.89793396 297.56460571]
[107.29837799 286.75576782]
[121.50606537 281.94522095]
[136.33378601 284.21209717]
[148.45521545 293.04785156]
[155.15113831 306.47039795]
[154.91946411 321.46862793]
[147.81214905 334.67791748]
[135.42358398 343.13510132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[5 21]
[6 20]
[24 244]
[25 243]
[26 242]
[27 240]
[28 239]
[29 238]
[30 237]
[31 236]
[32 234]
[33 233]
[34 232]
[35 231]
[38 56]
[39 55]
[40 54]
[41 53]
[42 51]
[43 50]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[62 118]
[63 117]
[64 116]
[67 115]
[68 114]
[69 113]
[70 112]
[77 96]
[78 95]
[79 94]
[81 93]
[82 92]
[83 91]
[84 90]
[97 110]
[98 109]
[99 108]
[124 221]
[125 220]
[126 219]
[127 218]
[128 217]
[131 214]
[132 213]
[133 212]
[135 148]
[136 147]
[138 145]
[139 144]
[149 176]
[150 175]
[151 174]
[152 173]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[182 210]
[183 209]
[184 208]
[185 207]
[186 206]
[187 205]
[188 204]
[189 203]
[190 198]
[191 197]
[192 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
