%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGGCUGGGGCUGGGGGCGGCGGCGGCGGCGACGCGGGCGGCGGGCGGCGCGGGGCGGUCCGGCGGGUUCAAAGAGGAAAACAUGGCGGAAAACAAAGGCGGCGGCGAGGCUGAGAGCGGCGGCGGGGGCAGCGGCAGCGCGCCGGUAACUGCCGGGGCCGCCGGGCCCGCCGCGCAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[134.89546204 627.30487061]
[147.02195740 617.76800537]
[145.49626160 602.84576416]
[143.97056580 587.92358398]
[142.44485474 573.00134277]
[140.91915894 558.07916260]
[139.39346313 543.15698242]
[135.57659912 536.80804443]
[137.97076416 527.96875000]
[136.69866943 513.02276611]
[135.42658997 498.07681274]
[126.63780975 486.05154419]
[133.17689514 471.64492798]
[131.90481567 456.69897461]
[130.63272095 441.75299072]
[129.36062622 426.80703735]
[120.57186127 414.78176880]
[127.11094666 400.37515259]
[125.83885956 385.42919922]
[124.56677246 370.48324585]
[113.04937744 361.10852051]
[111.54638672 345.96929932]
[121.45753479 333.95236206]
[120.18544769 319.00640869]
[118.91336060 304.06045532]
[117.64126587 289.11447144]
[116.36917877 274.16851807]
[115.09709167 259.22256470]
[113.31822205 244.32841492]
[111.03462219 229.50326538]
[108.75102234 214.67810059]
[106.46742249 199.85295105]
[104.18382263 185.02780151]
[100.04861450 178.88150024]
[101.98954773 169.93171692]
[99.95801544 155.06993103]
[97.92649078 140.20812988]
[82.47668457 136.24812317]
[69.77676392 126.59979248]
[61.81969452 112.77722931]
[59.85416412 96.94956970]
[45.37078476 93.04678345]
[30.03277588 96.92698669]
[19.75698280 86.14472198]
[5.27360439 82.24193573]
[-9.20977497 78.33914948]
[-23.69315338 74.43636322]
[-38.17653275 70.53357697]
[-53.51454163 74.41378784]
[-63.79033279 63.63151550]
[-78.27371216 59.72872925]
[-92.83995056 66.45213318]
[-107.11321259 59.12727737]
[-110.14427185 43.37315750]
[-99.60795593 31.27499199]
[-83.58683014 32.11345673]
[-74.37092590 45.24534988]
[-59.88755035 49.14813614]
[-45.58548737 44.98877335]
[-34.27374649 56.05019760]
[-19.79036713 59.95298386]
[-5.30698919 63.85577011]
[9.17638969 67.75855255]
[23.65976906 71.66133881]
[37.96183014 67.50197601]
[49.27357101 78.56340027]
[63.75695038 82.46618652]
[56.61252213 71.49235535]
[51.87673187 58.46595001]
[49.94711304 43.84838867]
[41.75973129 31.27990341]
[33.57235336 18.71141815]
[18.05897141 15.69304085]
[9.29306602 2.54258680]
[12.47529125 -12.93801403]
[25.71768951 -21.56439400]
[41.16378021 -18.21867752]
[49.64967346 -4.88581657]
[46.14083481 10.52403831]
[54.32821655 23.09252357]
[62.51559448 35.66100693]
[69.66793823 33.40402603]
[65.15419769 19.09926796]
[79.45903015 14.58574867]
[83.97263336 28.89006615]
[91.12497711 26.63308525]
[90.61562347 11.64173603]
[77.68465424 3.06446433]
[72.29643250 -11.48705387]
[76.52284241 -26.41746330]
[88.73873901 -35.98571396]
[104.24686432 -36.51262283]
[117.08403015 -27.79557800]
[122.31407928 -13.18646526]
[117.92595673 1.69721675]
[105.60697937 11.13238716]
[106.11632538 26.12373734]
[113.37432098 28.01357269]
[117.15422058 13.49763584]
[131.67008972 17.27775574]
[127.89031982 31.79324341]
[135.14831543 33.68307877]
[142.90419006 20.84382629]
[150.66006470 8.00457287]
[158.41593933 -4.83467960]
[154.38586426 -20.11649895]
[162.41412354 -33.72982407]
[177.73768616 -37.59811020]
[191.26538086 -29.42636871]
[194.97143555 -14.06275463]
[186.65713501 -0.62222302]
[171.25518799 2.92119527]
[163.49931335 15.76044750]
[155.74343872 28.59970093]
[147.98756409 41.43895340]
[152.74859619 47.23400497]
[167.54689026 44.78241348]
[162.27064514 58.82411194]
[167.03166199 64.61916351]
[181.13189697 59.50216293]
[191.46481323 47.52128220]
[206.06808472 50.45276260]
[220.16830444 45.33576202]
[230.50122070 33.35488129]
[245.10449219 36.28636169]
[259.20471191 31.16935921]
[269.33782959 18.27547455]
[285.53018188 20.87157822]
[291.12448120 36.28702164]
[280.36578369 48.66371536]
[264.32171631 45.26958466]
[250.22149658 50.38658524]
[240.89712524 62.00146103]
[225.28530884 59.43598557]
[211.18508911 64.55298615]
[201.86071777 76.16786194]
[186.24890137 73.60238647]
[172.14866638 78.71938324]
[151.20657349 126.68295288]
[112.78828430 138.17660522]
[114.81980896 153.03839111]
[116.85134125 167.90019226]
[119.00897980 182.74420166]
[121.29257965 197.56935120]
[123.57617950 212.39450073]
[125.85977936 227.21966553]
[128.14337158 242.04481506]
[131.01753235 245.36848450]
[132.51910400 249.06436157]
[132.70094299 252.65074158]
[131.76828003 255.71353149]
[130.04306030 257.95046997]
[131.31513977 272.89642334]
[132.58723450 287.84240723]
[133.85931396 302.78836060]
[135.13140869 317.73431396]
[136.40350342 332.68026733]
[148.20295715 342.84936523]
[149.28012085 358.02484131]
[139.51272583 369.21115112]
[140.78482056 384.15710449]
[142.05691528 399.10305786]
[150.93667603 412.19735718]
[144.30659485 425.53494263]
[145.57868958 440.48089600]
[146.85076904 455.42687988]
[148.12286377 470.37283325]
[157.00262451 483.46713257]
[150.37254333 496.80471802]
[151.64463806 511.75067139]
[152.91671753 526.69665527]
[154.31567383 541.63128662]
[155.84136963 556.55346680]
[157.36706543 571.47564697]
[158.89276123 586.39788818]
[160.41847229 601.32006836]
[161.94416809 616.24230957]
[175.74974060 623.12774658]
[183.62150574 636.39569092]
[183.04763794 651.81237793]
[174.21122742 664.45843506]
[159.93196106 670.29846191]
[144.76628113 667.46899414]
[133.55352783 656.87286377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[5 174]
[6 173]
[7 172]
[9 171]
[10 170]
[11 169]
[13 167]
[14 166]
[15 165]
[16 164]
[18 162]
[19 161]
[20 160]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[28 152]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[35 142]
[36 141]
[37 140]
[41 67]
[42 66]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[50 58]
[51 57]
[70 81]
[71 80]
[72 79]
[86 97]
[87 96]
[102 115]
[103 114]
[104 113]
[105 112]
[119 138]
[120 137]
[122 135]
[123 134]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
