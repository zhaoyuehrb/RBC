%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGUCAUCGCUGCGCGACGACAGGAAGUAAGAUCCUGGCCUGUGCAGCUCGGGUUUCCGAGCUUCUGCCUCAGGCAUCUCCGCGAUCUCCUCUCCCCUCCAAUCCUAUCCGUGAUGGACGAUGCCCACGAGUCGCCCUCCGACAAAGGUGGAGAGACAGGGGAGUCGGAUGAGACGGCCGCUGUGCCCGGGGACCCGGGGGCUACCGACACCG\
) } def
/len { sequence length } bind def

/coor [
[56.36532593 187.81028748]
[56.30148697 172.00613403]
[67.49073792 160.84475708]
[67.27156067 145.84635925]
[67.05239105 130.84796143]
[66.83321381 115.84956360]
[59.99656677 112.76570129]
[47.81869125 121.52352142]
[46.32326126 106.59798431]
[39.48661041 103.51412201]
[28.09833336 113.27665710]
[16.71005630 123.03919220]
[5.32177973 132.80172729]
[-6.06649780 142.56427002]
[-17.45477486 152.32681274]
[-28.84305191 162.08934021]
[-40.23133087 171.85188293]
[-38.10552597 185.46894836]
[-42.94659042 198.25708008]
[-53.39031219 206.91458130]
[-66.64112854 209.26292419]
[-79.21997070 204.79412842]
[-90.74967957 214.38922119]
[-102.27938843 223.98432922]
[-113.80909729 233.57942200]
[-125.33880615 243.17451477]
[-125.22133636 258.81164551]
[-135.22251892 270.83291626]
[-150.62007141 273.56219482]
[-164.14376831 265.71084595]
[-169.40812683 250.98602295]
[-163.92745972 236.34033203]
[-150.28959656 228.68901062]
[-134.93389893 231.64480591]
[-123.40419006 222.04971313]
[-111.87448120 212.45462036]
[-100.34477997 202.85952759]
[-88.81507111 193.26441956]
[-90.41728973 176.92564392]
[-81.87854004 162.70951843]
[-66.39479828 156.32182312]
[-49.99386597 160.46360779]
[-38.60559082 150.70106506]
[-27.21731186 140.93853760]
[-15.82903576 131.17599487]
[-4.44075823 121.41345978]
[6.94751883 111.65091705]
[18.33579636 101.88838196]
[29.72407341 92.12584686]
[98.78002930 85.96594238]
[105.92938995 72.77932739]
[113.07874298 59.59271622]
[120.22809601 46.40610504]
[127.37744904 33.21949005]
[134.52680969 20.03287888]
[141.67616272 6.84626770]
[148.82551575 -6.34034395]
[155.97486877 -19.52695656]
[163.12422180 -32.71356964]
[170.27357483 -45.90018082]
[170.04914856 -61.71979523]
[182.91717529 -69.22065735]
[190.06652832 -82.40726471]
[183.21656799 -94.36642456]
[183.16987610 -108.04011536]
[189.83175659 -119.85717773]
[201.36933899 -126.78417206]
[214.71456909 -127.10380554]
[222.05583191 -140.18453979]
[221.84927368 -144.51489258]
[222.92190552 -148.30543518]
[224.94743347 -151.22067261]
[227.52421570 -153.06532288]
[230.22737122 -153.79676819]
[238.32020569 -166.42633057]
[246.41305542 -179.05589294]
[246.83901978 -197.46652222]
[262.73178101 -204.91183472]
[270.63922119 -217.65830994]
[278.54666138 -230.40476990]
[286.45410156 -243.15122986]
[282.15286255 -260.10910034]
[291.26867676 -274.64404297]
[307.74566650 -278.01953125]
[315.46600342 -290.88015747]
[323.18634033 -303.74081421]
[324.91925049 -312.70620728]
[331.11465454 -316.73178101]
[339.02209473 -329.47827148]
[346.92953491 -342.22473145]
[354.83697510 -354.97119141]
[362.74441528 -367.71765137]
[370.65185547 -380.46411133]
[378.55929565 -393.21057129]
[371.95968628 -408.78588867]
[375.90603638 -425.06393433]
[388.65020752 -435.67498779]
[405.04193115 -436.58856201]
[412.76229858 -449.44921875]
[420.48263550 -462.30984497]
[428.20300293 -475.17050171]
[435.92333984 -488.03112793]
[436.41726685 -494.61923218]
[439.67367554 -499.27212524]
[444.06185913 -501.15008545]
[452.15469360 -513.77966309]
[460.24755859 -526.40924072]
[453.87622070 -542.07928467]
[458.05999756 -558.29797363]
[470.95788574 -568.72161865]
[487.36117554 -569.39562988]
[495.26864624 -582.14208984]
[497.13235474 -591.08117676]
[503.38589478 -595.01580811]
[511.47872925 -607.64538574]
[512.40966797 -623.43920898]
[525.79089355 -629.98071289]
[533.88372803 -642.61029053]
[535.87786865 -651.52124023]
[542.18823242 -655.36407471]
[550.46472168 -667.87402344]
[558.74127197 -680.38403320]
[567.01776123 -692.89398193]
[561.45471191 -707.37957764]
[565.50103760 -722.35980225]
[577.60083008 -732.07446289]
[593.10144043 -732.78808594]
[606.04266357 -724.22625732]
[611.44824219 -709.68115234]
[607.23968506 -694.74572754]
[595.03521729 -685.16290283]
[579.52777100 -684.61743164]
[571.25122070 -672.10748291]
[562.97473145 -659.59753418]
[554.69818115 -647.08758545]
[546.51330566 -634.51745605]
[538.42047119 -621.88787842]
[538.06835938 -606.99743652]
[524.10827637 -599.55255127]
[516.01544189 -586.92297363]
[508.01510620 -574.23461914]
[500.10766602 -561.48815918]
[506.27398682 -549.64868164]
[505.78173828 -536.20037842]
[498.65258789 -524.65917969]
[486.65734863 -518.09521484]
[472.87710571 -518.31640625]
[464.78427124 -505.68682861]
[456.69143677 -493.05725098]
[448.78399658 -480.31079102]
[441.06362915 -467.45013428]
[433.34329224 -454.58950806]
[425.62292480 -441.72885132]
[417.90258789 -428.86819458]
[424.24124146 -417.12005615]
[423.94555664 -403.66601562]
[416.98580933 -392.02188110]
[405.08773804 -385.28335571]
[391.30575562 -385.30313110]
[383.39831543 -372.55667114]
[375.49087524 -359.81021118]
[367.58343506 -347.06375122]
[359.67599487 -334.31729126]
[351.76855469 -321.57083130]
[343.86111450 -308.82434082]
[336.04699707 -296.02044678]
[328.32666016 -283.15982056]
[320.60629272 -270.29916382]
[325.44668579 -258.35952759]
[322.48315430 -245.62167358]
[312.57919312 -236.78569031]
[299.20056152 -235.24378967]
[291.29312134 -222.49732971]
[283.38568115 -209.75086975]
[275.47824097 -197.00439453]
[277.93154907 -185.16117859]
[271.45059204 -174.47789001]
[259.04260254 -170.96305847]
[250.94976807 -158.33348083]
[242.85693359 -145.70391846]
[235.13658142 -132.84327698]
[227.79530334 -119.76253510]
[235.12852478 -105.07421112]
[232.23162842 -88.74582672]
[220.05145264 -77.24834442]
[203.25314331 -75.25791168]
[196.10379028 -62.07130051]
[196.83959961 -47.19488144]
[183.46018982 -38.75082397]
[176.31083679 -25.56421280]
[169.16148376 -12.37760162]
[162.01213074 0.80901009]
[154.86276245 13.99562168]
[147.71340942 27.18223381]
[140.56405640 40.36884689]
[133.41470337 53.55545807]
[126.26535034 66.74207306]
[119.11599731 79.92868042]
[111.96664429 93.11529541]
[110.76244354 108.06687927]
[115.70924377 122.22771454]
[128.48014832 132.51538086]
[125.68919373 148.67529297]
[110.20748901 154.08351135]
[97.96127319 143.17652893]
[101.54840851 127.17450714]
[96.60161591 113.01367188]
[81.83161926 115.63038635]
[82.05078888 130.62878418]
[82.26995850 145.62718201]
[82.48913574 160.62557983]
[93.99974060 171.45524597]
[94.39772797 187.25451660]
[83.44697571 198.64997864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 211]
[4 210]
[5 209]
[6 208]
[10 49]
[11 48]
[12 47]
[13 46]
[14 45]
[15 44]
[16 43]
[17 42]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[50 199]
[51 198]
[52 197]
[53 196]
[54 195]
[55 194]
[56 193]
[57 192]
[58 191]
[59 190]
[60 189]
[62 187]
[63 186]
[68 182]
[69 181]
[74 180]
[75 179]
[76 178]
[78 175]
[79 174]
[80 173]
[81 172]
[84 168]
[85 167]
[86 166]
[88 165]
[89 164]
[90 163]
[91 162]
[92 161]
[93 160]
[94 159]
[98 154]
[99 153]
[100 152]
[101 151]
[102 150]
[105 149]
[106 148]
[107 147]
[111 142]
[112 141]
[114 140]
[115 139]
[117 137]
[118 136]
[120 135]
[121 134]
[122 133]
[123 132]
[200 207]
[201 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
