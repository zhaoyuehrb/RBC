%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUGCGGAACGCGAGGGGCGAGCGCGAGGGAGCCCCCCUCCGGAACCCCUGCCCACCCCCGGAGCGCCGGCAGCGGCGGCCCCGCGAGGAUCGGCUCCAGGAGAUGAUAGAAAGUGACACCUCAUCCAUAAUGUCAGGAAUUAUUCGAAACUCAGGGCAAAAUCACCACCCCUCUCCACAGGAAUACAGGCUUCUAGCCACCA\
) } def
/len { sequence length } bind def

/coor [
[117.03729248 348.69219971]
[121.62659454 335.16189575]
[130.18348694 323.69351196]
[141.88177490 315.41647339]
[137.59596252 301.04177856]
[133.31015015 286.66711426]
[122.25894928 276.68109131]
[125.73071289 261.24551392]
[121.44490051 246.87081909]
[117.15908813 232.49612427]
[114.75582123 231.04579163]
[112.78343201 228.55422974]
[111.64208984 225.18119812]
[111.66662598 221.22850037]
[113.07909393 217.11309814]
[109.67758942 202.50386047]
[106.27609253 187.89462280]
[102.87458801 173.28540039]
[99.47308350 158.67616272]
[96.07158661 144.06692505]
[81.57287598 140.22148132]
[71.37827301 151.22465515]
[68.27031708 167.32659912]
[52.68532562 172.42956543]
[40.65580368 161.28404236]
[44.55669022 145.35560608]
[60.37508774 141.03005981]
[70.56968689 130.02687073]
[63.90459824 117.73996735]
[61.87406540 104.52668762]
[64.31674957 92.00363922]
[50.66364670 85.79133606]
[37.01054001 79.57904053]
[23.35743523 73.36673737]
[9.70432949 67.15443420]
[-3.94877601 60.94213104]
[-20.21345711 67.37746429]
[-35.79421997 60.20167542]
[-41.25644684 44.29748917]
[-55.00270462 38.29411697]
[-68.74895477 32.29074478]
[-82.49521637 26.28737450]
[-96.28684235 20.38899422]
[-110.12305450 14.59594822]
[-123.95925903 8.80290318]
[-138.43611145 14.55254269]
[-152.38546753 8.48046875]
[-157.77766418 -5.35643530]
[-171.61386108 -11.14948082]
[-187.33151245 -9.34215736]
[-196.08314514 -21.39446068]
[-209.91935730 -27.18750572]
[-223.75555420 -32.98055267]
[-237.59176636 -38.77359772]
[-245.12779236 -32.64898300]
[-254.32240295 -29.70955086]
[-263.89813232 -30.31939888]
[-272.54058838 -34.35252762]
[-279.07894897 -41.21597672]
[-282.64447021 -49.93661880]
[-282.78576660 -59.29901886]
[-296.24307251 -65.92479706]
[-309.70037842 -72.55058289]
[-323.15768433 -79.17636108]
[-339.47637939 -77.55409241]
[-348.81954956 -91.03137207]
[-341.57574463 -105.74392700]
[-325.19677734 -106.55673981]
[-316.53189087 -92.63366699]
[-303.07458496 -86.00788879]
[-289.61727905 -79.38210297]
[-276.15997314 -72.75632477]
[-257.43606567 -80.94609833]
[-238.48545837 -72.54222870]
[-231.79872131 -52.60980606]
[-217.96250916 -46.81675720]
[-204.12631226 -41.02371216]
[-190.29010010 -35.23066711]
[-175.56211853 -37.45235062]
[-165.82081604 -24.98568726]
[-151.98461914 -19.19264221]
[-138.34245300 -25.06010628]
[-124.22805023 -19.38223648]
[-118.16621399 -5.03330374]
[-104.33000946 0.75974172]
[-90.49379730 6.55278730]
[-83.10694885 6.23620224]
[-76.49184418 12.54111958]
[-62.74558640 18.54449081]
[-48.99933243 24.54786301]
[-35.25307465 30.55123520]
[-24.03059959 24.21526146]
[-11.01373577 25.52061462]
[-0.97855091 34.21358109]
[2.26352644 47.28902435]
[15.91663265 53.50132751]
[29.56973839 59.71363068]
[43.22284317 65.92593384]
[56.87594986 72.13823700]
[70.52905273 78.35053253]
[84.77812958 66.75048065]
[102.87010193 63.54457092]
[120.23749542 69.54216766]
[130.92466736 59.01675034]
[141.61183167 48.49133301]
[146.09062195 28.83938217]
[164.99473572 24.78554344]
[175.35595703 13.93910503]
[185.71716309 3.09266663]
[178.58064270 -11.14992619]
[176.75489807 -26.94846153]
[180.44233704 -42.39116669]
[189.17939758 -55.61565018]
[201.89462280 -65.03351593]
[217.04011536 -69.52113342]
[232.77993774 -68.55367279]
[247.21261597 -62.26641464]
[257.40722656 -73.26959991]
[267.60183716 -84.27278137]
[277.79641724 -95.27597046]
[287.99102783 -106.27915192]
[282.35656738 -120.46419525]
[283.44329834 -135.68856812]
[291.03549194 -148.92947388]
[303.62567139 -157.55792236]
[318.71408081 -159.86070251]
[333.30487061 -155.38061523]
[344.50106812 -145.00718689]
[350.07965088 -130.80006409]
[348.93295288 -115.58008575]
[341.28869629 -102.36918640]
[328.66461182 -93.79039764]
[313.56726074 -91.54704285]
[298.99423218 -96.08454895]
[288.79962158 -85.08136749]
[278.60501099 -74.07817841]
[268.41040039 -63.07499313]
[258.21582031 -52.07181168]
[265.06298828 -39.67885208]
[267.75158691 -25.75588417]
[266.00561523 -11.66198730]
[259.98269653 1.22290957]
[250.25981140 11.63312340]
[237.77813721 18.54154968]
[223.75189209 21.26099014]
[209.55021667 19.51248741]
[196.56359863 13.45388126]
[186.20239258 24.30031967]
[175.84117126 35.14675903]
[176.99270630 45.30478668]
[172.26167297 54.61431503]
[162.99592590 59.88985062]
[152.13725281 59.17850494]
[141.45008850 69.70391846]
[130.76290894 80.22933960]
[135.34614563 90.62525177]
[136.51747131 101.92610168]
[151.01618958 105.77154541]
[162.33564758 95.28951263]
[177.52919006 92.61372375]
[191.74861145 98.59803009]
[200.45652771 111.33285522]
[200.87428284 126.75456238]
[192.86857605 139.94213867]
[178.99398804 146.68748474]
[163.67787170 144.83818054]
[151.80752563 134.98432922]
[147.17073059 120.27025604]
[132.67202759 116.42481232]
[124.74353027 130.54104614]
[110.68081665 140.66542053]
[114.08232117 155.27465820]
[117.48382568 169.88389587]
[120.88533020 184.49313354]
[124.28682709 199.10235596]
[127.68833160 213.71159363]
[131.53378296 228.21031189]
[135.81959534 242.58500671]
[140.10540771 256.95968628]
[151.46315002 267.97387695]
[147.68484497 282.38128662]
[151.97065735 296.75598145]
[156.25646973 311.13067627]
[172.16375732 311.99072266]
[186.79049683 318.23455811]
[198.37588501 329.09057617]
[205.53208923 343.23312378]
[207.41047668 358.94442749]
[203.80224609 374.32315063]
[195.16143799 387.51461792]
[182.54788208 396.93429565]
[187.05241394 411.24197388]
[191.55694580 425.54962158]
[196.06146240 439.85729980]
[206.58525085 453.14962769]
[196.72566223 466.94183350]
[180.74305725 461.28561401]
[181.75379944 444.36181641]
[177.24928284 430.05413818]
[172.74475098 415.74649048]
[168.24021912 401.43881226]
[154.08283997 401.24414062]
[140.65753174 396.67922974]
[129.28147888 388.17794800]
[121.07512665 376.56106567]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[8 179]
[9 178]
[10 177]
[15 176]
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 28]
[22 27]
[31 100]
[32 99]
[33 98]
[34 97]
[35 96]
[36 95]
[39 91]
[40 90]
[41 89]
[42 88]
[43 86]
[44 85]
[45 84]
[48 81]
[49 80]
[51 78]
[52 77]
[53 76]
[54 75]
[61 72]
[62 71]
[63 70]
[64 69]
[103 155]
[104 154]
[105 153]
[107 149]
[108 148]
[109 147]
[117 138]
[118 137]
[119 136]
[120 135]
[121 134]
[157 169]
[158 168]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
