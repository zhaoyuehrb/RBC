%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGUCCGGGGCGGGGCCUGAGUGCGCCUGCGCAGUCCGCGCCACUCAGGGAGCCGGAGGGGACGCGCCGGAGGAAAGAUGGAAGACUACCAGGCUGCGGAGGAGACUGCUUUUGUUGUUGAUGAAGUGAGCAACAUUGUAAAAGAGGCUAUAGAAAGCGCAAUUGGUGGUAACGCUU\
) } def
/len { sequence length } bind def

/coor [
[283.70053101 84.96082306]
[272.69262695 90.48669434]
[260.30718994 90.79824829]
[248.90306091 85.77454376]
[240.67831421 76.31661224]
[226.03784180 79.58105469]
[211.39736938 82.84548950]
[196.75689697 86.10993195]
[182.11642456 89.37437439]
[171.37806702 99.69605255]
[156.22480774 95.14752197]
[141.58433533 98.41196442]
[126.94386292 101.67640686]
[124.23537445 117.84303284]
[111.80732727 131.02371216]
[92.47553253 135.50541687]
[72.25820923 127.96830750]
[58.41264725 133.73895264]
[44.56707764 139.50958252]
[30.72151375 145.28022766]
[16.87594604 151.05087280]
[3.03038025 156.82150269]
[-10.81518650 162.59214783]
[-24.66075325 168.36279297]
[-12.08605099 176.54061890]
[-10.46049595 191.45227051]
[-20.97781181 202.14741516]
[-35.91462708 200.77209473]
[-44.30212402 188.33625793]
[-39.98176193 173.97303772]
[-54.27979660 178.50802612]
[-68.57783508 183.04301453]
[-82.87586975 187.57801819]
[-91.50625610 201.10191345]
[-107.47512054 202.64306641]
[-118.53250122 191.01922607]
[-116.19613647 175.14720154]
[-102.25827789 167.20266724]
[-87.41085815 173.27996826]
[-73.11282349 168.74497986]
[-58.81478882 164.20999146]
[-44.51675034 159.67500305]
[-30.43139267 154.51722717]
[-16.58582687 148.74658203]
[-2.74026036 142.97593689]
[11.10530567 137.20530701]
[24.95087242 131.43466187]
[38.79644012 125.66402435]
[52.64200592 119.89337921]
[66.48757172 114.12274170]
[66.68499756 106.62534332]
[53.89652252 98.78601837]
[67.07984161 91.63053894]
[67.27726746 84.13313293]
[53.75458527 77.64183044]
[37.45285797 79.42668152]
[27.97579765 66.04320526]
[35.07259369 51.25917435]
[51.44266891 50.28313446]
[60.24589539 64.11914825]
[73.76857758 70.61045837]
[95.45845795 65.03283691]
[114.10777283 72.25205231]
[123.67942047 87.03593445]
[138.31988525 83.77149200]
[152.96035767 80.50704956]
[164.74589539 69.95188141]
[178.85198975 74.73390198]
[193.49246216 71.46945953]
[208.13293457 68.20501709]
[222.77340698 64.94058228]
[237.41387939 61.67613983]
[244.10261536 44.84919357]
[259.40731812 35.46866226]
[277.12475586 37.11613464]
[290.20480347 48.94725418]
[304.72167969 45.17102432]
[319.23855591 41.39479828]
[326.78222656 36.19137192]
[334.04339600 37.68206787]
[348.62432861 34.16119003]
[352.74475098 22.97262764]
[361.67227173 15.25169373]
[373.10311890 12.83728886]
[384.16076660 16.21832848]
[392.11968994 24.44004250]
[406.81518555 21.43304253]
[421.51071167 18.42604446]
[436.20620728 15.41904449]
[450.90170288 12.41204548]
[465.59722900 9.40504646]
[480.29272461 6.39804792]
[494.98825073 3.39104867]
[502.74795532 -6.93563652]
[515.07092285 -9.12524986]
[525.23901367 -2.53917456]
[539.98504639 -5.28780556]
[554.73107910 -8.03643703]
[569.47711182 -10.78506851]
[571.04229736 -25.79939651]
[576.76910400 -39.75024033]
[586.18548584 -51.51023865]
[598.52154541 -60.13166809]
[612.77276611 -64.92284393]
[627.78137207 -65.50357056]
[642.33074951 -61.83532333]
[655.24389648 -54.22368240]
[665.47857666 -43.29287338]
[672.21160889 -29.93459892]
[686.95764160 -32.68323135]
[701.70367432 -35.43186188]
[716.44964600 -38.18049240]
[731.19567871 -40.92912292]
[745.71258545 -44.70535278]
[759.92883301 -49.49057388]
[774.14508057 -54.27579498]
[788.36132812 -59.06101608]
[802.57757568 -63.84623718]
[816.79382324 -68.63146210]
[831.01007080 -73.41667938]
[841.62084961 -85.15216064]
[856.15142822 -81.87932587]
[870.36767578 -86.66455078]
[883.45031738 -97.44788361]
[897.43389893 -87.86161804]
[892.09332275 -71.77080536]
[875.15289307 -72.44830322]
[860.93664551 -67.66307831]
[851.34271240 -56.26986694]
[835.79528809 -59.20043564]
[821.57904053 -54.41521454]
[807.36279297 -49.62999344]
[793.14654541 -44.84477234]
[778.93029785 -40.05954742]
[764.71405029 -35.27432632]
[750.49780273 -30.48910713]
[764.25451660 -24.50979042]
[771.98596191 -11.65581608]
[770.82067871 3.29885173]
[761.19146729 14.80005455]
[746.67456055 18.57624817]
[732.66156006 13.22495461]
[724.35693359 0.73364359]
[724.84497070 -14.25841522]
[733.94433594 -26.18310738]
[719.19830322 -23.43447685]
[704.45227051 -20.68584442]
[689.70623779 -17.93721390]
[674.96026611 -15.18858242]
[673.49206543 -0.30161646]
[667.88281250 13.58246899]
[658.57922363 25.33527184]
[646.32849121 33.99901199]
[632.11853027 38.86457443]
[617.09820557 39.52956009]
[602.48443604 35.93153381]
[589.46362305 28.35379219]
[579.09521484 17.40306473]
[572.22570801 3.96094918]
[557.47973633 6.70958042]
[542.73370361 9.45821190]
[527.98767090 12.20684242]
[515.30767822 24.32088089]
[497.99523926 18.08655739]
[483.29974365 21.09355545]
[468.60421753 24.10055542]
[453.90872192 27.10755348]
[439.21319580 30.11455345]
[424.51770020 33.12155151]
[409.82220459 36.12855148]
[395.12667847 39.13555145]
[386.00537109 54.98318863]
[367.89343262 59.23252869]
[352.14520264 48.74211884]
[337.56427002 52.26299286]
[323.01480103 55.91168594]
[308.49789429 59.68791580]
[293.98101807 63.46414185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 72]
[6 71]
[7 70]
[8 69]
[9 68]
[11 66]
[12 65]
[13 64]
[17 50]
[18 49]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[24 43]
[30 42]
[31 41]
[32 40]
[33 39]
[54 61]
[55 60]
[76 178]
[77 177]
[78 176]
[80 175]
[81 174]
[86 171]
[87 170]
[88 169]
[89 168]
[90 167]
[91 166]
[92 165]
[93 164]
[96 162]
[97 161]
[98 160]
[99 159]
[109 149]
[110 148]
[111 147]
[112 146]
[113 145]
[114 136]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[120 130]
[122 128]
[123 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
