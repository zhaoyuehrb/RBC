%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUGCUAUUGCAGCAUAUGAUUCAUUUUUAUAAUCUGGUCUUCUCUUUGCCCAAUUCCUGAAAGGAAACCAGGCGACAUCAUGGAAAGAAAGAAUCAAACAGCUAUAACUGAAUUCAUCAUCUUGGGAUUCUCCAACCUAAAUGAAUUGCAGUUUUUACUAUUCACCAUCUUCUUUCUGA\
) } def
/len { sequence length } bind def

/coor [
[142.21551514 101.61853790]
[127.50688934 104.56067657]
[112.79825592 107.50281525]
[101.28004456 117.11170959]
[95.74860382 131.05456543]
[90.21716309 144.99742126]
[84.68571472 158.94026184]
[79.15427399 172.88311768]
[84.17002106 188.12194824]
[75.26289368 201.46520996]
[59.26567841 202.67709351]
[48.45006943 190.82795715]
[51.11287689 175.00743103]
[65.21141815 167.35166931]
[70.74286652 153.40882874]
[76.27430725 139.46597290]
[81.80575562 125.52311707]
[87.33719635 111.58026886]
[84.21626282 104.76045990]
[72.67740631 114.34455109]
[61.13854599 123.92863464]
[49.59968567 133.51272583]
[42.49061584 146.72109985]
[29.97670937 154.99165344]
[15.03873730 156.35437012]
[1.23488092 150.48466492]
[-8.14682484 138.78067017]
[-10.87168598 124.03023529]
[-6.29064941 109.74688721]
[4.50509644 99.33286285]
[18.94403839 95.26875305]
[33.58734131 98.52286530]
[48.38302231 96.05552673]
[63.17870712 93.58818817]
[77.97438812 91.12084961]
[74.85345459 84.30104065]
[60.68611526 79.37290192]
[46.51877975 74.44477081]
[32.35144043 69.51663208]
[18.18410110 64.58850098]
[4.01676321 59.66036224]
[-5.14216614 59.79438019]
[-10.35022831 54.52411652]
[-24.43088150 49.35350800]
[-38.51153183 44.18289566]
[-47.67141342 44.15966797]
[-52.78823853 38.80078125]
[-66.77805328 33.38921738]
[-80.76787567 27.97765541]
[-94.75769043 22.56609344]
[-105.86000061 33.03993988]
[-120.40986633 37.65124893]
[-135.51840210 35.48444748]
[-148.18579102 26.96975327]
[-155.89691162 13.79776478]
[-157.12072754 -1.41621017]
[-151.61424255 -15.65142536]
[-140.47076416 -26.08146858]
[-125.90285492 -30.63544655]
[-110.80297852 -28.40916634]
[-98.16921234 -19.84465218]
[-90.51001740 -6.64240026]
[-89.34613037 8.57627583]
[-75.35630798 13.98783779]
[-61.36649323 19.39940071]
[-47.37667465 24.81096268]
[-33.34092331 30.10224342]
[-19.26026917 35.27285385]
[-5.17961740 40.44346619]
[8.94489861 45.49302292]
[23.11223793 50.42116165]
[37.27957535 55.34929657]
[51.44691467 60.27743149]
[65.61425018 65.20556641]
[79.78159332 70.13370514]
[104.13605499 76.21919250]
[109.85611725 92.79418182]
[124.56475067 89.85204315]
[139.27337646 86.90990448]
[142.96308899 74.93639374]
[151.35224915 65.72795105]
[162.79756165 60.99693298]
[175.09570312 61.58750916]
[185.90733337 67.32571411]
[193.20216370 77.06430054]
[208.00311279 74.62880707]
[222.80407715 72.19331360]
[237.60504150 69.75782776]
[252.40599060 67.32233429]
[267.20693970 64.88684082]
[282.00790405 62.45134735]
[296.80886841 60.01585388]
[304.79202271 55.52439117]
[311.88461304 57.66786957]
[326.72521973 55.48681259]
[327.67272949 40.03458023]
[331.79968262 25.11939049]
[338.92471313 11.38789177]
[348.73651123 -0.56509179]
[360.80749512 -10.22232246]
[374.61233521 -17.16653442]
[389.55093384 -21.09846115]
[404.97439575 -21.84972954]
[420.21328735 -19.39007759]
[434.60662842 -13.82855034]
[447.53067017 -5.40868521]
[458.42578125 5.50216436]
[466.82089233 18.42885017]
[472.35354614 32.80912018]
[487.15451050 30.37362862]
[501.95547485 27.93813515]
[516.75640869 25.50264359]
[531.55737305 23.06715202]
[546.33691406 20.50470543]
[561.09387207 17.81549454]
[575.85083008 15.12628269]
[590.60778809 12.43707085]
[605.36474609 9.74785995]
[620.12176514 7.05864811]
[634.87872314 4.36943674]
[640.27648926 -11.24678421]
[652.73681641 -21.95426941]
[668.80285645 -24.90705681]
[684.07971191 -19.39352036]
[694.43670654 -7.00496006]
[709.14532471 -9.94709778]
[723.85394287 -12.88923645]
[738.56256104 -15.83137417]
[753.27124023 -18.77351189]
[765.22521973 -29.99997711]
[780.84429932 -25.00233650]
[784.06085205 -8.92173576]
[771.56597900 1.69948196]
[756.21331787 -4.06488180]
[741.50469971 -1.12274349]
[726.79608154 1.81939459]
[712.08746338 4.76153278]
[697.37884521 7.70367098]
[693.85931396 20.91325378]
[684.94488525 31.36444473]
[672.33471680 36.97710419]
[658.47076416 36.60186005]
[646.06475830 30.25499535]
[637.56793213 19.12640572]
[622.81097412 21.81561661]
[608.05395508 24.50482941]
[593.29699707 27.19404030]
[578.54003906 29.88325119]
[563.78308105 32.57246399]
[549.02612305 35.26167297]
[542.99426270 39.56477356]
[533.99285889 37.86811066]
[519.19189453 40.30360031]
[504.39096069 42.73909378]
[489.58999634 45.17458725]
[474.78903198 47.61007690]
[474.27523804 62.15336609]
[470.92266846 76.31938934]
[464.85922241 89.55930328]
[456.31784058 101.35974884]
[445.62759399 111.26276398]
[433.20101929 118.88354492]
[419.51815796 123.92541504]
[405.10803223 126.19136047]
[390.52819824 125.59173584]
[376.34313965 122.14781952]
[363.10244751 115.99102020]
[351.31954956 107.35793304]
[341.45172119 96.58118439]
[333.88238525 84.07664490]
[328.90628052 70.32740021]
[314.06567383 72.50845337]
[299.24435425 74.81681061]
[284.44342041 77.25230408]
[269.64245605 79.68779755]
[254.84149170 82.12329102]
[240.04052734 84.55878448]
[225.23957825 86.99427795]
[210.43861389 89.42976379]
[195.63764954 91.86525726]
[188.47634888 107.98652649]
[172.94390869 116.67469025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[36 75]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[43 69]
[44 68]
[45 67]
[47 66]
[48 65]
[49 64]
[50 63]
[85 180]
[86 179]
[87 178]
[88 177]
[89 176]
[90 175]
[91 174]
[92 173]
[94 172]
[95 171]
[109 156]
[110 155]
[111 154]
[112 153]
[113 152]
[114 150]
[115 149]
[116 148]
[117 147]
[118 146]
[119 145]
[120 144]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
