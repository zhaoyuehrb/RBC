%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:44:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCCGGACCCCUGUUUGCUUUAGAGCCGAGCCGCGCCGAUGCCCUCACACUCUGCGCCUCCUCUCCCGGGACUUUAACACCCCGCUCUCCUCCACCGACCAGGUGACCUUUUGCUCUGAGCCAGAUCAGAGAAGAAUUCGGUGUCCGUGCGGGACGAUGCCUGAGCAGGAGAGACAGAUCACAGCCAGAGAAGGGGCCAGUCGGAAAAUCUUAUCUAAGCUUUCUUUGCCUACCCGUGCCUGGGAACCAGCAAU\
GA\
) } def
/len { sequence length } bind def

/coor [
[267.92755127 1047.94567871]
[266.10552979 1033.05676270]
[264.28353882 1018.16778564]
[262.46154785 1003.27886963]
[260.63955688 988.38989258]
[258.81756592 973.50097656]
[256.99554443 958.61206055]
[242.58772278 954.69494629]
[230.74517822 945.53527832]
[223.29156494 932.50421143]
[221.38977051 917.57202148]
[225.36045837 903.01019287]
[234.62860107 891.04589844]
[247.80651855 883.52136230]
[245.98452759 868.63244629]
[234.12948608 859.68853760]
[232.06962585 844.61499023]
[241.53120422 832.24096680]
[239.70921326 817.35205078]
[225.09803772 809.83966064]
[217.78004456 794.94458008]
[220.82315063 778.46099854]
[233.22085571 766.93408203]
[231.21769714 752.06848145]
[229.21455383 737.20281982]
[227.21139526 722.33715820]
[225.20823669 707.47149658]
[212.31489563 693.03869629]
[220.33885193 674.52514648]
[217.97430420 659.71264648]
[200.93733215 656.17864990]
[186.54577637 646.33666992]
[177.03463745 631.68218994]
[173.89363098 614.46044922]
[177.63401794 597.32263184]
[187.70556641 582.91766357]
[202.57728577 573.48291016]
[199.67332458 558.76666260]
[196.76937866 544.05047607]
[193.86541748 529.33422852]
[190.96145630 514.61804199]
[187.87852478 499.93826294]
[184.61706543 485.29711914]
[181.35562134 470.65600586]
[178.09416199 456.01486206]
[174.83270264 441.37371826]
[164.13748169 437.50198364]
[156.55062866 428.86749268]
[154.03491211 417.52941895]
[157.32495117 406.26663208]
[165.71778870 397.89660645]
[162.81382751 383.18038940]
[159.90986633 368.46417236]
[157.00592041 353.74795532]
[154.10195923 339.03173828]
[149.73674011 333.09561157]
[151.25337219 324.11871338]
[148.52882385 309.36822510]
[139.82885742 308.90603638]
[131.32679749 306.62979126]
[123.40047455 302.60244751]
[116.40993500 296.96563721]
[110.68109894 289.93475342]
[106.49065399 281.79101562]
[104.05287170 272.87020874]
[103.50887299 263.54888916]
[104.91903687 254.22850037]
[108.25876617 245.31806946]
[93.89476013 240.99658203]
[79.53074646 236.67509460]
[65.16674042 232.35360718]
[54.03597260 242.93669128]
[39.10115051 246.52091980]
[24.37966919 242.14216614]
[13.83152962 230.97827148]
[10.29413033 216.03228760]
[14.71901321 201.32461548]
[25.91590691 190.81150818]
[40.87290573 187.32098389]
[55.56664658 191.79194641]
[66.04459381 203.02174377]
[69.48822784 217.98959351]
[83.85223389 222.31108093]
[98.21623993 226.63256836]
[112.58025360 230.95405579]
[124.72623444 222.15206909]
[125.09149933 207.15650940]
[125.45676422 192.16096497]
[125.82202911 177.16540527]
[126.18729401 162.16986084]
[126.55255890 147.17430115]
[126.91782379 132.17875671]
[78.08196259 142.28614807]
[46.87497711 95.62240601]
[37.14020157 84.21038818]
[27.40542793 72.79837036]
[17.67065239 61.38635254]
[1.85587406 58.68962860]
[-5.76963186 44.57469940]
[0.64377087 29.86933136]
[16.17626762 25.85422516]
[28.91265869 35.60942459]
[29.08267212 51.65157700]
[38.81744766 63.06359482]
[48.55221939 74.47561646]
[58.28699493 85.88763428]
[72.09218597 80.02106476]
[70.63329315 65.09217834]
[69.17439270 50.16329193]
[67.44308472 35.26354218]
[65.43992615 20.39789772]
[63.43676758 5.53225374]
[61.43361282 -9.33339024]
[51.92269135 -21.97668457]
[57.89104080 -35.62322617]
[55.88788605 -50.48886871]
[53.88472748 -65.35451508]
[51.88157272 -80.22015381]
[49.87841797 -95.08580017]
[47.87525940 -109.95144653]
[35.15725708 -119.33376312]
[32.88121414 -134.97329712]
[42.39747238 -147.59140015]
[58.06019974 -149.70196533]
[70.57698059 -140.05284119]
[72.52183533 -124.36866760]
[62.74090576 -111.95459747]
[64.74406433 -97.08895874]
[66.74721527 -82.22331238]
[68.75037384 -67.35766602]
[70.75352478 -52.49202728]
[72.75668335 -37.62638092]
[82.12432861 -26.04637718]
[76.29925537 -11.33654594]
[78.30241394 3.52909803]
[80.30557251 18.39474106]
[82.30872345 33.26038742]
[84.84696960 35.66748047]
[86.35954285 39.41181946]
[86.23573303 44.00448227]
[84.10327911 48.70439529]
[85.56217957 63.63328171]
[87.02107239 78.56216431]
[101.70083618 81.64510345]
[109.04210663 68.56436157]
[116.38337708 55.48361969]
[123.72463989 42.40287781]
[120.78572083 26.63131142]
[131.39257812 14.59493828]
[147.40852356 15.52703381]
[156.54751587 28.71257401]
[151.79888916 44.03674316]
[136.80538940 49.74414444]
[129.46411133 62.82488632]
[122.12284851 75.90562439]
[114.78157806 88.98636627]
[120.63309479 93.67782593]
[134.61033630 88.23387146]
[132.33612061 103.06074524]
[138.18763733 107.75219727]
[149.35922241 97.74241638]
[153.94783020 81.99831390]
[169.93907166 78.36347198]
[180.88253784 90.57710266]
[175.52052307 106.07486725]
[159.36900330 108.91400146]
[148.19741821 118.92378235]
[141.91337585 132.54402161]
[141.54811096 147.53956604]
[141.18284607 162.53512573]
[140.81758118 177.53067017]
[140.45231628 192.52622986]
[140.08705139 207.52177429]
[139.72178650 222.51733398]
[152.04898071 222.21382141]
[163.90785217 225.18601990]
[174.45159912 231.16381836]
[182.94282532 239.66462708]
[188.80505371 250.03192139]
[191.66174316 261.48571777]
[191.36004639 273.18127441]
[187.97798157 284.27120972]
[181.81466675 293.96707153]
[173.36479187 301.59521484]
[163.27931213 306.64367676]
[166.00386047 321.39416504]
[168.81817627 336.12777710]
[171.72212219 350.84399414]
[174.62608337 365.56021118]
[177.53004456 380.27642822]
[180.43400574 394.99264526]
[196.57048035 404.96249390]
[200.20230103 423.25308228]
[189.47384644 438.11227417]
[192.73530579 452.75338745]
[195.99674988 467.39453125]
[199.25820923 482.03567505]
[202.51965332 496.67681885]
[206.67225647 501.76000977]
[207.52850342 507.34054565]
[205.67767334 511.71408081]
[208.58163452 526.43029785]
[211.48558044 541.14648438]
[214.38954163 555.86273193]
[217.29350281 570.57891846]
[229.90003967 572.09832764]
[241.55940247 577.08227539]
[251.34136963 585.12219238]
[258.46859741 595.56622314]
[262.37832642 607.57196045]
[262.76681519 620.17443848]
[259.61294556 632.36364746]
[253.17910767 643.16546631]
[243.98934937 651.71966553]
[232.78675842 657.34808350]
[235.15132141 672.16058350]
[244.28308105 678.00085449]
[248.61907959 687.69586182]
[246.95465088 697.96307373]
[240.07388306 705.46838379]
[242.07704163 720.33398438]
[244.08018494 735.19964600]
[246.08334351 750.06530762]
[248.08650208 764.93096924]
[260.65872192 770.54058838]
[268.75930786 781.53802490]
[270.36285400 794.99340820]
[265.15740967 807.38714600]
[254.59814453 815.53002930]
[256.42013550 830.41894531]
[268.58633423 840.14636230]
[270.22198486 855.27178955]
[260.87344360 866.81042480]
[262.69546509 881.69940186]
[277.29891968 885.82421875]
[289.17858887 895.20056152]
[296.54345703 908.37524414]
[298.29846191 923.32543945]
[294.20703125 937.76928711]
[284.92263794 949.51434326]
[271.88449097 956.79003906]
[273.70648193 971.67895508]
[275.52847290 986.56793213]
[277.35049438 1001.45684814]
[279.17248535 1016.34576416]
[280.99447632 1031.23474121]
[282.81646729 1046.12365723]
[297.15487671 1051.47790527]
[307.35400391 1062.89001465]
[311.07015991 1077.73754883]
[307.44940186 1092.60864258]
[297.32373047 1104.08605957]
[283.01998901 1109.53222656]
[267.82504272 1107.69580078]
[255.23060608 1098.99877930]
[248.13076782 1085.43957520]
[248.15701294 1070.13415527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 247]
[2 246]
[3 245]
[4 244]
[5 243]
[6 242]
[7 241]
[14 234]
[15 233]
[18 230]
[19 229]
[23 224]
[24 223]
[25 222]
[26 221]
[27 220]
[29 216]
[30 215]
[37 205]
[38 204]
[39 203]
[40 202]
[41 201]
[42 198]
[43 197]
[44 196]
[45 195]
[46 194]
[51 191]
[52 190]
[53 189]
[54 188]
[55 187]
[57 186]
[58 185]
[68 85]
[69 84]
[70 83]
[71 82]
[86 174]
[87 173]
[88 172]
[89 171]
[90 170]
[91 169]
[92 168]
[94 106]
[95 105]
[96 104]
[97 103]
[107 143]
[108 142]
[109 141]
[110 137]
[111 136]
[112 135]
[113 134]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[144 156]
[145 155]
[146 154]
[147 153]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
