%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGACGCAUGCGCAUCGUGCCCUGGACCAGGCGGCCGUGGCGCGGGUGGCGGCUGCUGUGCUGGCUGUGGGGACGGAGGCGGUGAAGUGCCAUCUUCGGCUAGGUCGUCACAGGCUCCGGCUCAUGGCAUCAAGUGGCAUCCAUCAUAAGAUCGUUAACUGAAGACAAUAUGCAAAAUUCUCACAUGGAUGAAUACAGAAAUUCUAGUAAUGGCAGCACAGGCAACAGUUCAGAGGUAGUGGUAGAACAUCCUA\
CUGAUUUCAGUACUG\
) } def
/len { sequence length } bind def

/coor [
[46.54704666 406.51098633]
[45.85174179 391.52709961]
[45.15643692 376.54321289]
[44.46112823 361.55935669]
[43.76582336 346.57546997]
[29.49461174 341.95675659]
[20.15197754 353.69198608]
[10.80934525 365.42718506]
[10.04437065 370.51849365]
[7.65896988 374.43292236]
[4.36374283 376.75326538]
[0.93212622 377.40057373]
[-8.81289959 388.80383301]
[-18.55792618 400.20709229]
[-21.73769379 408.73089600]
[-28.48261833 411.68521118]
[-38.35918045 422.97476196]
[-48.23574066 434.26428223]
[-58.11230469 445.55383301]
[-67.98886108 456.84335327]
[-77.86542511 468.13287354]
[-87.74198914 479.42242432]
[-91.00517273 494.90344238]
[-105.20864868 499.38790894]
[-115.08521271 510.67742920]
[-124.96177673 521.96697998]
[-128.24014282 530.45336914]
[-135.01885986 533.32928467]
[-145.02563477 544.50354004]
[-147.86039734 560.65582275]
[-163.35671997 566.02203369]
[-175.57330322 555.08184814]
[-171.94276428 539.08966064]
[-156.19990540 534.49676514]
[-146.19314575 523.32250977]
[-136.25131226 512.09039307]
[-126.37474060 500.80087280]
[-116.49818420 489.51135254]
[-113.94143677 474.83782959]
[-99.03151703 469.54583740]
[-89.15496063 458.25631714]
[-79.27839661 446.96679688]
[-69.40183258 435.67724609]
[-59.52527237 424.38772583]
[-49.64871216 413.09820557]
[-39.77215195 401.80865479]
[-29.96119118 390.46206665]
[-20.21616554 379.05880737]
[-10.47113991 367.65554810]
[-0.92586696 356.08456421]
[8.41676617 344.34933472]
[17.75939941 332.61413574]
[81.23746490 311.12945557]
[83.31741333 296.27435303]
[85.39735413 281.41925049]
[87.47729492 266.56417847]
[89.21229553 251.66485596]
[90.60140991 236.72930908]
[91.99053192 221.79376221]
[93.37964630 206.85823059]
[94.76876831 191.92268372]
[96.15788269 176.98715210]
[97.54700470 162.05160522]
[98.93611908 147.11607361]
[73.84258270 95.42898560]
[62.16172028 86.01848602]
[50.48085403 76.60799408]
[38.79999161 67.19749451]
[27.11912918 57.78699875]
[15.43826675 48.37650299]
[3.75740433 38.96600342]
[-7.92345858 29.55550957]
[-20.78381348 30.16118431]
[-30.31417465 22.11259460]
[-31.77205276 10.12696648]
[-43.34304047 0.58169383]
[-54.91402817 -8.96357918]
[-66.48501587 -18.50885201]
[-78.05600739 -28.05412292]
[-93.00376892 -24.32979012]
[-107.11341858 -30.05438805]
[-115.05281067 -42.83836746]
[-113.95522308 -57.66851425]
[-125.52620697 -67.21379089]
[-137.09719849 -76.75906372]
[-148.66818237 -86.30433655]
[-167.78799438 -80.31589508]
[-186.48605347 -87.09891510]
[-197.16209412 -103.70881653]
[-195.59053040 -123.24542999]
[-207.59153748 -132.24407959]
[-219.59254456 -141.24273682]
[-235.20030212 -138.75808716]
[-247.94433594 -148.10502625]
[-250.26382446 -163.73818970]
[-240.78268433 -176.38267517]
[-225.12586975 -178.53675842]
[-212.58232117 -168.92245483]
[-210.59390259 -153.24374390]
[-198.59289551 -144.24508667]
[-186.59187317 -135.24644470]
[-177.69255066 -140.35704041]
[-167.56581116 -142.24090576]
[-157.34866333 -140.66084290]
[-148.19680786 -135.77005005]
[-141.15388489 -128.09765625]
[-137.03244019 -118.49151611]
[-136.32029724 -108.02465057]
[-139.12290955 -97.87532043]
[-127.55192566 -88.33004761]
[-115.98093414 -78.78477478]
[-104.40995026 -69.23950195]
[-90.05893707 -73.13648987]
[-75.99872589 -67.77230835]
[-67.69609833 -55.00830460]
[-68.51073456 -39.62511063]
[-56.93974686 -30.07983971]
[-45.36875534 -20.53456688]
[-33.79776764 -10.98929501]
[-22.22677994 -1.44402206]
[-4.77497625 0.54029316]
[1.48703790 17.87464523]
[13.16790104 27.28514290]
[24.84876442 36.69564056]
[36.52962494 46.10613632]
[48.21049118 55.51663208]
[59.89135361 64.92713165]
[71.57221222 74.33762360]
[83.25307465 83.74812317]
[77.51378632 69.88952637]
[68.07376099 58.23251724]
[67.09103394 43.26474380]
[74.92588043 30.47352600]
[88.70597076 24.54823494]
[103.37940979 27.66113663]
[113.56678772 38.67101288]
[115.53331757 53.54154587]
[108.55860901 66.82052612]
[105.64393616 81.53462219]
[115.25611115 70.01915741]
[124.86829376 58.50368881]
[134.48046875 46.98822403]
[144.09265137 35.47275543]
[153.70483398 23.95728874]
[163.31701660 12.44182110]
[158.96588135 -0.61561602]
[161.60467529 -14.01341915]
[170.44123840 -24.28173637]
[183.09251404 -28.81498528]
[196.22648621 -26.53256989]
[205.97151184 -37.93583679]
[215.71653748 -49.33910370]
[206.63351440 -61.35212708]
[200.34570312 -75.03706360]
[197.14720154 -89.75384521]
[197.18759155 -104.81414032]
[200.46501160 -119.51354980]
[206.82615662 -133.16455078]
[215.97349548 -145.12867737]
[227.47920227 -154.84632874]
[240.80513000 -161.86300659]
[255.32800293 -165.85050964]
[270.36856079 -166.62236023]
[285.22332764 -164.14242554]
[299.19750977 -158.52673340]
[311.63751221 -150.03791809]
[321.96151733 -139.07301331]
[329.68664551 -126.14487457]
[334.45153809 -111.85817719]
[336.03338623 -96.88113403]
[334.35818481 -81.91424561]
[329.50427246 -67.65754700]
[321.69866943 -54.77783966]
[311.30648804 -43.87753677]
[298.81378174 -35.46646500]
[284.80484009 -29.93802643]
[269.93487549 -27.55079460]
[254.89942932 -28.41642570]
[240.40171814 -32.49443054]
[227.11979675 -39.59407425]
[217.37477112 -28.19080925]
[207.62974548 -16.78754425]
[211.96350098 -0.93711168]
[205.92288208 14.52335262]
[191.70928955 23.41390610]
[174.83248901 22.05400276]
[165.22030640 33.56946945]
[155.60812378 45.08493423]
[145.99594116 56.60040283]
[136.38375854 68.11586761]
[126.77158356 79.63134003]
[117.15940094 91.14680481]
[120.39673615 97.91213226]
[126.87139893 111.44279480]
[130.10873413 118.20812225]
[145.10646057 117.94730377]
[160.10418701 117.68647766]
[175.10015869 117.33873749]
[190.09385681 116.90407562]
[205.08757019 116.46941376]
[220.74484253 109.96663666]
[231.32785034 123.21186829]
[221.52990723 137.04794312]
[205.52223206 131.46311951]
[190.52851868 131.89778137]
[175.53482056 132.33244324]
[168.96372986 135.65548706]
[160.36502075 132.68421936]
[145.36727905 132.94503784]
[130.36955261 133.20585632]
[143.62100220 140.23429871]
[145.56597900 155.10766602]
[134.56739807 165.30725098]
[119.88264465 162.24819946]
[113.87165833 148.50518799]
[112.48254395 163.44073486]
[111.09342194 178.37626648]
[109.70430756 193.31181335]
[108.31518555 208.24734497]
[106.92607117 223.18289185]
[105.53694916 238.11842346]
[104.14783478 253.05397034]
[106.05867004 256.86279297]
[106.62335968 260.69793701]
[105.99545288 264.13903809]
[104.44763184 266.85687256]
[102.33238983 268.64410400]
[100.25244904 283.49920654]
[98.17250824 298.35430908]
[96.09255981 313.20941162]
[99.53926849 327.80804443]
[108.04371643 340.16418457]
[116.54817200 352.52032471]
[125.05261993 364.87646484]
[133.62854004 377.18310547]
[142.27566528 389.43984985]
[150.92277527 401.69656372]
[156.70330811 404.78424072]
[159.64152527 409.59594727]
[159.62440491 414.33917236]
[167.98504639 426.79309082]
[176.34568787 439.24697876]
[191.89938354 442.05023193]
[200.84655762 455.07806396]
[197.87901306 470.60122681]
[184.75733948 479.41015625]
[169.26640320 476.27865601]
[160.59667969 463.06460571]
[163.89178467 447.60763550]
[155.53114319 435.15371704]
[147.17050171 422.69982910]
[138.66604614 410.34368896]
[130.01893616 398.08694458]
[121.37181854 385.83023071]
[114.97124481 382.18954468]
[112.69647217 373.38092041]
[104.19202423 361.02478027]
[95.68757629 348.66864014]
[87.18312073 336.31250000]
[80.07476807 338.70440674]
[65.85805511 343.48825073]
[58.74969864 345.88015747]
[59.44500732 360.86404419]
[60.14031219 375.84793091]
[60.83561707 390.83178711]
[61.53092575 405.81567383]
[72.37249756 417.64105225]
[69.74440002 433.46737671]
[55.66268158 441.15405273]
[40.92963409 434.80450439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 266]
[2 265]
[3 264]
[4 263]
[5 262]
[6 52]
[7 51]
[8 50]
[12 49]
[13 48]
[14 47]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[24 38]
[25 37]
[26 36]
[28 35]
[29 34]
[53 230]
[54 229]
[55 228]
[56 227]
[57 222]
[58 221]
[59 220]
[60 219]
[61 218]
[62 217]
[63 216]
[64 215]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[83 112]
[84 111]
[85 110]
[86 109]
[90 101]
[91 100]
[92 99]
[139 192]
[140 191]
[141 190]
[142 189]
[143 188]
[144 187]
[145 186]
[150 182]
[151 181]
[152 180]
[195 210]
[196 209]
[197 208]
[198 206]
[199 205]
[200 204]
[231 259]
[232 258]
[233 257]
[234 256]
[235 254]
[236 253]
[237 252]
[240 251]
[241 250]
[242 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
