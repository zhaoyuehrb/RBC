%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCGGUGUGGGUACUGCUGUCUGUGGUGUGGCUGUGGGACCCGUGAGCAAGCAGCGACGCCAGCGGCGGAGAACCGACGAAAGGUGUCACCACAGUGAUGGCAGUGGAGGACAGCACGCUGCAAGUAGUGGUACGGGUGCGGCCCCCCACCCCUCGGGAGCUGGACAGUCAGCGGCGGCCAGUGGUUCAGGUGGUGG\
) } def
/len { sequence length } bind def

/coor [
[134.68388367 200.58999634]
[126.21545410 188.20913696]
[117.74703217 175.82826233]
[109.27860260 163.44740295]
[100.81018066 151.06654358]
[92.34175873 138.68568420]
[78.44982147 133.02757263]
[63.74094009 135.96844482]
[49.03205490 138.90930176]
[37.01667023 149.20207214]
[23.01944542 144.11022949]
[8.31056118 147.05108643]
[-6.39832354 149.99195862]
[-18.41370773 160.28472900]
[-32.41093063 155.19288635]
[-47.11981583 158.13374329]
[-54.93047714 162.88926697]
[-62.08401871 161.00302124]
[-76.83749390 163.71131897]
[-91.59097290 166.41963196]
[-106.34445190 169.12792969]
[-121.09793091 171.83622742]
[-130.08102417 184.56185913]
[-145.08174133 187.09829712]
[-157.15832520 178.45585632]
[-171.91178894 181.16416931]
[-186.66526794 183.87246704]
[-201.41874695 186.58078003]
[-216.17222595 189.28907776]
[-230.92570496 191.99739075]
[-243.10206604 202.09919739]
[-257.01718140 196.78701782]
[-271.77066040 199.49531555]
[-286.52413940 202.20362854]
[-301.27761841 204.91192627]
[-316.03106689 207.62023926]
[-318.83963013 222.53587341]
[-326.85000610 235.42767334]
[-338.97888184 244.55209351]
[-353.58587646 248.67515564]
[-368.69558716 247.23924255]
[-382.26446533 240.43855286]
[-392.45748901 229.19281006]
[-397.89614868 215.02293396]
[-397.84484863 199.84526062]
[-392.31057739 185.71244812]
[-382.04177856 174.53585815]
[-368.42724609 167.82701111]
[-353.30819702 166.49325562]
[-338.72937012 170.71493530]
[-326.66244507 179.92112732]
[-318.73937988 192.86676025]
[-303.98590088 190.15844727]
[-289.23242188 187.45014954]
[-274.47894287 184.74183655]
[-259.72546387 182.03353882]
[-248.60437012 172.12544250]
[-233.63400269 177.24391174]
[-218.88052368 174.53559875]
[-204.12705994 171.82730103]
[-189.37358093 169.11898804]
[-174.62010193 166.41069031]
[-159.86662292 163.70239258]
[-151.64698792 151.33415222]
[-136.72343445 148.37738037]
[-123.80623627 157.08276367]
[-109.05275726 154.37445068]
[-94.29927826 151.66615295]
[-79.54579926 148.95783997]
[-64.79232788 146.24954224]
[-50.06068420 143.42486572]
[-35.35179901 140.48399353]
[-24.38849449 130.40158081]
[-9.33919334 135.28308105]
[5.36969185 132.34220886]
[20.07857704 129.40133667]
[31.04188156 119.31891632]
[46.09118271 124.20042419]
[60.80006790 121.25955200]
[75.50895691 118.31868744]
[68.06044769 110.02707672]
[63.65183258 98.77050781]
[63.42143250 85.73584747]
[68.02742767 72.52817535]
[77.50180817 60.97438049]
[91.18413544 52.87886047]
[91.42092896 37.88072968]
[91.65772247 22.88259888]
[91.89451599 7.88446760]
[82.56799316 -7.98785925]
[92.15028381 -22.68480873]
[92.15028381 -37.68480682]
[92.15028381 -52.68480682]
[92.15028381 -67.68480682]
[84.41298676 -81.48497772]
[92.15028381 -94.21224976]
[92.15028381 -109.21224976]
[83.48657990 -123.13605499]
[91.45071411 -137.47149658]
[107.84986115 -137.47149658]
[115.81398773 -123.13605499]
[107.15028381 -109.21224976]
[107.15028381 -94.21224976]
[114.88758850 -81.48497772]
[107.15028381 -67.68480682]
[107.15028381 -52.68480682]
[107.15028381 -37.68480682]
[107.15028381 -22.68480873]
[115.48222351 -13.90676212]
[115.59918213 -1.40367901]
[106.89264679 8.12126160]
[106.65585327 23.11939240]
[106.41905975 38.11752319]
[106.18226624 53.11565399]
[120.02910614 58.88323975]
[130.50938416 48.15180206]
[134.27145386 39.81704330]
[141.24081421 37.33531952]
[151.88920593 26.77066040]
[162.53758240 16.20600319]
[173.18595886 5.64134502]
[183.83433533 -4.92331314]
[187.61680603 -20.88028717]
[203.40263367 -25.32321358]
[214.95272827 -13.68158913]
[210.38533020 2.06867957]
[194.39900208 5.72506714]
[183.75062561 16.28972435]
[173.10223389 26.85438347]
[162.45385742 37.41904068]
[151.80548096 47.98369980]
[141.24081421 58.63208008]
[130.76054382 69.36351776]
[134.18128967 76.03798676]
[141.02276611 89.38691711]
[144.44351196 96.06138611]
[159.27513123 93.82017517]
[174.10676575 91.57897186]
[188.93838501 89.33776093]
[203.77000427 87.09654999]
[211.79704285 82.71614838]
[218.85327148 84.93894958]
[233.71841431 82.93215942]
[248.60624695 74.82111359]
[260.52166748 86.88175964]
[252.23086548 101.67023468]
[235.72521973 97.79730988]
[220.86006165 99.80410767]
[206.01121521 101.92816925]
[191.17959595 104.16938019]
[176.34796143 106.41059113]
[161.51634216 108.65180206]
[146.68472290 110.89300537]
[126.71323395 128.77256775]
[104.72261810 130.21725464]
[113.19104767 142.59811401]
[121.65946960 154.97897339]
[130.12789917 167.35984802]
[138.59631348 179.74070740]
[147.06474304 192.12156677]
[157.79618835 202.60185242]
[170.37409973 210.77474976]
[182.95199585 218.94763184]
[195.52990723 227.12052917]
[208.10781860 235.29342651]
[224.50381470 235.61520386]
[232.18513489 250.10414124]
[223.24989319 263.85525513]
[206.88990784 262.72259521]
[199.93492126 247.87133789]
[187.35700989 239.69844055]
[174.77911377 231.52554321]
[162.20120239 223.35264587]
[149.62329102 215.17974854]
[143.89915466 220.02581787]
[126.72673798 234.56398010]
[132.71220398 248.31803894]
[145.31350708 257.88452148]
[143.29745483 272.64205933]
[149.28291321 286.39611816]
[155.26837158 300.15017700]
[170.51298523 302.51773071]
[182.04240417 312.76840210]
[186.17762756 327.63122559]
[181.59910583 342.36352539]
[169.76786804 352.26431274]
[154.45918274 354.17422485]
[140.55801392 347.48385620]
[132.50016785 334.32806396]
[132.85687256 318.90484619]
[141.51431274 306.13565063]
[135.52885437 292.38156128]
[129.54339600 278.62750244]
[117.37020111 270.04483032]
[118.95813751 254.30349731]
[112.97267914 240.54943848]
[112.31748962 224.95031738]
[117.00368500 212.19689941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[4 157]
[5 156]
[6 155]
[7 80]
[8 79]
[9 78]
[11 76]
[12 75]
[13 74]
[15 72]
[16 71]
[18 70]
[19 69]
[20 68]
[21 67]
[22 66]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[86 114]
[87 113]
[88 112]
[89 111]
[91 108]
[92 107]
[93 106]
[94 105]
[96 103]
[97 102]
[115 133]
[116 132]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[142 148]
[143 147]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
[176 196]
[177 195]
[179 193]
[180 192]
[181 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
