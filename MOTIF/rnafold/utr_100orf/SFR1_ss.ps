%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCGCCUCGCGCGUCAGGCAAUCUGGCCAAUUGCGCAUCUUUUCCGCCUACCGCACGGCCCCGCCCCUGCCACAGGAUCGAUUUACGGCCGCAGAGAAAAACCAAGAUUUCACUUUCAAGAUGGAAAGUCCGUCAGACUCAGCUGUGGUUUUACCUAGCACUCCUCAGGCCUCUGCGAAUCCAUCAUCUCCCUAUACAAAUAGUUCCCGAAAACAACCUA\
) } def
/len { sequence length } bind def

/coor [
[78.76167297 129.74084473]
[85.52449799 116.35189056]
[73.17055511 124.85953522]
[60.81661224 133.36718750]
[48.46266556 141.87483215]
[41.48531342 156.07438660]
[26.61476326 156.92057800]
[14.26082039 165.42822266]
[1.90687692 173.93588257]
[4.89097738 192.50007629]
[-6.63748360 210.75154114]
[-29.99758148 217.74696350]
[-39.83493805 229.07066345]
[-49.67229462 240.39437866]
[-59.50965118 251.71809387]
[-69.34700775 263.04180908]
[-66.00522614 278.07971191]
[-72.08791351 292.03872681]
[-85.07027435 299.64938354]
[-99.86759949 298.17382812]
[-109.70495605 309.49752808]
[-119.54231262 320.82125854]
[-118.18506622 336.56713867]
[-128.42317200 348.60693359]
[-144.18254089 349.79763794]
[-156.11343384 339.43280029]
[-157.13743591 323.66174316]
[-146.64704895 311.84109497]
[-130.86602783 310.98388672]
[-121.02866364 299.66018677]
[-111.19130707 288.33645630]
[-114.72090912 273.89071655]
[-108.99977875 259.97192383]
[-96.02812195 251.99761963]
[-80.67072296 253.20443726]
[-70.83336639 241.88073730]
[-60.99600601 230.55702209]
[-51.15864944 219.23330688]
[-41.32129288 207.90960693]
[-44.71684647 201.22229004]
[-58.09148026 208.01339722]
[-71.46611786 214.80448914]
[-82.08771515 225.39607239]
[-95.44307709 218.56715393]
[-93.07523346 203.75521851]
[-78.25722504 201.42985535]
[-64.88259125 194.63874817]
[-51.50795364 187.84764099]
[-54.90350342 181.16032410]
[-69.85042572 182.42108154]
[-81.25788879 193.70158386]
[-97.17218781 191.67312622]
[-105.38523865 177.89178467]
[-99.59668732 162.92941284]
[-84.24702454 158.26388550]
[-71.11118317 167.47416687]
[-56.16426468 166.21340942]
[-39.31311417 152.91346741]
[-20.29893684 152.20176697]
[-6.60077143 161.58193970]
[5.75317240 153.07427979]
[18.10711670 144.56663513]
[24.20083427 130.97561646]
[39.95502090 129.52088928]
[52.30896378 121.01324463]
[64.66290283 112.50559235]
[77.01685333 103.99794769]
[77.83778381 99.43357849]
[79.51117706 95.34655762]
[66.38282776 88.09077454]
[53.25447464 80.83499146]
[40.12612152 73.57920837]
[23.33861351 71.20941925]
[20.96854591 54.42194748]
[36.44385529 47.49726868]
[47.38190460 60.45085526]
[60.51025772 67.70663452]
[73.63861084 74.96241760]
[86.76696014 82.21820068]
[78.72435760 69.55658722]
[67.87905884 59.19417953]
[64.06266022 44.68779755]
[68.40444946 30.32991219]
[79.61968231 20.36905479]
[94.38973236 17.75266647]
[108.34412384 23.25494385]
[117.35370636 35.24774551]
[118.75254059 50.18238068]
[112.12629700 63.64008713]
[108.92208099 78.29385376]
[118.75943756 66.97014618]
[121.71289825 47.02303696]
[140.26182556 41.54268265]
[149.77772522 29.94752502]
[159.29362488 18.35236740]
[168.80952454 6.75721121]
[178.32542419 -4.83794546]
[187.84132385 -16.43310165]
[197.35722351 -28.02825928]
[187.10174561 -41.20193863]
[180.14767456 -56.36967850]
[176.86257935 -72.71980286]
[177.41783142 -89.37842560]
[181.77961731 -105.45611572]
[189.71105957 -120.09542084]
[200.78495789 -132.51658630]
[214.40690613 -142.05909729]
[229.84710693 -148.21676636]
[246.27954102 -150.66464233]
[247.33055115 -165.62777710]
[235.36074829 -175.50215149]
[231.51359558 -190.53474426]
[237.26840210 -204.94522095]
[250.41232300 -213.19245911]
[265.89126587 -212.10520935]
[277.75323486 -202.10156250]
[281.43710327 -187.02812195]
[275.52630615 -172.68092346]
[262.29370117 -164.57676697]
[261.24267578 -149.61363220]
[268.14666748 -150.01312256]
[275.22348022 -149.72799683]
[282.40444946 -148.73048401]
[289.66024780 -161.85884094]
[296.91601562 -174.98718262]
[304.17181396 -188.11553955]
[311.42758179 -201.24389648]
[318.68338013 -214.37223816]
[321.05316162 -231.15974426]
[337.84063721 -233.52981567]
[344.76531982 -218.05450439]
[331.81173706 -207.11645508]
[324.55593872 -193.98811340]
[317.30017090 -180.85975647]
[310.04437256 -167.73139954]
[302.78860474 -154.60305786]
[295.53280640 -141.47470093]
[300.56948853 -135.91757202]
[311.68377686 -145.99095154]
[319.14123535 -159.00579834]
[333.82357788 -155.93510437]
[335.44024658 -141.02247620]
[321.75714111 -134.87669373]
[310.64288330 -124.80329895]
[315.67956543 -119.24617004]
[329.45590210 -125.18020630]
[343.23223877 -131.11425781]
[357.00854492 -137.04829407]
[363.64440918 -143.31141663]
[371.01995850 -142.96745300]
[384.87814331 -148.70770264]
[398.73632812 -154.44795227]
[411.05593872 -166.09541321]
[425.65863037 -157.48159790]
[421.42385864 -141.06504822]
[404.47659302 -140.58975220]
[390.61837769 -134.84950256]
[376.76019287 -129.10925293]
[362.94259644 -123.27196503]
[349.16625977 -117.33792877]
[335.38995361 -111.40388489]
[321.61361694 -105.46984100]
[325.11376953 -89.73223877]
[325.27362061 -73.70309448]
[322.12448120 -58.07955933]
[315.84066772 -43.53322983]
[306.73040771 -30.68128967]
[295.22091675 -20.06033897]
[281.83843994 -12.10401535]
[267.18423462 -7.12536716]
[251.90771484 -5.30466366]
[236.67750549 -6.68312550]
[222.15231323 -11.16277790]
[208.95237732 -18.51235962]
[199.43647766 -6.91720295]
[189.92057800 4.67795372]
[180.40467834 16.27311134]
[170.88877869 27.86826706]
[161.37287903 39.46342468]
[151.85697937 51.05858231]
[153.76858521 61.08470917]
[149.76652527 70.71221161]
[140.94743347 76.67485046]
[130.08314514 76.80750275]
[120.24579620 88.13121033]
[130.09541321 76.81816101]
[144.38381958 72.25292206]
[158.96827698 75.75910950]
[169.62022400 86.32016754]
[173.25126648 100.87405396]
[168.80863953 115.20105743]
[157.58041382 125.14725494]
[142.82205200 127.82888031]
[128.81257629 122.46842957]
[119.61475372 110.62236023]
[128.80171204 122.47984314]
[137.98866272 134.33732605]
[147.17561340 146.19480896]
[162.55209351 151.89535522]
[165.03639221 168.10523987]
[152.07287598 178.14910889]
[136.99731445 171.69471741]
[135.31813049 155.38175964]
[126.13117981 143.52427673]
[116.94422913 131.66679382]
[107.75727081 119.80931854]
[110.13480377 134.61968994]
[112.51233673 149.43006897]
[114.88986969 164.24044800]
[123.35246277 176.62530518]
[126.94451904 191.18885803]
[125.21154785 206.08840942]
[118.37281036 219.43876648]
[107.29360199 229.55068970]
[93.37576294 235.14476013]
[78.38028717 235.51316833]
[64.20452881 230.60929871]
[52.64212799 221.05363464]
[45.15605164 208.05522156]
[42.69350433 193.25874329]
[45.56606674 178.53636169]
[53.41027451 165.75088501]
[65.23603058 156.51876831]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 67]
[3 66]
[4 65]
[5 64]
[7 62]
[8 61]
[9 60]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[20 31]
[21 30]
[22 29]
[49 57]
[50 56]
[69 79]
[70 78]
[71 77]
[72 76]
[90 185]
[91 184]
[93 180]
[94 179]
[95 178]
[96 177]
[97 176]
[98 175]
[99 174]
[109 120]
[110 119]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
[145 162]
[146 161]
[147 160]
[148 159]
[150 158]
[151 157]
[152 156]
[195 206]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
