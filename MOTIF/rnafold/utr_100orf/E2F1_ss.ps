%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGCGCGUAAAAGUGGCCGGGACUUUGCAGGCAGCGGCGGCCGGGGGCGGAGCGGGAUCGAGCCCUCGCCGAGGCCUGCCGCCAUGGGCCCGCGCCGCCGCCGCCGCCUGUCACCCGGGCCGCGCGGGCCGUGAGCGUCAUGGCCUUGGCCGGGGCCCCUGCGGGCGGCCCAUGCGCGCCGGCGCUGGAGGCCCUGCUCGGGGCCGGCGCGCUGCGGCUGCUCGACUCCUCGCAGAUCG\
) } def
/len { sequence length } bind def

/coor [
[645.96612549 264.49475098]
[653.47070312 251.50701904]
[666.76263428 244.55554199]
[651.99426270 241.92942810]
[637.22595215 239.30331421]
[623.34063721 244.69288635]
[611.10821533 234.65902710]
[596.33990479 232.03291321]
[581.57159424 229.40679932]
[579.20874023 230.87919617]
[576.12603760 231.51400757]
[572.63610840 231.03456116]
[569.14532471 229.28109741]
[566.11059570 226.23965454]
[551.49920654 222.84739685]
[536.88781738 219.45513916]
[522.27642822 216.06288147]
[507.66503906 212.67062378]
[493.05364990 209.27836609]
[478.42047119 205.98141479]
[463.76611328 202.77990723]
[449.11172485 199.57839966]
[442.30865479 207.21887207]
[432.87835693 211.38833618]
[422.48736572 211.27691650]
[413.00253296 206.83787537]
[406.15548706 198.80787659]
[403.22662354 188.58567810]
[388.70864868 184.81369019]
[374.19064331 181.04168701]
[359.67266846 177.26968384]
[345.15466309 173.49768066]
[330.63668823 169.72569275]
[316.37271118 174.01387024]
[304.96166992 163.05491638]
[290.44366455 159.28292847]
[275.92568970 155.51092529]
[261.40768433 151.73892212]
[246.88970947 147.96691895]
[232.37171936 144.19493103]
[217.85372925 140.42292786]
[203.33573914 136.65092468]
[198.85289001 138.24403381]
[193.32221985 137.05218506]
[188.49098206 132.58674622]
[174.07624817 128.43756104]
[159.70533752 132.35244751]
[148.58386230 121.09976196]
[134.16912842 116.95058441]
[119.75440979 112.80140686]
[105.33968353 108.65222931]
[99.42340851 129.97706604]
[72.23664856 141.34043884]
[57.43534470 138.90705872]
[42.63403702 136.47367859]
[27.83273125 134.04028320]
[13.03142643 131.60690308]
[-4.05455828 138.49853516]
[-17.17452240 126.83083344]
[-32.00629044 124.59059906]
[-46.83805847 122.35035706]
[-55.77010727 124.16098022]
[-61.84805679 119.98303986]
[-76.64936066 117.54965210]
[-91.79419708 123.83979797]
[-104.64775848 113.65559387]
[-101.98739624 97.47367096]
[-86.54986572 91.94061279]
[-74.21598053 102.74835205]
[-59.41467285 105.18173218]
[-44.59782028 107.51859283]
[-29.76605225 109.75882721]
[-14.93428516 111.99906921]
[-5.02878857 105.07803345]
[7.33497572 106.80924225]
[15.46481037 116.80560303]
[30.26611519 119.23898315]
[45.06742096 121.67237091]
[59.86872482 124.10575104]
[74.67002869 126.53913116]
[77.70864105 119.68225098]
[86.82447815 99.11160278]
[75.07961273 89.78111267]
[63.33474350 80.45062256]
[47.17181778 75.33238983]
[47.61568451 58.38425446]
[64.02435303 54.11906433]
[72.66522980 68.70574951]
[84.41010284 78.03624725]
[96.15496826 87.36673737]
[109.48886108 94.23750305]
[123.90358734 98.38668060]
[138.31831360 102.53585815]
[152.73303223 106.68503571]
[168.13497925 103.06691742]
[178.22543335 114.02283478]
[192.64015198 118.17201233]
[207.10774231 122.13294220]
[221.62573242 125.90493774]
[236.14372253 129.67694092]
[250.66171265 133.44892883]
[265.17968750 137.22093201]
[279.69769287 140.99293518]
[294.21566772 144.76493835]
[308.73367310 148.53692627]
[324.03607178 144.51853943]
[334.40869141 155.20770264]
[348.92666626 158.97969055]
[363.44467163 162.75169373]
[377.96264648 166.52369690]
[392.48062134 170.29570007]
[406.99862671 174.06768799]
[423.78570557 162.99423218]
[442.99932861 167.79446411]
[452.31323242 184.92404175]
[466.96762085 188.12554932]
[481.62197876 191.32704163]
[490.65298462 190.10203552]
[496.44592285 194.66697693]
[511.05728149 198.05923462]
[525.66870117 201.45149231]
[540.28009033 204.84375000]
[554.89147949 208.23600769]
[569.50280762 211.62826538]
[584.19769287 214.63847351]
[598.96600342 217.26458740]
[613.73431396 219.89070129]
[628.67596436 214.68896484]
[639.85205078 224.53497314]
[654.62042236 227.16110229]
[669.38873291 229.78721619]
[684.28564453 231.54298401]
[699.25982666 232.42239380]
[714.23400879 233.30178833]
[729.20819092 234.18119812]
[744.18243408 235.06059265]
[760.45819092 226.42782593]
[774.72143555 236.66639709]
[789.70581055 237.35052490]
[804.69024658 238.03466797]
[800.27728271 227.75514221]
[800.64056396 215.11372375]
[806.56445312 201.98120117]
[817.13641357 191.34008789]
[827.70843506 180.69897461]
[838.28039551 170.05786133]
[848.85235596 159.41674805]
[859.42437744 148.77563477]
[863.09173584 132.79182434]
[878.84515381 128.23527527]
[890.47882080 139.79336548]
[886.02502441 155.57614136]
[870.06549072 159.34762573]
[859.49346924 169.98873901]
[848.92150879 180.62983704]
[838.34954834 191.27095032]
[827.77752686 201.91206360]
[817.20556641 212.55317688]
[818.85406494 219.86976624]
[831.75231934 212.21244812]
[843.02050781 222.11331177]
[837.08612061 235.88949585]
[822.15100098 234.50296021]
[823.79949951 241.81954956]
[837.91333008 246.89877319]
[852.02722168 251.97801208]
[866.14111328 257.05722046]
[880.25494385 262.13647461]
[894.36883545 267.21569824]
[908.48272705 272.29492188]
[922.59655762 277.37414551]
[936.74328613 282.36126709]
[950.92218018 287.25610352]
[960.03448486 287.09661865]
[965.25323486 292.30822754]
[979.36712646 297.38748169]
[993.48095703 302.46670532]
[1007.59484863 307.54592896]
[1021.70874023 312.62515259]
[1035.82263184 317.70437622]
[1049.93652344 322.78359985]
[1064.05041504 327.86285400]
[1078.16418457 332.94207764]
[1092.27807617 338.02130127]
[1101.39172363 337.98059082]
[1106.54211426 343.25982666]
[1120.58862305 348.52261353]
[1136.22619629 346.11895752]
[1145.42968750 357.82980347]
[1159.47619629 363.09255981]
[1173.52258301 368.35534668]
[1187.80285645 361.58398438]
[1202.66027832 366.97216797]
[1209.28027344 381.32318115]
[1203.73535156 396.12280273]
[1189.31506348 402.59069824]
[1174.57495117 396.88958740]
[1168.25988770 382.40182495]
[1154.21337891 377.13903809]
[1140.16687012 371.87625122]
[1125.53405762 374.65631104]
[1115.32580566 362.56906128]
[1101.27929688 357.30627441]
[1087.19885254 352.13516235]
[1073.08496094 347.05593872]
[1058.97106934 341.97671509]
[1044.85729980 336.89749146]
[1030.74340820 331.81826782]
[1016.62951660 326.73904419]
[1002.51562500 321.65979004]
[988.40173340 316.58056641]
[974.28790283 311.50134277]
[960.17401123 306.42211914]
[946.02734375 301.43499756]
[931.84844971 296.54016113]
[924.51507568 297.32681274]
[917.51733398 291.48803711]
[903.40350342 286.40878296]
[889.28961182 281.32955933]
[875.17572021 276.25033569]
[861.06188965 271.17111206]
[846.94799805 266.09188843]
[832.83410645 261.01266479]
[818.72021484 255.93342590]
[804.00610352 253.01905823]
[789.02166748 252.33491516]
[774.03729248 251.65078735]
[764.90606689 259.56533813]
[752.42926025 259.13055420]
[743.30303955 250.03480530]
[728.32879639 249.15539551]
[713.35461426 248.27600098]
[698.38043213 247.39659119]
[683.40618896 246.51719666]
[694.71777344 256.36853027]
[698.99707031 270.74514771]
[694.91418457 285.17880249]
[683.73803711 295.18347168]
[668.94219971 297.64974976]
[655.12518311 291.81106567]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 131]
[4 130]
[5 129]
[7 127]
[8 126]
[9 125]
[14 124]
[15 123]
[16 122]
[17 121]
[18 120]
[19 119]
[20 117]
[21 116]
[22 115]
[28 112]
[29 111]
[30 110]
[31 109]
[32 108]
[33 107]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 100]
[41 99]
[42 98]
[45 97]
[46 96]
[48 94]
[49 93]
[50 92]
[51 91]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[59 73]
[60 72]
[61 71]
[63 70]
[64 69]
[82 90]
[83 89]
[84 88]
[132 234]
[133 233]
[134 232]
[135 231]
[136 230]
[138 227]
[139 226]
[140 225]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
[164 224]
[165 223]
[166 222]
[167 221]
[168 220]
[169 219]
[170 218]
[171 217]
[172 215]
[173 214]
[175 213]
[176 212]
[177 211]
[178 210]
[179 209]
[180 208]
[181 207]
[182 206]
[183 205]
[184 204]
[186 203]
[187 202]
[189 200]
[190 199]
[191 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
