%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUGUGACCUGACGUCACCGGGCGAGUUACCUCCCGCAGCCGCAGCCGCCGUGCUCAGCGCGAGCCCCGGAGCCCUUGAGCGCGAGGCGCGGAGCCCCCGGAGCCCCCAAACCGCAGACACAUCCCCGCGCCCCAGAGCCCCGGCCUGCGCGCCCAGCCGGGCCCGCGCGAUGCCCUCAGACCGGCCUUUCAAGCAGCGGCGGAGCUUCGCCGACCGCUGUAAGGAGGUACAGCAGAUCCGCGACCAGCACCC\
CAGCAAAAUCCCGGUGA\
) } def
/len { sequence length } bind def

/coor [
[104.11374664 436.53253174]
[109.94975281 450.50463867]
[110.93032074 465.61480713]
[106.94908905 480.22399902]
[98.43791199 492.74752808]
[86.32002258 501.82690430]
[71.90986633 506.47732544]
[56.77056122 506.19427490]
[42.54430008 501.00851440]
[30.77424240 491.48251343]
[22.73711586 478.64962769]
[19.30472755 463.90182495]
[20.84939957 448.83886719]
[27.20357513 435.09466553]
[37.67800140 424.16006470]
[51.13648987 417.22122192]
[66.11916351 415.03076172]
[68.86542511 400.28430176]
[71.61168671 385.53784180]
[74.35794830 370.79138184]
[77.10420990 356.04492188]
[79.85047150 341.29846191]
[82.59673309 326.55200195]
[85.34299469 311.80554199]
[74.26508331 293.87277222]
[70.80627441 274.61691284]
[74.40376282 256.92355347]
[83.50776672 243.09753418]
[95.91920471 234.56285095]
[109.20340729 231.72457886]
[107.30970764 216.84458923]
[105.41601562 201.96461487]
[103.52231598 187.08462524]
[101.62861633 172.20465088]
[99.73491669 157.32466125]
[97.84121704 142.44467163]
[72.18552399 132.13356018]
[58.30315018 108.22093964]
[43.30538559 108.47985077]
[33.82006836 117.18436432]
[21.34659767 117.11157227]
[12.54773903 108.84436798]
[-2.45201302 108.93067169]
[-17.45176506 109.01697540]
[-32.45151520 109.10328674]
[-40.97824478 112.27249908]
[-47.62413025 109.10328674]
[-62.62388229 109.01697540]
[-77.62363434 108.93067169]
[-87.30676270 117.41459656]
[-99.77525330 117.05476379]
[-108.38152313 108.58725739]
[-123.37928772 108.32834625]
[-138.37705994 108.06943512]
[-153.37481689 107.81053162]
[-168.37258911 107.55162048]
[-183.37034607 107.29270935]
[-198.36811829 107.03379822]
[-213.36712646 106.86119080]
[-228.36688232 106.77487946]
[-242.21133423 114.43264771]
[-254.89387512 106.62224579]
[-269.89364624 106.53594208]
[-277.58010864 119.83306122]
[-290.89340210 127.49155426]
[-306.25222778 127.45132446]
[-319.52517700 119.72319794]
[-327.14190674 106.38598633]
[-327.05355835 91.02735138]
[-319.28384399 77.77867889]
[-305.92282104 70.20379639]
[-290.56454468 70.34030914]
[-277.34030151 78.15149689]
[-269.80731201 91.53618622]
[-254.80757141 91.62249756]
[-242.03599548 83.95855713]
[-228.28056335 91.77513123]
[-213.28082275 91.86143494]
[-206.59890747 88.76890564]
[-198.10920715 92.03603363]
[-183.11143494 92.29494476]
[-168.11367798 92.55385590]
[-153.11590576 92.81275940]
[-138.11814880 93.07167053]
[-123.12037659 93.33058167]
[-108.12261200 93.58949280]
[-93.23394775 84.27046204]
[-77.53733063 93.93092346]
[-62.53757477 94.01722717]
[-47.53782272 94.10353088]
[-32.53782272 94.10353088]
[-17.53807259 94.01722717]
[-2.53832006 93.93092346]
[12.46143150 93.84461212]
[27.13169479 84.18541718]
[43.04647827 93.48208618]
[58.04424286 93.22317505]
[62.06374359 80.84141541]
[69.64254761 70.25717163]
[80.06958008 62.46349335]
[75.48360443 48.18172836]
[70.89762878 33.89996338]
[66.31164551 19.61819839]
[54.72567749 8.84434891]
[58.20136261 -5.63905001]
[53.61538696 -19.92081451]
[39.30740738 -20.13717461]
[25.78421211 -24.74971199]
[14.36051559 -33.29603195]
[6.14260578 -44.93198776]
[1.92121661 -58.51504135]
[2.09545660 -72.71644592]
[6.63511324 -86.15124512]
[15.08488846 -97.51329041]
[26.61002541 -105.70229340]
[22.18869781 -120.03588867]
[17.76737022 -134.36947632]
[2.66713738 -136.59336853]
[-9.96797752 -145.15588379]
[-17.62926102 -158.35693359]
[-18.79556084 -173.57542419]
[-13.23530769 -187.78971863]
[-2.05249310 -198.17756653]
[12.53252697 -202.67645264]
[27.62388611 -200.39311218]
[40.22518158 -191.78091431]
[47.83442307 -178.54980469]
[48.94078445 -163.32682800]
[43.32459641 -149.13453674]
[32.10096359 -138.79080200]
[36.52228928 -124.45721436]
[40.94361877 -110.12362671]
[56.69393539 -109.53281403]
[71.31217957 -103.56822205]
[83.01974487 -92.93566895]
[90.38538361 -78.91009521]
[92.50010681 -63.18275833]
[89.08937073 -47.65724182]
[80.54853821 -34.21908569]
[67.89714813 -24.50679207]
[72.48313141 -10.22502804]
[83.74108124 -0.47270608]
[80.59341431 15.03222084]
[85.17938995 29.31398582]
[89.76536560 43.59574890]
[94.35134888 57.87751389]
[99.29271698 50.05664825]
[106.01471710 42.91883469]
[114.41246796 36.77591705]
[122.28303528 24.00664902]
[130.15359497 11.23738289]
[138.02416992 -1.53188360]
[145.89472961 -14.30115032]
[153.61784363 -27.16014099]
[161.19245911 -40.10715485]
[168.76707458 -53.05416489]
[176.34170532 -66.00117493]
[175.89492798 -82.39424133]
[190.00807190 -90.74595642]
[204.16273499 -82.46480560]
[203.79782104 -66.06971741]
[189.28871155 -58.42655945]
[181.71409607 -45.47954559]
[174.13948059 -32.53253555]
[166.56484985 -19.58552170]
[166.87493896 -14.85325241]
[164.24070740 -9.86994171]
[158.66400146 -6.43058300]
[150.79344177 6.33868361]
[142.92286682 19.10795021]
[135.05230713 31.87721634]
[127.18173218 44.64648438]
[132.43907166 49.99535751]
[142.95373535 60.69310760]
[148.21105957 66.04197693]
[161.11427307 58.39299011]
[174.01748657 50.74400330]
[175.32763672 35.28233719]
[185.50115967 23.56571770]
[200.62612915 20.09942627]
[214.88667297 26.21632195]
[222.79933167 39.56433105]
[221.32153320 55.01087570]
[211.02151489 66.61643982]
[195.85983276 69.91844940]
[181.66648865 63.64721680]
[168.76327515 71.29620361]
[155.86004639 78.94519806]
[157.44470215 86.27587891]
[172.10606384 83.10656738]
[185.07049561 75.56178284]
[196.25221252 85.56023407]
[190.19844055 99.28437042]
[175.27537537 97.76792908]
[160.61401367 100.93723297]
[162.19866943 108.26791382]
[177.10913086 109.90449524]
[192.01957703 111.54106903]
[206.93002319 113.17765045]
[221.84048462 114.81422424]
[236.75093079 116.45080566]
[251.66139221 118.08737946]
[266.58102417 119.63814545]
[281.50930786 121.10302734]
[296.43762207 122.56791687]
[307.48373413 111.49918365]
[323.06491089 110.17186737]
[335.82412720 119.21267700]
[339.73690796 134.35282898]
[332.95574951 148.44360352]
[318.68249512 154.83177185]
[303.65655518 150.50102234]
[294.97271729 137.49621582]
[280.04443359 136.03132629]
[265.11611938 134.56643677]
[258.17819214 137.03160095]
[250.02481079 132.99783325]
[235.11436462 131.36125183]
[220.20390320 129.72468567]
[205.29345703 128.08810425]
[190.38299561 126.45152283]
[175.47254944 124.81494904]
[160.56208801 123.17836761]
[145.13307190 135.46041870]
[128.38470459 141.09924316]
[112.72120667 140.55097961]
[114.61489868 155.43096924]
[116.50859833 170.31094360]
[118.40229797 185.19093323]
[120.29599762 200.07090759]
[122.18969727 214.95089722]
[124.08338928 229.83088684]
[147.09542847 230.09568787]
[169.16612244 246.67382812]
[179.07669067 277.38763428]
[189.52961731 288.14572144]
[205.33389282 288.12240601]
[216.46653748 299.34024048]
[216.32275391 315.14389038]
[204.98783875 326.15731812]
[189.18659973 325.84643555]
[178.29364014 314.39572144]
[178.77154541 298.59866333]
[168.31861877 287.84057617]
[162.12182617 292.06549072]
[170.57162476 304.45907593]
[171.69288635 319.41711426]
[158.17803955 312.90887451]
[149.72824097 300.51528931]
[143.53144836 304.74020386]
[149.72697449 318.40090942]
[164.60664368 323.72735596]
[171.28616333 338.05075073]
[165.80270386 352.87326050]
[151.40950012 359.40100098]
[136.64578247 353.76113892]
[130.27059937 339.29971313]
[136.06623840 324.59643555]
[129.87072754 310.93569946]
[122.42540741 311.83972168]
[124.23345184 326.73037720]
[118.35398102 340.53005981]
[109.34281921 328.53842163]
[107.53477478 313.64779663]
[100.08945465 314.55181885]
[97.34319305 329.29827881]
[94.59693146 344.04473877]
[91.85066986 358.79119873]
[89.10440826 373.53765869]
[86.35814667 388.28408813]
[83.61188507 403.03054810]
[80.86562347 417.77700806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 272]
[18 271]
[19 270]
[20 269]
[21 268]
[22 267]
[23 266]
[24 265]
[30 232]
[31 231]
[32 230]
[33 229]
[34 228]
[35 227]
[36 226]
[38 97]
[39 96]
[42 94]
[43 93]
[44 92]
[45 91]
[47 90]
[48 89]
[49 88]
[52 86]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[58 80]
[59 78]
[60 77]
[62 75]
[63 74]
[100 146]
[101 145]
[102 144]
[103 143]
[105 141]
[106 140]
[115 132]
[116 131]
[117 130]
[149 172]
[150 171]
[151 170]
[152 169]
[153 168]
[154 165]
[155 164]
[156 163]
[157 162]
[175 188]
[176 187]
[177 186]
[196 223]
[197 222]
[198 221]
[199 220]
[200 219]
[201 218]
[202 217]
[203 215]
[204 214]
[205 213]
[235 244]
[236 243]
[250 259]
[251 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
