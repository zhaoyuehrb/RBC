%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUUUGCCACCCCAUGCAGGCUUCUUGCCAUAGUUCAGCUGUUCUUCCUGCAGCUAAAGUGCAUUGUGUAAAACAUGGGGGAUGUGAAUCAGUCGGUGGCCUCAGACUUCAUUCUGGUGGGCCUCUUCAGUCACUCAGGAUCACGCCAGCUCCUCUUCUCCCUGGUGGCUGUCA\
) } def
/len { sequence length } bind def

/coor [
[346.33068848 149.87049866]
[339.23474121 138.82150269]
[335.90893555 126.08694458]
[320.96862793 124.74996948]
[306.02832031 123.41300201]
[291.08801270 122.07603455]
[276.14773560 120.73905945]
[261.20742798 119.40209198]
[248.79270935 130.72564697]
[231.69184875 129.55941772]
[220.49699402 116.13727570]
[205.53521729 115.06718445]
[190.57344055 113.99710083]
[175.61164856 112.92700958]
[160.64987183 111.85692596]
[145.68809509 110.78683472]
[130.72630310 109.71674347]
[123.31802368 132.97680664]
[98.37113190 148.52279663]
[64.22567749 144.00527954]
[52.54605103 153.41731262]
[40.86642838 162.82934570]
[37.72877502 178.56259155]
[23.40624428 185.79063416]
[8.88585949 178.96876526]
[5.30641556 163.33012390]
[15.41375542 150.87133789]
[31.45439339 151.14973450]
[43.13401794 141.73770142]
[54.81364059 132.32565308]
[52.70064545 125.12946320]
[38.30825043 129.35545349]
[25.92606544 137.82194519]
[14.04776096 128.66192627]
[19.08903122 114.53445435]
[34.08226395 114.96305847]
[48.47465515 110.73706818]
[46.36166382 103.54087067]
[31.44760704 101.93744659]
[16.53355408 100.33401489]
[1.61949885 98.73059082]
[-13.29455566 97.12716675]
[-28.20861053 95.52373505]
[-39.35703659 106.48943329]
[-54.94984055 107.67203522]
[-67.62457275 98.51315308]
[-71.39661407 83.33732605]
[-64.48491669 69.31011963]
[-50.15298462 63.05474854]
[-35.16790771 67.52481079]
[-26.60518265 80.60968018]
[-11.69112873 82.21311188]
[3.22292566 83.81653595]
[18.13698006 85.41996002]
[33.05103302 87.02339172]
[47.96508789 88.62681580]
[51.20197678 81.86127472]
[37.67099762 75.38727570]
[44.14522171 61.85640717]
[57.67574692 68.33018494]
[60.91263580 61.56464767]
[50.30603409 50.95804596]
[39.69943237 40.35144424]
[29.09283066 29.74484062]
[13.61746407 22.82028961]
[15.98739338 6.03280163]
[32.77488327 3.66287327]
[39.69943237 19.13823891]
[50.30603409 29.74484062]
[60.91263580 40.35144424]
[71.51923370 50.95804596]
[97.83656311 49.45564651]
[118.96472931 59.77759933]
[130.60092163 76.88890839]
[131.79640198 94.75496674]
[146.75817871 95.82505035]
[161.71995544 96.89514160]
[176.68174744 97.96522522]
[191.64352417 99.03531647]
[206.60530090 100.10540009]
[221.56709290 101.17549133]
[230.67912292 91.23027039]
[243.66802979 88.40045929]
[255.73243713 93.50229645]
[262.54440308 104.46179199]
[277.48471069 105.79876709]
[292.42498779 107.13573456]
[307.36529541 108.47270203]
[322.30560303 109.80967712]
[337.24588013 111.14664459]
[343.04745483 98.83418274]
[352.46472168 89.05792236]
[364.48660278 82.83363342]
[377.83325195 80.79753876]
[391.09210205 83.14141083]
[402.86761475 89.59468842]
[414.02670288 79.57099915]
[419.12280273 64.59300232]
[433.76156616 61.84414673]
[444.92065430 51.82045746]
[456.07977295 41.79677200]
[467.23889160 31.77308464]
[478.39797974 21.74939919]
[489.37640381 11.52812958]
[500.17065430 1.11253464]
[510.96487427 -9.30305958]
[521.75909424 -19.71865463]
[521.79058838 -35.52291107]
[533.04693604 -46.61661148]
[548.84997559 -46.41806030]
[559.82403564 -35.04505157]
[559.45837402 -19.24499321]
[547.97003174 -8.39177704]
[532.17468262 -8.92442513]
[521.38049316 1.49116933]
[510.58624268 11.90676403]
[499.79199219 22.32235909]
[498.81454468 27.02721214]
[494.85107422 31.15672874]
[488.42169189 32.90850830]
[477.26257324 42.93219376]
[466.10345459 52.95587921]
[454.94436646 62.97956848]
[443.78524780 73.00325775]
[439.48733521 87.26428986]
[424.05041504 90.73011017]
[412.89129639 100.75379181]
[418.93267822 120.82238007]
[414.33837891 141.27081299]
[426.18411255 150.47288513]
[438.02987671 159.67494202]
[449.87564087 168.87701416]
[461.72140503 178.07908630]
[473.56716919 187.28114319]
[485.41290283 196.48321533]
[494.14028931 199.28982544]
[497.38604736 205.95677185]
[509.06567383 215.36880493]
[520.74530029 224.78083801]
[532.42492676 234.19287109]
[544.71057129 225.41986084]
[558.90789795 220.28788757]
[573.96350098 219.17778015]
[588.76000977 222.17190552]
[602.19958496 229.04808044]
[613.28472900 239.29606628]
[621.19299316 252.15538025]
[625.33752441 266.67178345]
[625.41070557 281.76803589]
[621.40710449 296.32394409]
[613.62390137 309.25930786]
[602.63854980 319.61428833]
[589.26635742 326.62042236]
[574.49951172 329.75787354]
[559.43389893 328.79376221]
[545.18743896 323.79968262]
[532.81732178 315.14617920]
[523.24151611 303.47543335]
[517.17059326 289.65347290]
[515.05505371 274.70599365]
[517.05187988 259.74221802]
[523.01287842 245.87249756]
[511.33325195 236.46046448]
[499.65362549 227.04843140]
[487.97399902 217.63639832]
[476.21084595 208.32896423]
[464.36508179 199.12690735]
[452.51931763 189.92483521]
[440.67358398 180.72277832]
[428.82781982 171.52070618]
[416.98205566 162.31863403]
[405.13629150 153.11657715]
[394.25976562 160.19993591]
[381.69308472 163.56747437]
[368.67144775 162.86872864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 90]
[4 89]
[5 88]
[6 87]
[7 86]
[8 85]
[11 81]
[12 80]
[13 79]
[14 78]
[15 77]
[16 76]
[17 75]
[20 30]
[21 29]
[22 28]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[61 71]
[62 70]
[63 69]
[64 68]
[96 127]
[97 126]
[99 124]
[100 123]
[101 122]
[102 121]
[103 120]
[104 117]
[105 116]
[106 115]
[107 114]
[129 172]
[130 171]
[131 170]
[132 169]
[133 168]
[134 167]
[135 166]
[137 165]
[138 164]
[139 163]
[140 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
