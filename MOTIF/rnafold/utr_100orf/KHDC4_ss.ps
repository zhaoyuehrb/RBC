%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUUGGGGGCGGAAGUGACGAGAGGUGGUAGUCGGAUAGUUGGCGGGUGGUUGAGUAGAAGCGGUCGCCAUGUCCGCGGGGAGCGCGACACAUCCUGGAGCUGGCGGGCGCCGCAGCAAAUGGGACCAACCAGCUCCAGCCCCACUUCUCUUCCUCCCGCCAGCGGCCC\
) } def
/len { sequence length } bind def

/coor [
[109.40940857 459.25299072]
[108.30162048 444.29394531]
[107.19383240 429.33493042]
[106.08604431 414.37588501]
[104.97825623 399.41683960]
[103.87046814 384.45779419]
[102.62451172 369.50964355]
[101.24048615 354.57363892]
[99.85646057 339.63760376]
[90.97783661 327.67855835]
[97.40881348 313.22332764]
[96.02478790 298.28732300]
[94.64076233 283.35131836]
[93.25673676 268.41528320]
[81.66717529 277.93801880]
[66.95769501 275.00015259]
[59.91524124 261.75613403]
[65.70428467 247.91824341]
[80.07952118 243.63427734]
[92.50000000 252.04727173]
[92.50000000 237.04727173]
[92.50000000 222.04727173]
[92.50000000 207.04727173]
[92.50000000 192.04727173]
[92.50000000 177.04727173]
[92.50000000 162.04727173]
[92.50000000 147.04727173]
[92.50000000 132.04727173]
[76.02952576 122.55425262]
[67.55587769 105.53687286]
[69.90596008 86.67233276]
[57.93570328 77.63281250]
[45.96544647 68.59329224]
[14.01904297 68.41279602]
[0.47033474 61.97599030]
[-13.07837296 55.53918076]
[-26.62708092 49.10237122]
[-40.17578888 42.66556168]
[-46.84906387 42.81459045]
[-51.82845306 39.97430038]
[-54.09948730 35.73238373]
[-67.40109253 28.79932594]
[-80.70269775 21.86626816]
[-94.00430298 14.93321037]
[-107.30590820 8.00015163]
[-120.60751343 1.06709373]
[-136.42135620 1.54983473]
[-144.13134766 -11.19399452]
[-157.43295288 -18.12705231]
[-173.24679565 -17.64431190]
[-180.95680237 -30.38813972]
[-194.25840759 -37.32119751]
[-209.25651550 -32.33802032]
[-223.34779358 -39.49424362]
[-228.17211914 -54.54420471]
[-220.86732483 -68.55903625]
[-205.76719666 -73.22397614]
[-191.83038330 -65.77140808]
[-187.32534790 -50.62280273]
[-174.02374268 -43.68974686]
[-159.16131592 -44.66838455]
[-150.49989319 -31.42865753]
[-137.19828796 -24.49559975]
[-122.33587646 -25.47423935]
[-113.67445374 -12.23451138]
[-100.37284851 -5.30145311]
[-87.07124329 1.63160491]
[-73.76963806 8.56466293]
[-60.46803665 15.49772167]
[-47.16642761 22.43078041]
[-33.73897934 29.11685562]
[-20.19027138 35.55366516]
[-6.64156389 41.99047470]
[6.90714407 48.42728424]
[20.45585251 54.86408997]
[32.50912476 45.93556213]
[30.29959679 31.09918785]
[28.09007263 16.26281357]
[16.10640717 5.59644890]
[17.11785507 -10.41468906]
[30.34852028 -19.48822594]
[45.64896774 -14.66372013]
[51.28200531 0.35787931]
[42.92644501 14.05328751]
[45.13597107 28.88966179]
[47.34549713 43.72603607]
[55.00496674 56.62303543]
[66.97521973 65.66255188]
[78.94548035 74.70207214]
[86.59080505 69.94219971]
[95.24009705 67.43282318]
[104.24577332 67.36181641]
[112.93356323 69.73449707]
[120.65299225 74.37322235]
[126.82608032 80.93067169]
[140.71064758 75.25450897]
[154.59521484 69.57834625]
[168.47978210 63.90217590]
[182.36434937 58.22601318]
[196.24890137 52.54984665]
[210.13346863 46.87368011]
[224.01803589 41.19751358]
[237.90260315 35.52134705]
[251.78717041 29.84518242]
[257.96978760 15.54787636]
[272.13156128 9.98922825]
[285.72375488 15.97152138]
[299.60833740 10.29535580]
[305.79095459 -4.00195074]
[319.95272827 -9.56059933]
[333.54492188 -3.57830596]
[347.42950439 -9.25447178]
[361.31405640 -14.93063736]
[365.91259766 -29.87678909]
[379.07049561 -38.32686996]
[394.57498169 -36.29100800]
[405.10531616 -24.73047638]
[405.68942261 -9.10380554]
[396.05145264 3.21056986]
[380.74221802 6.39817762]
[366.99023438 -1.04607260]
[353.10565186 4.63009310]
[339.22109985 10.30625916]
[333.71240234 24.09720230]
[319.71234131 30.05143166]
[305.28448486 24.17992020]
[291.39993286 29.85608673]
[285.89126587 43.64702988]
[271.89120483 49.60125732]
[257.46331787 43.72974777]
[243.57876587 49.40591431]
[229.69419861 55.08208084]
[215.80963135 60.75824356]
[201.92507935 66.43441010]
[188.04051208 72.11057281]
[174.15594482 77.78674316]
[160.27137756 83.46290588]
[146.38681030 89.13907623]
[132.50224304 94.81523895]
[131.01245117 111.02296448]
[121.93872833 124.53507996]
[107.50000000 132.04727173]
[107.50000000 147.04727173]
[107.50000000 162.04727173]
[107.50000000 177.04727173]
[107.50000000 192.04727173]
[107.50000000 207.04727173]
[107.50000000 222.04727173]
[107.50000000 237.04727173]
[107.50000000 252.04727173]
[108.19274902 267.03128052]
[109.57677460 281.96728516]
[110.96080017 296.90328979]
[112.34482574 311.83929443]
[121.32244110 324.86669922]
[114.79247284 338.25360107]
[116.17649841 353.18960571]
[117.56052399 368.12561035]
[121.48184204 376.41998291]
[118.82950592 383.35000610]
[119.93729401 398.30905151]
[121.04508209 413.26809692]
[122.15287018 428.22714233]
[123.26065826 443.18615723]
[124.36844635 458.14520264]
[135.53164673 469.66744995]
[133.34049988 485.56018066]
[119.47586060 493.63183594]
[104.57350159 487.69052124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[4 162]
[5 161]
[6 160]
[7 158]
[8 157]
[9 156]
[11 154]
[12 153]
[13 152]
[14 151]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 145]
[26 144]
[27 143]
[28 142]
[31 89]
[32 88]
[33 87]
[34 75]
[35 74]
[36 73]
[37 72]
[38 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[48 63]
[49 62]
[51 60]
[52 59]
[76 86]
[77 85]
[78 84]
[95 139]
[96 138]
[97 137]
[98 136]
[99 135]
[100 134]
[101 133]
[102 132]
[103 131]
[104 130]
[107 127]
[108 126]
[111 123]
[112 122]
[113 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
