%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:44:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCUCCCCCUCCCAAAAUCGCUCCAUUACAUAAAUCGGGGGGGGUGCAGGAGGGGGGUCCCUUCCGAUCCUCCCUCCUGACGCCCCCCCCAGCAGCCCCCUCCCCCACCAUUGAAAGCCAUGAAUUUUGAAUUUGAGAGGGAGAUUGGGUUUAUAAACAGCCAGCCGUCGCUCGCCGAGUGUCUGACUUCCUUCCCCGCUGUCUUGGAGACAUUUCAAA\
) } def
/len { sequence length } bind def

/coor [
[95.98615265 452.37289429]
[87.65242767 464.97152710]
[76.10593414 474.71090698]
[62.28269958 480.80145264]
[47.30332184 482.74951172]
[32.38209915 480.39706421]
[18.72863770 473.93490601]
[7.44975758 463.88684082]
[-0.54021215 451.06744385]
[-4.59356022 436.51593018]
[-4.38169956 421.41189575]
[0.07819502 406.97976685]
[8.42457962 394.38949585]
[19.98085022 384.66174316]
[33.81019211 378.58508301]
[48.79152298 376.65209961]
[51.12751007 361.83511353]
[53.46349335 347.01812744]
[55.79948044 332.20111084]
[46.85572052 320.34597778]
[49.01366806 305.28616333]
[61.50909042 295.98550415]
[63.84507370 281.16851807]
[66.18106079 266.35153198]
[68.51704407 251.53453064]
[70.85303497 236.71754456]
[61.90927124 224.86238098]
[64.06722260 209.80258179]
[76.56264496 200.50192261]
[78.89862823 185.68493652]
[81.23461151 170.86793518]
[66.85092163 165.38763428]
[53.92857361 157.02479553]
[43.03722382 146.14810181]
[34.65701294 133.23699951]
[29.15736771 118.86070251]
[26.78073692 103.65294647]
[27.63188934 88.28414917]
[13.14761066 84.38470459]
[-1.33666778 80.48526001]
[-15.82094574 76.58581543]
[-30.30522346 72.68636322]
[-44.78950119 68.78691864]
[-59.27378082 64.88747406]
[-73.75805664 60.98802567]
[-88.24234009 57.08858109]
[-102.72661591 53.18913269]
[-117.23824310 49.39273453]
[-131.77648926 45.69957352]
[-146.31472778 42.00641251]
[-160.85298157 38.31325150]
[-175.39122009 34.62009048]
[-189.92947388 30.92693138]
[-204.46771240 27.23377037]
[-219.00595093 23.54060936]
[-233.57008362 19.95087433]
[-248.15936279 16.46474648]
[-262.74862671 12.97861862]
[-277.33792114 9.49249077]
[-291.92718506 6.00636244]
[-305.26086426 14.49096298]
[-320.67037964 10.98063374]
[-329.01351929 -2.44200897]
[-325.34048462 -17.81354904]
[-311.83038330 -26.01432419]
[-296.49853516 -22.17896080]
[-288.44104004 -8.58291149]
[-273.85177612 -5.09678316]
[-259.26251221 -1.61065519]
[-244.67323303 1.87547290]
[-230.08395386 5.36160088]
[-222.85311890 3.86000156]
[-215.31278992 9.00236511]
[-200.77455139 12.69552517]
[-186.23631287 16.38868523]
[-171.69805908 20.08184624]
[-157.15982056 23.77500725]
[-142.62156677 27.46816826]
[-128.08332825 31.16132736]
[-113.54508209 34.85448837]
[-106.29362488 33.45582581]
[-98.82717133 38.70485306]
[-84.34288788 42.60430145]
[-69.85861206 46.50374603]
[-55.37433243 50.40319443]
[-40.89005661 54.30264282]
[-26.40577698 58.20208740]
[-11.92149925 62.10153580]
[2.56277895 66.00098419]
[17.04705620 69.90042877]
[31.53133583 73.79987335]
[45.54633713 50.91636658]
[66.85716248 34.60919952]
[92.60854340 27.06324005]
[119.35025024 29.28951645]
[124.76887512 15.30243397]
[130.18750000 1.31535041]
[135.60612488 -12.67173290]
[141.02474976 -26.65881729]
[137.04301453 -46.42498398]
[152.63380432 -57.86955261]
[157.65263367 -72.00502014]
[162.67146301 -86.14048767]
[167.69027710 -100.27594757]
[172.70910645 -114.41141510]
[168.16709900 -134.05641174]
[183.42625427 -145.93954468]
[188.04121399 -160.21197510]
[179.07540894 -172.73875427]
[179.20343018 -187.96495056]
[188.16661072 -200.05317688]
[202.35925293 -204.49243164]
[206.97422791 -218.76486206]
[211.58920288 -233.03727722]
[216.20416260 -247.30970764]
[220.81913757 -261.58212280]
[225.43411255 -275.85455322]
[216.18707275 -288.31536865]
[216.06401062 -303.83197021]
[225.11225891 -316.43786621]
[239.85255432 -321.28588867]
[254.61697388 -316.51181030]
[263.72830200 -303.95141602]
[263.68301392 -288.43441772]
[254.49855042 -275.92739868]
[239.70652771 -271.23959351]
[235.09156799 -256.96716309]
[230.47659302 -242.69473267]
[225.86161804 -228.42231750]
[221.24664307 -214.14988708]
[216.63168335 -199.87747192]
[225.53833008 -187.96908569]
[225.72720337 -172.92153931]
[216.91630554 -160.50294495]
[202.31364441 -155.59700012]
[197.69866943 -141.32458496]
[203.14634705 -132.69021606]
[202.94177246 -122.26347351]
[196.91130066 -113.48748779]
[186.84457397 -109.39259338]
[181.82574463 -95.25712585]
[176.80693054 -81.12165833]
[171.78810120 -66.98619080]
[166.76927185 -52.85072708]
[171.96929932 -44.06499481]
[171.46841431 -33.64828491]
[165.19088745 -25.04726791]
[155.01184082 -21.24019241]
[149.59321594 -7.25310802]
[144.17459106 6.73397541]
[138.75596619 20.72105980]
[133.33734131 34.70814133]
[140.87605286 39.14318085]
[147.83293152 44.44448471]
[154.10893250 50.53659439]
[159.61471558 57.33279037]
[164.27191162 64.73632812]
[168.01422119 72.64183044]
[170.78840637 80.93676758]
[172.55493164 89.50305176]
[173.28868103 98.21875763]
[188.24285889 99.39032745]
[202.60519409 92.75452423]
[214.68927002 101.46224976]
[229.64344788 102.63381958]
[244.59762573 103.80539703]
[259.15557861 96.25567627]
[272.82516479 105.31513977]
[271.54431152 121.66419220]
[256.63064575 128.48432922]
[243.42605591 118.75957489]
[228.47187805 117.58799744]
[213.51770020 116.41642761]
[200.22499084 123.13603210]
[187.07128906 114.34450531]
[172.11711121 113.17293549]
[170.06796265 121.56117249]
[167.04673767 129.65028381]
[180.07250977 137.08865356]
[193.09828186 144.52700806]
[206.12405396 151.96537781]
[221.91705322 149.14384460]
[233.87419128 159.83993530]
[232.82299805 175.84851074]
[219.56983948 184.88916016]
[204.28141785 180.02668762]
[198.68569946 164.99114990]
[185.65992737 157.55278015]
[172.63415527 150.11442566]
[159.60838318 142.67605591]
[155.47338867 147.92814636]
[150.87721252 152.78175354]
[145.85803223 157.19654846]
[140.45759583 161.13580322]
[134.72080994 164.56678772]
[128.69534302 167.46096802]
[122.43130493 169.79428101]
[115.98078156 171.54731750]
[109.39739227 172.70552063]
[102.73587036 173.25926208]
[96.05160522 173.20391846]
[93.71561432 188.02091980]
[91.37963104 202.83790588]
[100.40747070 215.53182983]
[97.82737732 230.52508545]
[85.67002106 239.05352783]
[83.33403778 253.87051392]
[80.99804688 268.68750000]
[78.66206360 283.50448608]
[76.32608032 298.32147217]
[85.35391998 311.01541138]
[82.77382660 326.00866699]
[70.61647034 334.53710938]
[68.28048706 349.35409546]
[65.94449615 364.17108154]
[63.60851288 378.98806763]
[77.26846313 385.43652344]
[88.55742645 395.47326660]
[96.56027222 408.28463745]
[100.62823486 422.83206177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 216]
[17 215]
[18 214]
[19 213]
[22 210]
[23 209]
[24 208]
[25 207]
[26 206]
[29 203]
[30 202]
[31 201]
[38 91]
[39 90]
[40 89]
[41 88]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[47 82]
[48 80]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[95 152]
[96 151]
[97 150]
[98 149]
[99 148]
[101 144]
[102 143]
[103 142]
[104 141]
[105 140]
[107 136]
[108 135]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
[161 176]
[162 175]
[164 173]
[165 172]
[166 171]
[178 190]
[179 189]
[180 188]
[181 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
