%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUGUGACAAAGCGCAGGACCCCUCACUGCCCCAACUGCUUGCUGUUCUCUCUUUCUUGGGCUCUAAGGACCCAGGAGUCUGGGUGCACAGCCUCCUUCUCUCUGAGAUUCAAGAGUCUGAUCAGCAGCCUCUUCCUCCUCCAGGACCCAGAAGCCCUGAGCUUAUCCCCAUGGAGCUCUGCCGGUCCCUGGCCCUGCUGGGGGGCUCCCUGGGCCUGAUGUUCUGCCUGAUUGCUUUGAGCACCGAUUUCUGG\
UUUGAGGCUGUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[50.29272079 376.63061523]
[46.69004822 391.19152832]
[50.88636780 406.44607544]
[40.31873322 416.94247437]
[36.71606064 431.50341797]
[33.11338806 446.06436157]
[29.51071358 460.62527466]
[37.88842773 474.02639771]
[34.25499344 489.40734863]
[20.76606941 497.64288330]
[5.42438984 493.84704590]
[-2.66809583 480.27182007]
[1.28973925 464.97113037]
[14.94978237 457.02261353]
[18.55245590 442.46166992]
[22.15512848 427.90075684]
[25.75780106 413.33981323]
[21.30379486 399.12677002]
[32.12911606 387.58886719]
[35.73178864 373.02792358]
[26.01193047 361.77349854]
[24.76822472 346.77624512]
[32.68649673 333.77032471]
[46.90915298 327.85235596]
[50.51182556 313.29141235]
[54.11449814 298.73049927]
[57.71717072 284.16955566]
[61.31984329 269.60864258]
[56.86583710 255.39556885]
[67.69116211 243.85768127]
[71.29383087 229.29673767]
[74.89650726 214.73580933]
[70.44249725 200.52275085]
[81.26782227 188.98486328]
[84.87049103 174.42391968]
[88.47316742 159.86299133]
[61.80722809 142.88192749]
[48.61360550 116.22122192]
[50.99707031 88.44210815]
[37.07350159 82.86229706]
[23.14993477 77.28248596]
[14.05719757 77.00005341]
[9.09838295 71.55699158]
[-4.75980997 65.81673431]
[-18.61800385 60.07648468]
[-32.47619629 54.33623505]
[-48.18682861 56.20347214]
[-56.98435974 44.18461990]
[-70.84255219 38.44437027]
[-80.51198578 46.30113602]
[-92.53092957 49.29808807]
[-104.61578369 46.92876434]
[-114.49701691 39.70038223]
[-120.34538269 29.02676964]
[-121.11045837 16.95217896]
[-134.83236694 10.89336300]
[-148.55427551 4.83454847]
[-162.27618408 -1.22426677]
[-175.99809265 -7.28308201]
[-189.72000122 -13.34189701]
[-203.44190979 -19.40071106]
[-217.16381836 -25.45952797]
[-230.92048645 -31.43899727]
[-244.71145630 -37.33892441]
[-258.50244141 -43.23884964]
[-273.02334595 -37.60139465]
[-286.92529297 -43.78121948]
[-292.21026611 -57.65942764]
[-306.00122070 -63.55935669]
[-319.82604980 -69.37953949]
[-333.68423462 -75.11979675]
[-338.78799438 -74.44980621]
[-343.20812988 -75.66156006]
[-346.34774780 -78.18751526]
[-347.91754150 -81.30644226]
[-361.56857300 -87.52333832]
[-375.21957397 -93.74023438]
[-388.87060547 -99.95713043]
[-402.52160645 -106.17401886]
[-418.28750610 -104.85217285]
[-426.66339111 -117.16857910]
[-440.31439209 -123.38547516]
[-453.96542358 -129.60237122]
[-468.67773438 -123.82975006]
[-483.12915039 -130.22755432]
[-488.74591064 -145.00009155]
[-482.19564819 -159.38305664]
[-467.36456299 -164.84330750]
[-453.05166626 -158.14137268]
[-447.74850464 -143.25338745]
[-434.09750366 -137.03648376]
[-420.44647217 -130.81959534]
[-405.65701294 -132.58612061]
[-396.30471802 -119.82503510]
[-382.65368652 -113.60813904]
[-369.00268555 -107.39125061]
[-355.35165405 -101.17435455]
[-341.70065308 -94.95745850]
[-327.94396973 -88.97798920]
[-314.08578491 -83.23773193]
[-306.73056030 -83.58015442]
[-300.10131836 -77.35032654]
[-286.31033325 -71.45040131]
[-272.62319946 -77.21213531]
[-258.55313110 -71.42522430]
[-252.60249329 -57.02982330]
[-238.81152344 -51.12989426]
[-225.02055359 -45.22996902]
[-217.66184998 -45.48741150]
[-211.10499573 -39.18143463]
[-197.38308716 -33.12261963]
[-183.66117859 -27.06380463]
[-169.93928528 -21.00498962]
[-156.21737671 -14.94617462]
[-142.49546814 -8.88735962]
[-128.77355957 -2.82854462]
[-115.05164337 3.23027039]
[-100.18058777 -6.34740591]
[-82.38224792 -5.04171276]
[-68.83062744 6.81132030]
[-65.10230255 24.58617783]
[-51.24410629 30.32642937]
[-36.52470398 28.04861069]
[-26.73594475 40.47804260]
[-12.87775135 46.21829224]
[0.98044145 51.95854568]
[14.83863449 57.69879532]
[28.72974586 63.35892105]
[42.65331268 68.93873596]
[56.57688141 74.51853943]
[60.82392502 68.37552643]
[65.93295288 62.92833710]
[71.79154968 58.29682159]
[78.27080536 54.58288956]
[85.22815704 51.86825562]
[92.51053619 50.21265411]
[99.95770264 49.65250397]
[107.40579987 50.20013809]
[114.69094849 51.84350586]
[121.65285492 54.54644394]
[128.13833618 58.24948120]
[134.00471497 62.87114716]
[139.12287903 68.30974579]
[152.05513000 60.70994568]
[164.98738098 53.11014175]
[177.91961670 45.51033783]
[183.70606995 38.49074554]
[191.04541016 37.89843369]
[204.06457520 30.44850159]
[217.08372498 22.99857140]
[230.10289001 15.54863930]
[243.12205505 8.09870720]
[252.04052734 -8.03080559]
[269.58700562 -7.23660803]
[282.51925659 -14.83641052]
[295.45150757 -22.43621254]
[308.38375854 -30.03601456]
[321.31600952 -37.63581848]
[334.24826050 -45.23561859]
[318.05224609 -116.29989624]
[328.65884399 -126.90649414]
[339.26544189 -137.51309204]
[349.87203979 -148.11970520]
[360.47866821 -158.72630310]
[371.08526611 -169.33290100]
[367.70553589 -184.38551331]
[373.02182007 -198.86793518]
[385.33773804 -208.15887451]
[400.72332764 -209.29364014]
[414.26907349 -201.91011047]
[421.65258789 -188.36436462]
[420.51782227 -172.97879028]
[411.22689819 -160.66287231]
[396.74447632 -155.34657288]
[381.69186401 -158.72630310]
[371.08526611 -148.11970520]
[360.47866821 -137.51309204]
[349.87203979 -126.90649414]
[339.26544189 -116.29989624]
[328.65884399 -105.69329071]
[332.75332642 -99.40956116]
[345.03674316 -80.55836487]
[359.02383423 -85.97698975]
[373.01092529 -91.39561462]
[386.99798584 -96.81423950]
[400.98507690 -102.23286438]
[413.57043457 -113.59266663]
[427.97027588 -104.64385223]
[423.35745239 -88.32949066]
[406.40371704 -88.24578094]
[392.41662598 -82.82715607]
[378.42953491 -77.40853119]
[364.44244385 -71.98990631]
[350.45538330 -66.57128143]
[354.14205933 -52.03139877]
[369.02117920 -53.93202209]
[381.73498535 -64.29015350]
[396.96398926 -58.20663452]
[399.04190063 -41.93966293]
[385.83114624 -32.22330856]
[370.92178345 -39.05292130]
[356.04269409 -37.15229797]
[341.84805298 -32.30337143]
[328.91580200 -24.70357132]
[315.98355103 -17.10376740]
[303.05130005 -9.50396633]
[290.11907959 -1.90416360]
[277.18682861 5.69563866]
[273.85604858 17.30079460]
[263.17544556 23.74475670]
[250.57197571 21.11786652]
[237.55282593 28.56779861]
[224.53366089 36.01773071]
[211.51449585 43.46766281]
[198.49534607 50.91759491]
[185.51942444 58.44258499]
[172.58717346 66.04238892]
[159.65493774 73.64218903]
[146.72268677 81.24199677]
[153.76544189 96.39910126]
[155.66699219 114.09730530]
[151.55574036 132.53384399]
[163.42080688 141.71101379]
[175.28585815 150.88818359]
[187.15090942 160.06535339]
[207.24868774 161.90785217]
[213.71766663 180.15194702]
[225.79153442 189.05261230]
[241.37854004 186.44099426]
[254.19824219 195.68388367]
[256.64492798 211.29763794]
[247.26701355 224.01889038]
[231.62825012 226.30035400]
[219.00686646 216.78846741]
[216.89086914 201.12648010]
[204.81700134 192.22581482]
[194.93688965 194.65225220]
[185.13945007 191.18521118]
[178.71923828 182.73573303]
[177.97373962 171.93040466]
[166.10868835 162.75323486]
[154.24363708 153.57606506]
[142.37857056 144.39889526]
[131.00631714 154.18008423]
[138.30537415 167.28440857]
[145.60444641 180.38874817]
[152.90351868 193.49308777]
[167.87854004 199.24879456]
[172.57774353 214.58818054]
[163.39631653 227.74420166]
[147.37744141 228.62466431]
[136.80943298 216.55416870]
[139.79917908 200.79216003]
[132.50010681 187.68782043]
[125.20104218 174.58348083]
[117.90197754 161.47914124]
[103.03409576 163.46566772]
[99.43142700 178.02659607]
[95.82875061 192.58752441]
[100.02507019 207.84208679]
[89.45743561 218.33848572]
[85.85476685 232.89941406]
[82.25209045 247.46034241]
[86.44841003 262.71490479]
[75.88077545 273.21130371]
[72.27810669 287.77224731]
[68.67543030 302.33316040]
[65.07275391 316.89410400]
[61.47008514 331.45501709]
[71.29233551 343.32220459]
[72.23245239 358.51986694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[4 17]
[5 16]
[6 15]
[7 14]
[24 269]
[25 268]
[26 267]
[27 266]
[28 265]
[30 263]
[31 262]
[32 261]
[34 259]
[35 258]
[36 257]
[39 130]
[40 129]
[41 128]
[43 127]
[44 126]
[45 125]
[46 124]
[48 122]
[49 121]
[55 117]
[56 116]
[57 115]
[58 114]
[59 113]
[60 112]
[61 111]
[62 110]
[63 108]
[64 107]
[65 106]
[68 103]
[69 102]
[70 100]
[71 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[81 92]
[82 91]
[83 90]
[143 219]
[144 218]
[145 217]
[146 216]
[148 215]
[149 214]
[150 213]
[151 212]
[152 211]
[154 208]
[155 207]
[156 206]
[157 205]
[158 204]
[159 203]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[182 194]
[183 193]
[184 192]
[185 191]
[186 190]
[195 202]
[196 201]
[222 243]
[223 242]
[224 241]
[225 240]
[227 236]
[228 235]
[244 256]
[245 255]
[246 254]
[247 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
