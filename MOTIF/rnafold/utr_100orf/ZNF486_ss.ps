%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCUCGCUGCAUCUGGAGCUCUAGGUCGCCUCUUCGCUACUCUGUGUCCUCUGCUCCUAGAGGCCCACCCUCUGUGGCCCUGUGUCCUGUAGGUAUUGGGAGAUCCACAGCCAAGAUGCCGGGACCCCUUAGAAGCCUAGAAAUGGAAUCAUUGCAAUUUAGAGAUGUGGCUGUAGAAUUCUCUCUGGAGGAGUGGCAUUGCCUGGACACUGCAC\
) } def
/len { sequence length } bind def

/coor [
[270.29953003 206.84609985]
[255.51890564 195.11233521]
[246.68177795 178.38995361]
[245.30862427 159.48399353]
[230.99029541 155.01351929]
[216.67195129 150.54302979]
[202.35362244 146.07255554]
[188.03527832 141.60206604]
[183.46859741 142.98377991]
[177.98539734 141.51507568]
[173.37208557 136.79093933]
[159.18852234 131.90968323]
[145.00495911 127.02843475]
[130.82139587 122.14718628]
[116.63784027 117.26593018]
[102.45428467 112.38468170]
[87.45467377 112.49275970]
[73.34292603 117.57789612]
[66.56242371 131.60154724]
[52.17866516 136.55757141]
[38.85105133 130.00697327]
[24.73930550 135.09210205]
[10.62755871 140.17724609]
[-3.48418784 145.26237488]
[-17.59593391 150.34751892]
[-31.70768166 155.43264771]
[-45.81942749 160.51779175]
[-52.00178146 171.83384705]
[-63.85610199 175.78039551]
[-74.85804749 170.75999451]
[-89.04161072 175.64125061]
[-90.81757355 191.81713867]
[-99.44017792 205.54936218]
[-113.13957214 214.11473083]
[-129.14524841 215.84091187]
[-144.24630737 210.43267822]
[-155.43556213 199.02093506]
[-169.54731750 204.10606384]
[-183.65905762 209.19120789]
[-190.15641785 223.59814453]
[-204.96734619 229.11283875]
[-219.30479431 222.46351624]
[-224.66258240 207.59510803]
[-217.86206055 193.32878113]
[-202.93783569 188.12847900]
[-188.74420166 195.07945251]
[-174.63244629 189.99432373]
[-160.52070618 184.90917969]
[-159.77624512 171.05860901]
[-153.79098511 158.49784851]
[-143.43844604 149.13685608]
[-130.25898743 144.41293335]
[-116.23056030 145.07009888]
[-103.47199249 151.04217529]
[-93.92285919 161.45768738]
[-79.73930359 156.57643127]
[-68.95101929 142.73237610]
[-50.90456390 146.40603638]
[-36.79281616 141.32090759]
[-22.68107033 136.23576355]
[-8.56932449 131.15063477]
[5.54242229 126.06549835]
[19.65416908 120.98036194]
[33.76591492 115.89522552]
[39.85170364 102.34905243]
[54.09057999 96.99097443]
[68.25778961 103.46615601]
[82.36953735 98.38101959]
[85.16460419 91.42130280]
[70.19899750 90.40608215]
[66.53993225 75.85922241]
[79.24411774 67.88403320]
[90.75473785 77.50187683]
[93.54981232 70.54216766]
[86.87511444 57.10905457]
[80.20042419 43.67594147]
[73.52573395 30.24283028]
[66.85104370 16.80971909]
[60.17635727 3.37660599]
[53.11732483 -9.85857582]
[45.67980957 -22.88483429]
[38.24229813 -35.91109467]
[24.68049622 -44.05898285]
[25.08908653 -58.94798279]
[17.65157318 -71.97424316]
[10.21406078 -85.00050354]
[3.24508119 -90.89740753]
[2.76477599 -98.26850128]
[-4.48424959 -111.40058136]
[-18.79801369 -119.40359497]
[-18.75350189 -135.80267334]
[-4.39650393 -143.72787476]
[9.50373268 -135.02639771]
[8.64783478 -118.64960480]
[15.89686012 -105.51752472]
[23.24032021 -92.43801117]
[30.67783165 -79.41175079]
[38.11534500 -66.38549805]
[51.14516449 -59.16933060]
[51.26855850 -43.34860611]
[58.70606995 -30.32234764]
[66.14358521 -17.29608917]
[68.80351257 -16.42707253]
[71.28044891 -14.45482254]
[73.15347290 -11.44343185]
[74.03249359 -7.60769033]
[73.60946655 -3.29808450]
[80.28415680 10.13502789]
[86.95884705 23.56814003]
[93.63353729 37.00125122]
[100.30822754 50.43436432]
[106.98291779 63.86747742]
[113.50632477 73.78583527]
[115.28799438 83.93463898]
[112.86048889 92.54519653]
[107.33553314 98.20111847]
[121.51909637 103.08237457]
[135.70265198 107.96362305]
[149.88621521 112.84487152]
[164.06977844 117.72612762]
[178.25334167 122.60737610]
[192.50576782 127.28372955]
[206.82409668 131.75421143]
[221.14244080 136.22470093]
[235.46076965 140.69517517]
[249.77911377 145.16566467]
[255.95173645 135.99713135]
[264.11318970 128.57089233]
[273.78976440 123.30615234]
[284.42269897 120.49703217]
[295.40023804 120.29611206]
[306.09307861 122.70619965]
[315.89016724 127.58065033]
[324.23385620 134.63224792]
[336.69085693 126.27624512]
[339.86755371 111.02677917]
[352.61978149 102.73005676]
[367.13824463 105.85253143]
[379.59524536 97.49652100]
[381.08966064 81.93051147]
[392.27627563 71.00376129]
[407.87310791 69.87554932]
[420.51580811 79.07859039]
[424.23489380 94.26747894]
[417.27432251 108.27049255]
[402.92065430 114.47583771]
[387.95126343 109.95353699]
[375.49426270 118.30953979]
[372.87573242 132.92730713]
[360.36157227 141.57893372]
[345.04687500 138.73326111]
[332.58987427 147.08926392]
[336.28726196 160.11759949]
[335.99453735 173.65725708]
[331.73751831 186.51361084]
[343.82174683 195.40019226]
[355.90597534 204.28677368]
[367.99020386 213.17337036]
[388.10867310 214.49494934]
[395.08416748 232.53228760]
[407.41949463 241.06694031]
[419.75479126 249.60159302]
[432.09008789 258.13623047]
[444.42538452 266.67089844]
[462.81039429 267.74902344]
[469.68676758 283.89709473]
[482.14376831 292.25308228]
[494.60079956 300.60910034]
[507.05780029 308.96511841]
[519.51483154 317.32110596]
[535.28558350 318.58316040]
[541.54498291 332.09869385]
[554.00201416 340.45468140]
[566.45904541 348.81069946]
[563.43499756 334.11868286]
[570.45513916 320.86282349]
[584.30743408 315.10830688]
[598.65374756 319.48806763]
[606.93011475 331.99816895]
[605.34954834 346.91467285]
[594.63537598 357.41259766]
[579.69091797 358.68896484]
[591.24310303 368.25695801]
[602.79528809 377.82498169]
[614.34747314 387.39300537]
[630.59710693 389.60223389]
[636.55743408 404.87991333]
[626.09692383 417.50964355]
[609.97650146 414.49905396]
[604.77947998 398.94519043]
[593.22729492 389.37716675]
[581.67510986 379.80914307]
[570.12292480 370.24114990]
[558.10302734 361.26770020]
[545.64599609 352.91171265]
[533.18896484 344.55569458]
[518.30920410 343.89132690]
[511.15881348 329.77813721]
[498.70181274 321.42211914]
[486.24478149 313.06610107]
[473.78778076 304.71011353]
[461.33074951 296.35409546]
[449.40914917 298.38455200]
[438.96371460 291.52941895]
[435.89074707 279.00619507]
[423.55545044 270.47152710]
[411.22012329 261.93688965]
[398.88482666 253.40223694]
[386.54953003 244.86758423]
[376.70840454 247.59431458]
[366.78155518 244.38940430]
[360.11785889 236.08058167]
[359.10360718 225.25759888]
[347.01937866 216.37101746]
[334.93515015 207.48442078]
[322.85092163 198.59783936]
[307.06832886 208.71337891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 126]
[5 125]
[6 124]
[7 123]
[8 122]
[11 121]
[12 120]
[13 119]
[14 118]
[15 117]
[16 116]
[17 68]
[18 67]
[21 64]
[22 63]
[23 62]
[24 61]
[25 60]
[26 59]
[27 58]
[30 56]
[31 55]
[37 48]
[38 47]
[39 46]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 102]
[81 101]
[82 100]
[84 98]
[85 97]
[86 96]
[88 95]
[89 94]
[134 152]
[135 151]
[138 148]
[139 147]
[155 216]
[156 215]
[157 214]
[158 213]
[160 209]
[161 208]
[162 207]
[163 206]
[164 205]
[166 202]
[167 201]
[168 200]
[169 199]
[170 198]
[172 196]
[173 195]
[174 194]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
