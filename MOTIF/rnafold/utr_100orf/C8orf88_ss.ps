%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCCCCCGCCGCCGCCACCGCGGUCAGCCAGCGGACCAGCGGCAGGAGCCGUUCCCCGACGGGCAGCAGGGCGCUCGGCCUCCGCGUGUGGGCUGAGCGCGGCGACGCUGCUGCCCCGAAAUCCCCGUGGAUUUUGAGUCGUAUGGAACCUCAAAGUCUUUGUGACAAUGGAAACCAAAAAAUUAAUUGGUAAACCGCUUCAACCAGCAAGACCUGUUCGUCAUCUGACUUCUCCCCCAGGAGCAGUGUUCC\
CUUUCAACUUUCAAA\
) } def
/len { sequence length } bind def

/coor [
[125.92631531 353.41186523]
[111.15068817 355.99664307]
[96.16743469 355.28811646]
[81.70164490 351.32064819]
[68.45339203 344.28616333]
[57.06382370 334.52514648]
[48.08412170 322.50994873]
[41.94886017 308.82205200]
[38.95495224 294.12387085]
[39.24728394 279.12670898]
[42.81127548 264.55755615]
[33.60530853 276.40029907]
[24.39934158 288.24301147]
[15.19337463 300.08575439]
[5.98740816 311.92846680]
[11.91891670 324.57489014]
[11.83123493 338.47686768]
[5.79831028 350.92852783]
[-4.95425463 359.53070068]
[-18.29774666 362.65322876]
[-31.62165070 359.74368286]
[-40.96428299 371.47888184]
[-50.30691528 383.21411133]
[-59.64954758 394.94931030]
[-68.92400360 406.73846436]
[-78.12997437 418.58120728]
[-79.83531952 434.89144897]
[-94.92121887 441.32165527]
[-107.86859894 431.25698853]
[-105.35829163 415.05111694]
[-89.97269440 409.37524414]
[-80.76673126 397.53250122]
[-79.14859772 390.34893799]
[-71.38475800 385.60668945]
[-62.04212952 373.87145996]
[-52.69949722 362.13626099]
[-43.35686111 350.40103149]
[-49.63951874 335.49551392]
[-47.52545929 319.36395264]
[-37.49894333 306.43203735]
[-22.22806549 300.29592896]
[-5.85531855 302.72250366]
[3.35064793 290.87976074]
[12.55661488 279.03704834]
[21.76258087 267.19433594]
[30.96854782 255.35159302]
[31.90562248 246.16540527]
[39.93066788 239.54792786]
[45.36836243 225.56825256]
[50.80606079 211.58857727]
[56.24375534 197.60888672]
[61.68145370 183.62921143]
[18.16306114 111.35092163]
[52.51465225 44.22527313]
[42.25151443 33.28598404]
[31.98838043 22.34669495]
[21.72524643 11.40740585]
[11.46211052 0.46811607]
[-8.09060478 -4.53133154]
[-11.59181499 -23.56882286]
[-22.10579872 -34.26724243]
[-32.61978149 -44.96566010]
[-43.13376617 -55.66407776]
[-54.86897659 -65.00671387]
[-67.65176392 -72.85530853]
[-80.43454742 -80.70390320]
[-93.21733093 -88.55249786]
[-106.00011444 -96.40109253]
[-118.78289795 -104.24968719]
[-131.56567383 -112.09828186]
[-144.34846497 -119.94687653]
[-157.13124084 -127.79547119]
[-180.93127441 -126.37223816]
[-191.10627747 -147.11915588]
[-204.40362549 -154.06036377]
[-217.70097351 -161.00158691]
[-230.99832153 -167.94281006]
[-244.29566956 -174.88403320]
[-257.59301758 -181.82525635]
[-270.89035034 -188.76647949]
[-284.18771362 -195.70768738]
[-297.48504639 -202.64891052]
[-310.78240967 -209.59013367]
[-324.07974243 -216.53135681]
[-337.91381836 -209.50300598]
[-353.23165894 -211.98165894]
[-364.14321899 -223.01422119]
[-366.45278931 -238.35845947]
[-359.27227783 -252.11418152]
[-345.36279297 -258.99206543]
[-330.07275391 -256.34738159]
[-319.28149414 -245.19708252]
[-317.13851929 -229.82870483]
[-303.84118652 -222.88748169]
[-290.54382324 -215.94625854]
[-277.24649048 -209.00503540]
[-263.94912720 -202.06382751]
[-250.65179443 -195.12260437]
[-237.35444641 -188.18138123]
[-224.05709839 -181.24015808]
[-210.75975037 -174.29893494]
[-197.46240234 -167.35771179]
[-184.16505432 -160.41650391]
[-178.84721375 -163.94561768]
[-172.65502930 -165.69175720]
[-166.17425537 -165.45709229]
[-160.02798462 -163.23277283]
[-154.81677246 -159.20271301]
[-151.05993652 -153.72880554]
[-149.14390564 -147.31860352]
[-149.28265381 -140.57826233]
[-136.49986267 -132.72966003]
[-123.71708679 -124.88106537]
[-110.93430328 -117.03247070]
[-98.15151978 -109.18387604]
[-85.36873627 -101.33528137]
[-72.58595276 -93.48668671]
[-59.80316544 -85.63809204]
[-47.02038193 -77.78949738]
[-34.47039795 -86.00520325]
[-36.55034256 -100.86029816]
[-38.63028717 -115.71539307]
[-40.71022797 -130.57049561]
[-42.79017258 -145.42558289]
[-44.87011337 -160.28068542]
[-46.95005798 -175.13577271]
[-49.03000259 -189.99087524]
[-59.54072189 -202.57882690]
[-53.64132309 -217.88011169]
[-37.40059662 -220.15405273]
[-27.52561188 -207.06143188]
[-34.17490768 -192.07081604]
[-32.09496307 -177.21571350]
[-30.01502037 -162.36062622]
[-27.93507767 -147.50552368]
[-25.85513306 -132.65043640]
[-23.77519035 -117.79534149]
[-21.69524765 -102.94024658]
[-19.61530495 -88.08515167]
[-23.41314125 -73.90939331]
[-32.43534851 -66.17806244]
[-21.92136383 -55.47964478]
[-11.40738106 -44.78122330]
[-0.89339721 -34.08280563]
[9.24671078 -34.91586304]
[18.37275505 -29.94217300]
[23.37536621 -20.58274841]
[22.40139961 -9.79501915]
[32.66453552 1.14427066]
[42.92766953 12.08355999]
[53.19080734 23.02285004]
[63.45394135 33.96213913]
[70.94587708 33.61448669]
[62.85171127 20.98577118]
[69.74133301 7.66161633]
[84.72519684 6.96603346]
[92.81959534 19.59459877]
[85.92975616 32.91918182]
[93.42169189 32.57152557]
[102.62766266 20.72879982]
[111.83362579 8.88607311]
[111.27425385 -7.14722490]
[123.55404663 -17.47128868]
[139.25299072 -14.16637802]
[146.32821655 0.23226094]
[139.35220337 14.67922497]
[123.67635345 18.09204102]
[114.47039032 29.93476677]
[105.26441956 41.77749252]
[109.83300781 47.72543716]
[124.70368958 45.76005173]
[118.97016907 59.62132645]
[123.53875732 65.56926727]
[137.35499573 59.72876358]
[143.64984131 43.38877869]
[159.50926208 36.80348969]
[174.90777588 43.60562515]
[188.65538025 37.60534668]
[202.40299988 31.60507011]
[216.15060425 25.60479164]
[229.89820862 19.60451508]
[233.10409546 4.42222548]
[244.64418030 -5.95111513]
[260.08105469 -7.52674675]
[273.47891235 0.30119345]
[279.68603516 14.52270222]
[276.31564331 29.66931915]
[264.66369629 39.91686249]
[249.21064758 41.32493973]
[235.89848328 33.35211945]
[222.15087891 39.35239792]
[208.40327454 45.35267639]
[194.65567017 51.35295486]
[180.90806580 57.35322952]
[177.93643188 69.86962891]
[168.15977478 78.52678680]
[154.98944092 80.00539398]
[143.19551086 73.54499817]
[129.37925720 79.38550568]
[131.97447205 94.15930176]
[146.95407104 94.94144440]
[161.93365479 95.72358704]
[173.50727844 84.96129608]
[189.29789734 85.61846924]
[199.93722534 97.30521393]
[199.11314392 113.08800507]
[187.31455994 123.60318756]
[171.54136658 122.61228180]
[161.15151978 110.70318604]
[146.17192078 109.92103577]
[131.19232178 109.13889313]
[129.59616089 116.46707916]
[126.40381622 131.12344360]
[124.80764771 138.45161438]
[138.75556946 143.97026062]
[152.70350647 149.48889160]
[167.10508728 142.97967529]
[181.86154175 148.63851929]
[188.21812439 163.10812378]
[182.40359497 177.80392456]
[167.86758423 184.00717163]
[153.23408508 178.03758240]
[147.18486023 163.43681335]
[133.23693848 157.91818237]
[119.28900909 152.39955139]
[114.93000793 158.50274658]
[127.13640594 167.22076416]
[133.34848022 180.87397766]
[118.41838837 179.42715454]
[106.21199036 170.70915222]
[101.85298157 176.81234741]
[111.59800720 188.21560669]
[121.34303284 199.61888123]
[136.19059753 205.08332825]
[138.57707214 219.78550720]
[148.32209778 231.18878174]
[158.06712341 242.59204102]
[167.81214905 253.99531555]
[183.44430542 258.95190430]
[186.70310974 275.02398682]
[174.23619080 285.67800903]
[158.86843872 279.95397949]
[156.40888977 263.74032593]
[146.66386414 252.33706665]
[136.91883850 240.93380737]
[127.17381287 229.53053284]
[113.02326965 224.88171387]
[109.93976593 209.36390686]
[100.19474030 197.96064758]
[90.44971466 186.55737305]
[75.66113281 189.06690979]
[70.22343445 203.04658508]
[64.78574371 217.02626038]
[59.34804535 231.00595093]
[53.91034698 244.98562622]
[64.58500671 234.44752502]
[77.30555725 226.49845886]
[91.45639038 221.52313232]
[106.35268402 219.76229858]
[121.27353668 221.30119324]
[135.49685669 226.06533813]
[148.33432007 233.82415771]
[159.16467285 244.20219421]
[167.46376038 256.69720459]
[172.82997131 270.70446777]
[175.00361633 285.54614258]
[173.87947083 300.50396729]
[169.51197815 314.85406494]
[162.11247253 327.90194702]
[152.03906250 339.01617432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 46]
[12 45]
[13 44]
[14 43]
[15 42]
[21 37]
[22 36]
[23 35]
[24 34]
[25 32]
[26 31]
[48 255]
[49 254]
[50 253]
[51 252]
[52 251]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[60 144]
[61 143]
[62 142]
[63 141]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 112]
[72 111]
[74 103]
[75 102]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[159 169]
[160 168]
[161 167]
[173 199]
[174 198]
[177 194]
[178 193]
[179 192]
[180 191]
[181 190]
[200 211]
[201 210]
[202 209]
[214 225]
[215 224]
[216 223]
[231 250]
[232 249]
[233 248]
[235 246]
[236 245]
[237 244]
[238 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
