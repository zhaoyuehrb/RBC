%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCCGGACGGGAGCGGGCCCACGGGGCUGCAGGUGUGGAGCCCCCUGGAGCUGAGAUCAGGAUGUUCCGCUUCAUGAGGGACGUGGAGCCUGAGGAUCCCAUGUUCCUGAUGGAUCCCUUUGCUAUUCACCGUCAGCAUAUGAGCCGUAUGUUGUCAGGUG\
) } def
/len { sequence length } bind def

/coor [
[78.96665192 108.58507538]
[70.57346344 121.01706696]
[62.18027878 133.44905090]
[53.78709030 145.88104248]
[45.39390564 158.31303406]
[37.00071716 170.74502563]
[28.60753059 183.17701721]
[31.30194092 193.77557373]
[27.76601219 203.89086914]
[19.40605354 210.23620605]
[9.15187073 210.89286804]
[0.28866380 222.99424744]
[-8.57454300 235.09564209]
[-5.91463709 250.67448425]
[-15.11775684 263.52276611]
[-30.72385406 266.01782227]
[-43.47410965 256.67935181]
[-45.80401993 241.04776001]
[-36.33129501 228.39694214]
[-20.67593002 226.23243713]
[-11.81272316 214.13104248]
[-2.94951653 202.02966309]
[-2.31695819 182.73097229]
[16.17553902 174.78384399]
[24.56872559 162.35185242]
[32.96191025 149.91986084]
[41.35509872 137.48786926]
[49.74828339 125.05587006]
[58.14147186 112.62387848]
[66.53466034 100.19188690]
[69.81241608 85.55438995]
[67.52267456 70.73018646]
[65.23293304 55.90597916]
[62.94319534 41.08177185]
[60.65345764 26.25756454]
[39.72943497 12.68620396]
[40.42054367 -14.74793816]
[27.38253975 -22.16483879]
[14.34453297 -29.58173752]
[1.30652738 -36.99863815]
[-11.73147869 -44.41553497]
[-24.76948547 -51.83243561]
[-37.80749130 -59.24933624]
[-52.87132645 -55.28467178]
[-65.98806000 -62.99219131]
[-69.67493439 -77.37769318]
[-82.71293640 -84.79459381]
[-95.75094604 -92.21148682]
[-108.78894806 -99.62838745]
[-121.82695770 -107.04528809]
[-135.90583801 -100.52111053]
[-151.12416077 -103.55131531]
[-161.63017273 -114.97074127]
[-163.38410950 -130.38836670]
[-155.71154785 -143.87582397]
[-141.56272888 -150.24688721]
[-126.37816620 -147.05175781]
[-115.99663544 -135.51904297]
[-114.41005707 -120.08329773]
[-101.37204742 -112.66639709]
[-88.33404541 -105.24949646]
[-75.29603577 -97.83259583]
[-62.25803375 -90.41569519]
[-48.00863647 -94.59783173]
[-34.68058777 -87.26177979]
[-30.39059067 -72.28733826]
[-17.35258484 -64.87044525]
[-4.31457901 -57.45354080]
[8.72342682 -50.03664398]
[21.76143265 -42.61974335]
[34.79943848 -35.20284271]
[47.83744431 -27.78594398]
[62.22245789 -32.03699112]
[69.13452148 -45.34951782]
[76.04659271 -58.66204071]
[82.95865631 -71.97457123]
[89.87071991 -85.28709412]
[89.36302948 -101.10015106]
[102.09468079 -108.83024597]
[109.00675201 -122.14277649]
[115.91881561 -135.45529175]
[122.83087921 -148.76782227]
[129.74295044 -162.08035278]
[136.65501404 -175.39288330]
[143.56707764 -188.70539856]
[150.47914124 -202.01792908]
[157.39120483 -215.33045959]
[164.30326843 -228.64297485]
[158.71534729 -245.19636536]
[166.65127563 -260.38165283]
[182.78419495 -265.05718994]
[189.43998718 -278.49966431]
[191.04960632 -295.37704468]
[207.71298218 -298.50244141]
[215.32913208 -283.35546875]
[202.88247681 -271.84387207]
[196.22668457 -258.40139771]
[202.02293396 -246.86315918]
[200.07180786 -233.90203857]
[190.86592102 -224.30017090]
[177.61579895 -221.73091125]
[170.70373535 -208.41839600]
[163.79167175 -195.10586548]
[156.87960815 -181.79333496]
[149.96754456 -168.48080444]
[143.05546570 -155.16828918]
[136.14340210 -141.85575867]
[129.23133850 -128.54322815]
[122.31927490 -115.23070526]
[115.40721130 -101.91818237]
[116.40929413 -87.05732727]
[103.18325043 -78.37503052]
[96.27117920 -65.06250000]
[89.35911560 -51.74997711]
[82.44705200 -38.43745041]
[75.53498077 -25.12492371]
[85.74340820 -16.73630333]
[90.95787811 -5.10880041]
[90.46690369 7.15500641]
[84.78862000 17.50370407]
[75.47766113 23.96782494]
[77.76740265 38.79203033]
[80.05714417 53.61623764]
[82.34688568 68.44044495]
[84.63661957 83.26464844]
[96.02043152 78.46036530]
[107.76976776 80.39297485]
[116.34192657 87.99655914]
[119.41024017 98.57013702]
[116.48569489 108.71832275]
[125.80590820 120.47134399]
[135.12612915 132.22436523]
[144.44635010 143.97738647]
[161.83721924 145.64985657]
[172.44750977 159.10324097]
[170.11447144 175.73719788]
[179.65811157 187.30953979]
[189.20175171 198.88188171]
[198.74537659 210.45422363]
[208.28901672 222.02655029]
[217.83265686 233.59889221]
[227.37629700 245.17123413]
[236.91992188 256.74356079]
[246.46356201 268.31591797]
[261.20578003 276.68869019]
[257.24127197 293.17257690]
[240.30407715 293.92620850]
[234.89122009 277.85955811]
[225.34759521 266.28720093]
[215.80395508 254.71487427]
[206.26031494 243.14253235]
[196.71667480 231.57019043]
[187.17304993 219.99784851]
[177.62940979 208.42552185]
[168.08576965 196.85317993]
[158.54212952 185.28083801]
[145.64239502 185.85002136]
[134.61346436 178.76762390]
[129.61756897 166.43939209]
[132.69332886 153.29760742]
[123.37310791 141.54458618]
[114.05288696 129.79156494]
[104.73267365 118.03854370]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[7 24]
[11 22]
[12 21]
[13 20]
[31 125]
[32 124]
[33 123]
[34 122]
[35 121]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[73 116]
[74 115]
[75 114]
[76 113]
[77 112]
[79 110]
[80 109]
[81 108]
[82 107]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[91 97]
[92 96]
[130 163]
[131 162]
[132 161]
[133 160]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
