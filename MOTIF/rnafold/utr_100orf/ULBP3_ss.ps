%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCAUGCGAGGGCCGAAGUGAUUCAUACGCUGGUCUCCACAUCGACUGCGCCUUGUGUCCCGGGCGCUCCUGGUCUACAAUGGCAGCGGCCGCCAGCCCCGCGAUCCUUCCGCGCCUCGCGAUUCUUCCGUACCUGCUAUUCGACUGGUCCGGGACGGGGCGGGCCGACGCUCACUCUC\
) } def
/len { sequence length } bind def

/coor [
[79.90473938 143.33717346]
[70.32804108 137.43667603]
[62.39659882 129.46038818]
[56.55019760 119.85056305]
[53.11301422 109.14006042]
[52.27563095 97.92276001]
[54.08448410 86.82063293]
[58.43927383 76.44928741]
[46.71179962 67.09693909]
[34.98432922 57.74459076]
[23.25685692 48.39224625]
[11.52938366 39.03989792]
[-0.19808839 29.68755150]
[-12.00584030 20.43676758]
[-23.89299393 11.28823757]
[-39.54830551 9.00311661]
[-44.91537857 -4.89090347]
[-56.80253220 -14.03943348]
[-68.68968201 -23.18796349]
[-80.57683563 -32.33649445]
[-89.31069946 -35.10107803]
[-92.58840179 -41.74695587]
[-104.31587982 -51.09930420]
[-116.04335022 -60.45165253]
[-127.77082062 -69.80400085]
[-141.52210999 -63.27227020]
[-156.68388367 -63.35843277]
[-170.24922180 -69.99183655]
[-179.55102539 -81.80867004]
[-182.78642273 -96.43199158]
[-179.36599731 -110.94978333]
[-191.09347534 -120.30212402]
[-202.82093811 -129.65447998]
[-214.54841614 -139.00682068]
[-226.27589417 -148.35916138]
[-223.12339783 -133.69418335]
[-228.28436279 -119.60999298]
[-240.16574097 -110.45397186]
[-255.10011292 -109.05230713]
[-268.47766113 -115.83766174]
[-276.16915894 -128.71559143]
[-275.80041504 -143.71105957]
[-267.48532104 -156.19540405]
[-253.79043579 -162.31507874]
[-238.94422913 -160.18167114]
[-249.08337402 -171.23596191]
[-264.11355591 -176.17607117]
[-267.01443481 -190.78546143]
[-277.15359497 -201.83975220]
[-287.29275513 -212.89405823]
[-297.43188477 -223.94834900]
[-307.66607666 -234.91473389]
[-317.99453735 -245.79237366]
[-328.32296753 -256.67001343]
[-338.74493408 -267.45812988]
[-349.25958252 -278.15588379]
[-359.77426147 -288.85360718]
[-370.28890991 -299.55136108]
[-380.80358887 -310.24911499]
[-396.37747192 -310.55224609]
[-406.88842773 -321.55105591]
[-406.50347900 -336.39651489]
[-417.01815796 -347.09426880]
[-427.53280640 -357.79202271]
[-438.04748535 -368.48974609]
[-448.56213379 -379.18750000]
[-464.50122070 -383.04467773]
[-468.87014771 -398.85113525]
[-457.17456055 -410.34655762]
[-441.44586182 -405.70544434]
[-437.86437988 -389.70217896]
[-427.34973145 -379.00442505]
[-416.83505249 -368.30667114]
[-406.32040405 -357.60891724]
[-395.80572510 -346.91116333]
[-380.95584106 -347.03982544]
[-370.14010620 -336.34057617]
[-370.10583496 -320.76379395]
[-359.59115601 -310.06604004]
[-349.07650757 -299.36828613]
[-338.56182861 -288.67053223]
[-328.04718018 -277.97277832]
[-321.09805298 -275.39971924]
[-317.44534302 -266.99847412]
[-307.11688232 -256.12081909]
[-296.78842163 -245.24317932]
[-289.88476562 -242.55055237]
[-286.37759399 -234.08750916]
[-276.23843384 -223.03320312]
[-266.09930420 -211.97891235]
[-255.96012878 -200.92460632]
[-241.65518188 -196.77517700]
[-238.02908325 -181.37512207]
[-227.88992310 -170.32081604]
[-216.92353821 -160.08663940]
[-205.19607544 -150.73429871]
[-193.46859741 -141.38194275]
[-181.74111938 -132.02960205]
[-170.01365662 -122.67725372]
[-156.62097168 -129.24243164]
[-141.64433289 -129.34214783]
[-128.05393982 -122.90304565]
[-118.56827545 -111.15390015]
[-115.11045837 -96.39143372]
[-118.41847229 -81.53147125]
[-106.69100189 -72.17912292]
[-94.96353149 -62.82677841]
[-83.23606110 -53.47443008]
[-71.42830658 -44.22364807]
[-59.54115295 -35.07511520]
[-47.65399933 -25.92658615]
[-35.76684952 -16.77805710]
[-20.96178436 -15.14729881]
[-14.74446297 -0.59891486]
[-2.85731053 8.54961491]
[4.37985945 10.14161396]
[9.15425873 17.96007919]
[20.88173103 27.31242561]
[32.60920334 36.66477203]
[44.33667374 46.01712036]
[56.06414795 55.36946869]
[67.79161835 64.72181702]
[83.77385712 55.07069397]
[102.23471069 52.28274536]
[120.35420990 56.78384018]
[135.36450195 67.88641357]
[144.97268677 83.89449310]
[147.71109009 102.36276245]
[162.39044189 105.44766235]
[177.06979370 108.53256226]
[191.74914551 111.61746216]
[206.42849731 114.70236206]
[221.52491760 109.96859741]
[232.38887024 120.15798950]
[247.06822205 123.24288940]
[261.74758911 126.32778931]
[271.01571655 114.20076752]
[284.63159180 107.30364990]
[299.89181519 107.00585938]
[313.76641846 113.36651611]
[323.50061035 125.12272644]
[327.16165161 139.94026184]
[324.02264404 154.87710571]
[314.70681763 166.96754456]
[301.06387329 173.81098938]
[285.80261230 174.04867554]
[271.95315552 167.63342285]
[262.26535034 155.83898926]
[258.66268921 141.00714111]
[243.98333740 137.92224121]
[229.30397034 134.83734131]
[215.25752258 139.79176331]
[203.34359741 129.38171387]
[188.66424561 126.29681396]
[173.98489380 123.21191406]
[159.30554199 120.12701416]
[144.62619019 117.04211426]
[137.34774780 129.78382874]
[126.54509735 139.71508789]
[132.81910706 153.33993530]
[139.09312439 166.96479797]
[145.36714172 180.58966064]
[158.16728210 189.88841248]
[156.46272278 204.68516541]
[162.73674011 218.31001282]
[169.01075745 231.93487549]
[175.28477478 245.55973816]
[188.97810364 254.58329773]
[187.74014282 270.93566895]
[172.84440613 277.79489136]
[159.61434937 268.10482788]
[161.65991211 251.83375549]
[155.38589478 238.20889282]
[149.11187744 224.58403015]
[142.83786011 210.95918274]
[130.48648071 202.63496399]
[131.74229431 186.86367798]
[125.46827698 173.23881531]
[119.19425964 159.61395264]
[112.92024231 145.98910522]
[101.80809021 147.73532104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 122]
[9 121]
[10 120]
[11 119]
[12 118]
[13 117]
[14 115]
[15 114]
[17 112]
[18 111]
[19 110]
[20 109]
[22 108]
[23 107]
[24 106]
[25 105]
[31 99]
[32 98]
[33 97]
[34 96]
[35 95]
[45 94]
[46 93]
[48 91]
[49 90]
[50 89]
[51 88]
[52 86]
[53 85]
[54 84]
[55 82]
[56 81]
[57 80]
[58 79]
[59 78]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[128 157]
[129 156]
[130 155]
[131 154]
[132 153]
[134 151]
[135 150]
[136 149]
[159 180]
[160 179]
[161 178]
[162 177]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
