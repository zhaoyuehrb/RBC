%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:19:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUGGAGUAGGCACCCAUUUAAAGAAAAAAUGAAGAAGCAGCAAUAAAGAAGUUGUAAUCGUUACCUAGACAAACAGAGAACUGGUUUUGACAGUGUUUCUAGAGUGCUUUUUAUUAUUUUCCUGACAGUUGUGUUCCACCAUGAUUACUUUCUCCUUCAGCGAAUAGGCUAAAUGAAUAUGAAACAGAAAAGCGUGUAUCAGCAAACCAAAGCACUUCUGUGCAAGAAUUUUCUUAAGAAAUGGAGGAUGAA\
AAGAGAGAGCUUAUUGGAAU\
) } def
/len { sequence length } bind def

/coor [
[-236.98875427 92.25162506]
[-239.20027161 107.08769989]
[-241.41178894 121.92378235]
[-243.62329102 136.75985718]
[-237.10711670 151.80882263]
[-247.09774780 164.81341553]
[-263.31768799 162.39561462]
[-269.08123779 147.04266357]
[-258.45938110 134.54833984]
[-256.24786377 119.71226501]
[-254.03634644 104.87619019]
[-251.82484436 90.04010773]
[-260.82022095 78.03664398]
[-275.68051147 75.99414825]
[-290.54080200 73.95164490]
[-305.40109253 71.90914917]
[-311.62188721 85.66347504]
[-321.45645142 97.09605408]
[-334.10122681 105.28594208]
[-348.52685547 109.57657623]
[-363.56179810 109.62843323]
[-377.98754883 105.44584656]
[-390.63739014 97.37600708]
[-400.49072266 86.08011627]
[-406.75549316 72.47923279]
[-408.93173218 57.67918777]
[-423.79202271 55.63668442]
[-438.65231323 53.59418488]
[-453.51260376 51.55168533]
[-468.37289429 49.50918579]
[-477.83389282 61.52735901]
[-491.94702148 67.15912628]
[-506.88488770 64.98500061]
[-518.65014648 55.68797302]
[-524.14514160 41.84346771]
[-539.00543213 39.80096817]
[-553.86572266 37.75846863]
[-568.72601318 35.71596909]
[-583.58630371 33.67346954]
[-598.44659424 31.63096809]
[-613.30688477 29.58846855]
[-628.16717529 27.54596901]
[-643.01562500 29.67300797]
[-656.70483398 35.80523682]
[-670.39410400 41.93746567]
[-684.08337402 48.06969833]
[-697.77264404 54.20192719]
[-703.16784668 69.05678558]
[-717.52203369 75.66995239]
[-732.31903076 70.11795044]
[-738.78002930 55.69468307]
[-733.07189941 40.95722198]
[-718.58111572 34.64904022]
[-703.90484619 40.51266861]
[-690.21557617 34.38043976]
[-676.52636719 28.24821091]
[-662.83709717 22.11598015]
[-649.14782715 15.98375130]
[-650.79888916 8.66774368]
[-665.43096924 11.96963501]
[-668.73260498 -2.66249084]
[-654.10101318 -5.96427298]
[-655.75207520 -13.28028107]
[-670.74822998 -12.93883324]
[-685.74432373 -12.59738541]
[-697.82232666 -2.03794646]
[-713.58221436 -5.03886127]
[-720.93432617 -19.29808426]
[-714.23883057 -33.87715912]
[-698.63183594 -37.59226990]
[-686.08575439 -27.59349823]
[-671.08966064 -27.93494606]
[-656.09356689 -28.27639389]
[-654.35931396 -35.57313538]
[-668.95275879 -39.04182816]
[-665.48382568 -53.63520432]
[-650.89086914 -50.16661835]
[-649.15661621 -57.46335983]
[-662.39544678 -64.51548004]
[-675.63433838 -71.56760406]
[-688.87322998 -78.61972809]
[-702.11206055 -85.67184448]
[-715.39086914 -92.64850616]
[-728.70916748 -99.54948425]
[-742.02740479 -106.45046234]
[-755.34570312 -113.35143280]
[-769.71105957 -107.17317200]
[-784.67187500 -111.72368622]
[-793.16418457 -124.85437775]
[-791.17810059 -140.36532593]
[-779.65142822 -150.93273926]
[-764.02673340 -151.56701660]
[-751.68145752 -141.96864319]
[-748.44470215 -126.66971588]
[-735.12646484 -119.76873779]
[-721.80816650 -112.86775970]
[-708.48986816 -105.96678925]
[-701.13360596 -105.68081665]
[-695.05993652 -98.91071320]
[-681.82110596 -91.85858917]
[-668.58221436 -84.80647278]
[-655.34332275 -77.75434875]
[-642.10449219 -70.70222473]
[-623.72918701 -53.90016174]
[-613.42932129 -34.41207123]
[-611.16088867 -15.13561726]
[-615.96966553 1.27779925]
[-626.12469482 12.68567944]
[-611.26440430 14.72817898]
[-596.40411377 16.77067947]
[-581.54382324 18.81317902]
[-566.68353271 20.85567856]
[-551.82324219 22.89817810]
[-536.96295166 24.94067764]
[-522.10266113 26.98317719]
[-513.07617188 15.13459873]
[-499.23892212 9.35656071]
[-484.26843262 11.29324627]
[-472.19808960 20.52383995]
[-466.33038330 34.64889908]
[-451.47009277 36.69139862]
[-436.60980225 38.73389816]
[-421.74951172 40.77639771]
[-406.88922119 42.81889725]
[-400.80068970 29.15481949]
[-391.09875488 17.74850845]
[-378.56320190 9.52989864]
[-364.20523071 5.17219305]
[-349.18600464 5.03673220]
[-334.72259521 9.14304066]
[-321.98950195 17.16655540]
[-312.02322388 28.46426201]
[-305.63784790 42.12622452]
[-303.35858154 57.04885864]
[-288.49829102 59.09135818]
[-273.63800049 61.13385773]
[-258.77770996 63.17635727]
[-220.71174622 62.28121567]
[-205.72048950 61.76910019]
[-190.72923279 61.25698090]
[-175.73797607 60.74486542]
[-171.90379333 57.95598984]
[-166.28561401 57.52072525]
[-160.40048218 60.39564514]
[-145.40145874 60.22491074]
[-130.40242004 60.05417633]
[-115.40339661 59.88343811]
[-108.98148346 51.99561691]
[-99.07562256 48.85918045]
[-88.86228180 51.73179245]
[-81.75597382 59.90256500]
[-66.75694275 60.07329941]
[-51.75791550 60.24403381]
[-36.75888824 60.41476822]
[-21.75985909 60.58550262]
[-6.76083088 60.75624084]
[8.23819733 60.92697525]
[23.07265663 51.52081299]
[38.82544327 61.09061813]
[53.82544327 61.09061813]
[68.82543945 61.09061813]
[82.33467865 54.57137680]
[91.66794586 42.82871246]
[101.00120544 31.08605003]
[98.95736694 15.41447449]
[108.65972137 2.93890047]
[124.35202789 1.06086469]
[136.72431946 10.89457226]
[138.43634033 26.60585976]
[128.47238159 38.87349701]
[112.74387360 40.41931534]
[103.41060638 52.16197968]
[94.07734680 63.90464401]
[98.33242035 70.08074951]
[110.68463898 61.57059097]
[123.03684998 53.06043243]
[135.38906860 44.55027390]
[150.34147644 43.35633469]
[143.89923096 56.90248871]
[131.54701233 65.41264343]
[119.19479370 73.92280579]
[106.84258270 82.43296051]
[111.09766388 88.60906982]
[125.39483643 84.07135010]
[139.69200134 79.53363800]
[150.50492859 67.98411560]
[164.97650146 71.50869751]
[179.27366638 66.97097778]
[193.57084656 62.43326187]
[198.33859253 47.66680527]
[210.89508057 38.55012131]
[226.41210938 38.58876038]
[238.92304993 47.76786804]
[243.61720276 62.55788803]
[238.68954468 77.27175140]
[226.03488159 86.25168610]
[210.51919556 86.04471588]
[198.10856628 76.73043060]
[183.81138611 81.26815033]
[169.51422119 85.80587006]
[159.72393799 97.03082275]
[144.22972107 93.83080292]
[129.93255615 98.36852264]
[115.63538361 102.90624237]
[115.63538361 110.40624237]
[130.63537598 110.40624237]
[145.63537598 110.40624237]
[160.63537598 110.40624237]
[175.63537598 110.40649414]
[175.63488770 125.40649414]
[160.63537598 125.40624237]
[145.63537598 125.40624237]
[130.63537598 125.40624237]
[115.63538361 125.40624237]
[115.63538361 132.90625000]
[129.93255615 137.44395447]
[144.22972107 141.98167419]
[158.52690125 146.51939392]
[174.41918945 142.47378540]
[185.67367554 154.40142822]
[180.71269226 170.03219604]
[164.63967896 173.28648376]
[153.98918152 160.81657410]
[139.69200134 156.27885437]
[125.39483643 151.74113464]
[111.09766388 147.20341492]
[107.20078278 153.61155701]
[120.01695251 161.40551758]
[112.22280121 174.22157288]
[99.40702057 166.42785645]
[95.51014709 172.83599854]
[106.11674500 183.44259644]
[116.72335052 194.04919434]
[127.32994843 204.65580750]
[137.93655396 215.26240540]
[148.54315186 225.86900330]
[159.14974976 236.47560120]
[174.45414734 233.91528320]
[188.32551575 240.86975098]
[195.43005371 254.66487122]
[193.03590393 269.99612427]
[182.06367493 280.96835327]
[166.73240662 283.36251831]
[152.93730164 276.25796509]
[145.98283386 262.38659668]
[148.54315186 247.08221436]
[137.93655396 236.47560120]
[127.32994843 225.86900330]
[116.72335052 215.26240540]
[106.11674500 204.65580750]
[95.51014709 194.04919434]
[84.90354156 183.44259644]
[68.82543945 76.09062195]
[53.82544327 76.09062195]
[38.82544327 76.09062195]
[29.19208145 84.62966156]
[16.72258377 84.34234619]
[8.06746292 75.92600250]
[-6.93156576 75.75526428]
[-21.93059349 75.58453369]
[-36.92962265 75.41379547]
[-51.92864990 75.24306488]
[-66.92768097 75.07232666]
[-81.92670441 74.90158844]
[-99.07562256 85.54478455]
[-115.23266602 74.88246918]
[-130.23168945 75.05319977]
[-145.23072815 75.22393799]
[-160.22975159 75.39467621]
[-175.22586060 75.73612213]
[-190.21711731 76.24823761]
[-205.20837402 76.76035309]
[-220.19963074 77.27246857]
[-209.15403748 87.42111969]
[-213.38026428 101.81344604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[13 137]
[14 136]
[15 135]
[16 134]
[26 124]
[27 123]
[28 122]
[29 121]
[30 120]
[35 115]
[36 114]
[37 113]
[38 112]
[39 111]
[40 110]
[41 109]
[42 108]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[63 73]
[64 72]
[65 71]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 97]
[84 96]
[85 95]
[86 94]
[138 273]
[139 272]
[140 271]
[141 270]
[144 269]
[145 268]
[146 267]
[147 266]
[151 264]
[152 263]
[153 262]
[154 261]
[155 260]
[156 259]
[157 258]
[159 255]
[160 254]
[161 253]
[162 173]
[163 172]
[164 171]
[183 204]
[184 203]
[185 202]
[187 200]
[188 199]
[189 198]
[215 226]
[216 225]
[217 224]
[218 223]
[231 252]
[232 251]
[233 250]
[234 249]
[235 248]
[236 247]
[237 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
