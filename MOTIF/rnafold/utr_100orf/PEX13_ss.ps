%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGUGUCUUACGCUCCAGGUGCUGGUCUACGCGGGCCUGGACAGUCAGGGGUAGGAGCGGGAGCCGAGAGGAGGCGGAGGAGAUGGCGUCCCAGCCGCCACCUCCCCCCAAACCCUGGGAGACCCGCCGAAUUCCGGGAGCCGGACCGGGACCAGGACCGGGCCCCACUUUCCAAUCUGCUG\
) } def
/len { sequence length } bind def

/coor [
[-10.75574207 435.76336670]
[-21.17427254 446.39779663]
[-34.69415283 452.54370117]
[-49.48452377 453.39749146]
[-54.02224350 467.69464111]
[-58.55995941 481.99182129]
[-63.09767914 496.28900146]
[-62.12620926 513.21508789]
[-78.12189484 518.83422852]
[-87.94945526 505.01916504]
[-77.39485168 491.75128174]
[-72.85713196 477.45410156]
[-68.31941223 463.15695190]
[-63.78169632 448.85977173]
[-64.41160583 448.51293945]
[-65.03523254 448.15493774]
[-74.89328766 459.46063232]
[-84.75134277 470.76632690]
[-94.60939789 482.07202148]
[-100.46173096 497.98385620]
[-117.37181091 496.76507568]
[-120.88183594 480.17846680]
[-105.91509247 472.21395874]
[-96.05703735 460.90826416]
[-86.19898224 449.60256958]
[-76.34092712 438.29687500]
[-83.91342926 423.04577637]
[-84.52901459 405.98071289]
[-78.03823853 390.13369751]
[-65.55784607 378.33694458]
[-49.27885818 372.71652222]
[-32.08195496 374.30935669]
[-24.95460129 361.11083984]
[-17.82724762 347.91232300]
[-10.69989395 334.71380615]
[-3.57254076 321.51528931]
[-6.73278809 309.82333374]
[-0.88313580 298.76226807]
[11.31711102 294.52911377]
[18.66876411 281.45422363]
[26.02041817 268.37930298]
[33.37207031 255.30439758]
[32.86553955 240.41841125]
[46.37344360 232.18147278]
[53.72509384 219.10656738]
[61.07674789 206.03166199]
[60.66588593 201.25169373]
[63.26993942 196.16658020]
[68.90917206 192.64207458]
[76.70293427 179.82577515]
[84.49669647 167.00949097]
[92.29045105 154.19319153]
[100.08421326 141.37690735]
[78.37246704 132.72303772]
[65.86521912 114.46112061]
[65.67898560 93.56549072]
[76.50827026 77.15772247]
[93.51770782 70.08053589]
[94.02982330 55.08927917]
[94.54193878 40.09802246]
[95.05405426 25.10676956]
[95.56616974 10.11551380]
[83.39700317 -2.43564820]
[84.04553223 -19.56790352]
[96.62383270 -30.71525764]
[96.87992859 -45.71306992]
[89.37936401 -59.64333344]
[97.33283234 -72.23664856]
[97.58892822 -87.23446655]
[94.60089111 -95.89220428]
[97.97960663 -102.48556519]
[98.49172211 -117.47682190]
[88.20838928 -134.79693604]
[99.08876038 -150.76472473]
[99.08876038 -165.76472473]
[95.95333862 -174.37017822]
[99.21899414 -181.02027893]
[99.47509003 -196.01808167]
[96.48705292 -204.67582703]
[99.86576843 -211.26918030]
[100.37788391 -226.26043701]
[100.89000702 -241.25169373]
[101.40212250 -256.24295044]
[94.14048004 -270.29925537]
[102.30779266 -282.75494385]
[102.81991577 -297.74618530]
[103.33203125 -312.73745728]
[103.84414673 -327.72869873]
[104.35626221 -342.71994019]
[92.60714722 -353.03945923]
[90.29117584 -368.50460815]
[98.50187683 -381.81317139]
[113.36240387 -386.68130493]
[127.85607147 -380.81042480]
[135.13941956 -366.97253418]
[131.77346802 -351.70150757]
[119.34751892 -342.20782471]
[118.83540344 -327.21658325]
[118.32328796 -312.22531128]
[117.81116486 -297.23406982]
[117.29904938 -282.24282837]
[124.59732056 -269.25878906]
[116.39337158 -255.73083496]
[115.88125610 -240.73957825]
[115.36914062 -225.74832153]
[114.85702515 -210.75706482]
[114.47290802 -195.76199341]
[114.21681213 -180.76417542]
[114.08876038 -165.76472473]
[114.08876038 -150.76472473]
[121.95457458 -144.19673157]
[124.95742798 -134.16941833]
[121.86962128 -123.93806458]
[113.48297882 -116.96470642]
[112.97086334 -101.97344971]
[112.58673859 -86.97837067]
[112.33064270 -71.98055267]
[119.84952545 -59.12303925]
[111.87773895 -45.45697784]
[111.62164307 -30.45916176]
[121.79319000 -22.52654648]
[125.58815765 -9.99472046]
[121.40377045 2.61785483]
[110.55742645 10.62763023]
[110.04531097 25.61888504]
[109.53319550 40.61014175]
[109.02108002 55.60139465]
[108.50895691 70.59265137]
[115.87715912 71.74820709]
[123.12075806 74.79746246]
[129.74662781 79.73177338]
[135.26239014 86.41368103]
[139.20994568 94.57763672]
[141.19847107 103.83943939]
[156.16351318 104.86307526]
[171.12854004 105.88671112]
[186.09356689 106.91034698]
[201.05859375 107.93398285]
[217.27342224 102.98263550]
[226.51997375 117.19311523]
[215.42456055 130.01216125]
[200.03495789 122.89901733]
[185.06993103 121.87538147]
[170.10490417 120.85173798]
[155.13987732 119.82810211]
[140.17483521 118.80446625]
[135.51522827 133.06237793]
[148.19659424 141.07382202]
[160.87796021 149.08525085]
[173.55931091 157.09669495]
[187.92462158 151.23004150]
[202.98666382 154.96022034]
[212.95379639 166.85290527]
[213.99345398 182.33511353]
[205.70584106 195.45361328]
[191.27774048 201.16409302]
[176.25703430 197.27073669]
[166.41950989 185.27062988]
[165.54788208 169.77804565]
[152.86651611 161.76661682]
[140.18515015 153.75517273]
[127.50379944 145.74374390]
[112.90050507 149.17066956]
[105.10674286 161.98695374]
[97.31298828 174.80325317]
[89.51922607 187.61953735]
[81.72546387 200.43583679]
[74.15165710 213.38331604]
[66.80000305 226.45822144]
[59.44834900 239.53312683]
[59.42904282 255.35432434]
[46.44697952 262.65606689]
[39.09532547 275.73095703]
[31.74367142 288.80587769]
[24.39201736 301.88076782]
[25.03870201 320.27255249]
[9.62597561 328.64263916]
[2.49862242 341.84115601]
[-4.62873077 355.03967285]
[-11.75608444 368.23818970]
[-18.88343811 381.43670654]
[-9.18964863 392.92602539]
[-4.30410337 407.10409546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[7 11]
[16 26]
[17 25]
[18 24]
[19 23]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[39 175]
[40 174]
[41 173]
[42 172]
[44 170]
[45 169]
[46 168]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[65 120]
[66 119]
[68 117]
[69 116]
[71 115]
[72 114]
[74 110]
[75 109]
[77 108]
[78 107]
[80 106]
[81 105]
[82 104]
[83 103]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[134 146]
[135 145]
[136 144]
[137 143]
[138 142]
[147 162]
[148 161]
[149 160]
[150 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
