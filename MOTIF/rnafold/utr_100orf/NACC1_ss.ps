%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUGAAUGGCCGCCGCGGCUGCCGCUGCUGCUGAGGCGGAGGCCGCGGAGGCCGCGGAGGCGGAGGCCGAGGCCCCGGCGCAGCGGGGCGCGCCCCGGGCCCAGGCCCGGCCCCAGCCGCCGCUGCGGAGCCCGCCGGGACCCCCCGGAGCGCGGCCACGGCGCAGCCGCUGCCAUGGCCCAGACACUGCAGAUGGAGAUCCCGAACUUCGGCAACAGCAUCCUGGAGUGCCUCAAUGAACAGCGGCUGCAGGG\
CCUGUACUGUGACGUGUCAG\
) } def
/len { sequence length } bind def

/coor [
[83.94839478 128.82170105]
[79.90144348 143.26545715]
[80.51590729 158.25286865]
[66.45190430 163.46859741]
[57.14545441 151.70466614]
[65.45768738 139.21850586]
[69.50463867 124.77474213]
[73.55158997 110.33098602]
[66.32970428 108.30751038]
[56.47165298 119.61320496]
[46.61359787 130.91889954]
[36.75554276 142.22459412]
[33.51772308 157.71095276]
[19.32160759 162.21867371]
[9.46355343 173.52436829]
[-0.39450216 184.83006287]
[-10.25255775 196.13575745]
[-20.11061287 207.44145203]
[-29.96866798 218.74714661]
[-39.82672119 230.05284119]
[-49.68477631 241.35853577]
[-52.92259979 256.84487915]
[-67.11871338 261.35263062]
[-76.97676849 272.65832520]
[-86.83482361 283.96401978]
[-96.69287872 295.26971436]
[-106.55093384 306.57540894]
[-102.95217133 321.66940308]
[-108.94380951 335.98303223]
[-122.22193146 344.01239014]
[-137.68084717 342.67007446]
[-149.37626648 332.47219849]
[-152.81106567 317.34005737]
[-146.66450500 303.09228516]
[-133.30006409 295.20739746]
[-117.85662842 296.71734619]
[-107.99857330 285.41165161]
[-98.14051819 274.10595703]
[-88.28246307 262.80026245]
[-78.42440796 251.49456787]
[-75.89170074 236.81687927]
[-60.99047470 231.50048828]
[-51.13241959 220.19479370]
[-41.27436447 208.88909912]
[-31.41630745 197.58340454]
[-21.55825233 186.27770996]
[-11.70019722 174.97201538]
[-1.84214234 163.66632080]
[8.01591301 152.36062622]
[10.54861832 137.68292236]
[25.44984627 132.36654663]
[35.30790329 121.06084442]
[45.16595840 109.75514984]
[55.02401352 98.44945526]
[52.13953400 83.72940826]
[38.74356842 76.98046875]
[25.34760475 70.23153687]
[11.95163918 63.48260117]
[-3.85403776 64.18341064]
[-11.73907471 51.54713440]
[-25.13503838 44.79819870]
[-38.53100204 38.04926300]
[-51.96516037 31.37667656]
[-65.43708038 24.78065491]
[-74.48206329 23.82573891]
[-79.02414703 18.03211784]
[-92.42011261 11.28318310]
[-105.81607819 4.53424740]
[-119.21204376 -2.21468806]
[-132.60800171 -8.96362305]
[-141.64154053 -10.02143002]
[-146.11738586 -15.86637592]
[-159.43566895 -22.76735115]
[-172.75393677 -29.66832733]
[-186.07221985 -36.56930161]
[-198.55406189 -33.41958618]
[-209.49334717 -39.41147232]
[-213.30604553 -50.86613464]
[-226.54490662 -57.91825485]
[-235.55201721 -59.18142319]
[-239.89366150 -65.12673950]
[-253.05139160 -72.32909393]
[-265.60168457 -69.46431732]
[-276.40176392 -75.70366669]
[-279.95272827 -87.24214935]
[-293.02761841 -94.59380341]
[-306.10253906 -101.94545746]
[-319.17742920 -109.29711151]
[-332.25234985 -116.64875793]
[-348.63534546 -115.92115021]
[-357.22766113 -129.88911438]
[-349.19027710 -144.18359375]
[-332.79135132 -144.09967041]
[-324.90069580 -129.72366333]
[-311.82577515 -122.37201691]
[-298.75088501 -115.02036285]
[-285.67596436 -107.66870880]
[-272.60107422 -100.31705475]
[-255.07209778 -101.44510651]
[-245.84904480 -85.48683167]
[-232.69129944 -78.28447723]
[-219.49278259 -71.15711975]
[-206.25392151 -64.10500336]
[-188.75517273 -65.63177490]
[-179.17124939 -49.88758087]
[-165.85296631 -42.98660660]
[-152.53468323 -36.08562851]
[-139.21641541 -29.18465424]
[-125.85906982 -22.35958862]
[-112.46311188 -15.61065292]
[-99.06714630 -8.86171722]
[-85.67118073 -2.11278200]
[-72.27521515 4.63615322]
[-58.84105682 11.30873966]
[-45.36914062 17.90476036]
[-38.00825882 18.02320099]
[-31.78206825 24.65329742]
[-18.38610268 31.40223312]
[-4.99013901 38.15116882]
[9.85736942 36.96763229]
[18.70057487 50.08663559]
[32.09653854 56.83557129]
[45.49250412 63.58450699]
[58.88846970 70.33344269]
[113.01965332 86.74771881]
[127.26424408 82.04756165]
[141.50885010 77.34740448]
[155.75343323 72.64723969]
[169.99803162 67.94708252]
[177.13368225 62.30739212]
[184.43159485 63.27549362]
[198.72875977 58.73777390]
[213.02593994 54.20005798]
[227.32310486 49.66233826]
[221.06091309 33.18270111]
[227.80456543 11.83925629]
[229.33853149 -3.08210301]
[230.87249756 -18.00346184]
[232.40646362 -32.92481995]
[233.94041443 -47.84617996]
[226.74604797 -62.58296967]
[236.13442993 -76.02880096]
[252.44760132 -74.35176086]
[258.90396118 -59.27703476]
[248.86178589 -46.31221771]
[247.32781982 -31.39085960]
[245.79385376 -16.46949959]
[244.25988770 -1.54814076]
[242.72593689 13.37321854]
[257.19314575 17.33806992]
[271.65905762 21.30258369]
[277.94668579 7.68401289]
[278.69546509 -1.38036740]
[284.38418579 -6.05315733]
[290.82644653 -19.59927750]
[288.98251343 -35.89442825]
[302.33154297 -45.41993713]
[317.14120483 -38.37677383]
[318.17657471 -22.01034355]
[304.37255859 -13.15702629]
[297.93032837 0.38909447]
[291.56527710 13.97166061]
[285.27761841 27.59023285]
[293.28906250 40.27159119]
[308.28808594 40.44232559]
[323.28710938 40.61306000]
[338.28613281 40.78379822]
[353.28515625 40.95453262]
[368.28421021 41.12526703]
[383.28323364 41.29600143]
[398.28225708 41.46673584]
[413.28128052 41.63747025]
[428.28030396 41.80820847]
[444.14099121 32.41832352]
[458.86743164 41.99272537]
[473.86743164 41.99272537]
[488.86743164 41.99272537]
[494.25549316 32.86194992]
[502.86975098 26.82076454]
[513.13153076 24.89498138]
[523.19348145 27.36355591]
[531.27221680 33.72039795]
[535.96405029 42.77642822]
[550.95532227 43.28854370]
[565.01159668 36.02690506]
[577.46728516 44.19421768]
[592.45855713 44.70633698]
[607.44982910 45.21845245]
[622.44110107 45.73056793]
[636.49737549 38.46893311]
[648.95306396 46.63624573]
[663.94433594 47.14836121]
[678.93554688 47.66048050]
[693.92950439 48.08726883]
[708.92559814 48.42871475]
[723.92169189 48.77016449]
[730.10687256 34.91305161]
[741.09649658 24.50772858]
[755.19458008 19.11718750]
[770.24163818 19.53377533]
[783.94561768 25.66288376]
[794.23095703 36.54210281]
[799.55291748 50.49221802]
[814.54907227 50.83366776]
[829.54516602 51.17511368]
[844.54125977 51.51656342]
[860.51391602 45.83234024]
[870.39770508 59.60723495]
[859.89721680 72.91799927]
[844.19982910 66.51268005]
[829.20373535 66.17122650]
[814.20758057 65.82978058]
[799.21148682 65.48833466]
[793.26007080 79.18176270]
[782.49023438 89.58157349]
[768.52154541 95.08060455]
[753.47106934 94.81189728]
[739.63299561 88.78527069]
[729.12829590 77.89054108]
[723.58026123 63.76627731]
[708.58416748 63.42483139]
[693.58801270 63.08338165]
[686.85540771 66.06135559]
[678.42346191 62.65173340]
[663.43218994 62.13961792]
[648.44091797 61.62750244]
[635.45690918 68.92576599]
[621.92895508 60.72182465]
[606.93768311 60.20970917]
[591.94647217 59.69758987]
[576.95520020 59.18547440]
[563.97119141 66.48374176]
[550.44323730 58.27980042]
[535.45196533 57.76768112]
[522.17559814 72.06771088]
[502.35626221 71.93061066]
[488.86743164 56.99272537]
[473.86743164 56.99272537]
[458.86743164 56.99272537]
[450.11706543 65.31000519]
[437.64511108 65.45537567]
[428.10958862 56.80723572]
[413.11053467 56.63650131]
[398.11151123 56.46576691]
[383.11248779 56.29502869]
[368.11346436 56.12429428]
[353.11444092 55.95355988]
[338.11541748 55.78282547]
[323.11636353 55.61209106]
[308.11734009 55.44135666]
[293.11831665 55.27061844]
[258.13244629 82.39064026]
[231.86082458 63.95951080]
[217.56364441 68.49723053]
[203.26647949 73.03494263]
[188.96931458 77.57266235]
[174.69819641 82.19168091]
[160.45359802 86.89183807]
[146.20899963 91.59199524]
[131.96440125 96.29216003]
[117.71981049 100.99231720]
[109.99912262 113.85275269]
[112.54777527 128.63464355]
[115.09642792 143.41653442]
[129.07614136 150.15057373]
[136.39813232 163.83151245]
[134.24694824 179.19874573]
[123.44976807 190.34327698]
[108.15831757 192.97978210]
[94.25247955 186.09449768]
[87.07933044 172.33493042]
[89.39709473 156.99194336]
[100.31453705 145.96519470]
[97.76588440 131.18330383]
[95.21722412 116.40141296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 54]
[10 53]
[11 52]
[12 51]
[14 49]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[55 124]
[56 123]
[57 122]
[58 121]
[60 119]
[61 118]
[62 117]
[63 115]
[64 114]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[72 108]
[73 107]
[74 106]
[75 105]
[78 103]
[79 102]
[81 101]
[82 100]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[125 261]
[126 260]
[127 259]
[128 258]
[129 257]
[131 256]
[132 255]
[133 254]
[134 253]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
[151 163]
[152 162]
[154 161]
[155 160]
[164 251]
[165 250]
[166 249]
[167 248]
[168 247]
[169 246]
[170 245]
[171 244]
[172 243]
[173 242]
[175 239]
[176 238]
[177 237]
[183 234]
[184 233]
[186 231]
[187 230]
[188 229]
[189 228]
[191 226]
[192 225]
[193 224]
[194 222]
[195 221]
[196 220]
[203 213]
[204 212]
[205 211]
[206 210]
[262 275]
[263 274]
[264 273]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
