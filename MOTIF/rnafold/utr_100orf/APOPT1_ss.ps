%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCAAUGCUGCCGUGCGCCGCGGGAGCCAGGGGGCGUGGGGCCAUGGUGGUCUUGCGGGCGGGGAAGAAGACCUUUCUCCCCCCUCUCUGCCGCGCCUUCGCCU\
) } def
/len { sequence length } bind def

/coor [
[61.70892715 119.32714081]
[67.06331635 105.31534576]
[81.01917267 99.81789398]
[66.48387146 96.11314392]
[51.94857788 92.40840149]
[37.41328049 88.70365143]
[22.87798309 84.99890137]
[7.59436083 89.08808899]
[-2.82763410 78.44706726]
[-17.36293030 74.74232483]
[-31.89822769 71.03757477]
[-46.43352509 67.33282471]
[-60.96881866 63.62807846]
[-75.50411987 59.92332840]
[-90.03941345 56.21858215]
[-104.57470703 52.51383209]
[-119.11000824 48.80908585]
[-128.36177063 49.72145081]
[-134.01446533 44.77633667]
[-148.43473816 40.64648056]
[-162.85501099 36.51662445]
[-178.25209045 40.15537643]
[-188.35720825 29.21298981]
[-202.77748108 25.08313370]
[-212.14512634 30.99264526]
[-222.99508667 30.68578911]
[-231.65274048 24.51328468]
[-235.32331848 14.77064037]
[-249.47636414 9.80161095]
[-263.62942505 4.83258152]
[-279.63705444 8.39458179]
[-290.52478027 -3.86874413]
[-285.09225464 -19.34193802]
[-268.92797852 -22.10750389]
[-258.66036987 -9.32046604]
[-244.50733948 -4.35143614]
[-230.35429382 0.61759329]
[-211.79832458 -4.47548056]
[-198.64762878 10.66285992]
[-184.22735596 14.79271603]
[-169.86170959 10.85857010]
[-158.72514343 22.09635162]
[-144.30487061 26.22620773]
[-129.88459778 30.35606384]
[-115.40525818 34.27378845]
[-100.86996460 37.97853470]
[-86.33466339 41.68328476]
[-71.79936981 45.38803101]
[-57.26407242 49.09278107]
[-42.72877502 52.79752731]
[-28.19347954 56.50227737]
[-13.65818214 60.20702362]
[0.87711406 63.91177368]
[15.12107563 59.55759811]
[26.58273125 70.46360779]
[41.11802673 74.16835785]
[55.65332413 77.87310028]
[70.18862152 81.57785034]
[84.72391510 85.28260040]
[115.88610840 79.64215851]
[130.61378479 76.79683685]
[145.34144592 73.95151520]
[159.76171875 69.82166290]
[173.76278687 64.43929291]
[187.76387024 59.05691910]
[201.76493835 53.67454910]
[211.86975098 41.50067139]
[226.52578735 44.15584564]
[240.52685547 38.77347183]
[254.52793884 33.39110184]
[268.52902222 28.00872993]
[276.33474731 13.99266911]
[292.18276978 11.49880505]
[303.91586304 22.44021797]
[302.53335571 38.42359161]
[289.09582520 47.18785095]
[273.91137695 42.00980377]
[259.91030884 47.39217758]
[245.90922546 52.77454758]
[231.90815735 58.15691757]
[222.80479431 69.94581604]
[207.14730835 67.67562103]
[193.14624023 73.05799103]
[179.14515686 78.44036102]
[165.14408875 83.82273865]
[177.84840393 91.79772949]
[181.45578003 106.35749054]
[173.94425964 119.34121704]
[159.52409363 123.47146606]
[146.27786255 116.43320465]
[141.63012695 102.17141724]
[148.18676758 88.67918396]
[133.45909119 91.52450562]
[118.73143005 94.36982727]
[111.94120026 107.74490356]
[118.33586121 121.31356049]
[124.73051453 134.88221741]
[138.50337219 143.78393555]
[137.41055298 160.14663696]
[122.57625580 167.13775635]
[109.26074219 157.56544495]
[111.16186523 141.27687073]
[104.76720428 127.70821381]
[98.37255096 114.13956451]
[95.62191772 128.88520813]
[82.87998199 136.79995728]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 59]
[4 58]
[5 57]
[6 56]
[7 55]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[17 45]
[19 44]
[20 43]
[21 42]
[23 40]
[24 39]
[28 37]
[29 36]
[30 35]
[60 94]
[61 93]
[62 92]
[63 85]
[64 84]
[65 83]
[66 82]
[68 80]
[69 79]
[70 78]
[71 77]
[95 104]
[96 103]
[97 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
