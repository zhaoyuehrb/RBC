%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCGGUUCAAACGACCCGGUGGGUCUACAGCGGAAGGGAGGGAGCGAAGGUAGGAGGCAGGGCUUGCCUCACUGGCCACCCUCCCAACCCCAAGAGCCCAGCCCCAUGGUCCCCGCCGCCGGCGCGCUGCUGUGGGUCCUGCUGCUGAAUCUGGGUCCCCGGGCGGCGGGGGCCCAAGGCCUGACCCAGACUCCGACCGAAAUGC\
) } def
/len { sequence length } bind def

/coor [
[226.91453552 367.66284180]
[221.61979675 353.62838745]
[216.32505798 339.59396362]
[211.03031921 325.55950928]
[205.73558044 311.52505493]
[203.26335144 294.19653320]
[210.82377625 282.75854492]
[200.91593933 271.49645996]
[191.00811768 260.23437500]
[181.10028076 248.97227478]
[171.19244385 237.71017456]
[161.28460693 226.44807434]
[157.70542908 227.50134277]
[153.99931335 227.93109131]
[150.27406311 227.72482300]
[146.63804626 226.88851929]
[137.42486572 238.72563171]
[128.21166992 250.56274414]
[118.99848175 262.39984131]
[109.78529358 274.23696899]
[104.82810974 290.44998169]
[87.87639618 290.17474365]
[83.44817352 273.80932617]
[97.94818115 265.02377319]
[107.16137695 253.18666077]
[116.37456512 241.34954834]
[125.58775330 229.51243591]
[134.80094910 217.67533875]
[131.19572449 208.61848450]
[131.85671997 198.70889282]
[136.81251526 189.89086914]
[130.07305908 176.49012756]
[123.33361816 163.08938599]
[116.59416199 149.68864441]
[109.85471344 136.28790283]
[103.11526489 122.88716125]
[90.24700928 120.93815613]
[80.47525024 112.34144592]
[76.90244293 99.82642365]
[62.75219345 94.84944153]
[48.60194016 89.87246704]
[34.45168686 84.89548492]
[20.30143356 79.91850281]
[6.15118170 74.94152069]
[-7.99907112 69.96453857]
[-13.87611675 74.64941406]
[-20.94826508 76.98472595]
[-28.32337952 76.72557068]
[-35.08816910 73.95124054]
[-40.42127991 69.04958344]
[-43.69298172 62.66345215]
[-44.53935623 55.60668564]
[-58.27595520 49.58125687]
[-72.01255798 43.55582428]
[-85.79405212 37.63380432]
[-99.61966705 31.81552696]
[-113.48862457 26.10132408]
[-127.40013123 20.49151802]
[-141.31164551 14.88171196]
[-155.22314453 9.27190590]
[-169.13465881 3.66209984]
[-183.04617310 -1.94770658]
[-198.31297302 2.98221946]
[-211.60591125 -5.99984217]
[-212.72776794 -22.00362206]
[-200.81796265 -32.75239182]
[-185.01266479 -30.00061226]
[-177.43635559 -15.85921478]
[-163.52485657 -10.24940872]
[-149.61334229 -4.63960266]
[-135.70182800 0.97020370]
[-121.79032135 6.58000994]
[-107.87881470 12.18981647]
[-100.49858856 11.77585602]
[-93.80139160 17.98991203]
[-79.97577667 23.80818748]
[-72.59015656 23.50520515]
[-65.98712158 29.81922531]
[-52.25052261 35.84465790]
[-38.51392365 41.87008667]
[-16.59602356 37.00582123]
[-3.02208948 55.81428528]
[11.12816334 60.79126740]
[25.27841568 65.76824951]
[39.42866898 70.74523163]
[53.57892227 75.72221375]
[67.72917175 80.69919586]
[81.87942505 85.67617035]
[89.77743530 79.28704834]
[99.65278625 76.90440369]
[104.30947876 62.64553833]
[108.96617126 48.38667297]
[113.62286377 34.12781143]
[118.17226410 19.83435059]
[122.61410522 5.50710297]
[115.50494385 -8.35282516]
[120.21370697 -22.81941605]
[133.47084045 -29.51149940]
[137.91268921 -43.83874512]
[142.35452271 -58.16599274]
[134.74743652 -69.28228760]
[134.92948914 -82.55638885]
[142.61013794 -93.14476776]
[154.80355835 -97.31285858]
[159.46025085 -111.57172394]
[164.11694336 -125.83058929]
[156.67781067 -137.05996704]
[157.05935669 -150.32983398]
[164.89828491 -160.80157471]
[177.15299988 -164.78591919]
[182.02348328 -178.97317505]
[186.89398193 -193.16043091]
[191.76448059 -207.34768677]
[188.09124756 -223.33015442]
[200.27856445 -234.30291748]
[215.78915405 -228.97811890]
[218.66706848 -212.83346558]
[205.95173645 -202.47718811]
[201.08123779 -188.28993225]
[196.21075439 -174.10267639]
[191.34025574 -159.91542053]
[199.36549377 -145.13668823]
[194.11637878 -128.80461121]
[178.37580872 -121.17389679]
[173.71911621 -106.91503143]
[169.06242371 -92.65616608]
[177.30889893 -77.99974060]
[172.30586243 -61.59060287]
[156.68177795 -53.72415161]
[152.23992920 -39.39690399]
[147.79808044 -25.06965637]
[154.94462585 -12.05187321]
[150.64405823 2.54126930]
[136.94136047 9.94894600]
[132.49951172 24.27619362]
[133.52151489 31.59703064]
[127.88172913 38.78450394]
[123.22503662 53.04336929]
[118.56834412 67.30223083]
[113.91165161 81.56109619]
[123.03299713 98.26562500]
[116.51600647 116.14771271]
[123.25545502 129.54844666]
[129.99490356 142.94918823]
[136.73435974 156.34992981]
[143.47380066 169.75067139]
[150.21325684 183.15141296]
[171.86715698 193.29351807]
[172.54670715 216.54023743]
[182.45454407 227.80233765]
[192.36238098 239.06443787]
[202.27020264 250.32653809]
[212.17803955 261.58862305]
[222.08587646 272.85073853]
[234.64337158 281.05496216]
[248.93682861 285.60433960]
[263.23028564 290.15374756]
[277.52374268 294.70312500]
[291.81719971 299.25253296]
[306.11068726 303.80194092]
[320.40414429 308.35131836]
[334.69760132 312.90072632]
[348.99105835 317.45013428]
[363.28451538 321.99951172]
[378.13806152 315.93716431]
[392.06790161 323.89575195]
[394.38827515 339.77011108]
[383.31915283 351.38281250]
[367.35186768 349.82556152]
[358.73510742 336.29296875]
[344.44165039 331.74359131]
[330.14819336 327.19418335]
[315.85473633 322.64477539]
[301.56127930 318.09539795]
[287.26782227 313.54598999]
[272.97436523 308.99661255]
[258.68090820 304.44720459]
[244.38743591 299.89779663]
[230.09397888 295.34841919]
[219.77001953 306.23031616]
[225.06475830 320.26477051]
[230.35949707 334.29922485]
[235.65423584 348.33364868]
[240.94897461 362.36810303]
[255.89437866 360.43627930]
[270.88235474 362.00375366]
[285.10464478 366.98599243]
[297.79428101 375.11434937]
[308.26687622 385.95046997]
[315.95770264 398.90994263]
[320.45199585 413.29391479]
[321.50735474 428.32662964]
[319.06686401 443.19744873]
[313.26217651 457.10433960]
[304.40631104 469.29739380]
[292.97686768 479.11901855]
[279.59017944 486.03955078]
[264.96823120 489.68576050]
[249.89952087 489.86105347]
[235.19670105 486.55590820]
[221.65267944 479.94863892]
[209.99786377 470.39553833]
[200.86077881 458.41177368]
[194.73419189 444.64361572]
[191.94848633 429.83361816]
[192.65390015 414.78039551]
[196.81239319 400.29580688]
[204.19969177 387.16094971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[4 181]
[5 180]
[7 154]
[8 153]
[9 152]
[10 151]
[11 150]
[12 149]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[45 82]
[52 80]
[53 79]
[54 78]
[55 76]
[56 75]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[90 140]
[91 139]
[92 138]
[93 137]
[94 135]
[95 134]
[98 131]
[99 130]
[100 129]
[104 126]
[105 125]
[106 124]
[110 121]
[111 120]
[112 119]
[113 118]
[155 179]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
