%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCGCGAGCGCCGGCACUGCCCGCUCCGAGCCCGUGUCUGUCGGGUGCCGAGCCAACUUUCCUGCGUCCAUGCAGCCCCGCCGGCAACGGCUGCCUGCUCCCUGGUCCGGGCCCAGGGGCCCGCGCCCCACCGCCCCGCUGCUCGCGCUGCUGCUGUUGCUCGCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[-45.39726639 530.53912354]
[-56.84206009 520.37670898]
[-62.24235153 506.05554199]
[-60.35719299 490.86657715]
[-51.61977386 478.30010986]
[-38.03789902 471.24380493]
[-38.03789902 456.24380493]
[-38.03789902 441.24380493]
[-38.03789902 426.24380493]
[-38.03789902 411.24380493]
[-38.03789902 396.24380493]
[-38.03789902 381.24380493]
[-45.77519608 368.51654053]
[-38.03789902 354.71636963]
[-38.03789902 339.71636963]
[-38.03789902 324.71636963]
[-38.03789902 309.71636963]
[-38.03789902 294.71636963]
[-40.74813843 290.74328613]
[-40.96613693 285.01788330]
[-37.75392914 279.17105103]
[-37.20610046 264.18106079]
[-46.22293091 259.03796387]
[-51.85459137 249.15432739]
[-51.68167114 236.78251648]
[-66.59168243 238.42309570]
[-81.50170135 240.06365967]
[-96.41171265 241.70422363]
[-104.16290283 255.01681519]
[-118.10375977 261.14105225]
[-132.80375671 257.92016602]
[-142.67031860 246.79411316]
[-157.58033752 248.43469238]
[-172.49035645 250.07525635]
[-187.40036011 251.71582031]
[-202.31037903 253.35638428]
[-210.84048462 266.46255493]
[-225.81437683 270.96990967]
[-240.16184998 264.75027466]
[-247.10845947 250.74031067]
[-243.37423706 235.55514526]
[-230.72235107 226.36471558]
[-215.12664795 227.50848389]
[-203.95094299 238.44638062]
[-189.04093933 236.80580139]
[-174.13092041 235.16523743]
[-159.22090149 233.52467346]
[-144.31088257 231.88410950]
[-137.09950256 218.87895203]
[-123.45151520 212.53890991]
[-108.51259613 215.48544312]
[-98.05228424 226.79420471]
[-83.14226532 225.15364075]
[-68.23225403 223.51307678]
[-53.32223892 221.87251282]
[-68.04036713 218.97825623]
[-79.55170441 209.36112976]
[-85.01779938 195.39253235]
[-83.09082031 180.51681519]
[-74.24591064 168.40205383]
[-60.66405869 162.03547668]
[-45.69426727 162.98695374]
[-33.02778244 171.02188110]
[-25.78789902 184.15901184]
[-25.75982475 199.15898132]
[-32.94965363 212.32223511]
[-22.15110207 201.91111755]
[-11.35254860 191.50000000]
[-0.55399698 181.08889771]
[-2.82579947 169.86444092]
[0.65487403 158.82817078]
[9.12919903 150.77246094]
[20.55994606 147.79425049]
[32.12050247 150.75010681]
[43.29208755 140.74032593]
[54.46366882 130.73054504]
[65.63525391 120.72075653]
[76.80683136 110.71097565]
[67.39118195 101.20930481]
[62.80945587 86.06501770]
[65.88721466 67.96041870]
[77.97120667 50.82461166]
[78.79272461 35.84712601]
[79.61424255 20.86963654]
[80.43576050 5.89215088]
[72.54763794 -8.48524666]
[81.28492737 -22.36298752]
[97.65946198 -21.46484184]
[104.82652283 -6.71474552]
[95.41324615 6.71366787]
[94.59172821 21.69115448]
[93.77021027 36.66864014]
[92.94869232 51.64612961]
[107.23201752 56.22943497]
[121.51406097 60.81235123]
[129.56071472 48.15330505]
[137.60737610 35.49426270]
[131.78067017 21.11270714]
[135.55268860 6.06108189]
[147.47303772 -3.87295580]
[162.95806885 -4.86956596]
[176.05349731 3.45446873]
[181.72384644 17.89838600]
[177.78875732 32.90820694]
[165.76135254 42.71234894]
[150.26641846 43.54091644]
[142.21975708 56.19995880]
[134.17311096 68.85900116]
[138.31137085 75.11398315]
[146.58787537 87.62395477]
[150.72613525 93.87893677]
[165.52392578 91.42424011]
[180.32171631 88.96955109]
[195.11949158 86.51485443]
[202.12995911 72.79772186]
[215.71447754 65.91918182]
[230.56880188 68.33013916]
[241.02990723 78.89911652]
[255.82769775 76.44441986]
[270.62548828 73.98972321]
[285.42327881 71.53503418]
[300.22106934 69.08033752]
[312.53936768 58.25485229]
[327.98486328 63.76567459]
[330.66851807 79.94374847]
[317.82962036 90.14645386]
[302.67575073 83.87812042]
[287.87796021 86.33281708]
[273.08016968 88.78751373]
[258.28237915 91.24221039]
[243.48460388 93.69689941]
[236.99632263 107.07748413]
[223.71603394 114.15548706]
[208.63815308 112.03153992]
[197.57418823 101.31263733]
[182.77641296 103.76733398]
[167.97862244 106.22203064]
[153.18083191 108.67671967]
[116.67958069 136.04319763]
[86.81661987 121.88256073]
[75.64503479 131.89233398]
[64.47344971 141.90211487]
[53.30186844 151.91191101]
[42.13028717 161.92169189]
[41.83984375 180.83570862]
[28.07830811 193.34571838]
[9.85711575 191.88743591]
[-0.94143617 202.29855347]
[-11.73998833 212.70967102]
[-22.53853989 223.12078857]
[-7.22094440 245.94476318]
[-22.21610641 264.72888184]
[-22.76393700 279.71887207]
[-23.03789711 294.71636963]
[-23.03789711 309.71636963]
[-23.03789711 324.71636963]
[-23.03789711 339.71636963]
[-23.03789711 354.71636963]
[-15.30059719 368.51654053]
[-23.03789711 381.24380493]
[-23.03789711 396.24380493]
[-23.03789711 411.24380493]
[-23.03789711 426.24380493]
[-23.03789711 441.24380493]
[-23.03789711 456.24380493]
[-23.03789711 471.24380493]
[-9.45601940 478.30010986]
[-0.71860331 490.86657715]
[1.16655767 506.05554199]
[-4.23373318 520.37670898]
[-15.67852783 530.53912354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[11 161]
[12 160]
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[21 153]
[22 152]
[25 55]
[26 54]
[27 53]
[28 52]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[66 150]
[67 149]
[68 148]
[69 147]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
[82 93]
[83 92]
[84 91]
[85 90]
[95 108]
[96 107]
[97 106]
[111 138]
[112 137]
[113 136]
[114 135]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
