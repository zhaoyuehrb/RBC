%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGACGUCACGAGAUUUGGAGCUCGCGGGAAAACUUGUCUCUGCGUUGUGGGGAGGACGCGCGCUCGCGCGGGAUUUUCAAGCGUAGGCCCCCGGGAACUCGAGCUGCCAUGAGCCUCUGGGUGGACAAGUAUCGGCCCUGCUCCUUGGGACGGCUGGACUAUCACAAGGAGCAGGCGGCCCAGCUGCGGAACCUGGUGCAGUGUGGUG\
) } def
/len { sequence length } bind def

/coor [
[111.59658813 116.55551910]
[104.17956543 117.66807556]
[101.29429626 132.38796997]
[98.40901947 147.10786438]
[104.23267365 162.43812561]
[93.65982819 174.97395325]
[77.56691742 171.81954956]
[72.50894928 156.21989441]
[83.68913269 144.22257996]
[86.57440186 129.50270081]
[89.45967865 114.78280640]
[75.48687744 109.32744598]
[67.63512421 122.10829163]
[59.78336716 134.88912964]
[65.82973480 149.17973328]
[62.28875732 164.28738403]
[50.52201843 174.40287781]
[35.05406570 175.63662720]
[21.83264542 167.51420593]
[15.94166374 153.15885925]
[19.64632034 138.09051514]
[31.52210045 128.10325623]
[47.00252533 127.03737640]
[54.85428238 114.25653076]
[62.70603561 101.47569275]
[61.59038925 86.51723480]
[51.92957687 75.04253387]
[37.12263870 69.46891785]
[34.84447098 54.74957275]
[25.18365860 43.27487183]
[14.31087875 42.97269821]
[5.57909393 36.86236572]
[1.73275805 27.15906525]
[3.81746387 17.15571785]
[-5.49741888 5.39846563]
[-14.81230164 -6.35878563]
[-24.12718391 -18.11603737]
[-33.44206619 -29.87328720]
[-42.75695038 -41.63053894]
[-52.07183456 -53.38779068]
[-61.38671494 -65.14504242]
[-73.48246765 -74.01593781]
[-87.49549103 -79.36712646]
[-101.50851440 -84.71830750]
[-115.52153778 -90.06949615]
[-129.53456116 -95.42068481]
[-143.54757690 -100.77186584]
[-157.56060791 -106.12305450]
[-166.69400024 -106.26101685]
[-171.74143982 -111.65963745]
[-185.67324829 -117.21885681]
[-199.60504150 -122.77808380]
[-213.53683472 -128.33731079]
[-227.46864319 -133.89654541]
[-241.40043640 -139.45576477]
[-254.49884033 -131.34785461]
[-269.68237305 -132.49397278]
[-281.14404297 -142.24560547]
[-284.62411499 -156.70336914]
[-298.55590820 -162.26258850]
[-312.48770142 -167.82182312]
[-326.41949463 -173.38104248]
[-340.35128784 -178.94027710]
[-356.49444580 -176.05390930]
[-366.85736084 -188.76380920]
[-360.77960205 -203.99511719]
[-344.51342773 -206.07917786]
[-334.79208374 -192.87207031]
[-320.86029053 -187.31285095]
[-306.92846680 -181.75361633]
[-292.99667358 -176.19439697]
[-279.06488037 -170.63516235]
[-266.58746338 -178.72538757]
[-251.56097412 -177.90740967]
[-239.75949097 -168.28565979]
[-235.84120178 -153.38755798]
[-221.90940857 -147.82833862]
[-207.97761536 -142.26910400]
[-194.04580688 -136.70988464]
[-180.11401367 -131.15066528]
[-166.18222046 -125.59143066]
[-152.20941162 -120.13607788]
[-138.19639587 -114.78488922]
[-124.18337250 -109.43370056]
[-110.17034912 -104.08251953]
[-96.15732574 -98.73133087]
[-82.14430237 -93.38014984]
[-68.13127899 -88.02896118]
[-61.83012772 -92.09656525]
[-62.57458496 -107.07807922]
[-49.22781372 -100.23178101]
[-42.92665863 -104.29939270]
[-42.03384399 -119.27279663]
[-41.14102554 -134.24620056]
[-40.24821091 -149.21960449]
[-39.35539627 -164.19300842]
[-38.46257782 -179.16642761]
[-48.67515945 -190.92826843]
[-47.55641556 -206.10070801]
[-36.28036118 -215.76435852]
[-35.38754654 -230.73776245]
[-34.49473190 -245.71116638]
[-33.60191345 -260.68457031]
[-45.67540741 -270.43191528]
[-49.68121719 -285.42300415]
[-44.07902908 -299.89349365]
[-31.02299881 -308.27917480]
[-15.53343487 -307.35559082]
[-3.56639099 -297.47784424]
[0.27655917 -282.44418335]
[-5.48227644 -268.03530884]
[-18.62850952 -259.79174805]
[-19.52132416 -244.81835938]
[-20.41414070 -229.84495544]
[-21.30695534 -214.87153625]
[-11.25914001 -203.93641663]
[-11.95128059 -188.73854065]
[-23.48917389 -178.27360535]
[-24.38198853 -163.30020142]
[-25.27480507 -148.32679749]
[-26.16762161 -133.35339355]
[-27.06043625 -118.37998199]
[-27.95325279 -103.40657806]
[-35.06842804 -83.03977966]
[-49.62946320 -74.45992279]
[-40.31458282 -62.70267487]
[-30.99969864 -50.94542313]
[-21.68481636 -39.18817139]
[-12.36993313 -27.43091965]
[-3.05505037 -15.67366886]
[6.25983238 -3.91641712]
[15.57471561 7.84083414]
[34.02439117 13.62844944]
[36.65835953 33.61406326]
[46.31916809 45.08876038]
[60.43510056 49.84163284]
[63.40427780 65.38172913]
[73.06508636 76.85643005]
[162.28271484 65.34849548]
[177.28228760 65.23683167]
[192.28187561 65.12516022]
[207.28146362 65.01349640]
[222.28105164 64.90183258]
[237.28063965 64.79016113]
[252.28021240 64.67849731]
[267.27981567 64.56682587]
[282.27938843 64.45516205]
[297.27896118 64.34349823]
[312.27856445 64.23182678]
[326.02075195 56.39200592]
[338.80526733 64.03434753]
[353.80484009 63.92267990]
[367.54702759 56.08285904]
[380.33154297 63.72519684]
[395.33114624 63.61352921]
[407.56948853 53.24036407]
[423.28155518 56.48236847]
[430.41436768 70.85255432]
[423.49627686 85.32734680]
[407.83422852 88.80291748]
[395.44281006 78.61311340]
[380.44323730 78.72477722]
[367.77389526 86.55661774]
[353.91650391 78.92226410]
[338.91693115 79.03392792]
[326.24761963 86.86576080]
[312.39022827 79.23141479]
[297.39062500 79.34307861]
[282.39105225 79.45475006]
[267.39147949 79.56641388]
[252.39187622 79.67807770]
[237.39230347 79.78974915]
[222.39271545 79.90141296]
[207.39312744 80.01308441]
[192.39353943 80.12474823]
[177.39396667 80.23641205]
[162.39437866 80.34808350]
[158.56407166 86.79624176]
[150.90348816 99.69257355]
[147.07318115 106.14073944]
[154.15028381 119.36626434]
[161.22738647 132.59179688]
[176.08583069 137.26776123]
[183.07461548 150.78114319]
[178.52522278 164.91757202]
[185.60232544 178.14309692]
[192.67944336 191.36862183]
[199.75654602 204.59416199]
[206.83364868 217.81968689]
[213.91075134 231.04521179]
[229.30029297 233.03060913]
[240.56056213 243.70701599]
[243.36177063 258.96914673]
[236.62678528 272.94842529]
[222.94534302 280.26947021]
[207.57826233 278.11724854]
[196.43446350 267.31930542]
[193.79899597 252.02769470]
[200.68522644 238.12231445]
[193.60812378 224.89678955]
[186.53102112 211.67126465]
[179.45390320 198.44573975]
[172.37680054 185.22019958]
[165.29969788 171.99467468]
[151.01440430 167.93687439]
[143.64880371 154.62512207]
[148.00186157 139.66889954]
[140.92475891 126.44336700]
[133.84765625 113.21784210]
[126.43063354 114.33039856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[12 25]
[13 24]
[14 23]
[26 138]
[27 137]
[29 135]
[30 134]
[34 132]
[35 131]
[36 130]
[37 129]
[38 128]
[39 127]
[40 126]
[41 125]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[100 115]
[101 114]
[102 113]
[103 112]
[139 177]
[140 176]
[141 175]
[142 174]
[143 173]
[144 172]
[145 171]
[146 170]
[147 169]
[148 168]
[149 167]
[151 165]
[152 164]
[154 162]
[155 161]
[180 209]
[181 208]
[182 207]
[185 204]
[186 203]
[187 202]
[188 201]
[189 200]
[190 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
