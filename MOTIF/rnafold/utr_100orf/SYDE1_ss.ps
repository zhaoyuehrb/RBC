%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGGCGCGGGGCGGCGCGGCCGGAGCCCGGGGCGCGCACUCGGCUCGGCCCGGCCCGGGCCGCAGCAUGGCCGAGCCGCUACUCAGGAAAACCUUCUCCCGCCUGCGGGGCCGGGAGAAACUUCCCCGGAAAAAGUCGGACGCCAAGGAGCGCGGCCACCCAGCCC\
) } def
/len { sequence length } bind def

/coor [
[110.12418365 373.49536133]
[108.74822998 358.55859375]
[107.37227631 343.62182617]
[98.26022339 335.62969971]
[97.01184082 323.17037964]
[104.84266663 312.89013672]
[103.74134064 297.93063354]
[95.09046936 285.80578613]
[101.79366302 271.47479248]
[100.69233704 256.51525879]
[99.59101868 241.55575562]
[98.48969269 226.59623718]
[83.84811401 209.57795715]
[93.87221527 188.67021179]
[91.40329742 173.87478638]
[88.93437958 159.07936096]
[86.46545410 144.28395081]
[73.01999664 137.63417053]
[59.76286316 144.65190125]
[46.50573349 151.66963196]
[33.24860382 158.68736267]
[19.99147606 165.70509338]
[11.41465092 178.99977112]
[-3.45370722 178.11592102]
[-16.71083641 185.13365173]
[-18.76522064 200.51412964]
[-29.49202156 211.72640991]
[-44.76656723 214.45915222]
[-58.71548462 207.66154480]
[-65.97512817 193.94743347]
[-63.75401306 178.59013367]
[-52.90621185 167.49487305]
[-37.60292053 164.92799377]
[-23.72856522 171.87652588]
[-10.47143650 164.85879517]
[-2.84284949 152.06605530]
[12.97374725 152.44796753]
[26.23087692 145.43023682]
[39.48800659 138.41250610]
[52.74513626 131.39477539]
[66.00226593 124.37704468]
[61.54650116 113.04563141]
[60.64199066 101.26334381]
[63.16040039 90.08551025]
[68.67572784 80.45356750]
[57.82836533 70.09332275]
[46.98100281 59.73307419]
[36.13363647 49.37282944]
[25.28627586 39.01258087]
[14.43891335 28.65233231]
[3.59155035 18.29208565]
[-7.25581217 7.93183851]
[-18.10317421 -2.42840862]
[-28.95053673 -12.78865623]
[-40.35214996 -22.53561401]
[-52.27339172 -31.63968277]
[-64.19462585 -40.74375153]
[-76.11586761 -49.84782028]
[-92.44013214 -51.41323090]
[-98.99947357 -66.44343567]
[-89.04621124 -79.47664642]
[-72.81940460 -77.10541534]
[-67.01180267 -61.76905823]
[-55.09056091 -52.66498947]
[-43.16932297 -43.56092072]
[-31.24808311 -34.45685196]
[-31.90890884 -49.44229126]
[-21.90587425 -60.61991501]
[-6.93925714 -61.62010574]
[4.46214485 -51.87290192]
[5.80118942 -36.93278885]
[-3.68518424 -25.31346321]
[-18.59029007 -23.63601875]
[-7.74292755 -13.27577114]
[3.10443497 -2.91552401]
[13.95179749 7.44472313]
[24.79916000 17.80496979]
[35.64652252 28.16521835]
[46.49388504 38.52546310]
[57.34124756 48.88571167]
[68.18861389 59.24596024]
[79.03597260 69.60620880]
[84.67079926 65.66901398]
[91.04786682 62.78844452]
[97.96680450 61.10451508]
[105.20089722 60.71886444]
[112.50447083 61.68979645]
[119.62127686 64.02879333]
[126.29344177 67.69863892]
[132.27076721 72.61325836]
[143.84951782 63.07740402]
[155.42826843 53.54154968]
[167.00701904 44.00569153]
[165.82676697 32.13035202]
[170.49443054 21.27783203]
[179.73686218 14.11414242]
[191.17320251 12.33757496]
[201.92771912 16.27723885]
[213.84895325 7.17317009]
[225.77018738 -1.93089855]
[237.69142151 -11.03496742]
[249.61267090 -20.13903618]
[261.53390503 -29.24310493]
[273.45513916 -38.34717178]
[285.37637329 -47.45124054]
[297.21350098 -56.66443253]
[308.96545410 -65.98596954]
[320.71743774 -75.30750275]
[329.36944580 -89.88760376]
[345.77487183 -85.60990143]
[346.20581055 -68.66143036]
[330.03897095 -63.55552673]
[318.28701782 -54.23398972]
[306.53503418 -44.91245270]
[303.23605347 -38.26687241]
[294.48043823 -35.53000259]
[282.55920410 -26.42593384]
[270.63796997 -17.32186508]
[258.71673584 -8.21779633]
[246.79550171 0.88627189]
[234.87425232 9.99034023]
[222.95301819 19.09440804]
[211.03178406 28.19847679]
[209.72494507 46.43030548]
[195.28372192 58.14775467]
[176.54287720 55.58444214]
[164.96412659 65.12030029]
[153.38537598 74.65615082]
[141.80662537 84.19200897]
[144.68229675 98.91378021]
[158.99836731 103.39150238]
[173.31443787 107.86922455]
[187.63050842 112.34694672]
[201.51429749 104.79604340]
[216.64701843 109.35411835]
[224.05072021 123.31695557]
[219.33290100 138.40065002]
[205.29257202 145.65631104]
[190.25959778 140.77928162]
[183.15278625 126.66302490]
[168.83671570 122.18530273]
[154.52064514 117.70758057]
[140.20457458 113.22985840]
[125.18104553 133.71372986]
[101.26087952 141.81503296]
[103.72979736 156.61044312]
[106.19871521 171.40586853]
[108.66763306 186.20127869]
[115.69676971 189.12023926]
[121.21285248 194.26481628]
[124.55295563 200.95147705]
[125.33863831 208.31585693]
[123.51828003 215.42434692]
[119.36762238 221.39245605]
[113.44921112 225.49491882]
[114.55052948 240.45443726]
[115.65185547 255.41394043]
[116.75317383 270.37347412]
[125.48281860 283.56829834]
[118.70085907 296.82931519]
[119.80217743 311.78881836]
[130.50891113 326.74874878]
[122.30903625 342.24588013]
[123.68498993 357.18264771]
[125.06094360 372.11938477]
[137.37295532 382.02847290]
[138.98899841 397.74993896]
[128.95028687 409.95648193]
[113.21263885 411.40621948]
[101.11289978 401.23901367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[6 161]
[7 160]
[9 158]
[10 157]
[11 156]
[12 155]
[14 148]
[15 147]
[16 146]
[17 145]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[24 35]
[25 34]
[45 82]
[46 81]
[47 80]
[48 79]
[49 78]
[50 77]
[51 76]
[52 75]
[53 74]
[54 73]
[55 66]
[56 65]
[57 64]
[58 63]
[90 129]
[91 128]
[92 127]
[93 126]
[98 123]
[99 122]
[100 121]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[106 114]
[107 113]
[108 112]
[130 143]
[131 142]
[132 141]
[133 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
