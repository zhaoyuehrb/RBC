%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGAGCUCGCACCGCCGCGCCCGGGCCGCGAGUGAUGAUAACCUAAGAGGCCGGCGCGGGCGGGCGUGAGCGGCGGAGGAGCCGGGCGCGGCGACACGCGGCCAUGGAGCGGGAGCCGGCGGGGACCGAGGAGCCCGGGCCUCCGGGACGGCGGAGGCGCCGAGAGGGCAGGACGCGCACGGUGCGCUCCAACCUGCUGCCGC\
) } def
/len { sequence length } bind def

/coor [
[-76.39910126 218.82104492]
[-79.56229401 233.48373413]
[-82.72549438 248.14640808]
[-85.88868713 262.80908203]
[-89.05187988 277.47177124]
[-86.48166656 294.22976685]
[-101.87324524 301.33862305]
[-112.96508789 288.51647949]
[-103.71456146 274.30856323]
[-100.55136871 259.64590454]
[-97.38816833 244.98321533]
[-94.22497559 230.32054138]
[-91.06177521 215.65785217]
[-94.28018951 213.47756958]
[-97.12123871 210.82420349]
[-99.51608276 207.76208496]
[-113.92871857 211.91851807]
[-128.34135437 216.07496643]
[-142.75398254 220.23139954]
[-150.13523865 225.61784363]
[-157.41694641 224.33976746]
[-171.89100647 228.27700806]
[-186.36505127 232.21423340]
[-200.83911133 236.15147400]
[-215.31315613 240.08869934]
[-229.78721619 244.02592468]
[-241.07260132 255.11422729]
[-255.38452148 250.98890686]
[-269.85858154 254.92613220]
[-284.33264160 258.86337280]
[-298.77639771 262.91030884]
[-313.18902588 267.06677246]
[-313.24816895 282.17214966]
[-317.56192017 296.64862061]
[-325.78060913 309.32263184]
[-337.23794556 319.16671753]
[-351.00512695 325.38290405]
[-365.96615601 327.46725464]
[-380.90817261 325.25079346]
[-394.61990356 318.91320801]
[-405.98980713 308.96826172]
[-414.09619141 296.22213745]
[-418.28186035 281.70812988]
[-418.20755005 266.60278320]
[-413.87924194 252.13066101]
[-405.64782715 239.46492004]
[-394.18063354 229.63233948]
[-380.40719604 223.43000793]
[-365.44409180 221.36068726]
[-350.50430298 223.59214783]
[-336.79891968 229.94351196]
[-325.43902588 239.89987183]
[-317.34545898 252.65412903]
[-302.93283081 248.49768066]
[-297.37524414 243.62222290]
[-288.26986694 244.38931274]
[-273.79580688 240.45208740]
[-259.32174683 236.51486206]
[-249.07164001 225.70816040]
[-233.72444153 229.55187988]
[-219.25039673 225.61463928]
[-204.77633667 221.67741394]
[-190.30229187 217.74018860]
[-175.82823181 213.80294800]
[-161.35418701 209.86572266]
[-146.91041565 205.81877136]
[-132.49778748 201.66232300]
[-118.08515167 197.50588989]
[-103.67252350 193.34945679]
[-99.38529205 179.46804810]
[-88.00315094 170.18493652]
[-73.22604370 168.74546814]
[-59.98510361 175.80731201]
[-46.66682816 168.90634155]
[-33.34854889 162.00535583]
[-20.03026962 155.10438538]
[-6.71199179 148.20341492]
[6.60628653 141.30242920]
[19.92456436 134.40145874]
[33.19009399 127.39961243]
[46.40210724 120.29731750]
[59.61412048 113.19501495]
[58.30378723 91.84196472]
[67.56505585 72.55729675]
[85.04983521 60.23041153]
[82.33309174 45.47848511]
[79.39278412 30.76948929]
[76.22958374 16.10680962]
[65.75610352 4.24861574]
[70.63548279 -9.82408524]
[67.47229004 -24.48676491]
[64.30908966 -39.14944458]
[61.14589691 -53.81212616]
[47.73104095 -62.16779709]
[44.23508835 -77.58058167]
[52.73212433 -90.90634155]
[68.18100739 -94.23914337]
[81.41618347 -85.60169983]
[84.58547211 -70.11844635]
[75.80857849 -56.97532272]
[78.97177124 -42.31264114]
[82.13497162 -27.64996147]
[85.29816437 -12.98728180]
[95.54539490 -2.17786050]
[90.89226532 12.94361401]
[94.05545807 27.60629463]
[97.51449585 30.90347672]
[98.93703461 36.40968323]
[97.08501434 42.76174545]
[99.80175781 57.51366806]
[107.20677948 58.12889099]
[114.39137268 60.02480698]
[121.13578033 63.14343262]
[130.77758789 51.65276718]
[140.41940308 40.16209793]
[150.06121826 28.67143250]
[148.87174988 13.14008141]
[158.81359863 1.62426233]
[173.62770081 0.58599204]
[183.26951599 -10.90467453]
[182.92526245 -23.80030632]
[191.19512939 -33.17278671]
[203.23551941 -34.35726547]
[213.05061340 -45.70028305]
[222.86570740 -57.04330063]
[228.65762329 -72.97722626]
[245.57220459 -71.82260895]
[249.14512634 -55.24942398]
[234.20872498 -47.22821045]
[224.39363098 -35.88519287]
[214.57853699 -24.54217720]
[212.20439148 -7.15587568]
[194.76017761 -1.26286042]
[185.11836243 10.22780609]
[186.66831970 24.99714088]
[177.05383301 36.78766251]
[161.55187988 38.31324768]
[151.91006470 49.80391312]
[142.26826477 61.29458237]
[132.62644958 72.78524780]
[139.06410217 77.28977966]
[144.84909058 83.22155762]
[159.75202942 81.51785278]
[174.65496826 79.81414795]
[189.55789185 78.11045074]
[204.46083069 76.40674591]
[219.36375427 74.70304108]
[234.26669312 72.99933624]
[243.90295410 60.47264862]
[259.58511353 58.51168442]
[272.00921631 68.27984619]
[273.80429077 83.98186493]
[263.90530396 96.30200958]
[248.18518066 97.93094635]
[235.97039795 87.90226746]
[221.06745911 89.60597229]
[206.16453552 91.30967712]
[191.26159668 93.01338196]
[176.35865784 94.71707916]
[161.45573425 96.42078400]
[146.55279541 98.12448883]
[144.73605347 113.01406097]
[158.79211426 118.25117493]
[172.84815979 123.48828888]
[187.97817993 118.15330505]
[201.50573730 126.77796173]
[203.05364990 142.74615479]
[191.43449402 153.80847168]
[175.56149292 151.47883606]
[167.61105347 137.54434204]
[153.55499268 132.30723572]
[139.49894714 127.07011414]
[136.23187256 127.00016785]
[133.03570557 126.71647644]
[142.85078430 138.05949402]
[152.66587830 149.40251160]
[160.65029907 153.84611511]
[162.54226685 160.99295044]
[172.18406677 172.48361206]
[181.82588196 183.97428894]
[191.46769714 195.46495056]
[201.10951233 206.95561218]
[215.92248535 215.20259094]
[212.09844971 231.71963501]
[195.16828918 232.61743164]
[189.61885071 216.59742737]
[179.97703552 205.10676575]
[170.33522034 193.61610413]
[160.69340515 182.12542725]
[151.05158997 170.63476562]
[141.32286072 159.21759033]
[131.50776672 147.87457275]
[121.69268799 136.53155518]
[102.42906952 142.41729736]
[82.61948395 138.76913452]
[66.71642303 126.40702820]
[53.50440979 133.50932312]
[40.29239273 140.61163330]
[34.21302032 147.43348694]
[26.82554054 147.71974182]
[13.50726223 154.62071228]
[0.18898395 161.52168274]
[-13.12929440 168.42266846]
[-26.44757271 175.32363892]
[-39.76585007 182.22460938]
[-53.08412933 189.12559509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[5 9]
[16 69]
[17 68]
[18 67]
[19 66]
[21 65]
[22 64]
[23 63]
[24 62]
[25 61]
[26 60]
[28 58]
[29 57]
[30 56]
[31 54]
[32 53]
[73 206]
[74 205]
[75 204]
[76 203]
[77 202]
[78 201]
[79 200]
[80 198]
[81 197]
[82 196]
[85 110]
[86 109]
[87 106]
[88 105]
[90 103]
[91 102]
[92 101]
[93 100]
[113 140]
[114 139]
[115 138]
[116 137]
[119 134]
[120 133]
[123 131]
[124 130]
[125 129]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[162 172]
[163 171]
[164 170]
[174 193]
[175 192]
[176 191]
[178 190]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
