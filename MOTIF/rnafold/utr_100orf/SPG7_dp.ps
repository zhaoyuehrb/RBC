%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPG7)
} def

/sequence { (\
GGAUCACGCAGGCGCGGCUUUCAGGCCAACAUGGCCGUGCUGCUGCUGCUGCUCCGUGCCCUCCGCCGGGGUCCAGGCCCGGGUCCUCGGCCGCUGUGGGGCCCAGGCCCGGCCUGGAGUCCAGGGUUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 54 0.005017429 ubox
1 55 0.986951876 ubox
1 60 0.015409590 ubox
1 61 0.026748145 ubox
1 62 0.007211971 ubox
1 64 0.132838604 ubox
1 122 0.028415605 ubox
1 129 0.014590847 ubox
1 130 0.037649112 ubox
2 52 0.003515209 ubox
2 53 0.004524955 ubox
2 54 0.987681633 ubox
2 59 0.015433706 ubox
2 60 0.026739267 ubox
2 61 0.008744950 ubox
2 63 0.132933982 ubox
2 121 0.028435800 ubox
2 128 0.014664470 ubox
2 129 0.038078879 ubox
3 53 0.974417077 ubox
3 57 0.011376188 ubox
3 62 0.131948134 ubox
3 120 0.028181455 ubox
3 127 0.014897014 ubox
3 128 0.035431836 ubox
4 56 0.011331051 ubox
4 119 0.026988126 ubox
4 126 0.015048526 ubox
5 51 0.952449622 ubox
5 58 0.138475723 ubox
5 125 0.014764943 ubox
6 50 0.948132620 ubox
6 57 0.139159099 ubox
6 127 0.003706052 ubox
7 48 0.006524388 ubox
7 51 0.052332234 ubox
7 56 0.139075116 ubox
7 58 0.003991828 ubox
7 126 0.003859587 ubox
8 46 0.008506963 ubox
8 49 0.962665307 ubox
8 50 0.011394640 ubox
8 52 0.259473034 ubox
8 55 0.070875523 ubox
8 57 0.003211050 ubox
9 45 0.008604758 ubox
9 48 0.962969423 ubox
9 51 0.264924852 ubox
9 56 0.003190068 ubox
10 44 0.008516571 ubox
10 47 0.959474644 ubox
10 50 0.263967857 ubox
10 53 0.023330417 ubox
11 41 0.004175904 ubox
11 43 0.007358725 ubox
11 46 0.949595310 ubox
11 47 0.079460363 ubox
11 49 0.261066364 ubox
11 50 0.044438454 ubox
11 52 0.022494958 ubox
11 53 0.012696224 ubox
12 40 0.009960007 ubox
12 46 0.161256558 ubox
12 49 0.060733239 ubox
12 52 0.013534755 ubox
13 39 0.010037988 ubox
13 45 0.211692404 ubox
13 48 0.071418032 ubox
13 51 0.013765209 ubox
14 38 0.010039422 ubox
14 43 0.962037767 ubox
14 44 0.044453944 ubox
14 46 0.267103233 ubox
14 47 0.014968411 ubox
14 49 0.019365519 ubox
15 37 0.010043943 ubox
15 42 0.963190276 ubox
15 45 0.267724978 ubox
15 48 0.019535992 ubox
16 36 0.010028895 ubox
16 41 0.962493877 ubox
16 44 0.267550014 ubox
16 47 0.019496484 ubox
17 35 0.010025568 ubox
17 40 0.963212306 ubox
17 43 0.267759095 ubox
17 46 0.019502934 ubox
18 34 0.010014356 ubox
18 39 0.962284447 ubox
18 42 0.267591017 ubox
18 45 0.019489118 ubox
19 33 0.009508147 ubox
22 39 0.117804607 ubox
22 42 0.004185936 ubox
23 38 0.126888053 ubox
23 41 0.004243667 ubox
24 36 0.999632977 ubox
25 35 0.999943463 ubox
26 34 0.999943791 ubox
27 33 0.999719282 ubox
28 32 0.810206110 ubox
51 59 0.007455044 ubox
51 72 0.019584723 ubox
52 58 0.007584889 ubox
52 71 0.029066564 ubox
53 70 0.029929313 ubox
54 69 0.030884022 ubox
55 68 0.031005151 ubox
56 64 0.005295672 ubox
56 66 0.016108030 ubox
56 67 0.033406799 ubox
56 127 0.009262786 ubox
57 65 0.016732568 ubox
58 64 0.017199487 ubox
58 66 0.035230365 ubox
58 127 0.936481622 ubox
59 65 0.035406255 ubox
59 71 0.004740880 ubox
59 126 0.983924369 ubox
60 70 0.004752534 ubox
60 125 0.984318202 ubox
60 126 0.013537520 ubox
61 69 0.004748332 ubox
61 124 0.984268092 ubox
61 125 0.013451558 ubox
61 126 0.016305295 ubox
62 68 0.004394626 ubox
62 71 0.005330930 ubox
62 123 0.978122960 ubox
62 124 0.012203617 ubox
62 125 0.008185097 ubox
62 126 0.041406753 ubox
63 68 0.006221198 ubox
63 69 0.006472145 ubox
63 70 0.013051208 ubox
63 71 0.005661577 ubox
63 124 0.009316635 ubox
63 125 0.054784895 ubox
63 126 0.024308673 ubox
64 68 0.006998546 ubox
64 69 0.013295741 ubox
64 70 0.005703942 ubox
64 124 0.055134420 ubox
64 125 0.024207671 ubox
65 120 0.008924883 ubox
65 127 0.104124832 ubox
66 119 0.009013605 ubox
66 125 0.115354532 ubox
66 126 0.107637670 ubox
67 124 0.116804618 ubox
67 125 0.106223799 ubox
68 121 0.003698722 ubox
68 122 0.995993576 ubox
69 121 0.996364960 ubox
69 122 0.074862966 ubox
70 120 0.984699650 ubox
70 121 0.075007976 ubox
70 122 0.015516163 ubox
71 120 0.068680842 ubox
71 121 0.015545988 ubox
72 118 0.998835601 ubox
72 119 0.004235768 ubox
73 117 0.999989480 ubox
74 116 0.999987483 ubox
75 115 0.999754309 ubox
76 114 0.999985635 ubox
77 113 0.999958037 ubox
78 112 0.816633859 ubox
79 111 0.577565257 ubox
79 112 0.577088793 ubox
80 111 0.816108540 ubox
81 109 0.012257030 ubox
81 110 0.999654442 ubox
82 108 0.011614653 ubox
82 109 0.999842572 ubox
82 110 0.011824412 ubox
83 108 0.999751179 ubox
83 109 0.012193047 ubox
84 107 0.208147298 ubox
85 106 0.175730862 ubox
85 107 0.977966246 ubox
86 106 0.984138642 ubox
87 105 0.978593408 ubox
89 103 0.998120210 ubox
89 104 0.046460948 ubox
90 102 0.999379770 ubox
90 103 0.034493599 ubox
91 99 0.005758437 ubox
91 100 0.074621822 ubox
91 101 0.997095808 ubox
92 98 0.008151533 ubox
92 99 0.105169384 ubox
92 100 0.994174230 ubox
93 97 0.011835311 ubox
93 102 0.013049203 ubox
94 100 0.006714100 ubox
94 101 0.013133268 ubox
95 99 0.012221424 ubox
95 100 0.012987235 ubox
124 130 0.009492782 ubox
125 129 0.009424601 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 47 0.9500000 lbox
11 46 0.9500000 lbox
14 43 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
24 36 0.9500000 lbox
25 35 0.9500000 lbox
26 34 0.9500000 lbox
27 33 0.9500000 lbox
28 32 0.9500000 lbox
58 127 0.9500000 lbox
59 126 0.9500000 lbox
60 125 0.9500000 lbox
61 124 0.9500000 lbox
62 123 0.9500000 lbox
68 122 0.9500000 lbox
69 121 0.9500000 lbox
70 120 0.9500000 lbox
72 118 0.9500000 lbox
73 117 0.9500000 lbox
74 116 0.9500000 lbox
75 115 0.9500000 lbox
76 114 0.9500000 lbox
77 113 0.9500000 lbox
78 112 0.9500000 lbox
79 111 0.9500000 lbox
81 110 0.9500000 lbox
82 109 0.9500000 lbox
83 108 0.9500000 lbox
85 107 0.9500000 lbox
86 106 0.9500000 lbox
87 105 0.9500000 lbox
89 103 0.9500000 lbox
90 102 0.9500000 lbox
91 101 0.9500000 lbox
92 100 0.9500000 lbox
showpage
end
%%EOF
