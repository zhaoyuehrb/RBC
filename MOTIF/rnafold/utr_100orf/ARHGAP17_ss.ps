%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCGGGGAGCCACCGCCGCGCCGCCGUUUGGGCCGGGAAGCGAUGUAGUAGCUGCCAGGCUGUCCCCCGCCCUGCCCGGCCCGAGCCCCGCGGGCCGCCGCCGCCACCGCCGCCAUGAAGAAGCAGUUCAACCGCAUGAAGCAGCUGGCUAACCAGACCGUGGGCAGAGCUGAGAAAACAGAAGUCCUUAGUGAAGAUCUAUUACAGAUUGAGA\
) } def
/len { sequence length } bind def

/coor [
[36.40855408 116.82596588]
[34.24946976 98.03712463]
[19.40495872 95.88294983]
[4.56044579 93.72877502]
[-6.28392601 104.66979218]
[-21.31563759 107.09899902]
[-34.73669434 100.29170990]
[-41.49493790 87.04541779]
[-56.33945084 84.89124298]
[-68.92175293 94.07402039]
[-83.94551086 91.67792511]
[-92.62234497 79.62602997]
[-107.46685791 77.47185516]
[-117.01796722 89.41855621]
[-131.17301941 94.94404602]
[-146.09411621 92.65766907]
[-157.78913879 83.27245331]
[-163.17990112 69.38701630]
[-178.02441406 67.23284912]
[-192.79270935 72.90808105]
[-204.27688599 63.42319870]
[-219.12139893 61.26902771]
[-228.05815125 63.13302231]
[-234.16369629 58.97536850]
[-248.97561646 56.60750198]
[-263.78753662 54.23963547]
[-278.59948730 51.87177277]
[-297.09057617 59.90785217]
[-311.55023193 47.06566238]
[-326.42425537 45.12563324]
[-341.29824829 43.18560028]
[-356.17227173 41.24556732]
[-371.04629517 39.30553436]
[-385.92028809 37.36550522]
[-400.79431152 35.42547226]
[-415.66833496 33.48543930]
[-430.54232788 31.54540825]
[-445.41635132 29.60537720]
[-460.29037476 27.66534424]
[-475.16436768 25.72531319]
[-489.73431396 37.84080887]
[-508.21539307 35.49399185]
[-518.92089844 20.63982201]
[-533.84460449 19.12923431]
[-548.76837158 17.61864662]
[-555.68444824 29.94085121]
[-566.74047852 38.67068481]
[-580.24749756 42.51649857]
[-594.15771484 40.92960358]
[-606.37561035 34.18229294]
[-615.07312012 23.32181358]
[-618.96325684 10.00792313]
[-633.86364746 8.28243446]
[-648.76409912 6.55694532]
[-663.66455078 4.83145666]
[-678.56494141 3.10596800]
[-693.39294434 10.11046696]
[-706.71704102 0.55016440]
[-704.83062744 -15.74012089]
[-689.67419434 -22.00234032]
[-676.83947754 -11.79445744]
[-661.93902588 -10.06896877]
[-647.03863525 -8.34348011]
[-632.13818359 -6.61799145]
[-617.23773193 -4.89250278]
[-608.95263672 -18.55940056]
[-595.48724365 -27.27567101]
[-579.51062012 -29.25307846]
[-564.21630859 -24.04522324]
[-552.68353271 -12.64702511]
[-547.25775146 2.69490385]
[-532.33404541 4.20549107]
[-517.41027832 5.71607876]
[-510.34954834 -3.23788023]
[-499.73428345 -7.72013521]
[-488.15457153 -6.51154709]
[-478.49682617 0.20285267]
[-473.22436523 10.85129929]
[-458.35034180 12.79133129]
[-443.47631836 14.73136330]
[-428.60229492 16.67139435]
[-413.72830200 18.61142731]
[-398.85427856 20.55145836]
[-383.98025513 22.49149132]
[-369.10626221 24.43152237]
[-354.23223877 26.37155342]
[-339.35821533 28.31158638]
[-324.48422241 30.25161743]
[-309.61019897 32.19165039]
[-302.10949707 25.26185799]
[-291.81683350 23.56623268]
[-282.08847046 27.90218925]
[-276.23159790 37.05984497]
[-261.41967773 39.42770767]
[-246.60775757 41.79557419]
[-231.79582214 44.16343689]
[-216.96722412 46.42451477]
[-202.12271118 48.57868958]
[-188.41619873 42.74937439]
[-175.87023926 52.38833237]
[-161.02572632 54.54250336]
[-151.91046143 42.76212692]
[-138.03012085 37.08829117]
[-123.07461548 39.13748169]
[-111.07402802 48.45856857]
[-105.31269073 62.62734222]
[-90.46817780 64.78151703]
[-78.72354889 55.69309616]
[-63.63841629 57.66626740]
[-54.18527985 70.04673767]
[-39.34076691 72.20090485]
[-29.09609032 61.42200851]
[-14.29368973 58.71038437]
[-0.57250464 65.31208801]
[6.71461773 78.88426971]
[21.55912971 81.03843689]
[36.40364075 83.19261169]
[42.24891281 68.50719452]
[51.42857361 55.64009094]
[63.41262436 45.33420563]
[77.50913239 38.18458176]
[92.90419769 34.60401535]
[108.70896149 34.79924011]
[124.01088715 38.75898361]
[137.92649841 46.25461960]
[149.65232849 56.85337067]
[158.51136780 69.94329071]
[172.54837036 64.65532684]
[186.58537292 59.36736298]
[200.62236023 54.07939911]
[214.65936279 48.79143143]
[228.69636536 43.50346756]
[235.27407837 29.38357162]
[249.58493042 24.22078514]
[263.00555420 30.57864380]
[277.04257202 25.29067802]
[283.96563721 19.33994865]
[291.32012939 20.02924919]
[305.43188477 14.94411182]
[319.54360962 9.85897541]
[333.65536499 4.77383947]
[335.06469727 -4.81346464]
[339.83779907 -13.18017960]
[347.28347778 -19.19971657]
[356.35409546 -22.07926750]
[365.79293823 -21.46404839]
[374.30816650 -17.48045921]
[380.74981689 -10.71298790]
[395.13110352 -14.97667217]
[409.51239014 -19.24035645]
[423.89364624 -23.50404167]
[434.78048706 -35.76815796]
[450.78839111 -32.20732498]
[455.44976807 -16.48461723]
[443.96942139 -4.77421141]
[428.15734863 -9.12276936]
[413.77606201 -4.85908461]
[399.39477539 -0.59540015]
[385.01351929 3.66828442]
[376.79946899 22.38985634]
[357.15747070 29.04403114]
[338.74050903 18.88558578]
[324.62875366 23.97072220]
[310.51699829 29.05585861]
[296.40527344 34.14099503]
[282.33053589 39.32767868]
[268.29351807 44.61564636]
[262.40356445 58.24811172]
[248.24337769 63.81082153]
[233.98432922 57.54047012]
[219.94734192 62.82843399]
[205.91033936 68.11640167]
[191.87333679 73.40436554]
[177.83633423 78.69232941]
[163.79933167 83.98029327]
[165.13893127 90.84002686]
[165.74313354 97.80316925]
[165.60510254 104.79111481]
[164.72642517 111.72496796]
[163.11700439 118.52645111]
[160.79499817 125.11877441]
[157.78665161 131.42752075]
[154.12590027 137.38145447]
[149.85408020 142.91336060]
[145.01942444 147.96078491]
[139.67651367 152.46675110]
[147.30096436 165.38447571]
[154.92541504 178.30220032]
[162.54986572 191.21992493]
[177.59100342 195.26991272]
[185.13926697 208.47892761]
[181.18553162 222.79339600]
[188.80998230 235.71112061]
[196.43444824 248.62884521]
[204.05889893 261.54656982]
[211.68334961 274.46429443]
[227.04833984 278.16470337]
[235.22505188 291.68936157]
[231.36241150 307.01437378]
[217.75204468 315.04763794]
[202.46873474 311.02319336]
[194.57981873 297.32864380]
[198.76562500 282.08874512]
[191.14117432 269.17102051]
[183.51672363 256.25329590]
[175.89225769 243.33557129]
[168.26780701 230.41784668]
[153.82518005 226.96150208]
[145.90888977 213.96969604]
[149.63214111 198.84439087]
[142.00769043 185.92666626]
[134.38323975 173.00892639]
[126.75878143 160.09120178]
[108.55530548 165.22109985]
[89.64462280 164.95960999]
[71.58994293 159.32835388]
[55.88373184 148.79283142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 117]
[3 116]
[4 115]
[8 111]
[9 110]
[12 107]
[13 106]
[18 101]
[19 100]
[21 98]
[22 97]
[24 96]
[25 95]
[26 94]
[27 93]
[29 89]
[30 88]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[36 82]
[37 81]
[38 80]
[39 79]
[40 78]
[43 73]
[44 72]
[45 71]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[127 175]
[128 174]
[129 173]
[130 172]
[131 171]
[132 170]
[135 167]
[136 166]
[138 165]
[139 164]
[140 163]
[141 162]
[148 159]
[149 158]
[150 157]
[151 156]
[186 213]
[187 212]
[188 211]
[189 210]
[192 207]
[193 206]
[194 205]
[195 204]
[196 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
