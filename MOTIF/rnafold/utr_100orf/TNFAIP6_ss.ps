%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCACAUUUCAGCCACUGCUCUGAGAAUUUGUGAGCAGCCCCUAACAGGCUGUUACUUCACUACAACUGACGAUAUGAUCAUCUUAAUUUACUUAUUUCUCUUGCUAUGGGAAGACACUCAAGGAUGGGGAUUCAAGGAUGGAAUUUUUCAUAACUCCAUAUGGCUUGAACGAG\
) } def
/len { sequence length } bind def

/coor [
[92.86360931 335.53997803]
[77.77999878 337.63873291]
[63.14860535 333.41473389]
[51.50439835 323.59982300]
[44.86481094 309.89450073]
[44.38018799 294.67330933]
[50.13449860 280.57339478]
[61.13076782 270.03762817]
[75.46382904 264.89144897]
[76.53392029 249.92967224]
[77.60400391 234.96788025]
[78.67409515 220.00610352]
[79.61060333 205.03536987]
[80.41347504 190.05686951]
[81.21633911 175.07836914]
[82.01920319 160.09986877]
[68.26567078 154.11317444]
[57.85007858 164.90740967]
[58.38272476 180.70271301]
[47.52951050 192.19111633]
[31.72945213 192.55673218]
[20.35644341 181.58267212]
[20.15789032 165.77963257]
[31.25159073 154.52328491]
[47.05584717 154.49182129]
[57.47144318 143.69758606]
[52.71656418 137.45465088]
[48.85265732 130.72134399]
[45.92606354 123.62200928]
[43.96608734 116.28466797]
[42.98484802 108.83871460]
[42.97740936 101.41265869]
[28.06335258 99.80922699]
[13.14929867 98.20580292]
[-1.76475608 96.60237885]
[-16.72653770 95.53228760]
[-31.71697998 94.99690247]
[-46.70742416 94.46151733]
[-61.69786453 93.92613220]
[-76.68830872 93.39074707]
[-91.67874908 92.85536194]
[-102.01648712 104.58844757]
[-117.48519897 106.88040924]
[-130.78102112 98.64906311]
[-135.62608337 83.78099823]
[-129.73269653 69.29645538]
[-115.88352203 62.03459930]
[-100.61773682 65.42424774]
[-91.14336395 77.86492157]
[-76.15292358 78.40030670]
[-61.16247940 78.93569183]
[-46.17203903 79.47107697]
[-31.18159485 80.00646210]
[-16.19115257 80.54184723]
[-14.03844929 78.69866180]
[-11.01428318 77.61140442]
[-7.40814543 77.62073517]
[-3.62888169 78.95432281]
[-0.16132928 81.68832397]
[14.75272560 83.29174805]
[29.66678047 84.89517212]
[44.58083344 86.49860382]
[46.22282791 80.98455048]
[48.41193008 75.66396332]
[51.12587738 70.59095764]
[54.33705521 65.81714630]
[58.01279831 61.39110947]
[62.11570358 57.35786438]
[66.60403442 53.75844955]
[71.43212128 50.62948227]
[65.69187164 36.77128983]
[53.26243973 26.98253059]
[55.54025650 12.26312733]
[49.80000305 -1.59506571]
[44.05975342 -15.45325851]
[32.41228867 -27.77287483]
[41.02611160 -42.37556076]
[57.44266129 -38.14079285]
[57.91794586 -21.19351006]
[63.65819931 -7.33531713]
[69.39844513 6.52287579]
[81.41729736 15.32040501]
[79.55006409 31.03103828]
[85.29031372 44.88923264]
[92.18627930 43.49763489]
[99.20110321 42.96550751]
[106.22808075 43.30094528]
[113.16032410 44.49885178]
[119.89237976 46.54099655]
[126.32184601 49.39632416]
[132.35092163 53.02139282]
[137.88790894 57.36106873]
[142.84855652 62.34933472]
[155.32060242 54.01578140]
[167.79264832 45.68222809]
[168.52877808 30.29508018]
[178.07263184 18.43050385]
[192.60092163 14.50712299]
[206.48741150 19.82721710]
[218.95944214 11.49366474]
[231.43148804 3.16011095]
[243.90353394 -5.17344236]
[256.37557983 -13.50699615]
[259.57974243 -28.75071907]
[272.34689331 -37.02445602]
[286.85971069 -33.87583542]
[299.33175659 -42.20938873]
[306.50756836 -56.30968094]
[321.38851929 -56.94724655]
[333.86056519 -65.28079987]
[346.33261108 -73.61434937]
[358.80462646 -81.94790649]
[361.64169312 -97.49546814]
[374.68893433 -106.41429901]
[390.20562744 -103.41302490]
[398.98602295 -90.27223969]
[395.82086182 -74.78813934]
[382.58795166 -66.14717102]
[367.13818359 -69.47586060]
[354.66613770 -61.14230728]
[342.19409180 -52.80875397]
[329.72207642 -44.47520065]
[323.43832397 -30.97097778]
[307.66531372 -29.73734283]
[295.19326782 -21.40378952]
[292.54840088 -6.79077196]
[280.01867676 1.83830535]
[264.70913696 -1.03495181]
[252.23709106 7.29860163]
[239.76504517 15.63215542]
[227.29299927 23.96570778]
[214.82095337 32.29926300]
[214.42195129 47.16461945]
[205.23748779 59.08559036]
[190.62377930 63.36258698]
[176.12620544 58.15427017]
[163.65415955 66.48782349]
[151.18211365 74.82138062]
[157.00373840 102.03589630]
[149.25547791 128.76576233]
[161.10124207 137.96781921]
[172.94700623 147.16989136]
[184.79275513 156.37196350]
[196.63851929 165.57402039]
[212.28335571 167.92974854]
[217.58769226 181.84783936]
[229.43345642 191.04991150]
[245.08132935 188.83186340]
[257.66406250 198.39485168]
[259.71652222 214.06529236]
[250.02105713 226.54621887]
[234.32978821 228.43289185]
[221.95207214 218.60600281]
[220.23138428 202.89566040]
[208.38563538 193.69360352]
[193.58807373 191.99606323]
[187.43644714 177.41978455]
[175.59069824 168.21771240]
[163.74493408 159.01565552]
[151.89916992 149.81358337]
[140.05342102 140.61151123]
[121.04158020 155.12931824]
[96.99769592 160.90274048]
[96.19483185 175.88124084]
[95.39196777 190.85972595]
[94.58910370 205.83822632]
[97.26110077 214.60774231]
[93.63587189 221.07618713]
[92.56578827 236.03797913]
[91.49569702 250.99975586]
[90.42561340 265.96154785]
[103.88040161 273.09515381]
[113.26535797 285.08859253]
[116.95446777 299.86392212]
[114.30857849 314.86123657]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 171]
[10 170]
[11 169]
[12 168]
[13 166]
[14 165]
[15 164]
[16 163]
[17 26]
[18 25]
[32 62]
[33 61]
[34 60]
[35 59]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[70 84]
[71 83]
[73 81]
[74 80]
[75 79]
[93 138]
[94 137]
[95 136]
[99 132]
[100 131]
[101 130]
[102 129]
[103 128]
[106 125]
[107 124]
[109 122]
[110 121]
[111 120]
[112 119]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
