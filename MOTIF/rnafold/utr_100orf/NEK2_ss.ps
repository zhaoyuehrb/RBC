%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGACGGUUAAACGGGGCCCAAGGCAGGGGUGGCGGGUCAGUGCUGCUCGGGGGCUUCUCCAUCCAGGUCCCUGGAGUUCCUGGUCCCUGGAGCUCCGCACUUGGCGGCGCAACCUGCGUGAGGCAGCGCGACUCUGGCGACUGGCCGGCCAUGCCUUCCCGGGCUGAGGACUAUGAAGUGUUGUACACCAUUGGCACAGGCUCCUACGGCCGCUGCCAGAAGAUCCGGAGGAAGAGUGAUGGCAAGAUAU\
) } def
/len { sequence length } bind def

/coor [
[594.42987061 514.27648926]
[583.43408203 504.07388306]
[572.43835449 493.87130737]
[561.44256592 483.66870117]
[550.44677734 473.46612549]
[539.45098877 463.26351929]
[524.85852051 460.27862549]
[520.00500488 445.22027588]
[509.00921631 435.01770020]
[492.88943481 443.12310791]
[474.85769653 444.40164185]
[457.69082642 438.63006592]
[444.04257202 426.67288208]
[436.03338623 410.35290527]
[434.92105103 392.17343140]
[440.90319824 374.93426514]
[429.41253662 365.29244995]
[417.92184448 355.65063477]
[406.43118286 346.00881958]
[394.94052124 336.36700439]
[382.88357544 337.11218262]
[373.23468018 329.19644165]
[371.50015259 316.43289185]
[360.13058472 306.64859009]
[345.43670654 304.21139526]
[340.02352905 289.34506226]
[328.65393066 279.56076050]
[317.28436279 269.77645874]
[302.59051514 267.33926392]
[297.17730713 252.47293091]
[285.80773926 242.68861389]
[274.43817139 232.90431213]
[263.06860352 223.11999512]
[251.69902039 213.33567810]
[237.00515747 210.89849854]
[231.59196472 196.03216553]
[220.22238159 186.24784851]
[208.85281372 176.46354675]
[197.48323059 166.67922974]
[186.11366272 156.89492798]
[174.74407959 147.11061096]
[163.37451172 137.32629395]
[151.94416809 127.61304474]
[140.45349121 117.97123718]
[128.96282959 108.32942200]
[67.52816772 133.35289001]
[52.75605392 130.74816895]
[37.98393631 128.14344788]
[23.21182060 125.53872681]
[8.42375565 123.02613068]
[-6.37968349 120.60576630]
[-21.18312263 118.18540192]
[-35.98656464 115.76502991]
[-50.79000092 113.34466553]
[-65.59344482 110.92430115]
[-80.39688110 108.50393677]
[-88.44619751 121.36800385]
[-100.77417755 130.14660645]
[-115.48416901 133.52740479]
[-130.32763672 131.02554321]
[-143.04782104 123.05300140]
[-151.72293091 110.85103607]
[-155.05638123 96.29708862]
[-169.85981750 93.87671661]
[-184.66325378 91.45635223]
[-199.46669006 89.03598785]
[-214.27014160 86.61562347]
[-229.40943909 92.91908264]
[-242.27194214 82.74617767]
[-239.62580872 66.56192780]
[-224.19316101 61.01529312]
[-211.84976196 71.81217957]
[-197.04632568 74.23254395]
[-182.24288940 76.65291595]
[-167.43945312 79.07328033]
[-152.63601685 81.49364471]
[-144.84091187 68.75921631]
[-132.73136902 59.95554733]
[-118.13440704 56.44936371]
[-103.26707458 58.80523300]
[-90.39981079 66.69491577]
[-81.50965118 78.94269562]
[-77.97651672 93.70049286]
[-63.17307663 96.12085724]
[-48.36963654 98.54122925]
[-33.56619644 100.96159363]
[-18.76275635 103.38195801]
[-3.95931721 105.80232239]
[10.84412289 108.22269440]
[17.93351555 106.20570374]
[25.81654358 110.76660919]
[40.58866119 113.37133026]
[55.36077499 115.97605133]
[70.13289642 118.58078003]
[74.20198822 112.28058624]
[86.40927887 93.37999725]
[77.95948029 80.98641968]
[69.50968170 68.59283447]
[61.05987930 56.19925308]
[45.62726974 51.81586456]
[39.56542587 36.96212387]
[47.52447891 23.03254890]
[63.39892197 20.71272087]
[75.01124573 31.78220940]
[73.45346069 47.74945450]
[81.90325928 60.14303589]
[90.35305786 72.53661346]
[98.80286407 84.93019867]
[112.76596832 79.45008087]
[110.53033447 64.61762238]
[108.29470062 49.78516006]
[99.21090698 43.86322784]
[94.95971680 34.12643051]
[96.71774292 23.87085724]
[103.67010498 16.42652893]
[101.80494690 1.54294014]
[99.93978882 -13.34064770]
[98.07463837 -28.22423553]
[86.34133911 -39.16541290]
[87.72351837 -55.14881516]
[101.16087341 -63.91334534]
[116.34542084 -58.73560333]
[121.62887573 -43.58751297]
[112.95822144 -30.08939171]
[114.82337952 -15.20580387]
[116.68853760 -0.32221550]
[118.55368805 14.56137276]
[131.31393433 29.10958099]
[123.12716675 47.54952621]
[125.36280060 62.38198853]
[127.59843445 77.21444702]
[135.49119568 64.45889282]
[150.23207092 61.68284225]
[162.22395325 70.69366455]
[163.65945435 85.62481689]
[153.60400391 96.75530243]
[138.60464478 96.83875275]
[150.09530640 106.48056793]
[161.58598328 116.12238312]
[170.14694214 119.22943878]
[173.15881348 125.95672607]
[184.52839661 135.74102783]
[195.89796448 145.52534485]
[207.26754761 155.30966187]
[218.63711548 165.09396362]
[230.00669861 174.87828064]
[241.37626648 184.66259766]
[256.88336182 187.79960632]
[261.48333740 201.96611023]
[272.85290527 211.75041199]
[284.22247314 221.53472900]
[295.59204102 231.31904602]
[306.96163940 241.10334778]
[322.46871948 244.24037170]
[327.06869507 258.40686035]
[338.43826294 268.19119263]
[349.80783081 277.97549438]
[365.31491089 281.11251831]
[369.91488647 295.27902222]
[381.28445435 305.06332397]
[399.46234131 308.07910156]
[404.58233643 324.87634277]
[416.07299805 334.51815796]
[427.56365967 344.15997314]
[439.05435181 353.80178833]
[450.54501343 363.44360352]
[460.67547607 356.86453247]
[472.14505005 353.12121582]
[484.17745972 352.45916748]
[495.96032715 354.91571045]
[506.70010376 360.31781006]
[515.67535400 368.29434204]
[522.28533936 378.30148315]
[526.09027100 389.65991211]
[526.84027100 401.60076904]
[524.49224854 413.31784058]
[519.21179199 424.02191162]
[530.20758057 434.22451782]
[545.58654785 437.93917847]
[549.65356445 452.26776123]
[560.64935303 462.47033691]
[571.64514160 472.67294312]
[582.64093018 482.87551880]
[593.63671875 493.07812500]
[604.63250732 503.28070068]
[625.31036377 497.74703979]
[644.97521973 505.85122681]
[655.61303711 524.11175537]
[652.99737549 544.94512939]
[664.72485352 554.29748535]
[676.45233154 563.64984131]
[688.17980957 573.00213623]
[699.90728760 582.35449219]
[743.99029541 566.21520996]
[757.66290283 572.38452148]
[771.33551025 578.55383301]
[785.00805664 584.72314453]
[799.63677979 579.37158203]
[813.41485596 585.82293701]
[818.42657471 599.80212402]
[832.09912109 605.97143555]
[845.77172852 612.14074707]
[859.44433594 618.31005859]
[874.89849854 614.00323486]
[887.81628418 623.51696777]
[888.28826904 639.55303955]
[875.95239258 649.81005859]
[860.27166748 646.41961670]
[853.27502441 631.98266602]
[839.60241699 625.81335449]
[825.92987061 619.64404297]
[812.25726318 613.47473145]
[798.45971680 618.96685791]
[784.50585938 612.90509033]
[778.83874512 598.39575195]
[765.16619873 592.22644043]
[751.49359131 586.05712891]
[737.82098389 579.88781738]
[732.92883301 585.57257080]
[744.29840088 595.35687256]
[755.66784668 605.14141846]
[745.88317871 616.51068115]
[734.51409912 606.72650146]
[723.14453125 596.94213867]
[718.25238037 602.62695312]
[726.39056396 615.22735596]
[734.52874756 627.82775879]
[748.20129395 637.85260010]
[742.35314941 653.76599121]
[725.44274902 652.55163574]
[721.92840576 635.96594238]
[713.79016113 623.36553955]
[705.65197754 610.76513672]
[700.79547119 624.95721436]
[687.04193115 630.94378662]
[673.34564209 624.82733154]
[668.62359619 610.58996582]
[675.95019531 597.50097656]
[690.55493164 594.08197021]
[678.82745361 584.72961426]
[667.09997559 575.37725830]
[655.37249756 566.02496338]
[643.64501953 556.67260742]
[635.91870117 561.27557373]
[627.20800781 563.60559082]
[618.16870117 563.47412109]
[609.48468018 560.87835693]
[601.81658936 556.00244141]
[595.75128174 549.20452881]
[591.75714111 540.99029541]
[590.14770508 531.97564697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[8 178]
[9 177]
[16 166]
[17 165]
[18 164]
[19 163]
[20 162]
[23 160]
[24 159]
[26 157]
[27 156]
[28 155]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[36 147]
[37 146]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[43 139]
[44 138]
[45 137]
[46 94]
[47 93]
[48 92]
[49 91]
[50 89]
[51 88]
[52 87]
[53 86]
[54 85]
[55 84]
[56 83]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[96 108]
[97 107]
[98 106]
[99 105]
[109 131]
[110 130]
[111 129]
[115 127]
[116 126]
[117 125]
[118 124]
[189 243]
[190 242]
[191 241]
[192 240]
[193 239]
[194 218]
[195 217]
[196 216]
[197 215]
[200 212]
[201 211]
[202 210]
[203 209]
[225 233]
[226 232]
[227 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
