%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGCCGCCCUCGCGCUGUGGUUCGCUCCGGGCGCGCUGCGCUCGUGAGUUCCCAGGAGGCCUGGCGGGCACCGUAACCAGCGCCGCGGACACCGGCACCGGCGCCACGGACUCCGCAGGACCCCGCGCCCGCCGCCGCCGCUAUGCUGGGGCUGCUGGUGGCGUUGCUGGCCCUGGGGCUCGCUGUCUUUGCGCUGCUGGACGUCUGGUACCUGGUGCGCCUUCCGUGCGCCGUGCUGCGCG\
) } def
/len { sequence length } bind def

/coor [
[144.29716492 178.03622437]
[141.40148926 161.84181213]
[147.10635376 146.31120300]
[137.38291931 134.88952637]
[127.65949249 123.46782684]
[117.93606567 112.04614258]
[103.25065613 115.10207367]
[98.89064026 129.45443726]
[94.53061676 143.80679321]
[98.77304840 159.64768982]
[86.98592377 171.04925537]
[71.29483032 166.28254700]
[67.84141541 150.25114441]
[80.17825317 139.44677734]
[84.53827667 125.09441376]
[88.89830017 110.74205017]
[76.70676422 102.00325775]
[64.51523590 110.74205017]
[52.32369995 119.48085022]
[47.18693924 127.00614929]
[39.91934586 128.25234985]
[27.61676216 136.83409119]
[26.33662033 147.60684204]
[19.48998070 155.73731995]
[9.51251698 158.70677185]
[-0.24562174 155.76927185]
[-12.76422024 164.03273010]
[-25.28281975 172.29618835]
[-37.80141830 180.55963135]
[-50.26678085 188.90318298]
[-62.67839050 197.32647705]
[-75.09000397 205.74977112]
[-87.50161743 214.17306519]
[-99.91322327 222.59635925]
[-112.32483673 231.01965332]
[-124.73645020 239.44294739]
[-134.44705200 253.34045410]
[-150.48959351 247.85655212]
[-149.66102600 230.92286682]
[-133.15974426 227.03134155]
[-120.74813080 218.60804749]
[-108.33652496 210.18475342]
[-95.92491150 201.76145935]
[-83.51329803 193.33816528]
[-71.10168457 184.91487122]
[-58.69007492 176.49157715]
[-54.92895126 170.14926147]
[-46.06487274 168.04104614]
[-33.54627228 159.77758789]
[-21.02767563 151.51412964]
[-8.50907612 143.25067139]
[-1.12073314 125.36770630]
[19.03501320 124.53151703]
[31.33759689 115.94976044]
[43.58490753 107.28931427]
[55.77643967 98.55052185]
[67.96797180 89.81172943]
[74.47622681 76.29719543]
[73.70719910 61.31692123]
[72.93816376 46.33664703]
[64.50351715 32.95130539]
[71.57813263 19.84408760]
[70.80910492 4.86381531]
[70.04006958 -10.11645794]
[69.07901764 -25.08563995]
[67.92610168 -40.04126740]
[66.77318573 -54.99689484]
[57.99807358 -68.16154480]
[64.73425293 -81.44586182]
[63.58133698 -96.40148926]
[62.42842102 -111.35711670]
[61.27550507 -126.31274414]
[52.50039673 -139.47740173]
[59.23657990 -152.76171875]
[58.08366013 -167.71734619]
[56.93074417 -182.67297363]
[48.15563583 -195.83761597]
[54.89181900 -209.12194824]
[53.73890305 -224.07757568]
[52.58598328 -239.03320312]
[51.43306732 -253.98883057]
[50.28015137 -268.94445801]
[49.12723541 -283.90008545]
[47.87845612 -298.84799194]
[46.53386688 -313.78762817]
[45.18927765 -328.72723389]
[36.24608994 -341.77828979]
[42.81137848 -355.14788818]
[41.46678543 -370.08749390]
[40.12219620 -385.02713013]
[36.24381256 -393.27178955]
[38.85740662 -400.16671753]
[37.70449066 -415.12234497]
[25.58358383 -431.24801636]
[34.74068451 -448.29312134]
[33.20464325 -463.21426392]
[31.66860199 -478.13540649]
[30.13255882 -493.05654907]
[18.15521622 -503.01550293]
[16.81000900 -518.16955566]
[26.37817192 -529.52673340]
[24.84213066 -544.44787598]
[23.30608749 -559.36901855]
[21.77004623 -574.29016113]
[20.23400497 -589.21130371]
[5.48261023 -597.50927734]
[-1.34065259 -612.81616211]
[2.27610779 -629.00958252]
[14.71174240 -639.74139404]
[12.98450089 -654.64160156]
[11.25725842 -669.54180908]
[-0.84679878 -679.34637451]
[-2.38620806 -694.48193359]
[7.03554153 -705.96087646]
[5.30830002 -720.86108398]
[3.58105850 -735.76135254]
[-4.24892950 -750.79888916]
[8.03338242 -762.48565674]
[22.66353416 -753.91857910]
[18.48128128 -737.48858643]
[20.20852280 -722.58831787]
[21.93576431 -707.68811035]
[33.73366547 -698.66894531]
[35.69759369 -683.58264160]
[26.15748215 -671.26904297]
[27.88472366 -656.36883545]
[29.61196518 -641.46862793]
[41.79208374 -636.03228760]
[49.76401901 -625.20385742]
[51.36283875 -611.74389648]
[46.06555939 -599.14984131]
[35.15515137 -590.74737549]
[36.69119263 -575.82623291]
[38.22723389 -560.90509033]
[39.76327515 -545.98394775]
[41.29931641 -531.06280518]
[52.98059845 -521.89312744]
[54.75092316 -506.78280640]
[45.05370331 -494.59259033]
[46.58974838 -479.67144775]
[48.12578964 -464.75030518]
[49.66183090 -449.82916260]
[58.11621475 -444.13937378]
[62.13888931 -434.53805542]
[60.18484879 -424.08993530]
[52.66011810 -416.27526855]
[53.81303406 -401.31964111]
[55.06181335 -386.37170410]
[56.40640259 -371.43209839]
[57.75099182 -356.49246216]
[66.59800720 -344.51000977]
[60.12889099 -330.07183838]
[61.47348404 -315.13220215]
[62.81807327 -300.19259644]
[66.53948212 -293.82690430]
[64.08286285 -285.05300903]
[65.23577881 -270.09738159]
[66.38869476 -255.14173889]
[67.54161072 -240.18611145]
[68.69452667 -225.23048401]
[69.84744263 -210.27485657]
[78.54008484 -198.17993164]
[71.88637543 -183.82588196]
[73.03929138 -168.87025452]
[74.19220734 -153.91462708]
[82.88484955 -141.81970215]
[76.23113251 -127.46566010]
[77.38404846 -112.51003265]
[78.53696442 -97.55440521]
[79.68988037 -82.59877777]
[88.38252258 -70.50385284]
[81.72881317 -56.14981079]
[82.88172913 -41.19418335]
[84.03464508 -26.23855591]
[86.99687958 -22.51845932]
[87.66841125 -16.90376663]
[85.02033997 -10.88549042]
[85.78937531 4.09478283]
[86.55841064 19.07505608]
[94.93804169 31.38890839]
[87.91843414 45.56761551]
[88.68746948 60.54788589]
[89.45650482 75.52816010]
[129.35775757 102.32271576]
[139.08119202 113.74440765]
[148.80461121 125.16609192]
[158.52803040 136.58778381]
[172.12374878 133.35110474]
[185.72375488 136.26924133]
[196.69004822 144.71795654]
[202.92063904 157.00592041]
[203.25225830 170.71310425]
[197.67721558 183.16728210]
[207.25338745 194.71270752]
[216.82955933 206.25814819]
[226.40573120 217.80357361]
[241.17127991 223.48591614]
[243.34115601 238.22161865]
[252.91732788 249.76704407]
[270.79199219 248.46228027]
[285.29449463 264.76312256]
[297.59707642 273.34484863]
[309.95440674 281.84756470]
[322.36602783 290.27084351]
[338.32989502 288.67895508]
[349.42419434 300.26757812]
[347.13830566 316.14694214]
[333.22576904 324.13574219]
[318.35910034 318.10568237]
[313.94274902 302.68246460]
[301.53112793 294.25918579]
[294.24813843 293.10626221]
[289.01531982 285.64746094]
[276.71273804 277.06570435]
[265.60855103 287.15020752]
[272.96932983 300.22000122]
[280.33007812 313.28976440]
[287.69085693 326.35955811]
[295.05160522 339.42932129]
[302.41238403 352.49911499]
[309.77313232 365.56890869]
[317.13391113 378.63867188]
[332.13589478 384.32373047]
[336.90737915 399.64077759]
[327.78805542 412.83993530]
[311.77349854 413.79589844]
[301.14871216 401.77536011]
[304.06411743 385.99945068]
[296.70336914 372.92965698]
[289.34259033 359.85986328]
[281.98184204 346.79010010]
[274.62106323 333.72030640]
[267.26031494 320.65054321]
[259.89953613 307.58074951]
[252.53878784 294.51098633]
[237.22489929 277.59976196]
[241.37190247 259.34323120]
[231.79573059 247.79779053]
[217.71511841 242.94125366]
[214.86030579 227.37974548]
[205.28413391 215.83432007]
[195.70794678 204.28887939]
[186.13177490 192.74345398]
[170.26281738 195.84555054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[6 184]
[7 16]
[8 15]
[9 14]
[17 57]
[18 56]
[19 55]
[21 54]
[22 53]
[26 51]
[27 50]
[28 49]
[29 48]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[58 183]
[59 182]
[60 181]
[62 179]
[63 178]
[64 177]
[65 174]
[66 173]
[67 172]
[69 170]
[70 169]
[71 168]
[72 167]
[74 165]
[75 164]
[76 163]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[83 156]
[84 154]
[85 153]
[86 152]
[88 150]
[89 149]
[90 148]
[92 147]
[93 146]
[95 142]
[96 141]
[97 140]
[98 139]
[101 136]
[102 135]
[103 134]
[104 133]
[105 132]
[109 127]
[110 126]
[111 125]
[114 122]
[115 121]
[116 120]
[193 243]
[194 242]
[195 241]
[196 240]
[198 238]
[199 237]
[201 214]
[202 213]
[203 211]
[204 210]
[215 235]
[216 234]
[217 233]
[218 232]
[219 231]
[220 230]
[221 229]
[222 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
