%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGCGUGUGCGCGUGCGCUCGAGAGCGUCAUCGCCCCCGACUGUGGAGAAGUGUCCGGGGUAGCCCCGUUACAGGAAUGUGUUUCUGAUCAUCUGAAUCUUAAUCAUGUCCAACUGCCUGCAAAAUUUCCUGAAAAUUACAAGCACUCGUCUUCUAUGUUCAAGAUUAUGCCAACAGUUAAGAAGUAAAAGGAAGUUUUUCGGAA\
) } def
/len { sequence length } bind def

/coor [
[96.83152008 153.62812805]
[93.02223206 168.13636780]
[89.21293640 182.64462280]
[85.40364838 197.15287781]
[81.59436035 211.66111755]
[77.78506470 226.16937256]
[82.62875366 241.83686829]
[71.28519440 253.67984009]
[55.42366791 249.51522827]
[51.36115265 233.62724304]
[63.27681732 222.36007690]
[67.08610535 207.85183716]
[70.89540100 193.34358215]
[74.70468903 178.83532715]
[78.51397705 164.32708740]
[82.32327271 149.81883240]
[69.04142761 142.84799194]
[59.26530075 154.22459412]
[49.48917007 165.60121155]
[39.71303558 176.97781372]
[29.93690491 188.35443115]
[27.43308258 204.56130981]
[12.04975605 210.24331665]
[-0.38802409 199.55531311]
[2.91466284 183.49217224]
[18.56029510 178.57829285]
[28.33642769 167.20169067]
[38.11255646 155.82507324]
[47.88869095 144.44847107]
[57.66482162 133.07185364]
[52.78630066 126.45518494]
[48.94345093 119.11941528]
[46.24211121 111.22689819]
[44.76262283 102.95552063]
[44.55758286 94.49471283]
[29.61913681 95.85219574]
[14.68068790 97.20967865]
[-0.25776047 98.56716156]
[-15.19620895 99.92464447]
[-28.23953629 108.87909698]
[-41.61479950 102.32534790]
[-56.55324936 103.68283081]
[-71.49169922 105.04031372]
[-77.28988647 119.20504761]
[-89.01406097 129.04386902]
[-103.97009277 132.29586792]
[-118.72120667 128.21379089]
[-129.87768555 117.73564911]
[-134.87586975 103.26924133]
[-132.56719971 88.13885498]
[-123.48220062 75.82133484]
[-109.70853424 69.14715576]
[-94.41128540 69.64999390]
[-81.10565186 77.21430969]
[-72.84918213 90.10186768]
[-57.91073227 88.74438477]
[-42.97228241 87.38690186]
[-30.99745369 78.52954865]
[-16.55369186 84.98619843]
[-1.61524355 83.62871552]
[13.32320499 82.27123260]
[28.26165390 80.91374969]
[43.20009995 79.55626678]
[47.41385269 73.35189056]
[33.65332031 67.38131714]
[19.89278603 61.41074753]
[4.90146732 60.90045547]
[-6.12330866 50.72920609]
[-7.83734131 35.82745743]
[0.59023732 23.41875458]
[15.07420349 19.51815033]
[28.59353065 26.01643944]
[34.59478378 39.76335144]
[45.21807098 50.35324097]
[55.84135437 60.94313431]
[60.05510712 54.73875427]
[55.80936050 40.35217667]
[51.56361389 25.96559906]
[46.13191986 18.61859894]
[47.36415100 11.32959843]
[43.33617401 -3.11946321]
[39.30819321 -17.56852531]
[35.28021622 -32.01758575]
[24.12131500 -43.23317719]
[28.15675354 -57.57069778]
[24.12877464 -72.01976013]
[10.64477062 -79.81844330]
[6.76566076 -94.52922821]
[14.28360748 -107.33609772]
[10.25562859 -121.78516388]
[6.11864901 -136.20339966]
[1.87290275 -150.58996582]
[-10.37762833 -161.49211121]
[-6.79683208 -177.49554443]
[8.93167591 -182.13731384]
[20.62775421 -170.64236450]
[16.25948143 -154.83572388]
[20.50522804 -140.44914246]
[25.41465569 -134.92234802]
[24.70469093 -125.81314087]
[28.73266983 -111.36408234]
[41.79186630 -104.29351044]
[46.08264160 -89.69748688]
[38.57783508 -76.04773712]
[42.60581589 -61.59867859]
[53.47660828 -51.41658020]
[49.72927856 -36.04556656]
[53.75725555 -21.59650230]
[57.78523636 -7.14744139]
[61.81321335 7.30162096]
[65.95019531 21.71985245]
[70.19593811 36.10643005]
[74.44168854 50.49300766]
[90.30545044 46.11539078]
[106.46804810 46.60590744]
[121.49459839 51.75230408]
[134.10063171 60.93643951]
[143.26170349 73.20336151]
[148.29606628 87.35840607]
[148.91349792 102.08256531]
[163.62527466 105.00891876]
[178.33705139 107.93527222]
[193.38153076 103.03892517]
[204.35478210 113.11051941]
[219.06655884 116.03688049]
[233.77833557 118.96323395]
[248.49011230 121.88958740]
[263.20190430 124.81594086]
[277.91366577 127.74229431]
[292.62545776 130.66865540]
[307.33724976 133.59500122]
[322.04901123 136.52136230]
[336.76080322 139.44772339]
[351.68936157 123.36293793]
[373.17233276 119.57806396]
[392.46563721 129.47282410]
[401.81344604 148.89154053]
[416.75189209 150.24902344]
[431.69033813 151.60650635]
[446.62878418 152.96398926]
[455.52755737 140.52375793]
[469.36697388 134.24942017]
[484.38894653 135.73483276]
[496.56900024 144.48139954]
[502.69439697 158.05877686]
[517.63281250 159.41625977]
[532.57128906 160.77374268]
[541.85791016 151.01611328]
[554.87884521 148.42718506]
[566.83593750 153.73246765]
[573.45391846 164.78990173]
[588.37017822 166.37284851]
[603.28637695 167.95579529]
[618.20263672 169.53874207]
[633.11889648 171.12168884]
[643.41308594 159.51094055]
[658.57305908 156.20130920]
[672.76959229 162.46539307]
[680.54376221 175.89454651]
[678.90625000 191.32496643]
[668.48669434 202.82336426]
[653.29168701 205.96835327]
[639.16394043 199.55062866]
[631.53594971 186.03793335]
[616.61968994 184.45498657]
[601.70343018 182.87203979]
[586.78723145 181.28909302]
[571.87097168 179.70614624]
[559.25531006 190.82586670]
[542.16412354 189.35295105]
[531.21380615 175.71218872]
[516.27532959 174.35470581]
[501.33691406 172.99722290]
[492.86444092 185.24806213]
[479.30731201 191.65585327]
[464.26364136 190.40913391]
[451.78189087 181.74295044]
[445.27130127 167.90243530]
[430.33285522 166.54495239]
[415.39440918 165.18746948]
[400.45596313 163.82998657]
[396.84811401 171.62144470]
[391.37976074 178.26582336]
[384.39700317 183.32743835]
[376.34570312 186.47128296]
[367.74282837 187.48513794]
[359.14352417 186.29394531]
[351.10504150 182.96517944]
[344.15072632 177.70520020]
[338.73602295 170.84640503]
[335.21853638 162.82629395]
[333.83444214 154.15950012]
[319.12265015 151.23313904]
[304.41088867 148.30679321]
[289.69909668 145.38043213]
[274.98733521 142.45407104]
[260.27554321 139.52772522]
[245.56376648 136.60136414]
[230.85198975 133.67501831]
[216.14021301 130.74865723]
[201.42842102 127.82230377]
[187.43623352 132.92796326]
[175.41070557 122.64705658]
[160.69891357 119.72070312]
[145.98713684 116.79434204]
[139.30570984 131.14419556]
[128.17048645 142.92076111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[41 57]
[42 56]
[43 55]
[76 113]
[77 112]
[78 111]
[80 110]
[81 109]
[82 108]
[83 107]
[85 105]
[86 104]
[89 101]
[90 100]
[91 98]
[92 97]
[120 205]
[121 204]
[122 203]
[124 201]
[125 200]
[126 199]
[127 198]
[128 197]
[129 196]
[130 195]
[131 194]
[132 193]
[133 192]
[137 181]
[138 180]
[139 179]
[140 178]
[145 173]
[146 172]
[147 171]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
