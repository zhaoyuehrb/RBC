%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGCGGCCGCGGUGGCAGCGAAGGCGGCGGCGGCGGCGGCAGUGGCAGUGGCCGCUGCAGCCCCACACUCCGCCGCCAAACUGGAGGAGCGACGGAAGCCAGACCCCAGGAGGAUGGAGGAUGAAGCUGUCCUGGACAGAGGGGCUUCCUUCCUCAAGCAUGUGUGUGAUGAAGAAGAAGUAGAAGGCCACCAUACCAUUUACAUCGGAGUCC\
) } def
/len { sequence length } bind def

/coor [
[131.44390869 242.68760681]
[128.22662354 257.33850098]
[125.00934601 271.98941040]
[121.79207611 286.64031982]
[118.57479858 301.29122925]
[124.05042267 316.74923706]
[113.19690704 329.04284668]
[97.17940521 325.52548218]
[92.47536469 309.81549072]
[103.92388916 298.07397461]
[107.14116669 283.42306519]
[110.35843658 268.77215576]
[113.57571411 254.12124634]
[116.79299164 239.47033691]
[117.65717316 224.49523926]
[116.14658356 209.57150269]
[114.63600159 194.64775085]
[113.12541199 179.72401428]
[111.61482239 164.80027771]
[110.10423279 149.87652588]
[98.70104980 149.77505493]
[87.85563660 147.15554810]
[78.10405731 142.26107788]
[69.90255737 135.44409180]
[63.60633087 127.14332581]
[59.45465088 117.85673523]
[57.56278992 108.11238098]
[42.56434631 108.32853699]
[27.56590462 108.54470062]
[12.56746101 108.76085663]
[-2.43098116 108.97701263]
[-17.42942429 109.19316864]
[-32.42786789 109.40932465]
[-47.42630768 109.62548065]
[-65.78648376 122.47675323]
[-84.24656677 111.17482758]
[-99.20764160 112.25471497]
[-107.53662872 115.99212646]
[-114.39182281 113.24077606]
[-129.36691284 114.10495758]
[-144.34199524 114.96913910]
[-157.67349243 123.48863983]
[-170.82537842 116.49743652]
[-185.80046082 117.36161804]
[-200.77554321 118.22579956]
[-215.75064087 119.08997345]
[-230.72572327 119.95415497]
[-245.70080566 120.81833649]
[-260.67590332 121.68251801]
[-275.65097046 122.54669952]
[-289.05252075 131.99818420]
[-303.82296753 124.87317657]
[-304.76776123 108.50126648]
[-290.91497803 99.72447205]
[-276.51516724 107.57160950]
[-261.54006958 106.70742798]
[-246.56498718 105.84325409]
[-231.58990479 104.97907257]
[-216.61482239 104.11489105]
[-201.63972473 103.25070953]
[-186.66464233 102.38653564]
[-171.68955994 101.52235413]
[-159.42918396 93.06465912]
[-145.20617676 99.99405670]
[-130.23109436 99.12987518]
[-115.25600433 98.26569366]
[-100.28753662 97.29363251]
[-85.32645416 96.21374512]
[-81.56494904 89.30461121]
[-75.30704498 84.38426971]
[-67.52406311 82.31067657]
[-59.46184540 83.49243164]
[-52.44140244 87.81077576]
[-47.64246750 94.62703705]
[-32.64402390 94.41088104]
[-17.64558029 94.19472504]
[-2.64713836 93.97856903]
[12.35130405 93.76241302]
[27.34974670 93.54625702]
[42.34819031 93.33010101]
[57.34663010 93.11393738]
[60.37707520 80.08734894]
[67.38780975 68.29363251]
[77.89914703 58.94690323]
[91.06264496 53.08005905]
[86.79895782 38.69878769]
[82.53527069 24.31751442]
[78.27159119 9.93624210]
[72.83470917 2.60271883]
[74.05168915 -4.68306255]
[69.99568939 -19.12428284]
[53.78311539 -33.14242554]
[59.75166702 -52.90233612]
[55.07531357 -67.15476990]
[40.49325180 -72.80255127]
[32.99840546 -86.52703094]
[36.12960815 -101.84791565]
[48.40840149 -111.53115845]
[64.03711700 -111.00463104]
[75.63635254 -100.51693726]
[77.72930145 -85.02004242]
[69.32774353 -71.83111572]
[74.00409698 -57.57868958]
[82.46529388 -54.91784286]
[88.85274506 -48.56720734]
[91.64660645 -39.85970306]
[90.10078430 -30.70707130]
[84.43691254 -23.18028450]
[88.49291229 -8.73906326]
[92.65286255 5.67255735]
[96.91654205 20.05382919]
[101.18022919 34.43510056]
[105.44391632 48.81637573]
[119.96942902 52.55928421]
[130.65217590 42.02938080]
[141.33493042 31.49948120]
[152.01768494 20.96957970]
[162.70043945 10.43967915]
[167.09715271 -4.75832844]
[181.59284973 -8.18241215]
[192.27558899 -18.71231461]
[202.95834351 -29.24221611]
[213.64109802 -39.77211761]
[224.32385254 -50.30201721]
[219.24549866 -63.48834229]
[219.57456970 -77.57160950]
[225.22839355 -90.42706299]
[235.32345581 -100.12776947]
[248.31326294 -105.23343658]
[262.22525024 -105.00420380]
[274.96029663 -99.50766754]
[285.79367065 -109.88253021]
[296.62704468 -120.25740051]
[307.46044922 -130.63226318]
[318.29382324 -141.00712585]
[325.55123901 -156.32920837]
[342.28359985 -153.59696960]
[344.29010010 -136.76217651]
[328.66870117 -130.17373657]
[317.83529663 -119.79888153]
[307.00192261 -109.42401123]
[296.16854858 -99.04914856]
[285.33514404 -88.67428589]
[290.57583618 -73.57585907]
[288.69949341 -57.64569473]
[280.03140259 -44.08006668]
[266.26483154 -35.62311554]
[250.13020325 -34.01177597]
[234.85374451 -39.61926651]
[224.17100525 -29.08936501]
[213.48825073 -18.55946350]
[202.80549622 -8.02956200]
[192.12274170 2.50033879]
[188.49012756 16.94517708]
[173.23033142 21.12243080]
[162.54759216 31.65233231]
[151.86483765 42.18223190]
[141.18208313 52.71213531]
[130.49932861 63.24203491]
[140.22271729 72.81986237]
[146.97042847 84.93692780]
[150.09071350 98.67711639]
[149.21156311 112.96093750]
[164.02348328 115.32880402]
[178.83541870 117.69667053]
[190.53273010 107.31847382]
[206.16569519 106.93888092]
[218.35293579 116.73712158]
[221.33996582 132.08676147]
[213.71644592 145.74017334]
[199.08193970 151.25064087]
[184.34642029 146.01628113]
[176.46754456 132.50859070]
[161.65562439 130.14073181]
[146.84368896 127.77286530]
[141.38977051 132.92114258]
[153.25323486 142.10034180]
[165.11671448 151.27955627]
[176.98019409 160.45877075]
[191.70086670 163.34004211]
[201.93978882 174.30200195]
[203.81144714 189.18476868]
[196.60557556 202.34057617]
[183.05668640 208.77702332]
[168.30636597 206.05155945]
[157.95213318 195.19847107]
[155.92337036 180.33547974]
[147.44288635 167.96287537]
[138.96240234 155.59027100]
[130.48190308 143.21766663]
[125.02797699 148.36593628]
[126.53856659 163.28968811]
[128.04914856 178.21342468]
[129.55973816 193.13717651]
[131.07032776 208.06091309]
[132.58091736 222.98466492]
[137.82505798 208.93122864]
[146.48590088 196.68418884]
[157.98849487 187.05661011]
[171.56919861 180.68759155]
[186.32646179 177.99998474]
[201.28059387 179.17221069]
[215.43882751 184.12641907]
[227.86126709 192.53375244]
[237.72322083 203.83604431]
[244.36997986 217.28300476]
[247.36029053 231.98191833]
[246.49565125 246.95697021]
[241.83345032 261.21401978]
[233.68319702 273.80664062]
[222.58596802 283.89877319]
[209.27845764 290.82049561]
[194.64410400 294.11224365]
[179.65443420 293.55554199]
[165.30456543 289.18734741]
[152.54713440 281.29760742]
[142.22906494 270.41012573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[20 191]
[27 81]
[28 80]
[29 79]
[30 78]
[31 77]
[32 76]
[33 75]
[34 74]
[36 68]
[37 67]
[39 66]
[40 65]
[41 64]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[85 113]
[86 112]
[87 111]
[88 110]
[90 109]
[91 108]
[93 103]
[94 102]
[114 159]
[115 158]
[116 157]
[117 156]
[118 155]
[120 153]
[121 152]
[122 151]
[123 150]
[124 149]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
