%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGCUCGGCGGCAGCGGAGCGGCCGGAGCUGCGGUGCGGACCGGGGCCGCGCGGCGUGGCGCGGGGAGCGGCGGCGGCGGCAGAGCCAGAGCAACAUGGCGCCGGUGGGCGGGGGCGGGCGCCCGGUCGGCGGACCGGCCCGCGGGCGCCUCCUCCUGGCGGCGCCGGUGCUGCUGGUGCUGCUGUGGGCGCUGG\
) } def
/len { sequence length } bind def

/coor [
[-239.55084229 535.97271729]
[-243.03981018 536.54254150]
[-253.00027466 547.75811768]
[-262.96075439 558.97369385]
[-266.33926392 574.42993164]
[-280.57580566 578.80841064]
[-290.53625488 590.02398682]
[-287.35894775 605.09747314]
[-293.59375000 618.98925781]
[-306.65847778 626.45764160]
[-321.43881226 624.82049561]
[-331.39926147 636.03607178]
[-341.35974121 647.25164795]
[-351.32019043 658.46722412]
[-361.28067017 669.68280029]
[-360.52749634 685.24139404]
[-370.78860474 696.47369385]
[-385.62600708 697.09588623]
[-395.58645630 708.31140137]
[-405.54693604 719.52697754]
[-406.03689575 735.56256104]
[-418.96533203 745.06176758]
[-434.41464233 740.73767090]
[-440.53347778 725.90728760]
[-432.62792969 711.94726562]
[-416.76251221 709.56652832]
[-406.80203247 698.35095215]
[-396.84158325 687.13537598]
[-397.97644043 672.32836914]
[-388.03488159 660.81231689]
[-372.49624634 659.72235107]
[-362.53576660 648.50677490]
[-352.57531738 637.29119873]
[-342.61483765 626.07562256]
[-332.65438843 614.86004639]
[-336.02597046 600.37658691]
[-330.15313721 586.52111816]
[-317.09512329 578.68902588]
[-301.75183105 580.06347656]
[-291.79135132 568.84790039]
[-289.12527466 554.19384766]
[-274.17633057 549.01324463]
[-264.21585083 537.79766846]
[-254.25538635 526.58209229]
[-244.56327820 515.13378906]
[-235.14495850 503.45925903]
[-225.72663879 491.78469849]
[-223.75730896 477.02084351]
[-209.07037354 471.13827515]
[-199.65205383 459.46371460]
[-190.23373413 447.78918457]
[-188.47895813 440.60223389]
[-180.57342529 436.00619507]
[-170.97196960 424.48178101]
[-161.37052917 412.95736694]
[-151.76908875 401.43292236]
[-142.16764832 389.90850830]
[-132.56620789 378.38409424]
[-132.10090637 373.62197876]
[-128.63273621 369.10430908]
[-122.47518158 366.65365601]
[-112.51470947 355.43807983]
[-102.55424500 344.22250366]
[-92.59378052 333.00692749]
[-82.63330841 321.79135132]
[-79.96722412 307.13729858]
[-65.01826477 301.95666504]
[-55.05779266 290.74108887]
[-52.39170837 276.08703613]
[-37.44274521 270.90637207]
[-27.48227882 259.69082642]
[-17.52181053 248.47523499]
[-7.56134415 237.25965881]
[-4.89525652 222.60560608]
[10.05370522 217.42495728]
[20.01417160 206.20939636]
[29.97463989 194.99382019]
[39.93510818 183.77824402]
[49.89557266 172.56266785]
[52.56166077 157.90861511]
[67.51062012 152.72796631]
[77.47109222 141.51239014]
[80.13717651 126.85834503]
[95.08613586 121.67769623]
[105.04660797 110.46212006]
[92.78311920 118.51949310]
[73.85183716 110.38867188]
[67.11450958 84.40331268]
[65.22511292 69.52278137]
[63.33571625 54.64225006]
[61.44631958 39.76171875]
[47.77959442 32.41323090]
[41.07266235 18.42049408]
[43.90447235 3.16400504]
[55.18613434 -7.48980713]
[70.57962036 -9.44433308]
[84.16582489 -1.94801843]
[90.72056580 12.11665154]
[87.72341919 27.34152412]
[76.32685089 37.87232590]
[78.21624756 52.75285721]
[80.10564423 67.63338470]
[81.99503326 82.51391602]
[96.94833374 83.69670105]
[101.15365601 69.29825592]
[105.35898590 54.89981461]
[100.94634247 39.10549164]
[112.61009216 27.57774734]
[128.35157776 32.17533493]
[131.97729492 48.16865158]
[119.75743103 59.10514450]
[115.55210114 73.50358582]
[111.34677887 87.90203094]
[122.56234741 97.86250305]
[136.36323547 91.98579407]
[150.16410828 86.10908508]
[163.96499634 80.23238373]
[177.76586914 74.35567474]
[184.44348145 68.10820770]
[191.83131409 68.49703979]
[205.72323608 62.83892822]
[219.61517334 57.18081665]
[233.50711060 51.52270889]
[247.39904785 45.86459732]
[261.29098511 40.20648956]
[275.18289185 34.54837799]
[289.07482910 28.89026833]
[302.82891846 22.90481186]
[316.43737793 16.59535980]
[330.04586792 10.28590965]
[343.65435791 3.97645855]
[357.26284790 -2.33299232]
[370.87130737 -8.64244366]
[379.85922241 -22.35920334]
[396.21475220 -21.16380310]
[403.11273193 -6.28596830]
[393.45712280 6.96926117]
[377.18078613 4.96604061]
[363.57229614 11.27549171]
[349.96380615 17.58494186]
[336.35531616 23.89439392]
[322.74682617 30.20384407]
[309.13836670 36.51329422]
[307.58810425 39.69045258]
[304.41677856 42.27123642]
[299.92303467 43.49958420]
[294.73294067 42.78220367]
[280.84100342 48.44031143]
[266.94909668 54.09842300]
[253.05714417 59.75653076]
[239.16522217 65.41464233]
[225.27328491 71.07275391]
[211.38134766 76.73085785]
[197.48942566 82.38896942]
[183.64257812 88.15655518]
[169.84170532 94.03326416]
[156.04081726 99.90996552]
[142.23994446 105.78667450]
[128.43905640 111.66338348]
[116.26217651 120.42258453]
[106.30171204 131.63816833]
[102.92318726 147.09442139]
[88.68666077 151.47285461]
[78.72619629 162.68843079]
[75.34767151 178.14469910]
[61.11114883 182.52313232]
[51.15068054 193.73870850]
[41.19021225 204.95428467]
[31.22974586 216.16986084]
[21.26927948 227.38543701]
[17.89075279 242.84169006]
[3.65422988 247.22013855]
[-6.30623722 258.43569946]
[-16.26670456 269.65127563]
[-26.22717094 280.86685181]
[-29.60569763 296.32312012]
[-43.84222031 300.70156860]
[-53.80268860 311.91711426]
[-57.18121338 327.37338257]
[-71.41773987 331.75183105]
[-81.37820435 342.96740723]
[-91.33866882 354.18298340]
[-101.29914093 365.39855957]
[-111.25960541 376.61413574]
[-121.04177856 387.98553467]
[-130.64321899 399.50994873]
[-140.24465942 411.03439331]
[-149.84611511 422.55880737]
[-159.44755554 434.08322144]
[-169.04899597 445.60763550]
[-178.55917358 457.20748901]
[-187.97749329 468.88204956]
[-197.39581299 480.55661011]
[-200.03880310 496.15548706]
[-214.05207825 501.20300293]
[-223.47039795 512.87756348]
[-232.88871765 524.55212402]
[-233.69606018 529.72900391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 44]
[3 43]
[4 42]
[6 40]
[7 39]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[18 28]
[19 27]
[20 26]
[45 197]
[46 196]
[47 195]
[49 193]
[50 192]
[51 191]
[53 190]
[54 189]
[55 188]
[56 187]
[57 186]
[58 185]
[61 184]
[62 183]
[63 182]
[64 181]
[65 180]
[67 178]
[68 177]
[70 175]
[71 174]
[72 173]
[73 172]
[75 170]
[76 169]
[77 168]
[78 167]
[79 166]
[81 164]
[82 163]
[84 161]
[85 160]
[88 103]
[89 102]
[90 101]
[91 100]
[104 113]
[105 112]
[106 111]
[114 159]
[115 158]
[116 157]
[117 156]
[118 155]
[120 154]
[121 153]
[122 152]
[123 151]
[124 150]
[125 149]
[126 148]
[127 147]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
[133 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
