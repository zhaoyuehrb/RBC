%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCACGGCGAAGUGGGGGAGGGCAGUCCGUGUGUGUCUGUGUUGUUGUUCGGCGGCGGCGGCGGCGGUAAGAUGGCUGCCCACGGGGGCUCCGCGGCGUCCUCGGCGCUGAAGGGGUUAAUUCAACAGUUCACCACCAUUACCGGUGCAAGUGAAAGUGUAGGAAAACAUA\
) } def
/len { sequence length } bind def

/coor [
[102.33013153 178.66169739]
[108.62361145 165.04483032]
[107.81773376 150.06648254]
[100.66039276 152.30758667]
[94.18662262 165.83868408]
[95.21028137 181.62673950]
[82.73777771 189.76835632]
[76.26400757 203.29943848]
[69.79023743 216.83052063]
[75.28377533 231.64930725]
[68.61399841 245.97723389]
[53.73795319 251.31379700]
[39.48134232 244.49290466]
[34.30235672 229.56127930]
[41.27359390 215.37757874]
[56.25914764 210.35675049]
[62.73292160 196.82566833]
[69.20669556 183.29457092]
[67.71998596 168.47434998]
[80.65554047 159.36489868]
[87.12931061 145.83381653]
[68.71331024 132.39378357]
[59.54037094 112.89472198]
[60.79226303 92.63326263]
[46.83382034 87.14128113]
[32.87537766 81.64929962]
[18.91693497 76.15731812]
[4.95849133 70.66533661]
[-8.99995136 65.17335510]
[-18.16451073 64.93920135]
[-23.15709305 59.45676422]
[-37.01528549 53.71651077]
[-50.87347794 47.97626114]
[-64.73167419 42.23600769]
[-79.87130737 52.16468430]
[-97.78488159 51.05273056]
[-111.34137726 39.53105545]
[-115.25707245 22.33690262]
[-129.31132507 17.09494019]
[-143.36557007 11.85297680]
[-157.41981506 6.61101437]
[-171.65824890 12.92803478]
[-185.83657837 7.41173077]
[-191.77114868 -6.20136976]
[-205.82539368 -11.44333267]
[-219.87963867 -16.68529510]
[-233.93388367 -21.92725754]
[-247.98812866 -27.16921997]
[-262.04235840 -32.41118240]
[-276.09661865 -37.65314484]
[-290.15087891 -42.89510727]
[-304.20510864 -48.13706970]
[-321.15856934 -48.00716400]
[-325.97656250 -64.26210785]
[-311.69064331 -73.39163971]
[-298.96313477 -62.19131851]
[-284.90890503 -56.94935608]
[-270.85464478 -51.70739365]
[-256.80041504 -46.46542740]
[-242.74617004 -41.22346497]
[-228.69192505 -35.98150253]
[-214.63766479 -30.73954010]
[-200.58341980 -25.49757767]
[-186.52917480 -20.25561523]
[-173.12945557 -26.65739632]
[-158.80177307 -21.54150772]
[-152.17785645 -7.44323158]
[-138.12359619 -2.20126891]
[-124.06935883 3.04069376]
[-110.01511383 8.28265667]
[-100.97345734 0.12749808]
[-89.24950409 -3.41834140]
[-77.06074524 -1.61983073]
[-66.74011230 5.24106932]
[-60.28947067 15.90755177]
[-58.99142075 28.37781525]
[-45.13322830 34.11806488]
[-31.27503395 39.85831833]
[-17.41684151 45.59856796]
[-3.50796962 51.21490860]
[10.45047379 56.70689011]
[24.40891647 62.19887543]
[38.36735916 67.69085693]
[52.32580185 73.18283844]
[66.28424835 78.67481995]
[72.50286102 71.09631348]
[80.38191986 65.26318359]
[89.44562531 61.52766418]
[99.14667511 60.11532593]
[108.89924622 61.11145782]
[118.11442566 64.45590210]
[127.31649780 52.61014557]
[136.51855469 40.76438522]
[145.72062683 28.91862869]
[154.92269897 17.07287025]
[164.12475586 5.22711277]
[166.19740295 -13.05498600]
[182.67059326 -19.06477928]
[191.65975952 -31.07289886]
[200.64892578 -43.08101654]
[209.63809204 -55.08913422]
[218.62725830 -67.09725189]
[227.61642456 -79.10536957]
[236.60557556 -91.11349487]
[241.25727844 -107.41680908]
[258.21118164 -107.46010590]
[262.94607544 -91.18077087]
[248.61369324 -82.12432861]
[239.62454224 -70.11621094]
[230.63537598 -58.10808945]
[221.64620972 -46.09997177]
[212.65704346 -34.09185410]
[203.66787720 -22.08373451]
[194.67871094 -10.07561493]
[196.08599854 1.95920086]
[188.66740417 12.04216480]
[175.97052002 14.42917824]
[166.76844788 26.27493668]
[157.56639099 38.12069321]
[148.36431885 49.96645355]
[139.16224670 61.81221008]
[129.96018982 73.65796661]
[141.13652039 89.46236420]
[143.95333862 109.81419373]
[136.71231079 130.30841064]
[149.74708557 137.73098755]
[162.78186035 145.15354919]
[178.60272217 145.25881958]
[185.83381653 158.28034973]
[198.86859131 165.70292664]
[211.90336609 173.12550354]
[230.29435730 172.57522583]
[238.58735657 188.02546692]
[251.75253296 195.21420288]
[264.91772461 202.40293884]
[278.08291626 209.59167480]
[291.24810791 216.78041077]
[304.60101318 223.61410522]
[318.13211060 230.08789062]
[331.66317749 236.56166077]
[345.19427490 243.03543091]
[360.01306152 237.54188538]
[374.34100342 244.21166992]
[379.67755127 259.08770752]
[372.85665894 273.34432983]
[357.92501831 278.52331543]
[343.74133301 271.55206299]
[338.72048950 256.56652832]
[325.18942261 250.09274292]
[311.65832520 243.61897278]
[298.12722778 237.14520264]
[294.67199707 237.98780823]
[290.63461304 237.17835999]
[286.80538940 234.46069336]
[284.05935669 229.94558716]
[270.89416504 222.75686646]
[257.72900391 215.56813049]
[244.56379700 208.37939453]
[231.39862061 201.19065857]
[219.68658447 204.29634094]
[208.65046692 198.38821411]
[204.48078918 186.16027832]
[191.44601440 178.73770142]
[178.41123962 171.31512451]
[163.52272034 171.74078369]
[155.35929871 158.18833923]
[142.32450867 150.76576233]
[129.28973389 143.34318542]
[122.13240814 145.58428955]
[130.01292419 158.34741211]
[142.94790649 165.94255066]
[148.52093506 179.86883545]
[144.39674377 194.29074097]
[132.30349731 203.16503906]
[117.30861664 202.77316284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 21]
[5 20]
[7 18]
[8 17]
[9 16]
[24 85]
[25 84]
[26 83]
[27 82]
[28 81]
[29 80]
[31 79]
[32 78]
[33 77]
[34 76]
[38 70]
[39 69]
[40 68]
[41 67]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[125 168]
[126 167]
[127 166]
[129 164]
[130 163]
[131 162]
[133 159]
[134 158]
[135 157]
[136 156]
[137 155]
[138 151]
[139 150]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
