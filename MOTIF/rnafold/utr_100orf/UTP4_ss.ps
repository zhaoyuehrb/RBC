%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGCACUUCCGGGGCAGAGCCUGAGAGCGCGCGCGCACGUGGGGCCGGGGCGGAGAGAGGCGAGCACCGGGAAGGGGAGCGUGGGGCCGCUGGAAUGGGUGAAUUUAAGGUCCAUCGAGUACGUUUCUUUAAUUAUGUUCCAUCAGGAAUCCGCUGUGUGGCUUACAAUAACCAGUCAAACAGAUUGGCUGUUU\
) } def
/len { sequence length } bind def

/coor [
[159.45536804 319.69931030]
[144.47871399 318.86279297]
[137.71475220 305.47442627]
[145.92785645 292.92214966]
[138.43954468 292.50375366]
[130.09356689 304.96749878]
[128.84420776 320.73928833]
[115.33372498 327.00955200]
[106.98774719 339.47329712]
[98.64176178 351.93704224]
[97.39241028 367.70883179]
[83.88192749 373.97909546]
[75.53594971 386.44281006]
[67.18997192 398.90655518]
[58.84398651 411.37030029]
[62.15727997 426.82336426]
[53.50312805 440.04763794]
[38.01588058 443.19735718]
[24.88385391 434.40386963]
[21.89804268 418.88418579]
[30.82987595 405.84585571]
[46.38025665 403.02429199]
[54.72623825 390.56057739]
[63.07221603 378.09683228]
[71.41819763 365.63311768]
[72.07059479 350.75280762]
[86.17803192 343.59103394]
[94.52400970 331.12731934]
[102.86999512 318.66357422]
[103.52238464 303.78326416]
[117.62982941 296.62152100]
[125.97580719 284.15777588]
[130.33723450 269.80584717]
[130.33723450 254.80584717]
[127.18978882 248.10926819]
[130.45874023 239.56713867]
[130.69793701 224.56904602]
[130.93713379 209.57095337]
[131.17633057 194.57286072]
[131.41552734 179.57476807]
[131.53512573 164.57524109]
[131.53512573 149.57524109]
[131.53512573 134.57524109]
[131.53512573 119.57524109]
[104.66943359 133.31068420]
[79.73931122 122.33576202]
[73.34787750 98.88213348]
[59.14232635 94.06526184]
[44.93677521 89.24839020]
[30.73122215 84.43151855]
[15.17730999 87.32744598]
[5.60875368 75.91289520]
[-8.59679985 71.09602356]
[-19.24761009 82.02867889]
[-33.59010315 87.24938202]
[-48.77655792 85.72155762]
[-61.79170227 77.74855042]
[-70.05136108 64.91341400]
[-71.91558075 49.76456833]
[-67.01421356 35.30983353]
[-56.32043457 24.41920471]
[-41.95749664 19.25502396]
[-26.77717209 20.84264374]
[-13.79352856 28.86684036]
[-5.58447504 41.73440552]
[-3.77992678 56.89047241]
[10.42562675 61.70734406]
[24.96346092 58.46687698]
[35.54809570 70.22596741]
[49.75364685 75.04283905]
[63.95920181 79.85971069]
[78.16475677 84.67658234]
[87.07192230 72.75579834]
[102.44515991 66.45262909]
[120.60642242 69.12882233]
[122.98837280 54.31914902]
[125.37032318 39.50947952]
[127.75227356 24.69981003]
[130.13421631 9.89013958]
[132.51617432 -4.91952991]
[134.89811707 -19.72920036]
[137.28007507 -34.53886795]
[139.66201782 -49.34853745]
[142.04397583 -64.15821075]
[144.42591858 -78.96788025]
[146.09689331 -93.87451172]
[147.05308533 -108.84400940]
[148.00926208 -123.81349945]
[148.96543884 -138.78298950]
[149.92163086 -153.75248718]
[140.47100830 -160.98783875]
[135.73991394 -171.77859497]
[136.79968262 -183.39274597]
[143.27120972 -192.95036316]
[153.44792175 -198.13771057]
[154.88098145 -213.06909180]
[156.31404114 -228.00048828]
[157.74708557 -242.93186951]
[147.49845886 -254.96272278]
[148.84194946 -270.70980835]
[160.98046875 -280.83065796]
[176.71247864 -279.32077026]
[186.70442200 -267.07589722]
[185.02828979 -251.36074829]
[172.67848206 -241.49880981]
[171.24542236 -226.56742859]
[169.81236267 -211.63603210]
[168.37930298 -196.70465088]
[180.85679626 -183.32098389]
[179.57891846 -164.74795532]
[164.89111328 -152.79631042]
[163.93493652 -137.82681274]
[162.97875977 -122.85732269]
[162.02256775 -107.88782501]
[161.06639099 -92.91833496]
[173.05993652 -101.92694092]
[187.93075562 -99.96258545]
[197.17375183 -88.14874268]
[195.50257874 -73.24212646]
[183.87301636 -63.76830673]
[168.93638611 -65.14566803]
[159.23559570 -76.58592987]
[156.85363770 -61.77626038]
[154.47169495 -46.96659088]
[152.08973694 -32.15692139]
[149.70779419 -17.34724998]
[147.32583618 -2.53758025]
[144.94389343 12.27208996]
[142.56195068 27.08175850]
[140.17999268 41.89142990]
[137.79804993 56.70109940]
[135.41609192 71.51076508]
[140.48179626 77.04147339]
[144.99546814 62.73668671]
[159.64057922 59.49315643]
[169.77218628 70.55437469]
[165.25878906 84.85923767]
[150.61320496 88.10287476]
[155.67890930 93.63357544]
[170.64028931 92.55806732]
[185.60168457 91.48255920]
[200.56307983 90.40704346]
[215.52447510 89.33153534]
[228.79124451 79.69178772]
[243.66081238 86.60755920]
[244.83665466 102.96449280]
[231.10914612 111.93598938]
[216.59999084 104.29293060]
[201.63859558 105.36843872]
[186.67720032 106.44394684]
[171.71580505 107.51946259]
[156.75440979 108.59497070]
[146.53512573 119.57524109]
[146.53512573 134.57524109]
[146.53512573 149.57524109]
[146.53512573 164.57524109]
[149.66744995 173.16841125]
[146.41362000 179.81396484]
[146.17442322 194.81205750]
[145.93522644 209.81015015]
[145.69602966 224.80824280]
[145.45683289 239.80633545]
[145.33723450 254.80584717]
[145.33723450 269.80584717]
[152.13247681 268.01824951]
[159.99864197 268.64031982]
[168.14463806 272.02716064]
[175.68437195 278.28952026]
[181.70870972 287.27175903]
[188.61430359 300.58764648]
[195.51989746 313.90353394]
[202.42549133 327.21942139]
[215.64730835 335.90814209]
[214.63800049 350.76849365]
[221.54359436 364.08438110]
[228.44918823 377.40026855]
[235.35478210 390.71615601]
[242.26036072 404.03204346]
[249.16595459 417.34793091]
[263.96295166 423.54702759]
[268.20327759 439.01956177]
[258.63412476 451.89633179]
[242.59614563 452.29937744]
[232.39227295 439.91952515]
[235.85006714 424.25354004]
[228.94448853 410.93765259]
[222.03889465 397.62176514]
[215.13330078 384.30587769]
[208.22770691 370.98999023]
[201.32211304 357.67410278]
[188.59422302 349.93780518]
[189.10960388 334.12500000]
[182.20401001 320.80911255]
[175.29841614 307.49322510]
[168.39282227 294.17733765]
[160.90449524 293.75894165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 32]
[6 31]
[8 29]
[9 28]
[10 27]
[12 25]
[13 24]
[14 23]
[15 22]
[33 164]
[34 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[41 156]
[42 155]
[43 154]
[44 153]
[47 72]
[48 71]
[49 70]
[50 69]
[52 67]
[53 66]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
[95 108]
[96 107]
[97 106]
[98 105]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
[169 195]
[170 194]
[171 193]
[172 192]
[174 190]
[175 189]
[176 188]
[177 187]
[178 186]
[179 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
