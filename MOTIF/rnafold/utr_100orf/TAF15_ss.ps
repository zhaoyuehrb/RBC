%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCGCCUCAGCCCGCCGCGCCGCCCUCAGUACAGCUCCGGCCGCCGCGCCGCCUGGCUUUCGUAUUCGUUGUUCUCGGCGGGCUGUGGGGCCUCCGCGCCGCGGCCGUUAGUCAUGUCGGAUUCUGGAAGUUACGGUCAGUCUGGGGGUGAGCAGCAAAGUUAUUCUACCUAUGGAAAUCCAGGCAGCCAAGGCUAUGGACAAGCAUCACAAA\
) } def
/len { sequence length } bind def

/coor [
[107.26297760 345.03143311]
[120.21908569 337.08108521]
[117.82948303 322.27264404]
[115.43988037 307.46420288]
[113.05027771 292.65579224]
[110.33819580 277.90298462]
[107.30493164 263.21289062]
[104.27166748 248.52278137]
[101.23841095 233.83267212]
[88.69178009 225.88800049]
[85.40634918 211.03335571]
[93.82451630 197.92716980]
[90.79125214 183.23706055]
[80.86199188 176.33203125]
[78.21302032 164.12112427]
[84.79682922 153.03271484]
[81.97753906 138.30004883]
[79.15824890 123.56737518]
[84.34526825 91.48760986]
[76.28577423 78.83673859]
[68.13449097 66.24481201]
[59.89185715 53.71249390]
[51.55830383 41.24045181]
[43.13426971 28.82933998]
[34.71023941 16.41822815]
[26.28620720 4.00711632]
[17.86217690 -8.40399551]
[9.43814468 -20.81510735]
[1.01411283 -33.22621918]
[-7.40991879 -45.63732910]
[-15.83395004 -58.04844284]
[-23.23982239 -63.38890076]
[-24.28870964 -70.70188141]
[-32.53134537 -83.23419952]
[-40.80729294 -81.04837799]
[-49.59629440 -81.41572571]
[-58.10789490 -84.44224548]
[-65.53627777 -89.98888397]
[-71.13616180 -97.67259216]
[-74.29643250 -106.89083862]
[-88.94087219 -103.64424896]
[-103.58531189 -100.39765167]
[-118.22975159 -97.15105438]
[-126.50894165 -83.68886566]
[-141.90158081 -80.10525513]
[-155.27548218 -88.52630615]
[-158.69615173 -103.95597076]
[-150.13417053 -117.24009705]
[-134.66920471 -120.49745178]
[-121.47634888 -111.79549408]
[-106.83190918 -115.04209137]
[-92.18746948 -118.28868866]
[-77.54302216 -121.53527832]
[-70.32819366 -134.68618774]
[-75.45849609 -148.78157043]
[-80.69116974 -162.83927917]
[-86.02592468 -176.85856628]
[-91.36068726 -190.87785339]
[-96.69544983 -204.89712524]
[-102.03021240 -218.91641235]
[-107.36497498 -232.93569946]
[-112.69973755 -246.95498657]
[-118.03450012 -260.97427368]
[-123.36925507 -274.99356079]
[-137.91241455 -286.29144287]
[-134.43847656 -303.49475098]
[-139.97656250 -317.43496704]
[-145.51464844 -331.37518311]
[-151.05274963 -345.31539917]
[-156.59083557 -359.25561523]
[-170.82608032 -365.57983398]
[-176.24391174 -379.79608154]
[-170.12702942 -393.32821655]
[-175.66511536 -407.26843262]
[-190.37104797 -418.35360718]
[-187.14767456 -435.60565186]
[-192.88792419 -449.46383667]
[-199.06086731 -456.19155884]
[-198.60926819 -463.56558228]
[-204.14735413 -477.50579834]
[-209.68545532 -491.44601440]
[-215.22354126 -505.38619995]
[-220.76164246 -519.32641602]
[-226.83607483 -526.14324951]
[-226.27728271 -533.50988770]
[-231.61204529 -547.52917480]
[-236.94680786 -561.54846191]
[-242.28157043 -575.56774902]
[-247.61631775 -589.58703613]
[-252.95108032 -603.60632324]
[-265.09054565 -613.75244141]
[-262.38558960 -628.39935303]
[-267.72036743 -642.41864014]
[-280.76962280 -652.35083008]
[-278.42462158 -668.58142090]
[-263.09765625 -674.41381836]
[-250.55581665 -663.84808350]
[-253.70106506 -647.75341797]
[-248.36630249 -633.73413086]
[-236.60841370 -624.59075928]
[-238.93180847 -608.94104004]
[-233.59704590 -594.92175293]
[-228.26228333 -580.90246582]
[-222.92752075 -566.88317871]
[-217.59275818 -552.86389160]
[-212.25799561 -538.84466553]
[-206.82142639 -524.86450195]
[-201.28332520 -510.92431641]
[-195.74523926 -496.98410034]
[-190.20715332 -483.04388428]
[-184.66905212 -469.10366821]
[-179.02973938 -455.20410156]
[-173.28948975 -441.34591675]
[-162.23936462 -436.43017578]
[-157.34252930 -424.93475342]
[-161.72489929 -412.80654907]
[-156.18681335 -398.86633301]
[-142.45121765 -393.22103882]
[-136.63621521 -379.16259766]
[-142.65063477 -364.79370117]
[-137.11253357 -350.85348511]
[-131.57444763 -336.91326904]
[-126.03635406 -322.97308350]
[-120.49826050 -309.03286743]
[-109.52080536 -303.95693970]
[-104.79167175 -292.39154053]
[-109.34997559 -280.32830811]
[-104.01521301 -266.30902100]
[-98.68045044 -252.28974915]
[-93.34568787 -238.27046204]
[-88.01092529 -224.25117493]
[-82.67617035 -210.23188782]
[-77.34140778 -196.21261597]
[-72.00664520 -182.19332886]
[-66.67188263 -168.17404175]
[-61.35712814 -163.04244995]
[-61.36310577 -153.91188049]
[-56.23280334 -139.81648254]
[-34.23451614 -141.37950134]
[-16.95820427 -129.02272034]
[-11.74738503 -109.27108765]
[-19.99902725 -91.47683716]
[-11.75639248 -78.94451904]
[-3.42283869 -66.47247314]
[5.00119305 -54.06136322]
[13.42522430 -41.65024948]
[21.84925652 -29.23913956]
[30.27328682 -16.82802773]
[38.69731903 -4.41691542]
[47.12134933 7.99419594]
[55.54538345 20.40530777]
[63.96941376 32.81641769]
[70.32434082 36.58402252]
[72.42417145 45.46986008]
[80.66680908 58.00217819]
[86.96626282 61.86180496]
[88.93664551 70.77724457]
[96.99613953 83.42811584]
[91.31285095 69.54646301]
[90.57614899 54.56456757]
[94.87010956 40.19230652]
[103.70466614 28.06998444]
[116.07152557 19.58112335]
[130.55926514 15.69455433]
[145.51440430 16.85385132]
[159.23010254 22.92670441]
[170.14099121 33.22001648]
[177.00183105 46.55902100]
[179.02957153 61.42132950]
[175.99281311 76.11071014]
[168.23811340 88.95067596]
[156.65051270 98.47579193]
[142.55253601 103.59896088]
[127.55316162 103.73548126]
[113.36204529 98.86855316]
[126.46012878 106.17883301]
[139.55821228 113.48910522]
[155.93882751 112.70970154]
[164.57528687 126.65042114]
[156.58312988 140.97024536]
[140.18402100 140.93817139]
[132.24794006 126.58718872]
[119.14985657 119.27691650]
[106.05176544 111.96663666]
[93.89091492 120.74808502]
[96.71020508 135.48075867]
[99.52950287 150.21342468]
[111.88985443 163.86505127]
[105.48136139 180.20379639]
[108.51462555 194.89390564]
[121.43541718 203.59394836]
[124.30231476 218.53501892]
[115.92852020 230.79940796]
[118.96177673 245.48951721]
[121.99504089 260.17962646]
[125.02830505 274.86972046]
[128.49450684 278.76260376]
[129.97535706 283.15615845]
[129.61222839 287.21127319]
[127.85871124 290.26617432]
[130.24832153 305.07461548]
[132.63792419 319.88305664]
[135.02752686 334.69149780]
[149.82675171 338.16299438]
[162.16802979 347.03775024]
[170.16943359 359.96237183]
[172.61077881 374.96597290]
[169.11979675 389.76062012]
[160.22883606 402.09024048]
[147.29368591 410.07461548]
[132.28688049 412.49624634]
[117.49684906 408.98577881]
[105.17894745 400.07861328]
[97.21157837 387.13296509]
[94.80970764 372.12298584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[6 196]
[7 195]
[8 194]
[9 193]
[12 190]
[13 189]
[16 187]
[17 186]
[18 185]
[19 158]
[20 157]
[21 155]
[22 154]
[23 152]
[24 151]
[25 150]
[26 149]
[27 148]
[28 147]
[29 146]
[30 145]
[31 144]
[33 143]
[34 142]
[40 53]
[41 52]
[42 51]
[43 50]
[54 138]
[55 137]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[73 117]
[74 116]
[76 113]
[77 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[85 106]
[86 105]
[87 104]
[88 103]
[89 102]
[90 101]
[92 99]
[93 98]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
