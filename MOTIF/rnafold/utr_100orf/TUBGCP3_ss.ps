%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAAGAAGCGGGGCAUUGUGGGAAGCGCCCGCGCUUUCGGCGGGUUCCGUUAAAAUGGCGCCCUGGUGGCCGGCGGCGCCCGCGCCUUAGCCUGUCAGGAGCAGGGAGCUUGCGGGGCGCAGGAAGGGCGCGGGCCGCGGUCCCUGCGCGUGCGGCGGCAGUGGCGGCUCUGCCCGGACCACCGUGCACGGCUCCGGGCGAGGAUGGCGACCCCGGACCAGAAGUCGCCGAACGUUCUGCUGCAGAACCUGUG\
CUGCAGGAUCCUGGGCAGGAGCGAAGCUGAUGUAGCCCAGCAGUUCCAGU\
) } def
/len { sequence length } bind def

/coor [
[70.51907349 233.90162659]
[70.52391815 218.09735107]
[81.76155853 206.98469543]
[81.60755920 191.98548889]
[81.45356750 176.98628235]
[81.29956818 161.98707581]
[64.59288788 156.79022217]
[49.38284683 147.04112244]
[36.91839981 133.18626404]
[28.00224686 145.24870300]
[19.08609581 157.31112671]
[10.16994572 169.37356567]
[1.25379467 181.43598938]
[-7.66235638 193.49842834]
[-16.57850647 205.56085205]
[-25.49465752 217.62329102]
[-28.05944252 226.33644104]
[-34.56478500 229.76315308]
[-43.60430527 241.73341370]
[-52.64382553 253.70367432]
[-61.68334198 265.67391968]
[-63.82530594 281.34948730]
[-77.66970062 286.84329224]
[-86.70922089 298.81353760]
[-95.74874115 310.78381348]
[-104.78826141 322.75405884]
[-113.82778168 334.72433472]
[-122.86729431 346.69458008]
[-131.90681458 358.66485596]
[-133.38400269 374.99731445]
[-148.37854004 381.63778687]
[-161.46534729 371.75509644]
[-159.18182373 355.51571655]
[-143.87707520 349.62533569]
[-134.83755493 337.65505981]
[-125.79803467 325.68481445]
[-116.75851440 313.71453857]
[-107.71899414 301.74429321]
[-98.67948151 289.77401733]
[-89.63996124 277.80377197]
[-88.14456177 262.98443604]
[-73.65360260 256.63439941]
[-64.61408234 244.66415405]
[-55.57456207 232.69389343]
[-46.53504181 220.72363281]
[-37.55709076 208.70713806]
[-28.64093781 196.64469910]
[-19.72478867 184.58227539]
[-10.80863667 172.51983643]
[-1.89248586 160.45741272]
[7.02366495 148.39497375]
[15.93981647 136.33255005]
[24.85596657 124.27011108]
[21.07267380 117.79425812]
[8.12096405 125.36084747]
[-4.83086252 132.92723083]
[-12.39704704 119.97528839]
[0.55437976 112.40913391]
[13.50609016 104.84255219]
[9.72279739 98.36669159]
[-5.16351032 100.21002197]
[-20.04981804 102.05334473]
[-34.93612671 103.89666748]
[-49.82243347 105.73999023]
[-64.69908142 107.65970612]
[-79.56568146 109.65576172]
[-94.43228149 111.65182495]
[-109.29888153 113.64788055]
[-124.19255829 121.74816895]
[-136.09925842 109.67891693]
[-127.79779053 94.89643097]
[-111.29493713 98.78128052]
[-96.42833710 96.78522491]
[-81.56173706 94.78916931]
[-66.69513702 92.79310608]
[-60.51542282 88.80902100]
[-51.66575623 90.85368347]
[-36.77944946 89.01036072]
[-21.89314270 87.16703796]
[-7.00683451 85.32370758]
[7.87947321 83.48038483]
[11.83608341 69.01161957]
[-0.04074016 59.84968185]
[-11.91756344 50.68774796]
[-23.79438782 41.52581406]
[-35.67121124 32.36387634]
[-47.54803467 23.20194244]
[-59.42485809 14.04000664]
[-71.30168152 4.87807178]
[-83.17850494 -4.28386354]
[-96.01362610 -3.40568662]
[-105.70942688 -11.23941612]
[-107.43191528 -23.18070030]
[-119.21405792 -32.46408463]
[-130.99618530 -41.74747086]
[-142.77833557 -51.03085709]
[-154.56047058 -60.31424332]
[-168.27319336 -53.70195389]
[-183.43522644 -53.69916534]
[-197.03923035 -60.25287247]
[-206.41020203 -72.01493073]
[-209.73133850 -86.61901855]
[-206.39614868 -101.15662384]
[-218.17828369 -110.44001007]
[-229.96041870 -119.72339630]
[-241.74255371 -129.00679016]
[-253.52468872 -138.29016113]
[-269.70797729 -143.34362793]
[-269.33200073 -160.29341125]
[-252.94052124 -164.62428284]
[-244.24130249 -150.07231140]
[-232.45916748 -140.78892517]
[-220.67703247 -131.50553894]
[-208.89489746 -122.22215271]
[-197.11276245 -112.93876648]
[-183.75881958 -119.58239746]
[-168.78303528 -119.76997375]
[-155.15509033 -113.41071320]
[-145.60066223 -101.71742249]
[-142.05630493 -86.97549438]
[-145.27708435 -72.09638214]
[-133.49494934 -62.81299591]
[-121.71280670 -53.52960968]
[-109.93067169 -44.24622345]
[-98.14852905 -34.96283722]
[-80.65114594 -33.36302185]
[-74.01657104 -16.16068649]
[-62.13974762 -6.99875212]
[-50.26292419 2.16318321]
[-38.38610077 11.32511902]
[-26.50927544 20.48705482]
[-14.63245201 29.64898872]
[-2.75562859 38.81092453]
[9.12119484 47.97285843]
[20.99801826 57.13479614]
[34.35611725 50.31121826]
[33.89419174 35.31833267]
[33.43226624 20.32544899]
[32.97034073 5.33256245]
[32.50841522 -9.66032314]
[24.34980774 -23.21567917]
[31.69149971 -36.17518616]
[31.22957420 -51.16807175]
[30.76764870 -66.16095734]
[22.60904121 -79.71631622]
[29.95073509 -92.67581940]
[29.48880959 -107.66870880]
[29.02688217 -122.66159058]
[28.56495667 -137.65447998]
[19.47657967 -151.30487061]
[26.99547005 -165.87876892]
[43.38684082 -166.38378906]
[51.78865051 -152.30039978]
[43.55784225 -138.11640930]
[44.01976776 -123.12351990]
[44.48169327 -108.13063049]
[44.94361877 -93.13774872]
[53.06918716 -80.65477753]
[45.76053619 -66.62288666]
[46.22246170 -51.62999725]
[46.68438721 -36.63711166]
[54.80995560 -24.15414619]
[47.50130081 -10.12224865]
[47.96322632 4.87063694]
[48.42515182 19.86352348]
[48.88707733 34.85640717]
[49.34900284 49.84929276]
[77.89988708 37.08454132]
[107.10951233 38.31861115]
[130.89624023 51.51137543]
[140.53804016 40.02070618]
[150.17985535 28.53004074]
[153.27616882 19.99130249]
[159.98013306 16.97155952]
[169.73939514 5.58048630]
[179.49867249 -5.81058741]
[189.25794983 -17.20166206]
[199.01722717 -28.59273529]
[208.77650452 -39.98381042]
[218.53576660 -51.37488174]
[217.07725525 -62.08942032]
[221.63629150 -71.65273285]
[230.50451660 -77.03839874]
[240.65505981 -76.68869781]
[250.64614868 -87.87699127]
[260.63726807 -99.06529236]
[263.44937134 -115.22152710]
[278.93817139 -120.60943604]
[291.17007446 -109.68640900]
[287.56195068 -93.68910980]
[271.82556152 -89.07419586]
[261.83444214 -77.88589478]
[251.84335327 -66.69760132]
[249.23880005 -47.50857162]
[229.92684937 -41.61560822]
[220.16757202 -30.22453499]
[210.40829468 -18.83345985]
[200.64901733 -7.44238663]
[190.88975525 3.94868708]
[181.13047791 15.33976078]
[171.37120056 26.73083496]
[161.67053223 38.17185593]
[152.02871704 49.66252136]
[142.38690186 61.15319061]
[146.10232544 65.64450073]
[149.34390259 70.48892212]
[152.07832336 75.63665771]
[154.27748108 81.03479767]
[168.96238708 77.97640228]
[183.64727783 74.91800690]
[198.33216858 71.85961151]
[213.01707458 68.80121613]
[227.70196533 65.74282074]
[231.33140564 50.91750717]
[241.04049683 39.14056778]
[254.90150452 32.75032806]
[270.16232300 33.01556778]
[283.79287720 39.88363266]
[293.08685303 51.99085617]
[296.19888306 66.93334198]
[292.51110840 81.74425507]
[282.75570679 93.48286438]
[268.86965942 99.81847382]
[253.61000061 99.49314117]
[240.00659180 92.57144928]
[230.76036072 80.42771912]
[216.07546997 83.48611450]
[201.39057922 86.54450989]
[186.70567322 89.60290527]
[172.02078247 92.66130066]
[157.33587646 95.71969604]
[157.42353821 102.87409210]
[156.62194824 109.98397827]
[154.94348145 116.93924713]
[152.41415405 123.63219452]
[165.16740417 131.52867126]
[177.92066956 139.42515564]
[190.67391968 147.32164001]
[203.42718506 155.21812439]
[216.22080994 163.04904175]
[229.05445862 170.81417847]
[241.88810730 178.57929993]
[254.72177124 186.34443665]
[268.97085571 180.49041748]
[283.76187134 184.10691833]
[293.47235107 195.60346985]
[294.53842163 210.43592834]
[307.37207031 218.20106506]
[323.18460083 218.72521973]
[330.06835938 231.93367004]
[342.90200806 239.69880676]
[355.73565674 247.46394348]
[368.56930542 255.22908020]
[381.40295410 262.99420166]
[398.08459473 266.02062988]
[399.79437256 282.88815308]
[384.05938721 289.20050049]
[373.63781738 275.82788086]
[360.80416870 268.06274414]
[347.97052002 260.29760742]
[335.13687134 252.53245544]
[322.30322266 244.76731873]
[307.40863037 244.79858398]
[299.60693359 231.03471375]
[286.77328491 223.26957703]
[273.13967896 229.20782471]
[258.44989014 225.94075012]
[248.38291931 214.51667786]
[246.95663452 199.17810059]
[234.12297058 191.41296387]
[221.28932190 183.64782715]
[208.45567322 175.88269043]
[201.14344788 175.11239624]
[195.53070068 167.97137451]
[182.77743530 160.07490540]
[170.02418518 152.17842102]
[157.27093506 144.28193665]
[144.51766968 136.38545227]
[143.44552612 141.25512695]
[141.88629150 146.15731812]
[139.82994080 151.04583740]
[145.10469055 165.08781433]
[150.37942505 179.12979126]
[155.65417480 193.17176819]
[170.64848328 197.16552734]
[180.40553284 209.23117065]
[181.17350769 224.72923279]
[172.65711975 237.70037842]
[158.13108826 243.15695190]
[143.18096924 239.00077820]
[133.55540466 226.83000183]
[132.95559692 211.32452393]
[141.61219788 198.44651794]
[136.33744812 184.40454102]
[131.06271362 170.36256409]
[125.78797150 156.32058716]
[118.41567230 157.69871521]
[103.67107391 160.45495605]
[96.29877472 161.83306885]
[96.45277405 176.83227539]
[96.60677338 191.83149719]
[96.76076508 206.83070374]
[108.22420502 217.71028137]
[108.55353546 233.51113892]
[97.55336761 244.85890198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 302]
[4 301]
[5 300]
[6 299]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[18 45]
[19 44]
[20 43]
[21 42]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[65 75]
[66 74]
[67 73]
[68 72]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[103 115]
[104 114]
[105 113]
[106 112]
[107 111]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[142 161]
[143 160]
[144 159]
[146 157]
[147 156]
[148 155]
[149 154]
[170 204]
[171 203]
[172 202]
[174 201]
[175 200]
[176 199]
[177 198]
[178 197]
[179 196]
[180 195]
[184 193]
[185 192]
[186 191]
[208 231]
[209 230]
[210 229]
[211 228]
[212 227]
[213 226]
[235 278]
[236 277]
[237 276]
[238 275]
[239 274]
[240 272]
[241 271]
[242 270]
[243 269]
[247 265]
[248 264]
[250 262]
[251 261]
[252 260]
[253 259]
[254 258]
[281 296]
[282 295]
[283 294]
[284 293]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
