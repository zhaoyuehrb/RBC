%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUGGGGCCAGAGUGGGCGAGGCGCGGAGGUCUGGCCUAUAAAGUAGUCGCGGAGACGGGGUGCUGGUUUGCGUCGUAGUCUCCUGCAGCGUCUGGGGUUUCCGUUGCAGUCCUCGGAACCAGGACCUCGGCGUGGCCUAGCGAGUUAUGGCGACGAAGGCCGUGUGCGUGCUGAAGGGCGACGGCCCAGUGCAGGGCAUCAUCAAUUUCGAGCAGAAGGAAAGUAAUGGACCAGUGAAGGUGUGGG\
) } def
/len { sequence length } bind def

/coor [
[74.23782349 227.70169067]
[67.64617920 242.91845703]
[56.25425339 254.93391418]
[41.45605469 262.30337524]
[25.05363846 264.14916992]
[9.03768063 260.26501465]
[0.97153711 272.91165161]
[-7.09460640 285.55828857]
[-15.16075039 298.20492554]
[-23.22689438 310.85153198]
[-31.29303741 323.49816895]
[-39.35918045 336.14480591]
[-47.42532349 348.79144287]
[-39.64542007 363.39462280]
[-40.29514694 379.83410645]
[-49.10209656 393.61935425]
[-63.57865143 401.03274536]
[-79.72390747 400.13198853]
[-87.62985229 412.87939453]
[-95.53579712 425.62677002]
[-98.74568176 442.27407837]
[-115.63099670 443.79809570]
[-121.76975250 427.99453735]
[-108.28319550 417.72082520]
[-100.37724304 404.97344971]
[-92.47129822 392.22604370]
[-99.69793701 380.65319824]
[-101.24597168 367.03088379]
[-96.75727081 354.00659180]
[-87.05250549 344.13619995]
[-73.98175049 339.38256836]
[-60.07195663 340.72531128]
[-52.00581360 328.07867432]
[-43.93967056 315.43203735]
[-35.87352753 302.78540039]
[-27.80738258 290.13876343]
[-19.74123955 277.49212646]
[-11.67509556 264.84548950]
[-3.60895228 252.19886780]
[-12.32669544 241.96603394]
[-17.82216835 229.67938232]
[-19.64328766 216.32658386]
[-17.63374519 202.98385620]
[-11.94636345 190.72930908]
[-3.03153086 180.55583191]
[8.39846134 173.29058838]
[21.42632103 169.52784729]
[35.00337219 169.58029175]
[48.03395844 173.45314026]
[56.41662216 161.01405334]
[64.79928589 148.57496643]
[73.18194580 136.13586426]
[65.49232483 127.50450897]
[60.39051437 117.38264465]
[58.11882782 106.50737000]
[58.71815872 95.63877869]
[62.03270721 85.50692749]
[67.72814941 76.76281738]
[57.42687988 65.85942841]
[47.12561035 54.95604324]
[36.82434082 44.05265808]
[26.52306938 33.14927292]
[16.22179985 22.24588394]
[1.12032878 17.52824402]
[-1.99595666 2.96328545]
[-12.29722595 -7.94010162]
[-22.59849548 -18.84348869]
[-32.89976501 -29.74687576]
[-43.20103455 -40.65026093]
[-53.50230408 -51.55364990]
[-64.56439972 -42.85017395]
[-82.78421021 -43.92855453]
[-95.86818695 -51.26406479]
[-108.95215607 -58.59957504]
[-122.03612518 -65.93508148]
[-137.85733032 -65.93486786]
[-145.17507935 -78.90790558]
[-158.25904846 -86.24341583]
[-171.34301758 -93.57892609]
[-184.42698669 -100.91443634]
[-200.80908203 -100.16661072]
[-209.41864014 -114.12395477]
[-201.39891052 -128.42834473]
[-184.99987793 -128.36466980]
[-177.09147644 -113.99840546]
[-164.00750732 -106.66289520]
[-150.92353821 -99.32738495]
[-137.83956909 -91.99187469]
[-122.95421600 -92.51678467]
[-114.70061493 -79.01905823]
[-101.61664581 -71.68354797]
[-88.53267670 -64.34803772]
[-75.44869995 -57.01252747]
[-64.61051941 -67.38237000]
[-71.36128998 -80.77741241]
[-78.11206055 -94.17245483]
[-84.86283875 -107.56748962]
[-91.61360931 -120.96253204]
[-98.36437988 -134.35757446]
[-113.57371521 -133.58557129]
[-127.77980042 -139.07255554]
[-138.52134705 -149.86788940]
[-143.93730164 -164.10119629]
[-143.08934021 -179.30648804]
[-136.12435913 -192.84934998]
[-124.24909973 -202.38339233]
[-109.52101135 -206.25679016]
[-94.49182129 -203.79844666]
[-81.76543427 -195.43431091]
[-73.54677582 -182.61347961]
[-71.25977325 -167.55726624]
[-75.30066681 -152.87425232]
[-84.96933746 -141.10833740]
[-78.21856689 -127.71330261]
[-71.46779633 -114.31826019]
[-64.71702576 -100.92322540]
[-57.96625137 -87.52818298]
[-51.21548080 -74.13314819]
[-42.59891891 -61.85491943]
[-32.29764938 -50.95153046]
[-21.99637985 -40.04814529]
[-11.69510937 -29.14475822]
[-1.39383960 -18.24137115]
[8.90742970 -7.33798409]
[23.27208519 -3.40022755]
[27.12518692 11.94461441]
[37.42645645 22.84800148]
[47.72772598 33.75138855]
[58.02899551 44.65477371]
[68.33026886 55.55816269]
[78.63153839 66.46154785]
[105.00484467 57.88475037]
[132.44143677 68.73365784]
[143.91180420 59.06770325]
[155.38217163 49.40174866]
[160.94914246 34.59231567]
[175.66746521 32.30754089]
[187.13783264 22.64158630]
[198.60820007 12.97563171]
[210.07856750 3.30967617]
[221.36396790 -6.57161474]
[232.46034241 -16.66470337]
[243.55671692 -26.75779152]
[254.65309143 -36.85087967]
[259.65567017 -51.86036682]
[274.27700806 -54.70046616]
[285.37338257 -64.79355621]
[296.40585327 -74.95644379]
[307.37402344 -85.18872070]
[318.34216309 -95.42100525]
[329.31033325 -105.65328979]
[340.27847290 -115.88556671]
[351.24661255 -126.11785126]
[350.24432373 -141.72328186]
[359.54907227 -154.29132080]
[374.76745605 -157.88772583]
[388.71386719 -150.81437683]
[394.80319214 -136.41110229]
[390.16024780 -121.47869110]
[376.97729492 -113.06775665]
[361.47891235 -115.14969635]
[350.51074219 -104.91741943]
[339.54260254 -94.68513489]
[328.57443237 -84.45285034]
[317.60629272 -74.22057343]
[306.63815308 -63.98828888]
[303.89797974 -57.14449692]
[295.46646118 -53.69717789]
[284.37008667 -43.60409164]
[280.16119385 -29.31652451]
[264.74618530 -25.75450134]
[253.64981079 -15.66141415]
[242.55343628 -5.56832600]
[231.45704651 4.52476168]
[230.91918945 7.98584127]
[228.69306946 11.36249924]
[224.83451843 13.87072659]
[219.74452209 14.78004265]
[208.27415466 24.44599724]
[196.80378723 34.11195374]
[185.33343506 43.77790833]
[180.58688354 57.89596939]
[165.04812622 60.87211609]
[153.57775879 70.53807068]
[142.10739136 80.20402527]
[146.21769714 94.62988281]
[161.06007385 96.79866028]
[175.90246582 98.96743774]
[190.74484253 101.13621521]
[203.26719666 91.49430847]
[218.92871094 93.61390686]
[228.43768311 106.23749542]
[226.15261841 121.87571716]
[213.42919922 131.25070190]
[197.81600952 128.80043030]
[188.57608032 115.97859955]
[173.73368835 113.80982208]
[158.89129639 111.64104462]
[144.04891968 109.47227478]
[141.04055786 113.78253174]
[137.64190674 117.54538727]
[133.93682861 120.72994995]
[145.03320312 130.82304382]
[156.12957764 140.91612244]
[171.23979187 137.91822815]
[185.05644226 144.31773376]
[192.36900330 157.47030640]
[190.55630493 172.23013306]
[201.65267944 182.32321167]
[212.74905396 192.41630554]
[223.84542847 202.50938416]
[238.72134399 198.42152405]
[253.43899536 203.04692078]
[263.30203247 214.90963745]
[265.16317749 230.22433472]
[258.42858887 244.10412598]
[245.24720764 252.12002563]
[229.82518005 251.71420288]
[217.08361816 243.01614380]
[211.08831787 228.80137634]
[213.75234985 213.60577393]
[202.65596008 203.51268005]
[191.55958557 193.41958618]
[180.46321106 183.32650757]
[165.94070435 186.52568054]
[152.15603638 180.48855591]
[144.47969055 167.33837891]
[146.03648376 152.01249695]
[134.94010925 141.91941833]
[123.84373474 131.82632446]
[119.92122650 137.41020203]
[114.82230377 142.48892212]
[119.11427307 156.86177063]
[123.40625000 171.23463440]
[137.42930603 178.52363586]
[142.11126709 193.61849976]
[134.67440796 207.56369019]
[119.53089142 212.08580017]
[105.66509247 204.50192261]
[101.30334473 189.31144714]
[109.03339386 175.52661133]
[104.74141693 161.15374756]
[100.44944763 146.78089905]
[85.62104034 144.51853943]
[77.23837280 156.95762634]
[68.85571289 169.39671326]
[60.47304916 181.83580017]
[70.43816376 195.18725586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[18 26]
[19 25]
[20 24]
[49 247]
[50 246]
[51 245]
[52 244]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[65 124]
[66 123]
[67 122]
[68 121]
[69 120]
[70 119]
[72 93]
[73 92]
[74 91]
[75 90]
[77 88]
[78 87]
[79 86]
[80 85]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[133 185]
[134 184]
[135 183]
[137 181]
[138 180]
[139 179]
[140 178]
[141 174]
[142 173]
[143 172]
[144 171]
[146 169]
[147 168]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
[186 199]
[187 198]
[188 197]
[189 196]
[202 230]
[203 229]
[204 228]
[208 224]
[209 223]
[210 222]
[211 221]
[232 243]
[233 242]
[234 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
