%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUGCGCGCCGGCGACCACGCCUAAAUAGCCGCAGCCUCUGCGCGUCGCCCUCCACGGUUACCCCGGCUCUCCGCCCCUCCUUCUCGCGGCGCUCGAGGGACCAUGGCCGAUCCUCGCGUGAGACAGAUCAAGAUCAAGACCGGCGUGGUGAAGCGGUUGGUCAAAGAAAAAGUGAUGUAUGAAAAAGAGGCAAAACAACAAG\
) } def
/len { sequence length } bind def

/coor [
[28.06057549 409.34103394]
[18.94118309 397.43151855]
[14.66798973 383.05307007]
[15.80212593 368.09860229]
[7.36137152 380.49835205]
[-1.07938290 392.89810181]
[-9.52013683 405.29785156]
[-11.76393032 414.15744019]
[-18.18645859 417.82156372]
[-26.81623840 430.09051514]
[-26.93471336 453.28457642]
[-47.59421158 462.07312012]
[-55.25949097 474.96664429]
[-62.92477036 487.86019897]
[-70.59004974 500.75375366]
[-70.25832367 517.14953613]
[-84.42971802 525.40203857]
[-98.52592468 517.02172852]
[-98.04597473 500.62963867]
[-83.48359680 493.08847046]
[-75.81831360 480.19491577]
[-68.15303802 467.30136108]
[-60.48775482 454.40783691]
[-63.90975571 448.16915894]
[-64.96453094 441.06332397]
[-63.47431183 433.96633911]
[-59.57803726 427.76959229]
[-53.71979141 423.26812744]
[-46.59860992 421.05865479]
[-39.08517838 421.46072388]
[-30.45540047 409.19180298]
[-21.91988182 396.85708618]
[-13.47912788 384.45733643]
[-5.03837299 372.05761719]
[3.40238118 359.65786743]
[10.36539936 346.37191772]
[15.75879765 332.37509155]
[21.15219688 318.37826538]
[26.54559517 304.38140869]
[31.93899345 290.38458252]
[37.33239365 276.38775635]
[26.94060707 257.86334229]
[33.71838760 237.43411255]
[53.64122391 228.56373596]
[57.94735336 214.19511414]
[62.25347900 199.82649231]
[66.55960083 185.45787048]
[70.86573029 171.08924866]
[75.17185974 156.72062683]
[79.47798157 142.35200500]
[62.58415222 128.54644775]
[53.73140335 108.60594177]
[54.82228851 86.81591797]
[65.62237549 67.85930634]
[56.43785095 55.99994278]
[47.25333023 44.14057541]
[32.68616486 37.96738052]
[31.01053810 23.16732979]
[21.82601547 11.30796337]
[12.64149475 -0.55140275]
[6.66984844 -3.40668750]
[3.51377845 -8.14000893]
[3.36389923 -12.91786480]
[-5.45287943 -25.05311966]
[-14.26965809 -37.18837357]
[-23.17916298 -49.25571442]
[-32.18087006 -61.25443649]
[-41.27425003 -73.18383026]
[-50.45877075 -85.04319763]
[-61.31611633 -85.78968811]
[-69.79410553 -92.25733948]
[-73.23786163 -102.11692810]
[-70.73741150 -112.03053284]
[-79.55419159 -124.16579437]
[-88.37097168 -136.30104065]
[-97.18775177 -148.43629456]
[-112.32330322 -146.16172791]
[-126.77840424 -151.19248962]
[-137.23138428 -162.37255859]
[-141.28022766 -177.13282776]
[-137.99452209 -192.08149719]
[-128.12931824 -203.78347778]
[-113.95155334 -209.54972839]
[-98.71919250 -208.05522156]
[-85.93249512 -199.64337158]
[-78.52977753 -186.24717712]
[-78.21210480 -170.94496155]
[-85.05249786 -157.25308228]
[-76.23571777 -145.11782837]
[-67.41893768 -132.98257446]
[-58.60216141 -120.84731293]
[-40.41059113 -114.30150604]
[-38.59940720 -94.22771454]
[-29.41488457 -82.36834717]
[-22.83074570 -79.00324249]
[-20.18214989 -70.25614166]
[-11.18044376 -58.25742340]
[-4.64864397 -54.79181671]
[-2.13440347 -46.00515366]
[6.68237543 -33.86989975]
[15.49915409 -21.73464394]
[24.50086021 -9.73592377]
[33.68538284 2.12344217]
[42.86990356 13.98280811]
[56.78012848 19.30774117]
[59.11269760 34.95605469]
[68.29721832 46.81541824]
[77.48173523 58.67478561]
[91.79374695 50.99567032]
[108.69963837 48.41724014]
[126.34163666 51.79152298]
[134.39843750 39.13893509]
[142.45524597 26.48634911]
[150.51203918 13.83376312]
[158.27589417 0.99933112]
[165.74269104 -12.01016331]
[173.20948792 -25.01965904]
[172.62654114 -41.40843964]
[186.66981506 -49.87712479]
[200.89279175 -41.71385193]
[200.66409302 -25.31629753]
[186.21897888 -17.55286217]
[178.75218201 -4.54336739]
[171.28538513 8.46612740]
[171.85151672 11.95087719]
[170.75492859 15.88309097]
[167.80366516 19.47692680]
[163.16462708 21.89056396]
[155.10783386 34.54315186]
[147.05102539 47.19573593]
[138.99423218 59.84832382]
[142.77735901 66.32427216]
[155.72926331 58.75801468]
[168.68115234 51.19175339]
[181.63317871 43.62570953]
[189.19900513 56.57785797]
[176.24742126 64.14365387]
[163.29551697 71.70991516]
[150.34361267 79.27617645]
[154.12675476 85.75212097]
[169.10517883 84.94795227]
[184.08360291 84.14378357]
[199.06202698 83.33961487]
[214.04046631 82.53544617]
[229.01889038 81.73127747]
[243.99731445 80.92711639]
[258.96914673 80.00820160]
[273.93350220 78.97459412]
[284.12185669 66.89268494]
[299.87619019 65.63701630]
[311.84970093 75.95256805]
[312.93875122 91.71929169]
[302.49719238 103.58306885]
[286.71981812 104.50534058]
[274.96710205 93.93893433]
[260.00274658 94.97254181]
[253.54336548 98.57131958]
[244.80148315 95.90554047]
[229.82305908 96.70970917]
[214.84463501 97.51387787]
[199.86619568 98.31804657]
[184.88777161 99.12221527]
[169.90934753 99.92638397]
[154.93092346 100.73055267]
[153.25250244 109.80927277]
[150.10716248 118.34867859]
[145.62744141 126.11760712]
[139.98123169 132.91389465]
[133.36589050 138.56956482]
[126.00154877 142.95491028]
[118.12394714 145.98127747]
[109.97698975 147.60256958]
[101.80524445 147.81544495]
[93.84660339 146.65812683]
[89.54048157 161.02674866]
[85.23435211 175.39537048]
[80.92822266 189.76399231]
[76.62210083 204.13261414]
[72.31597137 218.50123596]
[68.00984955 232.86985779]
[74.53975677 238.96305847]
[78.71463776 246.80924988]
[80.10619354 255.54341125]
[78.59123993 264.21289062]
[74.36205292 271.88140869]
[67.90249634 277.73010254]
[59.93277359 281.14492798]
[51.32922363 281.78115845]
[45.93582153 295.77798462]
[40.54242325 309.77481079]
[35.14902496 323.77163696]
[29.75562859 337.76849365]
[24.36222839 351.76531982]
[36.01644135 342.32183838]
[50.27193069 337.65481567]
[65.25449371 338.37783813]
[78.99433899 344.39587402]
[89.68506622 354.91766357]
[95.92112732 368.55993652]
[96.88265991 383.52908325]
[92.44325256 397.85708618]
[83.18656158 409.66021729]
[70.32958221 417.38668823]
[55.56265640 420.02066040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 35]
[5 34]
[6 33]
[7 32]
[9 31]
[10 30]
[12 23]
[13 22]
[14 21]
[15 20]
[36 193]
[37 192]
[38 191]
[39 190]
[40 189]
[41 188]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[50 174]
[54 108]
[55 107]
[56 106]
[58 104]
[59 103]
[60 102]
[63 101]
[64 100]
[65 99]
[66 97]
[67 96]
[68 94]
[69 93]
[73 91]
[74 90]
[75 89]
[76 88]
[111 131]
[112 130]
[113 129]
[114 128]
[115 124]
[116 123]
[117 122]
[140 164]
[141 163]
[142 162]
[143 161]
[144 160]
[145 159]
[146 158]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
