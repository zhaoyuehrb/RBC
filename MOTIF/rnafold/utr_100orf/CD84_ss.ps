%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGAAGAAAACUCAAGUGAAACUGACUCUGCUAGAACAGUGCCGUGCUUUUCCACAGAAGGUUAGACCCUGAAAGAGAUGGCUCAGCACCACCUAUGGAUCUUGCUCCUUUGCCUGCAAACCUGGCCGGAAGCAGCUGGAAAAGACUCAGAAAUCUUCACAGUGAAUGGGAUUCUGG\
) } def
/len { sequence length } bind def

/coor [
[127.03388214 139.47180176]
[119.59804535 140.45074463]
[115.21247101 154.79531860]
[110.82689667 169.13989258]
[120.27249908 181.45086670]
[120.64428711 196.96348572]
[111.79930115 209.71282959]
[97.13861084 214.79652405]
[82.29956055 210.25976562]
[72.98806000 197.84704590]
[72.78457642 182.33131409]
[81.76734924 169.67866516]
[96.48232269 164.75431824]
[100.86789703 150.40974426]
[105.25347137 136.06517029]
[99.59315491 131.14472961]
[89.75226593 142.46537781]
[83.89127350 156.27293396]
[68.94835663 154.96556091]
[65.57416534 140.34999084]
[78.43162537 132.62449646]
[88.27250671 121.30384827]
[82.61218262 116.38340759]
[69.01757050 122.72267914]
[55.42295074 129.06195068]
[41.82833481 135.40122986]
[36.68086624 147.24771118]
[25.20481491 152.24095154]
[13.78494740 148.19891357]
[0.08176576 154.29995728]
[-13.62141609 160.40100098]
[-25.63191605 172.36697388]
[-40.45508194 164.13835144]
[-36.65150070 147.61657715]
[-19.72246552 146.69783020]
[-6.01928377 140.59677124]
[7.68389797 134.49572754]
[17.20134735 119.76593781]
[35.48906326 121.80661011]
[49.08367920 115.46733856]
[62.67829514 109.12805939]
[76.27291107 102.78878784]
[77.84083557 87.87095642]
[65.86130524 78.84373474]
[53.88177490 69.81651306]
[41.90224075 60.78928375]
[29.92270851 51.76205826]
[21.15920639 49.08555984]
[17.81471062 42.47126770]
[5.99455023 33.23634338]
[-5.82561111 24.00142097]
[-17.64577293 14.76649952]
[-29.46593475 5.53157759]
[-40.20239639 7.48238754]
[-50.03174591 3.27409720]
[-55.78822327 -5.47427893]
[-55.76423645 -15.72672844]
[-67.25490570 -25.36854172]
[-78.74557495 -35.01035690]
[-85.22353363 -36.54280853]
[-89.32202148 -40.53050613]
[-90.46135712 -45.19473648]
[-101.60853577 -55.23169708]
[-112.75570679 -65.26865387]
[-128.57226562 -71.37379456]
[-127.08417511 -88.26231384]
[-110.44372559 -91.50758362]
[-102.71874237 -76.41582489]
[-91.57157135 -66.37886810]
[-80.42440033 -56.34190750]
[-69.10375977 -46.50102234]
[-57.61309052 -36.85921097]
[-46.12242508 -27.21739578]
[-26.89858246 -25.29298019]
[-20.23101234 -6.28858376]
[-8.41085052 2.94633818]
[3.40931082 12.18126011]
[15.22947216 21.41618156]
[27.04963303 30.65110397]
[38.94993210 39.78252792]
[50.92946625 48.80974960]
[62.90900040 57.83697510]
[74.88853455 66.86420441]
[86.86806488 75.89142609]
[101.84008789 74.97570038]
[112.63018036 64.55582428]
[123.42028046 54.13594818]
[134.21037292 43.71607208]
[145.00047302 33.29619598]
[128.90640259 23.64913559]
[121.21114349 1.54896414]
[124.07327271 -13.17544365]
[126.93540955 -27.89985085]
[121.08766937 -43.22094727]
[131.64080811 -55.77337265]
[147.73866272 -52.64426804]
[152.82113647 -37.05258942]
[141.65982056 -25.03771591]
[138.79768372 -10.31330872]
[135.93554688 4.41109896]
[142.00317383 8.81948853]
[150.82015991 -3.31562018]
[162.95512390 5.50156116]
[154.13842773 17.63626671]
[160.20605469 22.04465675]
[173.32534790 14.77251244]
[186.44465637 7.50036812]
[199.56394958 0.22822379]
[212.61927795 -7.15812969]
[225.60966492 -14.65812969]
[227.82284546 -25.34359169]
[235.40684509 -32.88075256]
[245.67462158 -34.94086456]
[255.17153931 -31.07799149]
[268.41574097 -38.12006378]
[281.65997314 -45.16213989]
[282.82888794 -60.54515457]
[292.14712524 -72.84042358]
[306.64129639 -78.12457275]
[321.68637085 -74.71144104]
[332.48150635 -63.69015503]
[335.58200073 -48.57756424]
[329.99853516 -34.19604111]
[317.51272583 -25.13467598]
[302.10879517 -24.28491783]
[288.70202637 -31.91792488]
[275.45782471 -24.87585068]
[262.21362305 -17.83377838]
[253.22795105 -0.73064053]
[233.10966492 -1.66774857]
[220.11927795 5.83225155]
[215.88679504 11.91671181]
[206.83609009 13.34751892]
[193.71679688 20.61966324]
[180.59750366 27.89180756]
[167.47819519 35.16395187]
[155.42034912 44.08629227]
[144.63024902 54.50616837]
[133.84014893 64.92604828]
[123.05005646 75.34592438]
[112.25996399 85.76579285]
[126.72471619 81.79454041]
[140.55924988 75.99749756]
[155.55735779 76.23554230]
[169.20095825 82.46870422]
[179.19935608 93.65048218]
[183.87388611 107.90350342]
[182.43971252 122.83478546]
[175.13647461 135.93881226]
[162.06211853 128.58618164]
[170.01089478 141.30690002]
[177.95968628 154.02761841]
[185.90847778 166.74833679]
[193.85726929 179.46905518]
[210.30606079 187.71781921]
[210.26565552 205.25482178]
[218.43524170 217.83488464]
[226.71429443 230.34317017]
[235.10218811 242.77873230]
[243.49008179 255.21429443]
[251.87797546 267.64987183]
[265.74774170 277.40002441]
[260.21817017 293.42687988]
[243.28689575 292.55007935]
[239.44241333 276.03775024]
[231.05451965 263.60220337]
[222.66662598 251.16662598]
[214.27873230 238.73106384]
[207.91384888 234.93333435]
[205.85517883 226.00447083]
[197.68559265 213.42440796]
[185.90663147 210.59465027]
[179.00152588 200.15666199]
[181.13655090 187.41784668]
[173.18775940 174.69712830]
[165.23896790 161.97640991]
[157.29017639 149.25569153]
[149.34138489 136.53497314]
[141.90554810 137.51391602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[23 42]
[24 41]
[25 40]
[26 39]
[29 37]
[30 36]
[31 35]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[57 73]
[58 72]
[59 71]
[62 70]
[63 69]
[64 68]
[85 141]
[86 140]
[87 139]
[88 138]
[89 137]
[91 100]
[92 99]
[93 98]
[105 136]
[106 135]
[107 134]
[108 133]
[109 131]
[110 130]
[114 128]
[115 127]
[116 126]
[150 178]
[151 177]
[152 176]
[153 175]
[154 174]
[156 171]
[157 170]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
