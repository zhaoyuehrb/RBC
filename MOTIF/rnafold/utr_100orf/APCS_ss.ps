%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAUGAAUAUCAGACGCUAGGGGGACAGCCACUGUGUUGUCUGCUACCCUCAUCCUGGUCACUGCUUCUGCUAUAACAGCCCUAGGCCAGGAAUAUGAACAAGCCGCUGCUUUGGAUCUCUGUCCUCACCAGCCUCCUGGAAGCCUUUGCUCACACAGACCUCAGUGGGAAGGUGUUUGUAUUUCCUAGAGAAU\
) } def
/len { sequence length } bind def

/coor [
[194.90969849 440.82211304]
[193.23872375 425.91546631]
[191.56774902 411.00885010]
[189.04403687 408.53091431]
[187.60083008 404.70294189]
[187.86158752 400.04876709]
[190.19093323 395.35171509]
[189.23475647 380.38220215]
[188.27857971 365.41271973]
[187.32238770 350.44323730]
[186.36621094 335.47372437]
[182.79829407 328.99139404]
[185.51608276 320.25827026]
[184.79872131 305.27542114]
[184.08137512 290.29257202]
[183.36402893 275.30975342]
[182.64668274 260.32690430]
[163.43730164 241.06053162]
[169.63771057 218.03479004]
[161.49154663 205.43955994]
[153.34536743 192.84431458]
[145.19920349 180.24908447]
[137.05303955 167.65385437]
[128.90687561 155.05860901]
[120.76071167 142.46337891]
[106.27699280 138.56184387]
[92.90647125 145.36103821]
[79.53594971 152.16023254]
[66.16542053 158.95944214]
[52.79489899 165.75863647]
[39.42437744 172.55783081]
[34.76752090 187.66046143]
[20.75660515 194.97276306]
[5.70406103 190.15649414]
[-1.45970559 176.06904602]
[3.51544094 161.06826782]
[17.67783356 154.05384827]
[32.62517929 159.18731689]
[45.99570084 152.38810730]
[59.36622620 145.58891296]
[72.73674774 138.78971863]
[86.10726929 131.99050903]
[99.47779846 125.19131470]
[80.33496094 111.83441162]
[81.50720215 90.68557739]
[71.46432495 79.54373932]
[61.42143631 68.40190125]
[47.85309982 70.86591339]
[34.94246674 66.33690643]
[26.02915573 56.09981918]
[23.36254311 42.90109634]
[27.53482819 30.21232986]
[17.67089462 18.91176414]
[7.80696201 7.61119556]
[-2.32444119 -3.45020866]
[-12.71751785 -14.26612091]
[-23.11059570 -25.08203316]
[-33.50367355 -35.89794540]
[-43.89674759 -46.71385574]
[-54.28982544 -57.52976990]
[-64.68289948 -68.34568024]
[-75.07598114 -79.16159058]
[-91.79271698 -76.61986542]
[-106.58566284 -84.46128082]
[-113.72213745 -99.42305756]
[-110.57045746 -115.52805328]
[-121.13468933 -126.17685699]
[-131.69891357 -136.82565308]
[-146.31059265 -132.26959229]
[-161.36380005 -135.03717041]
[-173.39942932 -144.49244690]
[-179.65177917 -158.46264648]
[-178.68411255 -173.73753357]
[-170.71879578 -186.80705261]
[-157.58618164 -194.66790771]
[-142.30406189 -195.51374817]
[-128.38415527 -189.15019226]
[-119.02515411 -177.03956604]
[-116.37768555 -161.96476746]
[-121.05011749 -147.38989258]
[-110.48588562 -136.74108887]
[-99.92165375 -126.09227753]
[-86.96639252 -129.34403992]
[-73.99283600 -125.73793030]
[-64.42118835 -116.11354828]
[-60.82954025 -102.91141510]
[-64.26007080 -89.55467224]
[-53.86698914 -78.73875427]
[-43.47391510 -67.92284393]
[-33.08083725 -57.10693359]
[-22.68775940 -46.29102325]
[-12.29468250 -35.47510910]
[-1.90160608 -24.65919685]
[8.49147034 -13.84328556]
[12.00185108 -13.41141129]
[15.47570229 -11.25073910]
[18.09955406 -7.39787149]
[19.10752869 -2.25273728]
[28.97146225 9.04783058]
[38.83539581 20.34839821]
[55.12491608 18.35956764]
[69.53649139 26.55044365]
[76.29705811 41.86755371]
[72.56327057 58.35902023]
[82.60615540 69.50085449]
[92.64904022 80.64269257]
[116.35877228 83.90162659]
[123.40888214 109.32198334]
[133.45176697 98.18015289]
[143.49464417 87.03831482]
[153.53753662 75.89647675]
[148.91651917 61.31589127]
[152.19247437 46.47793961]
[162.38783264 35.34594345]
[176.69061279 30.84192085]
[191.22955322 34.07997894]
[201.27243042 22.93814278]
[211.31530762 11.79630661]
[221.35820007 0.65447098]
[224.24523926 -15.48854733]
[239.75885010 -20.80456352]
[251.93995667 -9.82491493]
[248.25767517 6.15547609]
[232.50003052 10.69735432]
[222.45715332 21.83918953]
[212.41426086 32.98102570]
[202.37138367 44.12285995]
[207.09642029 58.24871063]
[204.09649658 72.94076538]
[194.07917786 84.23322296]
[179.65983582 89.02690125]
[164.67936707 85.93936157]
[154.63648987 97.08119965]
[144.59359741 108.22303009]
[134.55072021 119.36486816]
[133.35594177 134.31721497]
[141.50210571 146.91244507]
[149.64828491 159.50769043]
[157.79444885 172.10292053]
[165.94061279 184.69815063]
[174.08677673 197.29339600]
[182.23294067 209.88862610]
[197.68930054 209.30593872]
[211.27485657 219.44177246]
[215.89163208 237.28913879]
[229.66838074 243.22219849]
[243.44512939 249.15525818]
[257.22189331 255.08831787]
[270.99862671 261.02139282]
[277.61715698 260.62930298]
[282.67529297 263.25186157]
[285.11532593 267.36959839]
[298.69586182 273.73895264]
[312.27639771 280.10833740]
[325.85696411 286.47769165]
[339.43750000 292.84707642]
[351.99218750 283.99975586]
[367.28997803 282.63107300]
[381.21582031 289.10922241]
[390.02374268 301.69158936]
[391.34445190 316.99359131]
[384.82269287 330.89904785]
[372.21276855 339.66751099]
[356.90670776 340.94024658]
[343.02175903 334.37493896]
[334.29287720 321.73757935]
[333.06811523 306.42761230]
[319.48757935 300.05822754]
[305.90704346 293.68887329]
[292.32650757 287.31948853]
[278.74594116 280.95013428]
[265.06558228 274.79812622]
[251.28881836 268.86508179]
[237.51206970 262.93200684]
[223.73532104 256.99896240]
[209.95857239 251.06588745]
[197.62951660 259.60955811]
[198.34686279 274.59240723]
[199.06420898 289.57522583]
[199.78157043 304.55807495]
[200.49891663 319.54092407]
[201.33570862 334.51754761]
[202.29188538 349.48703003]
[203.24806213 364.45654297]
[204.20425415 379.42602539]
[205.16043091 394.39550781]
[206.47438049 409.33786011]
[208.14537048 424.24450684]
[209.81634521 439.15112305]
[223.37384033 446.69924927]
[229.87484741 460.78884888]
[226.81962585 476.00216675]
[215.38293457 486.48937988]
[199.96244812 488.21795654]
[186.48762512 480.52322388]
[180.13984680 466.36395264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 136]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[45 106]
[46 105]
[47 104]
[52 100]
[53 99]
[54 98]
[55 94]
[56 93]
[57 92]
[58 91]
[59 90]
[60 89]
[61 88]
[62 87]
[66 82]
[67 81]
[68 80]
[108 135]
[109 134]
[110 133]
[111 132]
[116 127]
[117 126]
[118 125]
[119 124]
[145 176]
[146 175]
[147 174]
[148 173]
[149 172]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
