%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGGGGGCGCGCGGUCGGGGGCAGGUUGGGCCGGAAGAGGGGUCCGGGCCGGCACUGAGGCGGGAAGGGGGUCGGUUGAGAUGGGACGGCCGGAGUCUGCGGGCGGAGGGAGUCGCGGGCCUUUUGAGGGAGGAGGCAGAGCGCGCCGGGCCGGUGGCAUCUUCCUUACUUUGUCCAUCC\
) } def
/len { sequence length } bind def

/coor [
[254.94796753 276.60055542]
[260.49923706 262.66558838]
[272.47207642 253.62948608]
[287.39273071 252.11175537]
[275.50555420 242.96322632]
[263.61840820 233.81469727]
[251.73126221 224.66616821]
[239.84411621 215.51763916]
[227.95695496 206.36911011]
[213.15190125 204.73835754]
[206.93457031 190.18997192]
[195.04742432 181.04144287]
[183.16026306 171.89291382]
[171.27311707 162.74438477]
[159.38595581 153.59585571]
[147.42028809 144.55024719]
[135.37699890 135.60826111]
[121.54994202 145.33300781]
[105.27870178 149.91609192]
[88.40875244 148.83773804]
[72.85347748 142.22023010]
[60.37714386 130.81413269]
[52.39480972 115.91310883]
[37.61772537 118.48949432]
[22.84064102 121.06587982]
[8.08634186 123.76970673]
[-6.64407158 126.60076904]
[-21.37448502 129.43183899]
[-36.10489655 132.26289368]
[-50.83531189 135.09396362]
[-62.92714310 145.29681396]
[-76.88599396 140.10069275]
[-91.61640930 142.93174744]
[-106.34681702 145.76281738]
[-121.07723236 148.59387207]
[-135.80764771 151.42494202]
[-143.25917053 165.17298889]
[-157.82333374 170.86674500]
[-172.62341309 165.81779480]
[-180.67123413 152.41009521]
[-178.16688538 136.97434998]
[-166.29283142 126.79885101]
[-150.65563965 126.68814850]
[-138.63870239 136.69453430]
[-123.90829468 133.86346436]
[-109.17788696 131.03239441]
[-94.44747162 128.20133972]
[-79.71705627 125.37026978]
[-68.67884064 115.36991882]
[-53.66637421 120.36354828]
[-38.93596268 117.53248596]
[-24.20554924 114.70141602]
[-9.47513580 111.87035370]
[5.25527811 109.03929138]
[11.24603748 104.67787933]
[20.26425552 106.28879547]
[35.04133987 103.71240997]
[49.81842422 101.13602448]
[52.73680878 83.09816742]
[61.91850662 67.30014038]
[76.14675903 55.83549118]
[71.07055664 41.72052765]
[65.99436188 27.60556221]
[60.91816711 13.49059677]
[55.84197235 -0.62436765]
[41.95201492 -2.39249372]
[30.23791122 -9.94145679]
[22.95883751 -21.74743080]
[21.48925781 -35.47236633]
[26.05970001 -48.42693710]
[35.72278595 -58.09749985]
[30.89098167 -72.29798126]
[26.05917358 -86.49845886]
[21.22736740 -100.69894409]
[16.39556122 -114.89942169]
[1.23760545 -116.68803406]
[-11.63858318 -124.88355255]
[-19.67642784 -137.85874939]
[-21.28000832 -153.03739929]
[-16.13093185 -167.40576172]
[-5.25155354 -178.11097717]
[9.19801998 -183.02754211]
[24.34881401 -181.17926025]
[37.19263077 -172.93309021]
[45.17931747 -159.92634583]
[46.72311020 -144.74150085]
[41.51749420 -130.39352417]
[30.59604263 -119.73122406]
[35.42784882 -105.53074646]
[40.25965500 -91.33026886]
[45.09146118 -77.12978363]
[49.92326736 -62.92930603]
[65.83506012 -60.18296432]
[78.26703644 -49.73252487]
[83.77101898 -34.35306931]
[80.75833893 -18.20318604]
[69.95693207 -5.70056391]
[75.03313446 8.41440105]
[80.10932922 22.52936554]
[85.18552399 36.64432907]
[90.26171875 50.75929642]
[101.51688385 49.82849121]
[112.69525146 51.43754959]
[123.23094177 55.50500870]
[132.59060669 61.82495880]
[140.30041504 70.07746887]
[145.97007751 79.84475708]
[149.31256104 90.63238525]
[150.15867615 101.89422607]
[148.46559143 113.06017303]
[144.31898499 123.56497192]
[156.36228943 132.50695801]
[165.14256287 135.12037659]
[168.53450012 141.70869446]
[180.42164612 150.85722351]
[192.30879211 160.00575256]
[204.19595337 169.15428162]
[216.08309937 178.30281067]
[231.73841858 180.58793640]
[237.10548401 194.48196411]
[248.99264526 203.63049316]
[260.87979126 212.77902222]
[272.76693726 221.92755127]
[284.65411377 231.07608032]
[296.54125977 240.22460938]
[308.33300781 242.25779724]
[313.55285645 251.53837585]
[326.58618164 258.96350098]
[342.40701294 259.07186890]
[349.63555908 272.09481812]
[362.66885376 279.51995850]
[375.70217896 286.94509888]
[388.73550415 294.37020874]
[401.83242798 301.68258667]
[414.99197388 308.88165283]
[428.15148926 316.08071899]
[441.31103516 323.27978516]
[457.13137817 323.11505127]
[464.58364868 336.01129150]
[477.74319458 343.21035767]
[490.90270996 350.40942383]
[504.12390137 357.49462891]
[517.40576172 364.46548462]
[526.48468018 365.68887329]
[530.85516357 371.67300415]
[544.01470947 378.87207031]
[557.17419434 386.07113647]
[570.33374023 393.27020264]
[583.49328613 400.46923828]
[600.29089355 402.76657104]
[602.73339844 419.54367065]
[587.28808594 426.53506470]
[576.29425049 413.62878418]
[563.13470459 406.42971802]
[549.97515869 399.23065186]
[536.81561279 392.03161621]
[523.65606689 384.83255005]
[510.43490601 377.74731445]
[497.15304565 370.77648926]
[489.75000000 370.45117188]
[483.70367432 363.56896973]
[470.54412842 356.36990356]
[457.38458252 349.17083740]
[442.50549316 349.85049438]
[434.11196899 336.43933105]
[420.95245361 329.24026489]
[407.79290771 322.04119873]
[394.63336182 314.84213257]
[387.23703003 314.38909912]
[381.31036377 307.40353394]
[368.27703857 299.97842407]
[355.24374390 292.55328369]
[342.21041870 285.12814331]
[327.32180786 285.55087280]
[319.16104126 271.99682617]
[306.12771606 264.57168579]
[310.49740601 278.92111206]
[306.79238892 293.45632935]
[296.08685303 303.96307373]
[281.48474121 307.39501953]
[267.21972656 302.75717163]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 125]
[5 124]
[6 123]
[7 122]
[8 121]
[9 120]
[11 118]
[12 117]
[13 116]
[14 115]
[15 114]
[16 112]
[17 111]
[23 58]
[24 57]
[25 56]
[26 54]
[27 53]
[28 52]
[29 51]
[30 50]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[61 101]
[62 100]
[63 99]
[64 98]
[65 97]
[71 92]
[72 91]
[73 90]
[74 89]
[75 88]
[127 176]
[128 175]
[130 173]
[131 172]
[132 171]
[133 170]
[134 168]
[135 167]
[136 166]
[137 165]
[139 163]
[140 162]
[141 161]
[142 159]
[143 158]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
