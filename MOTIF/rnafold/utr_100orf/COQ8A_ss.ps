%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCCCGCGGGGCGGGGCUUGUGAGCUGGGGCUCCCCCGGAGCGGGCGAGUUGGUAAACAGAUCCGGAGCGCGUGGCGGGCGUCAGCGCGGUGGCCAGCGCGCAGAGGCGGGCGCGGAGGCGGCUAGAAGGUGACCGCGGAUCCCAGCUUCCUGCAGCCAGCCCUGAAGGAUGGCUGCCAUAUUGGGAGACACCAUCAUGGUGGCUAAAGGCCUUGUCAAGCUGACCCAGGCGGCCGUGGAAACCCACCUGCA\
GCACUUGGGCAUCGGAG\
) } def
/len { sequence length } bind def

/coor [
[502.75848389 502.01831055]
[499.10446167 485.58987427]
[502.06277466 468.98452759]
[511.20541382 454.76672363]
[502.47262573 442.57089233]
[493.73986816 430.37503052]
[485.00708008 418.17919922]
[462.54751587 418.76828003]
[445.27105713 404.07699585]
[442.18658447 381.39620972]
[428.86486816 374.50189209]
[415.54312134 367.60760498]
[402.22140503 360.71328735]
[388.89965820 353.81896973]
[375.57794189 346.92465210]
[363.98294067 350.28952026]
[352.83917236 344.68515015]
[348.34637451 332.62051392]
[335.10488892 325.57336426]
[321.86337280 318.52621460]
[308.62185669 311.47906494]
[319.08822632 322.22406006]
[319.64746094 337.21362305]
[310.01080322 348.70861816]
[295.15371704 350.77416992]
[282.74688721 342.34378052]
[279.19604492 327.77014160]
[286.33602905 314.57626343]
[275.51800537 324.96713257]
[264.69998169 335.35800171]
[253.88192749 345.74887085]
[243.06388855 356.13973999]
[232.24586487 366.53060913]
[225.01107788 381.86337280]
[208.27471924 379.15588379]
[206.24333191 362.32406616]
[221.85499573 355.71255493]
[232.67303467 345.32168579]
[243.49107361 334.93081665]
[254.30909729 324.53994751]
[265.12713623 314.14910889]
[275.94519043 303.75823975]
[284.59301758 301.22698975]
[293.28396606 300.62939453]
[282.22967529 290.49023438]
[271.17535400 280.35107422]
[260.12106323 270.21191406]
[249.06677246 260.07278442]
[242.03936768 257.87561035]
[237.94445801 249.75277710]
[227.00755310 239.48707581]
[216.07066345 229.22138977]
[205.13377380 218.95570374]
[194.19688416 208.69001770]
[183.25999451 198.42431641]
[172.32310486 188.15863037]
[171.95973206 203.15423584]
[161.17332458 213.57792664]
[146.17407227 213.42834473]
[135.59770203 202.79161072]
[135.53347778 187.79174805]
[146.01837158 177.06483459]
[161.01696777 176.78726196]
[150.81437683 165.79148865]
[140.61178589 154.79570007]
[130.40919495 143.79992676]
[120.20660400 132.80415344]
[110.00401306 121.80837250]
[93.11201477 131.12788391]
[69.71637726 125.77632904]
[52.42253876 102.72982788]
[38.06374359 98.39104462]
[23.70495033 94.05226135]
[9.34615707 89.71347809]
[0.26410237 90.22859955]
[-5.15238047 85.24127197]
[-19.46029663 80.73754883]
[-33.76821136 76.23381805]
[-48.07612610 71.73009491]
[-63.95876312 75.81346130]
[-75.24156189 63.91259766]
[-70.31774139 48.27008820]
[-54.25251007 44.97760773]
[-43.57239914 57.42217636]
[-29.26448441 61.92590332]
[-14.95656872 66.42963409]
[-0.64865363 70.93335724]
[13.68493843 75.35468292]
[28.04373360 79.69346619]
[42.40252686 84.03224945]
[56.76132202 88.37103271]
[65.49410248 76.17519379]
[56.76132202 63.97934723]
[48.02854156 51.78350830]
[33.70342255 45.06773758]
[32.58465195 30.21520805]
[23.85187149 18.01936531]
[15.11909103 5.82352448]
[-0.22033373 3.11431837]
[-8.90288067 -9.37840080]
[-6.22553492 -23.98550224]
[-14.95831490 -36.18134308]
[-23.69109535 -48.37718582]
[-32.42387390 -60.57302856]
[-41.15665436 -72.76886749]
[-56.67370605 -72.74134064]
[-69.22367859 -81.86701202]
[-73.98084259 -96.63687897]
[-69.11598206 -111.37162781]
[-56.49972534 -120.40544128]
[-40.98329163 -120.26464081]
[-28.53305626 -111.00335693]
[-23.93639374 -96.18275452]
[-28.96081352 -81.50164795]
[-20.22803497 -69.30580902]
[-11.49525356 -57.10996628]
[-2.76247358 -44.91412354]
[5.97030640 -32.71828079]
[20.66125870 -30.54767609]
[29.69127274 -18.30376053]
[27.31493187 -2.90925598]
[36.04771423 9.28658581]
[44.78049469 21.48242760]
[58.48098373 27.32587051]
[60.22438431 43.05072784]
[68.95716095 55.24657059]
[77.68994141 67.44241333]
[84.79018402 65.02650452]
[79.95859528 50.82595062]
[94.15922546 45.99458313]
[98.99066162 60.19470215]
[106.09090424 57.77879715]
[105.57315826 42.78773499]
[98.98371887 27.16673660]
[112.17010498 16.51049042]
[126.06025696 26.23160172]
[120.56422424 42.26999283]
[121.08196259 57.26105499]
[134.18371582 89.28210449]
[120.99978638 111.60578156]
[131.20237732 122.60155487]
[141.40496826 133.59733582]
[151.60755920 144.59310913]
[161.81015015 155.58889771]
[172.01274109 166.58467102]
[182.58879089 177.22174072]
[193.52568054 187.48742676]
[204.46257019 197.75311279]
[215.39945984 208.01881409]
[226.33634949 218.28450012]
[237.27325439 228.55018616]
[248.21014404 238.81587219]
[259.20593262 249.01846313]
[270.26022339 259.15762329]
[281.31451416 269.29678345]
[292.36880493 279.43594360]
[303.42312622 289.57510376]
[315.66900635 298.23754883]
[328.91052246 305.28469849]
[342.15203857 312.33184814]
[355.39355469 319.37899780]
[373.79492188 318.33135986]
[382.47225952 333.60293579]
[395.79397583 340.49725342]
[409.11572266 347.39154053]
[422.43743896 354.28585815]
[435.75915527 361.18017578]
[449.08090210 368.07449341]
[456.83602905 361.71820068]
[466.13110352 358.08187866]
[476.04861450 357.49392700]
[485.61889648 359.98333740]
[493.91516113 365.27954102]
[500.14297485 372.84167480]
[514.45086670 368.33795166]
[528.75878906 363.83422852]
[543.06671143 359.33050537]
[557.37463379 354.82678223]
[571.68255615 350.32302856]
[585.99047852 345.81930542]
[600.29840088 341.31558228]
[614.60626221 336.81185913]
[628.91418457 332.30813599]
[636.26257324 318.57354736]
[650.83697510 314.20993042]
[663.88555908 321.30014038]
[678.19348145 316.79641724]
[692.50140381 312.29269409]
[699.58251953 298.16354370]
[714.60662842 293.25921631]
[728.66009521 300.48934937]
[733.40533447 315.56445312]
[726.02697754 329.54071045]
[710.90258789 334.12628174]
[697.00512695 326.60061646]
[682.69720459 331.10433960]
[668.38928223 335.60806274]
[661.75457764 348.89398193]
[647.30847168 353.66522217]
[633.41790771 346.61605835]
[619.10998535 351.11978149]
[604.80212402 355.62350464]
[590.49420166 360.12722778]
[576.18627930 364.63095093]
[561.87835693 369.13467407]
[547.57043457 373.63839722]
[533.26251221 378.14215088]
[518.95458984 382.64587402]
[504.64669800 387.14959717]
[504.12252808 395.14297485]
[501.58584595 402.74127197]
[497.20291138 409.44641113]
[505.93569946 421.64227295]
[514.66845703 433.83810425]
[523.40124512 446.03393555]
[536.26300049 442.26699829]
[549.63720703 442.63555908]
[562.22912598 447.08999634]
[572.82391357 455.18572998]
[580.40411377 466.12765503]
[584.24707031 478.84820557]
[583.99407959 492.11141968]
[579.68353271 504.63314819]
[571.74615479 515.20526123]
[580.19592285 527.59887695]
[588.64575195 539.99243164]
[597.09552002 552.38604736]
[605.68737793 564.68157959]
[614.42016602 576.87738037]
[623.15295410 589.07324219]
[631.95574951 601.21862793]
[640.82830811 613.31317139]
[649.77032471 625.35644531]
[658.78143311 637.34808350]
[673.25732422 643.73242188]
[674.71759033 658.55529785]
[683.72869873 670.54693604]
[700.84222412 677.39062500]
[702.23571777 694.89990234]
[711.38427734 706.78704834]
[720.53277588 718.67419434]
[729.68133545 730.56134033]
[745.03924561 736.31164551]
[747.47106934 752.52947998]
[734.47515869 762.53131104]
[719.42053223 756.02819824]
[717.79418945 739.70989990]
[708.64562988 727.82269287]
[699.49713135 715.93554688]
[690.34857178 704.04840088]
[678.41967773 702.18634033]
[670.69787598 692.39001465]
[671.73706055 679.55804443]
[662.72595215 667.56640625]
[648.89459229 662.03979492]
[646.78979492 646.35925293]
[637.77868652 634.36761475]
[631.27233887 630.92095947]
[628.73376465 622.18572998]
[619.86120605 610.09118652]
[613.39495850 606.56994629]
[610.95709229 597.80603027]
[602.22436523 585.61016846]
[593.49157715 573.41430664]
[589.04418945 571.76770020]
[585.56823730 567.33032227]
[584.70196533 560.83581543]
[576.25213623 548.44226074]
[567.80236816 536.04864502]
[559.35253906 523.65509033]
[543.10455322 527.43743896]
[526.61633301 524.66741943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 215]
[5 214]
[6 213]
[7 212]
[10 168]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[18 161]
[19 160]
[20 159]
[21 158]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[44 157]
[45 156]
[46 155]
[47 154]
[48 153]
[50 152]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[71 91]
[72 90]
[73 89]
[74 88]
[76 87]
[77 86]
[78 85]
[79 84]
[92 127]
[93 126]
[94 125]
[96 123]
[97 122]
[98 121]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[132 138]
[133 137]
[174 209]
[175 208]
[176 207]
[177 206]
[178 205]
[179 204]
[180 203]
[181 202]
[182 201]
[183 200]
[186 197]
[187 196]
[188 195]
[224 270]
[225 269]
[226 268]
[227 267]
[228 264]
[229 263]
[230 262]
[231 260]
[232 259]
[233 257]
[234 256]
[236 254]
[237 253]
[239 250]
[240 249]
[241 248]
[242 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
