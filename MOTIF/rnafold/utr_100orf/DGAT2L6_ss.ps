%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGUAAGAGAUUAUAGCAAAGCAUCUAUAAUCAACUCAGCUUAAGAAGUUUUGACCUUCUGGUUAGGCUUCUUGCCACAACAGAACAGCACCAUAACCAUGGCUUUCUUCUCCCGACUGAAUCUCCAGGAGGGCCUCCAAACCUUCUUUGUUUUGCAAUGGAUCCCAGUCUAUAUAUUUUUAGGAGCUAUUCCCAUUC\
) } def
/len { sequence length } bind def

/coor [
[77.29859924 258.07641602]
[71.81644440 263.47494507]
[65.62995148 268.04382324]
[58.86352158 271.69229126]
[51.65303421 274.34817505]
[44.14314651 275.95919800]
[36.48437881 276.49404907]
[28.83010101 275.94293213]
[21.33345413 274.31777954]
[14.14429951 271.65213013]
[7.40621471 268.00012207]
[-2.29533386 279.44039917]
[-11.99688244 290.88067627]
[-21.69843102 302.32095337]
[-31.39998055 313.76123047]
[-41.10152817 325.20150757]
[-50.80307770 336.64178467]
[-60.50462723 348.08206177]
[-56.69850159 363.12512207]
[-62.49260712 377.51983643]
[-75.65898895 385.73117065]
[-91.13490295 384.60168457]
[-102.96954346 374.56573486]
[-106.61225891 359.48226929]
[-100.66233826 345.15124512]
[-87.40765381 337.08322144]
[-71.94490051 338.38052368]
[-62.24335480 326.94024658]
[-52.54180527 315.49996948]
[-42.84025574 304.05969238]
[-33.13871002 292.61941528]
[-23.43716049 281.17913818]
[-13.73561192 269.73886108]
[-4.03406286 258.29858398]
[-15.56119633 237.89251709]
[-17.39885330 214.49053955]
[-9.17210770 192.46556091]
[7.61038446 175.94647217]
[29.83293533 168.04420471]
[53.35123444 170.26583862]
[59.91977692 156.78050232]
[66.48831940 143.29516602]
[73.05686188 129.80982971]
[79.62540436 116.32450104]
[73.69616699 102.54610443]
[59.38747787 98.04483795]
[45.07878876 93.54356384]
[30.77010155 89.04229736]
[16.46141243 84.54103088]
[2.15272379 80.03975677]
[-12.15596485 75.53849030]
[-26.46465302 71.03721619]
[-40.77334213 66.53594971]
[-49.90687943 66.94543457]
[-55.26950073 61.85089874]
[-69.50608826 57.12654495]
[-83.74268341 52.40219498]
[-97.97927094 47.67784119]
[-113.92312622 51.51521683]
[-125.02061462 39.44136810]
[-119.85559082 23.87684059]
[-103.74138641 20.83308220]
[-93.25492096 33.44124985]
[-79.01832581 38.16560364]
[-64.78173828 42.88995743]
[-50.54514694 47.61430740]
[-36.27207184 52.22726059]
[-21.96338463 56.72853088]
[-7.65469551 61.22980118]
[6.65399361 65.73107147]
[20.96268272 70.23233795]
[35.27136993 74.73361206]
[49.58005905 79.23487854]
[63.88874817 83.73614502]
[78.19743347 88.23741913]
[91.39275360 78.97860718]
[106.08080292 80.25789642]
[114.66844177 67.95941925]
[123.25607300 55.66094208]
[118.34623718 41.05958176]
[122.92210388 26.53667641]
[135.02896118 17.59867287]
[149.89938354 17.50468445]
[158.48701477 5.20620728]
[167.07464600 -7.09226894]
[175.66227722 -19.39074516]
[184.24992371 -31.68922234]
[192.83755493 -43.98769760]
[201.42518616 -56.28617477]
[210.01283264 -68.58464813]
[196.00801086 -92.55683899]
[200.78215027 -121.87966919]
[224.57949829 -142.75471497]
[223.64231873 -157.72540283]
[222.70513916 -172.69610596]
[221.76795959 -187.66679382]
[212.25125122 -201.02210999]
[219.30415344 -215.82711792]
[235.67126465 -216.85171509]
[244.51548767 -203.04187012]
[236.73866272 -188.60397339]
[237.67584229 -173.63328552]
[238.61300659 -158.66258240]
[239.55018616 -143.69189453]
[246.61116028 -141.16349792]
[251.66795349 -155.28541565]
[256.72476196 -169.40734863]
[257.17016602 -184.40072632]
[271.56735229 -188.61030579]
[280.01986694 -176.21858215]
[270.84667969 -164.35055542]
[265.78988647 -150.22862244]
[260.73309326 -136.10670471]
[267.79403687 -133.57829285]
[278.02114868 -144.55126953]
[288.24829102 -155.52424622]
[287.86923218 -171.09646606]
[298.39727783 -182.07891846]
[313.24536133 -182.34432983]
[323.47247314 -193.31729126]
[333.69958496 -204.29026794]
[332.89349365 -220.07398987]
[343.54617310 -231.74859619]
[359.33752441 -232.38775635]
[370.89886475 -221.61227417]
[371.37103271 -205.81503296]
[360.47390747 -194.36828613]
[344.67257690 -194.06315613]
[334.44543457 -183.09017944]
[324.21832275 -172.11721802]
[324.99703979 -157.28720093]
[314.78161621 -146.01336670]
[299.22125244 -145.29711914]
[288.99414062 -134.32415771]
[278.76702881 -123.35118103]
[282.27352905 -115.81808472]
[284.40493774 -107.89041138]
[285.13073730 -99.81375885]
[284.46334839 -91.83242035]
[282.45681763 -84.18196869]
[279.20431519 -77.08232880]
[274.83413696 -70.73143768]
[269.50518799 -65.29975891]
[263.40127563 -60.92575455]
[256.72500610 -57.71244812]
[249.69094849 -55.72514343]
[242.51904297 -54.99037552]
[235.42755127 -55.49609375]
[228.62644958 -57.19299698]
[222.31129456 -59.99701691]
[213.72366333 -47.69853973]
[205.13603210 -35.40006256]
[196.54840088 -23.10158730]
[187.96075439 -10.80311012]
[179.37312317 1.49536622]
[170.78549194 13.79384232]
[162.19786072 26.09231949]
[167.23197937 40.08501434]
[163.01141357 54.52976608]
[150.95356750 63.82823944]
[135.55455017 64.24858093]
[126.96691895 76.54705048]
[118.37928009 88.84552765]
[128.13439941 77.45090485]
[142.60647583 73.50638580]
[156.79434204 78.37510681]
[165.79507446 90.37455750]
[166.49826050 105.35806274]
[158.66090393 118.14774323]
[144.99137878 124.32382965]
[130.21348572 121.75203705]
[119.43390656 111.32080078]
[129.13545227 122.76107788]
[138.83700562 134.20135498]
[154.29975891 132.90406799]
[167.55444336 140.97209167]
[173.50436401 155.30311584]
[169.86164856 170.38655090]
[158.02700806 180.42253113]
[142.55108643 181.55200195]
[129.38470459 173.34066772]
[123.59060669 158.94593811]
[127.39672852 143.90290833]
[117.69517517 132.46263123]
[107.99362946 121.02234650]
[93.11073303 122.89304352]
[86.54219818 136.37837219]
[79.97365570 149.86370850]
[73.40511322 163.34904480]
[66.83657074 176.83438110]
[72.92395782 181.60482788]
[78.27489471 187.18421936]
[82.78294373 193.46023560]
[86.35862732 200.30668640]
[88.93120575 207.58610535]
[90.45006561 215.15246582]
[90.88572693 222.85412598]
[90.23040771 230.53689575]
[88.49816132 238.04704285]
[85.72457123 245.23445129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[40 190]
[41 189]
[42 188]
[43 187]
[44 186]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[50 70]
[51 69]
[52 68]
[53 67]
[55 66]
[56 65]
[57 64]
[58 63]
[77 163]
[78 162]
[79 161]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[93 104]
[94 103]
[95 102]
[96 101]
[114 135]
[115 134]
[116 133]
[119 130]
[120 129]
[121 128]
[172 185]
[173 184]
[174 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
