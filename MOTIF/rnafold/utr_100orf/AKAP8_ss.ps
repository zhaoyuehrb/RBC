%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGCGCUGAACGCAUGCGUGCUGUGGUCGCCUAGUAAACGGGGCUGCUGGUGGGCCGCGUCGAAGACAUGGACCAGGGCUACGGAGGCUACGGGGCGUGGAGUGCUGGACCUGCCAACACCCAGGGUGCAUAUGGAACUGGUGUGGCCAGCUGGCAAGGUUAUGAAA\
) } def
/len { sequence length } bind def

/coor [
[130.85562134 164.99952698]
[118.71289062 156.18785095]
[118.92907715 141.18940735]
[111.54872131 154.24813843]
[104.16836548 167.30685425]
[96.78800201 180.36558533]
[89.40764618 193.42431641]
[82.02729034 206.48304749]
[74.64693451 219.54176331]
[67.38684845 232.66773987]
[60.24763489 245.85984802]
[61.24013901 262.22894287]
[47.41298294 271.04605103]
[32.99036407 263.24093628]
[32.80903244 246.84278870]
[47.05553055 238.72062683]
[54.19474030 225.52853394]
[54.61440659 218.12104797]
[61.58821106 212.16140747]
[68.96856689 199.10269165]
[76.34892273 186.04396057]
[83.72927856 172.98522949]
[91.10963440 159.92649841]
[98.48999023 146.86778259]
[105.87034607 133.80905151]
[101.71073151 127.56825256]
[89.22912598 135.88748169]
[76.74739838 144.20651245]
[68.42855835 131.72465515]
[80.90990448 123.40586853]
[93.39151001 115.08664703]
[89.23189545 108.84584045]
[74.33872223 110.63284302]
[59.44554901 112.41985321]
[44.55237198 114.20685577]
[37.11006165 127.82271576]
[23.07152557 134.43324280]
[7.83487320 131.49658203]
[-2.74109316 120.14190674]
[-4.58969879 104.73533630]
[2.99988294 91.20101929]
[17.10930252 84.74316406]
[32.31320190 87.84494781]
[42.76536942 99.31368256]
[57.65854263 97.52667999]
[72.55171967 95.73966980]
[87.44489288 93.95266724]
[100.50361633 86.57231140]
[109.71680450 74.73520660]
[118.93000031 62.89809799]
[128.14318848 51.06098938]
[137.35638428 39.22388077]
[146.56956482 27.38677406]
[155.78276062 15.54966640]
[158.15318298 -0.09295707]
[172.07624817 -5.38421488]
[181.28944397 -17.22132301]
[190.50263977 -29.05842972]
[199.71582031 -40.89553833]
[208.92901611 -52.73264694]
[218.14221191 -64.56975555]
[227.35539246 -76.40686035]
[236.56858826 -88.24396515]
[245.78178406 -100.08107758]
[254.99496460 -111.91818237]
[249.33445740 -126.12754059]
[251.53178406 -141.16311646]
[260.89773560 -153.00140381]
[274.83847046 -158.52520752]
[289.57305908 -156.34411621]
[298.78625488 -168.18122864]
[307.78042603 -180.18559265]
[316.55255127 -192.35316467]
[318.34674072 -208.07229614]
[332.06604004 -213.87145996]
[340.83816528 -226.03903198]
[349.61029053 -238.20660400]
[351.02453613 -256.54873657]
[367.26736450 -263.14941406]
[375.81448364 -275.47610474]
[384.36160278 -287.80276489]
[377.92691040 -301.67871094]
[379.29263306 -316.81250000]
[387.99221802 -329.14877319]
[401.60748291 -335.43215942]
[416.43984985 -334.06607056]
[424.98696899 -346.39273071]
[433.42050171 -358.79739380]
[441.73974609 -371.27899170]
[450.05895996 -383.76058960]
[445.91052246 -396.59878540]
[449.86767578 -409.29330444]
[460.26712036 -417.26309204]
[473.16455078 -417.76843262]
[481.71166992 -430.09509277]
[490.25878906 -442.42175293]
[491.76388550 -458.17120361]
[505.37432861 -464.22140503]
[513.92144775 -476.54809570]
[512.48944092 -492.52709961]
[524.18853760 -503.50482178]
[540.04425049 -501.06005859]
[547.89337158 -487.06826782]
[541.71478271 -472.26269531]
[526.24810791 -468.00097656]
[517.70098877 -455.67428589]
[516.80725098 -440.80651855]
[502.58544922 -433.87463379]
[494.03833008 -421.54797363]
[485.49121094 -409.22128296]
[489.19927979 -392.83496094]
[479.73788452 -378.54544067]
[462.54055786 -375.44137573]
[454.22134399 -362.95977783]
[445.90209961 -350.47817993]
[444.80471802 -343.14041138]
[437.31362915 -337.84561157]
[428.76651001 -325.51895142]
[435.24667358 -312.10726929]
[434.13623047 -297.15322876]
[425.63357544 -284.68038940]
[411.93948364 -278.09490967]
[396.68826294 -279.25564575]
[388.14114380 -266.92898560]
[379.59402466 -254.60231018]
[381.43701172 -242.62286377]
[374.38464355 -232.27603149]
[361.77786255 -229.43446350]
[353.00573730 -217.26689148]
[344.23361206 -205.09933472]
[343.06686401 -190.25048828]
[328.72012329 -183.58102417]
[319.94799805 -171.41345215]
[319.82324219 -166.60455322]
[316.65063477 -161.83183289]
[310.62335205 -158.96803284]
[301.41015625 -147.13092041]
[307.14163208 -133.38262939]
[305.20910645 -118.51248169]
[296.03228760 -106.52698517]
[281.99621582 -100.70587921]
[266.83209229 -102.70499420]
[257.61889648 -90.86788177]
[248.40570068 -79.03077698]
[239.19250488 -67.19367218]
[229.97930908 -55.35656357]
[220.76612854 -43.51945496]
[211.55293274 -31.68234634]
[202.33973694 -19.84523964]
[193.12655640 -8.00813198]
[183.91336060 3.82897592]
[182.20191956 18.62492943]
[167.61987305 24.76285744]
[158.40667725 36.59996414]
[149.19348145 48.43707275]
[139.98030090 60.27418137]
[130.76710510 72.11128998]
[121.55391693 83.94839478]
[112.34072113 95.78549957]
[126.10107422 89.81449890]
[139.88125610 83.88941193]
[154.85591125 83.01802063]
[169.23033142 87.30475616]
[181.28170776 96.23584747]
[189.56565857 108.74089050]
[193.08934021 123.32114410]
[191.43043518 138.22912598]
[184.78776550 151.67810059]
[173.95747375 162.05619812]
[160.23757935 168.11955261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 17]
[11 16]
[32 47]
[33 46]
[34 45]
[35 44]
[48 159]
[49 158]
[50 157]
[51 156]
[52 155]
[53 154]
[54 153]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[70 137]
[71 136]
[72 133]
[73 132]
[75 130]
[76 129]
[77 128]
[79 125]
[80 124]
[81 123]
[86 118]
[87 117]
[88 115]
[89 114]
[90 113]
[94 110]
[95 109]
[96 108]
[98 106]
[99 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
