%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGCUGCGGCCCCUGCUCUACCUCCUAGCGCCGGUGCGCGGCCGAGGCCGCACUACCUGUCUGCGGGAAAGCGGGAUCCACCCCAGGACGUCGGGUCGCUGCCGACAUAAUGUCAAGUGGAAACUAUCAGCAGUCAGAGGCUCUUAGCAAACCCACUUUCAGUGAGGAACAAGCCUCUGCGUUAGUGGAGUCAGUGUUUGGGUUGAAAG\
) } def
/len { sequence length } bind def

/coor [
[43.80022430 334.38613892]
[39.24882126 348.67895508]
[34.69741821 362.97177124]
[30.14601326 377.26458740]
[25.59460831 391.55743408]
[28.77978706 407.05468750]
[17.54546547 416.83422852]
[12.99406147 431.12704468]
[17.02445412 447.02319336]
[5.08603907 458.26626587]
[-10.53996563 453.29031372]
[-13.77886581 437.21420288]
[-1.29875875 426.57562256]
[3.25264573 412.28280640]
[-0.25807971 397.80786133]
[11.30178738 387.00601196]
[15.85319233 372.71319580]
[20.40459633 358.42037964]
[24.95600128 344.12756348]
[29.50740623 329.83474731]
[33.63726044 315.41445923]
[37.34201050 300.87915039]
[32.98783493 286.63519287]
[43.89384460 275.17355347]
[47.59859085 260.63824463]
[51.30334091 246.10295105]
[55.00808716 231.56765747]
[49.02325439 223.28889465]
[48.57254791 212.86361694]
[54.04586029 203.72236633]
[63.84392166 199.00599670]
[67.97377777 184.58572388]
[72.10363770 170.16545105]
[76.23348999 155.74517822]
[80.36334991 141.32490540]
[65.36220551 129.89262390]
[56.24721909 113.38056946]
[41.37795258 115.35665131]
[26.50868416 117.33273315]
[11.63941765 119.30882263]
[-2.69274044 130.87210083]
[-18.64031982 123.54573822]
[-33.47897339 125.73988342]
[-48.31763077 127.93403625]
[-63.15628815 130.12818909]
[-77.99494171 132.32234192]
[-90.50167847 142.92958069]
[-105.84788513 137.14805603]
[-108.24669647 120.92530060]
[-95.23042297 110.94989777]
[-80.18909454 117.48368073]
[-65.35043335 115.28952789]
[-50.51177979 113.09538269]
[-35.67312622 110.90122986]
[-20.83446884 108.70708466]
[-13.37595367 99.18539429]
[-1.03323710 97.23485565]
[9.66333294 104.43955231]
[24.53260040 102.46347046]
[39.40186691 100.48738098]
[54.27113342 98.51129913]
[54.71372223 93.48090363]
[55.70798111 88.52992249]
[57.24180222 83.71866608]
[44.28827667 76.15518951]
[31.33475113 68.59170532]
[18.38122559 61.02823257]
[5.42770100 53.46475220]
[-9.79229832 57.72235489]
[-23.52387238 49.89807129]
[-27.62032127 34.63390732]
[-19.65129471 20.98582649]
[-4.34467602 17.05098724]
[9.21839142 25.16386414]
[12.99117851 40.51122665]
[25.94470406 48.07470703]
[38.89822769 55.63818359]
[51.85175323 63.20166016]
[64.80527496 70.76513672]
[74.93105316 61.72607422]
[87.26316071 56.05550766]
[85.50556183 41.15883636]
[83.74797058 26.26216125]
[81.99037933 11.36548901]
[80.23278046 -3.53118372]
[70.47719574 -7.84018087]
[63.44308853 -15.74869251]
[60.34894943 -25.78596306]
[61.68875504 -36.12210083]
[67.15444183 -44.90164948]
[75.70342255 -50.57665253]
[74.60338593 -65.53626251]
[73.50334930 -80.49587250]
[72.40331268 -95.45548248]
[71.30327606 -110.41509247]
[58.27983856 -118.64286804]
[52.66402054 -132.79617310]
[56.41464615 -147.37001038]
[67.89038849 -156.82756042]
[66.79035187 -171.78717041]
[65.69031525 -186.74678040]
[64.59027863 -201.70639038]
[54.92878723 -214.95735168]
[61.82017136 -229.83824158]
[78.17516327 -231.04087830]
[87.16914368 -217.32809448]
[79.54988861 -202.80642700]
[80.64992523 -187.84681702]
[81.74996185 -172.88720703]
[82.84999847 -157.92759705]
[95.58572388 -150.25041199]
[101.42781830 -136.38195801]
[97.94270325 -121.55942535]
[86.26287842 -111.51512909]
[87.36292267 -96.55551910]
[88.46295929 -81.59590912]
[89.56299591 -66.63629913]
[90.66303253 -51.67668915]
[106.30570984 -40.06224823]
[108.39202881 -20.38408089]
[95.12945557 -5.28877783]
[96.88704681 9.60789490]
[98.64464569 24.50456810]
[100.40223694 39.40124130]
[102.15982819 54.29791260]
[121.74620819 59.74520874]
[137.03912354 73.14019775]
[145.01922607 91.83824921]
[160.01762390 91.61804962]
[175.01600647 91.39785004]
[190.01438904 91.17765808]
[203.69949341 83.23860168]
[216.53897095 90.78823853]
[231.53735352 90.56803894]
[246.53573608 90.34783936]
[253.64747620 82.12170410]
[263.90097046 79.22589874]
[273.84664917 82.38385010]
[280.27493286 90.32321167]
[295.27331543 90.54341125]
[310.27169800 90.76360321]
[325.27008057 90.98380280]
[340.26846313 91.20400238]
[355.26684570 91.42419434]
[370.26522827 91.64439392]
[385.26361084 91.86459351]
[389.01611328 81.94408417]
[395.36199951 73.47164917]
[403.79327393 67.10602570]
[413.64044189 63.33806992]
[424.12557983 62.45296860]
[434.42379761 64.50862885]
[443.72821045 69.33209991]
[451.31311035 76.53399658]
[456.59051514 85.53997803]
[459.15585327 95.63648224]
[474.09768677 96.95600891]
[489.04882812 98.16581726]
[504.00842285 99.26585388]
[518.96801758 100.36589050]
[533.92767334 101.46592712]
[550.16754150 96.59744263]
[559.34143066 110.85494995]
[548.18066406 123.61717224]
[532.82763672 116.42553711]
[517.86798096 115.32550049]
[502.90838623 114.22546387]
[487.94879150 113.12542725]
[481.04904175 115.76927185]
[472.77816772 111.89785767]
[457.83630371 110.57833099]
[447.58160400 127.27961731]
[430.19216919 136.48849487]
[410.45687866 135.57807922]
[393.85687256 124.72084808]
[385.04342651 106.86297607]
[370.04504395 106.64277649]
[355.04666138 106.42257690]
[340.04827881 106.20238495]
[325.04989624 105.98218536]
[310.05151367 105.76198578]
[295.05313110 105.54179382]
[280.05474854 105.32159424]
[263.90097046 115.95143127]
[246.75593567 105.34622955]
[231.75755310 105.56642151]
[216.75917053 105.78662109]
[204.14685059 113.70992279]
[190.23458862 106.17604065]
[175.23619080 106.39623260]
[160.23780823 106.61643219]
[145.23942566 106.83663177]
[142.03677368 118.06252289]
[136.09751892 128.11253357]
[127.80828857 136.33241272]
[117.70873260 142.18704224]
[106.45632935 145.29527283]
[94.78362274 145.45475769]
[90.65376282 159.87503052]
[86.52391052 174.29530334]
[82.39405060 188.71557617]
[78.26419830 203.13584900]
[84.02332306 222.45565796]
[69.54338074 235.27239990]
[65.83863831 249.80770874]
[62.13388824 264.34298706]
[58.42913818 278.87829590]
[62.51832581 294.16192627]
[51.87730789 304.58392334]
[48.17255783 319.11920166]
[49.49373627 323.25003052]
[49.43863297 327.19046021]
[48.23581314 330.53155518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[7 14]
[8 13]
[21 210]
[22 209]
[24 207]
[25 206]
[26 205]
[27 204]
[31 202]
[32 201]
[33 200]
[34 199]
[35 198]
[37 61]
[38 60]
[39 59]
[40 58]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[99 110]
[100 109]
[101 108]
[102 107]
[128 192]
[129 191]
[130 190]
[131 189]
[133 187]
[134 186]
[135 185]
[139 183]
[140 182]
[141 181]
[142 180]
[143 179]
[144 178]
[145 177]
[146 176]
[156 171]
[157 170]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
