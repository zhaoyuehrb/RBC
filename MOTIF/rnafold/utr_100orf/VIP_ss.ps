%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGUAGAGUGAGAAGCACCAGCAGGCAGUAACAGCCAACCCUUAGCCAUUGCUAAGGGCAGAGAACUGGUGGAGCCUUUCUCUUACUCCCAGGACUUCAGCACCUAAGACAGCUCCAAAACAAACCAGAACAGUCAGCUCCGGGGGAGCACGACUGGGCGAGAGGCACAGAAAUGGACACCAGAAAUAAGGCCCAGCUCCUUGUGCUCCUGACUCUUCUCAGUGUGCUCUUCUCACAGACUUCGGCAUGGCCUC\
UUUACAGGGCACCUUCUG\
) } def
/len { sequence length } bind def

/coor [
[433.56918335 866.01202393]
[448.41308594 868.17877197]
[440.13323975 855.67102051]
[431.85339355 843.16326904]
[418.37631226 836.82153320]
[417.21047974 821.04333496]
[408.93063354 808.53558350]
[400.65078735 796.02783203]
[392.37094116 783.52008057]
[384.09109497 771.01226807]
[370.61401367 764.67059326]
[369.44821167 748.89239502]
[361.16836548 736.38458252]
[347.69128418 730.04284668]
[346.52545166 714.26470947]
[338.24560547 701.75689697]
[329.96575928 689.24914551]
[321.68591309 676.74139404]
[313.40606689 664.23364258]
[304.59811401 663.91143799]
[296.79623413 659.52374268]
[291.79467773 651.93566895]
[290.80889893 642.76306152]
[294.18264771 634.02947998]
[286.33782959 621.24438477]
[278.49301147 608.45928955]
[272.33950806 604.41687012]
[270.63253784 595.48229980]
[262.93481445 582.60809326]
[255.23712158 569.73388672]
[241.90716553 569.78466797]
[230.19415283 563.19757080]
[223.20167542 551.59558105]
[222.84265137 537.94586182]
[229.31726074 525.80145264]
[221.76766968 512.83984375]
[214.21807861 499.87820435]
[194.61058044 502.61953735]
[175.71925354 496.69619751]
[161.18722534 483.25042725]
[147.58856201 489.58105469]
[133.98991394 495.91165161]
[120.39126587 502.24227905]
[106.79261017 508.57287598]
[93.19396210 514.90350342]
[79.59530640 521.23413086]
[65.99665833 527.56475830]
[57.03009415 541.29547119]
[40.67273331 540.12548828]
[33.75162506 525.25842285]
[43.38660812 511.98818970]
[59.66604233 513.96606445]
[73.26469421 507.63546753]
[86.86334229 501.30484009]
[100.46199799 494.97424316]
[114.06065369 488.64361572]
[127.65930176 482.31301880]
[141.25794983 475.98239136]
[154.85661316 469.65179443]
[153.35493469 461.84756470]
[153.24566650 453.88726807]
[154.53695679 446.01782227]
[157.19346619 438.48416138]
[161.13729858 431.52160645]
[166.25025940 425.34848022]
[172.37741089 420.15939331]
[179.33175659 416.11898804]
[175.42179871 401.63754272]
[171.51182556 387.15609741]
[167.60186768 372.67465210]
[163.69189453 358.19320679]
[159.78193665 343.71179199]
[150.53965759 339.46188354]
[145.02940369 330.65142822]
[145.26240540 320.04324341]
[151.40234375 311.12207031]
[147.82545471 296.55477905]
[144.16511536 282.00823975]
[140.42143250 267.48294067]
[136.67776489 252.95761108]
[132.93409729 238.43229675]
[129.19041443 223.90696716]
[125.19749451 209.44818115]
[120.95650482 195.06019592]
[116.71552277 180.67222595]
[111.82844543 175.16557312]
[112.50940704 166.09492493]
[108.43366241 151.65925598]
[104.35791779 137.22360229]
[100.19948578 122.81153870]
[95.95849609 108.42355347]
[77.61831665 115.86963654]
[54.74470520 105.00247955]
[44.69922638 93.86298370]
[34.65375137 82.72348785]
[24.54457855 71.64176178]
[14.37204266 60.61817169]
[4.13647842 49.65307999]
[-6.16177845 38.74684906]
[-21.30506516 41.69377518]
[-35.62916946 35.96458817]
[-44.56332016 23.38744354]
[-45.25666046 7.97566891]
[-37.48794937 -5.35289812]
[-23.73615646 -12.34515953]
[-8.38942623 -10.76990891]
[3.65515447 -1.12980497]
[8.55420399 13.49903107]
[4.74445391 28.44859123]
[15.04271126 39.35482407]
[21.89400482 42.05045319]
[25.39563179 50.44563675]
[35.56816864 61.46922684]
[42.38810349 64.24323273]
[45.79324722 72.67800903]
[55.83872604 83.81750488]
[65.88420105 94.95700073]
[73.09023285 92.87778473]
[68.93179321 78.46572876]
[64.77336121 64.05367279]
[60.61492538 49.64161301]
[56.45649338 35.22955322]
[52.29805756 20.81749535]
[48.13986206 6.40536833]
[62.55205917 2.24741197]
[66.71011353 16.65906143]
[70.86855316 31.07111931]
[75.02698517 45.48317719]
[79.18541718 59.89523697]
[83.34385681 74.30729675]
[87.50228882 88.71935272]
[94.70832062 86.64013672]
[97.27539062 71.86142731]
[99.84246826 57.08272552]
[102.40954590 42.30401993]
[104.97662354 27.52531433]
[98.24369049 10.36769867]
[110.04881287 -2.63856030]
[112.44627380 -17.44572639]
[114.84373474 -32.25289154]
[117.24120331 -47.06005859]
[119.63866425 -61.86722565]
[116.20163727 -78.46913147]
[131.20326233 -86.36769867]
[142.94602966 -74.13887787]
[134.44583130 -59.46976089]
[132.04837036 -44.66259384]
[129.65090942 -29.85542870]
[127.25344086 -15.04826355]
[124.85597992 -0.24109697]
[131.66793823 9.72668934]
[129.81741333 22.06204414]
[119.75532532 30.09239006]
[117.18824768 44.87109756]
[114.62117767 59.64979935]
[112.05410004 74.42850494]
[109.48702240 89.20721436]
[110.34647369 104.18257141]
[114.58746338 118.57054901]
[119.99592590 125.88417816]
[118.79357910 133.14785767]
[122.86932373 147.58351135]
[126.94506836 162.01918030]
[131.10350037 176.43122864]
[135.34448242 190.81921387]
[139.58547974 205.20719910]
[143.31192017 208.75572205]
[145.14611816 212.95429993]
[145.15443420 216.98272705]
[143.71574402 220.16329956]
[147.45941162 234.68861389]
[151.20307922 249.21394348]
[154.94676208 263.73925781]
[158.69042969 278.26458740]
[163.84417725 285.75988770]
[162.39274597 292.97790527]
[165.96961975 307.54519653]
[180.55505371 321.49526978]
[174.26336670 339.80181885]
[178.17333984 354.28326416]
[182.08329773 368.76470947]
[185.99327087 383.24612427]
[189.90322876 397.72756958]
[193.81320190 412.20901489]
[210.26394653 413.66473389]
[225.09188843 420.86346436]
[236.36697388 432.84295654]
[242.63064575 448.02023315]
[243.08444214 464.40090942]
[237.69178772 479.84124756]
[227.17970276 492.32861328]
[234.72929382 505.29022217]
[242.27888489 518.25183105]
[259.14590454 519.73571777]
[271.67123413 530.88049316]
[275.03833008 547.13464355]
[268.11132812 562.03619385]
[275.80905151 574.91040039]
[283.50674438 587.78460693]
[291.27813721 600.61450195]
[299.12292480 613.39959717]
[306.96774292 626.18469238]
[326.38726807 635.30102539]
[325.91381836 655.95379639]
[334.19366455 668.46154785]
[342.47351074 680.96929932]
[350.75338745 693.47705078]
[359.03323364 705.98480225]
[373.10253906 713.22119141]
[373.67611694 728.10473633]
[381.95596313 740.61248779]
[396.02526855 747.84887695]
[396.59884644 762.73242188]
[404.87869263 775.24017334]
[413.15853882 787.74798584]
[421.43841553 800.25573730]
[429.71826172 812.76348877]
[443.78756714 819.99987793]
[444.36114502 834.88342285]
[452.64099121 847.39117432]
[460.92083740 859.89892578]
[469.62594604 872.11456299]
[478.74600220 884.02355957]
[486.41806030 888.91027832]
[487.90139771 896.12182617]
[496.88430786 908.13464355]
[505.86721802 920.14739990]
[514.85009766 932.16021729]
[523.83300781 944.17303467]
[532.81591797 956.18585205]
[541.79882812 968.19860840]
[554.37823486 965.46527100]
[567.01336670 967.67163086]
[577.84301758 974.45697021]
[585.28527832 984.78863525]
[588.26885986 997.11926270]
[586.38708496 1009.61822510]
[579.95275879 1020.44354248]
[588.65783691 1032.65917969]
[597.36291504 1044.87475586]
[601.29492188 1046.50927734]
[604.22619629 1049.04199219]
[605.99859619 1052.05505371]
[606.60351562 1055.12194824]
[606.17187500 1057.85595703]
[614.30780029 1070.45788574]
[622.44372559 1083.05969238]
[636.11444092 1093.08703613]
[630.26336670 1108.99938965]
[613.35321045 1107.78198242]
[609.84179688 1091.19567871]
[601.70593262 1078.59375000]
[593.57000732 1065.99194336]
[585.14733887 1053.57995605]
[576.44219971 1041.36425781]
[567.73712158 1029.14868164]
[550.63708496 1031.40234375]
[534.67755127 1024.62927246]
[524.31201172 1010.62060547]
[522.48260498 993.20043945]
[529.78601074 977.18151855]
[520.80310059 965.16870117]
[511.82022095 953.15594482]
[502.83731079 941.14312744]
[493.85440063 929.13031006]
[484.87149048 917.11749268]
[475.88858032 905.10473633]
[466.83697510 893.14361572]
[457.71691895 881.23461914]
[454.92053223 895.97161865]
[442.58279419 904.50274658]
[427.80752563 901.91595459]
[419.10202026 889.70062256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 221]
[3 220]
[4 219]
[6 217]
[7 216]
[8 215]
[9 214]
[10 213]
[12 211]
[13 210]
[15 208]
[16 207]
[17 206]
[18 205]
[19 204]
[24 202]
[25 201]
[26 200]
[28 199]
[29 198]
[30 197]
[35 193]
[36 192]
[37 191]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[67 184]
[68 183]
[69 182]
[70 181]
[71 180]
[72 179]
[76 177]
[77 176]
[78 174]
[79 173]
[80 172]
[81 171]
[82 170]
[83 166]
[84 165]
[85 164]
[87 163]
[88 162]
[89 161]
[90 159]
[91 158]
[93 117]
[94 116]
[95 115]
[96 113]
[97 112]
[98 110]
[99 109]
[132 157]
[133 156]
[134 155]
[135 154]
[136 153]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
[222 269]
[223 268]
[225 267]
[226 266]
[227 265]
[228 264]
[229 263]
[230 262]
[231 261]
[238 256]
[239 255]
[240 254]
[245 253]
[246 252]
[247 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
