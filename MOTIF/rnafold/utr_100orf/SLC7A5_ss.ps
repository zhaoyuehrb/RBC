%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGGCGGGCGGCGCGCACACUGCUCGCUGGGCCGCGGCUCCCGGGUGUCCCAGGCCCGGCCGGUGCGCAGAGCAUGGCGGGUGCGGGCCCGAAGCGGCGCGCGCUAGCGGCGCCGGCGGCCGAGGAGAAGGAAGAGGCGCGGGAGAAGAUGCUGGCCGCCAAGAGCGCGGACG\
) } def
/len { sequence length } bind def

/coor [
[121.15341949 318.20730591]
[119.83143616 303.26568604]
[118.50944519 288.32403564]
[116.52967834 273.45526123]
[113.89599609 258.68829346]
[111.26230621 243.92131042]
[108.62862396 229.15432739]
[105.99493408 214.38734436]
[103.36125183 199.62036133]
[93.50950623 188.44931030]
[98.70358276 173.50502014]
[96.06990051 158.73803711]
[93.43621063 143.97105408]
[79.18681335 139.28547668]
[68.30316162 149.60758972]
[57.41950989 159.92970276]
[46.53585815 170.25183105]
[41.84712601 185.36230469]
[27.28815842 188.50645447]
[16.40450668 198.82856750]
[5.52085400 209.15069580]
[-1.81091785 224.43733215]
[-18.52978897 221.62385559]
[-20.45450592 204.77951050]
[-4.80126333 198.26704407]
[6.08238888 187.94491577]
[16.96604156 177.62280273]
[20.87630081 163.25064087]
[36.21374130 159.36817932]
[47.09739304 149.04605103]
[57.98104477 138.72393799]
[68.86470032 128.40182495]
[59.99457550 107.93195343]
[62.93902969 86.55347443]
[76.09536743 70.37631226]
[95.05329132 63.62845612]
[96.11137390 48.66582108]
[97.16945648 33.70318604]
[98.22753906 18.74054909]
[99.28562927 3.77791381]
[92.54104614 -10.53366375]
[101.15684509 -22.68345070]
[102.21492767 -37.64608765]
[103.27301025 -52.60872269]
[104.06686401 -67.58769989]
[104.59623718 -82.57835388]
[93.79158783 -88.93360901]
[86.76503754 -99.22681427]
[84.80497742 -111.46135712]
[88.22419739 -123.29556274]
[96.31179810 -132.49090576]
[107.48001862 -137.33540344]
[108.53810883 -152.29803467]
[109.59619141 -167.26068115]
[99.51409149 -179.13455200]
[100.80029297 -194.29373169]
[112.18235779 -203.83229065]
[113.24044037 -218.79492188]
[114.29852295 -233.75755310]
[115.35660553 -248.72019958]
[112.79220581 -254.86694336]
[113.61551666 -260.52844238]
[116.72525787 -264.18920898]
[118.31073761 -279.10519409]
[119.89621735 -294.02117920]
[121.48169708 -308.93713379]
[123.06716919 -323.85311890]
[124.65264893 -338.76907349]
[126.23812866 -353.68505859]
[127.82360840 -368.60104370]
[124.67041779 -383.26586914]
[117.09412384 -396.21191406]
[103.87558746 -406.82824707]
[110.41777802 -422.46908569]
[127.25843048 -420.51239014]
[130.04014587 -403.78820801]
[137.61643982 -390.84216309]
[145.05084229 -391.83203125]
[150.77041626 -405.69879150]
[159.91961670 -393.81179810]
[167.35400391 -394.80169678]
[171.27888489 -409.27908325]
[167.42210388 -424.62301636]
[178.22004700 -434.88232422]
[182.14492798 -449.35974121]
[186.06982422 -463.83712769]
[189.99470520 -478.31454468]
[193.91960144 -492.79196167]
[197.84448242 -507.26934814]
[193.98768616 -522.61328125]
[204.78564453 -532.87261963]
[208.71052551 -547.34997559]
[212.63542175 -561.82739258]
[204.55712891 -575.41107178]
[208.53097534 -590.70764160]
[222.19931030 -598.64184570]
[237.45298767 -594.50653076]
[245.24224854 -580.75506592]
[240.94587708 -565.54595947]
[227.11282349 -557.90252686]
[223.18792725 -543.42510986]
[219.26304626 -528.94769287]
[223.40057373 -514.63928223]
[212.32188416 -503.34445190]
[208.39700317 -488.86706543]
[204.47210693 -474.38964844]
[200.54722595 -459.91226196]
[196.62232971 -445.43484497]
[192.69744873 -430.95742798]
[196.83497620 -416.64904785]
[185.75630188 -405.35421753]
[181.83140564 -390.87680054]
[164.02066040 -367.19586182]
[142.73957825 -367.01556396]
[141.15409851 -352.09957886]
[139.56861877 -337.18359375]
[137.98313904 -322.26763916]
[136.39767456 -307.35165405]
[134.81219482 -292.43569946]
[133.22671509 -277.51971436]
[131.64123535 -262.60372925]
[130.31924438 -247.66210938]
[129.26115417 -232.69947815]
[128.20307922 -217.73683167]
[127.14498901 -202.77420044]
[137.07145691 -191.72880554]
[136.21156311 -176.53948975]
[124.55882263 -166.20259094]
[123.50074005 -151.23995972]
[122.44265747 -136.27731323]
[136.46568298 -125.58211517]
[141.32615662 -108.46586609]
[134.90467834 -91.70394897]
[119.58689117 -82.04898834]
[119.05751801 -67.05832672]
[121.62114716 -62.99634552]
[121.63954163 -57.27533722]
[118.23564911 -51.55063629]
[117.17756653 -36.58800125]
[116.11947632 -21.62536621]
[122.93973541 -8.38401699]
[114.24826050 4.83599806]
[113.19017792 19.79863358]
[112.13209534 34.76126862]
[111.07400513 49.72390366]
[110.01592255 64.68653870]
[120.22690582 68.64802551]
[128.96832275 75.53870392]
[135.40795898 84.83522797]
[138.89466858 95.78060150]
[139.02304077 107.44548035]
[135.67761230 118.80706787]
[129.05201721 128.83872986]
[119.64073181 136.60270691]
[108.20319366 141.33737183]
[110.83687592 156.10435486]
[113.47056580 170.87133789]
[123.51068878 183.09861755]
[118.12822723 196.98667908]
[120.76191711 211.75366211]
[123.39559937 226.52064514]
[126.02928925 241.28761292]
[128.66297913 256.05459595]
[131.29666138 270.82159424]
[142.00901794 260.32180786]
[156.91812134 261.97067261]
[165.07719421 274.55755615]
[160.49559021 288.84072876]
[146.53727722 294.33300781]
[133.45108032 287.00204468]
[134.77307129 301.94369507]
[136.09504700 316.88531494]
[148.37118530 326.83880615]
[149.93041992 342.56600952]
[139.84768677 354.73620605]
[124.10490417 356.12908936]
[112.04196930 345.91824341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 172]
[2 171]
[3 170]
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[9 159]
[11 157]
[12 156]
[13 155]
[14 32]
[15 31]
[16 30]
[17 29]
[19 27]
[20 26]
[21 25]
[36 146]
[37 145]
[38 144]
[39 143]
[40 142]
[42 140]
[43 139]
[44 138]
[45 135]
[46 134]
[52 130]
[53 129]
[54 128]
[57 125]
[58 124]
[59 123]
[60 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
[71 77]
[72 76]
[81 112]
[82 111]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[91 102]
[92 101]
[93 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
