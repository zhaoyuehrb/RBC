%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUACCUUUUCACUUUACACACAUCAUCUUGGAUUGCCCAUUUUGCGUGGCUAAAAAGCAGAGCCAUGCCGCUGGGGAAGCAGUUGCGAUUUAGCCAUGGCUGCAGCUUGGACCGUGGUGCUGGUGACUUUGGUGCUAGGCUUGGCCGUGGCAGGCCCUGUCCCCACUUCCAAGCCCACCACAACUGGGAAGGGCU\
) } def
/len { sequence length } bind def

/coor [
[61.74243546 254.83306885]
[52.71652222 266.81359863]
[41.61441422 276.90039062]
[28.82576180 284.73941040]
[14.79940987 290.05554199]
[0.02764043 292.66223145]
[-14.97110176 292.46798706]
[-29.67040443 289.47958374]
[-43.55436707 283.80194092]
[-56.13570404 275.63433838]
[-66.97284698 265.26339722]
[-75.68544769 253.05313110]
[-81.96772003 239.43208313]
[-85.59916687 224.87829590]
[-86.45234680 209.90258789]
[-84.49730682 195.03053284]
[-79.80266571 180.78411865]
[-72.53319550 167.66334534]
[-62.94402313 156.12870789]
[-51.37171173 146.58503723]
[-38.22240829 139.36729431]
[-23.95761299 134.72880554]
[-9.07798004 132.83235168]
[5.89426041 133.74450684]
[20.43362808 137.43324280]
[34.02983475 143.76910400]
[46.20569229 152.52972412]
[56.53386688 163.40763855]
[64.65187073 176.02104187]
[70.27407837 189.92491150]
[71.69992065 174.99282837]
[73.12576294 160.06076050]
[74.55159760 145.12867737]
[75.97743988 130.19659424]
[67.56732941 142.61714172]
[63.89363861 157.16032410]
[53.59688568 168.06797791]
[39.28933716 172.57286072]
[24.60077667 169.53210449]
[13.25765514 159.71714783]
[8.13769150 145.61799622]
[10.53980923 130.81158447]
[19.85459518 119.05426025]
[33.71891403 113.32881927]
[48.61451340 115.08744049]
[63.21859360 111.66387177]
[48.76096344 107.66676331]
[34.30332947 103.66965485]
[19.84569740 99.67255402]
[5.38806486 95.67544556]
[-9.06956768 91.67833710]
[-23.52720070 87.68122864]
[-37.98483276 83.68412018]
[-49.41347885 94.04701233]
[-64.63421631 96.56349945]
[-78.79016113 90.43058014]
[-87.36420441 77.60523987]
[-87.62039948 62.18000031]
[-79.47699738 49.07700348]
[-65.53252411 42.47736740]
[-50.23661041 44.48701096]
[-38.47013092 54.46466064]
[-33.98772430 69.22649384]
[-19.53009224 73.22359467]
[-5.07246017 77.22070312]
[9.38517189 81.21781158]
[23.84280396 85.21492004]
[38.30043793 89.21202850]
[52.75806808 93.20913696]
[67.21569824 97.20623779]
[73.57917023 83.72311401]
[84.72015381 75.16239929]
[97.70001984 72.80673981]
[109.49364471 76.41996002]
[118.95193481 64.77776337]
[128.41021729 53.13556671]
[137.86851501 41.49337006]
[147.32679749 29.85117340]
[148.75035095 23.37711716]
[152.64924622 19.22398758]
[157.27456665 17.99588585]
[167.09747314 6.65964270]
[176.92039490 -4.67660093]
[186.74330139 -16.01284409]
[186.60464478 -28.91725349]
[195.02847290 -38.15813446]
[207.09143066 -39.14481735]
[217.09295654 -50.32378387]
[213.76637268 -59.46328354]
[214.00170898 -69.12856293]
[217.72430420 -77.98847961]
[224.38209534 -84.83824158]
[233.02713013 -88.76319885]
[242.45036316 -89.26085663]
[251.35072327 -86.30482483]
[262.04113770 -96.82695007]
[272.73153687 -107.34906769]
[283.42196655 -117.87119293]
[294.11236572 -128.39331055]
[304.80279541 -138.91543579]
[315.49319458 -149.43756104]
[326.18362427 -159.95968628]
[336.87402344 -170.48181152]
[347.56442261 -181.00393677]
[351.49102783 -189.26344299]
[358.50891113 -191.60650635]
[369.36492920 -201.95770264]
[380.22094727 -212.30888367]
[391.07696533 -222.66006470]
[401.93298340 -233.01126099]
[412.78897095 -243.36244202]
[423.64498901 -253.71362305]
[434.41854858 -264.15060425]
[445.10894775 -274.67272949]
[455.79937744 -285.19485474]
[466.48977661 -295.71697998]
[470.89755249 -310.91177368]
[485.39572144 -314.32531738]
[496.08615112 -324.84744263]
[506.77655029 -335.36956787]
[505.35699463 -350.94256592]
[514.32208252 -363.75509644]
[529.43884277 -367.75747681]
[543.56951904 -361.05984497]
[550.04205322 -346.82470703]
[545.80035400 -331.77337646]
[532.84722900 -323.01269531]
[517.29870605 -324.67913818]
[506.60827637 -314.15701294]
[495.91784668 -303.63488770]
[492.27471924 -289.19271851]
[477.01190186 -285.02655029]
[466.32150269 -274.50445557]
[455.63107300 -263.98233032]
[444.94067383 -253.46018982]
[442.37609863 -246.52017212]
[433.99618530 -242.85762024]
[423.14016724 -232.50642395]
[412.28414917 -222.15524292]
[401.42813110 -211.80406189]
[390.57214355 -201.45288086]
[379.71612549 -191.10168457]
[368.86010742 -180.75050354]
[358.08654785 -170.31352234]
[347.39614868 -159.79139709]
[336.70574951 -149.26927185]
[326.01531982 -138.74714661]
[315.32492065 -128.22502136]
[304.63449097 -117.70290375]
[293.94409180 -107.18077850]
[283.25366211 -96.65866089]
[272.56326294 -86.13653564]
[261.87283325 -75.61441040]
[263.44512939 -55.24393463]
[249.28857422 -40.10811996]
[228.27192688 -40.32225037]
[218.27040100 -29.14328384]
[215.61273193 -11.80130005]
[198.07954407 -6.18993330]
[188.25663757 5.14630985]
[178.43371582 16.48255348]
[168.61080933 27.81879807]
[158.96899414 39.30946350]
[149.51071167 50.95166016]
[140.05241394 62.59385681]
[130.59413147 74.23605347]
[121.13584137 85.87825012]
[127.21522522 106.20665741]
[115.45970917 126.18544769]
[90.90952301 131.62243652]
[89.48368073 146.55451965]
[88.05783844 161.48658752]
[86.63199615 176.41867065]
[85.20615387 191.35075378]
[87.45860291 206.18066406]
[93.25377655 220.01599121]
[99.04895020 233.85130310]
[104.84413147 247.68661499]
[121.42047119 259.14550781]
[118.16916656 278.20010376]
[124.40039825 291.84457397]
[130.63162231 305.48907471]
[144.29655457 314.55557251]
[143.00729370 330.90396118]
[128.09010315 337.71640015]
[114.89051819 327.98486328]
[116.98713684 311.72030640]
[110.75591278 298.07580566]
[104.52468872 284.43133545]
[94.65619659 281.73086548]
[87.76278687 273.87564087]
[86.30659485 263.30474854]
[91.00881958 253.48179626]
[85.21363831 239.64648438]
[79.41846466 225.81115723]
[73.62328339 211.97584534]
[72.38253784 226.92443848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 174]
[31 173]
[32 172]
[33 171]
[34 170]
[46 70]
[47 69]
[48 68]
[49 67]
[50 66]
[51 65]
[52 64]
[53 63]
[74 167]
[75 166]
[76 165]
[77 164]
[78 163]
[81 162]
[82 161]
[83 160]
[84 159]
[87 157]
[88 156]
[95 153]
[96 152]
[97 151]
[98 150]
[99 149]
[100 148]
[101 147]
[102 146]
[103 145]
[104 144]
[106 143]
[107 142]
[108 141]
[109 140]
[110 139]
[111 138]
[112 137]
[113 135]
[114 134]
[115 133]
[116 132]
[118 130]
[119 129]
[120 128]
[175 196]
[176 195]
[177 194]
[178 193]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
