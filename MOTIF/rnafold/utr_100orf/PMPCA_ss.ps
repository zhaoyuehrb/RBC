%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCGCGUGCCUGAACGCCUUGGGCCGUCGGCGAGGGGGAGGGGAAGCCGUGGGCGGAAGCGGAAGUGACGACUGAAGCGGGGCGGAGACGCAAGAUGGCGGCUGUGGUGCUGGCGGCGACGCGGUUGCUGCGGGGCUCGGGUUCUUGGGGCUGUUCGCGGCUGAGGUUUGGACCUCCUGCGUACAGACGGUUUA\
) } def
/len { sequence length } bind def

/coor [
[-43.08978271 637.49047852]
[-46.18489075 639.20208740]
[-51.78673553 653.11682129]
[-57.38858032 667.03149414]
[-57.69206619 676.17272949]
[-63.19229507 681.12231445]
[-69.01531982 694.94592285]
[-74.83834076 708.76953125]
[-80.66136169 722.59313965]
[-74.46937561 737.13397217]
[-80.45029449 751.76281738]
[-95.05574799 757.80072021]
[-109.62057495 751.66552734]
[-115.50373077 736.99700928]
[-109.21483612 722.49786377]
[-94.48497772 716.77014160]
[-88.66195679 702.94653320]
[-82.83893585 689.12292480]
[-77.01591492 675.29925537]
[-71.30329895 661.42968750]
[-65.70145416 647.51495361]
[-60.09960938 633.60021973]
[-54.83218384 619.55554199]
[-49.90219879 605.38885498]
[-44.97220993 591.22210693]
[-40.04222107 577.05541992]
[-35.11223602 562.88873291]
[-30.18224716 548.72204590]
[-25.25226021 534.55535889]
[-20.32227325 520.38867188]
[-25.33931541 501.72161865]
[-9.90729237 488.76358032]
[-5.43157244 474.44686890]
[-0.95585299 460.13018799]
[3.40557003 445.77822876]
[7.65241909 431.39199829]
[11.89926815 417.00573730]
[16.14611816 402.61947632]
[20.39296722 388.23324585]
[24.63981628 373.84698486]
[15.43023205 362.17129517]
[14.85490990 347.13357544]
[23.34391022 334.49276733]
[37.81574631 329.21334839]
[42.06259537 314.82708740]
[46.30944443 300.44085693]
[50.09537125 285.92648315]
[53.41652679 271.29876709]
[56.73767853 256.67105103]
[60.05883408 242.04335022]
[63.37998962 227.41563416]
[66.70114136 212.78793335]
[70.02229309 198.16021729]
[73.34345245 183.53250122]
[76.66460419 168.90480042]
[79.98575592 154.27708435]
[83.30691528 139.64936829]
[86.62806702 125.02165985]
[72.84568024 113.44740295]
[68.18090057 94.85320282]
[75.72563171 75.96018982]
[64.04089355 66.55451202]
[49.13891602 70.45800781]
[34.96155930 64.90319824]
[26.86928177 52.21545029]
[27.78876877 37.37319565]
[16.10403061 27.96751022]
[4.41929150 18.56182671]
[-11.85964489 16.57983971]
[-18.03282547 1.38695121]
[-7.74981260 -11.38769817]
[8.41111279 -8.60264492]
[13.82497597 6.87708807]
[25.50971413 16.28277206]
[37.19445038 25.68845558]
[51.49765015 21.61948013]
[65.62123871 26.81449509]
[74.07649231 39.47790909]
[73.44657898 54.86977005]
[85.13131714 64.27545166]
[99.83428192 61.30512238]
[106.95133209 48.10105133]
[114.06838989 34.89698029]
[121.18544769 21.69290924]
[128.30250549 8.48883629]
[127.33254242 -9.89442062]
[142.60481262 -18.52876854]
[149.51040649 -31.84465408]
[156.41600037 -45.16053772]
[154.58662415 -65.22821808]
[171.29516602 -74.94690704]
[177.77262878 -88.47623444]
[184.25007629 -102.00555420]
[190.72752380 -115.53488159]
[175.91799927 -113.15207672]
[164.71180725 -123.12310028]
[165.35678101 -138.10922241]
[177.37821960 -147.08058167]
[191.92826843 -143.43418884]
[198.29798889 -129.85232544]
[205.83248901 -142.82273865]
[213.36698914 -155.79313660]
[220.90148926 -168.76353455]
[228.43598938 -181.73393250]
[235.97048950 -194.70433044]
[243.50498962 -207.67474365]
[251.03948975 -220.64514160]
[258.57400513 -233.61553955]
[254.74571228 -248.71461487]
[262.57153320 -261.76110840]
[276.98980713 -265.31774902]
[284.52429199 -278.28814697]
[292.05880737 -291.25854492]
[294.78656006 -307.99160767]
[311.62081909 -310.00262451]
[318.21340942 -294.38296509]
[305.02920532 -283.72406006]
[297.49468994 -270.75363159]
[289.96020508 -257.78323364]
[294.01330566 -243.49661255]
[286.55700684 -230.23544312]
[271.54440308 -226.08103943]
[264.00988770 -213.11064148]
[256.47540283 -200.14024353]
[248.94090271 -187.16983032]
[241.40640259 -174.19943237]
[233.87190247 -161.22903442]
[226.33740234 -148.25863647]
[218.80290222 -135.28823853]
[211.26840210 -122.31783295]
[204.25685120 -109.05743408]
[197.77940369 -95.52810669]
[191.30195618 -81.99877930]
[184.82449341 -68.46945953]
[189.07850647 -59.16326904]
[187.46797180 -48.83599854]
[180.28681946 -40.94178009]
[169.73188782 -38.25494766]
[162.82629395 -24.93906212]
[155.92070007 -11.62317657]
[159.27601624 0.00625865]
[153.62231445 11.15993786]
[141.50657654 15.60589218]
[134.38951111 28.80996513]
[127.27246094 42.01403427]
[120.15540314 55.21810913]
[113.03835297 68.42218018]
[124.77678680 77.90408325]
[131.00123596 91.17572021]
[130.79692078 105.40223694]
[124.58052063 117.71969604]
[113.94165039 125.81160736]
[101.25577545 128.34281921]
[97.93462372 142.97052002]
[94.61347198 157.59823608]
[91.29231262 172.22595215]
[87.97116089 186.85365295]
[84.65000916 201.48136902]
[81.32884979 216.10908508]
[78.00769806 230.73678589]
[74.68654633 245.36450195]
[71.36539459 259.99221802]
[68.04423523 274.61993408]
[64.72308350 289.24765015]
[66.16515350 293.37106323]
[66.20857239 297.33825684]
[65.07563019 300.72686768]
[63.10342789 303.23077393]
[60.69569778 304.68768311]
[56.44884872 319.07394409]
[52.20199966 333.46020508]
[61.48661804 345.75256348]
[61.74973679 360.97702026]
[53.09999847 373.29147339]
[39.02606964 378.09384155]
[34.77922058 392.48007202]
[30.53236961 406.86633301]
[26.28552055 421.25259399]
[22.03867149 435.63885498]
[17.79182243 450.02508545]
[18.36305046 459.15350342]
[13.36084843 464.60589600]
[8.88512897 478.92260742]
[4.40940952 493.23928833]
[10.01027679 502.58038330]
[9.54856396 513.24218750]
[3.41860914 521.70800781]
[-6.15557861 525.31866455]
[-11.08556557 539.48535156]
[-16.01555443 553.65203857]
[-20.94554138 567.81872559]
[-25.87552834 581.98541260]
[-30.80551720 596.15209961]
[-35.73550415 610.31878662]
[-40.66549301 624.48553467]
[-39.67905426 629.63482666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[4 20]
[6 19]
[7 18]
[8 17]
[9 16]
[23 195]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[32 184]
[33 183]
[34 182]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[44 171]
[45 170]
[46 169]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[61 80]
[62 79]
[66 75]
[67 74]
[68 73]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[87 140]
[88 139]
[89 138]
[91 134]
[92 133]
[93 132]
[94 131]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[111 119]
[112 118]
[113 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
