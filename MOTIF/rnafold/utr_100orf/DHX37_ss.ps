%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCACGGCCGGAGUUGGUGGUCUGGGAACCCACGUGGGCUGGGUUUCGGAUUGCUCUGCUGGUCCGGCCGCUGGAGCGCCCACCCUGGCCUAGUCGCCAUGGGGAAGCUGCGCCGGCGCUACAACAUCAAGGGGCGCCAGCAGGCGGGCCCCGGACCCUCGAAGGGCCCCCCCGAGCCGCCCCCCGUGCAGCUGGAAC\
) } def
/len { sequence length } bind def

/coor [
[61.58781433 122.53234100]
[47.55615616 127.83445740]
[33.52449417 133.13658142]
[26.96102905 147.26310730]
[12.65539932 152.44032288]
[-0.77163410 146.09600830]
[-14.80329418 151.39813232]
[-28.83495522 156.70025635]
[-42.86661530 162.00238037]
[-56.89827728 167.30450439]
[-70.92993927 172.60662842]
[-84.96159363 177.90875244]
[-98.99325562 183.21086121]
[-112.89610291 188.84210205]
[-126.66242218 194.79931641]
[-137.28987122 209.83218384]
[-154.62838745 207.14720154]
[-168.29943848 213.31991577]
[-181.97048950 219.49263000]
[-195.64154053 225.66534424]
[-209.31257629 231.83805847]
[-222.98362732 238.01078796]
[-236.65467834 244.18350220]
[-250.32572937 250.35621643]
[-263.99676514 256.52893066]
[-277.66781616 262.70162964]
[-284.20858765 269.09100342]
[-291.60244751 268.86206055]
[-305.36874390 274.81927490]
[-319.13507080 280.77648926]
[-332.90139771 286.73373413]
[-346.66772461 292.69094849]
[-360.43402100 298.64816284]
[-364.72781372 313.68469238]
[-377.71124268 322.40048218]
[-393.25390625 320.68020630]
[-404.01705933 309.33609009]
[-404.91867065 293.72451782]
[-395.53302002 281.21679688]
[-380.29171753 277.71865845]
[-366.39123535 284.88183594]
[-352.62493896 278.92462158]
[-338.85861206 272.96740723]
[-325.09228516 267.01019287]
[-311.32595825 261.05297852]
[-297.55966187 255.09574890]
[-283.84054565 249.03059387]
[-270.16949463 242.85787964]
[-256.49844360 236.68516541]
[-242.82739258 230.51245117]
[-229.15634155 224.33973694]
[-215.48530579 218.16702271]
[-201.81425476 211.99429321]
[-188.14320374 205.82157898]
[-174.47215271 199.64886475]
[-160.80110168 193.47615051]
[-156.22981262 182.27055359]
[-144.88331604 177.01852417]
[-132.61964417 181.03300476]
[-118.85332489 175.07579041]
[-117.22189331 171.94046021]
[-113.98613739 169.44273376]
[-109.46381378 168.33010864]
[-104.29537964 169.17921448]
[-90.26371765 163.87709045]
[-76.23205566 158.57496643]
[-62.20039749 153.27284241]
[-48.16873932 147.97071838]
[-34.13707733 142.66859436]
[-20.10541725 137.36647034]
[-6.07375669 132.06434631]
[-0.19756275 118.42594910]
[13.95700550 112.84896088]
[28.22237206 119.10491943]
[42.25403214 113.80280304]
[56.28569031 108.50067902]
[55.47284317 100.73120117]
[56.03015137 92.93922424]
[57.94046402 85.36450958]
[61.14499664 78.24015045]
[65.54514313 71.78536987]
[71.00551605 66.19879150]
[77.35807800 61.65230942]
[84.40735626 58.28583527]
[81.59663391 43.55152512]
[78.78591919 28.81721497]
[75.85955811 14.10543633]
[72.81774902 -0.58290547]
[69.77593994 -15.27124786]
[66.73413086 -29.95958900]
[53.38885117 -38.42593384]
[50.02050018 -53.86710358]
[58.62746429 -67.12213135]
[74.10338593 -70.32704163]
[87.26667023 -61.58041382]
[90.30777740 -46.07147598]
[81.42247772 -33.00139999]
[84.46428680 -18.31305695]
[87.50609589 -3.62471485]
[90.54790497 11.06362724]
[94.98670197 16.98127556]
[93.52022552 26.00649643]
[96.33094788 40.74080658]
[99.14166260 55.47511292]
[119.75356293 60.08760834]
[135.92185974 73.67848206]
[144.00946045 93.19042969]
[159.00759888 93.42604065]
[174.00575256 93.66165161]
[189.00390625 93.89726257]
[204.00204468 94.13286591]
[219.00019836 94.36847687]
[233.99835205 94.60408783]
[248.99650574 94.83969879]
[257.63519287 91.84336090]
[264.22787476 95.19864655]
[279.22048950 95.66980743]
[266.60742188 87.55128479]
[257.99481201 75.27027130]
[254.65852356 60.64601135]
[257.09271240 45.84484100]
[264.93685913 33.05931473]
[277.02893066 24.18340492]
[291.57769775 20.53192902]
[306.42800903 22.64579391]
[319.38000488 30.21186829]
[328.51510620 42.10935593]
[332.48004150 56.57584381]
[330.68750000 71.46835327]
[323.40301514 84.58080292]
[311.70565796 93.97078705]
[297.33001709 98.24717712]
[311.85876465 101.97752380]
[326.38751221 105.70787048]
[340.91625977 109.43822479]
[355.44500732 113.16857147]
[369.97375488 116.89891815]
[375.01782227 115.48780060]
[379.63491821 116.09744263]
[383.12521362 118.22500610]
[385.09085083 121.16237640]
[399.42773438 125.57298279]
[418.84622192 120.18321991]
[431.39477539 134.88769531]
[445.86312866 138.84579468]
[461.21585083 135.02421570]
[471.45037842 145.84567261]
[485.91873169 149.80377197]
[500.38708496 153.76185608]
[514.85546875 157.71995544]
[529.32379150 161.67805481]
[543.79217529 165.63615417]
[558.32092285 169.36650085]
[572.90649414 172.86817932]
[587.49200439 176.36985779]
[603.05358887 171.19598389]
[615.13378906 182.28660583]
[611.30548096 198.23263550]
[595.50695801 202.63017273]
[583.99035645 190.95541382]
[569.40478516 187.45372009]
[554.81927490 183.95204163]
[550.34454346 185.64430237]
[544.75891113 184.53723145]
[539.83410645 180.10450745]
[525.36572266 176.14640808]
[510.89736938 172.18832397]
[496.42898560 168.23022461]
[481.96063232 164.27212524]
[467.49227905 160.31402588]
[453.17443848 164.41871643]
[441.90502930 153.31414795]
[427.43667603 149.35606384]
[419.04229736 155.20164490]
[408.59667969 155.46243286]
[399.54824829 149.81053162]
[395.01715088 139.90988159]
[380.68023682 135.49926758]
[366.24340820 131.42767334]
[351.71466064 127.69731903]
[337.18591309 123.96697235]
[322.65716553 120.23661804]
[308.12841797 116.50627136]
[293.59967041 112.77592468]
[278.74932861 110.66240692]
[263.75671387 110.19124603]
[248.76089478 109.83784485]
[233.76274109 109.60224152]
[218.76458740 109.36663055]
[203.76644897 109.13101959]
[188.76829529 108.89540863]
[173.77014160 108.65979767]
[158.77198792 108.42418671]
[143.77384949 108.18858337]
[138.38920593 122.57147980]
[128.43893433 134.26994324]
[115.10642242 141.89270020]
[99.97730255 144.53315735]
[84.85089111 141.87727356]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[6 71]
[7 70]
[8 69]
[9 68]
[10 67]
[11 66]
[12 65]
[13 64]
[14 60]
[15 59]
[17 56]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[26 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[84 104]
[85 103]
[86 102]
[87 100]
[88 99]
[89 98]
[90 97]
[107 194]
[108 193]
[109 192]
[110 191]
[111 190]
[112 189]
[113 188]
[114 187]
[116 186]
[117 185]
[132 184]
[133 183]
[134 182]
[135 181]
[136 180]
[137 179]
[141 178]
[142 177]
[144 173]
[145 172]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
