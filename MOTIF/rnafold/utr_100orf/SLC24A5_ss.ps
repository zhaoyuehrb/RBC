%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCACAUGAUCCAGUUUAAUCCUCCUCUUCUCCCUUCCUGAAGCUGCACGCUGCAGUAAGAGCACAGCAGAAAUGCAGACAAAAGGGGGCCAAACAUGGGCGAGAAGGGCUCUGUUGCUCGGCAUCCUGUGGGCCACUGCACAUCUGCCUCUCUCAGGGACCUCCCUGCCCC\
) } def
/len { sequence length } bind def

/coor [
[59.33775330 84.62724304]
[67.90960693 72.64624023]
[58.40679550 61.04035187]
[48.90398407 49.43446732]
[39.40117645 37.82857895]
[29.89836884 26.22269058]
[20.39555931 14.61680317]
[5.66631746 8.84099197]
[3.58987784 -5.90816593]
[-5.91293097 -17.51405334]
[-15.41574001 -29.11994171]
[-25.02293205 -40.63956833]
[-34.73372650 -52.07200241]
[-44.54733276 -63.41630173]
[-54.46294403 -74.67154694]
[-64.37856293 -85.92679596]
[-76.85993958 -80.38761902]
[-90.38058472 -78.59879303]
[-103.83973694 -80.69637299]
[-116.14435577 -86.50038910]
[-126.29786682 -95.53024292]
[-133.48089600 -107.04451752]
[-137.11740112 -120.10184479]
[-136.92079163 -133.63783264]
[-132.91658020 -146.55184937]
[-125.43945312 -157.79655457]
[-134.94226074 -169.40245056]
[-144.44506836 -181.00833130]
[-153.94787598 -192.61422729]
[-163.45068359 -204.22010803]
[-172.95350647 -215.82600403]
[-182.45631409 -227.43188477]
[-191.95912170 -239.03778076]
[-217.63781738 -243.25909424]
[-223.50726318 -272.55957031]
[-235.11314392 -282.06237793]
[-246.71903992 -291.56518555]
[-258.32492065 -301.06799316]
[-269.93081665 -310.57080078]
[-281.53671265 -320.07360840]
[-296.92660522 -314.07348633]
[-313.15103149 -316.62857056]
[-325.80657959 -326.94973755]
[-331.50665283 -342.15316772]
[-328.78750610 -358.06558228]
[-340.56307983 -367.35729980]
[-352.33862305 -376.64904785]
[-364.11419678 -385.94076538]
[-375.88973999 -395.23248291]
[-393.20471191 -392.85903931]
[-406.62576294 -403.51919556]
[-408.17034912 -420.25024414]
[-420.11175537 -429.32785034]
[-432.05316162 -438.40548706]
[-443.99453735 -447.48309326]
[-459.66317749 -449.67498779]
[-465.11285400 -463.53680420]
[-477.05426025 -472.61444092]
[-492.67807007 -470.23278809]
[-505.36016846 -479.66357422]
[-507.57650757 -495.31167603]
[-498.01214600 -507.89337158]
[-482.34149170 -509.94412231]
[-469.86163330 -500.24731445]
[-467.97665405 -484.55581665]
[-456.03524780 -475.47821045]
[-441.22073364 -473.93560791]
[-434.91693115 -459.42449951]
[-422.97555542 -450.34686279]
[-411.03414917 -441.26925659]
[-399.09274292 -432.19165039]
[-386.67382812 -435.70123291]
[-374.32028198 -431.34194946]
[-366.62884521 -420.49774170]
[-366.59802246 -407.00805664]
[-354.82247925 -397.71630859]
[-343.04690552 -388.42459106]
[-331.27133179 -379.13287354]
[-319.49578857 -369.84115601]
[-307.15133667 -375.72640991]
[-293.40954590 -375.71133423]
[-280.95858765 -369.74172974]
[-272.25881958 -358.93389893]
[-269.05657959 -345.36614990]
[-272.03390503 -331.67947388]
[-260.42800903 -322.17666626]
[-248.82211304 -312.67385864]
[-237.21623230 -303.17105103]
[-225.61033630 -293.66824341]
[-214.00445557 -284.16543579]
[-199.62600708 -288.43865967]
[-195.09390259 -302.73760986]
[-190.56179810 -317.03656006]
[-194.61364746 -332.92727661]
[-182.69041443 -344.18643188]
[-167.05770874 -339.23156738]
[-163.79710388 -323.15985107]
[-176.26284790 -312.50445557]
[-180.79495239 -298.20550537]
[-185.32705688 -283.90655518]
[-176.59838867 -272.48315430]
[-175.20565796 -259.37344360]
[-180.35322571 -248.54058838]
[-170.85041809 -236.93469238]
[-161.34761047 -225.32881165]
[-151.84480286 -213.72291565]
[-142.34199524 -202.11703491]
[-132.83918762 -190.51113892]
[-123.33638000 -178.90525818]
[-113.83356476 -167.29937744]
[-98.44072723 -173.04144287]
[-81.98673248 -173.17958069]
[-66.45137787 -167.67967224]
[-53.70988464 -157.18702698]
[-45.30658722 -142.95074463]
[-42.26773071 -126.67499542]
[-44.97619247 -110.31506348]
[-53.12331390 -95.84240723]
[-43.20769882 -84.58716583]
[-33.29208374 -73.33191681]
[-26.48753357 -70.38127899]
[-23.30129623 -61.78279495]
[-13.59050179 -50.35036469]
[-6.84033108 -47.27735901]
[-3.80985212 -38.62274933]
[5.69295645 -27.01686287]
[15.19576550 -15.41097450]
[29.24530411 -10.46529484]
[32.00144577 5.11399460]
[41.50425720 16.71988106]
[51.00706482 28.32576942]
[60.50987244 39.93165588]
[70.01268005 51.53754425]
[79.51548767 63.14343262]
[94.61844635 56.64415359]
[111.63543701 56.31237411]
[128.06092834 62.63008118]
[141.31520081 75.06915283]
[149.14733887 92.11128998]
[150.00961304 111.42649841]
[163.13328552 118.69075012]
[176.25695801 125.95499420]
[192.63473511 125.11808777]
[201.32006836 139.02839661]
[193.37823486 153.37620544]
[176.97911072 153.40170288]
[168.99270630 139.07865906]
[155.86903381 131.81442261]
[142.74536133 124.55017090]
[137.20816040 129.60876465]
[147.32536316 140.68316650]
[157.44239807 151.75772095]
[146.36769104 161.87457275]
[136.25097656 150.80036926]
[126.13377380 139.72596741]
[120.59657288 144.78457642]
[126.64810181 158.50970459]
[132.69963074 172.23481750]
[138.75115967 185.95994568]
[144.80268860 199.68507385]
[158.34739685 208.93022156]
[156.84356689 225.26026917]
[141.83821106 231.87626648]
[128.76754761 221.97222900]
[131.07756042 205.73660278]
[125.02603149 192.01147461]
[118.97450256 178.28634644]
[112.92298126 164.56121826]
[106.87145233 150.83610535]
[89.57441711 148.89471436]
[74.36366272 141.39356995]
[62.91329575 129.49394226]
[56.36772537 114.81930542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 134]
[3 133]
[4 132]
[5 131]
[6 130]
[7 129]
[9 127]
[10 126]
[11 125]
[12 123]
[13 122]
[14 120]
[15 119]
[16 118]
[26 110]
[27 109]
[28 108]
[29 107]
[30 106]
[31 105]
[32 104]
[33 103]
[35 90]
[36 89]
[37 88]
[38 87]
[39 86]
[40 85]
[45 79]
[46 78]
[47 77]
[48 76]
[49 75]
[52 71]
[53 70]
[54 69]
[55 68]
[57 66]
[58 65]
[91 100]
[92 99]
[93 98]
[140 149]
[141 148]
[142 147]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
