%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCCUGGCUGGCUCUGCCAAGUGUAACAAACUCACAGCCCUCUCCAAACUGGCUGGGGCUGCUGGGAGACUCCCAAGGAACUCGUCAGGAAGGCAGGAGACAGGAGACGGGACCUCUACAGGGAGACGGUGGGCCGGCCCUUGGGGGGGCUGAUGUGUCCCCAAGGCUGAGUCCCGUCAGGGUCUGGCCUCGGCCUCAGGCCCCCA\
) } def
/len { sequence length } bind def

/coor [
[290.70065308 179.13845825]
[285.40560913 165.10414124]
[288.91116333 150.51951599]
[300.00595093 140.42466736]
[314.85620117 138.30813599]
[299.96350098 136.51721191]
[285.07080078 134.72630310]
[270.17810059 132.93539429]
[255.28540039 131.14447021]
[241.72537231 137.30686951]
[228.94770813 127.97724915]
[214.05499268 126.18634033]
[211.07063293 128.06544495]
[207.02761841 128.59196472]
[202.57180786 127.28399658]
[198.53987122 123.96636963]
[183.74250793 121.50910187]
[168.94515991 119.05183411]
[154.14779663 116.59455872]
[139.35043335 114.13729095]
[124.55307770 111.68002319]
[111.09918976 135.99031067]
[75.72814178 141.56883240]
[64.28569794 151.26783752]
[52.84325790 160.96682739]
[53.10215759 176.60226440]
[43.21012878 188.71348572]
[27.83788490 191.58195496]
[14.24372578 183.85325623]
[8.84639931 169.17663574]
[14.19435883 154.48196411]
[27.76246071 146.70761108]
[43.14426041 149.52438354]
[54.58670425 139.82539368]
[66.02915192 130.12638855]
[63.28909302 123.14484406]
[57.80897522 109.18173981]
[55.06892014 102.20018005]
[40.08402252 102.87315369]
[25.09912682 103.54612732]
[10.11423016 104.21910095]
[-4.87066555 104.89207458]
[-19.85556221 105.56504822]
[-34.84045792 106.23801422]
[-45.47359085 117.62108612]
[-60.67999268 118.09011078]
[-71.46647644 107.88289642]
[-86.45137787 108.55587006]
[-101.43627167 109.22883606]
[-116.98818970 115.97971344]
[-127.78043365 102.90439606]
[-118.20369720 88.91431427]
[-102.10924530 94.24394226]
[-87.12435150 93.57096863]
[-72.13945007 92.89799500]
[-62.31135559 81.76497650]
[-47.12412643 80.86902618]
[-35.51343155 91.25312042]
[-20.52853394 90.58014679]
[-5.54363775 89.90718079]
[9.44125843 89.23420715]
[24.42615318 88.56123352]
[39.41104889 87.88825989]
[54.39594650 87.21528625]
[59.66656876 73.17176056]
[48.82464600 62.80582428]
[37.98272324 52.43988419]
[27.14080048 42.07394409]
[16.22164345 31.78939247]
[5.22586536 21.58680153]
[-5.76991272 11.38420963]
[-18.66513252 11.08560181]
[-27.61355972 2.36082029]
[-28.19853592 -9.72206497]
[-39.04045868 -20.08800507]
[-49.88238144 -30.45394325]
[-65.50922394 -37.02951431]
[-63.51657104 -53.86595154]
[-46.78648758 -56.61196136]
[-39.51644135 -41.29586792]
[-28.67451859 -30.92992783]
[-17.83259583 -20.56398773]
[-0.58476388 -17.32861137]
[4.43267870 0.38843167]
[15.42845631 10.59102249]
[26.42423439 20.79361343]
[33.46616364 23.03897285]
[37.50674057 31.23202133]
[48.34866333 41.59796143]
[59.19058609 51.96390152]
[70.03250885 62.32984161]
[94.01235199 57.52037048]
[114.38667297 65.19313049]
[125.87516022 80.45673370]
[127.01034546 96.88266754]
[141.80770874 99.33993530]
[156.60507202 101.79720306]
[171.40242004 104.25447083]
[186.19978333 106.71173859]
[200.99714661 109.16900635]
[215.84591675 111.29363251]
[230.73861694 113.08454895]
[245.36386108 107.05025482]
[257.07629395 116.25177002]
[271.96902466 118.04268646]
[286.86172485 119.83359528]
[301.75442505 121.62451172]
[316.64712524 123.41542816]
[331.52600098 121.51316833]
[345.48913574 116.03305054]
[359.45223999 110.55293274]
[373.41534424 105.07282257]
[387.37844849 99.59270477]
[401.34155273 94.11258698]
[415.30465698 88.63247681]
[429.26776123 83.15235901]
[440.63732910 73.36804962]
[448.13732910 60.37766647]
[455.63732910 47.38728333]
[463.13732910 34.39690399]
[462.59625244 18.00668526]
[476.66110229 9.57389927]
[490.86318970 17.77347374]
[490.59259033 34.17038727]
[476.12771606 41.89690399]
[468.62771606 54.88728333]
[461.12771606 67.87766266]
[453.62771606 80.86804962]
[457.61795044 87.21847534]
[470.31881714 79.23799896]
[483.01968384 71.25751495]
[492.63284302 59.74285889]
[506.55453491 65.32730865]
[505.54544067 80.29332733]
[491.00015259 83.95838165]
[478.29928589 91.93885803]
[465.59844971 99.91934204]
[469.58868408 106.26977539]
[484.54672241 105.14881897]
[499.50479126 104.02787018]
[514.46282959 102.90692139]
[529.42089844 101.78596497]
[537.74542236 98.02375031]
[544.61083984 100.76184082]
[559.58398438 99.86477661]
[574.55712891 98.96771240]
[589.53027344 98.07064819]
[604.50341797 97.17359161]
[619.47656250 96.27652740]
[634.44970703 95.37946320]
[647.76245117 86.83070374]
[660.92968750 93.79301453]
[675.90283203 92.89595032]
[689.28363037 83.41505432]
[704.06964111 90.50760651]
[705.05041504 106.87740326]
[691.21691895 115.68459320]
[676.79992676 107.86910248]
[661.82678223 108.76616669]
[649.58496094 117.25076294]
[635.34680176 110.35261536]
[620.37365723 111.24967957]
[605.40051270 112.14674377]
[590.42730713 113.04380035]
[575.45416260 113.94086456]
[560.48101807 114.83792877]
[545.50787354 115.73499298]
[530.54187012 116.74402618]
[515.58380127 117.86497498]
[500.62573242 118.98592377]
[485.66769409 120.10688019]
[470.70962524 121.22782898]
[443.87670898 115.03755188]
[434.74786377 97.11546326]
[420.78475952 102.59558105]
[406.82165527 108.07569885]
[392.85855103 113.55580902]
[378.89544678 119.03592682]
[364.93234253 124.51604462]
[350.96923828 129.99615479]
[337.00613403 135.47627258]
[342.27282715 139.42959595]
[346.67056274 144.54981995]
[353.38024902 157.96546936]
[360.08996582 171.38113403]
[366.79965210 184.79679871]
[373.50933838 198.21246338]
[380.21905518 211.62812805]
[387.12869263 224.94190979]
[394.23672485 238.15084839]
[401.34472656 251.35977173]
[415.57202148 259.51556396]
[415.35195923 275.91323853]
[400.91091919 283.68426514]
[387.10464478 274.83450317]
[388.13580322 258.46780396]
[381.02777100 245.25886536]
[373.91973877 232.04994202]
[369.68374634 229.84265137]
[366.78976440 224.95053101]
[366.80337524 218.33781433]
[360.09368896 204.92216492]
[353.38400269 191.50650024]
[346.67428589 178.09083557]
[339.96459961 164.67517090]
[333.25488281 151.25950623]
[336.27188110 165.95297241]
[330.51150513 179.80281067]
[317.96441650 188.02291870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 108]
[6 107]
[7 106]
[8 105]
[9 104]
[11 102]
[12 101]
[16 100]
[17 99]
[18 98]
[19 97]
[20 96]
[21 95]
[23 35]
[24 34]
[25 33]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[44 58]
[47 55]
[48 54]
[49 53]
[65 91]
[66 90]
[67 89]
[68 88]
[69 86]
[70 85]
[71 84]
[74 82]
[75 81]
[76 80]
[109 181]
[110 180]
[111 179]
[112 178]
[113 177]
[114 176]
[115 175]
[116 174]
[117 128]
[118 127]
[119 126]
[120 125]
[138 172]
[139 171]
[140 170]
[141 169]
[142 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[149 162]
[150 161]
[152 159]
[153 158]
[183 206]
[184 205]
[185 204]
[186 203]
[187 202]
[188 201]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
