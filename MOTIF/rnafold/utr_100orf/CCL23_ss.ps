%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCAUCCCGAGAAGCCAGGAAGCAGUGAGCCCAGGAGUCCUCGGCCAGCCCUGCCUGCCCACCAGGAGGAUGAAGGUCUCCGUGGCUGCCCUCUCCUGCCUCAUGCUUGUUACUGCCCUUGGAUCCCAGGCCCGGGUCACAAAAGAUGCAGAGACAGAGUUCAUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[92.74353790 120.76141357]
[87.13008118 134.67144775]
[81.51662445 148.58148193]
[75.90317535 162.49153137]
[70.28971863 176.40156555]
[72.30035400 192.09448242]
[60.36235046 201.00140381]
[54.74889755 214.91145325]
[57.57234955 231.06570435]
[44.82217407 241.37905884]
[29.61465836 235.24200439]
[27.59398842 218.96781921]
[40.83885956 209.29798889]
[46.45231247 195.38795471]
[44.04016495 180.68997192]
[56.37968445 170.78810120]
[61.99313736 156.87806702]
[67.60659027 142.96803284]
[73.22004700 129.05799866]
[78.83349609 115.14795685]
[82.65941620 103.40647125]
[90.93662262 97.84719086]
[80.92684174 86.67560577]
[70.91706085 75.50402069]
[60.90727615 64.33243561]
[50.89749146 53.16085815]
[42.80862427 48.83657455]
[40.80919647 41.69261932]
[31.00512123 30.34008026]
[21.20104790 18.98754120]
[11.39697361 7.63500214]
[-1.40947855 5.90873766]
[-9.34096718 -3.77969861]
[-8.55537319 -15.87386608]
[-18.15046883 -27.40357399]
[-27.74556351 -38.93328094]
[-37.34066010 -50.46298599]
[-46.93575287 -61.99269485]
[-56.53084946 -73.52239990]
[-71.62155151 -71.02880096]
[-85.84036255 -76.38811493]
[-95.40396881 -88.06732178]
[-97.82140350 -102.86637115]
[-92.54227448 -116.79462433]
[-102.13736725 -128.32434082]
[-111.73246002 -139.85404968]
[-121.32756042 -151.38374329]
[-130.92265320 -162.91345215]
[-140.51774597 -174.44316101]
[-155.30541992 -170.82569885]
[-170.13685608 -173.97462463]
[-182.08143616 -183.21298218]
[-188.80279541 -196.66603088]
[-189.01570129 -211.64147949]
[-182.73150635 -225.16827393]
[-192.32659912 -236.69798279]
[-201.92169189 -248.22769165]
[-211.51678467 -259.75738525]
[-222.43395996 -260.12701416]
[-231.15408325 -266.33358765]
[-234.92030334 -276.11703491]
[-232.70744324 -286.13894653]
[-241.87506104 -298.01138306]
[-251.15071106 -309.79962158]
[-260.53363037 -321.50265503]
[-276.00277710 -326.94665527]
[-278.75637817 -343.11297607]
[-265.96173096 -353.37109375]
[-250.78088379 -347.16833496]
[-248.83059692 -330.88555908]
[-239.44767761 -319.18252563]
[-232.78572083 -315.91876221]
[-230.00260925 -307.17898560]
[-220.83500671 -295.30654907]
[-202.46705627 -289.33343506]
[-199.98707581 -269.35247803]
[-190.39198303 -257.82278442]
[-180.79689026 -246.29307556]
[-171.20179749 -234.76336670]
[-156.75856018 -238.48606873]
[-142.07089233 -235.55661011]
[-130.06248474 -226.50347900]
[-123.14737701 -213.07955933]
[-122.74476624 -197.92288208]
[-128.98803711 -184.03825378]
[-119.39294434 -172.50854492]
[-109.79785156 -160.97885132]
[-100.20275116 -149.44914246]
[-90.60765839 -137.91943359]
[-81.01256561 -126.38972473]
[-66.35710907 -129.05116272]
[-52.24332428 -123.98587799]
[-42.49549866 -112.45998383]
[-39.80799866 -97.50424194]
[-45.00114441 -83.11750031]
[-35.40604782 -71.58779144]
[-25.81095123 -60.05808258]
[-16.21585655 -48.52837753]
[-6.62076139 -36.99866867]
[2.97433376 -25.46896172]
[19.73370171 -20.31731033]
[22.74951172 -2.16907191]
[32.55358505 9.18346691]
[42.35766220 20.53600502]
[52.16173553 31.88854408]
[62.06907654 43.15107346]
[72.07885742 54.32265854]
[82.08863831 65.49423981]
[92.09841919 76.66582489]
[102.10820770 87.83740234]
[115.18894958 95.17867279]
[129.93943787 97.90322876]
[144.68991089 100.62777710]
[159.66590881 95.52580261]
[170.77609253 105.44613647]
[185.52658081 108.17069244]
[200.27706909 110.89524841]
[215.02755737 113.61979675]
[230.89987183 101.35729980]
[250.38359070 104.61185455]
[261.07470703 120.85991669]
[275.95227051 122.77252960]
[290.82983398 124.68514252]
[305.72424316 126.46180725]
[320.63427734 128.10237122]
[335.54428101 129.74293518]
[350.45428467 131.38351440]
[365.36431885 133.02407837]
[376.54000854 122.08618164]
[392.13571167 120.94242096]
[404.78759766 130.13284302]
[408.52182007 145.31802368]
[401.57522583 159.32797241]
[387.22775269 165.54762268]
[372.25384521 161.04025269]
[363.72372437 147.93409729]
[348.81372070 146.29351807]
[333.90371704 144.65295410]
[318.99368286 143.01239014]
[304.08367920 141.37182617]
[297.06512451 143.77468872]
[288.91723633 139.56269836]
[274.03967285 137.65008545]
[259.16210938 135.73748779]
[252.98585510 144.01565552]
[243.85026550 149.00505066]
[233.38568115 149.73835754]
[223.49197388 146.01483154]
[215.99353027 138.44897461]
[212.30299377 128.37028503]
[197.55250549 125.64572906]
[182.80203247 122.92118073]
[168.05154419 120.19662476]
[154.13059998 125.49347687]
[141.96536255 115.37826538]
[127.21488190 112.65370941]
[112.46439362 109.92916107]
[124.10294342 119.39193726]
[135.74148560 128.85472107]
[149.73693848 134.25169373]
[160.38993835 144.81169128]
[165.90939331 158.75929260]
[165.36734009 173.74949646]
[158.85491943 187.26202393]
[147.46704102 197.02502441]
[133.11834717 201.39706421]
[118.22124481 199.64308167]
[105.28038025 192.05796814]
[96.47147369 179.91700745]
[93.27555847 165.26141357]
[96.22865295 150.55828857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[7 14]
[8 13]
[22 110]
[23 109]
[24 108]
[25 107]
[26 106]
[28 105]
[29 104]
[30 103]
[31 102]
[34 100]
[35 99]
[36 98]
[37 97]
[38 96]
[39 95]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[49 85]
[55 79]
[56 78]
[57 77]
[58 76]
[62 74]
[63 73]
[64 71]
[65 70]
[111 157]
[112 156]
[113 155]
[115 153]
[116 152]
[117 151]
[118 150]
[121 144]
[122 143]
[123 142]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
