%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPANXN5)
} def

/sequence { (\
AUGGAAAAGCCCACUUCAAGCACCAAUGGGGAGAAGAGGAAGAGCCCCUGUGACUCCAACAGCAAAAAUGAUGAGAUGCAGGAGACACCAAACAGGGACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.587973275 ubox
2 18 0.010500486 ubox
2 22 0.004565063 ubox
2 25 0.008352333 ubox
2 87 0.004871503 ubox
2 90 0.022330666 ubox
3 11 0.130980386 ubox
3 12 0.675506734 ubox
3 17 0.011542759 ubox
3 21 0.005239232 ubox
3 24 0.009308609 ubox
3 46 0.080082146 ubox
3 47 0.005672315 ubox
3 48 0.003918030 ubox
3 86 0.005555328 ubox
3 89 0.024784363 ubox
3 93 0.003274669 ubox
3 100 0.026258786 ubox
4 10 0.137940020 ubox
4 11 0.674029113 ubox
4 16 0.011130107 ubox
4 17 0.013820405 ubox
4 23 0.009278660 ubox
4 45 0.097611985 ubox
4 46 0.006992331 ubox
4 47 0.003910487 ubox
4 88 0.024610034 ubox
4 99 0.029407911 ubox
5 15 0.010459381 ubox
5 16 0.013843347 ubox
6 15 0.013345796 ubox
7 16 0.008201772 ubox
8 15 0.009675674 ubox
8 100 0.089391889 ubox
9 14 0.010028467 ubox
9 21 0.011950682 ubox
9 45 0.279793638 ubox
9 99 0.099135069 ubox
10 20 0.011944457 ubox
10 30 0.114568276 ubox
10 31 0.048991566 ubox
10 39 0.180196807 ubox
10 44 0.280246361 ubox
10 96 0.003799113 ubox
10 97 0.120172848 ubox
11 29 0.114993105 ubox
11 30 0.048910141 ubox
11 31 0.010379528 ubox
11 38 0.178705538 ubox
11 39 0.637499629 ubox
11 95 0.003767713 ubox
11 96 0.120284549 ubox
11 97 0.009720762 ubox
12 28 0.115080691 ubox
12 29 0.048561436 ubox
12 30 0.010407607 ubox
12 38 0.639384185 ubox
12 95 0.120147546 ubox
12 96 0.009673403 ubox
13 27 0.105793554 ubox
14 20 0.025496782 ubox
14 29 0.010449765 ubox
14 30 0.010330360 ubox
14 31 0.141855446 ubox
14 33 0.069395912 ubox
14 36 0.717074265 ubox
14 38 0.087162058 ubox
14 39 0.566643948 ubox
14 42 0.304346028 ubox
14 44 0.009457485 ubox
14 84 0.011073780 ubox
14 95 0.005691383 ubox
14 96 0.003344213 ubox
15 19 0.023050576 ubox
15 26 0.065451263 ubox
15 28 0.010369072 ubox
15 29 0.007954896 ubox
15 30 0.142588563 ubox
15 31 0.003676620 ubox
15 32 0.069622515 ubox
15 33 0.016911044 ubox
15 34 0.004839010 ubox
15 35 0.719628668 ubox
15 36 0.004375281 ubox
15 37 0.083696309 ubox
15 38 0.569554962 ubox
15 39 0.004623280 ubox
15 40 0.022699282 ubox
15 41 0.305746707 ubox
15 43 0.008715781 ubox
15 44 0.003274452 ubox
15 83 0.010988726 ubox
15 84 0.006892562 ubox
15 92 0.010936874 ubox
15 94 0.005470770 ubox
15 95 0.003287093 ubox
16 25 0.065611707 ubox
16 28 0.003886492 ubox
16 29 0.143101932 ubox
16 30 0.005166827 ubox
16 31 0.069193950 ubox
16 32 0.022380948 ubox
16 33 0.005139850 ubox
16 34 0.719841253 ubox
16 35 0.004815059 ubox
16 36 0.076435577 ubox
16 37 0.571607113 ubox
16 38 0.003859771 ubox
16 39 0.025289208 ubox
16 40 0.305848989 ubox
16 42 0.005826152 ubox
16 43 0.004416357 ubox
16 82 0.010815123 ubox
16 83 0.008321106 ubox
16 91 0.010071021 ubox
16 98 0.003653878 ubox
17 28 0.144807243 ubox
17 29 0.006024302 ubox
17 30 0.067774199 ubox
17 31 0.023464412 ubox
17 33 0.718675983 ubox
17 36 0.571261753 ubox
17 38 0.028685772 ubox
17 39 0.305461963 ubox
17 42 0.004686482 ubox
17 81 0.010736662 ubox
17 82 0.008636062 ubox
17 97 0.003935078 ubox
18 27 0.141777699 ubox
19 100 0.031752173 ubox
20 45 0.008164117 ubox
20 79 0.013493459 ubox
20 99 0.035233907 ubox
21 28 0.243168590 ubox
21 44 0.008167506 ubox
21 52 0.009531745 ubox
21 78 0.013501524 ubox
22 27 0.202503777 ubox
22 51 0.009564809 ubox
22 77 0.011894280 ubox
23 29 0.329058489 ubox
23 30 0.825336692 ubox
23 31 0.278981464 ubox
23 39 0.013723462 ubox
23 50 0.008934576 ubox
23 96 0.037425825 ubox
23 97 0.008989386 ubox
24 28 0.327089276 ubox
24 29 0.824197199 ubox
24 30 0.278888417 ubox
24 38 0.013888100 ubox
24 50 0.004542462 ubox
24 52 0.022424001 ubox
24 95 0.037392524 ubox
24 96 0.008989142 ubox
25 49 0.005602265 ubox
25 51 0.022342622 ubox
26 51 0.005169580 ubox
27 50 0.005613656 ubox
27 58 0.007995806 ubox
27 61 0.005248388 ubox
27 90 0.006206651 ubox
28 47 0.007051207 ubox
28 48 0.071195315 ubox
28 49 0.013924307 ubox
28 57 0.008810036 ubox
28 60 0.005501530 ubox
28 89 0.006386591 ubox
29 46 0.007587537 ubox
29 47 0.071376959 ubox
29 48 0.014851964 ubox
29 56 0.008812349 ubox
29 88 0.006288963 ubox
29 89 0.003893420 ubox
30 45 0.007690980 ubox
30 46 0.071438795 ubox
30 47 0.014852304 ubox
30 55 0.008757853 ubox
30 57 0.010545584 ubox
30 88 0.003870132 ubox
30 89 0.003981175 ubox
31 45 0.071279803 ubox
31 46 0.014798082 ubox
31 54 0.008735105 ubox
31 56 0.010626241 ubox
31 88 0.003918736 ubox
32 55 0.010627777 ubox
33 54 0.010584412 ubox
35 49 0.035239718 ubox
36 48 0.036407408 ubox
37 49 0.053769357 ubox
37 100 0.005163802 ubox
38 46 0.062011801 ubox
38 47 0.036251084 ubox
38 48 0.055141428 ubox
38 49 0.003407086 ubox
38 89 0.016660826 ubox
38 99 0.005547330 ubox
38 100 0.005287556 ubox
39 45 0.063873247 ubox
39 46 0.036934221 ubox
39 47 0.054929290 ubox
39 48 0.003688613 ubox
39 88 0.016649128 ubox
39 99 0.005794412 ubox
41 49 0.008779463 ubox
41 100 0.128568930 ubox
42 48 0.009060258 ubox
42 99 0.142349805 ubox
43 49 0.004028280 ubox
43 100 0.629846309 ubox
44 48 0.004053159 ubox
44 99 0.687653134 ubox
45 96 0.014171119 ubox
45 97 0.104956469 ubox
46 82 0.006023658 ubox
46 95 0.014156568 ubox
46 96 0.096203213 ubox
46 97 0.977984286 ubox
47 81 0.004302799 ubox
47 82 0.122117792 ubox
47 95 0.086020189 ubox
47 96 0.981865090 ubox
47 97 0.024687684 ubox
48 81 0.122845834 ubox
48 95 0.982784348 ubox
48 96 0.024581301 ubox
49 61 0.003669227 ubox
49 80 0.123004312 ubox
49 87 0.010939618 ubox
49 90 0.055140463 ubox
49 94 0.981166120 ubox
49 95 0.024085234 ubox
50 60 0.003969436 ubox
50 79 0.123077275 ubox
50 86 0.014193461 ubox
50 88 0.487671311 ubox
50 89 0.050689325 ubox
50 93 0.861724036 ubox
51 58 0.004574529 ubox
51 59 0.003791842 ubox
51 78 0.122313250 ubox
51 80 0.015622012 ubox
51 85 0.014762158 ubox
51 87 0.653312421 ubox
51 90 0.102449278 ubox
51 92 0.733312609 ubox
52 57 0.009769104 ubox
52 60 0.004790131 ubox
52 63 0.003780088 ubox
52 77 0.082266289 ubox
52 79 0.031624997 ubox
52 86 0.803677267 ubox
52 89 0.154392883 ubox
54 62 0.005115597 ubox
54 75 0.122176532 ubox
54 81 0.012263173 ubox
54 84 0.986495655 ubox
55 61 0.005022747 ubox
55 74 0.122309961 ubox
55 76 0.054842633 ubox
55 80 0.011900067 ubox
55 83 0.989185477 ubox
55 85 0.014145637 ubox
56 73 0.106389377 ubox
56 75 0.056217684 ubox
56 82 0.989410178 ubox
56 84 0.014355184 ubox
57 70 0.022125783 ubox
57 73 0.083450575 ubox
57 78 0.019914533 ubox
57 81 0.988026643 ubox
58 69 0.020824830 ubox
58 72 0.103165895 ubox
58 77 0.033414832 ubox
60 70 0.133522925 ubox
60 73 0.077073964 ubox
60 78 0.684026113 ubox
61 69 0.132064099 ubox
61 72 0.073933458 ubox
61 77 0.668098192 ubox
62 79 0.655255336 ubox
63 70 0.101808260 ubox
63 73 0.338919050 ubox
63 78 0.656272161 ubox
64 69 0.089502948 ubox
64 72 0.321730962 ubox
64 77 0.604771859 ubox
68 77 0.081836930 ubox
69 76 0.138842042 ubox
69 80 0.058570285 ubox
70 77 0.004613493 ubox
70 79 0.059182669 ubox
71 77 0.017503699 ubox
72 76 0.018862643 ubox
72 78 0.008994033 ubox
72 80 0.049281571 ubox
73 77 0.005373852 ubox
73 79 0.051927890 ubox
77 87 0.004425720 ubox
78 86 0.005064268 ubox
81 89 0.062549047 ubox
82 88 0.062461523 ubox
83 100 0.030637711 ubox
84 99 0.033440784 ubox
88 96 0.068572326 ubox
88 97 0.051287291 ubox
89 95 0.068810027 ubox
89 96 0.051482903 ubox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
14 36 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
46 97 0.9500000 lbox
47 96 0.9500000 lbox
48 95 0.9500000 lbox
49 94 0.9500000 lbox
50 93 0.9500000 lbox
51 92 0.9500000 lbox
54 84 0.9500000 lbox
55 83 0.9500000 lbox
56 82 0.9500000 lbox
57 81 0.9500000 lbox
60 78 0.9500000 lbox
61 77 0.9500000 lbox
showpage
end
%%EOF
