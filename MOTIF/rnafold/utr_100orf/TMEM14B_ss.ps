%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUUCUCCCCGCCCUGCCGCGGCCCCGGGGCGCAGCGCGCACGCAAUCGCGUUUCCGGAGAGACCUGGCUGCUGUGUCCCGCGGCUUGCGCUCCGUAGUGGACUCCGCGGGCCUUCGGCAGAUGCAGGCCUGGGGUAGUCUCCUUUCUGGACUGAGAAGAGAAGAAUGGAGAAGCCCCUCUUCCCAUUAGUGCCUUUGCAUUGGUUUGGCUUUGGCUACACAGCACUGGUUGUUUCUGGUGGGAUCGUUGGCU\
AUGUAAAAACAG\
) } def
/len { sequence length } bind def

/coor [
[119.96722412 368.96145630]
[117.69020081 354.13528442]
[115.41317749 339.30911255]
[100.89216614 335.83502197]
[88.77471161 327.04226685]
[80.92560577 314.24551392]
[78.56748962 299.37854004]
[82.09044647 284.70196533]
[90.98792267 272.45950317]
[103.92926788 264.53500366]
[101.65224457 249.70884705]
[99.37522125 234.88269043]
[97.09819794 220.05651855]
[94.82117462 205.23036194]
[92.54415131 190.40419006]
[81.45204926 180.30639648]
[66.47781372 179.42773438]
[51.50356674 178.54905701]
[36.52932739 177.67037964]
[21.55508423 176.79170227]
[6.58084106 175.91304016]
[-9.70322323 184.54425049]
[-23.96239853 174.28959656]
[-38.94591141 173.58651733]
[-53.92942429 172.88343811]
[-68.91294098 172.18034363]
[-83.89645386 171.47726440]
[-118.13987732 201.77893066]
[-133.05647278 203.35850525]
[-147.97306824 204.93809509]
[-162.88967896 206.51768494]
[-177.80627441 208.09725952]
[-192.72286987 209.67684937]
[-207.63946533 211.25643921]
[-222.55606079 212.83601379]
[-237.47267151 214.41560364]
[-252.37974548 216.08258057]
[-267.27679443 217.83691406]
[-282.16333008 219.67852783]
[-297.03878784 221.60736084]
[-311.91427612 223.53619385]
[-326.75350952 225.72628784]
[-341.55197144 228.17694092]
[-356.35043335 230.62760925]
[-371.13427734 233.16496277]
[-385.90298462 235.78892517]
[-400.67169189 238.41288757]
[-412.90557861 248.44494629]
[-426.79010010 243.05334473]
[-441.55880737 245.67730713]
[-456.32751465 248.30126953]
[-468.56140137 258.33334351]
[-482.44592285 252.94172668]
[-497.21466064 255.56568909]
[-511.98336792 258.18966675]
[-526.75207520 260.81362915]
[-541.52075195 263.43759155]
[-553.71435547 274.40338135]
[-569.22192383 269.06976318]
[-572.09063721 252.92349243]
[-559.36938477 242.57444763]
[-544.14471436 248.66886902]
[-529.37603760 246.04490662]
[-514.60729980 243.42094421]
[-499.83859253 240.79698181]
[-485.06988525 238.17301941]
[-473.89236450 228.32862854]
[-458.95147705 233.53256226]
[-444.18276978 230.90859985]
[-429.41406250 228.28463745]
[-418.23654175 218.44024658]
[-403.29565430 223.64416504]
[-388.52694702 221.02020264]
[-373.75823975 218.39624023]
[-367.74325562 214.14680481]
[-358.80108643 215.82914734]
[-344.00262451 213.37849426]
[-329.20419312 210.92782593]
[-326.87631226 208.32298279]
[-323.18530273 206.70019531]
[-318.59902954 206.68173218]
[-313.84310913 208.66072083]
[-298.96762085 206.73188782]
[-284.09216309 204.80305481]
[-277.88461304 200.84020996]
[-269.03112793 202.93986511]
[-254.13407898 201.18553162]
[-247.88050842 197.29573059]
[-239.05224609 199.49900818]
[-224.13565063 197.91941833]
[-209.21905518 196.33982849]
[-194.30245972 194.76025391]
[-179.38584900 193.18066406]
[-164.46925354 191.60107422]
[-149.55265808 190.02149963]
[-134.63606262 188.44190979]
[-119.71945953 186.86231995]
[-116.84933472 179.93322754]
[-111.10908508 166.07504272]
[-108.23896027 159.14593506]
[-117.66965485 147.48136902]
[-127.10034180 135.81681824]
[-136.53103638 124.15225220]
[-151.19116211 115.63655853]
[-147.06658936 99.19197845]
[-130.12287903 98.60304260]
[-124.86647797 114.72155762]
[-115.43578339 126.38612366]
[-106.00508881 138.05068970]
[-96.57439423 149.71524048]
[-83.19336700 156.49374390]
[-68.20985413 157.19683838]
[-53.22634125 157.89991760]
[-38.24282837 158.60299683]
[-23.25931549 159.30609131]
[-14.12653732 151.40705872]
[-1.65917242 151.84873962]
[7.45951509 160.93879700]
[22.43375778 161.81745911]
[37.40800095 162.69613647]
[52.38224030 163.57481384]
[67.35648346 164.45349121]
[82.33072662 165.33215332]
[56.17188644 143.08607483]
[46.43697739 113.50922394]
[52.92557144 86.32366180]
[70.56749725 68.92455292]
[91.71535492 64.36859894]
[109.01186371 71.00588226]
[116.86433411 58.22547531]
[110.19775391 42.66237640]
[114.09500885 26.35725594]
[126.82351685 15.70464230]
[143.22792053 14.76019859]
[150.93003845 1.88862324]
[158.63214111 -10.98295212]
[166.33425903 -23.85452843]
[174.03637695 -36.72610474]
[171.65550232 -49.37959671]
[178.30778503 -59.93313599]
[189.97721863 -63.03583145]
[197.82968140 -75.81623840]
[205.68214417 -88.59664154]
[213.53460693 -101.37705231]
[221.38708496 -114.15745544]
[222.01904297 -129.96603394]
[235.27413940 -136.75955200]
[243.12660217 -149.53996277]
[250.97906494 -162.32037354]
[258.83154297 -175.10076904]
[253.07479858 -189.38945007]
[256.79208374 -204.15547180]
[268.35458374 -213.78732300]
[283.19396973 -214.75222778]
[291.04641724 -227.53263855]
[290.95379639 -243.93151855]
[305.24401855 -251.97650146]
[319.21652222 -243.39158630]
[318.49761963 -227.00819397]
[303.82681274 -219.68017578]
[295.97436523 -206.89976501]
[301.81951904 -193.22598267]
[298.45233154 -178.55880737]
[286.95986938 -168.56997681]
[271.61193848 -167.24830627]
[263.75946045 -154.46791077]
[255.90701294 -141.68750000]
[248.05453491 -128.90708923]
[247.98423767 -114.01264954]
[234.16748047 -106.30499268]
[226.31501770 -93.52458191]
[218.46255493 -80.74417877]
[210.61009216 -67.96376801]
[202.75762939 -55.18336487]
[203.20773315 -37.62548065]
[186.90794373 -29.02399063]
[179.20584106 -16.15241432]
[171.50372314 -3.28083944]
[163.80160522 9.59073639]
[156.09950256 22.46231079]
[162.44964600 34.18439102]
[162.18504333 47.62151718]
[155.26791382 59.27046585]
[143.40881348 66.04157257]
[129.64474487 66.07794189]
[121.79227448 78.85834503]
[141.18498230 73.41350555]
[162.94587708 75.13412476]
[177.89540100 73.90466309]
[192.84492493 72.67519379]
[207.79446411 71.44572449]
[222.74398804 70.21625519]
[237.69351196 68.98679352]
[252.64305115 67.75732422]
[267.59255981 66.52785492]
[280.75939941 56.75204849]
[295.69937134 63.51438522]
[297.04351807 79.85835266]
[283.40911865 88.97068024]
[268.82205200 81.47738647]
[253.87251282 82.70685577]
[238.92298889 83.93631744]
[223.97344971 85.16578674]
[209.02392578 86.39525604]
[194.07440186 87.62471771]
[179.12486267 88.85418701]
[164.17533875 90.08365631]
[162.42094421 104.98137665]
[160.66667175 119.87776947]
[174.92161560 124.54645538]
[189.17655945 129.21514893]
[203.43150330 133.88383484]
[219.36024475 129.98419189]
[230.50482178 142.01458740]
[225.40066528 157.59916687]
[209.29847717 160.70587158]
[198.76281738 148.13877869]
[184.50787354 143.47009277]
[170.25292969 138.80140686]
[155.99798584 134.13270569]
[152.53054810 140.78303528]
[142.12820435 160.73400879]
[154.11714172 169.74874878]
[166.10606384 178.76348877]
[178.09500122 187.77822876]
[190.08393860 196.79296875]
[206.41943359 198.23635864]
[213.09091187 213.21713257]
[203.23530579 226.32434082]
[186.99122620 224.07443237]
[181.06919861 208.78189087]
[169.08026123 199.76715088]
[157.09133911 190.75241089]
[145.10240173 181.73768616]
[133.11346436 172.72294617]
[126.67768097 176.57400513]
[134.37959290 189.44569397]
[121.50778198 197.14741516]
[113.80610657 184.27610779]
[107.37031555 188.12716675]
[109.64733887 202.95333862]
[111.92436218 217.77949524]
[114.20138550 232.60566711]
[116.47840881 247.43182373]
[118.75543213 262.25799561]
[133.47836304 265.93374634]
[145.63954163 274.94198608]
[153.40435791 287.88500977]
[155.61627197 302.77441406]
[151.96902466 317.33679199]
[143.04859924 329.36056519]
[130.23934937 337.03210449]
[132.51637268 351.85827637]
[134.79339600 366.68441772]
[149.56581116 370.26828003]
[161.83930969 379.23654175]
[169.74227905 392.22158813]
[172.06958008 407.24331665]
[168.46629333 422.01101685]
[159.48190308 434.27270508]
[146.48646545 442.15856934]
[131.46168518 444.46609497]
[116.69875336 440.84338379]
[104.44888306 431.84289551]
[96.58010101 418.83709717]
[94.29234314 403.80929565]
[97.93447113 389.05114746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 254]
[2 253]
[3 252]
[10 245]
[11 244]
[12 243]
[13 242]
[14 241]
[15 240]
[16 123]
[17 122]
[18 121]
[19 120]
[20 119]
[21 118]
[23 115]
[24 114]
[25 113]
[26 112]
[27 111]
[28 97]
[29 96]
[30 95]
[31 94]
[32 93]
[33 92]
[34 91]
[35 90]
[36 89]
[37 87]
[38 86]
[39 84]
[40 83]
[41 82]
[42 78]
[43 77]
[44 76]
[45 74]
[46 73]
[47 72]
[49 70]
[50 69]
[51 68]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[100 110]
[101 109]
[102 108]
[103 107]
[129 186]
[130 185]
[134 180]
[135 179]
[136 178]
[137 177]
[138 176]
[141 174]
[142 173]
[143 172]
[144 171]
[145 170]
[147 168]
[148 167]
[149 166]
[150 165]
[154 161]
[155 160]
[188 207]
[189 206]
[190 205]
[191 204]
[192 203]
[193 202]
[194 201]
[195 200]
[209 220]
[210 219]
[211 218]
[212 217]
[222 235]
[223 234]
[224 233]
[225 232]
[226 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
