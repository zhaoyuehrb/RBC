%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGGAGGUGCGACGGCUCCUCCGCGCGCGCCCGCUGCACCCCAGCCCGCCCGCCGCCCCUCCCGGCCCUCCGCAGCCUCGGCCCGCCCUCGCCGCAGAUAUAAGGCGGCCCAGGCGGUGGCUGCUCCGAGCCCGGACGCCGCCGCCCACCAGUCAGCCGGCGUCCCCAUGGCCCGGUCCGCGACACUGGCGGCCGCCGCCCUGGCGCUGUGCCUGCUGCUGGCGCCGCCUGGCCUCGCGUGGUACAAGCCAGC\
GGCGGGGCACAGCU\
) } def
/len { sequence length } bind def

/coor [
[114.54730988 141.73916626]
[111.51438904 127.04949951]
[104.16933441 128.56613159]
[99.20338440 142.72026062]
[94.23743439 156.87438965]
[89.27147675 171.02851868]
[84.30552673 185.18264771]
[79.33957672 199.33676147]
[74.37362671 213.49089050]
[77.10587311 229.07438660]
[65.59136200 238.52241516]
[60.62540817 252.67654419]
[64.19088745 268.68341064]
[51.92993164 279.57379150]
[36.45555878 274.14465332]
[33.68647766 257.98098755]
[46.47128296 247.71058655]
[51.43723297 233.55647278]
[48.34978485 218.98536682]
[60.21949768 208.52494812]
[65.18544769 194.37081909]
[70.15140533 180.21669006]
[75.11735535 166.06256104]
[80.08330536 151.90843201]
[85.04925537 137.75430298]
[90.01520538 123.60018158]
[79.97824860 112.45300293]
[65.38257599 115.91224670]
[50.78689957 119.37148285]
[39.14305878 130.08276367]
[24.97450829 125.48913574]
[10.37883472 128.94836426]
[-4.21683836 132.40760803]
[-18.28195953 146.88046265]
[-36.53768158 140.44595337]
[-51.04891205 144.24388123]
[-65.56014252 148.04180908]
[-80.07136536 151.83973694]
[-94.58259583 155.63766479]
[-94.55772400 168.90039062]
[-98.99214172 181.86245728]
[-107.66991425 193.02215576]
[-119.87030029 200.99353027]
[-134.42274475 204.67500305]
[-149.81771851 203.39382935]
[-164.36320496 197.00782776]
[-178.20463562 202.78837585]
[-183.97758484 217.50056458]
[-198.49598694 223.74490356]
[-213.14631653 217.81672668]
[-219.23680115 203.23312378]
[-213.15406799 188.64628601]
[-198.50688171 182.71032715]
[-183.98518372 188.94694519]
[-170.14373779 183.16639709]
[-173.94184875 168.65452576]
[-177.73959351 154.14393616]
[-192.63816833 155.88533020]
[-207.53674316 157.62672424]
[-217.14129639 170.17774963]
[-232.81845093 172.17837524]
[-245.26722717 162.44166565]
[-247.10198975 146.74424744]
[-237.23420715 134.39910889]
[-221.51826477 132.73040771]
[-209.27813721 142.72814941]
[-194.37956238 140.98675537]
[-179.48098755 139.24536133]
[-167.98260498 124.80352783]
[-152.41288757 116.04154205]
[-135.27949524 113.86090088]
[-119.16081238 118.14208221]
[-106.31851196 127.82501984]
[-98.38052368 141.12643433]
[-83.86929321 137.32850647]
[-69.35806274 133.53057861]
[-54.84683990 129.73265076]
[-40.33560944 125.93472290]
[-36.01316833 116.72364807]
[-27.15775108 111.28159332]
[-16.54942513 111.59902954]
[-7.67607641 117.81193542]
[6.91959667 114.35269928]
[21.51527023 110.89345551]
[32.11513138 100.42961121]
[47.32766342 104.77581024]
[61.92333603 101.31657410]
[76.51901245 97.85733032]
[78.50226593 90.62430573]
[67.95752716 79.95619965]
[82.46878052 76.15824890]
[84.45203400 68.92522430]
[73.66193390 58.50534439]
[62.87184143 48.08546829]
[52.08174515 37.66559601]
[37.34014511 41.97615051]
[22.42208099 38.32281494]
[11.34042931 27.68831444]
[7.07610226 12.93327808]
[10.77618122 -1.97326362]
[21.44536400 -13.02152634]
[36.21369553 -17.23958206]
[51.10856628 -13.49279594]
[62.12332916 -2.78903484]
[66.29507446 11.99244404]
[62.50161743 26.87549782]
[73.29171753 37.29537201]
[84.08181000 47.71524811]
[94.87191010 58.13512421]
[109.74921417 56.22050095]
[117.54945374 43.40815353]
[125.34970093 30.59580612]
[121.83345032 15.42103291]
[129.92652893 2.53860831]
[144.41502380 -0.72007990]
[152.21525574 -13.53242683]
[160.01550293 -26.34477234]
[167.81575012 -39.15711975]
[175.61598206 -51.96946716]
[183.41622925 -64.78181458]
[191.21647644 -77.59416199]
[199.01670837 -90.40650940]
[206.81695557 -103.21884918]
[214.61720276 -116.03119659]
[222.41743469 -128.84355164]
[230.21768188 -141.65589905]
[238.01792908 -154.46824646]
[244.98281860 -167.75320435]
[251.08387756 -181.45637512]
[257.18493652 -195.15956116]
[255.72958374 -210.91369629]
[267.97460938 -219.39358521]
[274.07565308 -233.09677124]
[280.17669678 -246.79995728]
[276.69961548 -267.96798706]
[293.98999023 -279.27133179]
[299.60910034 -293.17910767]
[305.22817993 -307.08685303]
[310.84729004 -320.99459839]
[316.46636963 -334.90237427]
[322.08547974 -348.81011963]
[327.70458984 -362.71789551]
[333.32366943 -376.62564087]
[332.78799438 -383.15795898]
[335.24169922 -388.23455811]
[339.23873901 -390.78918457]
[345.17993164 -404.56240845]
[335.94400024 -416.83404541]
[334.09719849 -432.08151245]
[340.13632202 -446.20330811]
[352.43685913 -455.40072632]
[367.69000244 -457.19970703]
[381.79278564 -451.11636353]
[390.95162964 -438.78707886]
[392.70278931 -423.52832031]
[386.57525635 -409.44470215]
[374.21731567 -400.32455444]
[358.95318604 -398.62121582]
[353.01196289 -384.84799194]
[347.23144531 -371.00653076]
[341.61233521 -357.09878540]
[335.99325562 -343.19104004]
[330.37414551 -329.28326416]
[324.75503540 -315.37551880]
[319.13595581 -301.46774292]
[313.51684570 -287.55999756]
[307.89773560 -273.65225220]
[312.62216187 -266.20773315]
[313.42361450 -257.28942871]
[309.99899292 -248.86763000]
[302.99279785 -242.86083984]
[293.87988281 -240.69889832]
[287.77883911 -226.99572754]
[281.67779541 -213.29254150]
[283.56951904 -198.51855469]
[270.88809204 -189.05851746]
[264.78704834 -175.35533142]
[258.68600464 -161.65214539]
[271.24859619 -169.84857178]
[286.17428589 -171.33992004]
[300.11026001 -165.79121399]
[309.92608643 -154.44883728]
[313.41683960 -139.86067200]
[309.79837036 -125.30365753]
[299.88345337 -114.04777527]
[285.89938354 -108.62142944]
[270.98733521 -110.24356842]
[258.49710083 -118.54979706]
[251.23429871 -131.67428589]
[250.83026123 -146.66799927]
[243.03002930 -133.85565186]
[235.22978210 -121.04330444]
[227.42955017 -108.23095703]
[219.62930298 -95.41860962]
[211.82905579 -82.60626221]
[204.02882385 -69.79391479]
[196.22857666 -56.98157120]
[188.42832947 -44.16922379]
[180.62809753 -31.35687828]
[172.82785034 -18.54453087]
[165.02760315 -5.73218441]
[157.22737122 7.08016205]
[160.98513794 21.44730186]
[153.25709534 34.55195999]
[138.16204834 38.39604950]
[130.36180115 51.20839310]
[122.56156158 64.02074432]
[144.57919312 112.33362579]
[154.74516296 123.36325836]
[164.91114807 134.39289856]
[175.07713318 145.42253113]
[185.24310303 156.45216370]
[195.40908813 167.48179626]
[205.57507324 178.51142883]
[215.74104309 189.54106140]
[225.90702820 200.57070923]
[236.13700867 211.54101562]
[246.43063354 222.45161438]
[256.72424316 233.36221313]
[267.01788330 244.27282715]
[277.31149292 255.18342590]
[287.60513306 266.09402466]
[297.89874268 277.00463867]
[308.19238281 287.91525269]
[318.48599243 298.82583618]
[329.03070068 309.49398804]
[339.82080078 319.91384888]
[350.61090088 330.33374023]
[361.40100098 340.75360107]
[372.19110107 351.17346191]
[387.49288940 355.19412231]
[391.27334595 369.60098267]
[402.06344604 380.02087402]
[418.09771729 383.46099854]
[422.87741089 399.14816284]
[411.48559570 410.94470215]
[395.64120483 406.71539307]
[391.64358521 390.81097412]
[380.85348511 380.39108276]
[366.32345581 377.11572266]
[361.77124023 361.96356201]
[350.98114014 351.54370117]
[340.19104004 341.12380981]
[329.40093994 330.70394897]
[318.61083984 320.28405762]
[315.84317017 320.17965698]
[312.94903564 318.99221802]
[310.33407593 316.66787720]
[308.41613770 313.29803467]
[307.57540894 309.11947632]
[297.28176880 298.20886230]
[286.98815918 287.29824829]
[276.69451904 276.38766479]
[266.40090942 265.47705078]
[256.10726929 254.56645203]
[245.81364441 243.65583801]
[235.52001953 232.74523926]
[225.22639465 221.83464050]
[218.37493896 219.13562012]
[214.87739563 210.73667908]
[204.71141052 199.70704651]
[194.54542542 188.67741394]
[184.37945557 177.64778137]
[174.21347046 166.61814880]
[164.04748535 155.58850098]
[153.88151550 144.55886841]
[143.71553040 133.52923584]
[133.54956055 122.49960327]
[126.20449829 124.01623535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 26]
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[11 18]
[12 17]
[27 88]
[28 87]
[29 86]
[31 84]
[32 83]
[33 82]
[35 78]
[36 77]
[37 76]
[38 75]
[39 74]
[46 55]
[47 54]
[57 68]
[58 67]
[59 66]
[92 109]
[93 108]
[94 107]
[95 106]
[110 207]
[111 206]
[112 205]
[115 202]
[116 201]
[117 200]
[118 199]
[119 198]
[120 197]
[121 196]
[122 195]
[123 194]
[124 193]
[125 192]
[126 191]
[127 190]
[128 178]
[129 177]
[130 176]
[132 174]
[133 173]
[134 172]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[143 160]
[146 159]
[147 158]
[208 268]
[209 267]
[210 266]
[211 265]
[212 264]
[213 263]
[214 262]
[215 261]
[216 260]
[217 258]
[218 257]
[219 256]
[220 255]
[221 254]
[222 253]
[223 252]
[224 251]
[225 250]
[226 245]
[227 244]
[228 243]
[229 242]
[230 241]
[232 239]
[233 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
