%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCAAGGGCGGGGACUCAGUCACCGGCCUCCGCCUCCCGCGGCGUCCACACUCGCCGCGCGCGCGGCGGCCGGGCUGGACCUUGCUGGCCCGCGGCGCCAUGAGCCGCAGCCUGGACUCGGCGCGGAGCUUCCUGGAGCGGCUGGAAGCGCGGGGCGGCCGGGAGGGGGCAGUCCUCGCCGGCGAGUUCAGCGACAUCC\
) } def
/len { sequence length } bind def

/coor [
[114.35514832 142.63082886]
[105.80466461 154.95515442]
[97.25418091 167.27949524]
[88.70369720 179.60383606]
[80.15321350 191.92816162]
[82.75817871 207.28562927]
[73.91120911 219.66246033]
[59.25415421 222.05125427]
[50.70367050 234.37557983]
[42.15318680 246.69992065]
[33.60270309 259.02426147]
[32.09329987 274.77328491]
[18.48120499 280.81979370]
[9.93072128 293.14413452]
[1.47633135 305.53457642]
[-6.88145256 317.99041748]
[-15.23923683 330.44622803]
[-19.04376602 346.96777344]
[-35.97285461 347.88555908]
[-41.54120255 331.87213135]
[-27.69505692 322.08843994]
[-19.33727264 309.63262939]
[-10.97948837 297.17678833]
[-9.86223984 289.86553955]
[-2.39361382 284.59365845]
[6.15687037 272.26931763]
[7.05468702 257.40179443]
[21.27836990 250.47377014]
[29.82885361 238.14944458]
[38.37933731 225.82510376]
[46.92982101 213.50076294]
[44.03558731 198.93508911]
[52.53142929 186.31465149]
[67.82888031 183.37768555]
[76.37936401 171.05334473]
[84.92984772 158.72900391]
[93.48033142 146.40467834]
[102.03081512 134.08033752]
[98.55333710 127.43525696]
[88.12091064 107.50000000]
[73.12091064 107.50000000]
[58.12090683 107.50000000]
[43.12090683 107.50000000]
[28.12090874 107.50000000]
[13.12090874 107.50000000]
[-1.87909162 107.50000000]
[-10.89050961 120.13225555]
[-25.61660194 125.02325439]
[-40.39488602 120.29229736]
[-49.54280853 107.75853729]
[-49.54280853 92.24146271]
[-40.39488602 79.70770264]
[-25.61660194 74.97674561]
[-10.89050961 79.86774445]
[-1.87909162 92.50000000]
[13.12090874 92.50000000]
[28.12090874 92.50000000]
[43.12090683 92.50000000]
[58.12090683 92.50000000]
[73.12091064 92.50000000]
[88.12091064 92.50000000]
[101.76979065 86.27841949]
[111.60871887 74.95607758]
[121.44764709 63.63373566]
[124.71781158 55.09679031]
[131.52870178 52.21334839]
[141.54252625 41.04538727]
[151.55635071 29.87742424]
[161.57017517 18.70946312]
[171.58399963 7.54150152]
[181.59782410 -3.62646031]
[183.33338928 -10.01818562]
[187.42518616 -13.97520638]
[192.10093689 -14.97981644]
[202.45724487 -25.83094788]
[212.81353760 -36.68207932]
[223.16984558 -47.53321075]
[233.52613831 -58.38434219]
[243.88244629 -69.23547363]
[243.68775940 -84.81108856]
[254.34509277 -95.66815186]
[269.19528198 -95.75775909]
[279.55157471 -106.60889435]
[289.90786743 -117.46002197]
[300.26416016 -128.31115723]
[304.19485474 -143.63630676]
[318.57925415 -147.50134277]
[328.93554688 -158.35247803]
[339.29183960 -169.20359802]
[349.64816284 -180.05473328]
[360.00445557 -190.90586853]
[370.36074829 -201.75698853]
[374.02551270 -210.13212585]
[380.96350098 -212.69476318]
[391.48730469 -223.38352966]
[395.65921021 -243.10070801]
[414.49493408 -247.45272827]
[424.68124390 -258.46359253]
[434.86752319 -269.47448730]
[445.05383301 -280.48535156]
[440.62197876 -295.12454224]
[444.08978271 -309.91885376]
[454.42837524 -320.91790771]
[468.78829956 -325.23638916]
[483.28408813 -321.81036377]
[493.47036743 -332.82122803]
[503.65667725 -343.83212280]
[513.84295654 -354.84298706]
[524.02923584 -365.85388184]
[534.21551514 -376.86474609]
[534.49603271 -389.76461792]
[543.21295166 -398.72647095]
[555.29931641 -399.32351685]
[565.65563965 -410.17462158]
[569.58630371 -425.49978638]
[583.97070312 -429.36480713]
[594.32696533 -440.21594238]
[604.68328857 -451.06707764]
[614.86956787 -462.07797241]
[624.88342285 -473.24591064]
[634.89721680 -484.41387939]
[633.78723145 -500.17913818]
[644.21295166 -512.05682373]
[659.98907471 -513.00006104]
[671.75585938 -502.44934082]
[672.53228760 -486.66412354]
[661.85772705 -475.00955200]
[646.06518555 -474.40005493]
[636.05139160 -463.23208618]
[626.03753662 -452.06414795]
[625.39923096 -447.32446289]
[621.77203369 -442.93765259]
[615.53442383 -440.71078491]
[605.17810059 -429.85964966]
[594.82183838 -419.00851440]
[591.63189697 -404.45950317]
[576.50671387 -399.81832886]
[566.15045166 -388.96719360]
[562.93389893 -371.71865845]
[545.22644043 -366.67846680]
[535.04010010 -355.66757202]
[524.85382080 -344.65670776]
[514.66754150 -333.64581299]
[504.48126221 -322.63494873]
[494.29495239 -311.62405396]
[498.83670044 -297.43823242]
[495.64682007 -282.78625488]
[485.48413086 -271.62442017]
[471.00393677 -267.01782227]
[456.06469727 -270.29907227]
[445.87841797 -259.28817749]
[435.69210815 -248.27731323]
[425.50582886 -237.26643372]
[426.81976318 -227.12406921]
[422.23440552 -217.73739624]
[413.04855347 -212.31582642]
[402.17605591 -212.85972595]
[391.65225220 -202.17095947]
[381.21188354 -191.40069580]
[370.85559082 -180.54956055]
[360.49926758 -169.69842529]
[350.14297485 -158.84730530]
[339.78668213 -147.99617004]
[329.43038940 -137.14503479]
[326.24044800 -122.59603119]
[311.11529541 -117.95485687]
[300.75900269 -107.10372162]
[290.40270996 -96.25259399]
[280.04638672 -85.40145874]
[280.64950562 -70.56327057]
[270.30133057 -59.41115189]
[254.73356628 -58.87916946]
[244.37727356 -48.02804184]
[234.02096558 -37.17691040]
[223.66467285 -26.32577896]
[213.30836487 -15.47464657]
[202.95207214 -4.62351608]
[192.76577759 6.38736200]
[182.75195312 17.55532265]
[172.73812866 28.72328568]
[162.72431946 39.89124680]
[152.71049500 51.05920792]
[142.69667053 62.22716904]
[132.76998901 73.47266388]
[122.93106079 84.79500580]
[113.09213257 96.11734772]
[127.15483093 90.89809418]
[140.90025330 84.89282990]
[155.82788086 83.42115784]
[170.48138428 86.62664795]
[183.43112183 94.19658661]
[193.41375732 105.39244080]
[199.45535278 119.12193298]
[200.96650696 134.04562378]
[197.79978943 148.70753479]
[190.26412964 161.67726135]
[179.09471130 171.68946838]
[165.38124084 177.76736450]
[150.46160889 179.31799316]
[135.79136658 176.19004822]
[122.80175018 168.68872070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[4 35]
[5 34]
[8 31]
[9 30]
[10 29]
[11 28]
[13 26]
[14 25]
[15 23]
[16 22]
[17 21]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[62 186]
[63 185]
[64 184]
[66 183]
[67 182]
[68 181]
[69 180]
[70 179]
[71 178]
[74 177]
[75 176]
[76 175]
[77 174]
[78 173]
[79 172]
[82 169]
[83 168]
[84 167]
[85 166]
[87 164]
[88 163]
[89 162]
[90 161]
[91 160]
[92 159]
[94 158]
[95 157]
[97 153]
[98 152]
[99 151]
[100 150]
[105 145]
[106 144]
[107 143]
[108 142]
[109 141]
[110 140]
[113 138]
[114 137]
[116 135]
[117 134]
[118 133]
[119 130]
[120 129]
[121 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
