%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SWI5)
} def

/sequence { (\
AUGCAGCGGCGUGGCCAGAGGGACCUGUGGCGUCACAACAAAAGCUGCGCACGCAACCGCUGUCCCCGCCCACCUCGGGAGAGGGGCGGGGCCGGCUUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.011093058 ubox
2 11 0.011571682 ubox
2 35 0.004326264 ubox
2 49 0.281363186 ubox
2 51 0.741427665 ubox
2 53 0.026768624 ubox
2 55 0.128744993 ubox
3 7 0.003494644 ubox
3 10 0.014404965 ubox
3 34 0.004940917 ubox
3 48 0.398497764 ubox
3 50 0.852231069 ubox
3 52 0.034842087 ubox
3 54 0.142769430 ubox
3 58 0.029340248 ubox
3 63 0.155380920 ubox
3 96 0.007828118 ubox
4 9 0.014388006 ubox
4 32 0.003821557 ubox
4 47 0.398732581 ubox
4 49 0.849690050 ubox
4 53 0.141581804 ubox
4 62 0.163234717 ubox
4 95 0.007662406 ubox
5 46 0.398713801 ubox
5 61 0.163619078 ubox
5 97 0.004261670 ubox
6 31 0.007636624 ubox
6 45 0.398816321 ubox
6 48 0.867223722 ubox
6 50 0.030903196 ubox
6 54 0.236683319 ubox
6 60 0.163742304 ubox
6 96 0.004050272 ubox
7 30 0.007657038 ubox
7 44 0.398678893 ubox
7 47 0.867637243 ubox
7 49 0.030768656 ubox
7 53 0.236942533 ubox
7 59 0.163749925 ubox
7 94 0.004184934 ubox
8 16 0.008981406 ubox
8 34 0.181528057 ubox
8 46 0.867075079 ubox
8 48 0.027489392 ubox
8 52 0.236118933 ubox
8 58 0.163696460 ubox
8 93 0.005036900 ubox
9 15 0.008997477 ubox
9 28 0.007854929 ubox
9 33 0.182125092 ubox
9 45 0.867964594 ubox
9 48 0.008825039 ubox
9 50 0.237308730 ubox
9 54 0.115080391 ubox
9 57 0.130254336 ubox
9 92 0.005035785 ubox
10 14 0.008935017 ubox
10 27 0.007930585 ubox
10 32 0.182284935 ubox
10 44 0.867509421 ubox
10 47 0.011762280 ubox
10 49 0.237486177 ubox
10 53 0.146881639 ubox
10 91 0.004856875 ubox
11 24 0.003199014 ubox
11 26 0.007779449 ubox
11 31 0.161690003 ubox
11 33 0.026128116 ubox
11 36 0.819373583 ubox
11 39 0.100223987 ubox
11 45 0.013118190 ubox
11 46 0.005922164 ubox
11 48 0.236734427 ubox
11 50 0.006197565 ubox
11 52 0.147095328 ubox
11 54 0.077964636 ubox
12 30 0.157103965 ubox
12 32 0.014725353 ubox
12 35 0.819870821 ubox
12 37 0.100314227 ubox
12 38 0.075318919 ubox
12 40 0.130168150 ubox
12 44 0.012035800 ubox
12 47 0.232206333 ubox
12 49 0.006202343 ubox
12 51 0.146655631 ubox
12 53 0.078059658 ubox
13 25 0.062478632 ubox
13 31 0.017401036 ubox
13 34 0.811592365 ubox
13 36 0.118001854 ubox
13 39 0.135223585 ubox
13 46 0.205547785 ubox
13 48 0.006161362 ubox
13 50 0.141017532 ubox
13 52 0.077702788 ubox
14 24 0.062698143 ubox
14 28 0.153187178 ubox
14 31 0.942747087 ubox
14 33 0.148506895 ubox
14 45 0.167389681 ubox
14 48 0.056886988 ubox
14 50 0.087003156 ubox
15 21 0.010711060 ubox
15 22 0.066882279 ubox
15 27 0.110128240 ubox
15 30 0.955120811 ubox
15 32 0.095446486 ubox
15 44 0.156297605 ubox
15 47 0.041009495 ubox
15 49 0.095542637 ubox
16 20 0.014471572 ubox
16 21 0.071573002 ubox
16 27 0.128760870 ubox
16 29 0.961451602 ubox
16 47 0.153120086 ubox
17 26 0.169330104 ubox
17 28 0.960104170 ubox
17 46 0.158143768 ubox
18 25 0.170847117 ubox
18 45 0.158044300 ubox
19 26 0.957614768 ubox
19 46 0.005349498 ubox
20 25 0.957023527 ubox
20 26 0.025494527 ubox
20 34 0.005582976 ubox
20 45 0.005553092 ubox
20 46 0.003448572 ubox
21 25 0.030207256 ubox
21 33 0.005604597 ubox
21 34 0.003995724 ubox
21 45 0.003566294 ubox
21 58 0.003370175 ubox
22 33 0.003255569 ubox
22 34 0.066063022 ubox
22 57 0.003374379 ubox
23 33 0.066069196 ubox
24 30 0.011095240 ubox
24 32 0.065571155 ubox
25 29 0.011919623 ubox
26 35 0.008986064 ubox
26 37 0.187111741 ubox
26 40 0.020116706 ubox
26 49 0.006769298 ubox
26 55 0.015842960 ubox
27 31 0.005149232 ubox
27 34 0.009464302 ubox
27 36 0.199789436 ubox
27 39 0.022552961 ubox
27 48 0.011210339 ubox
27 54 0.017101663 ubox
28 35 0.200175773 ubox
28 37 0.044431498 ubox
28 38 0.017774793 ubox
28 40 0.018599328 ubox
28 47 0.011284484 ubox
28 53 0.017097337 ubox
29 34 0.199712814 ubox
29 36 0.050651207 ubox
29 39 0.020578587 ubox
29 46 0.014215922 ubox
29 52 0.017019527 ubox
30 45 0.014841987 ubox
30 50 0.017215392 ubox
31 44 0.016385975 ubox
31 49 0.017502514 ubox
32 39 0.181413426 ubox
32 45 0.058572060 ubox
32 48 0.022148374 ubox
32 50 0.004828354 ubox
33 38 0.168189209 ubox
33 44 0.057117828 ubox
33 47 0.016303009 ubox
33 49 0.004881203 ubox
34 47 0.015339946 ubox
35 46 0.014421791 ubox
36 47 0.028824968 ubox
37 46 0.029289061 ubox
39 47 0.027279732 ubox
40 46 0.026856586 ubox
41 99 0.005317171 ubox
42 98 0.005897791 ubox
43 61 0.003657340 ubox
43 97 0.006028862 ubox
44 50 0.014698215 ubox
44 54 0.012766101 ubox
44 60 0.003854293 ubox
44 96 0.006028148 ubox
45 49 0.014961162 ubox
45 53 0.012739073 ubox
45 59 0.003852975 ubox
45 95 0.006019819 ubox
46 55 0.044566869 ubox
46 94 0.005932383 ubox
47 52 0.004490596 ubox
47 54 0.048229914 ubox
47 93 0.005570968 ubox
48 53 0.048184214 ubox
49 58 0.020135274 ubox
49 60 0.004913186 ubox
49 63 0.006746149 ubox
49 92 0.003702851 ubox
49 96 0.004356235 ubox
50 59 0.005277844 ubox
50 62 0.007254886 ubox
50 91 0.003397593 ubox
50 95 0.004329641 ubox
51 61 0.007247468 ubox
52 59 0.016013726 ubox
52 62 0.003192230 ubox
53 58 0.061313433 ubox
53 60 0.015987510 ubox
53 96 0.006865580 ubox
54 59 0.016508391 ubox
54 95 0.005618657 ubox
55 98 0.057496146 ubox
55 99 0.065813476 ubox
56 97 0.055744964 ubox
56 98 0.069542510 ubox
57 95 0.041117271 ubox
58 94 0.041474895 ubox
59 93 0.040553000 ubox
59 96 0.984056694 ubox
60 95 0.985406789 ubox
61 94 0.984566382 ubox
62 92 0.062472345 ubox
62 93 0.978949293 ubox
62 96 0.005219118 ubox
63 91 0.017528298 ubox
63 95 0.005521788 ubox
64 90 0.015383092 ubox
64 91 0.998307017 ubox
65 89 0.012580639 ubox
65 90 0.999868444 ubox
66 88 0.008930792 ubox
66 89 0.999911066 ubox
67 88 0.999934314 ubox
68 87 0.999961852 ubox
69 85 0.004842421 ubox
69 86 0.982885809 ubox
70 84 0.006532570 ubox
70 85 0.963414543 ubox
70 86 0.184038182 ubox
71 83 0.007605564 ubox
71 84 0.734571187 ubox
71 85 0.259988732 ubox
73 79 0.019779838 ubox
73 84 0.675344006 ubox
74 78 0.019770511 ubox
74 81 0.379489744 ubox
74 83 0.919096850 ubox
75 80 0.351216538 ubox
75 82 0.923932640 ubox
76 81 0.923908835 ubox
76 83 0.010382199 ubox
94 100 0.009081958 ubox
95 99 0.006099509 ubox
2 51 0.9500000 lbox
3 50 0.9500000 lbox
4 49 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
59 96 0.9500000 lbox
60 95 0.9500000 lbox
61 94 0.9500000 lbox
62 93 0.9500000 lbox
64 91 0.9500000 lbox
65 90 0.9500000 lbox
66 89 0.9500000 lbox
67 88 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
74 83 0.9500000 lbox
75 82 0.9500000 lbox
76 81 0.9500000 lbox
showpage
end
%%EOF
