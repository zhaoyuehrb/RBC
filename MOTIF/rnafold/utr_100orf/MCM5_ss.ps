%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCCUCUUGUUUUUCCCGCGAAACUCGGCGGCUGAGCGUGGAGGUUCUUGUCUCCCCUGGUUUGUGAAGUGCGGAAAACCAGAGGCGCAGUCAUGUCGGGAUUCGACGAUCCUGGCAUUUUCUACAGCGACAGCUUCGGGGGCGACGCCCAGGCCGACGAGGGGCAGGCCCGCAAAUCGCAGCUGCAGAGGC\
) } def
/len { sequence length } bind def

/coor [
[102.93826294 381.38302612]
[86.55826569 380.59072876]
[79.29602814 365.88726807]
[88.62232208 352.39828491]
[89.34702301 337.41580200]
[90.07172394 322.43331909]
[90.79642487 307.45083618]
[91.52112579 292.46835327]
[92.24582672 277.48587036]
[77.50108337 274.73040771]
[67.06372833 263.95721436]
[64.77641296 249.13262939]
[71.48126221 235.71453857]
[84.70977020 228.64302063]
[99.59168243 230.52156067]
[110.64797974 240.65852356]
[113.80813599 255.32183838]
[110.68946075 240.64962769]
[107.57078552 225.97741699]
[97.35641479 215.13694763]
[102.05541229 200.02966309]
[98.93673706 185.35745239]
[96.64724731 183.71807861]
[94.87369537 181.06700134]
[94.00695038 177.59782410]
[94.36000824 173.64266968]
[96.12197876 169.64103699]
[93.95464325 154.79844666]
[91.78730774 139.95584106]
[89.61997223 125.11325073]
[87.45263672 110.27065277]
[78.63585663 98.13539886]
[65.18945312 91.48752594]
[51.74304962 84.83965302]
[38.29664612 78.19178009]
[24.85024261 71.54390717]
[9.05029011 72.36370850]
[1.07032692 59.78716660]
[-12.37607670 53.13929367]
[-27.37499619 60.10257339]
[-43.11630249 55.97872925]
[-52.46606827 42.98426056]
[-67.46169281 42.62180328]
[-82.45731354 42.25934601]
[-97.45292664 41.89689255]
[-112.44854736 41.53443527]
[-123.71631622 52.61653900]
[-139.51914978 52.40171051]
[-150.48149109 41.01741028]
[-150.09960938 25.21773529]
[-138.60003662 14.37635612]
[-122.80529022 14.92526913]
[-112.08609772 26.53881454]
[-97.09047699 26.90127182]
[-82.09485626 27.26372719]
[-67.09923553 27.62618256]
[-52.10361481 27.98863983]
[-51.86238098 27.35574532]
[-51.60297012 26.73008347]
[-62.75014114 16.69312477]
[-73.89731598 6.65616560]
[-85.04448700 -3.38079357]
[-96.19165802 -13.41775227]
[-107.33882904 -23.45471191]
[-118.48600006 -33.49167252]
[-132.58941650 -27.65587044]
[-147.82771301 -28.52580833]
[-161.17533875 -35.92876053]
[-169.98210144 -48.39485931]
[-172.49942017 -63.44895935]
[-168.22746277 -78.10205078]
[-158.01445007 -89.44476318]
[-143.88816833 -95.22497559]
[-128.65339661 -94.29503632]
[-115.33502960 -86.83958435]
[-106.57743073 -74.33889771]
[-104.11942291 -59.27500153]
[-108.44904327 -44.63884354]
[-97.30187225 -34.60188293]
[-86.15470123 -24.56492424]
[-75.00753021 -14.52796555]
[-63.86035538 -4.49100685]
[-52.71318054 5.54595232]
[-41.56600952 15.58291149]
[-24.59191513 12.82211399]
[-10.00173759 22.45030785]
[-5.72820377 39.69289017]
[7.71820021 46.34076309]
[22.55637550 45.04545975]
[31.49811554 58.09750366]
[44.94451904 64.74537659]
[58.39092255 71.39324951]
[71.83732605 78.04112244]
[85.28372955 84.68899536]
[99.13034058 78.92084503]
[103.88035583 64.69280243]
[108.63037872 50.46475601]
[113.38039398 36.23670959]
[118.13041687 22.00866127]
[122.88043976 7.78061438]
[127.63045502 -6.44743204]
[132.38047791 -20.67547798]
[137.13049316 -34.90352631]
[141.88052368 -49.13157272]
[146.63053894 -63.35961914]
[142.82191467 -79.31037140]
[154.91575623 -90.38607025]
[170.47094727 -85.19298553]
[173.48564148 -69.07331848]
[160.85858154 -58.60960007]
[156.10856628 -44.38155365]
[151.35853577 -30.15350533]
[146.60852051 -15.92545891]
[141.85850525 -1.69741225]
[137.10848999 12.53063393]
[132.35845947 26.75868034]
[127.60844421 40.98672867]
[122.85842133 55.21477509]
[118.10840607 69.44281769]
[113.35838318 83.67086792]
[118.97221375 88.64428711]
[133.20025635 83.89424133]
[130.19987488 98.59112549]
[135.81370544 103.56454468]
[149.36546326 97.13415527]
[154.75328064 82.51878357]
[168.58828735 76.19050598]
[182.48861694 81.41703033]
[196.04037476 74.98664093]
[209.59211731 68.55625153]
[218.45751953 54.75999451]
[234.82304382 55.80969620]
[241.85324097 70.62551117]
[232.31604004 83.96620178]
[216.02250671 82.10800934]
[202.47074890 88.53839874]
[188.91900635 94.96878815]
[184.17630005 109.04153442]
[170.52449036 115.75591278]
[155.79585266 110.68591309]
[142.24409485 117.11630249]
[145.36276245 131.78851318]
[160.35838318 132.15097046]
[175.35400391 132.51342773]
[190.34962463 132.87588501]
[206.33024597 127.21404266]
[216.19468689 141.00277710]
[205.67558289 154.29881287]
[189.98716736 147.87150574]
[174.99154663 147.50904846]
[159.99594116 147.14659119]
[145.00032043 146.78413391]
[126.12117004 137.96499634]
[111.59151459 124.66459656]
[102.29523468 108.10331726]
[104.46257019 122.94591522]
[106.62990570 137.78851318]
[108.79724121 152.63110352]
[110.96457672 167.47370911]
[113.60895538 182.23876953]
[116.72763062 196.91098022]
[127.16506958 208.80091858]
[122.24299622 222.85874939]
[125.36167145 237.53096008]
[128.48034668 252.20317078]
[134.24848938 266.04977417]
[142.46868896 278.59683228]
[150.68887329 291.14389038]
[158.90905762 303.69091797]
[170.81292725 303.80581665]
[181.07516479 309.59890747]
[187.19807434 319.52719116]
[187.75602722 331.05825806]
[182.72584534 341.31588745]
[190.53755188 354.12124634]
[205.72853088 359.28009033]
[211.03082275 374.42160034]
[202.37696838 387.93051147]
[186.40545654 389.44393921]
[175.36827087 377.80090332]
[177.73219299 361.93295288]
[169.92048645 349.12759399]
[151.90953064 345.90762329]
[141.78698730 330.28475952]
[146.36199951 311.91113281]
[138.14181519 299.36407471]
[129.92163086 286.81701660]
[121.70143890 274.26995850]
[107.22830963 278.21057129]
[106.50360870 293.19305420]
[105.77890778 308.17553711]
[105.05420685 323.15802002]
[104.32950592 338.14050293]
[103.60480499 353.12298584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[17 165]
[18 164]
[19 163]
[21 161]
[22 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 94]
[33 93]
[34 92]
[35 91]
[36 90]
[38 88]
[39 87]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[59 84]
[60 83]
[61 82]
[62 81]
[63 80]
[64 79]
[65 78]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[124 141]
[125 140]
[128 137]
[129 136]
[130 135]
[142 152]
[143 151]
[144 150]
[145 149]
[166 188]
[167 187]
[168 186]
[169 185]
[174 182]
[175 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
