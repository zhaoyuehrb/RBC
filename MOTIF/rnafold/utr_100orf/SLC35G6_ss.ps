%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGGAGAGUUCCAGGGAAGAACCCCACCCCCACUCCAACCAUGUCACAAUGGCUGGAGCUCUGAGGGGCCCAGGCUCCCUGAGCCAGGAGGAGAGGAGAAAGUCCAAGGAAAGAUGGCUGGCAGUCACCCCUACUUGAACCCGCCUGACUCCACACACCCAUCGCCGCCCUCCGCUCCACCCAGCCUCCGCUGGCACCAGUGCUGCCAGCCCU\
) } def
/len { sequence length } bind def

/coor [
[86.00846100 244.96243286]
[90.03488922 230.51293945]
[101.71523285 221.10180664]
[116.69052887 220.24116516]
[129.37171936 228.25169373]
[125.06966400 213.88185120]
[120.76761627 199.51200867]
[116.46556854 185.14216614]
[111.53771210 179.63796997]
[112.20708466 170.53196716]
[108.11448669 156.10107422]
[104.02188873 141.67018127]
[98.36116028 141.83174133]
[92.73042297 141.22781372]
[87.23271179 139.86949158]
[81.96862030 137.78160095]
[73.18717957 149.94244385]
[64.40573883 162.10330200]
[67.17058563 177.66386414]
[58.05427170 190.57386780]
[42.46534729 193.17405701]
[29.65244102 183.92175293]
[27.21722412 168.30621338]
[36.60446930 155.59184265]
[52.24488831 153.32185364]
[61.02632904 141.16101074]
[69.80776978 129.00015259]
[64.05313110 121.45698547]
[60.14477921 112.81175995]
[45.27310562 114.76965332]
[30.40143204 116.72753906]
[15.52976036 118.68543243]
[0.67271841 120.75142670]
[-14.16890621 122.92539978]
[-28.95957375 125.42263031]
[-43.69224548 128.24192810]
[-58.42491531 131.06121826]
[-73.15758514 133.88050842]
[-87.89025879 136.69979858]
[-99.99023438 146.89299011]
[-113.94493103 141.68569946]
[-128.67759705 144.50498962]
[-143.41027832 147.32427979]
[-158.14294434 150.14356995]
[-166.81018066 163.35926819]
[-182.30052185 166.49368286]
[-195.42385864 157.68721008]
[-198.39431763 142.16458130]
[-189.44958496 129.13510132]
[-173.89642334 126.32892609]
[-160.96223450 135.41090393]
[-146.22956848 132.59161377]
[-131.49688721 129.77232361]
[-116.76422119 126.95303345]
[-105.71802521 116.96150208]
[-90.70954895 121.96712494]
[-75.97687531 119.14783478]
[-61.24420547 116.32854462]
[-46.51153564 113.50925446]
[-31.77886581 110.68996429]
[-29.50791740 107.99735260]
[-25.82155800 106.26919556]
[-21.18648529 106.15805817]
[-16.34288406 108.08377838]
[-1.50125945 105.90979767]
[4.65901709 101.83170319]
[13.57186699 103.81375885]
[28.44354057 101.85587311]
[43.31521225 99.89797974]
[58.18688583 97.94008636]
[60.35788345 86.54331207]
[65.57342529 76.18003082]
[54.96682739 65.57342529]
[39.73753357 61.28633118]
[36.20909119 46.81569290]
[25.60248947 36.20909119]
[14.99588776 25.60248947]
[4.38928604 14.99588776]
[-6.21731567 4.38928604]
[-21.69268227 -2.53526402]
[-19.32275200 -19.32275200]
[-2.53526402 -21.69268227]
[4.38928604 -6.21731567]
[14.99588776 4.38928604]
[25.60248947 14.99588776]
[36.20909119 25.60248947]
[46.81569290 36.20909119]
[61.28633118 39.73753357]
[65.57342529 54.96682739]
[76.18003082 65.57342529]
[100.60886383 58.14060211]
[124.81118011 66.28079224]
[135.72178650 55.98716354]
[146.63238525 45.69354248]
[157.54299927 35.39991760]
[162.27122498 20.30175591]
[176.83836365 17.19567871]
[187.74896240 6.90205479]
[198.65956116 -3.39156961]
[209.57017517 -13.68519402]
[194.62882996 -12.35999012]
[181.29492188 -19.23072433]
[173.70239258 -32.16724777]
[174.20518494 -47.15881729]
[182.64739990 -59.55756760]
[196.41169739 -65.51947784]
[211.23068237 -63.19616699]
[222.50999451 -53.30793762]
[226.75268555 -38.92045975]
[222.64283752 -24.49343681]
[234.80368042 -33.27487946]
[234.62351990 -50.19009018]
[244.46455383 -63.74422455]
[260.28713989 -68.71068573]
[275.79461670 -63.32072067]
[287.82647705 -72.27809906]
[299.85830688 -81.23548126]
[311.89016724 -90.19285583]
[323.92202759 -99.15023804]
[331.27719116 -120.31911469]
[352.85839844 -121.97424316]
[364.34906006 -131.61605835]
[375.83972168 -141.25787354]
[380.39984131 -149.16818237]
[387.56832886 -150.95487976]
[399.19802856 -160.42855835]
[410.82769775 -169.90223694]
[422.45736694 -179.37591553]
[434.08706665 -188.84959412]
[428.60760498 -202.95033264]
[427.75573730 -218.05429077]
[431.61489868 -232.68173218]
[439.80700684 -245.39961243]
[451.52951050 -254.96195984]
[465.63391113 -260.43194580]
[480.73843384 -261.27371216]
[495.36328125 -257.40475464]
[508.07568359 -249.20410156]
[517.63018799 -237.47521973]
[523.09069824 -223.36714172]
[523.92236328 -208.26206970]
[520.04357910 -193.63980103]
[511.83444214 -180.93292236]
[500.09915161 -171.38629150]
[485.98742676 -165.93519592]
[470.88177490 -165.11369324]
[456.26211548 -169.00224304]
[443.56072998 -177.21990967]
[431.93106079 -167.74623108]
[420.30136108 -158.27255249]
[408.67169189 -148.79887390]
[397.04202271 -139.32521057]
[385.48153687 -129.76721191]
[373.99087524 -120.12539673]
[362.50021362 -110.48358154]
[363.50100708 -102.67758942]
[361.31143188 -95.02072144]
[356.21627808 -88.77847290]
[348.98663330 -85.01276398]
[340.76385498 -84.40164185]
[332.87939453 -87.11839294]
[320.84753418 -78.16101074]
[308.81570435 -69.20362854]
[296.78384399 -60.24625397]
[284.75201416 -51.28887558]
[286.14562988 -38.01316833]
[280.75503540 -25.68314171]
[269.88998413 -17.56139946]
[256.32360840 -15.85441971]
[243.58512878 -21.11402893]
[231.42427063 -12.33258724]
[219.86380005 -2.77458954]
[208.95318604 7.51903486]
[198.04258728 17.81266022]
[187.13198853 28.10628319]
[183.18415833 42.46817780]
[167.83662415 46.31052017]
[156.92601013 56.60414505]
[146.01541138 66.89777374]
[135.10479736 77.19139099]
[140.68293762 90.12686920]
[141.65458679 104.18025970]
[137.90977478 117.76032257]
[129.87248230 129.32942200]
[118.45277405 137.57759094]
[122.54537964 152.00846863]
[126.63797760 166.43936157]
[130.83541870 180.84011841]
[135.13746643 195.20996094]
[139.43951416 209.57980347]
[143.74156189 223.94964600]
[148.87185669 238.04502869]
[154.81304932 251.81826782]
[160.75425720 265.59152222]
[166.69544983 279.36474609]
[172.63664246 293.13800049]
[178.57783508 306.91125488]
[184.51904297 320.68447876]
[199.55056763 324.99575806]
[208.25125122 337.98931885]
[206.51287842 353.52996826]
[195.15626526 364.27990723]
[179.54365540 365.16336060]
[167.04684448 355.76315308]
[163.56645203 340.51779175]
[170.74580383 326.62567139]
[164.80459595 312.85244751]
[158.86340332 299.07919312]
[152.92221069 285.30593872]
[146.98101807 271.53271484]
[141.03981018 257.75946045]
[135.09861755 243.98622131]
[130.53294373 258.27450562]
[118.50775909 267.24081421]
[103.51071930 267.53903198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 191]
[6 190]
[7 189]
[8 188]
[10 187]
[11 186]
[12 185]
[16 27]
[17 26]
[18 25]
[29 70]
[30 69]
[31 68]
[32 67]
[33 65]
[34 64]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[41 54]
[42 53]
[43 52]
[44 51]
[72 90]
[73 89]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[92 180]
[93 179]
[94 178]
[95 177]
[97 175]
[98 174]
[99 173]
[100 172]
[110 171]
[111 170]
[115 165]
[116 164]
[117 163]
[118 162]
[119 161]
[121 155]
[122 154]
[123 153]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[192 212]
[193 211]
[194 210]
[195 209]
[196 208]
[197 207]
[198 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
