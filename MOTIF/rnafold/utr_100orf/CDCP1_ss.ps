%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGGCUCGGGCCGGUCCGCCCGCGCGCAGGUGAGUGAGCCAGGGCGGAGCGCAGCUGCGCCGGGCUUGGGCGCCUGGGGCCGCCGCUCCCCACCGUCGUUUUCCCCACCGAGGCCGAGGCGUCCCGGAGUCAUGGCCGGCCUGAACUGCGGGGUCUCUAUCGCACUGCUAGGGGUUCUGCUGCUGGGUGCGGCGCGCCUGCCGCGCGGGGCAGAAGCUUUUGAGAUUGCUC\
) } def
/len { sequence length } bind def

/coor [
[74.17245483 141.97525024]
[69.08386993 156.08575439]
[63.99528503 170.19625854]
[58.90670395 184.30676270]
[53.81811905 198.41726685]
[48.72953796 212.52777100]
[43.92370224 226.73706055]
[39.40253830 241.03947449]
[34.88137436 255.34188843]
[38.94537735 271.22949219]
[27.03076553 282.49777222]
[11.39427280 277.55490112]
[8.12137890 261.48565674]
[20.57895851 250.82072449]
[25.10012436 236.51831055]
[29.62129021 222.21589661]
[28.34138680 218.94784546]
[28.57042122 214.90019226]
[30.65649414 210.78416443]
[34.61903381 207.43917847]
[39.70761490 193.32867432]
[44.79619980 179.21817017]
[49.88478088 165.10766602]
[54.97336578 150.99716187]
[60.06194687 136.88665771]
[55.70078659 120.35726166]
[57.14945984 104.98516846]
[63.21524048 92.57692719]
[72.21166992 84.30773163]
[82.23168182 80.61028290]
[75.67207336 67.12059784]
[69.11245728 53.63092041]
[62.55285263 40.14123535]
[55.90360260 26.69551277]
[49.16500473 13.29434490]
[42.42641068 -0.10682442]
[35.68781281 -13.50799370]
[20.95305634 -18.56018639]
[14.31006622 -32.24687195]
[19.21736526 -46.26307678]
[12.47876930 -59.66424561]
[5.74017382 -73.06541443]
[-1.08746898 -86.42143250]
[-8.00385666 -99.73171234]
[-22.07793617 -90.53157043]
[-37.23926926 -94.61971283]
[-43.77297974 -107.66700745]
[-58.01394272 -112.37815857]
[-67.12653351 -112.10112000]
[-72.41238403 -117.24796295]
[-86.58937073 -122.14826202]
[-100.76636505 -127.04856110]
[-114.94335175 -131.94886780]
[-129.12034607 -136.84916687]
[-143.29733276 -141.74946594]
[-149.82287598 -140.87635803]
[-155.03483582 -143.08703613]
[-157.78350830 -146.97352600]
[-171.82501221 -152.24948120]
[-187.46482849 -149.86053467]
[-196.65739441 -161.58000183]
[-210.69891357 -166.85597229]
[-226.33871460 -164.46702576]
[-235.53128052 -176.18649292]
[-249.57279968 -181.46244812]
[-263.61431885 -186.73841858]
[-277.65582275 -192.01438904]
[-291.69735718 -197.29034424]
[-305.73886108 -202.56631470]
[-320.02542114 -195.80836487]
[-334.87777710 -201.21049500]
[-341.48431396 -215.56771851]
[-335.92544556 -230.36212158]
[-321.49917603 -236.81648254]
[-306.76437378 -231.10151672]
[-300.46289062 -216.60781860]
[-286.42138672 -211.33186340]
[-272.37988281 -206.05589294]
[-258.33834839 -200.77993774]
[-244.29682922 -195.50396729]
[-230.25531006 -190.22801208]
[-215.61985779 -192.99432373]
[-205.42294312 -180.89749146]
[-191.38142395 -175.62152100]
[-176.74597168 -178.38784790]
[-166.54905701 -166.29100037]
[-152.50753784 -161.01504517]
[-138.39703369 -155.92645264]
[-124.22004700 -151.02615356]
[-110.04305267 -146.12585449]
[-95.86606598 -141.22555542]
[-81.68907166 -136.32525635]
[-67.51208496 -131.42495728]
[-53.30279160 -126.61911774]
[-39.06182861 -121.90796661]
[-26.66684341 -129.18305969]
[-11.34550953 -124.68613434]
[-8.17476940 -139.34718323]
[-5.00403023 -154.00823975]
[-1.83329105 -168.66928101]
[-6.47863817 -183.79315186]
[3.77414966 -194.59730530]
[6.94488907 -209.25834656]
[10.11562824 -223.91940308]
[13.28636742 -238.58045959]
[3.11766315 -250.15213013]
[1.72877741 -265.31539917]
[9.44363308 -278.23611450]
[23.12364769 -284.06665039]
[26.29438591 -298.72769165]
[12.50270081 -292.82943726]
[-0.77196759 -299.81393433]
[-3.72214293 -314.52096558]
[5.83179712 -326.08480835]
[20.83129501 -325.96194458]
[30.19454384 -314.24322510]
[34.33337021 -328.66091919]
[38.47219467 -343.07861328]
[42.61101913 -357.49630737]
[46.74984360 -371.91403198]
[43.12067413 -387.31335449]
[54.06934357 -397.41168213]
[58.20816803 -411.82937622]
[62.34699249 -426.24707031]
[52.69156265 -438.39419556]
[52.05368423 -453.89813232]
[60.67863464 -466.79736328]
[75.24994659 -472.13183594]
[90.16464996 -467.85034180]
[99.68774414 -455.59918213]
[100.15739441 -440.08923340]
[91.39302063 -427.28433228]
[76.76469421 -422.10824585]
[72.62586975 -407.69055176]
[68.48704529 -393.27285767]
[72.41225433 -378.90475464]
[61.16754532 -367.77520752]
[57.02872086 -353.35748291]
[52.88989639 -338.93978882]
[48.75107193 -324.52209473]
[44.61224365 -310.10440063]
[40.95543671 -295.55694580]
[37.78469849 -280.89590454]
[47.83294678 -269.93365479]
[49.51936340 -254.97973633]
[41.98895264 -241.74545288]
[27.94741821 -235.40971375]
[24.77667999 -220.74865723]
[21.60593987 -206.08761597]
[18.43519974 -191.42655945]
[23.30734062 -177.35134888]
[12.82775974 -165.49855042]
[9.65702057 -150.83749390]
[6.48628092 -136.17645264]
[3.31554174 -121.51539612]
[5.30642462 -106.64810181]
[12.22281170 -93.33782196]
[18.08581734 -88.85950470]
[19.14134216 -79.80400848]
[25.87993813 -66.40283966]
[32.61853409 -53.00167084]
[46.79605865 -48.58201218]
[53.82085800 -35.08731461]
[49.08898163 -20.24658966]
[55.82757950 -6.84542036]
[62.56617355 6.55574894]
[69.30477142 19.95691681]
[75.10764313 24.51288605]
[76.04253387 33.58162689]
[82.60214233 47.07130814]
[89.16175079 60.56098938]
[95.72135925 74.05067444]
[129.91967773 72.95270538]
[152.48008728 114.19557190]
[164.97979736 122.48757172]
[177.47950745 130.77957153]
[189.97921753 139.07157898]
[205.75627136 140.25270081]
[212.08489990 153.73594666]
[224.58460999 162.02793884]
[237.08432007 170.31994629]
[249.58403015 178.61195374]
[262.08374023 186.90394592]
[274.58343506 195.19595337]
[287.08316040 203.48794556]
[296.65438843 198.84306335]
[307.20928955 198.58279419]
[316.84939575 202.68711853]
[323.86840820 210.35696411]
[327.05422974 220.16885376]
[325.89782715 230.33877563]
[338.05651855 239.12321472]
[350.21520996 247.90765381]
[362.37390137 256.69210815]
[374.53256226 265.47653198]
[386.69125366 274.26098633]
[398.84994507 283.04541016]
[414.41119385 280.28439331]
[427.31896973 289.40390015]
[429.91528320 304.99346924]
[420.65982056 317.80407715]
[405.04370117 320.23544312]
[392.33163452 310.84509277]
[390.06552124 295.20410156]
[377.90682983 286.41964722]
[365.74813843 277.63522339]
[353.58944702 268.85076904]
[341.43075562 260.06634521]
[329.27209473 251.28190613]
[317.11340332 242.49746704]
[298.14114380 246.98387146]
[281.74810791 235.87667847]
[278.79116821 215.98765564]
[266.29144287 207.69566345]
[253.79173279 199.40365601]
[241.29203796 191.11166382]
[228.79232788 182.81965637]
[216.29261780 174.52764893]
[203.79290771 166.23565674]
[188.90991211 165.64761353]
[181.68721008 151.57127380]
[169.18750000 143.27928162]
[156.68780518 134.98727417]
[144.18809509 126.69527435]
[137.85670471 130.71566772]
[118.86253357 142.77682495]
[121.05114746 157.61630249]
[123.23975372 172.45578003]
[133.84233093 184.96646118]
[128.05506897 200.31051636]
[111.83142853 202.70327759]
[101.86088562 189.68327332]
[108.40028381 174.64437866]
[106.21166992 159.80491638]
[104.02305603 144.96543884]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[7 16]
[8 15]
[9 14]
[30 172]
[31 171]
[32 170]
[33 169]
[34 167]
[35 166]
[36 165]
[37 164]
[40 161]
[41 160]
[42 159]
[43 157]
[44 156]
[47 95]
[48 94]
[50 93]
[51 92]
[52 91]
[53 90]
[54 89]
[55 88]
[58 87]
[59 86]
[61 84]
[62 83]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[69 76]
[97 155]
[98 154]
[99 153]
[100 152]
[102 150]
[103 149]
[104 148]
[105 147]
[109 143]
[110 142]
[116 141]
[117 140]
[118 139]
[119 138]
[120 137]
[122 135]
[123 134]
[124 133]
[174 224]
[175 223]
[176 222]
[177 221]
[179 219]
[180 218]
[181 217]
[182 216]
[183 215]
[184 214]
[185 213]
[191 210]
[192 209]
[193 208]
[194 207]
[195 206]
[196 205]
[197 204]
[226 235]
[227 234]
[228 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
