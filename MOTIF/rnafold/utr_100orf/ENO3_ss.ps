%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUGCGCAGCCUGAGAGGGGGUGAGCUGACACUGUCCCAGCUGCCACCUAGACUCGGAGCUCCAUCCAAACCUCCAGCGAAGACAUCCCAGGUCGGGUGAAUCUUCCAGCCCUGGGGGUGGAGGUAGUAAAGGCCAUGGCCAUGCAGAAAAUCUUUGCCCGGGAAAUCUUGGACUCCAGGGGCAACCCCACGGUGGAGGUGGACCUGCACACGGCCAAGGGCCGAUUCCGAGCAG\
) } def
/len { sequence length } bind def

/coor [
[28.72275162 232.10298157]
[19.24485588 240.44369507]
[7.82412338 245.78352356]
[-4.61825705 247.70285034]
[-17.08179092 246.05746460]
[-28.56712341 240.98942566]
[-38.49123764 252.23718262]
[-41.81335831 260.72515869]
[-48.62047958 263.56646729]
[-58.69158173 274.68280029]
[-68.76268005 285.79913330]
[-78.83378601 296.91546631]
[-88.90488434 308.03179932]
[-92.33828735 316.47537231]
[-99.18216705 319.22695923]
[-109.39851379 330.20996094]
[-113.13242340 345.58422852]
[-127.46608734 349.63333130]
[-137.68243408 360.61633301]
[-141.41635132 375.99060059]
[-155.75001526 380.03973389]
[-165.96635437 391.02270508]
[-169.70027161 406.39700317]
[-184.03393555 410.44610596]
[-194.25028992 421.42910767]
[-193.42871094 437.21203613]
[-204.06991577 448.89709473]
[-219.86064148 449.55172729]
[-231.43254089 438.78759766]
[-231.92019653 422.99084473]
[-221.03431702 411.53338623]
[-205.23327637 411.21276855]
[-195.01693726 400.22976685]
[-192.01376343 385.64105225]
[-176.94935608 380.80636597]
[-166.73301697 369.82336426]
[-163.72984314 355.23468018]
[-148.66543579 350.39999390]
[-138.44908142 339.41699219]
[-135.44592285 324.82827759]
[-120.38151550 319.99359131]
[-110.16516876 309.01058960]
[-100.02121735 297.96069336]
[-89.95011902 286.84436035]
[-79.87902069 275.72802734]
[-69.80791473 264.61169434]
[-59.73681641 253.49536133]
[-49.73899078 242.31306458]
[-39.81487656 231.06530762]
[-47.92491913 215.68537903]
[-49.49729919 198.33390808]
[-44.26290894 181.67918396]
[-33.00147247 168.29283142]
[-17.42552948 160.25277710]
[0.07996060 158.82070923]
[16.82278633 164.24415588]
[26.29575348 152.61389160]
[35.76872253 140.98364258]
[45.24168777 129.35337830]
[54.71465683 117.72312927]
[64.18762207 106.09287262]
[64.77898407 91.10453033]
[56.25177383 78.76408386]
[47.72455978 66.42363739]
[39.11642838 54.13949585]
[30.42774773 41.91219711]
[22.92083931 36.74224854]
[21.70646286 29.46658897]
[13.17925262 17.12614059]
[4.65204096 4.78569221]
[-1.12206185 1.62877941]
[-4.01465273 -3.23522520]
[-3.93211198 -7.99310827]
[-12.13199043 -20.55344200]
[-20.33186722 -33.11377716]
[-28.53174591 -45.67411041]
[-36.73162460 -58.23444748]
[-44.93150330 -70.79477692]
[-53.13138199 -83.35511780]
[-61.33125687 -95.91545105]
[-81.99980927 -104.59611511]
[-82.24005890 -126.24417877]
[-91.08871460 -138.35621643]
[-99.93736267 -150.46824646]
[-108.78601074 -162.58027649]
[-117.63466644 -174.69232178]
[-126.64175415 -186.68699646]
[-135.80574036 -198.56224060]
[-144.96971130 -210.43750000]
[-154.13368225 -222.31274414]
[-163.29766846 -234.18798828]
[-179.00239563 -235.95912170]
[-188.78947449 -248.36833191]
[-186.85241699 -264.05346680]
[-174.34042358 -273.70880127]
[-158.67665100 -271.60601807]
[-149.15412903 -258.99264526]
[-151.42240906 -243.35197449]
[-142.25843811 -231.47671509]
[-133.09446716 -219.60147095]
[-123.93048096 -207.72622681]
[-114.76651001 -195.85096741]
[-110.24626160 -194.36381531]
[-106.60446930 -190.03219604]
[-105.52262878 -183.54096985]
[-96.67398071 -171.42893982]
[-87.82533264 -159.31689453]
[-78.97667694 -147.20486450]
[-70.12802887 -135.09283447]
[-62.30576324 -135.56604004]
[-54.84137726 -132.88777161]
[-48.96701050 -127.42166901]
[-45.68298340 -119.99771118]
[-45.58788681 -111.78660583]
[-48.77092361 -104.11532593]
[-40.57104492 -91.55499268]
[-32.37116623 -78.99465942]
[-24.17128944 -66.43432617]
[-15.97141171 -53.87398911]
[-7.77153397 -41.31365585]
[0.42834431 -28.75332069]
[8.62822247 -16.19298553]
[16.99248886 -3.74151897]
[25.51970100 8.59892941]
[34.04691315 20.93937874]
[42.65504456 33.22351456]
[51.34372711 45.45081329]
[57.76791763 49.07568359]
[60.06501007 57.89642334]
[68.59222412 70.23686981]
[77.11943054 82.57731628]
[90.06832886 74.40267181]
[104.67642212 74.26723480]
[116.56657410 81.47521210]
[122.55780792 93.23750305]
[137.54971313 93.73034668]
[152.54161072 94.22318268]
[167.53350830 94.71602631]
[183.58044434 85.66610718]
[198.10340881 95.53192902]
[213.10049438 95.82766724]
[228.09757996 96.12340546]
[243.09466553 96.41914368]
[258.09173584 96.71488190]
[275.30807495 86.20489502]
[291.39309692 96.95581818]
[306.39276123 96.85723877]
[321.39242554 96.75865173]
[336.39212036 96.66006470]
[351.39178467 96.56148529]
[361.06408691 82.67444611]
[376.95233154 77.34857941]
[392.72396851 82.49740601]
[402.21697998 95.90061951]
[417.21405029 95.60488129]
[432.21115112 95.30914307]
[447.20822144 95.01340485]
[462.20532227 94.71766663]
[477.20239258 94.42192841]
[492.19949341 94.12619781]
[507.19656372 93.83045959]
[522.19366455 93.53472137]
[538.98223877 82.35416412]
[555.47857666 92.46260071]
[570.46270752 91.77274323]
[585.44683838 91.08289337]
[594.56414795 76.82533264]
[610.23010254 70.87722778]
[626.19244385 75.40026855]
[636.20648193 88.41880798]
[651.18023682 87.53205872]
[666.15399170 86.64530182]
[681.12780762 85.75855255]
[696.10156250 84.87179565]
[711.07531738 83.98504639]
[726.52929688 77.01292419]
[737.50701904 89.93289185]
[728.13092041 104.05821991]
[711.96203613 98.95881653]
[696.98828125 99.84556580]
[682.01452637 100.73231506]
[667.04077148 101.61907196]
[652.06701660 102.50582123]
[637.09326172 103.39257812]
[630.97943115 115.24932098]
[619.71759033 122.59980011]
[606.18688965 123.43723297]
[593.91021729 117.43654633]
[586.13671875 106.06701660]
[571.15258789 106.75687408]
[556.16845703 107.44673157]
[550.00665283 115.56891632]
[540.18829346 119.04131317]
[529.86419678 116.49414062]
[522.48937988 108.53180695]
[507.49230957 108.82753754]
[492.49520874 109.12327576]
[477.49813843 109.41901398]
[462.50106812 109.71475220]
[447.50396729 110.01049042]
[432.50689697 110.30622864]
[417.50979614 110.60196686]
[402.51272583 110.89770508]
[395.93621826 122.50419617]
[384.39334106 129.40498352]
[370.84017944 129.70832825]
[358.80960083 123.22830963]
[351.49038696 111.56115723]
[336.49069214 111.65974426]
[321.49102783 111.75833130]
[306.49133301 111.85691071]
[291.49166870 111.95549774]
[285.01443481 119.82845306]
[275.06680298 122.91106415]
[264.85119629 119.95886230]
[257.79602051 111.71196747]
[242.79891968 111.41622925]
[227.80183411 111.12049103]
[212.80474854 110.82475281]
[197.80766296 110.52901459]
[188.88383484 118.67781067]
[176.39920044 118.56565857]
[167.04067993 109.70792389]
[152.04876709 109.21508789]
[137.05686951 108.72224426]
[122.06497192 108.22940826]
[115.24976349 119.62304688]
[102.80545044 126.00334167]
[88.16382599 124.77430725]
[75.81787872 115.56583405]
[66.34490967 127.19609833]
[56.87194443 138.82635498]
[47.39897919 150.45660400]
[37.92601013 162.08686829]
[28.45304298 173.71711731]
[35.33996582 184.40509033]
[38.94745636 196.57858276]
[38.99549103 209.25740051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 49]
[7 48]
[9 47]
[10 46]
[11 45]
[12 44]
[13 43]
[15 42]
[16 41]
[18 39]
[19 38]
[21 36]
[22 35]
[24 33]
[25 32]
[56 235]
[57 234]
[58 233]
[59 232]
[60 231]
[61 230]
[62 131]
[63 130]
[64 129]
[65 127]
[66 126]
[68 125]
[69 124]
[70 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[82 109]
[83 108]
[84 107]
[85 106]
[86 105]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[135 226]
[136 225]
[137 224]
[138 223]
[140 220]
[141 219]
[142 218]
[143 217]
[144 216]
[146 212]
[147 211]
[148 210]
[149 209]
[150 208]
[154 203]
[155 202]
[156 201]
[157 200]
[158 199]
[159 198]
[160 197]
[161 196]
[162 195]
[164 191]
[165 190]
[166 189]
[170 184]
[171 183]
[172 182]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
