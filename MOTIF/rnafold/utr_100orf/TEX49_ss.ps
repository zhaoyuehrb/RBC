%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCCCCAACCUGGACGUUCCAGAAGAGGCCAGGGAGGAUCUGAGAUGGCCUUCUUCAACUUGUAUCUAUUGGGAUAUCAAAAUUCCUUUCAGAACAAGAAAAGGAACACAACUGAAGAAACAAAAACUUUUUGUUUAUCCCUAGAGUUAAGAAUUCCUGGCCUCCAUGGUAGCUCACGCCUGUAAUCCCAGGACUUUGGAAGCCCGAGACCAGAAGGAACCAGAGCCUACUAGGCUUCCCCCCAUUAUCUCAA\
AAGAUGGGAAUU\
) } def
/len { sequence length } bind def

/coor [
[108.96191406 204.49902344]
[112.39987946 192.66427612]
[119.30516815 182.42710876]
[129.02882385 174.77626038]
[124.36013794 160.52133179]
[119.69145203 146.26638794]
[112.20188141 145.87094116]
[116.07832336 160.36138916]
[103.49487305 168.52574158]
[91.84172821 159.08094788]
[97.22274780 145.08004761]
[89.73317719 144.68460083]
[83.58932495 158.36863708]
[77.44547272 172.05268860]
[71.30161285 185.73672485]
[65.15776062 199.42077637]
[64.18609619 216.34684753]
[47.65250778 220.09877014]
[39.47026825 205.24995422]
[51.47371674 193.27691650]
[57.61756897 179.59288025]
[63.76142502 165.90882874]
[69.90528107 152.22479248]
[76.04913330 138.54074097]
[65.91046906 120.23841095]
[66.14212036 101.92403412]
[74.29442596 88.45173645]
[62.74121094 78.88496399]
[51.18799973 69.31818390]
[39.63478470 59.75140381]
[28.08156967 50.18462753]
[16.52835655 40.61785126]
[4.97514200 31.05107117]
[-6.57807207 21.48429298]
[-18.13128662 11.91751480]
[-33.07335281 10.60044765]
[-46.12194824 17.99870110]
[-59.17054367 25.39695358]
[-72.21913910 32.79520798]
[-78.11518860 39.72552490]
[-85.46434021 40.20268250]
[-98.59876251 47.44746780]
[-102.74533081 62.69809341]
[-116.50253296 70.47722626]
[-131.70846558 66.16964722]
[-139.34172058 52.33096695]
[-134.87361145 37.17142868]
[-120.95500183 29.68491745]
[-105.84355164 34.31304550]
[-92.70912933 27.06825829]
[-79.61739349 19.74661255]
[-66.56879425 12.34835911]
[-53.52020264 4.95010567]
[-40.47160721 -2.44814801]
[-38.90080261 -9.78180885]
[-53.17385101 -5.16876888]
[-64.30544281 -15.22300148]
[-61.16411209 -29.89038086]
[-46.89115143 -34.50368500]
[-35.75920105 -24.44913101]
[-34.18839645 -31.78279114]
[-43.06198120 -43.87657166]
[-51.93556595 -55.97035217]
[-60.80914688 -68.06413269]
[-76.17894745 -70.59532166]
[-85.00574493 -82.98654175]
[-82.49792480 -97.62370300]
[-91.37150574 -109.71748352]
[-100.24508667 -121.81126404]
[-109.11867523 -133.90504456]
[-114.95765686 -136.88571167]
[-117.98503876 -141.64392090]
[-118.05458069 -146.38795471]
[-126.64221191 -158.68643188]
[-135.22984314 -170.98490906]
[-143.81748962 -183.28338623]
[-152.40512085 -195.58186340]
[-160.99275208 -207.88034058]
[-156.02621460 -193.72642517]
[-159.88981628 -179.23254395]
[-171.24267578 -169.42884827]
[-186.14476013 -167.71774292]
[-199.42424011 -174.69308472]
[-206.47244263 -187.93403625]
[-204.84315491 -202.84550476]
[-216.39636230 -212.41229248]
[-227.94958496 -221.97906494]
[-239.50279236 -231.54583740]
[-251.05599976 -241.11262512]
[-262.60922241 -250.67939758]
[-274.21832275 -260.17828369]
[-285.88287354 -269.60897827]
[-301.19512939 -266.43582153]
[-314.94009399 -273.89303589]
[-320.62780762 -288.45956421]
[-315.57272339 -303.25753784]
[-302.16168213 -311.29980469]
[-286.72695923 -308.78906250]
[-276.55639648 -296.91079712]
[-276.45217896 -281.27355957]
[-264.78762817 -271.84286499]
[-257.63525391 -270.08746338]
[-253.04244995 -262.23260498]
[-241.48922729 -252.66583252]
[-229.93601990 -243.09906006]
[-218.38279724 -233.53227234]
[-206.82958984 -223.96549988]
[-195.27636719 -214.39872742]
[-188.68804932 -217.98255920]
[-195.85572815 -231.15922546]
[-203.02340698 -244.33587646]
[-210.19108582 -257.51254272]
[-217.35876465 -270.68920898]
[-224.52624512 -283.86596680]
[-211.34936523 -291.03323364]
[-204.18211365 -277.85687256]
[-197.01441956 -264.68023682]
[-189.84674072 -251.50355530]
[-182.67906189 -238.32690430]
[-175.51138306 -225.15023804]
[-168.92304993 -228.73408508]
[-170.67738342 -243.63114929]
[-172.43171692 -258.52819824]
[-174.18605042 -273.42526245]
[-175.94036865 -288.32232666]
[-177.69470215 -303.21936035]
[-179.44903564 -318.11642456]
[-187.30635071 -333.13970947]
[-175.04530334 -344.84881592]
[-160.39959717 -336.30834961]
[-164.55197144 -319.87075806]
[-162.79763794 -304.97369385]
[-161.04331970 -290.07666016]
[-159.28898621 -275.17959595]
[-157.53465271 -260.28253174]
[-155.78031921 -245.38546753]
[-154.02600098 -230.48841858]
[-148.69427490 -216.46797180]
[-140.10664368 -204.16949463]
[-131.51901245 -191.87101746]
[-122.93137360 -179.57254028]
[-114.34373474 -167.27406311]
[-105.75610352 -154.97558594]
[-97.02489471 -142.77862549]
[-88.15130615 -130.68484497]
[-79.27772522 -118.59106445]
[-70.40414429 -106.49728394]
[-55.68901443 -104.49713898]
[-46.51765823 -92.35873413]
[-48.71536636 -76.93771362]
[-39.84178543 -64.84393311]
[-30.96820068 -52.75015640]
[-22.09461784 -40.65637589]
[-12.87410736 -34.33572769]
[-6.77933073 -25.79802132]
[-4.18027925 -16.34609032]
[-4.95798826 -7.26150656]
[-8.56450844 0.36430091]
[2.98870587 9.93107891]
[14.54191971 19.49785805]
[26.09513474 29.06463623]
[37.64834976 38.63141251]
[49.20156097 48.19819260]
[60.75477600 57.76496887]
[72.30799103 67.33174896]
[83.86120605 76.89852905]
[107.58357239 66.94629669]
[134.60052490 80.64817047]
[142.99580383 114.50494385]
[157.99478149 114.68077850]
[172.99374390 114.85661316]
[187.99272156 115.03244019]
[202.99168396 115.20827484]
[217.99064636 115.38410187]
[232.99040222 115.47202301]
[247.99040222 115.47202301]
[262.99038696 115.47202301]
[265.58193970 95.81533813]
[279.84054565 77.85984802]
[304.13723755 68.41709137]
[333.03707886 72.80612946]
[347.29202271 68.13743591]
[361.54696655 63.46875000]
[375.80191040 58.80006027]
[382.71939087 44.59006500]
[397.68582153 39.51252747]
[411.82189941 46.57986069]
[416.74090576 61.59914398]
[409.52453613 75.65969849]
[394.45407104 80.41964722]
[380.47061157 73.05500031]
[366.21566772 77.72369385]
[351.96072388 82.39237976]
[337.70578003 87.06106567]
[338.67019653 94.49880219]
[340.59902954 109.37427521]
[341.56344604 116.81200409]
[356.53768921 117.69068146]
[371.51193237 118.56935120]
[386.48617554 119.44802856]
[401.46041870 120.32669830]
[415.86782837 112.49350739]
[429.71209717 121.28370667]
[428.75146484 137.65469360]
[413.97412109 144.76539612]
[400.58175659 135.30094910]
[385.60751343 134.42227173]
[370.63327026 133.54359436]
[355.65902710 132.66491699]
[340.68478394 131.78625488]
[337.71517944 146.49005127]
[334.74584961 161.19253540]
[348.88745117 166.19410706]
[364.90322876 162.66894531]
[375.76272583 174.95729065]
[370.29461670 190.41793823]
[354.12402344 193.14631653]
[343.88586426 180.33567810]
[329.74429321 175.33410645]
[310.66531372 178.57827759]
[292.93344116 175.57443237]
[278.40139771 167.50373840]
[268.32138062 156.03440857]
[263.23995972 143.06782532]
[262.99038696 130.47201538]
[247.99040222 130.47201538]
[232.99040222 130.47201538]
[226.32481384 133.60374451]
[217.81481934 130.38307190]
[202.81585693 130.20724487]
[187.81687927 130.03141785]
[172.81791687 129.85557556]
[157.81893921 129.67974854]
[142.81997681 129.50392151]
[133.94639587 141.59770203]
[138.61508179 155.85263062]
[143.28376770 170.10757446]
[161.18415833 172.00436401]
[176.39099121 181.53645325]
[185.84356689 196.73019409]
[187.66358948 214.47805786]
[181.52825928 231.17416382]
[168.72628784 243.44694519]
[173.89329529 257.52893066]
[179.06028748 271.61090088]
[184.22729492 285.69287109]
[189.39430237 299.77487183]
[194.56129456 313.85684204]
[209.64047241 317.11599731]
[220.54769897 328.02636719]
[223.80250549 343.10647583]
[218.36631775 357.54431152]
[205.97378540 366.73284912]
[190.57934570 367.74002075]
[177.09527588 360.24444580]
[169.82431030 346.63793945]
[171.08659363 331.26229858]
[180.47932434 319.02383423]
[175.31231689 304.94186401]
[170.14532471 290.85989380]
[164.97831726 276.77792358]
[159.81130981 262.69592285]
[154.64430237 248.61395264]
[142.46728516 248.74494934]
[130.80999756 245.13951111]
[120.79325867 238.12867737]
[113.38487244 228.37165833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 237]
[5 236]
[6 235]
[12 24]
[13 23]
[14 22]
[15 21]
[16 20]
[27 166]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[33 160]
[34 159]
[35 158]
[36 54]
[37 53]
[38 52]
[39 51]
[41 50]
[42 49]
[61 153]
[62 152]
[63 151]
[64 150]
[67 147]
[68 146]
[69 145]
[70 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
[91 101]
[92 100]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
[126 132]
[127 131]
[169 234]
[170 233]
[171 232]
[172 231]
[173 230]
[174 229]
[175 227]
[176 226]
[177 225]
[181 194]
[182 193]
[183 192]
[184 191]
[197 210]
[198 209]
[199 208]
[200 207]
[201 206]
[212 219]
[213 218]
[243 263]
[244 262]
[245 261]
[246 260]
[247 259]
[248 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
