%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUGGCCAAGGCCGGGCGGCCGCCUUGCCCCCGCUUCCUUUCACGCUGUCGCUGCCCGUAGGUGGUUGUGGCCACUGUGCCCGGAGGGAGGCGGCGGUGGCCAGUAAUGCCUGGGAAACUCCUCUGGGGGGACAUUAUGGAGCUGGAAGCACCCUUGGAGGAGUCCGAGAGCCAGAAGAAGGAGAGGCAAAAGAGUGACAGAAGGA\
) } def
/len { sequence length } bind def

/coor [
[-26.48464775 302.59521484]
[-34.24471283 315.43194580]
[-30.68094635 330.59564209]
[-38.73362350 343.50335693]
[-53.21183777 346.80740356]
[-60.97190475 359.64413452]
[-61.48982239 375.45684814]
[-74.69555664 382.34582520]
[-82.45562744 395.18252563]
[-90.21569061 408.01925659]
[-97.97576141 420.85595703]
[-105.73582458 433.69268799]
[-113.49589539 446.52941895]
[-115.25811768 455.49468994]
[-121.47134399 459.50015259]
[-129.42440796 472.21820068]
[-129.46116638 488.61730957]
[-143.81440735 496.54928589]
[-157.71876526 487.85440063]
[-156.87060547 471.47720337]
[-142.14245605 464.26513672]
[-134.18939209 451.54708862]
[-126.33261108 438.76934814]
[-118.57254791 425.93261719]
[-110.81247711 413.09588623]
[-103.05240631 400.25918579]
[-95.29234314 387.42245483]
[-87.53227234 374.58575439]
[-87.56941223 359.69119263]
[-73.80862427 351.88406372]
[-66.04856110 339.04733276]
[-69.85132599 324.69204712]
[-62.16437531 311.56323242]
[-47.08143234 307.67187500]
[-39.32136536 294.83514404]
[-39.35850525 279.94061279]
[-25.59771538 272.13348389]
[-17.83764839 259.29675293]
[-10.07758141 246.46003723]
[-2.31751466 233.62330627]
[5.44255257 220.78659058]
[-9.52494144 221.77357483]
[-19.74279976 210.79197693]
[-17.68133736 195.93431091]
[-4.85967588 188.14938354]
[9.27372074 193.17402649]
[14.30374527 207.30558777]
[23.01019096 195.09094238]
[31.71663475 182.87628174]
[40.42308044 170.66162109]
[49.12952423 158.44697571]
[57.83597183 146.23231506]
[66.54241180 134.01765442]
[75.24886322 121.80300140]
[67.03881836 98.75480652]
[76.96438599 76.39173126]
[69.20431519 63.55501556]
[61.44424820 50.71829605]
[55.84380341 47.19741440]
[53.25285721 42.13603592]
[53.65042114 37.37459183]
[46.28160477 24.30935097]
[38.91278458 11.24411011]
[31.54396439 -1.82113004]
[24.17514610 -14.88637066]
[8.88196564 -15.14304924]
[-4.14339876 -22.96843719]
[-11.45439434 -36.17509079]
[-11.17516518 -51.16769028]
[-3.48082232 -63.92161560]
[-10.84964180 -76.98685455]
[-18.21846008 -90.05210114]
[-25.58728027 -103.11734009]
[-32.95610046 -116.18257904]
[-40.32491684 -129.24781799]
[-47.69373703 -142.31306458]
[-55.06255722 -155.37829590]
[-62.43137741 -168.44354248]
[-69.80019379 -181.50877380]
[-77.26747131 -194.51800537]
[-84.83277893 -207.47045898]
[-92.39807892 -220.42291260]
[-107.85094452 -221.83311462]
[-119.50146484 -232.08226013]
[-122.86978149 -247.22935486]
[-116.66070557 -261.45001221]
[-103.26175690 -269.27609253]
[-87.82509613 -267.69833374]
[-76.28644562 -257.32342529]
[-73.08264923 -242.14068604]
[-79.44562531 -227.98822021]
[-71.88031769 -215.03576660]
[-64.31501007 -202.08331299]
[-58.22559738 -197.89201355]
[-56.73495483 -188.87759399]
[-49.36613464 -175.81236267]
[-41.99731445 -162.74711609]
[-34.62849808 -149.68188477]
[-27.25967789 -136.61663818]
[-19.89085770 -123.55139923]
[-12.52203941 -110.48616028]
[-5.15322018 -97.42091370]
[2.21559882 -84.35567474]
[9.58441830 -71.29043579]
[24.47956467 -71.27702332]
[37.45440674 -63.75974274]
[44.97415924 -50.67082977]
[44.93246460 -35.47559738]
[37.24038696 -22.25518990]
[44.60920334 -9.18994904]
[51.97802353 3.87529111]
[59.34684372 16.94053078]
[66.71566010 30.00577164]
[74.28096771 42.95822906]
[82.04103851 55.79494858]
[89.80110168 68.63166809]
[104.88839722 64.01848602]
[121.86957550 66.93936157]
[136.91920471 78.02005768]
[150.59770203 71.86386108]
[164.27619934 65.70767212]
[177.95469666 59.55147934]
[191.63319397 53.39528656]
[205.31169128 47.23909378]
[218.99018860 41.08290100]
[232.66868591 34.92670822]
[246.34718323 28.77051735]
[260.02566528 22.61432457]
[273.70416260 16.45813370]
[287.38265991 10.30194092]
[301.06115723 4.14574909]
[298.79733276 -10.77998638]
[300.64547729 -25.76287270]
[306.46850586 -39.69107819]
[315.83428955 -51.53104019]
[328.04782104 -60.40415192]
[342.20278931 -65.65196991]
[357.24880981 -66.88507843]
[372.06930542 -64.01196289]
[385.56457520 -57.24583054]
[396.73312378 -47.08877563]
[404.74621582 -34.29451752]
[409.00921631 -19.81247520]
[409.20574951 -4.71731091]
[405.32125854 9.87081146]
[397.64398193 22.86935616]
[386.74365234 33.31374741]
[373.42913818 40.42893982]
[358.68844604 43.68693924]
[343.61544800 42.84598160]
[329.32864380 37.96847153]
[316.88824463 29.41635323]
[307.21737671 17.82424736]
[293.53887939 23.98043823]
[279.86038208 30.13663101]
[266.18188477 36.29282379]
[252.50337219 42.44901657]
[238.82487488 48.60520554]
[225.14637756 54.76139832]
[211.46788025 60.91759109]
[197.78938293 67.07378387]
[184.11088562 73.22997284]
[170.43238831 79.38616943]
[156.75389099 85.54235840]
[143.07539368 91.69855499]
[141.89094543 99.10443115]
[155.90272522 93.74998474]
[167.54576111 103.20724487]
[165.17713928 118.01905060]
[151.16546631 123.37375641]
[139.52204895 113.91619873]
[138.33761597 121.32208252]
[149.41375732 131.43736267]
[160.48991394 141.55264282]
[174.63410950 135.81639099]
[189.86590576 136.79371643]
[203.16101074 144.29055786]
[211.87968445 156.81842041]
[214.29083252 171.88989258]
[209.91571045 186.51251221]
[199.62298584 197.78294373]
[185.45631409 203.46345520]
[170.22848511 202.42616272]
[156.96299744 194.87701416]
[148.29373169 182.31491089]
[145.94195557 167.23406982]
[150.37463379 152.62878418]
[139.29847717 142.51350403]
[128.22233582 132.39822388]
[120.95864105 135.59048462]
[113.50994873 137.26614380]
[106.17671204 137.47006226]
[99.23602295 136.30401611]
[92.93125153 133.91964722]
[87.46351624 130.50944519]
[78.75707245 142.72410583]
[70.05062866 154.93876648]
[61.34418106 167.15341187]
[52.63773727 179.36807251]
[43.93128967 191.58273315]
[35.22484589 203.79737854]
[26.51840019 216.01203918]
[18.27927208 228.54666138]
[10.51920414 241.38337708]
[2.75913715 254.22009277]
[-5.00092983 267.05682373]
[-12.76099682 279.89352417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[5 31]
[6 30]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[15 22]
[16 21]
[37 207]
[38 206]
[39 205]
[40 204]
[41 203]
[47 202]
[48 201]
[49 200]
[50 199]
[51 198]
[52 197]
[53 196]
[54 195]
[56 116]
[57 115]
[58 114]
[61 113]
[62 112]
[63 111]
[64 110]
[65 109]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 93]
[81 92]
[82 91]
[119 165]
[120 164]
[121 163]
[122 162]
[123 161]
[124 160]
[125 159]
[126 158]
[127 157]
[128 156]
[129 155]
[130 154]
[131 153]
[172 189]
[173 188]
[174 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
