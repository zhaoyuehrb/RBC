%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NUTM2F)
} def

/sequence { (\
GUCAGUGCCCAGCCUGAGGGGAUGGCUUCAAAUGGAGCAUACCCAGUGCUGGGACCCGGCGUGACCGUGAACCCUGGCACCUCCCUGUCUGUGUUCACGGCUCUGCCCUUUGCCACACCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006181756 ubox
1 55 0.056010831 ubox
1 60 0.065322685 ubox
1 65 0.004253715 ubox
1 113 0.084121957 ubox
1 116 0.134068726 ubox
1 118 0.115914484 ubox
2 7 0.007711843 ubox
2 17 0.090515708 ubox
2 54 0.055964683 ubox
2 59 0.065326029 ubox
2 64 0.004485353 ubox
2 112 0.062486591 ubox
2 115 0.126405142 ubox
2 117 0.109184960 ubox
3 16 0.096759046 ubox
3 53 0.032910076 ubox
3 58 0.066227124 ubox
3 63 0.004532370 ubox
3 112 0.105147260 ubox
4 15 0.096761717 ubox
4 62 0.004426254 ubox
4 109 0.035025080 ubox
4 110 0.024329943 ubox
4 111 0.100424558 ubox
5 13 0.005207942 ubox
5 14 0.096621795 ubox
5 40 0.007027890 ubox
5 55 0.673423247 ubox
5 108 0.036703078 ubox
5 109 0.015835852 ubox
5 110 0.055192187 ubox
5 113 0.080356011 ubox
5 116 0.418135227 ubox
5 118 0.371869872 ubox
6 12 0.007239941 ubox
6 39 0.007239772 ubox
6 54 0.673485910 ubox
6 58 0.003425753 ubox
6 112 0.078804793 ubox
6 115 0.418412321 ubox
6 117 0.372813646 ubox
6 121 0.009271871 ubox
7 13 0.094711902 ubox
7 38 0.007300098 ubox
7 57 0.040463751 ubox
7 111 0.046342156 ubox
7 113 0.040733052 ubox
7 114 0.413440561 ubox
7 116 0.371536693 ubox
7 120 0.015407012 ubox
8 12 0.094032745 ubox
8 37 0.007299629 ubox
8 52 0.029579245 ubox
8 53 0.991126958 ubox
8 112 0.039382040 ubox
9 35 0.007307089 ubox
9 51 0.020986284 ubox
9 52 0.994747224 ubox
9 53 0.004725986 ubox
10 34 0.007307847 ubox
10 51 0.995031201 ubox
10 52 0.003423953 ubox
11 33 0.007245659 ubox
11 50 0.995025121 ubox
12 49 0.995260840 ubox
13 48 0.995080170 ubox
14 46 0.963745821 ubox
15 30 0.007047169 ubox
15 45 0.945751467 ubox
16 29 0.007309581 ubox
16 44 0.802230603 ubox
16 47 0.047352374 ubox
17 28 0.007304920 ubox
18 27 0.007295954 ubox
18 43 0.750201119 ubox
18 44 0.523575238 ubox
18 120 0.048815499 ubox
19 26 0.007291446 ubox
19 42 0.746250356 ubox
19 43 0.581979429 ubox
19 44 0.278436991 ubox
19 119 0.048821282 ubox
19 120 0.007131034 ubox
20 42 0.586380956 ubox
20 43 0.307813394 ubox
20 44 0.008650167 ubox
20 118 0.048767768 ubox
20 119 0.007138072 ubox
21 42 0.308195980 ubox
21 43 0.009594943 ubox
21 118 0.007120491 ubox
22 40 0.552551401 ubox
23 39 0.642975519 ubox
23 41 0.127655916 ubox
23 115 0.048744743 ubox
23 117 0.004801335 ubox
24 38 0.456467076 ubox
24 40 0.122539549 ubox
24 114 0.048882621 ubox
24 116 0.004829787 ubox
25 38 0.888140945 ubox
25 113 0.046745088 ubox
26 35 0.020160831 ubox
26 37 0.998280447 ubox
26 112 0.045515397 ubox
27 34 0.019953638 ubox
27 35 0.004081890 ubox
27 36 0.997969443 ubox
27 37 0.014145345 ubox
28 34 0.005079765 ubox
28 35 0.996416645 ubox
28 36 0.033165663 ubox
29 34 0.989970005 ubox
29 35 0.043605460 ubox
29 112 0.007194118 ubox
30 110 0.004768430 ubox
30 111 0.015460566 ubox
31 109 0.004440138 ubox
31 110 0.015734235 ubox
31 111 0.009946953 ubox
32 40 0.007007965 ubox
32 109 0.015095112 ubox
32 110 0.009423305 ubox
33 39 0.007302124 ubox
33 45 0.003696438 ubox
33 105 0.012418974 ubox
34 38 0.007280479 ubox
34 44 0.004007308 ubox
34 56 0.006362958 ubox
34 57 0.009548032 ubox
34 104 0.018198345 ubox
34 108 0.022022710 ubox
34 109 0.003796615 ubox
34 111 0.003323842 ubox
35 43 0.003997832 ubox
35 55 0.006402208 ubox
35 56 0.009536902 ubox
35 103 0.018656689 ubox
35 107 0.021887559 ubox
35 108 0.003925905 ubox
35 110 0.003474584 ubox
36 50 0.022145107 ubox
36 102 0.018658536 ubox
36 109 0.003507126 ubox
37 49 0.023248055 ubox
37 101 0.018635193 ubox
37 106 0.021845254 ubox
37 108 0.003469645 ubox
38 48 0.023255532 ubox
38 100 0.016524800 ubox
38 105 0.021844435 ubox
39 47 0.023203037 ubox
39 104 0.019664327 ubox
40 46 0.022837524 ubox
42 53 0.032505897 ubox
43 52 0.032654999 ubox
44 51 0.032651545 ubox
44 63 0.021083865 ubox
45 50 0.029416057 ubox
45 62 0.021054487 ubox
46 62 0.004561594 ubox
46 116 0.004848641 ubox
46 118 0.082872730 ubox
47 61 0.023464088 ubox
47 115 0.004793228 ubox
47 117 0.083126006 ubox
48 60 0.028647452 ubox
48 113 0.003408926 ubox
48 114 0.003540566 ubox
48 116 0.083180484 ubox
49 59 0.028658284 ubox
49 112 0.004629725 ubox
50 58 0.028644892 ubox
50 115 0.082793385 ubox
51 57 0.032923140 ubox
51 110 0.004390019 ubox
51 114 0.083260183 ubox
52 56 0.032401150 ubox
52 109 0.005298690 ubox
52 113 0.083207560 ubox
52 114 0.011752567 ubox
53 108 0.006421151 ubox
53 110 0.010411124 ubox
53 111 0.011872371 ubox
53 113 0.014942553 ubox
54 62 0.003636666 ubox
54 109 0.032033774 ubox
54 110 0.026676177 ubox
55 61 0.003727824 ubox
57 112 0.038218969 ubox
57 121 0.055620413 ubox
58 104 0.003196657 ubox
58 107 0.983098853 ubox
58 108 0.112464687 ubox
58 109 0.010097761 ubox
58 111 0.005904378 ubox
58 114 0.081226824 ubox
58 119 0.035254583 ubox
58 120 0.058753731 ubox
59 103 0.003181243 ubox
59 106 0.986854519 ubox
59 107 0.096896473 ubox
59 108 0.010602847 ubox
59 113 0.081311967 ubox
59 118 0.035857498 ubox
59 119 0.058329301 ubox
60 105 0.988438560 ubox
60 112 0.081261466 ubox
61 101 0.005098495 ubox
61 104 0.923571077 ubox
61 106 0.104678314 ubox
61 111 0.041095331 ubox
61 113 0.005711746 ubox
61 116 0.043683968 ubox
61 118 0.057331145 ubox
62 105 0.101929734 ubox
62 112 0.005700325 ubox
62 115 0.043663975 ubox
62 117 0.057223747 ubox
63 103 0.969339591 ubox
63 104 0.026758993 ubox
63 110 0.008566118 ubox
63 111 0.004684515 ubox
63 114 0.042658655 ubox
63 116 0.055585306 ubox
64 102 0.966724123 ubox
64 109 0.009047026 ubox
64 110 0.005136691 ubox
65 100 0.999138580 ubox
66 99 0.999647406 ubox
67 98 0.999956756 ubox
68 97 0.999790587 ubox
69 96 0.999980897 ubox
70 95 0.999616758 ubox
71 92 0.011105494 ubox
71 94 0.998959715 ubox
72 91 0.012860485 ubox
72 93 0.996652753 ubox
75 91 0.056530290 ubox
76 84 0.003176790 ubox
76 85 0.013457213 ubox
76 89 0.994617340 ubox
76 90 0.057737413 ubox
77 83 0.003195213 ubox
77 84 0.013373235 ubox
77 88 0.997522593 ubox
77 89 0.058740674 ubox
77 92 0.014215449 ubox
77 94 0.003498626 ubox
78 87 0.999075104 ubox
78 91 0.014313149 ubox
78 93 0.003764761 ubox
79 86 0.900055929 ubox
79 88 0.034710643 ubox
79 90 0.012662627 ubox
79 92 0.004039676 ubox
80 87 0.035019705 ubox
80 91 0.004031057 ubox
99 107 0.010713157 ubox
99 114 0.022919800 ubox
100 106 0.011726283 ubox
100 113 0.024916127 ubox
101 105 0.012135670 ubox
101 112 0.025866935 ubox
104 115 0.015661931 ubox
104 117 0.003385306 ubox
105 113 0.063116627 ubox
105 114 0.015461307 ubox
105 116 0.003790962 ubox
106 112 0.063775912 ubox
111 117 0.064924270 ubox
111 121 0.026463559 ubox
112 116 0.072254096 ubox
112 120 0.044554987 ubox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
58 107 0.9500000 lbox
59 106 0.9500000 lbox
60 105 0.9500000 lbox
61 104 0.9500000 lbox
63 103 0.9500000 lbox
64 102 0.9500000 lbox
65 100 0.9500000 lbox
66 99 0.9500000 lbox
67 98 0.9500000 lbox
68 97 0.9500000 lbox
69 96 0.9500000 lbox
70 95 0.9500000 lbox
71 94 0.9500000 lbox
72 93 0.9500000 lbox
76 89 0.9500000 lbox
77 88 0.9500000 lbox
78 87 0.9500000 lbox
79 86 0.9500000 lbox
showpage
end
%%EOF
