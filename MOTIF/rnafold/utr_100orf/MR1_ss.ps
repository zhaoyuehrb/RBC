%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUCUUCUGUAGGCCUUUCUCUUGCCUUCUUUUAUUCACAACUGAUGACACUGCAUAUCUUCCCCUGUUCUUAUUGGGAGAAGGCCUUGUGUGUCACCAAGAGGUUCUCAGAAGGGACCUGUCAGUUUUUGGUUAAAAGAACCCGGAAAGAGAAGGACUAUGGGGGAACUGAUGGCGUUCCUGUUACCUCUCAUCAUUGUGUUAAUGGUGAAGCACAGCGAUUCCCGGACGCACUCUCUGAGAUAUUUUCGCC\
UGGGCG\
) } def
/len { sequence length } bind def

/coor [
[87.26794434 120.65475464]
[81.65410614 115.87930298]
[77.73300171 109.63871765]
[75.86640930 102.50878143]
[76.22657013 95.14737701]
[63.17664719 87.75145721]
[50.12672806 80.35553741]
[37.07680893 72.95961761]
[24.02688980 65.56370544]
[10.97696972 58.16778564]
[-2.07294965 50.77186584]
[-15.12286949 43.37594986]
[-28.17278862 35.98003006]
[-41.22270966 28.58411407]
[-53.81838989 31.26323318]
[-64.52691650 24.85974693]
[-67.90229034 13.26434040]
[-80.86258698 5.71247816]
[-93.82289124 -1.83938336]
[-106.78318787 -9.39124489]
[-119.74349213 -16.94310760]
[-132.70379639 -24.49496841]
[-145.66409302 -32.04682922]
[-158.62438965 -39.59869003]
[-171.58468628 -47.15055466]
[-187.40371704 -47.41316986]
[-194.50492859 -60.50599289]
[-207.46524048 -68.05785370]
[-220.55926514 -75.37539673]
[-233.78277588 -82.45626068]
[-247.00628662 -89.53712463]
[-260.22979736 -96.61798859]
[-273.45333862 -103.69885254]
[-286.67684937 -110.77971649]
[-299.90036011 -117.86058044]
[-313.12387085 -124.94144440]
[-328.94210815 -124.63496399]
[-336.50961304 -137.46392822]
[-349.73312378 -144.54478455]
[-362.95663452 -151.62564087]
[-381.35809326 -150.62275696]
[-390.00061035 -165.91148376]
[-403.30807495 -172.83328247]
[-416.61553955 -179.75508118]
[-429.92300415 -186.67686462]
[-443.23046875 -193.59866333]
[-456.53793335 -200.52046204]
[-469.84542847 -207.44226074]
[-507.96179199 -186.86473083]
[-522.71984863 -189.54814148]
[-537.47784424 -192.23155212]
[-552.23590088 -194.91496277]
[-566.99389648 -197.59835815]
[-575.96447754 -196.05683899]
[-581.91235352 -200.40344238]
[-596.63714600 -203.26361084]
[-611.36193848 -206.12379456]
[-625.69915771 -196.07438660]
[-642.53387451 -199.45254517]
[-651.52258301 -213.68348694]
[-666.28063965 -216.36689758]
[-681.03863525 -219.05030823]
[-695.79669189 -221.73371887]
[-710.55468750 -224.41712952]
[-725.32855225 -227.01200867]
[-740.11767578 -229.51826477]
[-754.90686035 -232.02452087]
[-764.63879395 -220.14242554]
[-779.01367188 -214.73323059]
[-794.16461182 -217.25196838]
[-806.01617432 -227.02113342]
[-811.38024902 -241.41285706]
[-808.81402588 -256.55584717]
[-799.00775146 -268.37670898]
[-784.59930420 -273.69567871]
[-769.46441650 -271.08200073]
[-757.67437744 -261.23873901]
[-752.40057373 -246.81367493]
[-737.61145020 -244.30740356]
[-722.82232666 -241.80114746]
[-715.72503662 -243.77578735]
[-707.87127686 -239.17515564]
[-693.11328125 -236.49174500]
[-678.35522461 -233.80833435]
[-663.59722900 -231.12492371]
[-648.83923340 -228.44151306]
[-639.39184570 -237.17666626]
[-626.44628906 -238.91117859]
[-614.68768311 -232.79168701]
[-608.50177002 -220.84857178]
[-593.77697754 -217.98840332]
[-579.05218506 -215.12823486]
[-564.31048584 -212.35638428]
[-549.55249023 -209.67297363]
[-534.79443359 -206.98957825]
[-520.03643799 -204.30616760]
[-505.27838135 -201.62275696]
[-500.68301392 -207.55001831]
[-512.53753662 -216.74078369]
[-524.39190674 -225.93173218]
[-515.20080566 -237.78596497]
[-503.34677124 -228.59530640]
[-491.49224854 -219.40454102]
[-486.89685059 -225.33181763]
[-493.17266846 -238.95584106]
[-499.44848633 -252.57986450]
[-505.72430420 -266.20388794]
[-512.00012207 -279.82794189]
[-518.27593994 -293.45196533]
[-524.55175781 -307.07598877]
[-539.04290771 -313.95974731]
[-542.55554199 -329.61352539]
[-532.39514160 -342.02908325]
[-516.35583496 -341.68225098]
[-506.74163818 -328.83911133]
[-510.92770386 -313.35180664]
[-504.65188599 -299.72778320]
[-498.37606812 -286.10372925]
[-492.10028076 -272.47970581]
[-485.82446289 -258.85568237]
[-479.54864502 -245.23165894]
[-473.27282715 -231.60762024]
[-462.92361450 -220.74972534]
[-449.61614990 -213.82794189]
[-436.30868530 -206.90614319]
[-423.00122070 -199.98434448]
[-409.69375610 -193.06254578]
[-396.38626099 -186.14074707]
[-383.07879639 -179.21894836]
[-371.47344971 -182.55990601]
[-360.33966064 -176.92817688]
[-355.87579346 -164.84916687]
[-342.65225220 -157.76829529]
[-329.42874146 -150.68743896]
[-314.55633545 -151.50038147]
[-306.04299927 -138.16496277]
[-292.81948853 -131.08409119]
[-279.59597778 -124.00323486]
[-266.37246704 -116.92237091]
[-253.14894104 -109.84150696]
[-239.92543030 -102.76064301]
[-226.70191956 -95.67977905]
[-213.47839355 -88.59891510]
[-210.04255676 -89.24581909]
[-206.12403870 -88.28026581]
[-202.47528076 -85.49384308]
[-199.91337585 -81.01815796]
[-186.95306396 -73.46629333]
[-172.06105042 -73.74383545]
[-164.03282166 -60.11085510]
[-151.07252502 -52.55899048]
[-138.11222839 -45.00712967]
[-125.15192413 -37.45526886]
[-112.19162750 -29.90340614]
[-99.23132324 -22.35154533]
[-86.27102661 -14.79968357]
[-73.31072235 -7.24782181]
[-60.35042572 0.30403972]
[-42.80914688 -0.55729902]
[-33.82678986 15.53419399]
[-20.77687073 22.93011093]
[-7.72695112 30.32603073]
[5.32296848 37.72194672]
[18.37288857 45.11786652]
[31.42280769 52.51378250]
[44.47272491 59.90970230]
[57.52264786 67.30561829]
[70.57256317 74.70153809]
[83.62248230 82.09745789]
[107.30392456 76.86178589]
[123.68766022 94.74462891]
[138.61869812 96.18132019]
[153.54974365 97.61801147]
[159.66656494 95.24643707]
[165.23542786 96.16015625]
[168.82009888 99.27237701]
[183.71238708 101.06668854]
[198.33901978 95.03573608]
[210.04936218 104.23992920]
[224.94165039 106.03424835]
[239.83395386 107.82855988]
[254.46057129 101.79760742]
[266.17092896 111.00180054]
[281.06320190 112.79611206]
[295.95550537 114.59043121]
[310.84780884 116.38474274]
[318.96932983 109.20955658]
[329.47964478 107.70186615]
[338.89376831 112.11873627]
[344.22244263 120.79221344]
[359.06741333 122.94311523]
[367.97674561 121.07997131]
[374.07708740 125.20984650]
[388.89520264 127.53859711]
[403.71334839 129.86734009]
[418.53146362 132.19609070]
[433.34960938 134.52484131]
[448.16772461 136.85359192]
[462.98587036 139.18234253]
[477.80398560 141.51109314]
[492.62210083 143.83984375]
[509.20788574 140.32585144]
[517.17596436 155.29067993]
[505.00173950 167.09002686]
[490.29336548 158.65797424]
[475.47521973 156.32922363]
[460.65710449 154.00047302]
[445.83898926 151.67172241]
[431.02084351 149.34297180]
[416.20272827 147.01422119]
[401.38458252 144.68547058]
[386.56646729 142.35671997]
[371.74835205 140.02796936]
[356.91650391 137.78810120]
[342.07153320 135.63719177]
[324.65390015 144.07612610]
[309.05349731 131.27703857]
[294.16119385 129.48272705]
[279.26889038 127.68840790]
[264.37658691 125.89409637]
[250.81517029 132.05339050]
[238.03962708 122.72085571]
[223.14733887 120.92653656]
[208.25505066 119.13222504]
[194.69361877 125.29151917]
[181.91807556 115.95898438]
[167.02578735 114.16467285]
[152.11303711 112.54904938]
[137.18200684 111.11235809]
[122.25096893 109.67566681]
[119.35248566 114.63576508]
[115.36910248 118.77537537]
[120.81731415 132.75096130]
[126.26551819 146.72654724]
[132.27928162 153.55895996]
[131.69416809 160.90251160]
[136.97441101 174.94242859]
[151.79139709 179.15707397]
[161.17584229 191.14813232]
[161.69395447 206.18792725]
[153.35646057 218.50151062]
[158.63670349 232.54141235]
[163.91696167 246.58132935]
[169.19720459 260.62124634]
[174.47744751 274.66113281]
[185.71241760 287.35806274]
[176.62184143 301.66882324]
[160.35382080 296.89514160]
[160.43753052 279.94137573]
[155.15728760 265.90148926]
[149.87704468 251.86157227]
[144.59680176 237.82165527]
[139.31655884 223.78175354]
[124.93107605 220.01400757]
[115.41000366 208.36012268]
[114.56695557 193.15673828]
[122.93450165 180.22267151]
[117.65425873 166.18275452]
[112.28993225 152.17475891]
[106.84172821 138.19917297]
[101.39351654 124.22358704]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[17 158]
[18 157]
[19 156]
[20 155]
[21 154]
[22 153]
[23 152]
[24 151]
[25 150]
[27 148]
[28 147]
[29 143]
[30 142]
[31 141]
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[38 134]
[39 133]
[40 132]
[42 129]
[43 128]
[44 127]
[45 126]
[46 125]
[47 124]
[48 123]
[49 97]
[50 96]
[51 95]
[52 94]
[53 93]
[55 92]
[56 91]
[57 90]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 80]
[66 79]
[67 78]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[171 230]
[172 229]
[173 228]
[176 227]
[177 226]
[179 224]
[180 223]
[181 222]
[183 220]
[184 219]
[185 218]
[186 217]
[190 215]
[191 214]
[193 213]
[194 212]
[195 211]
[196 210]
[197 209]
[198 208]
[199 207]
[200 206]
[201 205]
[232 261]
[233 260]
[234 259]
[236 258]
[237 257]
[241 253]
[242 252]
[243 251]
[244 250]
[245 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
