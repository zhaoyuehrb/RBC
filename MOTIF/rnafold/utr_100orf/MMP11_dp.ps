%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MMP11)
} def

/sequence { (\
AUAAGGGGCGGCGGCCCGGAGCGGCCCAGCAAGCCCAGCAGCCCCGGGGCGGAUGGCUCCGGCCGCCUGGCUCCGCAGCGCGGCCGCGCGCGCCCUCCUGCCCCCGAUGCUGCUGCUGCUGCUCCAGCCGCCGCCGCUGCUGGCCCGGGCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 139 0.032448508 ubox
2 142 0.013954479 ubox
3 138 0.041545964 ubox
3 141 0.017783117 ubox
4 138 0.962655741 ubox
4 141 0.030554344 ubox
5 137 0.993275474 ubox
5 138 0.066516025 ubox
5 140 0.031349259 ubox
5 146 0.021476227 ubox
6 135 0.008946918 ubox
6 137 0.072014036 ubox
6 145 0.021485159 ubox
6 146 0.003866202 ubox
7 134 0.006343576 ubox
7 135 0.999171033 ubox
7 138 0.031225124 ubox
7 144 0.017401044 ubox
7 145 0.003733565 ubox
8 134 0.999326748 ubox
8 137 0.031387809 ubox
8 144 0.003672485 ubox
9 133 0.999333249 ubox
9 136 0.031387184 ubox
9 142 0.017197091 ubox
10 132 0.999331638 ubox
10 135 0.031380355 ubox
10 141 0.017337198 ubox
11 131 0.999348875 ubox
11 134 0.031379127 ubox
11 140 0.017390147 ubox
12 130 0.999334949 ubox
12 133 0.031377174 ubox
12 139 0.017389738 ubox
13 129 0.999331937 ubox
13 132 0.031369430 ubox
13 138 0.017374673 ubox
14 128 0.999344223 ubox
14 131 0.031366526 ubox
14 137 0.017363422 ubox
15 127 0.998115045 ubox
15 130 0.031320063 ubox
15 136 0.016266758 ubox
17 133 0.007708166 ubox
17 136 0.005994383 ubox
18 124 0.007276203 ubox
18 125 0.998357019 ubox
18 132 0.007755326 ubox
18 135 0.014657384 ubox
19 123 0.003171637 ubox
19 124 0.999800573 ubox
19 131 0.005384224 ubox
19 134 0.014699710 ubox
20 123 0.999684165 ubox
21 122 0.999824479 ubox
21 131 0.016668045 ubox
22 121 0.998777119 ubox
22 130 0.017465773 ubox
23 35 0.021837734 ubox
23 120 0.993640587 ubox
23 129 0.017512665 ubox
24 30 0.018891228 ubox
24 34 0.021965534 ubox
24 119 0.991603109 ubox
24 122 0.003239266 ubox
24 128 0.017513041 ubox
25 29 0.018834340 ubox
25 33 0.021973061 ubox
25 118 0.924271427 ubox
25 127 0.017484296 ubox
27 115 0.031109971 ubox
27 118 0.357985797 ubox
27 121 0.045484572 ubox
28 114 0.030103284 ubox
28 117 0.766947286 ubox
28 120 0.097775168 ubox
28 123 0.016429158 ubox
29 113 0.028994849 ubox
29 116 0.815261074 ubox
29 119 0.109810672 ubox
29 122 0.017163764 ubox
30 112 0.027611288 ubox
30 115 0.768569849 ubox
30 118 0.112694776 ubox
30 121 0.017162030 ubox
31 111 0.019156438 ubox
31 114 0.542260648 ubox
31 117 0.089919763 ubox
31 120 0.012220534 ubox
32 111 0.005470778 ubox
32 114 0.147115948 ubox
32 117 0.525316254 ubox
32 120 0.025319925 ubox
33 39 0.011181933 ubox
33 42 0.003209785 ubox
33 110 0.007584187 ubox
33 113 0.202782333 ubox
33 116 0.535198321 ubox
33 119 0.030187895 ubox
34 38 0.011172260 ubox
34 41 0.003213533 ubox
34 109 0.007526697 ubox
34 112 0.182003213 ubox
34 115 0.480807766 ubox
34 118 0.030455414 ubox
36 112 0.107270112 ubox
36 115 0.418447612 ubox
36 118 0.004181830 ubox
37 111 0.195941599 ubox
37 114 0.802794109 ubox
37 117 0.007174933 ubox
38 110 0.207525662 ubox
38 113 0.976459009 ubox
38 116 0.007210001 ubox
39 109 0.207530275 ubox
39 112 0.976887702 ubox
39 115 0.007205668 ubox
40 108 0.205562791 ubox
40 111 0.977849189 ubox
40 114 0.007187818 ubox
41 110 0.978148980 ubox
41 113 0.007173325 ubox
42 109 0.977611528 ubox
42 112 0.007160561 ubox
45 106 0.918489187 ubox
45 109 0.003602569 ubox
46 103 0.008059925 ubox
46 104 0.555325960 ubox
46 105 0.831190804 ubox
47 102 0.008119668 ubox
47 103 0.682477159 ubox
47 104 0.730825735 ubox
48 101 0.008166805 ubox
48 102 0.789037647 ubox
48 103 0.614248934 ubox
49 101 0.882827050 ubox
49 102 0.469505575 ubox
50 100 0.967152078 ubox
51 94 0.016686003 ubox
51 95 0.017761913 ubox
51 96 0.003295843 ubox
51 98 0.959454578 ubox
51 99 0.278707857 ubox
52 93 0.016893162 ubox
52 94 0.017914071 ubox
52 95 0.003885270 ubox
52 97 0.972443983 ubox
52 98 0.231037658 ubox
53 96 0.973220202 ubox
54 90 0.004443130 ubox
54 92 0.067192542 ubox
55 89 0.003891795 ubox
55 91 0.069146310 ubox
55 94 0.990532132 ubox
55 95 0.090290705 ubox
56 89 0.079086611 ubox
56 91 0.058987881 ubox
56 93 0.992678243 ubox
56 94 0.068131312 ubox
57 88 0.082271265 ubox
57 90 0.063909091 ubox
57 92 0.992611712 ubox
60 75 0.003791897 ubox
60 86 0.991319472 ubox
60 88 0.046556851 ubox
60 90 0.046783965 ubox
61 72 0.011705201 ubox
61 73 0.003271109 ubox
61 74 0.003626583 ubox
61 85 0.999248669 ubox
61 87 0.020387803 ubox
61 89 0.026617357 ubox
62 71 0.013156906 ubox
62 84 0.999676026 ubox
62 87 0.020077201 ubox
62 91 0.004080793 ubox
63 70 0.013358411 ubox
63 83 0.999678799 ubox
63 86 0.020049102 ubox
63 90 0.003501443 ubox
64 69 0.013341204 ubox
64 82 0.999662163 ubox
64 90 0.003836643 ubox
65 81 0.999662670 ubox
65 84 0.020116193 ubox
65 89 0.004404380 ubox
66 80 0.999566789 ubox
66 83 0.020202264 ubox
66 88 0.004403225 ubox
67 78 0.996705380 ubox
67 82 0.020185649 ubox
68 75 0.003896009 ubox
68 77 0.996099614 ubox
68 86 0.004338313 ubox
69 74 0.007536764 ubox
69 76 0.988467173 ubox
69 79 0.004414550 ubox
69 81 0.003931010 ubox
69 85 0.005377586 ubox
70 76 0.134363431 ubox
70 79 0.057095016 ubox
70 84 0.005381541 ubox
71 75 0.178812603 ubox
71 78 0.057220227 ubox
71 83 0.004818461 ubox
72 77 0.052293037 ubox
72 82 0.003795149 ubox
74 80 0.003650218 ubox
74 82 0.003549029 ubox
75 79 0.003424730 ubox
75 81 0.003913056 ubox
75 91 0.005593729 ubox
76 80 0.003886258 ubox
76 90 0.005580809 ubox
78 89 0.005688803 ubox
78 91 0.012573052 ubox
79 88 0.005691599 ubox
79 90 0.012588503 ubox
80 87 0.005691689 ubox
80 89 0.012590151 ubox
81 86 0.005683547 ubox
81 88 0.012590058 ubox
82 87 0.012533731 ubox
86 91 0.014534208 ubox
86 93 0.010162549 ubox
87 92 0.010785530 ubox
136 144 0.021329212 ubox
136 150 0.036735467 ubox
137 143 0.021377975 ubox
137 148 0.013079837 ubox
137 149 0.035967478 ubox
138 142 0.019267301 ubox
138 147 0.015523737 ubox
138 148 0.033316854 ubox
139 146 0.019602417 ubox
139 150 0.936845392 ubox
140 148 0.109188594 ubox
140 149 0.936716420 ubox
141 147 0.123014650 ubox
141 148 0.924009406 ubox
142 146 0.129590415 ubox
142 151 0.276298231 ubox
142 152 0.034537859 ubox
143 150 0.300636727 ubox
143 151 0.005912948 ubox
144 149 0.299789466 ubox
4 138 0.9500000 lbox
5 137 0.9500000 lbox
7 135 0.9500000 lbox
8 134 0.9500000 lbox
9 133 0.9500000 lbox
10 132 0.9500000 lbox
11 131 0.9500000 lbox
12 130 0.9500000 lbox
13 129 0.9500000 lbox
14 128 0.9500000 lbox
15 127 0.9500000 lbox
18 125 0.9500000 lbox
19 124 0.9500000 lbox
20 123 0.9500000 lbox
21 122 0.9500000 lbox
22 121 0.9500000 lbox
23 120 0.9500000 lbox
24 119 0.9500000 lbox
25 118 0.9500000 lbox
28 117 0.9500000 lbox
29 116 0.9500000 lbox
30 115 0.9500000 lbox
31 114 0.9500000 lbox
38 113 0.9500000 lbox
39 112 0.9500000 lbox
40 111 0.9500000 lbox
41 110 0.9500000 lbox
42 109 0.9500000 lbox
45 106 0.9500000 lbox
46 105 0.9500000 lbox
47 104 0.9500000 lbox
48 103 0.9500000 lbox
49 101 0.9500000 lbox
50 100 0.9500000 lbox
51 98 0.9500000 lbox
52 97 0.9500000 lbox
53 96 0.9500000 lbox
55 94 0.9500000 lbox
56 93 0.9500000 lbox
57 92 0.9500000 lbox
60 86 0.9500000 lbox
61 85 0.9500000 lbox
62 84 0.9500000 lbox
63 83 0.9500000 lbox
64 82 0.9500000 lbox
65 81 0.9500000 lbox
66 80 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
139 150 0.9500000 lbox
140 149 0.9500000 lbox
141 148 0.9500000 lbox
showpage
end
%%EOF
