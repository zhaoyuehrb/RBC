%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGCUUUAAGGCGCGGUGACCCCCACGGCAUCCUCGGGCGGGGCGGGGACAGUGCCGGCGCCACCAGCGGAGGCGAAUGCGAGGGAGAUAGUGCACGGCGUCCGGCCCCACCAUGCUGACCGCGCUCGCCCCGCCAGCCCUGCCUGGGAUCCCGAGGCAGCUGCCCACGGCCCCCGCGCGGCGCCAGGACUCCUCCGGUUCGUCAGGCUCCU\
) } def
/len { sequence length } bind def

/coor [
[102.27119446 195.02450562]
[112.19042969 182.41543579]
[111.75415802 167.42178345]
[111.31789398 152.42813110]
[110.88162231 137.43447876]
[96.02457428 135.36848450]
[91.51399231 149.67424011]
[87.00340271 163.97999573]
[91.07915497 179.86459351]
[79.17288208 191.14167786]
[63.53273773 186.21035767]
[60.24796295 170.14355469]
[72.69764709 159.46940613]
[77.20823669 145.16365051]
[81.71882629 130.85789490]
[68.56792450 123.64306641]
[58.92610931 135.13374329]
[55.98264313 150.67872620]
[41.87459564 155.45494080]
[32.23278046 166.94560242]
[22.59096718 178.43626404]
[22.55118561 194.47927856]
[9.89440536 204.33753967]
[-5.67017365 200.44865417]
[-12.20273876 185.79583740]
[-4.69206572 171.61947632]
[11.10030079 168.79446411]
[20.74211502 157.30378723]
[30.38392830 145.81312561]
[32.63774490 131.09002686]
[47.43544006 125.49192047]
[57.07725525 114.00125885]
[57.20753479 102.50741577]
[60.21186066 92.00668335]
[65.59701538 83.16692352]
[72.72861481 76.47256470]
[80.89118958 72.19901276]
[89.35131836 70.40538788]
[97.41871643 70.94506836]
[104.50042725 73.49270630]
[111.03675079 59.99172592]
[117.57307434 46.49074554]
[124.10939789 32.98976517]
[130.64572144 19.48878288]
[137.18203735 5.98780251]
[136.23146057 -9.80482101]
[148.74150085 -17.88863182]
[155.27781677 -31.38961411]
[161.81414795 -44.89059448]
[168.35046387 -58.39157486]
[174.88679504 -71.89255524]
[171.39720154 -84.30715179]
[177.11633301 -95.41638184]
[188.49441528 -99.51623535]
[195.22640991 -112.92072296]
[201.95838928 -126.32521820]
[203.01245117 -135.39474487]
[208.88700867 -139.87463379]
[215.81323242 -153.17979431]
[222.64253235 -166.53497314]
[229.37451172 -179.93946838]
[236.10650635 -193.34396362]
[242.83848572 -206.74844360]
[249.57048035 -220.15293884]
[256.30245972 -233.55743408]
[250.43977356 -243.89468384]
[250.29475403 -255.65795898]
[255.78776550 -265.92523193]
[265.45306396 -272.20187378]
[276.82788086 -273.02636719]
[283.94686890 -286.22940063]
[291.06588745 -299.43243408]
[298.18487549 -312.63543701]
[297.92407227 -328.45449829]
[310.77481079 -335.98492432]
[317.89382935 -349.18795776]
[325.01281738 -362.39099121]
[314.38619995 -376.36325073]
[311.90780640 -394.20620728]
[318.65933228 -411.40264893]
[333.32739258 -423.37600708]
[352.43389893 -426.70635986]
[353.08819580 -441.69207764]
[353.74246216 -456.67782593]
[350.99114990 -465.38400269]
[354.51681519 -471.87625122]
[355.38900757 -486.85089111]
[356.26116943 -501.82550049]
[349.33938599 -516.05224609]
[357.80361938 -528.30804443]
[358.67578125 -543.28271484]
[356.05712891 -549.34686279]
[356.78244019 -554.97863770]
[359.79736328 -558.67822266]
[361.10467529 -573.62115479]
[362.41201782 -588.56402588]
[363.71936035 -603.50695801]
[354.38635254 -621.37750244]
[366.16314697 -636.71630859]
[367.03530884 -651.69091797]
[367.90750122 -666.66552734]
[368.77966309 -681.64013672]
[369.65182495 -696.61480713]
[370.52401733 -711.58941650]
[367.90536499 -717.65356445]
[368.63067627 -723.28533936]
[371.64556885 -726.98492432]
[372.95291138 -741.92785645]
[363.78359985 -755.09234619]
[368.49697876 -770.42736816]
[383.47729492 -776.16925049]
[397.23297119 -767.91333008]
[399.21182251 -751.99273682]
[387.89584351 -740.62048340]
[386.58850098 -725.67761230]
[385.49862671 -710.71722412]
[384.62646484 -695.74261475]
[383.75427246 -680.76800537]
[382.88211060 -665.79339600]
[382.00994873 -650.81872559]
[381.13775635 -635.84411621]
[388.58697510 -628.85638428]
[391.01318359 -618.70922852]
[387.38110352 -608.69482422]
[378.66229248 -602.19964600]
[377.35494995 -587.25671387]
[376.04760742 -572.31378174]
[374.74026489 -557.37084961]
[373.65039062 -542.41052246]
[372.77822876 -527.43591309]
[379.76242065 -514.28027344]
[371.23580933 -500.95333862]
[370.36361694 -485.97872925]
[369.49145508 -471.00408936]
[368.72821045 -456.02352905]
[368.07391357 -441.03781128]
[367.41961670 -426.05206299]
[379.25320435 -416.83435059]
[393.62304688 -421.13641357]
[407.99288940 -425.43844604]
[422.36273193 -429.74050903]
[427.16552734 -434.27529907]
[432.70578003 -435.51989746]
[437.21337891 -433.95214844]
[451.70227051 -437.83444214]
[466.19116211 -441.71670532]
[480.68005371 -445.59899902]
[495.16891479 -449.48129272]
[506.49630737 -460.52670288]
[520.79248047 -456.34710693]
[535.28137207 -460.22937012]
[549.01586914 -470.16915894]
[562.36932373 -459.72299194]
[556.02795410 -443.99963379]
[539.16363525 -445.74050903]
[524.67474365 -441.85821533]
[514.38372803 -431.09048462]
[499.05120850 -434.99240112]
[484.56231689 -431.11010742]
[470.07345581 -427.22784424]
[455.58456421 -423.34555054]
[441.09567261 -419.46325684]
[426.66476440 -415.37066650]
[412.29492188 -411.06860352]
[397.92507935 -406.76657104]
[383.55523682 -402.46450806]
[385.54373169 -390.46234131]
[383.71057129 -378.64318848]
[378.36621094 -368.17315674]
[370.16094971 -360.04461670]
[360.00842285 -354.98242188]
[348.98498535 -353.38012695]
[338.21585083 -355.27197266]
[331.09683228 -342.06893921]
[323.97784424 -328.86593628]
[324.74786377 -313.99124146]
[311.38790894 -305.51644897]
[304.26889038 -292.31341553]
[297.14990234 -279.11038208]
[290.03088379 -265.90737915]
[296.32574463 -248.71466064]
[287.90676880 -232.09724426]
[269.70693970 -226.82543945]
[262.97497559 -213.42094421]
[256.24298096 -200.01646423]
[249.51098633 -186.61196899]
[242.77900696 -173.20747375]
[236.04701233 -159.80299377]
[235.85420227 -152.41769409]
[229.11839294 -146.25357056]
[222.19216919 -132.94841003]
[215.36288452 -119.59323120]
[208.63088989 -106.18873596]
[201.89891052 -92.78424835]
[203.86026001 -75.34360504]
[188.38777161 -65.35623169]
[181.85144043 -51.85525513]
[175.31512451 -38.35427094]
[168.77880859 -24.85329247]
[162.24247742 -11.35231018]
[163.66058350 3.47463274]
[150.68301392 12.52412510]
[144.14669800 26.02510643]
[137.61038208 39.52608871]
[131.07405090 53.02706909]
[124.53773499 66.52804565]
[118.00141144 80.02902985]
[135.94921875 102.21865082]
[125.87527466 136.99821472]
[126.31154633 151.99186707]
[126.74781799 166.98551941]
[127.18408966 181.97917175]
[137.81968689 193.99014282]
[134.91850281 209.76869202]
[120.70604706 217.21086121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 212]
[3 211]
[4 210]
[5 209]
[6 15]
[7 14]
[8 13]
[16 32]
[17 31]
[19 29]
[20 28]
[21 27]
[40 207]
[41 206]
[42 205]
[43 204]
[44 203]
[45 202]
[47 200]
[48 199]
[49 198]
[50 197]
[51 196]
[54 194]
[55 193]
[56 192]
[58 191]
[59 190]
[60 188]
[61 187]
[62 186]
[63 185]
[64 184]
[65 183]
[70 180]
[71 179]
[72 178]
[73 177]
[75 175]
[76 174]
[77 173]
[82 137]
[83 136]
[84 135]
[86 134]
[87 133]
[88 132]
[90 130]
[91 129]
[94 128]
[95 127]
[96 126]
[97 125]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[107 115]
[108 114]
[138 166]
[139 165]
[140 164]
[141 163]
[144 162]
[145 161]
[146 160]
[147 159]
[148 158]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
