%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCCGGCAAGGCCCAAUGGGGCGGCAGGCCCGGCAGCCCCGCCCCGGUGGUGCCCGCGCGGCCAGCGCCCGCCAGGCCCAGCGUUAGCCCGCGGCCAGGCAGCCGGGAGGAGCGGCGCGCGCUCGGACCUCUCCCGCCCUGCUCGUUCGCUCUCCAGCUUGGGAUGGCCGGCUACCUGCGGGUCGUGCGCUCGCUCUGCAGAGCCUCAGGCUCGCGGCCGGCCUGGGCGCCGGCGGCCCUGACAGCCCCCACCU\
CGCAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[228.57572937 101.03769684]
[210.03575134 96.42160034]
[196.73719788 82.54544067]
[182.22181702 86.32743073]
[167.70642090 90.10942841]
[153.19104004 93.89142609]
[138.67564392 97.67342377]
[124.16026306 101.45542145]
[126.50922394 121.41226196]
[111.81128693 142.33255005]
[81.68737793 150.61091614]
[71.11225891 161.24891663]
[60.53713989 171.88690186]
[50.02526093 182.58738708]
[39.57699585 193.35000610]
[29.12873077 204.11260986]
[25.06777573 219.40376282]
[10.65101147 223.14624023]
[0.20274597 233.90885925]
[-10.24551964 244.67146301]
[-20.69378471 255.43406677]
[-31.14204979 266.19668579]
[-41.59031677 276.95928955]
[-52.03858185 287.72189331]
[-62.48684692 298.48449707]
[-64.45484924 304.74035645]
[-68.64482880 308.51794434]
[-73.31269836 309.37472534]
[-84.01318359 319.88659668]
[-94.71367645 330.39846802]
[-94.60355377 346.20239258]
[-105.76006317 357.39648438]
[-121.56424713 357.33950806]
[-132.63977051 346.06524658]
[-132.41571045 330.26257324]
[-121.02500153 319.30685425]
[-105.22554779 319.69799805]
[-94.52506256 309.18609619]
[-83.82457733 298.67422485]
[-73.24945831 288.03622437]
[-62.80118942 277.27362061]
[-52.35292435 266.51101685]
[-41.90465927 255.74841309]
[-31.45639420 244.98580933]
[-21.00812912 234.22319031]
[-10.55986309 223.46058655]
[-0.11159745 212.69798279]
[3.20202780 198.17663574]
[18.36612129 193.66433716]
[28.81438637 182.90173340]
[39.26265335 172.13912964]
[41.65885925 165.17407227]
[49.89914703 161.31178284]
[60.47426605 150.67379761]
[71.04938507 140.03579712]
[64.75910950 126.41770935]
[58.46940994 112.80081940]
[43.51392365 113.95554352]
[28.55843735 115.11027527]
[13.60294914 116.26499939]
[2.11577702 127.46430206]
[-13.78373718 125.32303619]
[-21.89884567 111.48379517]
[-16.00433350 96.56286621]
[-0.62196451 92.00630188]
[12.44822311 101.30950928]
[27.40371132 100.15478516]
[42.35919952 99.00006104]
[57.31468582 97.84533691]
[58.81599426 90.49713135]
[61.81861496 75.80072784]
[63.31992340 68.45252991]
[50.01590347 61.52410507]
[36.71187973 54.59568787]
[20.89821053 55.08394241]
[13.18376732 42.34280396]
[-0.12025433 35.41438293]
[-13.42427635 28.48596191]
[-26.72829819 21.55754280]
[-33.28572464 21.46353531]
[-38.10503387 18.53088951]
[-40.26271439 14.30389500]
[-53.39873886 7.06201220]
[-66.53475952 -0.17987062]
[-81.64518738 4.45160198]
[-95.56545258 -3.03183031]
[-100.03691101 -18.19038010]
[-92.40672302 -32.03074646]
[-77.20174408 -36.34169006]
[-63.44282150 -28.56559944]
[-59.29287720 -13.31589508]
[-46.15685272 -6.07401180]
[-33.02083206 1.16787136]
[-19.79987907 8.25352097]
[-6.49585629 15.18194008]
[6.80816555 22.11036110]
[20.11218834 29.03878021]
[34.97426605 28.05495834]
[43.64030075 41.29166412]
[56.94432068 48.22008514]
[70.24834442 55.14850616]
[108.04043579 61.82446671]
[120.37826538 86.94003296]
[134.89364624 83.15803528]
[149.40904236 79.37603760]
[163.92442322 75.59403992]
[178.43981934 71.81204224]
[192.95520020 68.03005219]
[195.77676392 53.67930603]
[204.21157837 41.87280655]
[216.67282104 34.66740799]
[215.07542419 19.75270844]
[213.47802734 4.83800602]
[211.88061523 -10.07669544]
[210.28321838 -24.99139595]
[208.68582153 -39.90609741]
[199.52288818 -52.80382538]
[205.86082458 -66.28269196]
[204.26342773 -81.19739532]
[202.66603088 -96.11209106]
[191.48786926 -86.10966492]
[176.67831421 -88.49235535]
[169.20159912 -101.49615479]
[174.59310913 -115.49372101]
[188.86122131 -120.12197113]
[201.44287109 -111.95394135]
[200.73182678 -126.93708038]
[200.02079773 -141.92022705]
[190.70680237 -155.41769409]
[197.98245239 -170.11453247]
[214.36315918 -170.89189148]
[222.99786377 -156.95008850]
[215.00393677 -142.63125610]
[215.71496582 -127.64811707]
[216.42601013 -112.66497803]
[217.58073425 -97.70949554]
[219.17813110 -82.79479218]
[220.77552795 -67.88008881]
[229.82420349 -56.04916382]
[223.60052490 -41.50349808]
[225.19792175 -26.58879662]
[226.79531860 -11.67409420]
[228.39271545 3.24060702]
[229.99012756 18.15530777]
[231.58752441 33.07001114]
[240.90745544 35.54016495]
[249.15501404 40.53423309]
[255.66302490 47.64822388]
[259.90499878 56.30665588]
[261.53784180 65.80912018]
[276.25177002 68.72457123]
[290.96572876 71.64002228]
[305.67965698 74.55548096]
[320.39361572 77.47093201]
[329.03295898 70.93152618]
[339.62530518 70.22217560]
[348.67764282 75.33593750]
[353.33651733 84.38481140]
[367.97720337 87.64828491]
[388.03302002 80.04067230]
[402.54553223 94.73963165]
[417.29299927 97.48045349]
[432.04046631 100.22126770]
[446.78793335 102.96208954]
[451.02774048 95.91387939]
[458.31164551 90.71906281]
[467.76455688 88.67842102]
[477.97021484 90.66316986]
[492.93832397 91.64051819]
[507.90646362 92.61787415]
[522.87457275 93.59522247]
[537.84271240 94.57257080]
[552.81085205 95.54991913]
[564.63012695 85.40391541]
[579.79602051 86.60831451]
[589.39587402 97.93875885]
[604.36401367 98.91610718]
[620.70373535 90.39216614]
[634.89544678 100.73888397]
[649.87414551 101.53871918]
[664.06726074 94.54828644]
[676.36383057 102.95323181]
[691.34246826 103.75306702]
[706.32116699 104.55290222]
[721.29980469 105.35273743]
[736.27844238 106.15258026]
[751.25714111 106.95241547]
[766.23577881 107.75225067]
[780.42889404 100.76181793]
[792.72546387 109.16676331]
[807.70416260 109.96659851]
[822.68280029 110.76644135]
[841.20617676 99.94994354]
[857.94763184 112.04931641]
[872.94531250 112.31604004]
[887.94293213 112.58276367]
[902.94055176 112.84948730]
[917.01617432 104.43474579]
[931.20776367 112.65251923]
[930.91613770 129.04907227]
[916.44134521 136.75703430]
[902.67382812 127.84711456]
[887.67620850 127.58039093]
[872.67858887 127.31366730]
[857.68090820 127.04694366]
[852.41894531 134.12687683]
[844.37438965 138.06884766]
[835.28063965 137.88359070]
[827.16192627 133.48667908]
[821.88299561 125.74509430]
[806.90429688 124.94525909]
[791.92565918 124.14542389]
[778.80389404 131.19306946]
[765.43597412 122.73091125]
[750.45727539 121.93107605]
[735.47863770 121.13124084]
[720.49993896 120.33139801]
[705.52130127 119.53156281]
[690.54266357 118.73172760]
[675.56396484 117.93188477]
[662.44226074 124.97953033]
[649.07427979 116.51737976]
[634.09564209 115.71754456]
[624.91119385 123.55781555]
[612.44604492 123.03472137]
[603.38665771 113.88423157]
[588.41851807 112.90688324]
[577.42681885 122.89279175]
[562.23309326 122.11484528]
[551.83349609 110.51804352]
[536.86535645 109.54069519]
[521.89721680 108.56334686]
[506.92910767 107.58599854]
[491.96096802 106.60865021]
[476.99285889 105.63129425]
[469.21231079 118.45561218]
[476.99285889 131.27993774]
[484.77340698 144.10424805]
[500.25527954 146.30538940]
[510.66171265 157.97758484]
[511.07907104 173.60960388]
[501.31030273 185.82046509]
[485.96792603 188.84458923]
[472.29614258 181.25407410]
[466.75033569 166.63291931]
[471.94906616 151.88479614]
[464.16851807 139.06047058]
[456.38800049 126.23616028]
[444.04711914 117.70955658]
[429.29965210 114.96874237]
[414.55218506 112.22792053]
[399.80468750 109.48710632]
[393.44534302 115.60041809]
[384.86010742 118.15918732]
[375.92187500 116.47409058]
[368.64114380 110.79630280]
[364.71374512 102.28897095]
[350.07305908 99.02549744]
[332.06765747 106.12671661]
[317.47814941 92.18487549]
[302.76422119 89.26942444]
[288.05026245 86.35396576]
[273.33633423 83.43851471]
[258.62237549 80.52306366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 108]
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[11 55]
[12 54]
[13 53]
[14 51]
[15 50]
[16 49]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[28 39]
[29 38]
[30 37]
[57 69]
[58 68]
[59 67]
[60 66]
[72 101]
[73 100]
[74 99]
[76 97]
[77 96]
[78 95]
[79 94]
[82 93]
[83 92]
[84 91]
[111 145]
[112 144]
[113 143]
[114 142]
[115 141]
[116 140]
[118 138]
[119 137]
[120 136]
[126 135]
[127 134]
[128 133]
[150 264]
[151 263]
[152 262]
[153 261]
[154 260]
[158 258]
[159 257]
[161 252]
[162 251]
[163 250]
[164 249]
[168 235]
[169 234]
[170 233]
[171 232]
[172 231]
[173 230]
[176 227]
[177 226]
[179 223]
[180 222]
[182 220]
[183 219]
[184 218]
[185 217]
[186 216]
[187 215]
[188 214]
[190 212]
[191 211]
[192 210]
[194 205]
[195 204]
[196 203]
[197 202]
[236 248]
[237 247]
[238 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
