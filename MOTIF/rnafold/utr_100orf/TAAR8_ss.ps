%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGAACCAUGACCAGCAAUUUUUCCCAACCUGUUGUGCAGCUUUGCUAUGAGGAUGUGAAUGGAUCUUGUAUUGAAACUCCCUAUUCUCCUGGGUCCCGGGUAAUUC\
) } def
/len { sequence length } bind def

/coor [
[49.92370605 114.77700806]
[35.07638168 116.91172791]
[20.22906113 119.04645538]
[5.38173962 121.18117523]
[-9.46558189 123.31589508]
[-24.31290436 125.45062256]
[-29.54183197 136.32489014]
[-39.31277847 143.19647217]
[-51.07428360 144.41510010]
[-61.82450867 139.78825378]
[-68.87738037 130.60029602]
[-83.82235718 131.88391113]
[-93.98233795 143.69122314]
[-109.15695953 144.78010559]
[-120.35080719 135.02134705]
[-135.29577637 136.30497742]
[-150.24075317 137.58859253]
[-165.18572998 138.87222290]
[-180.13070679 140.15585327]
[-185.07170105 154.56092834]
[-195.44935608 165.70652771]
[-209.46566772 171.66159058]
[-224.69224548 171.39436340]
[-238.49096680 164.95115662]
[-248.47114563 153.44828796]
[-252.90364075 138.87870789]
[-251.02050781 123.76667023]
[-243.14799500 110.73043823]
[-230.65007019 102.02861023]
[-215.69207764 99.16883087]
[-200.86557007 102.64658356]
[-188.73934937 111.85931396]
[-181.41433716 125.21087646]
[-166.46936035 123.92724609]
[-151.52438354 122.64362335]
[-136.57940674 121.36000061]
[-121.63442993 120.07637024]
[-112.26861572 108.55174255]
[-97.13056946 107.03707123]
[-85.10597992 116.93894196]
[-70.16100311 115.65531921]
[-59.38258743 100.99476624]
[-41.01647568 98.67858124]
[-26.44762611 110.60330200]
[-11.60030460 108.46857452]
[3.24701691 106.33385468]
[18.09433937 104.19913483]
[32.94166183 102.06440735]
[47.78898239 99.92968750]
[49.18988037 87.98637390]
[53.28609467 76.68034363]
[59.86032867 66.61135101]
[68.56384277 58.31351089]
[78.93494415 52.22700882]
[90.42347717 48.67470932]
[102.42001343 47.84505081]
[114.28817749 49.78203964]
[125.39839935 54.38293457]
[135.16131592 61.40366364]
[143.05903625 70.47180176]
[156.52001953 63.85348511]
[169.98098755 57.23516846]
[183.44197083 50.61685562]
[196.90293884 43.99853897]
[210.36392212 37.38022232]
[208.19293213 22.40884972]
[210.75660706 7.49969769]
[217.80377197 -5.88658524]
[228.64402771 -16.43854904]
[242.21536255 -23.12241936]
[257.18820190 -25.28337860]
[272.09561157 -22.70972061]
[285.47717285 -15.65358162]
[296.02188110 -4.80625296]
[302.69665527 8.76955509]
[304.84756470 23.74382210]
[302.26391602 38.64952469]
[295.19882202 52.02635193]
[284.34442139 62.56377792]
[270.76416016 69.22945404]
[255.78845215 71.37034607]
[240.88447571 68.77671051]
[227.51239014 61.70264816]
[216.98223877 50.84119797]
[203.52125549 57.45951462]
[190.06028748 64.07782745]
[176.59930420 70.69614410]
[163.13833618 77.31446075]
[149.67735291 83.93277740]
[151.31399536 109.63686371]
[140.46322632 132.99578857]
[150.60585022 144.04690552]
[160.74847412 155.09802246]
[170.89109802 166.14913940]
[181.03372192 177.20025635]
[196.19833374 184.78121948]
[193.11163330 201.45181274]
[176.23803711 203.10060120]
[169.98260498 187.34288025]
[159.83998108 176.29176331]
[149.69735718 165.24064636]
[139.55473328 154.18952942]
[129.41210938 143.13841248]
[118.54542542 148.80638123]
[106.65682220 151.78495789]
[94.40141296 151.91003418]
[82.45450592 149.17469788]
[71.47440338 143.72969055]
[62.06615067 135.87504578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 49]
[2 48]
[3 47]
[4 46]
[5 45]
[6 44]
[11 41]
[12 40]
[15 37]
[16 36]
[17 35]
[18 34]
[19 33]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[65 84]
[91 103]
[92 102]
[93 101]
[94 100]
[95 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
