%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGAACCGACCGCCGCCGGCCGGGUUGCAGGCGGGGCACCUCGGGCAGGACCUCCCUGGUCGGAAGUGGCCGUGAGCCCAAGCCGCGGUCCCGGGCCGGCACCCAGGAUGGGCGAGGUGGAGGCCCCGGGCCGCUUGUGGCUCGAGAGCCCCCCUGGGGGAGCGCCCCCCAUCUUCCUGCCCUCGGACGGGCAAGCCCUGGUCCUGG\
) } def
/len { sequence length } bind def

/coor [
[-77.44915009 123.24834442]
[-82.56052399 127.94564056]
[-88.56929779 131.35191345]
[-95.15808868 133.30531311]
[-101.98289490 133.72023010]
[-106.16990662 148.12400818]
[-98.33950806 161.85209656]
[-102.59032440 177.07398987]
[-116.40042877 184.75881958]
[-131.57652283 180.34730530]
[-139.11491394 166.45672607]
[-134.54319763 151.32810974]
[-120.57369232 143.93699646]
[-116.38668060 129.53321838]
[-122.38077545 124.86277008]
[-127.01169586 118.83808899]
[-129.98332214 111.84440613]
[-131.10566711 104.32891083]
[-145.70797729 100.89785004]
[-160.31030273 97.46678925]
[-174.91262817 94.03572845]
[-189.51495361 90.60466766]
[-204.11727905 87.17360687]
[-218.71958923 83.74254608]
[-233.34706116 80.42028809]
[-247.99884033 77.20700836]
[-262.65063477 73.99373627]
[-277.32592773 70.88962555]
[-292.02392578 67.89485168]
[-306.72195435 64.90007782]
[-321.41995239 61.90530396]
[-330.45361328 63.25836945]
[-336.31375122 58.75497818]
[-350.96554565 55.54170227]
[-365.61730957 52.32843018]
[-383.03244019 58.31137085]
[-395.52658081 45.98809433]
[-410.22457886 42.99332047]
[-424.92257690 39.99854660]
[-439.62060547 37.00377274]
[-449.06488037 47.04351425]
[-462.13299561 51.07368469]
[-475.38009644 48.14380264]
[-485.36907959 39.12358093]
[-489.56246948 26.44850349]
[-504.21426392 23.23522949]
[-518.86602783 20.02195549]
[-534.00335693 24.62339211]
[-544.77764893 14.33929157]
[-559.42944336 11.12601852]
[-580.23150635 19.45755005]
[-595.64312744 4.26159763]
[-610.46020508 1.92611039]
[-625.27728271 -0.40937659]
[-640.09436035 -2.74486351]
[-653.86022949 5.49404430]
[-668.83343506 -0.26640388]
[-673.52777100 -15.60728550]
[-664.34216309 -28.76038933]
[-648.32299805 -29.63578033]
[-637.75885010 -17.56193161]
[-622.94177246 -15.22644424]
[-608.12469482 -12.89095783]
[-593.30761719 -10.55547047]
[-588.07177734 -16.44189835]
[-580.85058594 -19.81947327]
[-572.78857422 -20.07101250]
[-565.19610596 -17.08140755]
[-559.33654785 -11.26839924]
[-556.21618652 -3.52576923]
[-541.56439209 -0.31249535]
[-527.47509766 -5.14376640]
[-515.65277100 5.37016773]
[-501.00097656 8.58344173]
[-486.34921265 11.79671478]
[-474.43487549 0.50394940]
[-457.97225952 -1.48193347]
[-443.42556763 6.81837034]
[-436.62582397 22.30576897]
[-421.92782593 25.30054283]
[-407.22979736 28.29531670]
[-392.53179932 31.29009056]
[-382.27313232 24.88024712]
[-370.00347900 27.25495338]
[-362.40405273 37.67664337]
[-347.75225830 40.88991547]
[-333.10046387 44.10319138]
[-318.42517090 47.20729828]
[-303.72717285 50.20207596]
[-289.02917480 53.19684982]
[-274.33114624 56.19162369]
[-267.14941406 54.44684219]
[-259.43734741 59.34194946]
[-244.78556824 62.55522537]
[-230.13378906 65.76850128]
[-222.92684937 64.13083649]
[-215.28852844 69.14022064]
[-200.68621826 72.57128143]
[-186.08389282 76.00234222]
[-171.48156738 79.43340302]
[-156.87924194 82.86446381]
[-142.27691650 86.29552460]
[-127.67459869 89.72658539]
[-109.61461639 74.55579376]
[-85.91616821 77.02041626]
[-71.06834412 95.96038818]
[-56.06876373 95.84871674]
[-41.06917953 95.73705292]
[-26.06959343 95.62538910]
[-11.07000923 95.51371765]
[3.92957520 95.40205383]
[18.92915916 95.29038239]
[33.92541885 94.95540619]
[48.91502762 94.39720154]
[63.90464020 93.83898926]
[78.89424896 93.28077698]
[91.74523163 67.32812500]
[131.42127991 67.44161224]
[143.77578735 58.93478394]
[156.13029480 50.42795563]
[161.42367554 42.98363113]
[168.73266602 41.88805389]
[181.21246338 33.56610870]
[186.61608887 26.20141983]
[193.94059753 25.21478462]
[206.54290771 17.07956696]
[219.14521790 8.94435215]
[222.51522827 -8.22138023]
[236.97271729 -17.45695877]
[253.30839539 -13.45896530]
[265.78820801 -21.78090858]
[278.26797485 -30.10285187]
[290.74777222 -38.42479706]
[303.22756958 -46.74673843]
[315.70736694 -55.06868362]
[318.55889893 -70.61359406]
[331.61441040 -79.52028656]
[347.12829590 -76.50457001]
[355.89645386 -63.35561752]
[352.71688843 -47.87447357]
[339.47598267 -39.24582291]
[324.02932739 -42.58889008]
[311.54953003 -34.26694489]
[299.06973267 -25.94500351]
[286.58993530 -17.62305832]
[274.11013794 -9.30111504]
[261.63034058 -0.97917116]
[260.89749146 11.88521481]
[252.76763916 22.13157082]
[240.03340149 25.87983131]
[227.28042603 21.54666328]
[214.67811584 29.68187904]
[202.07580566 37.81709671]
[189.53440857 46.04590225]
[177.05461121 54.36784744]
[164.63711548 62.78246689]
[152.28260803 71.28929138]
[139.92810059 79.79611969]
[142.70370483 94.53707886]
[157.30603027 97.96814728]
[171.90835571 101.39920807]
[186.51068115 104.83026886]
[201.11300659 108.26132965]
[215.45355225 101.06909943]
[229.95683289 107.92724609]
[233.49717712 123.57479095]
[223.35873413 136.00827026]
[207.31884766 135.68978882]
[197.68194580 122.86364746]
[183.07962036 119.43258667]
[168.47729492 116.00152588]
[153.87496948 112.57046509]
[139.27264404 109.13940430]
[135.25205994 115.47066498]
[147.91458130 123.51184082]
[162.44218445 127.24669647]
[163.37921143 142.21740723]
[149.43070984 147.73458862]
[139.87341309 136.17436218]
[127.21089172 128.13319397]
[123.19030762 134.46446228]
[132.50518799 146.22171021]
[141.82006836 157.97895813]
[151.13494873 169.73620605]
[160.44982910 181.49345398]
[176.17590332 183.06388855]
[186.12066650 195.34709167]
[184.38406372 211.05567932]
[171.99639893 220.87002563]
[156.30705261 218.96743774]
[146.62423706 206.47669983]
[148.69258118 190.80834961]
[139.37770081 179.05108643]
[130.06282043 167.29383850]
[120.74793243 155.53659058]
[111.43305206 143.77934265]
[84.84830475 130.10014343]
[79.45246124 108.27038574]
[64.46285248 108.82859802]
[49.47323990 109.38681030]
[34.48363113 109.94502258]
[28.69118118 113.13234711]
[23.01125145 112.94416809]
[19.04082680 110.28997040]
[4.04124212 110.40163422]
[-10.95834255 110.51330566]
[-25.95792580 110.62496948]
[-40.95751190 110.73664093]
[-55.95709610 110.84830475]
[-70.95668030 110.95996857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 14]
[6 13]
[18 103]
[19 102]
[20 101]
[21 100]
[22 99]
[23 98]
[24 97]
[25 95]
[26 94]
[27 93]
[28 91]
[29 90]
[30 89]
[31 88]
[33 87]
[34 86]
[35 85]
[37 82]
[38 81]
[39 80]
[40 79]
[45 75]
[46 74]
[47 73]
[49 71]
[50 70]
[52 64]
[53 63]
[54 62]
[55 61]
[106 210]
[107 209]
[108 208]
[109 207]
[110 206]
[111 205]
[112 204]
[113 201]
[114 200]
[115 199]
[116 198]
[118 158]
[119 157]
[120 156]
[122 155]
[123 154]
[125 153]
[126 152]
[127 151]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[159 173]
[160 172]
[161 171]
[162 170]
[163 169]
[181 196]
[182 195]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
