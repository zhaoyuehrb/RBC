%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGAGCGCGCCGCGCGUGGGACAAUCGUAAAAGGGGCGGGACGCGCCGCGCUCGGGAUGUCGUGAAGCUGGGGGAGCUCGUCGCCGCCGCCGGCGGCUAGCGGGCGUCCGCGCCAUGGAGCGCUACGCGGCCGCCUUGGAGGAGGUGGCGGACGGUGCCCGGCAGCAGGAGCGACACUACCAGUUGCUGUCGGCGCUACAGAGCCUGGUGAAGG\
) } def
/len { sequence length } bind def

/coor [
[81.16092682 134.57006836]
[70.17916107 144.78773499]
[59.19739914 155.00540161]
[48.21563339 165.22308350]
[37.23386765 175.44075012]
[36.50424194 191.00048828]
[25.22161674 201.20622253]
[10.39228249 200.41474915]
[-0.58948201 210.63241577]
[-11.57124710 220.85009766]
[-22.55301094 231.06776428]
[-33.53477859 241.28544617]
[-44.44263458 251.58197021]
[-55.27601624 261.95684814]
[-59.30656815 270.14797974]
[-66.34106445 272.40176392]
[-77.32283020 282.61941528]
[-88.30459595 292.83709717]
[-82.91363525 309.14605713]
[-85.18911743 326.11563110]
[-94.62493134 340.33593750]
[-109.28108215 348.97085571]
[-126.18235016 350.32366943]
[-141.92227173 344.17034912]
[-152.60501099 354.70025635]
[-156.43945312 370.64480591]
[-172.23968506 375.03628540]
[-183.75177002 363.35708618]
[-179.13308716 347.62176514]
[-163.13491821 344.01748657]
[-152.45216370 333.48760986]
[-157.64135742 321.58499146]
[-158.48051453 308.59558105]
[-154.84820557 296.06289673]
[-147.15560913 285.48367310]
[-136.30017090 278.12896729]
[-123.56088257 274.89151001]
[-110.44763947 276.17742920]
[-98.52227020 281.85534668]
[-87.54050446 271.63766479]
[-76.55873871 261.41998291]
[-65.65087891 251.12345886]
[-54.81749725 240.74859619]
[-52.16219711 233.85562134]
[-43.75244904 230.30368042]
[-32.77068329 220.08599854]
[-21.78891945 209.86833191]
[-10.80715466 199.65065002]
[0.17461005 189.43298340]
[0.45278963 174.58514404]
[11.44430637 164.06652832]
[27.01619530 164.45898438]
[37.99795914 154.24131775]
[48.97972488 144.02363586]
[59.96149063 133.80596924]
[70.94325256 123.58829498]
[65.63209534 107.87132263]
[67.79387665 92.40479279]
[76.11946869 80.35681915]
[88.12605286 73.81301117]
[100.82521057 73.42774963]
[105.50156403 59.17531967]
[110.17790985 44.92288971]
[114.85426331 30.67046165]
[119.53061676 16.41803169]
[124.20697021 2.16560364]
[114.11817169 -11.41365814]
[114.11319733 -28.16428566]
[123.99586487 -41.48250580]
[139.71087646 -46.23582840]
[144.18136597 -60.55416489]
[148.65185547 -74.87250519]
[153.12232971 -89.19084167]
[148.67214966 -107.06166077]
[162.03700256 -118.43819427]
[166.30068970 -132.81945801]
[170.56436157 -147.20074463]
[167.06886292 -162.63096619]
[178.10467529 -172.63395691]
[182.36836243 -187.01524353]
[181.80711365 -196.12705994]
[186.79849243 -201.57221985]
[191.26898193 -215.89054871]
[195.73945618 -230.20889282]
[200.20994568 -244.52722168]
[204.57713318 -258.87741089]
[208.84082031 -273.25866699]
[213.10450745 -287.63995361]
[217.36819458 -302.02120972]
[221.63188171 -316.40249634]
[225.89556885 -330.78375244]
[222.40005493 -346.21398926]
[233.43586731 -356.21697998]
[237.69955444 -370.59826660]
[241.44245911 -385.12377930]
[244.65974426 -399.77468872]
[247.87701416 -414.42559814]
[251.09429932 -429.07650757]
[254.31156921 -443.72741699]
[257.52883911 -458.37832642]
[260.74612427 -473.02923584]
[259.53033447 -482.07699585]
[264.11676025 -487.86737061]
[267.54483032 -502.47039795]
[270.97290039 -517.07342529]
[274.29565430 -531.70074463]
[277.51293945 -546.35168457]
[280.73022461 -561.00256348]
[283.94750977 -575.65350342]
[287.05911255 -590.32720947]
[290.06494141 -605.02294922]
[293.07073975 -619.71868896]
[296.07656860 -634.41442871]
[288.47116089 -648.54022217]
[294.90551758 -663.23645020]
[310.44369507 -667.22943115]
[323.16619873 -657.45611572]
[323.31335449 -641.41375732]
[310.77230835 -631.40863037]
[307.76651001 -616.71289062]
[304.76068115 -602.01715088]
[301.75488281 -587.32141113]
[303.49322510 -580.14215088]
[298.59838867 -572.43621826]
[295.38113403 -557.78533936]
[292.16384888 -543.13439941]
[288.94656372 -528.48352051]
[290.58126831 -521.27990723]
[285.57592773 -513.64532471]
[282.14785767 -499.04232788]
[278.71978760 -484.43930054]
[275.39703369 -469.81195068]
[272.17974854 -455.16104126]
[268.96249390 -440.51013184]
[265.74520874 -425.85922241]
[262.52792358 -411.20831299]
[259.31063843 -396.55740356]
[256.09338379 -381.90649414]
[269.93063354 -387.69705200]
[283.15576172 -380.61920166]
[286.01327515 -365.89389038]
[276.39538574 -354.38320923]
[261.39663696 -354.57797241]
[252.08082581 -366.33456421]
[247.81713867 -351.95330811]
[251.61761475 -337.55172729]
[240.27684021 -326.52008057]
[236.01315308 -312.13879395]
[231.74946594 -297.75753784]
[227.48577881 -283.37625122]
[223.22209167 -268.99499512]
[218.95841980 -254.61372375]
[220.07026672 -247.31115723]
[214.52827454 -240.05674744]
[210.05780029 -225.73840332]
[205.58731079 -211.42007446]
[201.11683655 -197.10173035]
[196.74963379 -182.75155640]
[192.48594666 -168.37028503]
[196.28642273 -153.96868896]
[184.94564819 -142.93705750]
[180.68196106 -128.55578613]
[176.41827393 -114.17450714]
[181.90948486 -103.39981842]
[178.47895813 -91.38600922]
[167.44067383 -84.72035980]
[162.97018433 -70.40202332]
[158.49971008 -56.08368301]
[154.02922058 -41.76534653]
[162.95846558 -31.84397697]
[165.84376526 -18.70087814]
[161.82731628 -5.74485874]
[151.85569763 3.60956192]
[138.45939636 6.84195614]
[133.78305054 21.09438515]
[129.10668945 35.34681320]
[124.43034363 49.59924316]
[119.75399017 63.85167313]
[115.07763672 78.10410309]
[131.98606873 98.88485718]
[123.32117462 129.27157593]
[131.85581970 141.60687256]
[140.39047241 153.94218445]
[148.92512512 166.27748108]
[157.45977783 178.61279297]
[165.99443054 190.94808960]
[181.39149475 191.43467712]
[193.40922546 200.78492737]
[197.56762695 215.24769592]
[192.47334290 229.21861267]
[201.00799561 241.55392456]
[209.54264832 253.88922119]
[218.07730103 266.22451782]
[233.66322327 267.49447632]
[244.75004578 278.52246094]
[246.10290527 294.10140991]
[237.08300781 306.87542725]
[221.94927979 310.81298828]
[207.84742737 304.05493164]
[201.43588257 289.79217529]
[205.74198914 274.75918579]
[197.20733643 262.42385864]
[188.67269897 250.08856201]
[180.13804626 237.75326538]
[165.26817322 237.59530640]
[153.19987488 228.60530090]
[148.68652344 214.06285095]
[153.65911865 199.48274231]
[145.12448120 187.14744568]
[136.58982849 174.81213379]
[128.05517578 162.47683716]
[119.52052307 150.14152527]
[110.98587036 137.80622864]
[103.52963257 136.99717712]
[106.59893036 151.67980957]
[93.58338165 159.13603210]
[82.47006989 149.06159973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[8 49]
[9 48]
[10 47]
[11 46]
[12 45]
[13 43]
[14 42]
[16 41]
[17 40]
[18 39]
[24 31]
[25 30]
[61 179]
[62 178]
[63 177]
[64 176]
[65 175]
[66 174]
[70 169]
[71 168]
[72 167]
[73 166]
[75 163]
[76 162]
[77 161]
[79 159]
[80 158]
[82 157]
[83 156]
[84 155]
[85 154]
[86 152]
[87 151]
[88 150]
[89 149]
[90 148]
[91 147]
[93 145]
[94 144]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[103 131]
[104 130]
[105 129]
[106 127]
[107 126]
[108 125]
[109 124]
[110 122]
[111 121]
[112 120]
[113 119]
[181 213]
[182 212]
[183 211]
[184 210]
[185 209]
[186 208]
[190 204]
[191 203]
[192 202]
[193 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
