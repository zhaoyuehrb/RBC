%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACACCAGCUCGCAGGUGCUGCGGACUCCCCAGUCCGCCCGCCGCCGCCGCCGCCGCAACUGUUGGCGGCCAGAGACGGCGAAAGAGGAGAGAGAGGGACCCAGGAGCGCGGCCCCCGGGGGAGAGAGAGGGGAGCCCUGCAGUGGAGACAGGUAAUGAGCCAAAAAGAUCAUGUCUGAAAUACAAGGAACGGUUGAGUUUUCGGUAGAGCUACAUAAAUUUUAUAAUGUGGAUCUCUUUCAGAGAGGGUAUUAC\
CAGAUCCGAGUGACCU\
) } def
/len { sequence length } bind def

/coor [
[-26.56555367 402.73031616]
[-17.26443672 390.87341309]
[-5.47926807 381.48156738]
[8.15439224 375.06130981]
[5.05831575 360.38430786]
[1.96223938 345.70730591]
[-10.61826038 337.81637573]
[-13.96720123 322.97592163]
[-5.60517836 309.83383179]
[-8.70125484 295.15682983]
[-11.79733181 280.47982788]
[-26.41849136 277.12994385]
[-35.59566116 288.99502563]
[-38.35565567 297.66336060]
[-44.94798279 300.94329834]
[-54.26157761 312.70156860]
[-63.57517242 324.45983887]
[-72.88877106 336.21810913]
[-72.17673492 349.07272339]
[-80.14586639 358.66921997]
[-92.11869049 360.22653198]
[-101.56746674 371.87646484]
[-111.01624298 383.52636719]
[-120.46502686 395.17630005]
[-129.91380310 406.82620239]
[-139.36257935 418.47613525]
[-148.81135559 430.12603760]
[-150.85346985 446.39755249]
[-166.06904602 452.51458740]
[-178.80563354 442.18444824]
[-175.96090698 426.03393555]
[-160.46127319 420.67727661]
[-151.01249695 409.02734375]
[-141.56372070 397.37744141]
[-132.11494446 385.72750854]
[-122.66616058 374.07760620]
[-113.21738434 362.42767334]
[-103.76860809 350.77777100]
[-101.92915344 333.30990601]
[-84.64704132 326.90451050]
[-75.33344269 315.14624023]
[-66.01985168 303.38796997]
[-56.70625305 291.62969971]
[-47.46071625 279.81784058]
[-38.28354645 267.95278931]
[-45.58261490 254.84844971]
[-60.50164413 256.40487671]
[-75.42067719 257.96133423]
[-90.33970642 259.51776123]
[-105.18364716 261.67587280]
[-119.92824554 264.43212891]
[-134.67283630 267.18835449]
[-149.41743469 269.94461060]
[-164.16203308 272.70083618]
[-178.90663147 275.45709229]
[-193.63507080 278.29843140]
[-208.34684753 281.22479248]
[-220.31289673 292.43841553]
[-235.92660522 287.42401123]
[-239.12593079 271.33999634]
[-226.61965942 260.73217773]
[-211.27319336 266.51300049]
[-196.56141663 263.58666992]
[-190.63600159 259.21560669]
[-181.66287231 260.71249390]
[-166.91827393 257.95623779]
[-152.17367554 255.20001221]
[-137.42909241 252.44377136]
[-122.68448639 249.68751526]
[-107.93989563 246.93127441]
[-120.51518250 238.75436401]
[-124.98549652 224.43597412]
[-119.29631042 210.55673218]
[-106.06232452 203.49545288]
[-91.36579132 206.49743652]
[-81.96112823 218.18298340]
[-82.17063904 233.18153381]
[-91.89614868 244.59873962]
[-76.97711945 243.04229736]
[-62.05808640 241.48585510]
[-47.13905334 239.92942810]
[-44.95561218 227.40135193]
[-39.34502792 216.57975769]
[-31.10472679 208.32650757]
[-21.22295189 203.19132996]
[-10.76805973 201.37939453]
[-0.77656078 202.75555420]
[7.84858847 206.88281250]
[17.02575874 195.01774597]
[26.20292854 183.15269470]
[35.38009644 171.28764343]
[44.55726624 159.42257690]
[53.73443604 147.55752563]
[62.91160583 135.69247437]
[72.08877563 123.82741547]
[60.80948257 112.71323395]
[54.43999481 96.38134766]
[55.28818893 77.16378784]
[64.52012634 58.35636902]
[81.78488922 43.66046906]
[105.10704803 36.49161530]
[100.83573914 22.11260605]
[96.56443787 7.73359394]
[84.08136749 2.73368931]
[76.85282135 -8.37417316]
[77.32310486 -21.42412186]
[85.09761810 -31.67305946]
[80.99266815 -46.10044479]
[76.88772583 -60.52782822]
[65.66919708 -71.68377686]
[69.62814331 -86.04260254]
[65.52320099 -100.46999359]
[61.41825867 -114.89737701]
[57.23006439 -129.30081177]
[52.95875931 -143.67982483]
[48.68745804 -158.05883789]
[44.41615295 -172.43785095]
[29.33998299 -174.81941223]
[16.79503441 -183.51348877]
[9.27211761 -196.79386902]
[8.26491070 -212.02372742]
[13.97339725 -226.17913818]
[25.26415253 -236.44956970]
[39.89538956 -240.79579163]
[54.96206284 -238.35487366]
[67.47267914 -229.61146545]
[74.94323730 -216.30155945]
[75.89046478 -201.06785583]
[70.12627411 -186.93502808]
[58.79516602 -176.70915222]
[63.06646729 -162.33013916]
[67.33776855 -147.95112610]
[71.60907745 -133.57211304]
[76.50821686 -128.07528687]
[75.84564209 -119.00231934]
[79.95058441 -104.57493591]
[84.05553436 -90.14755249]
[94.98044586 -80.02354431]
[91.31510925 -64.63277435]
[95.42005920 -50.20539093]
[99.52500153 -35.77800369]
[114.56342316 -28.21254730]
[119.55860138 -11.78261185]
[110.94345093 3.46229100]
[115.21475220 17.84130287]
[119.48605347 32.22031403]
[134.30407715 34.54971695]
[142.78112793 22.17475510]
[151.25817871 9.79979324]
[159.73521423 -2.57516885]
[168.21226501 -14.95013142]
[175.96092224 -27.79373932]
[182.95536804 -41.06317139]
[189.94979858 -54.33260345]
[186.59678650 -70.02135468]
[196.88316345 -82.33273315]
[212.91810608 -81.82250214]
[222.40097046 -68.88206482]
[218.05732727 -53.43822479]
[203.21923828 -47.33816910]
[196.22479248 -34.06873322]
[189.23036194 -20.79930305]
[202.54408264 -27.70906258]
[217.53224182 -27.11301422]
[230.25520325 -19.16782761]
[237.36878967 -5.96188307]
[237.00317383 9.03366089]
[229.25448608 21.87724876]
[216.15943909 29.19296646]
[201.16004944 29.05788994]
[188.19888306 21.50752258]
[180.68275452 8.52646732]
[180.58723450 -6.47308493]
[172.11018372 5.90187740]
[163.63313293 18.27684021]
[155.15609741 30.65180206]
[146.67904663 43.02676392]
[150.88175964 49.23861694]
[163.30560303 40.83337021]
[171.71066284 53.25733948]
[159.28720093 61.66233063]
[163.48992920 67.87418365]
[178.13018799 64.60880280]
[192.77044678 61.34341431]
[201.26490784 48.28654480]
[216.15873718 45.18353653]
[228.55412292 53.36217117]
[243.19438171 50.09678650]
[257.83462524 46.83140182]
[272.47491455 43.56601715]
[287.11517334 40.30063248]
[295.37707520 26.82782745]
[310.76510620 23.22446251]
[324.14978027 31.62834740]
[327.59027100 47.05360794]
[319.04534912 60.34871292]
[303.58456421 63.62590790]
[290.38055420 54.94089508]
[275.74029541 58.20627975]
[261.10003662 61.47166443]
[246.45976257 64.73704529]
[231.81950378 68.00243378]
[224.07440186 80.67323303]
[209.27362061 84.19335175]
[196.03582764 75.98367310]
[181.39556885 79.24906158]
[166.75531006 82.51444244]
[166.06329346 89.98245239]
[178.30627441 98.64903259]
[164.67927551 104.91846466]
[163.98725891 112.38647461]
[177.77822876 118.28639984]
[191.56919861 124.18632507]
[205.36016846 130.08625793]
[219.15113831 135.98617554]
[232.94210815 141.88610840]
[245.18603516 132.61346436]
[260.42788696 130.72102356]
[274.56768799 136.71781921]
[283.80191040 148.99075317]
[285.64657593 164.23846436]
[279.60549927 178.35940552]
[267.30364990 187.55509949]
[252.05024719 189.35195923]
[237.94831848 183.26663208]
[228.79122925 170.93605042]
[227.04219055 155.67707825]
[213.25122070 149.77714539]
[199.46025085 143.87722778]
[185.66926575 137.97729492]
[171.87829590 132.07736206]
[158.08732605 126.17744446]
[117.09439087 147.20614624]
[83.95383453 133.00459290]
[74.77666473 144.86964417]
[65.59949493 156.73469543]
[56.42232132 168.59974670]
[47.24515533 180.46481323]
[38.06798553 192.32986450]
[28.89081383 204.19491577]
[19.71364403 216.05998230]
[29.99515533 248.19430542]
[2.87966800 277.38375854]
[5.97574425 292.06076050]
[9.07182121 306.73776245]
[22.02971077 315.38244629]
[24.96049309 330.31112671]
[16.63923836 342.61120605]
[19.73531532 357.28820801]
[22.83139229 371.96520996]
[37.89666748 372.33154297]
[52.47122574 376.16284180]
[65.76908112 383.25253296]
[77.07308960 393.21829224]
[85.77365112 405.52264404]
[91.40155029 419.50201416]
[93.65327454 434.40258789]
[92.40740204 449.42071533]
[87.73111725 463.74655151]
[79.87660980 476.60745239]
[69.26744843 487.30990601]
[56.47579193 495.27673340]
[42.19146729 500.07827759]
[27.18481255 501.45559692]
[12.26511669 499.33441162]
[-1.76301956 493.82913208]
[-14.14307594 485.23663330]
[-24.20741272 474.02032471]
[-31.41327095 460.78506470]
[-35.37204742 446.24459839]
[-35.87025452 431.18310547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 250]
[5 249]
[6 248]
[9 245]
[10 244]
[11 243]
[12 45]
[13 44]
[15 43]
[16 42]
[17 41]
[18 40]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[46 81]
[47 80]
[48 79]
[49 78]
[50 70]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[56 63]
[57 62]
[88 241]
[89 240]
[90 239]
[91 238]
[92 237]
[93 236]
[94 235]
[95 234]
[101 146]
[102 145]
[103 144]
[107 141]
[108 140]
[109 139]
[111 137]
[112 136]
[113 135]
[114 133]
[115 132]
[116 131]
[117 130]
[147 177]
[148 176]
[149 175]
[150 174]
[151 173]
[152 162]
[153 161]
[154 160]
[182 207]
[183 206]
[184 205]
[187 202]
[188 201]
[189 200]
[190 199]
[191 198]
[211 232]
[212 231]
[213 230]
[214 229]
[215 228]
[216 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
