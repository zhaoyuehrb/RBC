%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCAUGCUCAGAGCCGCGGUCACGCGCCCGCCCGAAGGCUCCUGUCGGGACAGGGCGCCGCCCCGUGUCGGCCCCCGCAGAGCUCGCGGCCCCCGCCUGUCCGGGCGCCGCCAUGGAGCGCAUCGAGGGGGCGUCCGUGGGCCGCUGCGCCGCCUCACCCUACCUGCGGCCGCUCACGCUGCAUUACCGCCAGAAUGGUGCCCAGAAGUCCU\
) } def
/len { sequence length } bind def

/coor [
[115.20775604 356.15081787]
[113.24081421 341.28033447]
[109.24864197 335.06338501]
[111.35540771 326.17840576]
[109.60594940 311.28076172]
[107.85649109 296.38314819]
[106.10704041 281.48550415]
[103.58449554 279.02603149]
[102.12642670 275.22372437]
[102.35047150 270.59152222]
[104.62214661 265.89859009]
[103.52722168 250.93859863]
[89.61460114 245.56231689]
[79.37380219 234.63365173]
[74.87512970 220.28364563]
[77.06196594 205.34249878]
[85.55357361 192.78146362]
[98.71006012 185.12194824]
[97.61513519 170.16195679]
[96.52020264 155.20196533]
[95.42527008 140.24198914]
[94.33034515 125.28200531]
[89.76248932 123.80164337]
[85.54624176 121.50380707]
[81.82641602 118.46741486]
[78.73075867 114.79676056]
[64.46491241 119.43201447]
[50.19906616 124.06726837]
[35.93321609 128.70252991]
[21.66736794 133.33778381]
[7.40152121 137.97303772]
[-5.40082741 153.54678345]
[-24.12185097 148.70141602]
[-38.24616623 153.75154114]
[-52.37047958 158.80165100]
[-66.49479675 163.85177612]
[-80.61911011 168.90190125]
[-94.70614624 174.05508423]
[-108.75516510 179.31105042]
[-118.76047516 192.30435181]
[-134.97767639 189.86824036]
[-140.72389221 174.50877380]
[-130.08792114 162.02645874]
[-114.01113129 165.26202393]
[-99.96211243 160.00607300]
[-94.80038452 154.71980286]
[-85.66923523 154.77758789]
[-71.54491425 149.72746277]
[-57.42060471 144.67733765]
[-43.29628754 139.62721252]
[-29.17197418 134.57710266]
[-25.65124512 124.98846436]
[-17.25851440 118.78907013]
[-6.62015200 118.21893311]
[2.76626611 123.70719147]
[17.03211403 119.07192993]
[31.29796219 114.43667603]
[45.56380844 109.80142212]
[59.82965851 105.16616821]
[74.09550476 100.53091431]
[82.99361420 80.45242310]
[104.11019135 74.41815186]
[110.67481232 60.93090439]
[105.75129700 46.15265274]
[112.60088348 32.56818390]
[126.72003174 27.96543694]
[133.28465271 14.47819328]
[139.84927368 0.99094933]
[146.41389465 -12.49629498]
[144.68971252 -30.83096504]
[159.60565186 -40.07904053]
[165.97250366 -53.66076660]
[172.33935547 -67.24249268]
[178.70620728 -80.82421112]
[185.07305908 -94.40593719]
[184.62773132 -99.60073090]
[186.07324219 -104.00730896]
[188.79339600 -107.03785706]
[192.02809143 -108.43392181]
[198.98400879 -121.72358704]
[205.93992615 -135.01325989]
[212.89582825 -148.30293274]
[199.41690063 -175.35415649]
[218.64859009 -204.94245911]
[216.46456909 -219.78260803]
[214.28054810 -234.62275696]
[212.09652710 -249.46290588]
[209.47982788 -264.23291016]
[206.43264771 -278.92013550]
[203.38546753 -293.60736084]
[200.33830261 -308.29458618]
[197.29112244 -322.98181152]
[186.91171265 -334.92245483]
[191.90220642 -348.95614624]
[188.85502625 -363.64337158]
[185.80786133 -378.33059692]
[182.76068115 -393.01782227]
[169.41230774 -401.47927856]
[166.03831482 -416.91921997]
[174.64044189 -430.17739868]
[190.11518860 -433.38796997]
[203.28166199 -424.64614868]
[206.32844543 -409.13833618]
[197.44790649 -396.06500244]
[200.49508667 -381.37777710]
[203.54225159 -366.69055176]
[206.58943176 -352.00329590]
[216.75088501 -341.11322021]
[211.97834778 -326.02899170]
[215.02552795 -311.34176636]
[218.07270813 -296.65454102]
[221.11987305 -281.96731567]
[224.16705322 -267.28009033]
[226.43054199 -265.63125610]
[228.17832947 -262.98782349]
[229.02879333 -259.54135132]
[228.67655945 -255.61775208]
[226.93669128 -251.64692688]
[229.12069702 -236.80677795]
[231.30471802 -221.96662903]
[233.48873901 -207.12648010]
[240.27960205 -203.94305420]
[242.13787842 -218.82749939]
[256.86807251 -221.65969849]
[264.11352539 -208.52563477]
[253.86132812 -197.57620239]
[260.65219116 -194.39277649]
[273.45608521 -202.20687866]
[286.25997925 -210.02098083]
[299.06387329 -217.83508301]
[306.81292725 -231.62866211]
[321.70751953 -231.65429688]
[334.51141357 -239.46841431]
[347.31530762 -247.28251648]
[360.11920166 -255.09661865]
[372.92309570 -262.91073608]
[376.70901489 -275.23867798]
[387.53179932 -281.48394775]
[399.31838989 -278.77166748]
[412.23510742 -286.39785767]
[425.15182495 -294.02404785]
[435.71707153 -307.28344727]
[451.38305664 -300.80163574]
[449.49133301 -283.95355225]
[432.77798462 -281.10733032]
[419.86129761 -273.48114014]
[406.94458008 -265.85494995]
[399.15277100 -250.12919617]
[380.73721313 -250.10682678]
[367.93331909 -242.29272461]
[355.12942505 -234.47862244]
[342.32553101 -226.66450500]
[329.52163696 -218.85040283]
[322.68838501 -205.61575317]
[306.87799072 -205.03118896]
[294.07409668 -197.21708679]
[281.27017212 -189.40298462]
[268.46627808 -181.58888245]
[269.24005127 -171.51152039]
[267.36694336 -161.93025208]
[263.15954590 -153.50375366]
[257.08441162 -146.76277161]
[249.71730042 -142.07711792]
[241.69247437 -139.63688660]
[233.65000916 -139.44877625]
[226.18550110 -141.34701538]
[219.22958374 -128.05734253]
[212.27366638 -114.76767731]
[205.31776428 -101.47801208]
[198.65476990 -88.03908539]
[192.28791809 -74.45735931]
[185.92108154 -60.87563705]
[179.55422974 -47.29391479]
[173.18737793 -33.71219254]
[177.00521851 -22.23592186]
[171.81448364 -10.86966801]
[159.90113831 -5.93167400]
[153.33651733 7.55557013]
[146.77189636 21.04281425]
[140.20727539 34.53005981]
[145.29553223 48.48159027]
[138.83020020 62.25308990]
[124.16205597 67.49552917]
[117.59743500 80.98277283]
[124.61816406 91.92097473]
[125.44387817 104.89221954]
[119.86678314 116.63237000]
[109.29032898 124.18707275]
[110.38525391 139.14706421]
[111.48018646 154.10704041]
[112.57511902 169.06703186]
[113.67004395 184.02700806]
[127.80156708 189.68930054]
[138.03158569 200.88009644]
[142.37055969 215.34361267]
[140.00920105 230.19572449]
[131.46876526 242.49899292]
[118.48720551 249.84367371]
[119.58213043 264.80364990]
[121.00466919 279.73605347]
[122.75412750 294.63366699]
[124.50357819 309.53131104]
[126.25303650 324.42895508]
[128.11128235 339.31338501]
[130.07823181 354.18386841]
[144.30204773 359.97860718]
[153.71018982 372.11871338]
[155.77191162 387.33859253]
[149.93263245 401.54418945]
[137.76307678 410.91421509]
[122.53680420 412.92822266]
[108.34960175 407.04443359]
[99.01775360 394.84558105]
[97.05148315 379.61306763]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[4 203]
[5 202]
[6 201]
[7 200]
[11 199]
[12 198]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[26 60]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 45]
[39 44]
[62 184]
[63 183]
[66 180]
[67 179]
[68 178]
[69 177]
[71 174]
[72 173]
[73 172]
[74 171]
[75 170]
[79 169]
[80 168]
[81 167]
[82 166]
[84 121]
[85 120]
[86 119]
[87 118]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[94 107]
[95 106]
[96 105]
[97 104]
[127 158]
[128 157]
[129 156]
[130 155]
[132 153]
[133 152]
[134 151]
[135 150]
[136 149]
[139 147]
[140 146]
[141 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
