%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGACCCGAGGAGCAGGAAGCGGCGGCUCCUUCGGCCACCCAGGCAGCAGCCACAGCGGGGAGUGCGCGGCGCGGGGACAGGAAGAGAGGGGCAAUGGCUGCCGACCCCACCGAGCUGCGGCUGGGCAGCCUCCCCGUCUUCACCCGCGACGACUUCGAGGGCGACUGGCGCCUAGUGGCCAGCGGCGGCUUCA\
) } def
/len { sequence length } bind def

/coor [
[-7.94925356 573.85626221]
[-6.84133053 588.94360352]
[-10.45184517 603.63439941]
[-18.42707634 616.48937988]
[-29.98569107 626.24920654]
[-43.99529648 631.95764160]
[-59.08337021 633.05541992]
[-73.77173615 629.43505859]
[-86.62138367 621.45123291]
[-96.37343597 609.88604736]
[-102.07247925 595.87268066]
[-103.16017914 580.78381348]
[-99.52998352 566.09790039]
[-91.53752899 553.25360107]
[-79.96584320 543.50933838]
[-65.94860077 537.81964111]
[-50.85906982 536.74206543]
[-47.26933670 522.17791748]
[-43.67959976 507.61380005]
[-40.08986664 493.04968262]
[-36.50012970 478.48556519]
[-40.96676254 464.27645874]
[-30.15169907 452.72894287]
[-26.56196404 438.16482544]
[-31.02859688 423.95571899]
[-20.21353149 412.40823364]
[-16.62379646 397.84408569]
[-13.03406048 383.27996826]
[-27.05291748 388.61584473]
[-40.04869843 381.12521362]
[-42.45845413 366.32003784]
[-32.50896454 355.09472656]
[-17.52156258 355.70944214]
[-8.52471828 367.71191406]
[-3.77469826 353.48385620]
[0.97532171 339.25582886]
[5.72534180 325.02777100]
[10.47536182 310.79971313]
[15.22538185 296.57168579]
[10.10158443 285.60464478]
[13.95268059 273.70648193]
[25.23121452 267.43090820]
[30.20983315 253.28125000]
[35.18844986 239.13156128]
[40.16706848 224.98188782]
[39.06629562 222.39006042]
[38.93286133 219.20323181]
[39.99961090 215.79023743]
[42.36077881 212.59762573]
[45.94893265 210.09906006]
[51.82843018 196.29937744]
[57.70792770 182.49967957]
[63.58742905 168.69999695]
[56.64625549 153.38801575]
[63.04706192 137.47789001]
[79.28526306 130.98812866]
[84.94168854 117.09550476]
[77.23287964 100.81676483]
[83.75538635 84.02747345]
[100.43211365 77.22232819]
[105.63803864 63.15469360]
[110.84396362 49.08705902]
[116.04988098 35.01942444]
[121.25580597 20.95178795]
[121.30074310 11.80380726]
[126.66057587 6.70058966]
[132.09245300 -7.28135252]
[127.13401031 -16.98127365]
[128.31575012 -27.58969688]
[135.00621033 -35.62276459]
[144.80525208 -38.57662582]
[150.68475342 -52.37631607]
[156.56423950 -66.17601013]
[162.44374084 -79.97570038]
[168.32324219 -93.77539062]
[174.20274353 -107.57508087]
[169.68817139 -114.63196564]
[168.35325623 -122.80706787]
[170.34294128 -130.75102234]
[175.25947571 -137.18231201]
[182.23937988 -141.09397888]
[190.10427856 -141.91098022]
[196.86026001 -155.30339050]
[203.61622620 -168.69581604]
[210.37220764 -182.08822632]
[217.12817383 -195.48065186]
[213.84120178 -207.96199036]
[219.75445557 -218.98156738]
[231.21327209 -222.88339233]
[238.18412781 -236.16523743]
[245.15496826 -249.44706726]
[252.12580872 -262.72891235]
[248.13775635 -271.29925537]
[248.54238892 -280.60556030]
[253.12194824 -288.55868530]
[260.73571777 -293.43173218]
[269.60144043 -294.23458862]
[277.20584106 -307.16412354]
[284.81024170 -320.09365845]
[292.41461182 -333.02322388]
[300.01901245 -345.95275879]
[307.62341309 -358.88229370]
[315.22781372 -371.81185913]
[309.19644165 -385.98678589]
[312.62811279 -400.82177734]
[324.00262451 -410.67492676]
[338.82061768 -411.92599487]
[346.42501831 -424.85556030]
[353.92501831 -437.84594727]
[361.32012939 -450.89630127]
[356.86581421 -466.05990601]
[364.51162720 -479.89163208]
[379.72146606 -484.18539429]
[393.47158813 -476.39373779]
[397.60430908 -461.13937378]
[389.66772461 -447.47238159]
[374.37048340 -443.50119019]
[366.97537231 -430.45080566]
[366.41220093 -423.07156372]
[359.35455322 -417.25115967]
[351.75015259 -404.32159424]
[357.85806274 -390.76315308]
[354.77453613 -376.03375244]
[343.47695923 -365.82501221]
[328.15737915 -364.20745850]
[320.55297852 -351.27789307]
[312.94857788 -338.34835815]
[305.34417725 -325.41882324]
[297.73977661 -312.48925781]
[290.13537598 -299.55972290]
[282.53097534 -286.63018799]
[284.18576050 -266.06478882]
[265.40765381 -255.75807190]
[258.43679810 -242.47622681]
[251.46595764 -229.19438171]
[244.49511719 -215.91255188]
[246.15132141 -198.44758606]
[230.52058411 -188.72467041]
[223.76461792 -175.33226013]
[217.00865173 -161.93983459]
[210.25267029 -148.54742432]
[203.49670410 -135.15501404]
[206.86557007 -113.77989197]
[188.00244141 -101.69558716]
[182.12294006 -87.89588928]
[176.24343872 -74.09619904]
[170.36393738 -60.29650879]
[164.48443604 -46.49681854]
[158.60493469 -32.69712448]
[162.34599304 -13.73418045]
[146.07438660 -1.84947443]
[140.64251709 12.13246727]
[135.32344055 26.15771103]
[130.11752319 40.22534561]
[124.91159821 54.29298019]
[119.70567322 68.36061859]
[114.49974823 82.42825317]
[121.15394592 91.54306793]
[122.61723328 102.73310852]
[118.53053284 113.25247955]
[109.89668274 120.51985931]
[98.83430481 122.75193024]
[93.17788696 136.64454651]
[99.80400085 148.38015747]
[98.47632599 161.59597778]
[89.90318298 171.48475647]
[77.38712311 174.57949829]
[71.50762177 188.37918091]
[65.62812042 202.17887878]
[59.74862289 215.97856140]
[54.31674576 229.96051025]
[49.33812714 244.11018372]
[44.35950851 258.25985718]
[39.38088989 272.40954590]
[43.19649124 290.41775513]
[29.45342827 301.32168579]
[24.70340729 315.54974365]
[19.95338821 329.77780151]
[15.20336819 344.00582886]
[10.45334816 358.23388672]
[5.70332861 372.46194458]
[1.53006661 386.86968994]
[-2.05966830 401.43383789]
[-5.64940310 415.99795532]
[-1.43953228 431.24877930]
[-11.99783611 441.75457764]
[-15.58757114 456.31869507]
[-11.37769985 471.56951904]
[-21.93600464 482.07528687]
[-25.52573967 496.63943481]
[-29.11547470 511.20355225]
[-32.70520782 525.76770020]
[-36.29494476 540.33178711]
[-23.43460846 548.29840088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 193]
[18 192]
[19 191]
[20 190]
[21 189]
[23 187]
[24 186]
[26 184]
[27 183]
[28 182]
[34 181]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[42 174]
[43 173]
[44 172]
[45 171]
[50 170]
[51 169]
[52 168]
[53 167]
[56 163]
[57 162]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[66 152]
[67 151]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[89 136]
[90 135]
[91 134]
[92 133]
[97 131]
[98 130]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[107 121]
[108 120]
[109 118]
[110 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
