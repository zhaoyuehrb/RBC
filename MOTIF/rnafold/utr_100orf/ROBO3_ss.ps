%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGCACGAAGAGGCACCGACCGUACCCAGGCGCACCGGCAGGAGAGCGGCACCGUGGCUGCCGCAGCGCGCAGAGGCUGUGGAGGGGCUUACGGCUCCCAGCCCACGGGUCUCAGACCCAGGGGCUGGGCCCCCAGCCCCCAGUCCCGAUCCCAGCUGGGUCGAGCCAUGCUGCGCUACCUGCUGAAAACGCUGCUGCAGAUGAACUUGUUCGCGGACUCUCUGGCCGGGGACAUCUCCAACUCCAGCGAGCU\
GCUCUUGGGCUUCA\
) } def
/len { sequence length } bind def

/coor [
[282.21850586 626.16845703]
[269.04837036 631.37066650]
[254.93716431 632.25500488]
[251.13923645 646.76623535]
[247.42579651 661.29931641]
[243.79696655 675.85375977]
[253.87393188 687.65350342]
[255.05708313 703.12542725]
[246.89146423 716.32019043]
[232.51693726 722.16418457]
[217.46078491 718.41027832]
[207.51240540 706.50189209]
[206.49717712 691.01806641]
[214.80545044 677.91265869]
[229.24253845 672.22491455]
[232.87136841 657.67047119]
[231.44537354 650.44598389]
[236.62800598 642.96832275]
[240.42593384 628.45709229]
[227.35310364 619.65356445]
[218.07443237 606.88031006]
[213.72923279 591.67449951]
[214.86177063 575.87365723]
[221.35319519 561.39392090]
[232.43367004 549.99755859]
[246.77362061 543.07836914]
[262.64331055 541.49151611]
[266.27215576 526.93707275]
[269.90097046 512.38262939]
[273.52981567 497.82818604]
[277.15863037 483.27374268]
[280.78747559 468.71932983]
[276.35900879 454.49829102]
[287.20504761 442.97985840]
[290.83386230 428.42541504]
[294.46267700 413.87097168]
[275.09432983 391.73779297]
[283.55639648 366.46572876]
[276.05639648 353.47534180]
[268.55639648 340.48495483]
[261.05639648 327.49456787]
[253.55639648 314.50418091]
[246.05639648 301.51382446]
[238.55639648 288.52343750]
[226.97671509 285.10308838]
[220.61535645 274.37237549]
[223.34030151 261.78912354]
[215.99195862 248.71235657]
[208.64361572 235.63558960]
[201.29525757 222.55882263]
[195.30026245 218.28247070]
[193.93850708 209.28688049]
[186.74281311 196.12548828]
[173.84846497 188.66995239]
[174.01724243 172.84963989]
[166.82154846 159.68826294]
[159.62585449 146.52688599]
[152.43016052 133.36549377]
[145.23445129 120.20411682]
[138.03875732 107.04273987]
[130.84306335 93.88135529]
[105.64131165 125.02420044]
[80.74549103 104.86766052]
[65.89147186 102.78006744]
[51.03744888 100.69246674]
[36.18342590 98.60487366]
[21.32940674 96.51727295]
[6.47538519 94.42967987]
[-8.37863541 92.34207916]
[-19.06042671 103.59725952]
[-34.32389832 106.39118195]
[-48.29994202 99.64952087]
[-55.61447525 85.96459961]
[-53.45491409 70.59853363]
[-42.65165710 59.45989609]
[-27.35877228 56.83171844]
[-13.45668793 63.72459030]
[-6.29103899 77.48806000]
[8.56298161 79.57566071]
[23.41700363 81.66325378]
[38.27102280 83.75085449]
[53.12504578 85.83844757]
[67.97906494 87.92604065]
[82.83308411 90.01364136]
[83.05339050 80.74259949]
[87.77276611 71.03058624]
[80.73069000 57.78636932]
[73.68861389 44.54215622]
[66.64654541 31.29794121]
[59.60446930 18.05372810]
[52.56239700 4.80951357]
[42.03694534 2.24993682]
[34.79244232 -5.50600004]
[33.03031158 -15.74949646]
[37.09201813 -25.07848358]
[30.36003113 -38.48297119]
[15.62776566 -43.54243088]
[8.99152565 -57.23238754]
[13.90573406 -71.24617004]
[7.17374659 -84.65066528]
[0.44175902 -98.05515289]
[-6.29022884 -111.45964050]
[-13.02221680 -124.86412811]
[-19.75420380 -138.26861572]
[-26.48619270 -151.67311096]
[-33.21817780 -165.07760620]
[-47.95044327 -170.13705444]
[-54.58668518 -183.82701111]
[-49.67247772 -197.84080505]
[-56.40446472 -211.24528503]
[-63.13645172 -224.64978027]
[-69.86843872 -238.05426025]
[-76.60042572 -251.45875549]
[-89.11222076 -262.89953613]
[-81.58216858 -278.08947754]
[-64.90132141 -275.05871582]
[-63.19593811 -258.19073486]
[-56.46395111 -244.78625488]
[-49.73196411 -231.38175964]
[-42.99997330 -217.97727966]
[-36.26798630 -204.57278442]
[-22.09264374 -200.14613342]
[-15.07449913 -186.64797974]
[-19.81369019 -171.80958557]
[-13.08170223 -158.40509033]
[-6.34971428 -145.00061035]
[0.38227323 -131.59611511]
[7.11426115 -118.19162750]
[13.84624863 -104.78713989]
[20.57823563 -91.38265228]
[27.31022453 -77.97815704]
[41.48556900 -73.55150604]
[48.50371170 -60.05335236]
[43.76452255 -45.21496201]
[50.49650955 -31.81047058]
[67.38483429 -22.35220718]
[65.80661011 -2.23256016]
[72.84868622 11.01165390]
[79.89075470 24.25586700]
[86.93283081 37.50008011]
[93.97489929 50.74429703]
[101.01697540 63.98851013]
[108.51647186 64.07577515]
[108.68608093 49.07673264]
[108.86582947 34.07780838]
[123.86480713 34.25294876]
[123.69490051 49.25137711]
[123.51545715 64.25030518]
[131.01493835 64.33757019]
[138.36329651 51.26079941]
[145.71163940 38.18403625]
[153.05998230 25.10726929]
[160.40832520 12.03050232]
[167.75666809 -1.04626369]
[164.82629395 -16.81941795]
[175.43965149 -28.85004807]
[191.45509338 -27.90928459]
[200.58694458 -14.71880150]
[195.83003235 0.60279351]
[180.83343506 6.30208206]
[173.48509216 19.37884903]
[166.13674927 32.45561600]
[158.78840637 45.53237915]
[151.44006348 58.60914612]
[144.09170532 71.68591309]
[144.00444031 86.68566132]
[151.20014954 99.84703827]
[158.39584351 113.00842285]
[165.59153748 126.16979980]
[172.78723145 139.33117676]
[179.98292542 152.49256897]
[187.17861938 165.65394592]
[200.58764648 174.05088806]
[199.90419006 188.92979431]
[207.09988403 202.09118652]
[214.37202454 215.21047974]
[221.72038269 228.28724670]
[229.06872559 241.36401367]
[236.41706848 254.44078064]
[252.47648621 263.48400879]
[251.54678345 281.02343750]
[259.04678345 294.01382446]
[266.54678345 307.00418091]
[274.04678345 319.99456787]
[281.54678345 332.98495483]
[289.04678345 345.97534180]
[296.54678345 358.96572876]
[306.28567505 357.70721436]
[316.13000488 360.26376343]
[324.59170532 366.51760864]
[330.29470825 375.77505493]
[332.19503784 386.83737183]
[329.76239014 398.15454102]
[343.00659180 405.19662476]
[356.25079346 412.23867798]
[369.53576660 419.20358276]
[382.86102295 426.09109497]
[396.18627930 432.97857666]
[409.51153564 439.86608887]
[425.32360840 439.32922363]
[433.07717896 452.04660034]
[446.40243530 458.93408203]
[462.21453857 458.39724731]
[469.96810913 471.11459351]
[483.29336548 478.00210571]
[496.22448730 469.83306885]
[511.40808105 469.23730469]
[524.76251221 476.27478027]
[532.74792480 488.96685791]
[533.30444336 503.85162354]
[546.62969971 510.73910522]
[559.95495605 517.62658691]
[573.28021240 524.51409912]
[586.60546875 531.40161133]
[602.41760254 530.86474609]
[610.17114258 543.58209229]
[623.49639893 550.46960449]
[636.82165527 557.35711670]
[645.84649658 558.50921631]
[650.26116943 564.40307617]
[663.50537109 571.44512939]
[679.86676025 570.33233643]
[688.78527832 584.09436035]
[681.08630371 598.57391357]
[664.68994141 598.87579346]
[656.46331787 584.68933105]
[643.21911621 577.64727783]
[629.93414307 570.68237305]
[616.60888672 563.79486084]
[603.28363037 556.90734863]
[588.42468262 557.93688965]
[579.71795654 544.72686768]
[566.39270020 537.83935547]
[553.06750488 530.95184326]
[539.74224854 524.06439209]
[526.41699219 517.17687988]
[513.95208740 525.33117676]
[498.97964478 526.15692139]
[485.51519775 519.33233643]
[477.22003174 506.60101318]
[476.40585327 491.32736206]
[463.08059692 484.43984985]
[448.22161865 485.46936035]
[439.51495361 472.25933838]
[426.18969727 465.37185669]
[411.33071899 466.40133667]
[402.62402344 453.19134521]
[389.29876709 446.30383301]
[375.97351074 439.41635132]
[362.64828491 432.52883911]
[355.28964233 432.25030518]
[349.20874023 425.48291016]
[335.96450806 418.44082642]
[322.72030640 411.39874268]
[309.01712036 417.49981689]
[305.38830566 432.05422974]
[301.75946045 446.60867310]
[305.92837524 461.87075806]
[295.34188843 472.34814453]
[291.71307373 486.90258789]
[288.08422852 501.45703125]
[284.45541382 516.01147461]
[280.82659912 530.56591797]
[277.19775391 545.12030029]
[289.24423218 552.84478760]
[298.30670166 563.89215088]
[303.51138306 577.17645264]
[304.36288452 591.39703369]
[300.79135132 605.16595459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 16]
[6 15]
[27 264]
[28 263]
[29 262]
[30 261]
[31 260]
[32 259]
[34 257]
[35 256]
[36 255]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[47 179]
[48 178]
[49 177]
[50 176]
[52 175]
[53 174]
[55 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[61 166]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[95 135]
[96 134]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
[154 160]
[193 254]
[194 253]
[195 252]
[196 250]
[197 249]
[198 248]
[199 247]
[201 245]
[202 244]
[204 242]
[205 241]
[210 236]
[211 235]
[212 234]
[213 233]
[214 232]
[216 230]
[217 229]
[218 228]
[220 227]
[221 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
