%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGAGGGGAGGCCGAGUCCUGGAAGCGGAGCUCCGCGCUGGGACUGGUUCCUUCGCAGCCAUUUUCUGUCCAACCAAACAGCCGAUUGGAGACGGGAGCCAACCAGGGCUGCAUUGGAGGUUGAAAUCACAAAGAUUAGACACCUUUUUAGAUAGGUGUUCUUCAGCACCACUGACAACACGGUUCUGACAGUAUUUCAUGACAAUGGAUGGUGACAGUUCUACAACAGAUGCUUCUCAACUAGGAAUCUCU\
GCAGACUAUAUUGGAGGAAGUCAUUAUGUUAUACAGCCUCAUGAUG\
) } def
/len { sequence length } bind def

/coor [
[-47.10890579 206.76518250]
[-55.31082916 208.09053040]
[-63.67593384 207.79905701]
[-71.88620758 205.87789917]
[-79.62490845 202.37658691]
[-86.58875275 197.40603638]
[-95.73048401 209.29841614]
[-104.87221527 221.19079590]
[-114.01395416 233.08317566]
[-123.15568542 244.97555542]
[-132.29742432 256.86791992]
[-133.52847290 263.28350830]
[-137.23559570 267.50961304]
[-141.75512695 268.91000366]
[-151.14228821 280.60961914]
[-160.52944946 292.30923462]
[-163.43814087 300.91531372]
[-170.07562256 304.08108521]
[-179.58398438 315.68243408]
[-189.09233093 327.28375244]
[-198.60069275 338.88510132]
[-208.10905457 350.48645020]
[-217.61741638 362.08779907]
[-227.12577820 373.68911743]
[-236.63412476 385.29046631]
[-236.13517761 398.14688110]
[-244.25279236 407.60754395]
[-256.24078369 408.97570801]
[-265.86932373 420.47750854]
[-275.49783325 431.97930908]
[-285.12637329 443.48110962]
[-287.42086792 459.71896362]
[-302.72958374 465.59899902]
[-315.30426025 455.07235718]
[-312.20910645 438.96792603]
[-296.62817383 433.85260010]
[-286.99963379 422.35079956]
[-277.37112427 410.84899902]
[-267.74258423 399.34716797]
[-265.62564087 381.90542603]
[-248.23547363 375.78210449]
[-238.72711182 364.18078613]
[-229.21875000 352.57943726]
[-219.71040344 340.97808838]
[-210.20204163 329.37673950]
[-200.69367981 317.77542114]
[-191.18531799 306.17407227]
[-181.67695618 294.57272339]
[-172.22908020 282.92208862]
[-162.84191895 271.22247314]
[-153.45475769 259.52282715]
[-144.18980408 247.72619629]
[-135.04806519 235.83381653]
[-125.90633392 223.94143677]
[-116.76459503 212.04905701]
[-107.62286377 200.15667725]
[-98.48113251 188.26429749]
[-103.52988434 174.13949585]
[-118.13877869 170.73651123]
[-132.74766541 167.33354187]
[-147.35656738 163.93055725]
[-161.96545410 160.52758789]
[-176.57435608 157.12460327]
[-194.71162415 170.46739197]
[-216.47566223 165.91148376]
[-227.45759583 146.90032959]
[-242.25030518 144.41522217]
[-257.04299927 141.93009949]
[-271.83572388 139.44497681]
[-286.62841797 136.95985413]
[-301.42114258 134.47474670]
[-316.21383667 131.98962402]
[-331.00653076 129.50450134]
[-339.43493652 136.28178406]
[-349.98138428 137.30813599]
[-359.17044067 132.48631287]
[-364.10531616 123.60713196]
[-378.84310913 120.81481171]
[-393.58093262 118.02248383]
[-408.31872559 115.23016357]
[-419.52420044 125.96409607]
[-434.90335083 128.02825928]
[-448.54263306 120.62894440]
[-455.19744873 106.61134338]
[-452.30886841 91.36550140]
[-440.98760986 80.75375366]
[-425.58694458 78.85654449]
[-412.02874756 86.40338135]
[-405.52639771 100.49235535]
[-390.78860474 103.28468323]
[-376.05078125 106.07700348]
[-361.31298828 108.86933136]
[-343.52957153 101.20641327]
[-328.52142334 114.71179962]
[-313.72872925 117.19691467]
[-298.93600464 119.68203735]
[-284.14331055 122.16715240]
[-269.35058594 124.65227509]
[-254.55789185 127.13739014]
[-239.76518250 129.62251282]
[-224.97247314 132.10762024]
[-220.64875793 125.55634308]
[-214.58590698 120.51808167]
[-207.29200745 117.44040680]
[-199.38574219 116.60549927]
[-191.54389954 118.10440826]
[-184.44340515 121.82756805]
[-178.70294189 127.47254181]
[-174.82904053 134.56857300]
[-173.17137146 142.51571655]
[-158.56248474 145.91868591]
[-143.95358276 149.32167053]
[-129.34469604 152.72465515]
[-114.73580170 156.12762451]
[-100.12690735 159.53060913]
[-91.72557831 140.24737549]
[-75.59712219 127.37400055]
[-55.71269608 123.60515594]
[-36.75244522 129.45008850]
[-23.00425529 143.19848633]
[-9.16103745 137.42221069]
[4.68218088 131.64595032]
[18.52539825 125.86967468]
[32.36861801 120.09339905]
[46.21183395 114.31712341]
[60.05504990 108.54085541]
[43.03938675 81.66687012]
[46.99945068 41.64849091]
[41.80403519 27.57697296]
[36.60861588 13.50545406]
[31.41320229 -0.56606543]
[17.50234795 -8.55778980]
[15.21978188 -24.43763351]
[26.31649590 -36.02394104]
[42.28004074 -34.42868805]
[50.86454773 -20.87561417]
[45.48472214 -5.76148081]
[50.68013763 8.31003857]
[55.87555313 22.38155746]
[61.07096863 36.45307541]
[75.87705994 34.04481888]
[90.68183136 31.63678932]
[91.14987946 16.64409256]
[91.61791992 1.65139735]
[92.08596039 -13.34129906]
[92.55400085 -28.33399582]
[93.02204132 -43.32669067]
[93.49008942 -58.31938553]
[81.14515686 -67.72058105]
[76.71604156 -82.59211731]
[81.90582275 -97.21558380]
[94.71891785 -105.96796417]
[110.22843933 -105.48378754]
[122.47064972 -95.94922638]
[126.73818207 -81.03052521]
[121.39007568 -66.46421051]
[108.48278046 -57.85134506]
[108.01473999 -42.85865021]
[107.54669952 -27.86595345]
[107.07865906 -12.87325668]
[106.61061096 2.11943936]
[106.14257050 17.11213493]
[105.67453003 32.10483170]
[112.97002411 33.84429169]
[127.56101990 37.32320786]
[134.85652161 39.06266403]
[141.20364380 25.47171402]
[147.55078125 11.88076401]
[153.89790344 -1.71018708]
[149.79306030 -17.21920967]
[159.47445679 -30.01178932]
[175.51536560 -30.27455330]
[185.61056519 -17.80593300]
[182.01588440 -2.17078447]
[167.48886108 4.63694239]
[161.14172363 18.22789383]
[154.79460144 31.81884384]
[148.44746399 45.40979385]
[153.77828979 50.68544006]
[164.32957458 40.02381516]
[174.88102722 29.36235046]
[185.54232788 39.91397095]
[174.99119568 50.57510376]
[164.43991089 61.23672867]
[169.77072144 66.51237488]
[183.29490662 60.02421188]
[188.62030029 45.38597488]
[202.42817688 38.99870682]
[216.35067749 44.16586304]
[229.87487793 37.67770004]
[243.39906311 31.18953323]
[252.49475098 18.24429893]
[267.31655884 19.71523666]
[280.84072876 13.22707272]
[289.93643188 0.28183803]
[304.75820923 1.75277650]
[318.28240967 -4.73538876]
[331.80657959 -11.22355366]
[345.33078003 -17.71171951]
[351.67581177 -24.21291542]
[359.02957153 -24.19621468]
[372.62051392 -30.54334259]
[386.21148682 -36.89047241]
[395.16134644 -50.63208389]
[411.52011108 -49.48200226]
[418.45928955 -34.62333298]
[408.84042358 -21.34140396]
[392.55859375 -23.29952240]
[378.96765137 -16.95239258]
[365.37670898 -10.60526276]
[351.81893921 -4.18752861]
[338.29476929 2.30063629]
[324.77056885 8.78880119]
[311.24636841 15.27696609]
[303.11804199 27.75812340]
[287.32888794 26.75126266]
[273.80471802 33.23942566]
[265.67636108 45.72058487]
[249.88722229 44.71372223]
[236.36303711 51.20188904]
[222.83885193 57.69005203]
[218.15625000 71.78292084]
[204.53321838 78.55549622]
[189.78308105 73.54840088]
[176.25889587 80.03656769]
[166.14901733 98.39939117]
[152.35859680 111.03152466]
[136.96580505 117.38027954]
[149.13764954 126.14648438]
[161.30947876 134.91268921]
[173.48132324 143.67889404]
[185.69859314 152.38168335]
[197.96095276 161.02079773]
[210.22332764 169.65991211]
[222.48568726 178.29902649]
[234.79283142 186.87425232]
[247.14439392 195.38534546]
[259.49597168 203.89642334]
[271.84753418 212.40751648]
[284.19912720 220.91860962]
[294.70352173 218.34437561]
[304.69357300 221.87707520]
[310.97912598 230.13423157]
[311.69326782 240.26748657]
[323.86511230 249.03369141]
[336.03695679 257.79989624]
[348.20880127 266.56610107]
[365.29849243 260.38870239]
[382.51275635 265.69653320]
[392.97131348 280.16918945]
[392.61407471 297.86376953]
[404.96563721 306.37484741]
[417.31719971 314.88595581]
[433.69845581 315.65237427]
[440.98388672 330.34436035]
[431.67892456 343.84802246]
[415.35568237 342.27200317]
[408.80612183 327.23751831]
[396.45455933 318.72644043]
[384.10296631 310.21533203]
[373.43182373 315.88690186]
[361.29092407 316.50598145]
[349.96484375 311.89508057]
[341.61077881 302.86645508]
[337.84762573 291.07995605]
[339.44259644 278.73794556]
[327.27075195 269.97174072]
[315.09890747 261.20553589]
[302.92706299 252.43931580]
[283.57168579 251.85749817]
[275.68801880 233.27018738]
[263.33645630 224.75909424]
[250.98487854 216.24800110]
[238.63331604 207.73690796]
[226.28173828 199.22581482]
[219.02682495 198.02395630]
[213.84657288 190.56140137]
[201.58421326 181.92228699]
[189.32183838 173.28317261]
[177.05946350 164.64404297]
[169.81744385 163.36677551]
[164.71511841 155.85073853]
[152.54327393 147.08453369]
[140.37144470 138.31832886]
[128.19960022 129.55212402]
[112.99571991 138.72540283]
[95.33602142 140.58068848]
[78.55768585 134.76739502]
[65.83132172 122.38407135]
[51.98810577 128.16033936]
[38.14488983 133.93661499]
[24.30167007 139.71289062]
[10.45845318 145.48916626]
[-3.38476467 151.26542664]
[-17.22798157 157.04170227]
[-16.06163788 164.76754761]
[-16.41775131 172.63475037]
[-18.30673790 180.34381104]
[-21.68020439 187.59663391]
[-26.43191719 194.10804749]
[-32.40100861 199.61698914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 57]
[7 56]
[8 55]
[9 54]
[10 53]
[11 52]
[14 51]
[15 50]
[16 49]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[28 39]
[29 38]
[30 37]
[31 36]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[77 92]
[78 91]
[79 90]
[80 89]
[120 295]
[121 294]
[122 293]
[123 292]
[124 291]
[125 290]
[126 289]
[128 140]
[129 139]
[130 138]
[131 137]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[166 178]
[167 177]
[168 176]
[169 175]
[185 225]
[186 224]
[189 221]
[190 220]
[191 219]
[193 217]
[194 216]
[196 214]
[197 213]
[198 212]
[199 211]
[201 210]
[202 209]
[203 208]
[228 285]
[229 284]
[230 283]
[231 282]
[232 280]
[233 279]
[234 278]
[235 277]
[236 275]
[237 274]
[238 273]
[239 272]
[240 271]
[244 269]
[245 268]
[246 267]
[247 266]
[251 260]
[252 259]
[253 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
