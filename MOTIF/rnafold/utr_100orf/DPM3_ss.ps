%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:19:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCUUCCACCUUUUGUGGGCACUCAAGUUCGGACCUCUGGGAUCGGCGAUUCCCCUCUGGCCAGGGCUGGUUUUAAUGCUCUCCGUGGGCGGGCUUCGGUUGAGUUUGGUCCGCUUUUCCUUUCUGCUCCUCAGGGGAGCAUUGCUUCCUUCUCUCGCAGUGACCAUGACGAAAU\
) } def
/len { sequence length } bind def

/coor [
[78.01483154 105.89581299]
[63.76543427 110.58139801]
[49.51604080 115.26697540]
[35.26664352 119.95256042]
[21.01724434 124.63814545]
[6.76784801 129.32373047]
[-4.73226690 138.95426941]
[-11.84695721 152.15962219]
[-18.96164703 165.36495972]
[-26.07633591 178.57031250]
[-33.19102478 191.77565002]
[-29.98067284 207.49421692]
[-40.37846375 219.71163940]
[-56.40810394 219.05577087]
[-65.77302551 206.02972412]
[-61.28926468 190.62597656]
[-46.39637375 184.66096497]
[-39.28168488 171.45561218]
[-32.16699219 158.25027466]
[-25.05230331 145.04492188]
[-17.93761444 131.83958435]
[-21.31893349 125.14505005]
[-33.89364243 133.32287598]
[-46.46834946 141.50068665]
[-54.63924789 154.07989502]
[-69.45799255 156.40472412]
[-81.08847809 146.93203735]
[-81.81084442 131.94944763]
[-71.14561462 121.40179443]
[-56.17108536 122.29066467]
[-42.12632751 117.02333069]
[-28.08157158 111.75599670]
[-31.46289062 105.06147003]
[-46.31361771 102.95057678]
[-55.28111649 104.84445953]
[-61.40690231 100.66914368]
[-76.21806335 98.29647827]
[-88.02140808 110.39154816]
[-104.54242706 113.05268860]
[-119.25189209 105.42843628]
[-126.45539856 90.69297028]
[-141.30612183 88.58207703]
[-156.15686035 86.47117615]
[-171.00758362 84.36028290]
[-181.70701599 95.59868622]
[-196.97485352 98.36865234]
[-210.94030762 91.60507965]
[-218.23335266 77.90869904]
[-216.04969788 62.54603958]
[-205.22897339 51.42436600]
[-189.93199158 48.82018661]
[-176.04074097 55.73485947]
[-168.89668274 69.50955200]
[-154.04595947 71.62045288]
[-139.19523621 73.73134613]
[-124.34450531 75.84224701]
[-115.97199249 65.42167664]
[-103.44045258 60.46627426]
[-89.99083710 62.37284851]
[-79.15882874 70.74841309]
[-73.84540558 83.48532104]
[-59.03424072 85.85797882]
[-44.20272064 88.09984589]
[-29.35199165 90.21074677]
[2.08226538 115.07432556]
[16.33166313 110.38874817]
[30.58105850 105.70316315]
[44.83045578 101.01757812]
[59.07985306 96.33200073]
[73.32925415 91.64641571]
[105.30482483 75.67768097]
[115.81741333 64.97789764]
[113.40315247 49.76351166]
[120.32957458 36.20334244]
[133.75379944 29.40229225]
[148.43292236 31.78159904]
[158.94551086 21.08181190]
[169.45809937 10.38202477]
[179.97068787 -0.31776318]
[190.48329163 -11.01755047]
[200.99588013 -21.71733856]
[211.50846863 -32.41712570]
[222.02105713 -43.11691284]
[232.53364563 -53.81669998]
[243.04623413 -64.51648712]
[253.55882263 -75.21627808]
[257.35659790 -83.55772400]
[264.35263062 -86.01007843]
[275.05239868 -96.52266693]
[285.75219727 -107.03525543]
[296.45199585 -117.54784393]
[300.39636230 -125.82097626]
[307.43460083 -128.14947510]
[318.31823730 -138.47158813]
[329.20190430 -148.79370117]
[340.08554077 -159.11582947]
[337.17907715 -176.98774719]
[345.48895264 -192.89822388]
[361.53417969 -200.58850098]
[378.83401489 -197.16085815]
[389.34658813 -207.86064148]
[389.37783813 -223.43745422]
[400.19152832 -234.13879395]
[415.04144287 -234.01301575]
[425.55401611 -244.71281433]
[436.06661987 -255.41259766]
[446.57919312 -266.11239624]
[444.89889526 -281.65942383]
[453.64804077 -294.62039185]
[468.69555664 -298.87548828]
[482.93649292 -292.41561890]
[489.64666748 -278.29092407]
[485.65780640 -263.17065430]
[472.85327148 -254.19412231]
[457.27899170 -255.59979248]
[446.76638794 -244.90000916]
[436.25381470 -234.20022583]
[425.74121094 -223.50042725]
[426.12905884 -208.65505981]
[415.62020874 -197.65419006]
[400.04638672 -197.34805298]
[389.53381348 -186.64826965]
[393.29782104 -175.07112122]
[391.76159668 -162.92189026]
[385.15679932 -152.52400208]
[374.69033813 -145.89231873]
[362.32418823 -144.34291077]
[350.40768433 -148.23216248]
[339.52401733 -137.91004944]
[328.64038086 -127.58793640]
[317.75671387 -117.26581573]
[306.96456909 -106.84806061]
[296.26480103 -96.33546448]
[285.56500244 -85.82287598]
[274.86520386 -75.31028748]
[264.25860596 -64.70368958]
[253.74601746 -54.00389862]
[243.23342896 -43.30411148]
[232.72084045 -32.60432434]
[222.20825195 -21.90453529]
[211.69566345 -11.20474815]
[201.18307495 -0.50496089]
[190.67048645 10.19482708]
[180.15789795 20.89461517]
[169.64530945 31.59440231]
[159.13270569 42.29418945]
[161.77070618 56.92904282]
[155.20764160 70.47119904]
[141.77182007 77.63585663]
[126.51719666 75.49048615]
[116.00460815 86.19026947]
[130.15646362 81.21784973]
[143.37265015 88.31240082]
[147.04869080 102.85498047]
[138.79130554 115.37757874]
[123.97648621 117.72730255]
[112.24970245 108.37474060]
[118.65554810 121.93811798]
[125.06139374 135.50149536]
[131.58668518 149.00781250]
[138.23091125 162.45602417]
[153.46493530 165.98565674]
[162.82470703 178.51277161]
[161.89083862 194.12243652]
[151.10424805 205.44425964]
[135.55805969 207.13241577]
[122.59268951 198.38980103]
[118.33000183 183.34442139]
[124.78269958 169.10023499]
[118.13847351 155.65202332]
[112.33916473 151.03396606]
[111.49802399 141.90733337]
[105.09217834 128.34396362]
[98.68632507 114.78058624]
[97.62932587 129.74330139]
[84.81931305 137.54737854]
[71.03829956 131.62422180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[4 67]
[5 66]
[6 65]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[33 64]
[34 63]
[36 62]
[37 61]
[41 56]
[42 55]
[43 54]
[44 53]
[71 151]
[72 150]
[76 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[85 137]
[86 136]
[88 135]
[89 134]
[90 133]
[91 132]
[93 131]
[94 130]
[95 129]
[96 128]
[100 122]
[101 121]
[104 118]
[105 117]
[106 116]
[107 115]
[157 174]
[158 173]
[159 172]
[160 170]
[161 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
