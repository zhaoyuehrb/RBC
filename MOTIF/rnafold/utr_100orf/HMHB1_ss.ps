%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACAUCCCAGGAGGCCGAGGCGGCUUGCCCCGCAUCUCAGAAGCCGGGCAGGCCCUGAGCCUUCUGACCUCACAUCCUCUGCCACACCACAGUGGAGAAACCAGAACUGGAGGAGCAGCCAGAAUGCAGAGAAGAAAAAAGAGGUUCUCUGCAUGUUUGGAAGUCGGAAUUGGUUGAAGUUGAAGAUGAUGUGUAUCUGAGGCACA\
) } def
/len { sequence length } bind def

/coor [
[142.02084351 220.85046387]
[134.85018921 207.67543030]
[127.67953491 194.50038147]
[113.36583710 190.54389954]
[105.90609741 177.28468323]
[110.15306091 162.29798889]
[102.98240662 149.12295532]
[95.81175995 135.94790649]
[81.59571075 131.16207886]
[67.91721344 137.31828308]
[54.23871613 143.47447205]
[40.56021881 149.63066101]
[26.88172150 155.78684998]
[13.20322418 161.94303894]
[-0.47527349 168.09924316]
[-14.15377140 174.25543213]
[-17.44909286 187.31655884]
[-27.51871300 195.96817017]
[-40.53977585 197.22116089]
[-51.73616409 190.84106445]
[-65.50608063 196.78996277]
[-72.14479065 203.06764221]
[-79.52917480 202.72299194]
[-93.38736725 208.46324158]
[-107.24555969 214.20349121]
[-121.10375214 219.94374084]
[-134.96194458 225.68399048]
[-148.82014465 231.42424011]
[-162.67832947 237.16448975]
[-176.53652954 242.90473938]
[-190.39471436 248.64500427]
[-200.18348694 261.07443237]
[-214.90287781 258.79660034]
[-228.76107788 264.53686523]
[-238.54983521 276.96627808]
[-253.26924133 274.68847656]
[-267.12744141 280.42874146]
[-279.44705200 292.07620239]
[-294.04974365 283.46237183]
[-289.81497192 267.04580688]
[-272.86767578 266.57052612]
[-259.00949097 260.83029175]
[-250.21195984 248.81143188]
[-234.50132751 250.67866516]
[-220.64312744 244.93841553]
[-211.84561157 232.91957092]
[-196.13497925 234.78680420]
[-182.27677917 229.04655457]
[-168.41857910 223.30630493]
[-154.56039429 217.56605530]
[-140.70219421 211.82580566]
[-126.84400940 206.08554077]
[-112.98581696 200.34529114]
[-99.12762451 194.60504150]
[-85.26942444 188.86479187]
[-71.45497894 183.02005005]
[-57.68506241 177.07115173]
[-52.15922165 161.18818665]
[-36.54896164 154.07501221]
[-20.30996323 160.57693481]
[-6.63146544 154.42074585]
[7.04703236 148.26454163]
[20.72553062 142.10835266]
[34.40402603 135.95216370]
[48.08252335 129.79597473]
[61.76102448 123.63977814]
[75.43952179 117.48358917]
[72.95716858 96.43417358]
[84.46560669 81.17624664]
[78.93531036 67.23293304]
[73.40501404 53.28962708]
[67.87472534 39.34631729]
[61.80042267 32.52103043]
[62.36795044 25.15042305]
[57.04887772 11.12517929]
[44.21053696 7.04725790]
[36.18271255 -3.52636051]
[35.71820068 -16.59932137]
[42.76266861 -27.39006042]
[37.65602875 -41.49404144]
[32.54938889 -55.59801865]
[27.44274902 -69.70199585]
[21.70249748 -83.56018829]
[15.34041882 -97.14414978]
[8.97833920 -110.72811127]
[2.61625957 -124.31207275]
[-12.32742214 -129.45619202]
[-19.18157578 -143.69683838]
[-13.87975311 -158.58529663]
[0.43256819 -165.28849792]
[15.26414108 -159.82957458]
[21.81565857 -145.44717407]
[16.20021820 -130.67414856]
[22.56229782 -117.09018707]
[28.92437744 -103.50623322]
[35.28645706 -89.92227173]
[41.41241837 -103.61433411]
[55.37537766 -109.09481812]
[69.17930603 -103.22527313]
[74.91924286 -89.36695099]
[69.30815125 -75.45595551]
[55.55928040 -69.45857239]
[41.54673004 -74.80863953]
[46.65336990 -60.70465851]
[51.76000977 -46.60068130]
[56.86664963 -32.49670029]
[72.38698578 -26.02194977]
[78.54467010 -10.01068974]
[71.07411957 5.80610657]
[76.39319611 19.83135033]
[81.81803131 33.81602478]
[87.34832764 47.75933456]
[92.87861633 61.70264053]
[98.40891266 75.64595032]
[108.65447235 77.18002319]
[117.34066772 82.82582092]
[130.72627258 76.05636597]
[135.74450684 61.31000519]
[149.41584778 54.63550186]
[163.44332886 59.51049423]
[176.82893372 52.74103928]
[190.21453857 45.97158813]
[203.60014343 39.20213318]
[216.98574829 32.43267822]
[230.31985474 25.56233215]
[243.60169983 18.59148598]
[256.88354492 11.62063789]
[270.16537476 4.64978981]
[283.44723511 -2.32105780]
[296.72906494 -9.29190540]
[310.01089478 -16.26275253]
[323.29275513 -23.23360062]
[336.57458496 -30.20444870]
[349.85641479 -37.17529678]
[349.79263306 -52.48067093]
[356.85922241 -66.05719757]
[369.43231201 -74.78508759]
[384.62268066 -76.65874481]
[398.93975830 -71.24760437]
[409.09353638 -59.79511261]
[412.75073242 -44.93296814]
[409.07101440 -30.07638168]
[398.89990234 -18.63928986]
[384.57464600 -13.24985123]
[369.38711548 -15.14651966]
[356.82727051 -23.89345551]
[343.54544067 -16.92260742]
[330.26358032 -9.95176029]
[316.98175049 -2.98091245]
[303.69992065 3.98993516]
[290.41806030 10.96078300]
[277.13623047 17.93163109]
[263.85440063 24.90247726]
[250.57255554 31.87332535]
[237.29071045 38.84417343]
[232.82789612 44.73749161]
[223.75520325 45.81828690]
[210.36959839 52.58774185]
[196.98399353 59.35719299]
[183.59838867 66.12664795]
[170.21278381 72.89610291]
[165.82579041 87.08377075]
[152.34732056 94.13964081]
[137.49572754 89.44197083]
[124.11012268 96.21142578]
[123.16652679 114.39936829]
[108.98680115 128.77725220]
[116.15744781 141.95230103]
[123.32810211 155.12733459]
[138.21929932 159.69789124]
[145.30368042 173.16140747]
[140.85458374 187.32972717]
[148.02523804 200.50477600]
[155.19587708 213.67980957]
[169.18011475 213.30593872]
[181.90025330 218.96717834]
[190.89671326 229.50648499]
[194.45690918 242.82974243]
[191.94102478 256.32171631]
[183.89617920 267.35946655]
[190.86701965 280.64129639]
[197.83787537 293.92312622]
[212.65834045 298.71807861]
[219.53855896 312.28704834]
[214.87599182 326.38656616]
[221.84683228 339.66839600]
[228.81768799 352.95022583]
[235.78852844 366.23208618]
[242.75938416 379.51391602]
[257.58660889 385.64035034]
[261.90280151 401.09185791]
[252.39695740 414.01544189]
[236.36114502 414.49716187]
[226.09664917 402.16754150]
[229.47753906 386.48477173]
[222.50669861 373.20294189]
[215.53584290 359.92108154]
[208.56500244 346.63925171]
[201.59414673 333.35742188]
[187.34184265 329.18521118]
[180.08320618 315.81481934]
[184.55603027 300.89398193]
[177.58518982 287.61215210]
[170.61433411 274.33029175]
[154.45845032 274.07495117]
[140.55546570 265.65905762]
[132.74844360 251.29827881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[6 169]
[7 168]
[8 167]
[9 67]
[10 66]
[11 65]
[12 64]
[13 63]
[14 62]
[15 61]
[16 60]
[20 57]
[21 56]
[23 55]
[24 54]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[31 47]
[33 45]
[34 44]
[36 42]
[37 41]
[69 114]
[70 113]
[71 112]
[72 111]
[74 110]
[75 109]
[79 106]
[80 105]
[81 104]
[82 103]
[83 96]
[84 95]
[85 94]
[86 93]
[116 165]
[117 164]
[120 161]
[121 160]
[122 159]
[123 158]
[124 157]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[180 204]
[181 203]
[182 202]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
