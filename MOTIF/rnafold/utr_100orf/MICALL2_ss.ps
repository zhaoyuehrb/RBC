%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGUCCGGCUCAGCUGGGGCUGGGCGCCGUGGGUCUGGCGGUUCCGUAGCGGUCCCAGCGUCUGUCCCGCCGGCCGGGCGGUCGCGGCACAGCCGCGGGAAGGUGUCGGAGGGCGGUUCCGCCGCGCGGCGGGCGCGCCGCCCACAUGGCGGCCAUCAGGGCGCUGCAACAGUGGUGCCGGCAGCAGUGCGAGGGCUACCGCGACGUGAAUAUCUGCAACAUGACCACGUCGUUCCGCGACGGCC\
) } def
/len { sequence length } bind def

/coor [
[70.38625336 739.30932617]
[64.99887085 753.30847168]
[51.33864212 759.50512695]
[37.25682068 754.33770752]
[30.84698296 740.77630615]
[24.93164444 754.56066895]
[19.01630592 768.34503174]
[13.10096836 782.12939453]
[7.18563080 795.91375732]
[1.27029312 809.69812012]
[-4.64504480 823.48254395]
[-10.56038284 837.26690674]
[-16.47571945 851.05126953]
[-11.88378906 866.42309570]
[-21.15691566 879.51464844]
[-37.18154907 880.28320312]
[-47.66496658 868.13916016]
[-44.56518173 852.39837646]
[-30.26008797 845.13592529]
[-24.34474945 831.35156250]
[-18.42941093 817.56719971]
[-12.51407433 803.78283691]
[-6.59873629 789.99841309]
[-0.68339837 776.21405029]
[5.23193932 762.42968750]
[11.14727688 748.64532471]
[17.06261444 734.86096191]
[22.44995880 720.86181641]
[27.30152893 706.66809082]
[32.15309906 692.47430420]
[60.11160660 676.14477539]
[62.57065964 661.34771729]
[65.02971649 646.55065918]
[67.48876953 631.75360107]
[65.48982239 624.65734863]
[70.07382965 616.78515625]
[72.72013092 602.02038574]
[75.27285767 587.23919678]
[77.73191071 572.44213867]
[80.00332642 557.61511230]
[82.08673859 542.76055908]
[84.17015076 527.90594482]
[86.25357056 513.05133057]
[88.05436707 498.15979004]
[89.57189178 483.23675537]
[91.08941650 468.31372070]
[92.51239014 453.38137817]
[93.84075928 438.44030762]
[95.16912079 423.49923706]
[88.58932495 410.13677979]
[97.51833344 397.07601929]
[98.84670258 382.13494873]
[100.17507172 367.19387817]
[101.50344086 352.25280762]
[102.83180237 337.31176758]
[103.97080231 322.35507202]
[104.92024231 307.38513184]
[105.86968994 292.41522217]
[97.24375916 277.12072754]
[107.60050201 261.88159180]
[108.36024475 246.90083313]
[109.11997986 231.92008972]
[106.32672882 225.09735107]
[109.98541260 216.75474548]
[110.93486023 201.78482056]
[111.88430023 186.81491089]
[112.83374023 171.84498596]
[113.59348297 156.86424255]
[114.16339111 141.87506104]
[58.14741898 91.11458588]
[50.70233917 78.09265137]
[43.25725937 65.07071686]
[35.81217957 52.04878235]
[22.24564552 43.90877533]
[22.64558220 29.01954079]
[15.20050144 15.99760532]
[7.75542116 2.97567105]
[0.31034070 -10.04626369]
[-13.25619316 -18.18627167]
[-12.85625648 -33.07550430]
[-20.30133629 -46.09743881]
[-27.74641800 -59.11937332]
[-35.19149780 -72.14131165]
[-42.63657761 -85.16324615]
[-51.89311218 -96.96648407]
[-62.76500702 -107.30099487]
[-73.63689423 -117.63549805]
[-84.50878906 -127.97000122]
[-95.38068390 -138.30450439]
[-106.25257111 -148.63900757]
[-121.89839172 -155.16929626]
[-119.95449066 -172.01144409]
[-103.23242950 -174.80587769]
[-95.91806793 -159.51089478]
[-85.04617310 -149.17639160]
[-74.17428589 -138.84188843]
[-63.30239487 -128.50738525]
[-52.43050003 -118.17288208]
[-41.55860901 -107.83837891]
[-28.93047523 -115.93345642]
[-33.78204727 -130.12719727]
[-38.63361740 -144.32093811]
[-43.48518372 -158.51467896]
[-54.68810654 -164.87455750]
[-58.44475174 -176.77761841]
[-53.26461411 -187.69206238]
[-57.93599701 -201.94612122]
[-62.60737991 -216.20018005]
[-67.27876282 -230.45423889]
[-79.84785461 -240.98751831]
[-76.74419403 -257.09030151]
[-61.16056824 -262.19741821]
[-49.12807083 -251.05509949]
[-53.02470779 -235.12561035]
[-48.35332108 -220.87156677]
[-43.68193817 -206.61750793]
[-39.01055527 -192.36344910]
[-25.32657051 -181.35995483]
[-29.29144478 -163.36624146]
[-24.43987465 -149.17250061]
[-19.58830452 -134.97875977]
[-14.73673534 -120.78502655]
[-29.61464310 -92.60832214]
[-22.16956329 -79.58638763]
[-14.72448349 -66.56445312]
[-7.27940273 -53.54252243]
[0.16567795 -40.52058792]
[13.19968987 -33.31199646]
[13.33227539 -17.49134445]
[20.77735519 -4.46940947]
[28.22243690 8.55252552]
[35.66751480 21.57445908]
[48.70153046 28.78305054]
[48.83411407 44.60370255]
[56.27919388 57.62563705]
[63.72427368 70.64756775]
[71.16935730 83.66950226]
[78.66559601 83.90698242]
[101.15431213 84.61942291]
[109.40870667 72.09484863]
[117.66309357 59.57027054]
[125.91748810 47.04569244]
[134.17187500 34.52111816]
[142.42626953 21.99654007]
[140.61825562 6.05569029]
[152.05554199 -5.19455624]
[167.96441650 -3.12397456]
[176.14094543 10.67906284]
[170.31280518 25.62604713]
[154.95083618 30.25093079]
[146.69645691 42.77550888]
[138.44206238 55.30008316]
[130.18766785 67.82466125]
[121.93328094 80.34923553]
[113.67888641 92.87381744]
[118.38154602 98.71633911]
[130.06658936 89.31102753]
[141.75178528 79.90591431]
[151.15670776 91.59126282]
[139.47189331 100.99607086]
[127.78684998 110.40137482]
[132.48950195 116.24389648]
[146.48866272 110.85655212]
[160.48782349 105.46920776]
[174.48698425 100.08186340]
[188.48616028 94.69451904]
[202.48532104 89.30718231]
[216.48448181 83.91983795]
[230.48364258 78.53249359]
[240.36679077 65.44602966]
[256.60607910 67.73011017]
[262.49594116 83.03506470]
[251.97737122 95.61647034]
[235.87098694 92.53165436]
[221.87182617 97.91899872]
[207.87266541 103.30634308]
[193.87348938 108.69368744]
[179.87432861 114.08102417]
[165.87516785 119.46836853]
[151.87600708 124.85571289]
[137.87684631 130.24305725]
[129.15255737 142.44497681]
[128.58265686 157.43414307]
[131.30931091 163.41423035]
[130.71377563 169.03535461]
[127.80366516 172.79443359]
[126.85422516 187.76434326]
[125.90477753 202.73426819]
[124.95533752 217.70419312]
[124.10073090 232.67982483]
[123.34098816 247.66056824]
[122.58125305 262.64132690]
[130.62568665 272.70315552]
[129.69886780 285.15051270]
[120.83960724 293.36465454]
[119.89016724 308.33459473]
[118.94072723 323.30450439]
[121.51502228 329.35174561]
[120.77727509 334.95596313]
[117.77287292 338.64013672]
[116.44450378 353.58117676]
[115.11613464 368.52224731]
[113.78776550 383.46331787]
[112.45940399 398.40438843]
[118.94419098 412.83554077]
[110.11019135 424.82760620]
[108.78182220 439.76867676]
[107.45345306 454.70974731]
[109.80664825 463.51016235]
[106.01245117 469.83123779]
[104.49492645 484.75427246]
[102.97740173 499.67733765]
[105.09621429 504.39505005]
[105.19943237 508.99691772]
[103.66458893 512.73956299]
[101.10817719 515.13470459]
[99.02476501 529.98931885]
[96.94134521 544.84393311]
[94.85793304 559.69854736]
[96.96561432 565.92382812]
[95.80444336 571.45581055]
[92.52896881 574.90124512]
[90.06991577 589.69830322]
[91.74807739 598.65197754]
[87.48485565 604.66668701]
[84.83855438 619.43145752]
[82.28582764 634.21264648]
[79.82677460 649.00970459]
[77.36772156 663.80676270]
[74.90866852 678.60382080]
[75.76327515 693.57946777]
[79.88971710 708.00067139]
[84.01615906 722.42193604]
[88.14260101 736.84320068]
[92.26904297 751.26446533]
[102.43937683 764.82916260]
[92.22023773 778.35711670]
[76.39202118 772.28222656]
[77.84779358 755.39086914]
[73.72135162 740.96966553]
[69.59490967 726.54840088]
[65.46846771 712.12713623]
[61.34202576 697.70587158]
[46.34683990 697.32592773]
[41.49526978 711.51965332]
[36.64369965 725.71337891]
[50.49133682 719.94769287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 27]
[6 26]
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[28 246]
[29 245]
[30 244]
[31 230]
[32 229]
[33 228]
[34 227]
[36 226]
[37 225]
[38 223]
[39 222]
[40 219]
[41 218]
[42 217]
[43 216]
[44 212]
[45 211]
[46 210]
[47 208]
[48 207]
[49 206]
[51 204]
[52 203]
[53 202]
[54 201]
[55 200]
[56 197]
[57 196]
[58 195]
[60 192]
[61 191]
[62 190]
[64 189]
[65 188]
[66 187]
[67 186]
[68 183]
[69 182]
[70 137]
[71 136]
[72 135]
[73 134]
[75 132]
[76 131]
[77 130]
[78 129]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
[100 122]
[101 121]
[102 120]
[103 119]
[106 117]
[107 116]
[108 115]
[109 114]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
[162 181]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
[231 243]
[232 242]
[233 241]
[234 240]
[235 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
