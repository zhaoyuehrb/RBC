%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGUUGGUGGCAACCAGGAGCCGGGGAAGAGGCCAGCAGCUGCAGGGAGACCGCAGCCAGCGGAGGGGGCUUCUGAUCCCUCAGUCACAGGGCUCGGCAGGCAGCUCUGGACGGAUCAAUGCAAGCCAGACGAUGACCAGUUGUGGCCAGCAGUCCUUGAACGUGCUCGCCGUCCUCUUCUCAUUGCUGUUUUCUGCAGUCUUGUCUGCACAUUUCCGGGUCUGUGAACCAU\
) } def
/len { sequence length } bind def

/coor [
[42.55967712 833.11663818]
[31.84178352 822.62249756]
[26.51497078 808.60339355]
[22.73003197 823.11798096]
[18.94509506 837.63262939]
[15.16015625 852.14721680]
[11.37521839 866.66186523]
[16.24519539 882.32122803]
[4.92152452 894.18316650]
[-10.94696999 890.04522705]
[-15.03614330 874.16406250]
[-3.13940310 862.87695312]
[0.64553475 848.36230469]
[4.43047285 833.84765625]
[8.21541023 819.33306885]
[12.00034809 804.81842041]
[9.01542473 794.69622803]
[15.65714359 784.86395264]
[17.26512146 769.95037842]
[18.87309837 755.03680420]
[12.54472828 741.55346680]
[21.71680069 728.66223145]
[23.32477760 713.74865723]
[24.93275642 698.83508301]
[26.54073334 683.92156982]
[28.14871025 669.00799561]
[29.75668716 654.09442139]
[31.36466599 639.18084717]
[20.68444061 631.18469238]
[15.30310345 618.85803223]
[16.72257805 605.37426758]
[24.67877388 594.26251221]
[37.18278503 588.48394775]
[38.99083328 573.59332275]
[29.63149643 562.06347656]
[31.25299263 546.93646240]
[43.41006088 537.19769287]
[45.21811295 522.30706787]
[47.02616501 507.41644287]
[48.63414001 492.50289917]
[50.04175568 477.56909180]
[51.44937134 462.63528442]
[52.85698700 447.70147705]
[54.26459885 432.76763916]
[55.67221451 417.83383179]
[57.07983017 402.90002441]
[58.48744583 387.96621704]
[55.98991394 381.02316284]
[60.01551819 372.84185791]
[61.62349701 357.92828369]
[63.23147202 343.01470947]
[64.83944702 328.10116577]
[58.51107788 314.61779785]
[67.68315125 301.72656250]
[69.29113007 286.81298828]
[70.89910889 271.89944458]
[72.50708771 256.98587036]
[62.99380112 245.58267212]
[64.41207123 230.43528748]
[76.43729401 220.53419495]
[78.04527283 205.62063599]
[71.71690369 192.13726807]
[80.88897705 179.24604797]
[82.49695587 164.33248901]
[84.10493469 149.41893005]
[85.71290588 134.50535583]
[87.32088470 119.59179688]
[88.92886353 104.67823029]
[86.02719879 89.96156311]
[78.87866974 76.77449799]
[71.73014069 63.58744431]
[64.58161163 50.40038300]
[57.43307877 37.21332550]
[38.52481842 27.10755730]
[40.01939774 6.51447773]
[32.34567261 -6.37404346]
[24.67195129 -19.26256371]
[16.99822807 -32.15108490]
[9.32450581 -45.03960800]
[1.65078366 -57.92812729]
[-2.17815137 -59.89830017]
[-4.91436958 -62.69778824]
[-6.43165970 -65.88436127]
[-6.75931501 -69.02000427]
[-6.06746101 -71.72090149]
[-13.03830814 -85.00274658]
[-20.00915527 -98.28458405]
[-26.75722504 -104.41670227]
[-26.98307800 -111.79185486]
[-33.77498627 -125.16608429]
[-40.56689453 -138.54031372]
[-47.35879898 -151.91455078]
[-54.15070724 -165.28877258]
[-60.94261551 -178.66299438]
[-67.73452759 -192.03723145]
[-83.07795715 -194.35214233]
[-94.10671997 -205.26753235]
[-96.58004761 -220.58622742]
[-89.54688263 -234.41786194]
[-75.71161652 -241.44389343]
[-60.39420319 -238.96267700]
[-49.48449326 -227.92828369]
[-47.17749786 -212.58366394]
[-54.36029434 -198.82913208]
[-47.56838989 -185.45491028]
[-40.77648163 -172.08067322]
[-33.98457336 -158.70645142]
[-27.19266510 -145.33222961]
[-20.40075684 -131.95799255]
[-13.60884857 -118.58376312]
[-6.72731590 -105.25543213]
[0.24353176 -91.97359467]
[7.21437931 -78.69174957]
[14.53930473 -65.60185242]
[22.21302795 -52.71332932]
[29.88674927 -39.82481003]
[37.56047440 -26.93628693]
[45.23419571 -14.04776573]
[52.90791702 -1.15924466]
[61.72731018 -0.41166273]
[69.33471680 4.37572289]
[73.96382141 12.24032402]
[74.47209930 21.48958969]
[70.62014008 30.06479454]
[77.76866913 43.25185394]
[84.91719818 56.43891144]
[92.06572723 69.62596893]
[99.21426392 82.81302643]
[106.71003723 83.06471252]
[121.70159149 83.56807709]
[129.19735718 83.81976318]
[137.21435547 71.14190674]
[145.23133850 58.46405792]
[153.24832153 45.78620529]
[161.26531982 33.10835648]
[159.15733337 17.20439529]
[170.38066101 5.74068785]
[186.32571411 7.51121044]
[194.76081848 21.15776825]
[189.21528625 36.21189117]
[173.94316101 41.12534332]
[165.92617798 53.80319214]
[157.90919495 66.48104858]
[149.89219666 79.15889740]
[141.87521362 91.83674622]
[151.82205200 103.06440735]
[165.37380981 96.63401794]
[178.92556763 90.20362854]
[188.07641602 77.29733276]
[202.89179993 78.83151245]
[216.44355774 72.40112305]
[229.99531555 65.97073364]
[243.54707336 59.54034805]
[257.05535889 53.01913452]
[270.51956177 46.40739059]
[275.38696289 31.37129974]
[289.49865723 24.25544357]
[304.48245239 29.28153419]
[311.44869995 43.46768188]
[306.26446533 58.39749527]
[292.00546265 65.21337891]
[277.13131714 59.87159729]
[263.66708374 66.48334503]
[259.05596924 72.24368286]
[249.97746277 73.09210205]
[236.42570496 79.52249146]
[222.87394714 85.95288086]
[209.32218933 92.38327026]
[201.14065552 104.82962799]
[185.35595703 103.75538635]
[171.80419922 110.18577576]
[158.25244141 116.61616516]
[127.04421997 120.55940247]
[103.84243011 106.28620911]
[102.23445129 121.19976807]
[100.62647247 136.11334229]
[99.01849365 151.02690125]
[97.41051483 165.94046021]
[95.80254364 180.85403442]
[102.01589966 195.40411377]
[92.95883942 207.22860718]
[91.35086060 222.14218140]
[100.98918152 234.37902832]
[99.14601135 249.48059082]
[87.42064667 258.59384155]
[85.81267548 273.50741577]
[84.20469666 288.42098999]
[82.59671783 303.33453369]
[88.81007385 317.88461304]
[79.75301361 329.70913696]
[78.14503479 344.62268066]
[76.53706360 359.53625488]
[74.92908478 374.44982910]
[73.42124939 389.37384033]
[72.01364136 404.30764771]
[70.60602570 419.24145508]
[69.19841003 434.17526245]
[67.79079437 449.10906982]
[66.38317871 464.04287720]
[64.97556305 478.97668457]
[63.56794739 493.91049194]
[65.96065521 500.04617310]
[65.04456329 505.63455200]
[61.91679764 509.22448730]
[60.10874557 524.11511230]
[58.30069733 539.00573730]
[67.77386475 551.37091064]
[65.72812653 566.44635010]
[53.88146591 575.40136719]
[52.07341766 590.29205322]
[64.61828613 601.64898682]
[67.88370514 618.08337402]
[60.77589035 633.07293701]
[46.27822876 640.78881836]
[44.67025375 655.70239258]
[43.06227493 670.61596680]
[41.45429611 685.52954102]
[39.84632111 700.44311523]
[38.23834229 715.35662842]
[36.63036728 730.27020264]
[42.84372330 744.82031250]
[33.78666306 756.64477539]
[32.17868423 771.55834961]
[30.57070923 786.47192383]
[40.52508545 775.25097656]
[54.26828384 769.24060059]
[69.26509857 769.54956055]
[82.74907684 776.12091064]
[92.23281860 787.74237061]
[95.96685791 802.27020264]
[93.26239014 817.02435303]
[84.61829376 829.28320312]
[71.62915802 836.78540039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[6 13]
[7 12]
[18 224]
[19 223]
[20 222]
[22 220]
[23 219]
[24 218]
[25 217]
[26 216]
[27 215]
[28 214]
[33 210]
[34 209]
[37 206]
[38 205]
[39 204]
[40 201]
[41 200]
[42 199]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[49 193]
[50 192]
[51 191]
[52 190]
[54 188]
[55 187]
[56 186]
[57 185]
[60 182]
[61 181]
[63 179]
[64 178]
[65 177]
[66 176]
[67 175]
[68 174]
[69 128]
[70 127]
[71 126]
[72 125]
[73 124]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[85 113]
[86 112]
[87 111]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
[146 172]
[147 171]
[148 170]
[150 168]
[151 167]
[152 166]
[153 165]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
