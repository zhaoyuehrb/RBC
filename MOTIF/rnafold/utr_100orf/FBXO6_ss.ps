%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAACUAGUGCGGAGGUCCGGGGAGCGGCCGCGCGUUCGGGAGCUUCGGCCCUGCGUAGGAGGCGGGUGCAGGUGUGGGUGCUGAGCCGCCCGCCGCCUGGAGGGGGAGACAGCUUCAGGACACGCAGGCCGCAGCGAGGGCCCGGGCCCUGGGGAUCCCAGGCCAUGGAUGCUCCCCACUCCAAAGCAGCCCUGGACAGCAUUAACGAGCUGCCCGAGAACAUCCUGCUGGAGCUGUUCACGCACGUGCCCGC\
CCGCCAGCUGC\
) } def
/len { sequence length } bind def

/coor [
[22.26201820 258.47854614]
[9.21206951 266.87368774]
[-6.27816010 265.96133423]
[-18.25236130 256.09228516]
[-22.10620880 241.06140137]
[-16.35782051 226.64836121]
[-3.21756744 218.39527893]
[-2.33560658 203.42123413]
[-1.45364583 188.44717407]
[-0.57168490 173.47312927]
[0.13403037 158.48974609]
[0.66340232 143.49908447]
[1.19277430 128.50843811]
[1.72214627 113.51777649]
[-6.67463350 99.97196198]
[1.99575615 84.80215454]
[-12.28096008 80.20048523]
[-26.55767632 75.59880829]
[-40.83439255 70.99713898]
[-55.11110687 66.39546967]
[-65.66466522 77.36742401]
[-79.87754059 82.64768219]
[-94.91204834 81.23915100]
[-107.79116058 73.47452545]
[-115.98804474 60.93975449]
[-117.92172241 46.15035248]
[-132.19844055 41.54868317]
[-146.47515869 36.94701004]
[-160.75186157 32.34534073]
[-175.02857971 27.74366951]
[-189.30529785 23.14199829]
[-203.60884094 18.62439919]
[-217.93872070 14.19102669]
[-232.26858521 9.75765324]
[-247.73905945 13.07053375]
[-257.61090088 1.91725051]
[-271.94076538 -2.51612210]
[-286.27066040 -6.94949484]
[-300.60052490 -11.38286781]
[-316.07098389 -8.06998730]
[-325.94284058 -19.22327042]
[-340.27270508 -23.65664291]
[-354.60260010 -28.09001541]
[-368.93246460 -32.52338791]
[-383.26232910 -36.95676041]
[-397.59219360 -41.39013290]
[-411.94790649 -45.73912430]
[-426.32894897 -50.00358582]
[-440.09997559 -42.72370148]
[-454.62365723 -47.25333405]
[-461.47903442 -60.42676544]
[-475.86007690 -64.69122314]
[-490.24111938 -68.95568848]
[-504.62216187 -73.22014618]
[-515.62377930 -65.48521423]
[-528.87792969 -65.48774719]
[-539.55853271 -73.00326538]
[-543.90502930 -85.11225128]
[-558.23486328 -89.54562378]
[-572.56475830 -93.97899628]
[-586.89459229 -98.41236877]
[-602.36511230 -95.09949493]
[-612.23693848 -106.25277710]
[-626.56683350 -110.68614960]
[-640.89666748 -115.11952209]
[-655.22656250 -119.55289459]
[-669.55645752 -123.98626709]
[-683.88629150 -128.41963196]
[-698.21618652 -132.85301208]
[-712.57189941 -137.20199585]
[-726.95294189 -141.46646118]
[-744.77404785 -136.76876831]
[-756.32464600 -149.99972534]
[-770.75488281 -154.09468079]
[-785.18505859 -158.18965149]
[-798.86291504 -150.27174377]
[-814.11163330 -154.42529297]
[-821.88446045 -168.18605042]
[-817.56994629 -183.38999939]
[-803.72778320 -191.01692200]
[-788.57025146 -186.54190063]
[-781.09014893 -172.61987305]
[-766.65991211 -168.52490234]
[-752.22967529 -164.42994690]
[-741.53845215 -170.04304504]
[-729.49859619 -166.77496338]
[-722.68847656 -155.84750366]
[-708.30743408 -151.58303833]
[-701.02618408 -152.69059753]
[-693.78277588 -147.18287659]
[-679.45294189 -142.74951172]
[-665.12304688 -138.31613159]
[-650.79321289 -133.88276672]
[-636.46331787 -129.44938660]
[-622.13342285 -125.01602173]
[-607.80358887 -120.58264923]
[-593.35809326 -124.21263123]
[-582.46124268 -112.74224091]
[-568.13140869 -108.30886841]
[-553.80151367 -103.87549591]
[-539.47161865 -99.44212341]
[-524.92663574 -107.91542053]
[-508.43334961 -103.13734436]
[-500.35769653 -87.60118866]
[-485.97665405 -83.33673096]
[-471.59561157 -79.07226562]
[-457.21456909 -74.80780792]
[-444.28610229 -82.11465454]
[-429.64093018 -77.99475098]
[-422.06448364 -64.38462830]
[-407.68344116 -60.12016678]
[-400.40222168 -61.22772217]
[-393.15881348 -55.72000504]
[-378.82894897 -51.28663254]
[-364.49908447 -46.85326004]
[-350.16921997 -42.41988754]
[-335.83935547 -37.98651505]
[-321.50946045 -33.55314255]
[-307.06396484 -37.18312836]
[-296.16714478 -25.71273804]
[-281.83728027 -21.27936554]
[-267.50741577 -16.84599304]
[-253.17753601 -12.41262054]
[-238.73204041 -16.04260635]
[-227.83520508 -4.57221746]
[-213.50534058 -0.13884483]
[-199.17547607 4.29452801]
[-191.88171387 3.27272224]
[-184.70362854 8.86528301]
[-170.42691040 13.46695423]
[-156.15019226 18.06862450]
[-141.87347412 22.67029572]
[-127.59676361 27.27196693]
[-113.32005310 31.87363815]
[-103.11376190 20.99718857]
[-89.13979340 15.60852623]
[-74.15054321 16.82643700]
[-61.12337494 24.46273994]
[-52.66924286 37.04902649]
[-50.50943756 52.11875153]
[-36.23271942 56.72042465]
[-21.95600510 61.32209396]
[-7.67928886 65.92376709]
[6.59742737 70.52543640]
[21.43548012 72.72366333]
[36.43314362 72.45893860]
[51.43080521 72.19421387]
[66.42847443 71.92948151]
[81.42613220 71.66475677]
[94.46041107 64.24131012]
[102.33923340 51.47713470]
[110.21805573 38.71295929]
[118.09687805 25.94878387]
[125.97570038 13.18460846]
[133.85452271 0.42043269]
[137.02899170 -16.23366737]
[153.91102600 -17.79356384]
[160.08337402 -2.00310898]
[146.61869812 8.29925346]
[138.73986816 21.06342888]
[130.86105347 33.82760620]
[122.98223114 46.59178162]
[115.10340881 59.35595703]
[107.22458649 72.12013245]
[117.28775024 83.24365234]
[130.77481079 76.67866516]
[144.26188660 70.11367798]
[153.28378296 57.11690903]
[168.11370850 58.50351334]
[181.60076904 51.93852615]
[190.62266541 38.94176102]
[205.45259094 40.32836533]
[218.93965149 33.76337433]
[232.42672729 27.19838524]
[245.91378784 20.63339615]
[246.31404114 5.33312178]
[253.78895569 -8.02293396]
[266.62084961 -16.36564827]
[281.86105347 -17.77792549]
[296.00750732 -11.93523502]
[305.80941772 -0.18018466]
[309.01437378 14.78600121]
[304.88592529 29.52420235]
[294.37277222 40.64768982]
[279.89071655 45.60036469]
[264.76766968 43.24414062]
[252.47877502 34.12046051]
[238.99171448 40.68545151]
[225.50465393 47.25043869]
[212.01757812 53.81542969]
[203.96037292 66.34262085]
[188.16575623 65.42559052]
[174.67869568 71.99057770]
[166.62147522 84.51776886]
[150.82687378 83.60073853]
[137.33981323 90.16572571]
[123.85274506 96.73072052]
[124.99548340 104.14315033]
[128.42370605 126.38044739]
[143.26176453 128.57867432]
[158.09982300 130.77690125]
[172.93786621 132.97512817]
[183.70323181 121.79986572]
[198.98710632 119.11976624]
[212.91252136 125.96538544]
[220.12487793 139.70443726]
[217.85086060 155.05398560]
[206.96490479 166.11180115]
[191.65286255 168.62594604]
[177.80252075 161.62966919]
[170.73963928 147.81318665]
[155.90158081 145.61495972]
[141.06353760 143.41673279]
[126.22548676 141.21849060]
[123.10257721 148.03739929]
[116.85675812 161.67520142]
[113.73384857 168.49411011]
[125.09107971 178.29273987]
[140.59419250 181.44931030]
[145.17630005 195.62159729]
[156.53353882 205.42024231]
[167.89076233 215.21887207]
[179.24800110 225.01750183]
[190.60523987 234.81614685]
[202.07696533 244.48046875]
[213.66162109 254.00915527]
[225.24627686 263.53784180]
[241.50334167 265.69180298]
[247.51557922 280.94909668]
[237.09808350 293.61434937]
[220.96751404 290.65859985]
[215.71759033 275.12249756]
[204.13293457 265.59381104]
[192.54827881 256.06512451]
[187.82398987 255.62260437]
[183.31835938 252.22972107]
[180.80659485 246.17337036]
[169.44937134 236.37474060]
[158.09213257 226.57611084]
[146.73489380 216.77746582]
[135.37767029 206.97883606]
[120.68689728 204.52311707]
[115.29244232 189.64997864]
[103.93521118 179.85134888]
[77.47473907 166.69793701]
[60.77037430 146.51559448]
[54.86310196 124.37962341]
[58.55093765 105.01032257]
[68.83695221 91.88854980]
[81.69086456 86.66242218]
[66.69319916 86.92714691]
[51.69553375 87.19187927]
[36.69786835 87.45660400]
[21.70020676 87.72132874]
[25.92349625 102.95280457]
[16.71280289 114.04714966]
[16.18342972 129.03779602]
[15.65405846 144.02845764]
[15.12468624 159.01911926]
[17.86087036 164.97743225]
[17.28814697 170.58853149]
[14.40236378 174.35508728]
[13.52040291 189.32914734]
[12.63844204 204.30319214]
[11.75648117 219.27723694]
[23.83703804 229.01580811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 265]
[8 264]
[9 263]
[10 262]
[11 259]
[12 258]
[13 257]
[14 256]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 129]
[32 127]
[33 126]
[34 125]
[36 123]
[37 122]
[38 121]
[39 120]
[41 118]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
[47 111]
[48 110]
[51 107]
[52 106]
[53 105]
[54 104]
[58 101]
[59 100]
[60 99]
[61 98]
[63 96]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 88]
[71 87]
[73 84]
[74 83]
[75 82]
[145 254]
[146 253]
[147 252]
[148 251]
[149 250]
[150 164]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
[165 197]
[166 196]
[167 195]
[169 193]
[170 192]
[172 190]
[173 189]
[174 188]
[175 187]
[199 214]
[200 213]
[201 212]
[202 211]
[217 244]
[218 243]
[220 241]
[221 240]
[222 239]
[223 238]
[224 237]
[225 234]
[226 233]
[227 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
