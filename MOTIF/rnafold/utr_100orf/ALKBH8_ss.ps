%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUUCUCCAACAUGGCCGCGCCCAGGGGAGAUGGCGUGCAAGUAUCCGCUGCGGUGUUCUGGUGCUAGAGUGGAGAGGCUGGCAAAGAAGAAGGCACACGCAUGGUGAGAAUCCGGCCUGAGCCGAAGCGGAGUUUGCUAUGGACAGCAACCAUCAAAGUAAUUACAAACUCAGUAAAACUGAGAAGAAGUUCUUAAGGAAACAGAUUAAAGCCAAGCAUACUUUGCUGAGACAUGAAG\
) } def
/len { sequence length } bind def

/coor [
[350.02597046 99.05477905]
[347.33609009 92.00314331]
[332.36767578 92.97608948]
[317.39926147 93.94904327]
[302.43084717 94.92199707]
[287.46243286 95.89494324]
[272.49401855 96.86789703]
[260.29541016 105.41443634]
[246.02243042 98.58855438]
[231.05401611 99.56150818]
[216.08561707 100.53445435]
[207.75874329 114.69260406]
[192.47758484 121.15546417]
[176.19563293 117.18975067]
[165.38543701 104.16779327]
[150.43090820 105.33496857]
[135.48428345 106.59918976]
[120.54617310 107.96040344]
[105.60806274 109.32161713]
[91.36037445 114.01239777]
[78.53529358 121.79168701]
[65.71021271 129.57096863]
[52.88513184 137.35025024]
[40.06005096 145.12954712]
[27.28573418 152.99191284]
[14.56272030 160.93702698]
[1.83970630 168.88215637]
[-5.76736116 182.75453186]
[-20.66089630 182.93305969]
[-33.38391113 190.87818909]
[-46.10692596 198.82330322]
[-49.68312073 217.44418335]
[-65.47499084 227.34919739]
[-83.17718506 222.62728882]
[-95.68965149 230.90003967]
[-100.29200745 246.26876831]
[-115.23043823 252.11880493]
[-129.04544067 243.96250916]
[-131.13934326 228.05668640]
[-119.90586853 216.60292053]
[-103.96238708 218.38757324]
[-91.44992065 210.11482239]
[-91.64968872 198.73185730]
[-86.28249359 188.55610657]
[-76.57540131 182.16127014]
[-64.86868286 181.22723389]
[-54.05204391 186.10028076]
[-41.32902908 178.15516663]
[-28.60601616 170.21005249]
[-21.90898323 156.90594482]
[-6.10541248 156.15913391]
[6.61760139 148.21401978]
[19.34061623 140.26889038]
[23.34092522 134.07312012]
[32.28076553 132.30445862]
[45.10584641 124.52517700]
[57.93092728 116.74588776]
[70.75600433 108.96660614]
[83.58108521 101.18731689]
[82.31686401 86.24068451]
[68.36735535 80.72605896]
[54.41783905 75.21143341]
[42.30827332 79.61254883]
[30.81107330 74.74790955]
[25.86662483 63.72234726]
[11.98987484 58.02709961]
[-1.88687456 52.33185577]
[-15.76362419 46.63661194]
[-29.64037323 40.94136429]
[-43.51712418 35.24612045]
[-55.62252426 44.69888687]
[-70.83471680 46.81663132]
[-85.06169128 41.02968597]
[-94.47647095 28.89471245]
[-96.54651642 13.67595863]
[-90.71500397 -0.53280777]
[-78.55058289 -9.90950108]
[-63.32541656 -11.93183708]
[-49.13499832 -6.05581713]
[-39.79648209 6.13793802]
[-37.82187653 21.36936951]
[-23.94512939 27.06461525]
[-10.06837940 32.75986099]
[3.80837059 38.45510483]
[17.68511963 44.15035248]
[31.56187057 49.84559631]
[48.81197739 46.57280731]
[59.93246460 61.26192093]
[73.88198090 66.77655029]
[87.83148956 72.29117584]
[94.87128448 74.89991760]
[100.22415924 79.02683258]
[103.61039734 84.07408142]
[104.92633057 89.40345764]
[104.24684906 94.38350677]
[119.18495941 93.02229309]
[134.12306213 91.66108704]
[142.36509705 87.77293396]
[149.26373291 90.38044739]
[164.21824646 89.21327209]
[170.52650452 76.97105408]
[181.96632385 69.49922180]
[195.49571228 68.65708160]
[207.57939148 74.55765533]
[215.11265564 85.56604004]
[230.08106995 84.59309387]
[245.04948425 83.62014008]
[258.31872559 75.00400543]
[271.52105713 81.89948273]
[286.48947144 80.92652893]
[301.45788574 79.95358276]
[316.42630005 78.98062897]
[331.39471436 78.00768280]
[346.36312866 77.03472900]
[356.89138794 55.70082474]
[377.74105835 44.72107315]
[377.93576050 29.72233772]
[378.13049316 14.72360229]
[378.32522583 -0.27513403]
[369.84298706 -14.31023121]
[377.99255371 -28.54107285]
[394.39031982 -28.32818794]
[402.16766357 -13.89057541]
[393.32394409 -0.08041267]
[393.12921143 14.91832352]
[392.93450928 29.91705894]
[392.73977661 44.91579437]
[411.09002686 54.67587662]
[421.55715942 72.63217163]
[436.53695679 71.85361481]
[451.51672363 71.07505798]
[466.49652100 70.29650116]
[481.47628784 69.51794434]
[496.45608521 68.73938751]
[511.43585205 67.96083069]
[526.41564941 67.18227386]
[539.79559326 58.73912048]
[552.90734863 65.80539703]
[567.88708496 65.02684021]
[582.86688232 64.24828339]
[597.84667969 63.46972656]
[606.23382568 59.90543365]
[613.02569580 62.77957153]
[628.01434326 62.19554138]
[643.00299072 61.61150742]
[643.98547363 49.02089310]
[646.36987305 36.61097336]
[650.12805176 24.53743935]
[655.21466064 12.95197487]
[661.56774902 2.00033498]
[669.10931396 -8.17947865]
[677.74627686 -17.45895958]
[687.37194824 -25.72071838]
[697.86688232 -32.85997009]
[709.10083008 -38.78585434]
[720.93389893 -43.42260361]
[733.21856689 -46.71050262]
[745.80163574 -48.60665894]
[758.52575684 -49.08556366]
[771.23175049 -48.13943481]
[783.76037598 -45.77832413]
[795.95446777 -42.03003693]
[807.66088867 -36.93977737]
[818.73229980 -30.56962967]
[829.02929688 -22.99778938]
[838.42181396 -14.31760216]
[846.79107666 -4.63641930]
[854.03106689 5.92573404]
[860.04949951 17.23764610]
[864.76959229 29.15854263]
[868.13049316 41.53985214]
[870.08843994 54.22703934]
[885.05682373 53.25408936]
[900.02526855 52.28113937]
[914.99365234 51.30818939]
[929.96209717 50.33523560]
[944.93048096 49.36228561]
[960.34405518 42.30130005]
[971.39599609 55.15784836]
[962.10137939 69.33692932]
[945.90344238 64.33069611]
[930.93499756 65.30364990]
[915.96661377 66.27660370]
[900.99816895 67.24954987]
[886.02978516 68.22250366]
[871.06140137 69.19544983]
[869.50634766 84.11463165]
[883.95239258 88.15342712]
[898.39843750 92.19223022]
[912.84448242 96.23102570]
[929.72668457 94.67272186]
[935.89752197 110.46375275]
[922.43188477 120.76485443]
[908.80566406 110.67707062]
[894.35961914 106.63826752]
[879.91357422 102.59947205]
[865.46752930 98.56067657]
[858.98028564 114.73430634]
[850.12640381 129.72465515]
[839.11444092 143.18833923]
[826.20239258 154.81779480]
[811.69146729 164.34834290]
[795.91918945 171.56419373]
[779.25170898 176.30332947]
[762.07489014 178.46116638]
[744.78570557 177.99279785]
[727.78302002 174.91400146]
[711.45831299 169.30067444]
[696.18658447 161.28701782]
[682.31811523 151.06234741]
[670.16979980 138.86659241]
[660.01861572 124.98464966]
[652.09472656 109.73978424]
[646.57666016 93.48606110]
[643.58697510 76.60013580]
[628.59838867 77.18416595]
[613.60974121 77.76819611]
[598.62524414 78.44950867]
[583.64544678 79.22806549]
[568.66564941 80.00662231]
[553.68585205 80.78517914]
[541.37738037 89.17264557]
[527.19421387 82.16205597]
[512.21441650 82.94061279]
[497.23461914 83.71916962]
[482.25485229 84.49772644]
[467.27505493 85.27628326]
[452.29528809 86.05484009]
[437.31549072 86.83339691]
[422.33572388 87.61195374]
[420.59161377 94.81835175]
[417.47744751 101.55836487]
[413.10815430 107.57389832]
[407.64669800 112.63376617]
[401.29821777 116.54254913]
[394.30215454 119.14816284]
[386.92327881 120.34775543]
[379.44171143 120.09177399]
[372.14218140 118.38599396]
[365.30334473 115.29145813]
[359.18698120 110.92227173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 114]
[3 113]
[4 112]
[5 111]
[6 110]
[7 109]
[9 107]
[10 106]
[11 105]
[15 100]
[16 99]
[17 97]
[18 96]
[19 95]
[20 59]
[21 58]
[22 57]
[23 56]
[24 55]
[25 53]
[26 52]
[27 51]
[29 49]
[30 48]
[31 47]
[34 42]
[35 41]
[60 90]
[61 89]
[62 88]
[65 86]
[66 85]
[67 84]
[68 83]
[69 82]
[70 81]
[116 127]
[117 126]
[118 125]
[119 124]
[129 230]
[130 229]
[131 228]
[132 227]
[133 226]
[134 225]
[135 224]
[136 223]
[138 221]
[139 220]
[140 219]
[141 218]
[143 217]
[144 216]
[145 215]
[172 186]
[173 185]
[174 184]
[175 183]
[176 182]
[177 181]
[187 197]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
