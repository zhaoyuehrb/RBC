%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGGGGGCGGGCGGAGGAAGUGAGCGCAGCGGGGAGGAAUGCGAGCGGGCGGGGCGUGUCGGCCCGGGGCGGCGGGGACAGCGGCGGGGACAGCGGCGGGCGGCUGGGACGGCGGGUGCGGCGGGGCCGAGCCCGCACGAUGCCUCACUUCACCGUGGUGCCAGUGGACGGGCCGAGGCGCGGCGACUAUGACAACCUCGAGGGGCUCAGUUGGGUGGACUACGGGGAGCGCGCCGAGC\
) } def
/len { sequence length } bind def

/coor [
[261.94897461 447.90731812]
[246.69744873 447.31304932]
[233.21815491 440.15264893]
[224.18742371 427.84780884]
[221.39834595 412.84167480]
[225.40466309 398.11373901]
[235.41091919 386.58822632]
[249.43038940 380.55355835]
[250.01441956 365.56491089]
[250.59844971 350.57629395]
[251.18247986 335.58767700]
[243.94659424 322.56878662]
[252.21534729 309.08035278]
[252.79937744 294.09170532]
[241.13453674 288.95294189]
[231.94992065 280.03570557]
[226.42178345 268.42883301]
[225.27653503 255.56889343]
[228.69551086 243.06219482]
[216.86470032 233.84091187]
[205.03388977 224.61964417]
[193.20307922 215.39836121]
[181.37226868 206.17709351]
[169.54145813 196.95581055]
[157.71064758 187.73452759]
[145.87983704 178.51325989]
[138.68716431 176.88365173]
[133.95632935 169.09468079]
[122.24621582 159.72059631]
[110.53610992 150.34652710]
[95.54748535 149.76248169]
[83.14346313 158.19696045]
[70.73944092 166.63142395]
[70.39068604 182.14459229]
[60.96336746 194.46957397]
[46.08248520 198.86718750]
[31.47004128 193.64643860]
[22.74481964 180.81483459]
[23.26184464 165.30638123]
[32.82231140 153.08438110]
[47.75002289 148.84846497]
[62.30497360 154.22741699]
[74.70899200 145.79293823]
[87.11300659 137.35847473]
[84.67533875 130.26567078]
[69.95252991 127.39534760]
[79.80000305 116.08007812]
[77.36233521 108.98728180]
[62.39392090 109.96022797]
[47.42551041 110.93318176]
[32.45709610 111.90613556]
[17.48868370 112.87908173]
[4.21943998 121.49521637]
[-8.98289776 114.59973907]
[-23.95130920 115.57269287]
[-35.57369232 126.63161469]
[-51.44601822 124.29735565]
[-59.39239883 110.36054230]
[-53.31705093 95.51232147]
[-37.88046265 91.14296722]
[-24.92426109 100.60427856]
[-9.95584774 99.63133240]
[2.24275470 91.08479309]
[16.51573372 97.91066742]
[31.48414612 96.93772125]
[46.45255661 95.96476746]
[61.42097092 94.99182129]
[76.38938141 94.01886749]
[77.93601990 86.68007660]
[81.02929688 72.00248718]
[82.57593536 64.66368866]
[69.27326965 57.73266220]
[53.45950317 58.21781921]
[45.74755478 45.47516632]
[32.44489288 38.54413986]
[18.06563759 44.68995667]
[3.11510849 40.10567093]
[-5.34751368 26.95584106]
[-3.32643723 11.44941425]
[8.22404766 0.90805215]
[23.85015488 0.30906314]
[36.17371368 9.93527126]
[39.37591934 25.24147606]
[52.67858124 32.17250443]
[67.54085541 31.19159317]
[76.20429230 44.42999649]
[89.50695801 51.36102295]
[94.67079163 45.92183304]
[83.79241180 35.59416199]
[79.53526306 21.21095276]
[94.12008667 24.71578026]
[104.99846649 35.04345322]
[110.16230011 29.60426140]
[102.55016327 16.67927551]
[94.93801880 3.75428915]
[87.32587433 -9.17069721]
[71.86801147 -10.52495670]
[60.18046188 -20.73186302]
[56.75733948 -35.86665344]
[62.91489792 -50.10968781]
[76.28543091 -57.98423767]
[91.72769165 -56.46236801]
[103.30382538 -46.12927628]
[106.56256866 -30.95824242]
[100.25086212 -16.78284073]
[107.86300659 -3.85785413]
[115.47514343 9.06713200]
[123.08728790 21.99211884]
[130.44554138 20.54088020]
[135.28988647 6.34467030]
[145.16204834 17.63840103]
[152.52030945 16.18716240]
[154.65502930 1.33984137]
[156.69332886 -13.52102375]
[158.63513184 -28.39480591]
[160.57693481 -43.26858902]
[162.51873779 -58.14237213]
[164.46055603 -73.01615143]
[166.40235901 -87.88993835]
[160.51663208 -102.57560730]
[169.83642578 -114.19416046]
[171.77822876 -129.06794739]
[173.72003174 -143.94172668]
[175.66183472 -158.81550598]
[171.71679688 -175.30407715]
[186.46890259 -183.65943909]
[198.58151245 -171.79684448]
[190.53561401 -156.87370300]
[188.59381104 -141.99992371]
[186.65200806 -127.12614441]
[184.71020508 -112.25235748]
[190.73481750 -98.63056183]
[181.27613831 -85.94813538]
[179.33433533 -71.07434845]
[177.39253235 -56.20056534]
[175.45072937 -41.32678604]
[173.50892639 -26.45300293]
[171.56712341 -11.57922077]
[173.81304932 -4.55455351]
[169.50234985 3.47456384]
[167.36763000 18.32188606]
[174.24392700 107.96884155]
[119.91018677 138.63641357]
[131.62030029 148.01049805]
[143.33039856 157.38456726]
[155.10110474 166.68244934]
[166.93191528 175.90371704]
[178.76272583 185.12500000]
[190.59353638 194.34628296]
[202.42434692 203.56755066]
[214.25515747 212.78883362]
[226.08596802 222.01010132]
[237.91677856 231.23138428]
[258.91162109 219.70581055]
[284.41415405 223.29164124]
[303.99826050 242.67979431]
[318.49551392 238.82885742]
[332.99276733 234.97793579]
[344.34402466 223.95706177]
[358.63110352 228.16758728]
[373.12835693 224.31665039]
[387.62561035 220.46572876]
[402.12286377 216.61480713]
[416.62011719 212.76387024]
[423.74667358 202.02963257]
[435.88510132 199.11268616]
[446.41244507 205.04447937]
[460.95846558 201.38206482]
[475.50448608 197.71965027]
[484.93658447 184.74217224]
[500.96939087 184.16912842]
[511.30392456 196.44012451]
[508.01239014 212.14187622]
[493.61978149 219.22937012]
[479.16690063 212.26567078]
[464.62088013 215.92808533]
[450.07485962 219.59049988]
[438.14288330 232.47091675]
[420.47103882 227.26112366]
[405.97378540 231.11206055]
[391.47653198 234.96298218]
[376.97927856 238.81390381]
[362.48202515 242.66484070]
[352.16772461 253.41026306]
[336.84368896 249.47518921]
[322.34643555 253.32611084]
[307.84918213 257.17703247]
[305.73620605 264.37322998]
[320.30496216 267.94409180]
[334.87374878 271.51492310]
[349.66000366 268.99169922]
[359.63061523 280.19824219]
[355.40444946 294.59057617]
[340.95782471 298.62725830]
[329.88336182 288.51062012]
[315.69677734 283.63812256]
[301.51022339 278.76562500]
[299.39721680 285.96182251]
[309.51110840 297.03924561]
[319.62500000 308.11666870]
[329.73892212 319.19406128]
[339.85281372 330.27148438]
[350.03839111 341.28302002]
[360.29522705 352.22821045]
[377.79675293 352.48159790]
[389.46261597 365.07339478]
[388.42260742 381.86840820]
[398.82067871 392.67950439]
[409.21875000 403.49063110]
[419.61682129 414.30175781]
[435.51315308 418.33148193]
[439.71044922 434.18438721]
[427.89089966 445.55236816]
[412.21343994 440.74099731]
[408.80569458 424.69979858]
[398.40762329 413.88870239]
[388.00958252 403.07757568]
[377.61151123 392.26644897]
[364.83267212 393.82189941]
[353.31622314 387.64666748]
[347.36572266 375.79449463]
[349.35003662 362.48504639]
[339.09320068 351.53985596]
[332.24047852 348.81402588]
[328.77539062 340.38537598]
[318.66149902 329.30798340]
[308.54760742 318.23056030]
[298.43368530 307.15313721]
[288.31979370 296.07574463]
[277.47293091 296.76058960]
[267.78799438 294.67575073]
[267.20397949 309.66436768]
[274.39810181 323.75534058]
[266.17111206 336.17169189]
[265.58706665 351.16033936]
[265.00305176 366.14895630]
[264.41900635 381.13757324]
[277.92639160 388.24484253]
[287.00549316 400.51400757]
[289.85366821 415.50903320]
[285.90536499 430.25265503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 237]
[9 236]
[10 235]
[11 234]
[13 232]
[14 231]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[26 146]
[28 145]
[29 144]
[30 143]
[31 44]
[32 43]
[33 42]
[48 68]
[49 67]
[50 66]
[51 65]
[52 64]
[54 62]
[55 61]
[71 87]
[72 86]
[74 84]
[75 83]
[93 108]
[94 107]
[95 106]
[96 105]
[112 141]
[113 140]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[121 131]
[122 130]
[123 129]
[124 128]
[156 187]
[157 186]
[158 185]
[160 183]
[161 182]
[162 181]
[163 180]
[164 179]
[167 177]
[168 176]
[169 175]
[198 229]
[199 228]
[200 227]
[201 226]
[202 225]
[203 223]
[204 222]
[207 218]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
