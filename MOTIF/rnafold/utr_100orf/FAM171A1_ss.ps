%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGAGAUGAGCAGGUCCGCGACGCUGCUGCUGUGCCUGCUGGGCUGCCACGUCUGGAAGGCGGUGACCAAGACGCUGCGGGAGCCCGGCGCCGGAGCCCAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[77.34059143 118.84159088]
[63.74597549 125.18086243]
[50.15135956 131.52014160]
[36.55674362 137.85940552]
[27.31946373 150.70399475]
[12.51471424 149.07038879]
[-1.07990289 155.40966797]
[-4.27483749 166.01083374]
[-12.66284561 172.89392090]
[-23.24273872 173.91519165]
[-32.40235519 168.97370911]
[-46.34256744 174.51179504]
[-60.28277969 180.04989624]
[-74.22299194 185.58798218]
[-88.16320801 191.12606812]
[-102.02140045 196.86633301]
[-115.79463959 202.80752563]
[-129.56788635 208.74871826]
[-141.71679688 220.57412720]
[-156.44320679 212.17359924]
[-152.44766235 195.69718933]
[-135.50907898 194.97547913]
[-121.73583984 189.03428650]
[-107.96259308 183.09307861]
[-102.99063873 177.46702576]
[-93.70129395 177.18586731]
[-79.76108551 171.64776611]
[-65.82086945 166.10968018]
[-51.88065720 160.57157898]
[-37.94044495 155.03349304]
[-27.27730370 139.01380920]
[-7.41917658 141.81504822]
[6.17543983 135.47576904]
[14.44034100 123.08462524]
[30.21747017 124.26479340]
[43.81208801 117.92552185]
[57.40670395 111.58624268]
[71.00131989 105.24697113]
[73.54051208 87.02503967]
[86.39247894 73.86019135]
[104.54807281 70.88352203]
[120.93103027 79.25521088]
[133.92140198 71.75521088]
[146.91178894 64.25521088]
[159.90217590 56.75521088]
[172.89254761 49.25521088]
[185.88293457 41.75521088]
[191.86505127 34.64289093]
[199.36201477 34.23229599]
[212.56503296 27.11329079]
[221.77209473 11.24959469]
[239.22505188 12.26433659]
[252.21543884 4.76433611]
[265.20581055 -2.73566389]
[278.19619751 -10.23566341]
[286.27883911 -23.83644867]
[301.16964722 -23.49938583]
[314.16003418 -30.99938583]
[315.43438721 -48.95575333]
[327.04000854 -62.51303101]
[344.28259277 -66.47139740]
[360.35467529 -59.45754242]
[372.88699341 -67.70018005]
[385.41931152 -75.94281006]
[397.95162964 -84.18544769]
[410.48394775 -92.42808533]
[423.01626587 -100.67071533]
[424.65185547 -116.22252655]
[435.93713379 -127.04733276]
[451.54354858 -128.03398132]
[464.10223389 -118.71660614]
[467.68338013 -103.49459076]
[460.59600830 -89.55531311]
[446.18664551 -83.48046112]
[431.25891113 -88.13839722]
[418.72659302 -79.89576721]
[406.19427490 -71.65312958]
[393.66195679 -63.41049576]
[381.12963867 -55.16786194]
[368.59732056 -46.92522812]
[369.83129883 -34.67380524]
[365.65667725 -23.01233292]
[356.82464600 -14.22480583]
[345.00494385 -10.06077671]
[332.47045898 -11.38724899]
[321.66003418 -18.00900459]
[308.66964722 -10.50900459]
[301.51614380 2.55532956]
[285.69619751 2.75471711]
[272.70581055 10.25471687]
[259.71542358 17.75471687]
[246.72505188 25.25471687]
[243.23854065 36.93919373]
[232.34487915 43.26368332]
[219.68403625 40.31631088]
[206.48101807 47.43531799]
[193.38293457 54.74559402]
[180.39254761 62.24559402]
[167.40217590 69.74559021]
[154.41178894 77.24559021]
[141.42140198 84.74559021]
[128.43103027 92.24559021]
[129.25238037 103.57099915]
[125.73064423 114.36621857]
[118.38866425 123.02848816]
[108.31652832 128.27171326]
[97.00962830 129.31742859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[4 35]
[6 33]
[7 32]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 24]
[17 23]
[18 22]
[42 102]
[43 101]
[44 100]
[45 99]
[46 98]
[47 97]
[49 96]
[50 95]
[52 92]
[53 91]
[54 90]
[55 89]
[57 87]
[58 86]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
