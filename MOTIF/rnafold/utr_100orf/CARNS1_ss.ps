%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGCCACUGCCACCGCCGCCGCCGCUGCAUCCCGCCCGGUCCGAGUCCGCCCGCCACGCCCGCCGAGCCGCUGCCGCCGCCAGUCUCUCAGCCACUCCACCCACGAGAUGCUCUCCCUGGAUCCAUCGGGUCCCGAGUGGGAUUGCCCACUGGGCUCCAAGGACCUGGAGGAAGAGGGCCCCUGGGGAGGGGGCUCUGGCCUGCCGC\
) } def
/len { sequence length } bind def

/coor [
[97.55430603 801.24957275]
[97.55430603 786.24957275]
[89.81700897 773.52227783]
[97.55430603 759.72210693]
[97.55430603 744.72210693]
[97.33097839 729.72381592]
[96.88437653 714.73040771]
[96.43776703 699.73706055]
[95.99116516 684.74371338]
[85.00782776 674.74865723]
[84.34132385 659.54962158]
[94.89957428 648.09704590]
[94.45296478 633.10369873]
[94.00635529 618.11035156]
[85.89354706 605.61907959]
[93.21653748 591.59466553]
[92.76993561 576.60131836]
[84.65712738 564.11004639]
[91.98011017 550.08563232]
[91.53350830 535.09228516]
[88.19224548 528.50006104]
[91.19354248 519.87274170]
[90.97021484 504.87442017]
[90.30043030 489.88937378]
[89.18478394 474.93090820]
[88.06912994 459.97247314]
[84.43684387 453.53598022]
[87.04991913 444.78329468]
[86.15710449 429.80987549]
[75.07215881 424.86019897]
[67.09635925 415.61251831]
[63.78977203 403.78173828]
[65.83900452 391.59649658]
[72.91568756 381.37939453]
[83.72730255 375.10430908]
[83.28069305 360.11096191]
[75.16788483 347.61968994]
[82.49087524 333.59527588]
[82.04427338 318.60192871]
[73.93146515 306.11065674]
[81.25444794 292.08624268]
[80.80784607 277.09289551]
[80.36123657 262.09954834]
[79.91463470 247.10620117]
[79.46802521 232.11283875]
[78.68670654 217.13320923]
[77.57105255 202.17475891]
[76.45540619 187.21630859]
[75.33975983 172.25784302]
[74.22410583 157.29939270]
[73.10845947 142.34094238]
[63.11028671 131.15896606]
[48.36932373 128.38336182]
[35.41252518 137.02969360]
[20.50263023 134.00483704]
[12.33952332 121.59922028]
[-2.40143991 118.82360840]
[-19.08586311 121.83464813]
[-26.59793854 106.63579559]
[-14.07261372 95.20983887]
[0.37417117 104.08264160]
[15.11513424 106.85825348]
[27.23103523 98.27102661]
[42.22000504 100.87590027]
[51.14493561 113.64239502]
[65.88589478 116.41800690]
[69.47357941 109.83176422]
[80.23663330 90.07305145]
[69.90996552 79.19371796]
[59.58329391 68.31438446]
[44.01705551 67.73994446]
[33.69932556 56.55964661]
[34.34289169 41.72315979]
[24.01622391 30.84382439]
[13.68955517 19.96448898]
[3.28218198 9.16233349]
[-7.20531940 -1.56204641]
[-23.13456917 -5.45961714]
[-27.46340370 -21.27711487]
[-15.73869228 -32.74285126]
[-0.02181034 -28.06186295]
[3.51906061 -12.04954720]
[14.00656128 -1.32516778]
[20.93062973 1.25922489]
[24.56888962 9.63782120]
[34.89555740 20.51715469]
[45.22222519 31.39649010]
[60.07209778 31.52660179]
[70.69979095 42.41268539]
[70.46263123 57.98771667]
[80.78929901 68.86705017]
[91.11596680 79.74638367]
[104.92014313 73.87742615]
[104.25035858 58.89238358]
[103.58057404 43.90734482]
[92.19976807 33.27179337]
[91.73397827 18.06529045]
[101.94348907 7.28097391]
[101.27370453 -7.70406485]
[100.60391235 -22.68910408]
[88.07878876 -32.05153656]
[84.55238342 -47.28631592]
[91.68975830 -61.20004272]
[106.12087250 -67.22308350]
[121.03178406 -62.51153946]
[129.38201904 -49.29006195]
[127.22886658 -33.80142593]
[115.58895111 -23.35888863]
[116.25874329 -8.37384987]
[116.92852783 6.61118889]
[128.05944824 16.44165421]
[128.95217896 31.62907219]
[118.56561279 43.23756027]
[119.23539734 58.22259903]
[119.90518188 73.20764160]
[127.00640869 75.62063599]
[131.83241272 61.41818237]
[136.65864563 47.21580505]
[150.86093140 52.04227448]
[146.03486633 66.24417877]
[141.20886230 80.44663239]
[148.31008911 82.85963440]
[157.97090149 71.38493347]
[167.63171387 59.91023254]
[177.29252625 48.43553162]
[186.95333862 36.96083450]
[196.61415100 25.48613358]
[202.19007874 9.47534370]
[219.11872864 10.40113449]
[222.91543579 26.92449379]
[208.08885193 35.14694214]
[198.42803955 46.62164307]
[188.76722717 58.09634399]
[179.10641479 69.57104492]
[169.44560242 81.04574585]
[159.78479004 92.52044678]
[164.08407593 98.66586304]
[172.68263245 110.95670319]
[176.98191833 117.10211945]
[191.07305908 111.96015930]
[205.16419983 106.81819916]
[219.25534058 101.67623901]
[233.34648132 96.53427887]
[247.43762207 91.39231873]
[257.54788208 78.48051453]
[273.74481201 81.04794312]
[279.36639404 96.45346069]
[268.62963867 108.84918213]
[252.57958984 105.48345947]
[238.48844910 110.62541962]
[224.39730835 115.76737976]
[210.30616760 120.90933990]
[196.21502686 126.05130005]
[182.12388611 131.19326782]
[88.06690979 141.22529602]
[89.18256378 156.18374634]
[90.29821014 171.14219666]
[91.41385651 186.10064697]
[92.52951050 201.05911255]
[93.64515686 216.01756287]
[96.58554077 220.33047485]
[97.48737335 224.88459778]
[96.60012817 228.86300659]
[94.46137238 231.66624451]
[94.90798187 246.65959167]
[95.35458374 261.65295410]
[95.80119324 276.64630127]
[96.24779510 291.63964844]
[104.39255524 305.20333862]
[97.03762054 318.15533447]
[97.48422241 333.14868164]
[105.62897491 346.71237183]
[98.27404785 359.66436768]
[98.72064972 374.65771484]
[113.99824524 384.42257690]
[120.30059814 401.25588989]
[115.28102875 418.35134888]
[101.13050842 428.91705322]
[102.02332306 443.89047241]
[103.02758789 458.85681152]
[104.14323425 473.81527710]
[105.25888062 488.77371216]
[107.82983398 492.27288818]
[109.03260040 496.03027344]
[108.95401001 499.58404541]
[107.82197571 502.54800415]
[105.96855164 504.65109253]
[106.19187927 519.64941406]
[106.52685547 534.64569092]
[106.97346497 549.63903809]
[115.11821747 563.20269775]
[107.76328278 576.15472412]
[108.20988464 591.14807129]
[116.35463715 604.71173096]
[108.99971008 617.66375732]
[109.44631195 632.65710449]
[109.89292145 647.65045166]
[121.11412048 658.45428467]
[121.35345459 673.66601562]
[110.98451233 684.29711914]
[111.43112183 699.29046631]
[111.87772369 714.28381348]
[112.32433319 729.27716064]
[115.46845245 735.09320068]
[115.23799133 740.77154541]
[112.55430603 744.72210693]
[112.55430603 759.72210693]
[120.29161072 773.52227783]
[112.55430603 786.24957275]
[112.55430603 801.24957275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[4 207]
[5 206]
[6 203]
[7 202]
[8 201]
[9 200]
[12 197]
[13 196]
[14 195]
[16 193]
[17 192]
[19 190]
[20 189]
[22 188]
[23 187]
[24 182]
[25 181]
[26 180]
[28 179]
[29 178]
[35 174]
[36 173]
[38 171]
[39 170]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[46 160]
[47 159]
[48 158]
[49 157]
[50 156]
[51 155]
[52 66]
[53 65]
[56 62]
[57 61]
[68 92]
[69 91]
[70 90]
[73 87]
[74 86]
[75 85]
[76 83]
[77 82]
[93 115]
[94 114]
[95 113]
[98 110]
[99 109]
[100 108]
[122 136]
[123 135]
[124 134]
[125 133]
[126 132]
[127 131]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
