%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGGUGAAGCGCGGAGGGCGGCGCGGGCACCGGGGCCGGGCCGGGGCUGCAGCCGCAGCGGCCAUGGGGGCCCUGACGAGCCGGCAGCACGCGGGCGUGGAGGAGGUGGACAUCCCGUCUAAUUCCGUGUACCGCUACCCGCCCAAGUCCGGAAGCUAUUUUG\
) } def
/len { sequence length } bind def

/coor [
[22.80922318 240.78916931]
[23.99997902 225.83650208]
[28.95876884 211.67886353]
[17.68878937 221.57774353]
[6.41881180 231.47660828]
[-4.85116625 241.37547302]
[-10.11364174 256.29583740]
[-24.78208160 258.88159180]
[-36.05205917 268.78045654]
[-47.32203674 278.67932129]
[-58.59201813 288.57818604]
[-69.86199188 298.47705078]
[-70.66094971 315.93341064]
[-83.57066345 327.20413208]
[-100.30333710 325.70022583]
[-111.38846588 335.80566406]
[-122.47360229 345.91110229]
[-133.55873108 356.01654053]
[-131.70796204 371.42285156]
[-139.29562378 384.95825195]
[-153.40412903 391.41809082]
[-168.60847473 388.31845093]
[-179.06225586 376.85119629]
[-180.74580383 361.42572021]
[-173.01174927 347.97341919]
[-158.83398438 341.66702271]
[-143.66416931 344.93139648]
[-132.57904053 334.82598877]
[-121.49390411 324.72055054]
[-110.40876770 314.61511230]
[-111.61717224 301.76379395]
[-105.09514618 290.39947510]
[-93.03607178 284.79531860]
[-79.76086426 287.20709229]
[-68.49088287 277.30819702]
[-57.22090530 267.40933228]
[-45.95092773 257.51046753]
[-34.68095016 247.61160278]
[-30.22457886 233.39929199]
[-14.75003433 230.10549927]
[-3.48005605 220.20661926]
[7.78992224 210.30775452]
[19.05990028 200.40888977]
[28.09942055 188.43862915]
[34.53622818 174.88992310]
[40.97303772 161.34121704]
[47.40984726 147.79251099]
[47.44003677 140.37231445]
[54.09282684 134.05458069]
[60.77890396 120.62713623]
[67.46498108 107.19969177]
[67.60357666 92.20033264]
[61.16676712 78.65161896]
[54.72995758 65.10291290]
[48.29314804 51.55420685]
[41.85633850 38.00549698]
[26.46428680 27.93086052]
[28.50332069 10.51755714]
[21.81724548 -2.90989208]
[15.00738716 -16.27499008]
[8.07432842 -29.57659531]
[1.01866174 -42.81357193]
[-6.15901184 -55.98479080]
[-13.33668518 -69.15601349]
[-20.21838379 -75.22359467]
[-20.52273941 -82.63760376]
[-27.45579720 -95.93920898]
[-34.38885498 -109.24081421]
[-41.32191467 -122.54241943]
[-56.13166046 -128.71096802]
[-60.40391159 -144.17471313]
[-50.86136246 -157.07119751]
[-34.82424164 -157.50733948]
[-24.59485054 -145.14857483]
[-28.02030945 -129.47547913]
[-21.08724976 -116.17387390]
[-14.15419197 -102.87226868]
[-7.22113371 -89.57066345]
[-0.16546665 -76.33368683]
[7.01220703 -63.16246414]
[14.18988037 -49.99124527]
[20.17519760 -45.60534286]
[21.37593460 -36.50965500]
[28.30899239 -23.20804787]
[34.21224213 -18.71229172]
[35.24469376 -9.59596729]
[41.93077087 3.83148193]
[53.31746674 7.98657513]
[58.98811722 19.15150452]
[55.40504837 31.56868744]
[61.84185791 45.11739731]
[68.27866364 58.66610336]
[74.71547699 72.21481323]
[81.15228271 85.76351929]
[92.79591370 79.13576508]
[105.25593567 80.15863800]
[114.26274872 87.47978973]
[128.52859497 82.84452820]
[142.79444885 78.20927429]
[157.06028748 73.57402039]
[171.28269958 68.80715179]
[185.46046448 63.90906906]
[199.63821411 59.01099014]
[213.81597900 54.11290741]
[227.99372864 49.21482849]
[242.17149353 44.31674576]
[256.34924316 39.41866684]
[270.52700806 34.52058411]
[282.24295044 20.33783722]
[299.32369995 24.29117775]
[313.40850830 19.13194466]
[327.49334717 13.97271061]
[341.57815552 8.81347656]
[355.66299438 3.65424299]
[369.74780273 -1.50499094]
[377.77526855 -15.39526081]
[393.66091919 -17.63700676]
[405.21865845 -6.51055098]
[403.58239746 9.44883919]
[390.00729370 17.99848747]
[374.90704346 12.57983494]
[360.82223511 17.73906898]
[346.73739624 22.89830208]
[332.65258789 28.05753517]
[318.56774902 33.21677017]
[304.48291016 38.37600327]
[299.09338379 49.23300552]
[287.36953735 53.63340378]
[275.42507935 48.69834137]
[261.24731445 53.59642410]
[247.06956482 58.49450302]
[232.89181519 63.39258575]
[218.71405029 68.29066467]
[204.53630066 73.18874359]
[190.35853577 78.08683014]
[176.18078613 82.98490906]
[170.86450195 88.16152954]
[161.69554138 87.83986664]
[147.42970276 92.47512054]
[133.16384888 97.11038208]
[118.89800262 101.74563599]
[112.77301025 116.06719208]
[97.02159119 121.87107849]
[80.89242554 113.88576508]
[74.20635223 127.31321716]
[67.52027893 140.74066162]
[60.95855713 154.22932434]
[54.52174759 167.77803040]
[48.08493805 181.32673645]
[41.64812851 194.87544250]
[53.90742874 186.23197937]
[67.96333313 180.99446106]
[82.88950348 179.50805664]
[97.70226288 181.87074280]
[111.42538452 187.92680359]
[123.15447998 197.27711487]
[132.11656189 209.30546570]
[137.72097778 223.21914673]
[139.59840393 238.10118103]
[137.62509155 252.97082520]
[131.93109131 266.84808350]
[122.89167786 278.81842041]
[111.10255432 288.09292603]
[97.34067535 294.06039429]
[82.51300049 296.32754517]
[67.59671783 294.74496460]
[53.57486725 289.41696167]
[41.37153625 280.69467163]
[31.79096603 269.15286255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 43]
[4 42]
[5 41]
[6 40]
[8 38]
[9 37]
[10 36]
[11 35]
[12 34]
[15 30]
[16 29]
[17 28]
[18 27]
[44 150]
[45 149]
[46 148]
[47 147]
[49 146]
[50 145]
[51 144]
[52 94]
[53 93]
[54 92]
[55 91]
[56 90]
[58 87]
[59 86]
[60 84]
[61 83]
[62 81]
[63 80]
[64 79]
[66 78]
[67 77]
[68 76]
[69 75]
[97 141]
[98 140]
[99 139]
[100 138]
[101 136]
[102 135]
[103 134]
[104 133]
[105 132]
[106 131]
[107 130]
[108 129]
[110 126]
[111 125]
[112 124]
[113 123]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
