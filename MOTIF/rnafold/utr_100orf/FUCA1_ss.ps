%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:07:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCCAAUCGUUAGUCAGAGUGGGCGGAGCCGCCCGCGGGCACCUGCGCGUUAAGAGUGGGCCGCGUCGCUGAGGGGUAGCGAUGCGGGCUCCGGGGAUGAGGUCGCGGCCGGCGGGUCCCGCGCUGUUGCUGCUGCUGCUCUUCCUCGGAGCGGCCGAGUCGGUGCGUCGGGCCCAGCCUC\
) } def
/len { sequence length } bind def

/coor [
[93.39754486 283.47192383]
[105.21543121 273.41622925]
[103.93644714 258.47085571]
[102.65746307 243.52546692]
[101.37847900 228.58009338]
[100.09948730 213.63471985]
[87.27280426 206.11048889]
[81.26515961 192.31295776]
[84.57263184 177.44978333]
[96.13141632 167.26641846]
[94.85242462 152.32104492]
[93.57344055 137.37567139]
[87.53446198 133.42687988]
[82.71057129 128.60835266]
[79.20165253 123.22756958]
[66.80120850 131.66728210]
[54.40076065 140.10700989]
[52.98458481 150.92172241]
[45.98392868 158.99674988]
[35.90279388 161.81361389]
[26.14895821 158.67160034]
[13.46759796 166.68302917]
[0.78623813 174.69447327]
[-11.89512157 182.70590210]
[-24.57648087 190.71734619]
[-37.25784302 198.72877502]
[-49.93920135 206.74021912]
[-57.08347321 221.50135803]
[-73.45659637 222.42478943]
[-82.21531677 208.56056213]
[-74.34940338 194.17100525]
[-57.95063782 194.05885315]
[-45.26927948 186.04742432]
[-32.58791733 178.03598022]
[-19.90655899 170.02455139]
[-7.22519827 162.01310730]
[5.45616150 154.00167847]
[18.13752174 145.99023438]
[25.82591438 128.26338196]
[45.96104050 127.70656586]
[58.36148834 119.26683807]
[70.76193237 110.82711792]
[64.40998840 97.00579834]
[65.11803436 79.91116333]
[50.54452896 76.35969543]
[35.97102356 72.80822754]
[21.39751625 69.25675964]
[6.82400990 65.70529175]
[-4.28117752 76.41409302]
[-19.41750336 79.39657593]
[-33.75502014 73.70103455]
[-42.71868134 61.14490891]
[-43.44821167 45.73480225]
[-35.71081924 32.38803101]
[-21.97548485 25.36349487]
[-6.62509775 26.90270233]
[5.44208765 36.51449585]
[10.37547588 51.13179016]
[24.94898224 54.68325424]
[39.52248764 58.23472214]
[54.09599686 61.78618622]
[68.66950226 65.33765411]
[77.52767181 53.23257828]
[69.73390961 40.41628647]
[61.94015121 27.59999466]
[54.14638901 14.78370380]
[46.35263062 1.96741283]
[38.55887222 -10.84887791]
[30.76511192 -23.66516876]
[22.97135353 -36.48146057]
[15.17759418 -49.29775238]
[7.38383484 -62.11404419]
[-0.40992436 -74.93033600]
[-15.59366131 -80.11045837]
[-20.87473679 -95.25937653]
[-12.20196247 -108.75614166]
[3.77165198 -110.24717712]
[14.79251671 -98.58869934]
[12.40636635 -82.72409058]
[20.20012665 -69.90779877]
[27.99388504 -57.09151077]
[35.78764343 -44.27521896]
[43.58140182 -31.45892906]
[51.37516403 -18.64263725]
[59.16892242 -5.82634640]
[66.96268463 6.98994446]
[74.75643921 19.80623627]
[82.55020142 32.62252808]
[90.34395599 45.43881607]
[104.91746521 48.99028397]
[117.73375702 41.19652557]
[130.55004883 33.40276718]
[143.36633301 25.60900688]
[156.18263245 17.81524658]
[168.99891663 10.02148819]
[181.81521606 2.22772861]
[194.63150024 -5.56603050]
[207.44779968 -13.35978985]
[220.26408386 -21.15354919]
[228.03504944 -34.93479538]
[242.92964172 -34.93678284]
[255.74594116 -42.73054123]
[268.56222534 -50.52430344]
[281.24359131 -58.53573990]
[293.78631592 -66.76251984]
[301.08224487 -80.80104065]
[315.96810913 -81.31154633]
[328.51083374 -89.53832245]
[341.05355835 -97.76509857]
[353.59628296 -105.99187469]
[366.13903809 -114.21865845]
[378.53945923 -122.65837860]
[390.79400635 -131.30857849]
[403.04855347 -139.95878601]
[415.30313110 -148.60899353]
[427.55767822 -157.25920105]
[428.68106079 -172.85636902]
[439.60437012 -184.04635620]
[455.16992188 -185.54556274]
[468.02813721 -176.64611816]
[472.10778809 -161.55006409]
[465.48254395 -147.38531494]
[451.28070068 -140.84001160]
[436.20785522 -145.00465393]
[423.95330811 -136.35444641]
[411.69876099 -127.70423889]
[399.44421387 -119.05403137]
[387.18966675 -110.40383148]
[385.50781250 -105.91070557]
[380.97216797 -102.43685913]
[374.36581421 -101.67592621]
[361.82305908 -93.44914246]
[349.28033447 -85.22236633]
[336.73760986 -76.99559021]
[324.19488525 -68.76881409]
[317.79608154 -55.31872177]
[302.01309204 -54.21978378]
[289.47036743 -45.99300766]
[287.63607788 -41.55992508]
[282.98449707 -38.24295425]
[276.35598755 -37.70801163]
[263.53970337 -29.91425133]
[250.72340393 -22.12049294]
[243.86915588 -8.89670658]
[228.05784607 -8.33725834]
[215.24154663 -0.54349881]
[202.42526245 7.25026035]
[189.60897827 15.04401970]
[176.79267883 22.83777809]
[163.97639465 30.63153839]
[151.16009521 38.42529678]
[138.34381104 46.21905518]
[125.52751923 54.01281738]
[112.71122742 61.80657578]
[136.58453369 86.23435974]
[132.72604370 119.16370392]
[143.33264160 129.77030945]
[153.93923950 140.37690735]
[164.54585266 150.98350525]
[180.02120972 157.90806580]
[177.65127563 174.69555664]
[160.86380005 177.06547546]
[153.93923950 161.59011841]
[143.33264160 150.98350525]
[132.72604370 140.37690735]
[122.11943817 129.77030945]
[108.51881409 136.09667969]
[109.79779816 151.04205322]
[111.07678986 165.98742676]
[124.19775391 174.05876160]
[129.98254395 188.14384460]
[126.40660095 202.76152039]
[115.04486084 212.35574341]
[116.32385254 227.30111694]
[117.60283661 242.24649048]
[118.88182068 257.19186401]
[120.16080475 272.13723755]
[133.51542664 280.03872681]
[139.64424133 294.29415894]
[136.19059753 309.42202759]
[124.48248291 319.60531616]
[109.02191925 320.92840576]
[95.75379944 312.88250732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[5 174]
[6 173]
[10 169]
[11 168]
[12 167]
[15 42]
[16 41]
[17 40]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[72 80]
[73 79]
[90 154]
[91 153]
[92 152]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[98 146]
[99 145]
[101 143]
[102 142]
[103 141]
[104 138]
[105 137]
[107 135]
[108 134]
[109 133]
[110 132]
[111 131]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[156 166]
[157 165]
[158 164]
[159 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
