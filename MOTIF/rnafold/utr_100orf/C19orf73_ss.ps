%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:48:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGUCACCUGGAGCGAGUAGCGCGCGGCGUGGAACGCGAGUCGCGACCCCGGCUCCCGGCAGUGGCGCGCACUAGCCCUCGCGCCGCACGGGACACGAGGGCUGGGCGGGCAGCGGGAUGAGGCUAAAGGUUGGAUUUCAAGGCGGGGGCUGCUUCCGGAAAGACGCGCUGUGUUUGGAAGGUGGAGUGAGCGCCCGGUGGGCGAGGGCACCUCAUU\
) } def
/len { sequence length } bind def

/coor [
[219.85299683 273.20895386]
[214.53691101 267.69500732]
[210.35580444 261.26629639]
[207.46395874 254.15342712]
[205.96931458 246.61239624]
[205.92944336 238.91528320]
[207.34941101 231.34053040]
[210.18133545 224.16282654]
[214.32615662 217.64314270]
[204.46633911 206.33897400]
[194.60652161 195.03482056]
[184.74668884 183.73066711]
[174.88687134 172.42651367]
[171.41889954 171.82145691]
[168.07063293 169.51014709]
[165.63919067 165.56660461]
[164.85884094 160.41735840]
[155.49447632 148.69947815]
[146.13012695 136.98159790]
[136.76576233 125.26371002]
[127.40140533 113.54582977]
[118.03704834 101.82794952]
[107.86298370 114.58218384]
[93.06130219 113.30389404]
[80.40561676 121.35582733]
[67.74993134 129.40776062]
[55.09424210 137.45968628]
[42.43855667 145.51161194]
[29.78286934 153.56355286]
[22.29283905 167.49948120]
[7.40133524 167.80335999]
[-5.25435162 175.85528564]
[-10.12565422 191.14089966]
[-25.16442108 196.72795105]
[-38.83419800 188.33052063]
[-40.64870071 172.39041138]
[-29.21599770 161.13549805]
[-13.30628300 163.19960022]
[-0.65059608 155.14767456]
[5.93421459 141.78767395]
[21.73093796 140.90786743]
[34.38662720 132.85592651]
[47.04231262 124.80400085]
[59.69799805 116.75206757]
[72.35368347 108.70013428]
[85.00936890 100.64820862]
[91.10157013 86.02557373]
[108.37148285 83.91912079]
[103.71576691 69.65993500]
[99.06005096 55.40075302]
[94.40433502 41.14156723]
[89.74861908 26.88238335]
[78.11013794 16.16528130]
[81.51500702 1.66507053]
[76.85929108 -12.59411335]
[38.92928696 -30.92643738]
[29.90492630 -42.90812683]
[20.88056564 -54.88981628]
[11.85620499 -66.87150574]
[2.28172135 -65.38806152]
[-7.11968184 -67.47779083]
[-15.06807327 -72.81306458]
[-20.49707413 -80.62737274]
[-22.69685936 -89.82521820]
[-21.40674973 -99.13564301]
[-16.84535217 -107.28778839]
[-25.16772079 -119.76730347]
[-39.26157761 -126.95574951]
[-39.88579941 -141.83726501]
[-48.20816422 -154.31678772]
[-56.53053284 -166.79629517]
[-63.89087296 -172.19557190]
[-64.88127899 -179.51504517]
[-73.02377319 -192.11265564]
[-81.16626740 -204.71026611]
[-89.30876923 -217.30787659]
[-97.45126343 -229.90547180]
[-105.59376526 -242.50308228]
[-113.73625946 -255.10069275]
[-121.87875366 -267.69830322]
[-130.02125549 -280.29589844]
[-138.16375732 -292.89352417]
[-155.33389282 -296.25579834]
[-164.57543945 -310.71273804]
[-160.57910156 -327.05157471]
[-168.90145874 -339.53109741]
[-184.28834534 -344.07238770]
[-190.19767761 -358.98745728]
[-182.09631348 -372.83474731]
[-166.19892883 -374.99179077]
[-154.70063782 -363.80389404]
[-156.42195129 -347.85345459]
[-148.09957886 -335.37393188]
[-135.23857117 -334.64251709]
[-124.99298859 -326.51733398]
[-121.24083710 -313.78790283]
[-125.56613922 -301.03601074]
[-117.42364502 -288.43841553]
[-109.28115082 -275.84078979]
[-101.13864899 -263.24319458]
[-92.99615479 -250.64558411]
[-84.85365295 -238.04797363]
[-76.71115875 -225.45036316]
[-68.56866455 -212.85275269]
[-60.42616272 -200.25514221]
[-52.28366852 -187.65754700]
[-44.05102158 -175.11865234]
[-35.72865295 -162.63914490]
[-27.40628624 -150.15963745]
[-13.90770245 -143.86380005]
[-12.68820953 -128.08967590]
[-4.36584187 -115.61016083]
[15.94727993 -113.29299927]
[28.10587692 -96.49176788]
[23.83789444 -75.89586639]
[32.86225510 -63.91418076]
[41.88661575 -51.93248749]
[50.91097641 -39.95079803]
[58.40924072 -40.11216736]
[80.90402985 -40.59627914]
[89.40455627 -52.95512772]
[97.90508270 -65.31397247]
[106.40560913 -77.67281342]
[114.90613556 -90.03166199]
[123.31780243 -102.45115662]
[131.64016724 -114.93067169]
[139.96253967 -127.41017914]
[148.28491211 -139.88969421]
[152.04249573 -156.42199707]
[168.96890259 -157.38784790]
[174.58271790 -141.39030457]
[160.76441956 -131.56732178]
[152.44204712 -119.08781433]
[144.11967468 -106.60829926]
[135.79731750 -94.12879181]
[134.70201111 -86.82427216]
[127.26498413 -81.53113556]
[118.76445770 -69.17228699]
[110.26393127 -56.81344604]
[101.76340485 -44.45460129]
[93.26287842 -32.09575272]
[91.11847687 -17.24982834]
[95.77419281 -2.99064422]
[107.07966614 6.70654535]
[104.00780487 22.22666931]
[108.66352081 36.48585129]
[113.31923676 50.74503708]
[117.97494507 65.00421906]
[122.63066101 79.26340485]
[129.75492859 92.46358490]
[139.11929321 104.18147278]
[148.48364258 115.89935303]
[157.84800720 127.61723328]
[167.21235657 139.33511353]
[176.57672119 151.05300903]
[186.19104004 162.56669617]
[196.05085754 173.87084961]
[205.91067505 185.17500305]
[215.77049255 196.47915649]
[225.63031006 207.78332520]
[252.72154236 202.92935181]
[276.52856445 216.42192078]
[286.17095947 241.86257935]
[300.96731567 244.32591248]
[315.76367188 246.78924561]
[330.56002808 249.25257874]
[345.35638428 251.71591187]
[360.15270996 254.17924500]
[376.76974487 250.81613159]
[384.60150146 265.85278320]
[372.32052612 277.54098511]
[357.68939209 268.97561646]
[342.89303589 266.51226807]
[328.09667969 264.04891968]
[313.30032349 261.58560181]
[298.50399780 259.12225342]
[283.70764160 256.65893555]
[282.08923340 260.43154907]
[280.09216309 264.01812744]
[277.73757935 267.38079834]
[275.05032349 270.48410034]
[283.72726440 282.71972656]
[292.40420532 294.95535278]
[301.08111572 307.19100952]
[309.75805664 319.42663574]
[321.47283936 316.78552246]
[333.35806274 318.24249268]
[344.02621460 323.60394287]
[352.23968506 332.22183228]
[357.05453491 343.07192993]
[357.92877197 354.87545776]
[354.78338623 366.24978638]
[348.00878906 375.87057495]
[356.15127563 388.46817017]
[364.29379272 401.06576538]
[372.43627930 413.66339111]
[380.57876587 426.26098633]
[394.25473022 436.28118896]
[388.41201782 452.19656372]
[371.50122070 450.98800659]
[367.98117065 434.40350342]
[359.83868408 421.80587769]
[351.69616699 409.20828247]
[343.55368042 396.61065674]
[335.41119385 384.01306152]
[317.36715698 385.75012207]
[300.86425781 378.04592896]
[290.51312256 362.95736694]
[289.25408936 344.61749268]
[297.52243042 328.10357666]
[288.84548950 315.86795044]
[280.16854858 303.63229370]
[271.49160767 291.39666748]
[262.81469727 279.16104126]
[255.64561462 281.69100952]
[248.11782837 282.81927490]
[240.50309753 282.50143433]
[233.07705688 280.74539185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 160]
[10 159]
[11 158]
[12 157]
[13 156]
[17 155]
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[31 39]
[32 38]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[54 143]
[55 142]
[56 118]
[57 117]
[58 116]
[59 115]
[66 112]
[67 111]
[69 109]
[70 108]
[71 107]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[85 93]
[86 92]
[120 141]
[121 140]
[122 139]
[123 138]
[124 137]
[125 135]
[126 134]
[127 133]
[128 132]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
[168 172]
[181 214]
[182 213]
[183 212]
[184 211]
[185 210]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
