%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCUGCUCAAUCAAGUCAAAUACUGAACAACUUCCUGGCGGAGAGGCUGAGAAUUUUAUACUUGCUUGCUCGAAAGCACCCCAAAUAAGAUGAUCCACGCCAACACCUCCCCUUUACAGGUUUUAAAAUAUUCUUAUAACUAUGACUGAAAACAAGACAGUUUCCUCUUCUUCCACUAGAGAUGAUCAAACCAAUAUAGGUUUAACAUGUCAGGAAGUAAAGGCUCUCAGAGAGAAGGCAU\
) } def
/len { sequence length } bind def

/coor [
[94.94140625 603.62847900]
[94.74748993 588.62969971]
[94.55356598 573.63098145]
[94.35964966 558.63220215]
[94.16572571 543.63348389]
[86.26453400 531.00726318]
[93.82277679 517.10821533]
[93.62886047 502.10949707]
[93.43493652 487.11074829]
[78.81494904 480.63613892]
[68.44831085 468.38610840]
[64.45214844 452.78372192]
[67.67686462 436.94442749]
[77.52575684 424.05380249]
[92.06468964 416.72711182]
[91.67688751 401.73211670]
[91.28907776 386.73712158]
[90.90126801 371.74212646]
[83.55182648 369.55038452]
[76.83874512 365.81469727]
[71.08251190 360.70687866]
[66.55936432 354.46438599]
[63.48799896 347.37930298]
[62.01901627 339.78472900]
[62.22755432 332.03897095]
[64.10945892 324.50875854]
[67.58119202 317.55194092]
[72.48358154 311.50024414]
[78.58901978 306.64373779]
[85.61212921 303.21670532]
[93.22300720 301.38650513]
[94.57863617 286.44790649]
[95.93425751 271.50927734]
[97.28988647 256.57067871]
[98.64551544 241.63204956]
[100.00113678 226.69343567]
[101.35676575 211.75480652]
[102.71239471 196.81619263]
[104.06801605 181.87757874]
[105.42364502 166.93896484]
[39.71204758 86.88226318]
[25.86314964 81.11962128]
[12.01425171 75.35698700]
[-1.83464694 69.59434509]
[-23.80527687 74.05343628]
[-36.18331909 56.29077530]
[-50.31157684 51.25169754]
[-64.43983459 46.21261597]
[-84.10336304 50.71471405]
[-95.94207001 35.41086960]
[-110.19588470 30.73874474]
[-124.16856384 37.62364960]
[-138.55740356 32.68239975]
[-145.03500366 19.31915283]
[-159.28881836 14.64702702]
[-173.54263306 9.97490025]
[-187.79644775 5.30277443]
[-202.05026245 0.63064820]
[-216.30407715 -4.04147816]
[-230.55789185 -8.71360397]
[-245.60943604 3.14597273]
[-264.61779785 3.50878215]
[-279.86737061 -7.59056139]
[-285.27810669 -25.50176239]
[-299.70236206 -29.61767769]
[-314.12661743 -33.73359299]
[-328.55087280 -37.84951019]
[-342.97512817 -41.96542358]
[-356.66442871 -34.06740189]
[-371.90710449 -38.24309158]
[-379.65994263 -52.01512146]
[-375.32333374 -67.21279907]
[-361.47012329 -74.81961060]
[-346.31912231 -70.32256317]
[-338.85922241 -56.38968277]
[-324.43496704 -52.27376938]
[-310.01068115 -48.15785217]
[-295.58642578 -44.04193497]
[-281.16217041 -39.92602158]
[-273.86358643 -48.31528473]
[-263.92059326 -53.40727615]
[-252.74560547 -54.43583679]
[-241.94200134 -51.21507263]
[-233.07420349 -44.17156219]
[-227.44107056 -34.28825378]
[-225.88575745 -22.96741867]
[-211.63194275 -18.29529190]
[-197.37812805 -13.62316704]
[-183.12431335 -8.95104027]
[-168.87049866 -4.27891445]
[-154.61668396 0.39321196]
[-140.36286926 5.06533813]
[-127.23162842 -1.87050629]
[-112.70967865 2.66464305]
[-105.52375793 16.48493004]
[-91.26994324 21.15705681]
[-82.62963867 15.75112438]
[-72.22091675 15.98696995]
[-63.47325516 22.02766418]
[-59.40075302 32.08435822]
[-45.27249527 37.12343979]
[-31.14423752 42.16251755]
[-24.94637108 37.37529373]
[-17.27336502 35.39204407]
[-9.34666061 36.60467911]
[-2.45826578 40.89018631]
[2.23981357 47.61875153]
[3.92799258 55.74544907]
[17.77689171 61.50808716]
[31.62578964 67.27072906]
[45.47468948 73.03336334]
[52.17693329 69.66737366]
[42.78613663 57.97066498]
[31.70850563 47.85700607]
[33.76095200 32.99808884]
[47.16545105 26.26612091]
[60.30974579 33.49297714]
[61.80701447 48.41802216]
[65.58142090 62.93538284]
[72.28366852 59.56938934]
[75.93131256 45.01965714]
[79.57894897 30.46992683]
[83.22659302 15.92019367]
[79.07742310 0.65274626]
[89.67743683 -9.81095314]
[93.32507324 -24.36068535]
[96.97271729 -38.91041946]
[87.65164185 -51.46635437]
[88.63368225 -67.07307434]
[99.45514679 -78.36155701]
[115.00647736 -80.00172424]
[127.94480896 -71.21914673]
[132.16105652 -56.16068649]
[125.66442871 -41.93648529]
[111.52245331 -35.26277542]
[107.87480927 -20.71304321]
[104.22716522 -6.16331148]
[108.63723755 8.06344128]
[97.77632141 19.56783485]
[94.12868500 34.11756897]
[90.48104095 48.66730118]
[86.83339691 63.21703339]
[93.25465393 67.09227753]
[106.09715271 74.84276581]
[112.51840973 78.71800995]
[123.69149017 68.70990753]
[134.86457825 58.70180893]
[146.03767395 48.69370651]
[157.21075439 38.68560410]
[154.66278076 23.47010422]
[160.76641846 9.30150127]
[173.57398987 0.70094365]
[188.99865723 0.41283792]
[202.11846924 8.52911758]
[208.74694824 22.45990753]
[206.76895142 37.75994492]
[196.81565857 49.54703903]
[182.06314087 54.05997467]
[167.21885681 49.85869217]
[156.04577637 59.86679459]
[144.87268066 69.87489319]
[133.69960022 79.88299561]
[122.52651215 89.89109802]
[125.93575287 96.57144928]
[132.75425720 109.93214417]
[136.16349792 116.61248779]
[150.82350159 113.43692780]
[165.48352051 110.26136780]
[180.14352417 107.08581543]
[185.45114136 92.60020447]
[197.76148987 83.30187988]
[213.14637756 82.15789032]
[226.69654846 89.53328705]
[234.08819580 103.07460022]
[232.96264648 118.46085358]
[223.67909241 130.78234863]
[209.19987488 136.10733032]
[194.14523315 132.73663330]
[183.31907654 121.74581909]
[168.65907288 124.92137909]
[153.99906921 128.09693909]
[139.33905029 131.27249146]
[138.27336121 146.23458862]
[152.33529663 151.45590210]
[166.39723206 156.67721558]
[177.90104675 149.69642639]
[191.13224792 150.59571838]
[201.28349304 158.82405090]
[204.79563904 171.20848083]
[218.78889465 176.61114502]
[232.78215027 182.01380920]
[246.77540588 187.41647339]
[260.76864624 192.81913757]
[275.11572266 186.19061279]
[289.91864014 191.72676086]
[296.39511108 206.14311218]
[290.70275879 220.88667297]
[276.21875000 227.21035767]
[261.53619385 221.36244202]
[255.36598206 206.81239319]
[241.37272644 201.40972900]
[227.37947083 196.00706482]
[213.38621521 190.60440063]
[199.39295959 185.20173645]
[184.30947876 192.66169739]
[168.18350220 186.77879333]
[161.17591858 170.73913574]
[147.11398315 165.51783752]
[133.05206299 160.29652405]
[120.36225891 168.29458618]
[119.00663757 183.23320007]
[117.65100861 198.17182922]
[116.29537964 213.11044312]
[114.93975830 228.04905701]
[113.58412933 242.98767090]
[112.22850037 257.92630005]
[110.87287903 272.86489868]
[109.51725006 287.80352783]
[108.16162872 302.74215698]
[126.65277100 316.32522583]
[133.11148071 338.20983887]
[125.04801941 359.42053223]
[105.89625549 371.35433960]
[106.28406525 386.34930420]
[106.67186737 401.34429932]
[107.05967712 416.33929443]
[120.14975739 421.63806152]
[130.20391846 431.49301147]
[135.72947693 444.39486694]
[135.92367554 458.38549805]
[130.79022217 471.35525513]
[121.13370514 481.36090088]
[108.43368530 486.91683960]
[108.62760925 501.91558838]
[108.82152557 516.91430664]
[116.73658752 530.61334229]
[109.16447449 543.43957520]
[109.35839081 558.43829346]
[109.55231476 573.43707275]
[109.74623108 588.43579102]
[109.94015503 603.43450928]
[112.37977600 622.66204834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 241]
[2 240]
[3 239]
[4 238]
[5 237]
[7 235]
[8 234]
[9 233]
[15 226]
[16 225]
[17 224]
[18 223]
[31 219]
[32 218]
[33 217]
[34 216]
[35 215]
[36 214]
[37 213]
[38 212]
[39 211]
[40 210]
[41 111]
[42 110]
[43 109]
[44 108]
[46 102]
[47 101]
[48 100]
[50 96]
[51 95]
[54 92]
[55 91]
[56 90]
[57 89]
[58 88]
[59 87]
[60 86]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[120 142]
[121 141]
[122 140]
[123 139]
[125 137]
[126 136]
[127 135]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[166 182]
[167 181]
[168 180]
[169 179]
[183 209]
[184 208]
[185 207]
[189 204]
[190 203]
[191 202]
[192 201]
[193 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
