%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUGGGCCGCCCCGCCUGGCGCUGUGCUGGGAGGAGCCGCCGCCAGUCGCGCGGUCAGUGCCUCCCUCCAGACUCGGGAGGGUCGAGGGGGCGCGGGAGAGAGCGCGGGCGGCCGCCGGGGCUGGUCGCCUGCAGGGAUGGGGGACGAGCGGCCCCACUACUACGGGAAACACGGAACGCCACAGAAGUAUGAUCCCACUUUCAAAGGACCCAUUUACAAUAGGGGCUGCACGGAUA\
) } def
/len { sequence length } bind def

/coor [
[120.89248657 347.26950073]
[126.93882751 331.43035889]
[126.93882751 316.43035889]
[126.93882751 301.43035889]
[126.93882751 286.43035889]
[126.93882751 271.43035889]
[119.20152283 258.70309448]
[126.93882751 244.90292358]
[126.93882751 229.90292358]
[119.20152283 217.17564392]
[126.93882751 203.37547302]
[126.93882751 188.37547302]
[126.93882751 173.37547302]
[126.93882751 158.37547302]
[126.93882751 143.37547302]
[102.29032898 144.11921692]
[83.70885468 133.55113220]
[74.57743073 145.45143127]
[65.44601440 157.35173035]
[56.31459045 169.25202942]
[47.18316650 181.15232849]
[38.05174637 193.05262756]
[38.71178818 209.08210754]
[26.49706650 219.48306274]
[10.77767086 216.27680969]
[3.61217594 201.92288208]
[10.49733639 187.43238831]
[26.15144730 183.92120361]
[35.28286743 172.02090454]
[44.41429138 160.12060547]
[53.54571152 148.22030640]
[62.67713165 136.32000732]
[71.80855560 124.41970825]
[67.58304596 118.44508362]
[64.60546875 111.76039886]
[62.99043274 104.62297821]
[62.80012131 97.30759430]
[64.04186249 90.09585571]
[50.67676163 83.28600311]
[34.86805725 83.91484070]
[27.04063606 71.24279022]
[13.67553711 64.43293762]
[0.31043968 57.62307739]
[-13.05465794 50.81322098]
[-26.41975594 44.00336456]
[-39.78485489 37.19350815]
[-44.95858002 37.46440887]
[-49.29275513 35.89218140]
[-52.22847366 33.10069656]
[-53.53313446 29.84489822]
[-66.62057495 22.51557922]
[-79.70801544 15.18626022]
[-92.79545593 7.85694170]
[-105.88289642 0.52762294]
[-123.92563629 6.35437250]
[-140.20817566 -2.71971035]
[-144.59089661 -20.50804138]
[-157.86570740 -27.49225807]
[-176.25352478 -26.35036087]
[-185.01660156 -41.56443024]
[-198.38171387 -48.37429047]
[-211.74681091 -55.18414688]
[-225.11190796 -61.99400330]
[-238.47700500 -68.80386353]
[-247.52430725 -69.90703583]
[-251.97160339 -75.79132843]
[-265.24642944 -82.77555084]
[-278.52124023 -89.75976562]
[-291.79605103 -96.74398041]
[-305.07086182 -103.72820282]
[-311.64953613 -103.85009003]
[-316.46627808 -106.81925964]
[-318.59820557 -111.07295990]
[-331.68566895 -118.40227509]
[-344.77310181 -125.73159790]
[-357.86053467 -133.06091309]
[-370.94796753 -140.39022827]
[-387.32971191 -139.63465881]
[-395.94586182 -153.58792114]
[-387.93289185 -167.89611816]
[-371.53384399 -167.84017944]
[-363.61865234 -153.47767639]
[-350.53121948 -146.14836121]
[-337.44378662 -138.81903076]
[-324.35635376 -131.48971558]
[-311.26889038 -124.16040039]
[-298.08663940 -117.00301361]
[-284.81182861 -110.01879883]
[-271.53701782 -103.03458405]
[-258.26220703 -96.05036163]
[-244.98738098 -89.06614685]
[-231.66714478 -82.16896057]
[-218.30204773 -75.35910034]
[-204.93695068 -68.54924774]
[-191.57185364 -61.73938751]
[-178.20675659 -54.92953110]
[-166.62200928 -58.36789703]
[-155.43765259 -52.81998825]
[-150.88150024 -40.76707458]
[-137.60667419 -33.78285599]
[-127.72457123 -39.43858719]
[-116.22036743 -39.63254929]
[-105.94145966 -34.20132446]
[-99.48757935 -24.38806152]
[-98.55357361 -12.55981731]
[-85.46613312 -5.23049831]
[-72.37869263 2.09882021]
[-59.29125595 9.42813873]
[-46.20381546 16.75745773]
[-32.97499466 23.82840919]
[-19.60989761 30.63826561]
[-6.24480057 37.44812393]
[7.12029696 44.25798035]
[20.48539543 51.06783676]
[33.85049438 57.87769699]
[48.70323563 56.76177216]
[57.48661804 69.92090607]
[70.85171509 76.73075867]
[104.08355713 56.01049805]
[145.08613586 76.03393555]
[152.24351501 62.85167694]
[159.40089417 49.66941833]
[166.55827332 36.48716354]
[173.71565247 23.30490494]
[180.87304688 10.12264824]
[188.03042603 -3.05960798]
[187.81562805 -18.87935638]
[200.68823242 -26.37237930]
[207.84561157 -39.55463791]
[215.00299072 -52.73689270]
[222.07394409 -65.96571350]
[229.05815125 -79.24052429]
[236.04237366 -92.51534271]
[235.62051392 -108.33092499]
[248.39393616 -115.99179840]
[255.37815857 -129.26661682]
[254.19401550 -145.62295532]
[267.91696167 -154.60142517]
[282.42999268 -146.96574402]
[282.80337524 -130.57084656]
[268.65298462 -122.28240204]
[261.66876221 -109.00758362]
[262.59017944 -94.14151001]
[249.31718445 -85.53112030]
[242.33297729 -72.25630951]
[235.34875488 -58.98149490]
[235.01652527 -51.61312103]
[228.18524170 -45.57951355]
[221.02786255 -32.39725494]
[213.87048340 -19.21499825]
[214.59722900 -4.33813381]
[201.21267700 4.09777355]
[194.05529785 17.28002930]
[186.89791870 30.46228600]
[179.74053955 43.64454269]
[172.58316040 56.82680130]
[165.42576599 70.00905609]
[158.26838684 83.19131470]
[161.18380737 90.10147858]
[173.78491211 81.96438599]
[184.32495117 71.29164886]
[199.05511475 74.12407684]
[204.88539124 87.94463348]
[196.63473511 100.47166443]
[181.63616943 100.57359314]
[167.01463318 103.92180634]
[169.93005371 110.83197021]
[184.36688232 114.90357208]
[198.80371094 118.97518158]
[206.67179871 105.53028107]
[218.80523682 95.15796661]
[234.02630615 89.19515991]
[250.74537659 88.53414917]
[267.12655640 93.49872589]
[281.28930664 103.78126526]
[291.52377319 118.45063782]
[306.52249146 118.25428772]
[320.33169556 109.40907288]
[334.77014160 117.18487549]
[334.98480225 133.58261108]
[320.75485229 141.73370361]
[306.71881104 133.25300598]
[291.72012329 133.44935608]
[290.25692749 140.80523682]
[301.53472900 150.69519043]
[287.33056641 155.51701355]
[285.86740112 162.87290955]
[299.64926147 168.79406738]
[313.43112183 174.71522522]
[327.21301270 180.63638306]
[340.99487305 186.55754089]
[354.26098633 178.50833130]
[369.72189331 179.82756042]
[381.43252563 190.00796509]
[384.88992310 205.13496399]
[378.76464844 219.39190674]
[365.41201782 227.29673767]
[349.96633911 225.80986023]
[338.36682129 215.50302124]
[335.07369995 200.33940125]
[321.29183960 194.41824341]
[307.50997925 188.49708557]
[293.72811890 182.57592773]
[279.94622803 176.65476990]
[265.98345947 185.88182068]
[250.16792297 190.30072021]
[234.07379150 189.67132568]
[219.24325562 184.24638367]
[207.03871155 174.72897339]
[198.51783752 162.18771362]
[194.34294128 147.93943787]
[194.73210144 133.41200256]
[180.29527283 129.34040833]
[165.85844421 125.26879883]
[159.87854004 129.79547119]
[170.59600830 140.29002380]
[181.31349182 150.78457642]
[193.51715088 159.50643921]
[193.72296143 174.50502014]
[181.76324463 183.55847168]
[167.38356018 179.28942871]
[162.30149841 165.17628479]
[155.11010742 152.01254272]
[147.91873169 138.84880066]
[141.93882751 143.37547302]
[141.93882751 158.37547302]
[141.93882751 173.37547302]
[141.93882751 188.37547302]
[141.93882751 203.37547302]
[149.67611694 217.17564392]
[141.93882751 229.90292358]
[141.93882751 244.90292358]
[149.67611694 258.70309448]
[141.93882751 271.43035889]
[141.93882751 286.43035889]
[141.93882751 301.43035889]
[141.93882751 316.43035889]
[141.93882751 331.43035889]
[147.98516846 347.26950073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 238]
[3 237]
[4 236]
[5 235]
[6 234]
[8 232]
[9 231]
[11 229]
[12 228]
[13 227]
[14 226]
[15 225]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[38 118]
[39 117]
[41 115]
[42 114]
[43 113]
[44 112]
[45 111]
[46 110]
[50 109]
[51 108]
[52 107]
[53 106]
[54 105]
[57 100]
[58 99]
[60 96]
[61 95]
[62 94]
[63 93]
[64 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[125 153]
[126 152]
[128 150]
[129 149]
[130 148]
[131 146]
[132 145]
[133 144]
[135 142]
[136 141]
[167 214]
[168 213]
[169 212]
[176 183]
[177 182]
[187 204]
[188 203]
[189 202]
[190 201]
[191 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
