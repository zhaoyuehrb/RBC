%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUCUGCAAAUGUGAUAGGCACAGGACAGGAGUAGGCACCUCGCCUACUGCUGCUUAACCUUUCAGCUUCUCCAGGCCCCCAAUCCUGCUUGCUCCCAGCUUGGUGGGGUUUUGCCCCACCCCUGAACGCCCUCUGUGGCGCCUUCCACCCACCUGUAGGCCCAGAAGGAUGUCGGUCUGCUACCGUCCCCCAGGGAACGAGACACUGCUGAGCUGGAAGACUUCGCGGGCCACAGGCACAGCCUUCCUGCUG\
CUGGCGGCGCUGCUGG\
) } def
/len { sequence length } bind def

/coor [
[303.44210815 156.76486206]
[302.60037231 171.74122620]
[298.13171387 186.06015015]
[290.30603027 198.85696411]
[279.59582520 209.35894775]
[266.64788818 216.93194580]
[252.24400330 221.11865234]
[237.25401306 221.66627502]
[222.58303833 218.54171753]
[209.11701965 211.93365479]
[197.66909790 202.24114990]
[188.93052673 190.04945374]
[183.42901611 176.09475708]
[181.49674988 161.21974182]
[183.25042725 146.32260132]
[188.58413696 132.30291748]
[197.17581177 120.00726318]
[208.50663757 110.17810822]
[221.89241028 103.40898895]
[236.52026367 100.10910797]
[221.80847168 97.18274689]
[207.09669495 94.25639343]
[189.25602722 101.76672363]
[174.35461426 88.15557861]
[159.57916260 85.56981659]
[144.80372620 82.98405457]
[130.02827454 80.39829254]
[133.18357849 121.52433014]
[93.17967224 142.70518494]
[80.80471039 151.18223572]
[68.42974854 159.65928650]
[61.41726685 173.84150696]
[46.54467010 174.65090942]
[34.16970825 183.12794495]
[21.79474640 191.60499573]
[9.41978359 200.08204651]
[-2.95517826 208.55909729]
[-15.33014011 217.03613281]
[-27.70510292 225.51318359]
[-32.05453110 240.95539856]
[-46.89490128 247.04989624]
[-60.84194946 239.12152100]
[-63.19669724 223.25221252]
[-52.15278244 211.61557007]
[-36.18214798 213.13821411]
[-23.80718613 204.66117859]
[-11.43222427 196.18412781]
[0.94273770 187.70707703]
[13.31769943 179.23004150]
[25.69266129 170.75299072]
[38.06762314 162.27593994]
[44.19496155 148.70004272]
[59.95269775 147.28431702]
[72.32765961 138.80726624]
[84.70262146 130.33023071]
[83.92440033 122.87071228]
[69.00537109 124.42714691]
[54.08634186 125.98358917]
[39.16730881 127.54003143]
[25.45942307 133.63050842]
[15.43108654 122.47557068]
[22.94115067 109.49100494]
[37.61087036 112.62100220]
[52.52989960 111.06455994]
[67.44892883 109.50811768]
[82.36796570 107.95167542]
[81.58974457 100.49216461]
[67.73155212 94.75191498]
[53.87335587 89.01165771]
[40.01516342 83.27140808]
[26.98466682 93.47769928]
[10.67715263 95.69660187]
[-4.43294430 89.41508484]
[-14.24802685 76.43941498]
[-16.15844536 60.37692261]
[-30.08201218 54.79711151]
[-44.00557709 49.21730042]
[-57.92914581 43.63748932]
[-71.85271454 38.05767822]
[-83.87919617 47.61064911]
[-99.07328033 49.85464859]
[-113.34781647 44.18605042]
[-122.86304474 32.12968063]
[-125.05941010 16.92864227]
[-119.34609222 2.67193770]
[-107.25995636 -6.80545044]
[-92.05210876 -8.95415306]
[-77.81338501 -3.19617939]
[-68.37392426 8.91960430]
[-66.27290344 24.13411331]
[-52.34933472 29.71392250]
[-38.42576981 35.29373550]
[-24.50220108 40.87354279]
[-10.57863426 46.45335388]
[-0.43694589 37.33572006]
[12.70466805 33.45111084]
[26.30415726 35.61026001]
[37.70530319 43.44903946]
[44.65651703 55.48840714]
[45.75541687 69.41321564]
[59.61360931 75.15346527]
[73.47180176 80.89372253]
[87.32999420 86.63397217]
[92.31835938 81.03341675]
[107.28345490 64.23175049]
[99.98439026 51.12741470]
[92.68531799 38.02307892]
[85.38625336 24.91874504]
[78.08718872 11.81440830]
[70.78811646 -1.28992736]
[63.48905182 -14.39426327]
[56.18998718 -27.49860001]
[43.20037460 -38.39384460]
[50.07394791 -53.89191818]
[66.86914825 -51.57726288]
[69.29431915 -34.79766464]
[76.59339142 -21.69333076]
[83.89245605 -8.58899498]
[91.19152069 4.51534128]
[98.49059296 17.61967659]
[105.78965759 30.72401237]
[113.08872223 43.82835007]
[120.38779449 56.93268585]
[132.61404419 65.62284088]
[147.38948059 68.20861053]
[162.16493225 70.79437256]
[176.94038391 73.38013458]
[185.42785645 66.65155792]
[195.99736023 65.70377350]
[205.16003418 70.60844421]
[210.02305603 79.54461670]
[224.73483276 82.47097015]
[239.44660950 85.39732361]
[243.80334473 82.95599365]
[248.36059570 82.09323883]
[252.60307312 82.68981934]
[256.10852051 84.47258759]
[258.58941650 87.05973053]
[273.58541870 86.71325684]
[288.58142090 86.36679077]
[303.57742310 86.02032471]
[318.57342529 85.67385101]
[333.56942749 85.32738495]
[348.56539917 84.98091888]
[363.56140137 84.63445282]
[372.99600220 75.87454224]
[385.47000122 75.87476349]
[394.31689453 84.09096527]
[409.31588745 83.91772461]
[424.31488037 83.74447632]
[431.16564941 71.49940491]
[442.90420532 63.99003601]
[456.70138550 62.91838074]
[469.28247070 68.44768524]
[477.70428467 79.18521881]
[492.50860596 76.77027893]
[507.31292725 74.35533905]
[522.11724854 71.94039917]
[536.92156982 69.52546692]
[544.85302734 65.07019043]
[551.91076660 67.16915894]
[566.74200439 64.92536163]
[581.57318115 62.68157196]
[596.40441895 60.43778229]
[611.23565674 58.19398880]
[625.37854004 46.37539291]
[641.45324707 53.45448303]
[656.25756836 51.03954315]
[671.06195068 48.62460709]
[685.86627197 46.20966721]
[691.37750244 31.94174767]
[703.21228027 22.41102600]
[718.12939453 20.09910202]
[732.10742188 25.52791977]
[741.42846680 37.14614487]
[756.23278809 34.73120880]
[771.03710938 32.31626892]
[785.84143066 29.90133095]
[800.63159180 27.40093803]
[815.40704346 24.81517601]
[827.66680908 14.81477165]
[841.53735352 20.24226189]
[856.31280518 17.65649986]
[864.19427490 -0.76447260]
[881.50579834 -10.56041145]
[901.06732178 -7.87098694]
[914.88787842 6.02723885]
[929.52813721 2.76185346]
[944.16839600 -0.50353175]
[958.78955078 -3.85340929]
[973.39117432 -7.28766775]
[987.99273682 -10.72192574]
[1002.02679443 -20.23404121]
[1015.05224609 -9.38161278]
[1008.22967529 6.13900423]
[991.42700195 3.87964511]
[976.82537842 7.31390333]
[962.22381592 10.74816132]
[956.45336914 15.32187557]
[947.43377686 14.13673019]
[932.79351807 17.40211487]
[918.15325928 20.66749954]
[916.24890137 30.75057983]
[911.09558105 39.66808319]
[903.25231934 46.40220261]
[893.58673096 50.17473221]
[883.17926025 50.53693008]
[873.20208740 47.42276001]
[864.78729248 41.15916824]
[858.89855957 32.43194580]
[844.12310791 35.01770782]
[832.92016602 44.83316040]
[817.99279785 39.59062195]
[803.21734619 42.17638397]
[797.19256592 46.40941620]
[788.25640869 44.70565796]
[773.45208740 47.12059402]
[758.64776611 49.53553391]
[743.84338379 51.95046997]
[738.69769287 65.92857361]
[727.16955566 75.51804352]
[712.29101562 78.06651306]
[698.04095459 72.79084778]
[688.28118896 61.01399231]
[673.47686768 63.42893219]
[658.67254639 65.84387207]
[643.86822510 68.25881195]
[636.57006836 77.87708282]
[624.28289795 80.02761841]
[613.47949219 73.02522278]
[598.64825439 75.26901245]
[583.81701660 77.51280212]
[568.98577881 79.75659180]
[554.15454102 82.00038910]
[539.33648682 84.32978821]
[524.53216553 86.74472809]
[509.72787476 89.15966797]
[494.92352295 91.57460785]
[480.11920166 93.98954010]
[478.82153320 99.85529327]
[476.30010986 105.30812836]
[472.67144775 110.09602356]
[480.42010498 122.93963623]
[488.16876221 135.78324890]
[495.91741943 148.62684631]
[511.31738281 152.17892456]
[519.62414551 165.62413025]
[515.90942383 180.98565674]
[502.37716675 189.14979553]
[487.05575562 185.27290344]
[479.03515625 171.65505981]
[483.07382202 156.37551880]
[475.32516479 143.53190613]
[467.57650757 130.68829346]
[459.82785034 117.84468842]
[438.38748169 115.69986725]
[424.48812866 98.74347687]
[409.48913574 98.91671753]
[394.49014282 99.08996582]
[379.87637329 108.83410645]
[363.90786743 99.63044739]
[348.91189575 99.97691345]
[333.91589355 100.32338715]
[318.91989136 100.66985321]
[303.92388916 101.01631927]
[288.92788696 101.36279297]
[273.93188477 101.70925903]
[258.93588257 102.05572510]
[272.77990723 107.83010101]
[284.79772949 116.80628204]
[294.26367188 128.44226074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 133]
[21 132]
[22 131]
[24 127]
[25 126]
[26 125]
[27 124]
[29 55]
[30 54]
[31 53]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[67 103]
[68 102]
[69 101]
[70 100]
[75 94]
[76 93]
[77 92]
[78 91]
[79 90]
[105 123]
[106 122]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[138 268]
[139 267]
[140 266]
[141 265]
[142 264]
[143 263]
[144 262]
[145 261]
[148 259]
[149 258]
[150 257]
[155 239]
[156 238]
[157 237]
[158 236]
[159 235]
[161 234]
[162 233]
[163 232]
[164 231]
[165 230]
[167 227]
[168 226]
[169 225]
[170 224]
[175 219]
[176 218]
[177 217]
[178 216]
[179 214]
[180 213]
[182 211]
[183 210]
[187 202]
[188 201]
[189 200]
[190 198]
[191 197]
[192 196]
[242 255]
[243 254]
[244 253]
[245 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
