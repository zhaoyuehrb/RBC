%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGUCCAGGCCCCUCUGCUGCAGCGCCCGCGCGUCCAGAGGCCCUGCCAGACACGCGCGAGGUUCGAGGCUGAGAUGGAUCUUGAGGCGGCAAAGAACGGAACAGCCUGGCGCCCCACGAGCGCGGAGGGCGACUUUGAACUGGGCAUCAGCAGCAAACAAAAAAGGAAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[140.88934326 187.08132935]
[131.94383240 175.04066467]
[122.99832916 162.99998474]
[114.05281830 150.95930481]
[105.10730743 138.91864014]
[96.16179657 126.87796021]
[85.17838287 100.67234039]
[72.32315826 92.94297028]
[59.46793747 85.21359253]
[46.61271286 77.48422241]
[33.75749207 69.75484467]
[20.90226746 62.02547073]
[7.78082085 54.75720978]
[-5.59031487 47.95921707]
[-19.13767815 41.51957703]
[-32.85166931 35.44285965]
[-48.60318756 36.92615891]
[-57.10480499 24.69620514]
[-70.81879425 18.61948776]
[-84.53278351 12.54276943]
[-98.24677277 6.46605158]
[-111.96076202 0.38933334]
[-125.67475128 -5.68738461]
[-136.90640259 3.07992816]
[-152.01576233 4.34426212]
[-166.16210938 -3.29360318]
[-174.27552795 -18.22286224]
[-189.24659729 -19.15409088]
[-204.21766663 -20.08532143]
[-219.19641113 -20.88365364]
[-234.18164062 -21.54902649]
[-249.16687012 -22.21439934]
[-264.15209961 -22.87977409]
[-279.13735962 -23.54514694]
[-294.12258911 -24.21051979]
[-309.10781860 -24.87589264]
[-316.02096558 -12.69613934]
[-327.45678711 -4.72682858]
[-341.14602661 -2.47967553]
[-354.40225220 -6.33779669]
[-364.64883423 -15.49180222]
[-369.91986084 -28.10881042]
[-384.89093018 -29.04003906]
[-399.86199951 -29.97126770]
[-416.04595947 -24.91991615]
[-425.38006592 -39.07303619]
[-414.36398315 -51.96033478]
[-398.93078613 -44.94233322]
[-383.95971680 -44.01110458]
[-368.98864746 -43.07987595]
[-360.39987183 -56.75033188]
[-346.01031494 -64.27536011]
[-329.69552612 -63.52160263]
[-315.90362549 -54.59996796]
[-308.44244385 -39.86112976]
[-293.45721436 -39.19575500]
[-278.47198486 -38.53038025]
[-263.48672485 -37.86500931]
[-248.50151062 -37.19963455]
[-233.51626587 -36.53426361]
[-218.53103638 -35.86888885]
[-211.68788147 -38.72230911]
[-203.28643799 -35.05638504]
[-188.31536865 -34.12515640]
[-173.34429932 -33.19392776]
[-164.83175659 -45.54450226]
[-171.02993774 -59.20402145]
[-177.22813416 -72.86354065]
[-183.42631531 -86.52306366]
[-189.62449646 -100.18258667]
[-195.82267761 -113.84210968]
[-202.14183044 -127.44608307]
[-208.58146667 -140.99345398]
[-223.15457153 -147.70198059]
[-226.85575867 -163.31225586]
[-216.84579468 -175.84941101]
[-200.80348206 -175.69601440]
[-191.03509521 -162.96974182]
[-195.03410339 -147.43309021]
[-188.59446716 -133.88572693]
[-182.86517334 -129.17979431]
[-182.16316223 -120.04029083]
[-175.96496582 -106.38076782]
[-169.76678467 -92.72124481]
[-163.56860352 -79.06172943]
[-157.37042236 -65.40220642]
[-151.17224121 -51.74268341]
[-125.69911194 -42.67195511]
[-119.59803009 -19.40137482]
[-105.88404846 -13.32465553]
[-92.17005920 -7.24793768]
[-78.45606995 -1.17121947]
[-64.74208069 4.90549850]
[-51.02808762 10.98221684]
[-36.25748444 9.06426907]
[-26.77495003 21.72887039]
[-13.06096077 27.80558777]
[-9.63262939 26.86338615]
[-5.57474279 27.55448914]
[-1.66900659 30.15770531]
[1.20767879 34.58807755]
[14.57881451 41.38607407]
[17.30666924 40.62165833]
[20.50607109 40.90895844]
[23.77157402 42.43476486]
[26.63715363 45.23344803]
[28.63164139 49.17024994]
[41.48686600 56.89962387]
[54.34209061 64.62899780]
[67.19731140 72.35836792]
[80.05253601 80.08774567]
[92.90776062 87.81712341]
[107.82278442 89.41152191]
[122.02137756 84.57417297]
[136.21997070 79.73683167]
[150.41856384 74.89948273]
[164.61715698 70.06214142]
[171.64208984 56.15933228]
[186.11039734 51.45584106]
[199.32130432 58.23871994]
[213.51989746 53.40137482]
[223.90583801 40.71026230]
[240.04373169 43.62586212]
[245.33229065 59.14885330]
[234.33110046 71.31050873]
[218.35725403 67.59996796]
[204.15864563 72.43731689]
[197.83668518 85.87488556]
[183.50619507 90.98290253]
[169.45449829 84.26073456]
[155.25590515 89.09808350]
[141.05731201 93.93542480]
[126.85871887 98.77277374]
[112.66012573 103.61011505]
[108.20246887 117.93244934]
[117.14797974 129.97312927]
[126.09349060 142.01379395]
[135.03900146 154.05447388]
[143.98451233 166.09515381]
[152.93002319 178.13581848]
[159.57109070 180.22886658]
[163.98991394 184.74729919]
[165.55088806 190.20874023]
[177.97651672 198.61134338]
[190.40214539 207.01394653]
[204.94323730 201.59765625]
[219.88177490 205.79524231]
[229.47358704 217.99264526]
[230.03042603 233.49972534]
[221.33816528 246.35368347]
[206.73918152 251.61192322]
[191.84704590 247.25253296]
[182.38812256 234.95178223]
[181.99954224 219.43957520]
[169.57391357 211.03697205]
[157.14828491 202.63436890]
[163.97755432 215.98956299]
[167.03671265 230.67430115]
[166.10847473 245.64555359]
[161.25877380 259.83993530]
[152.83207703 272.24923706]
[141.42691040 281.99203491]
[127.85338593 288.37634277]
[113.07559204 290.94863892]
[98.14318085 289.52627563]
[84.11678314 284.21026611]
[71.99266815 275.37817383]
[62.63199234 263.65734863]
[56.69963455 249.88029480]
[54.61696243 235.02558899]
[56.53190231 220.14831543]
[62.30844116 206.30522156]
[71.53627777 194.47952271]
[83.55997467 185.51119995]
[97.52549744 180.03726196]
[112.44091034 178.44651794]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[4 137]
[5 136]
[6 135]
[7 112]
[8 111]
[9 110]
[10 109]
[11 108]
[12 107]
[13 102]
[14 101]
[15 97]
[16 96]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[27 65]
[28 64]
[29 63]
[30 61]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[42 50]
[43 49]
[44 48]
[66 87]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[72 80]
[73 79]
[113 134]
[114 133]
[115 132]
[116 131]
[117 130]
[120 127]
[121 126]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
