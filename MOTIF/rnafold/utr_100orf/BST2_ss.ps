%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAGGGGUGGCCCGUAGAAGAUUCCAGCACCCUCCCCUAACUCCAGGCCAGACUCUAAAGGGGAGAUCUGGAUGGCAUCUACUUCGUAUGACUAUUGCAGAGUGCCCAUGGAAGACGGGGAUAAGCGCUGUAAGCUUCUGCUGGGGAUAGGAAUUCUGGUGCUCCUGAUCA\
) } def
/len { sequence length } bind def

/coor [
[219.57730103 721.39190674]
[211.68649292 708.21496582]
[211.45733643 692.85778809]
[218.95147705 679.45135498]
[232.15304565 671.60186768]
[231.88223267 656.60430908]
[231.61141968 641.60675049]
[231.34060669 626.60919189]
[231.06979370 611.61163330]
[230.79898071 596.61407471]
[226.68429565 591.93908691]
[225.46243286 585.05261230]
[228.23570251 577.80059814]
[224.48435974 563.27722168]
[220.73303223 548.75390625]
[216.85075378 534.26501465]
[212.83782959 519.81176758]
[208.82490540 505.35848999]
[204.81198120 490.90524292]
[200.79905701 476.45199585]
[196.78613281 461.99874878]
[192.77319336 447.54550171]
[181.91302490 437.35208130]
[185.67636108 421.98498535]
[181.66343689 407.53173828]
[170.80325317 397.33831787]
[174.56658936 381.97122192]
[170.55366516 367.51797485]
[166.54074097 353.06469727]
[162.52781677 338.61145020]
[146.80239868 334.96319580]
[134.98773193 323.82546997]
[130.36595154 308.16250610]
[134.28622437 292.21282959]
[145.77273560 280.34228516]
[141.49952698 265.96383667]
[137.22631836 251.58538818]
[132.95310974 237.20695496]
[128.67990112 222.82850647]
[114.16201019 219.49734497]
[103.18775940 209.27864075]
[98.77268219 194.84349060]
[102.19825745 180.03936768]
[112.64207458 168.86466980]
[108.36885834 154.48622131]
[104.09564972 140.10777283]
[99.82243347 125.72933197]
[84.50516510 120.54118347]
[75.30915070 107.23822021]
[75.86727142 91.07579041]
[63.92588043 81.99817657]
[51.98448181 72.92056274]
[40.04308701 63.84294891]
[28.10169029 54.76533508]
[16.07883453 45.79589081]
[3.97549582 36.93535233]
[-8.12784195 28.07480812]
[-20.23118019 19.21426773]
[-36.24167252 20.23587799]
[-46.91564178 8.25898457]
[-44.06492996 -7.52876377]
[-29.87636185 -15.01635838]
[-15.23419189 -8.45995808]
[-11.37063885 7.11092854]
[0.73269957 15.97147083]
[12.83603764 24.83201218]
[24.93937683 33.69255447]
[32.21913910 35.11142731]
[37.17930603 42.82394028]
[49.12070084 51.90155411]
[61.06209564 60.97916794]
[73.00349426 70.05677795]
[84.94488525 79.13439178]
[88.69043732 76.88888550]
[92.76177979 75.30915070]
[97.04164886 74.44069672]
[99.73522186 59.68452072]
[102.42880249 44.92834854]
[100.78858948 40.82301712]
[100.58264923 36.81629562]
[101.59969330 33.35279083]
[103.50424957 30.76075363]
[105.88619232 29.22129059]
[109.63751984 14.69794559]
[113.38884735 0.17460179]
[117.14017487 -14.34874249]
[113.10001373 -29.64539719]
[123.77439117 -40.03322220]
[127.52571869 -54.55656815]
[131.27705383 -69.07991028]
[122.04576874 -81.70201111]
[123.13910675 -97.30133057]
[134.04081726 -108.51233673]
[149.60345459 -110.04154205]
[162.47880554 -101.16690063]
[166.58753967 -86.07875061]
[159.98962402 -71.90124512]
[145.80039978 -65.32858276]
[142.04907227 -50.80523682]
[138.29772949 -36.28189087]
[142.60621643 -22.02404404]
[131.66352844 -10.59741211]
[127.91219330 3.92593169]
[124.16086578 18.44927597]
[120.40953064 32.97261810]
[117.18497467 47.62192917]
[114.49139404 62.37810135]
[111.79782104 77.13427734]
[123.68950653 89.95822906]
[124.63634491 107.42161560]
[114.20088196 121.45611572]
[118.47409058 135.83456421]
[122.74730682 150.21301270]
[127.02051544 164.59144592]
[141.87223816 168.24842834]
[152.82710266 178.77874756]
[157.01245117 193.28218079]
[153.40043640 207.83584595]
[143.05833435 218.55529785]
[147.33154297 232.93373108]
[151.60476685 247.31217957]
[155.87797546 261.69061279]
[160.15118408 276.06906128]
[173.92401123 278.61825562]
[185.19660950 286.81985474]
[191.79750061 299.02328491]
[192.48567200 312.81417847]
[187.18354797 325.49191284]
[176.98106384 334.59854126]
[180.99398804 349.05178833]
[185.00691223 363.50503540]
[189.01983643 377.95828247]
[200.16705322 389.18548584]
[196.11668396 403.51879883]
[200.12960815 417.97204590]
[211.27682495 429.19924927]
[207.22645569 443.53256226]
[211.23937988 457.98580933]
[215.25230408 472.43908691]
[219.26522827 486.89233398]
[223.27815247 501.34558105]
[227.29107666 515.79882812]
[231.30400085 530.25207520]
[236.63279724 537.71466064]
[235.25637817 545.00256348]
[239.00770569 559.52587891]
[242.75904846 574.04925537]
[247.40609741 559.78723145]
[256.76568604 548.06555176]
[269.64553833 540.37731934]
[284.40502930 537.70184326]
[299.16400146 540.38006592]
[312.04241943 548.07067871]
[321.39984131 559.79412842]
[326.04421997 574.05700684]
[325.38400269 589.04248047]
[319.50323486 602.84161377]
[309.15109253 613.69671631]
[295.64617920 620.22491455]
[280.70886230 621.59478760]
[266.24188232 617.63165283]
[254.08805847 608.84051514]
[245.79653931 596.34326172]
[246.06735229 611.34082031]
[246.33816528 626.33837891]
[246.60897827 641.33593750]
[246.87979126 656.33349609]
[247.15060425 671.33105469]
[260.62695312 678.69879150]
[268.60021973 691.82598877]
[268.92562866 707.18139648]
[261.51568604 720.63458252]
[248.36358643 728.56665039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[13 147]
[14 146]
[15 145]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[21 138]
[22 137]
[24 135]
[25 134]
[27 132]
[28 131]
[29 130]
[30 129]
[35 123]
[36 122]
[37 121]
[38 120]
[39 119]
[44 114]
[45 113]
[46 112]
[47 111]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 67]
[56 66]
[57 65]
[58 64]
[76 108]
[77 107]
[78 106]
[83 105]
[84 104]
[85 103]
[86 102]
[88 100]
[89 99]
[90 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
