%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCGCUCCCCAAGUCUCUCUCGUGCGCAGAGCCCAGGCUGCGCUUCCCUGGUCAGGCACGGCACGUCUGGCCGGCCGCCAGGAUGCAGGCCCCGCACAAGGAGCACCUGUACAAGUUGCUGGUGAUUGGCGACCUGGGCGUGGGGAAGACCAGUAUCAUCAAGCGCUACGUGCACCAGAACU\
) } def
/len { sequence length } bind def

/coor [
[170.96075439 312.70074463]
[181.08944702 301.48019409]
[194.07632446 293.74505615]
[190.52485657 279.17153931]
[186.97338867 264.59802246]
[183.42193604 250.02453613]
[177.91911316 236.07035828]
[170.56745911 222.99545288]
[163.21580505 209.92053223]
[155.86415100 196.84562683]
[148.51249695 183.77072144]
[141.16084290 170.69581604]
[128.17878723 163.39408875]
[128.15948486 147.57289124]
[120.80782318 134.49798584]
[113.45616913 121.42308044]
[113.63941193 136.42196655]
[115.26006317 151.33415222]
[109.77207184 165.29415894]
[98.43009949 175.11045837]
[83.82714081 178.53883362]
[69.30173492 174.79548645]
[58.17467880 164.73623657]
[52.98992538 150.66162109]
[62.39961243 138.98010254]
[48.54141998 144.72036743]
[34.68322754 150.46061707]
[20.82503319 156.20086670]
[6.96684027 161.94111633]
[-6.89135265 167.68136597]
[-10.38266087 182.80056763]
[-22.11609268 192.95469666]
[-37.57990646 194.23925781]
[-50.82794571 186.16033936]
[-56.76607513 171.82443237]
[-53.11095810 156.74398804]
[-41.26806259 146.71774292]
[-25.79122543 145.60101318]
[-12.63160419 153.82316589]
[1.22658896 148.08291626]
[15.08478165 142.34266663]
[28.94297409 136.60241699]
[42.80116653 130.86216736]
[56.65936279 125.12191772]
[57.68061066 117.69177246]
[45.83245468 108.49279022]
[59.72311020 102.83148193]
[60.74436188 95.40133667]
[48.94876862 86.13505554]
[37.15317535 76.86877441]
[25.35758400 67.60248566]
[13.56199169 58.33620453]
[1.76639891 49.06992340]
[-4.75102949 47.74846268]
[-8.97394276 43.90053177]
[-10.26658344 39.28036499]
[-21.73893738 29.61676979]
[-33.21129227 19.95317459]
[-41.81291199 16.80723381]
[-44.79519272 10.02533340]
[-56.10088730 0.16727820]
[-67.40658569 -9.69077682]
[-78.71228027 -19.54883194]
[-94.13196564 -16.94743347]
[-107.59002686 -24.91076469]
[-112.73197174 -39.67878342]
[-107.12993622 -54.27848434]
[-93.42903137 -61.81633377]
[-78.09840393 -58.73318863]
[-68.37670135 -46.48481750]
[-68.85422516 -30.85452843]
[-57.54852676 -20.99647331]
[-46.24283218 -11.13841724]
[-34.93713760 -1.28036201]
[-23.54769707 8.48081875]
[-12.07534218 18.14441490]
[-0.60298729 27.80801010]
[11.03268242 37.27433014]
[22.82827377 46.54061127]
[34.62386703 55.80689621]
[46.41946030 65.07318115]
[58.21504974 74.33946228]
[70.01064301 83.60574341]
[77.07759857 81.09414673]
[98.27847290 73.55935669]
[101.58060455 58.92734146]
[104.88274384 44.29532242]
[108.18487549 29.66330719]
[111.48700714 15.03129101]
[114.53884888 0.34502947]
[117.33950806 -14.39119530]
[112.31490326 -29.39332581]
[122.29245758 -40.45215607]
[125.09310913 -55.18838120]
[115.99478149 -68.11106873]
[118.78128815 -83.66777039]
[131.79943848 -92.62896729]
[147.32582092 -89.67813873]
[156.14888000 -76.56596375]
[153.03405762 -61.07165909]
[139.82933044 -52.38772202]
[137.02868652 -37.65149689]
[142.25360107 -23.70340157]
[132.07572937 -11.59053898]
[129.27507019 3.14568567]
[131.18809509 7.54537106]
[130.34071350 13.19528294]
[126.11902618 18.33342552]
[122.81689453 32.96544266]
[119.51475525 47.59745789]
[116.21262360 62.22947311]
[112.91048431 76.86148834]
[124.62654877 86.22813416]
[138.17266846 79.78588104]
[147.31221008 66.87157440]
[162.12893677 68.39278412]
[175.67504883 61.95053101]
[189.22117615 55.50828171]
[202.76728821 49.06602859]
[216.31341553 42.62377930]
[229.85954285 36.18152618]
[243.40565491 29.73927498]
[250.11137390 15.16488266]
[265.72094727 11.46068573]
[278.26004028 21.46822548]
[278.10971069 37.51057434]
[265.38531494 47.28141403]
[249.84791565 43.28539658]
[236.30178833 49.72764587]
[222.75566101 56.16989899]
[209.20954895 62.61214828]
[195.66342163 69.05440521]
[182.11730957 75.49665070]
[168.57118225 81.93890381]
[160.40054321 94.39241791]
[144.61491394 93.33200073]
[131.06880188 99.77425385]
[126.53108215 114.07142639]
[133.88273621 127.14633179]
[141.23439026 140.22123718]
[154.74229431 148.45817566]
[154.23576355 163.34416199]
[161.58741760 176.41906738]
[168.93905640 189.49397278]
[176.29071045 202.56889343]
[183.64236450 215.64379883]
[190.99401855 228.71870422]
[191.22877502 213.72053528]
[196.50495911 199.67910767]
[206.20509338 188.23762512]
[219.19401550 180.73509216]
[233.95164490 178.04951477]
[248.75093079 180.49516296]
[261.85992432 187.78582764]
[271.74453735 199.06831360]
[277.24798584 213.02224731]
[277.72619629 228.01461792]
[273.12322998 242.29090881]
[263.97772217 254.18040466]
[251.36000061 262.29168701]
[236.74665833 265.67550659]
[221.84786987 263.93585205]
[208.40722656 257.27636719]
[197.99543762 246.47306824]
[201.54690552 261.04656982]
[205.09837341 275.62008667]
[208.64984131 290.19357300]
[223.73936462 291.08670044]
[237.89466858 296.38940430]
[249.85707092 305.63021851]
[258.56289673 317.98739624]
[263.23800659 332.36218262]
[263.46670532 347.47637939]
[259.22863770 361.98605347]
[250.90069580 374.60098267]
[239.22335815 384.19949341]
[225.23497009 389.92807007]
[210.17938232 391.27731323]
[195.39530945 388.12728882]
[182.19735718 380.75805664]
[171.75906372 369.82492065]
[165.00860596 356.30004883]
[162.54623413 341.38601685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 167]
[4 166]
[5 165]
[6 164]
[7 147]
[8 146]
[9 145]
[10 144]
[11 143]
[12 142]
[14 140]
[15 139]
[16 138]
[25 44]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[56 77]
[57 76]
[58 75]
[60 74]
[61 73]
[62 72]
[63 71]
[85 112]
[86 111]
[87 110]
[88 109]
[89 108]
[90 105]
[91 104]
[93 102]
[94 101]
[113 137]
[114 136]
[116 134]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
