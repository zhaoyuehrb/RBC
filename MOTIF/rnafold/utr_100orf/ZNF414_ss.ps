%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGAGAGGUGGAAAAUGGCGCUGACGUGAGCGCGAACUCGCACUGCCCAGAGGGUGGCCGCCGCCUAAGCUGCAGCCGCCGGAGCCGCAGAAACAAGAGGCCGAGCCGUGUCGAAGAUGGAGGAGAAACCCUCAGGGCCCAUCCCAGACAUGCUGGCCACUGCAGAGCCCAGCUCCAGUGAGACCGACAAGGAGGUGUUGUCCCCGGCUGUGCCAG\
) } def
/len { sequence length } bind def

/coor [
[188.29277039 369.45941162]
[196.00032043 368.63476562]
[188.59368896 355.59091187]
[181.18705750 342.54705811]
[173.78042603 329.50323486]
[167.74783325 325.24136353]
[166.36264038 316.21871948]
[159.14387512 303.06997681]
[151.92510986 289.92123413]
[139.01771545 282.48831177]
[139.15876770 266.66772461]
[131.94000244 253.51899719]
[124.72123718 240.37023926]
[117.29827118 239.29804993]
[122.86421967 253.22715759]
[113.58428955 265.01202393]
[98.73832703 262.86788940]
[93.17212677 248.93887329]
[102.45234680 237.15364075]
[95.02938843 236.08143616]
[84.38481140 246.64993286]
[73.74024200 257.21841431]
[63.09566879 267.78692627]
[52.45109940 278.35540771]
[52.64505768 294.15850830]
[41.54808807 305.41165161]
[25.74382019 305.43850708]
[14.60865021 294.22317505]
[14.74887466 278.41952515]
[26.08130264 267.40353394]
[41.88260269 267.71084595]
[52.52717590 257.14236450]
[63.17174530 246.57385254]
[73.81631470 236.00535583]
[84.46089172 225.43687439]
[82.48661041 211.61692810]
[86.10336304 199.31620789]
[93.78700256 190.50921631]
[103.44126892 186.22869873]
[101.08412170 171.41506958]
[98.72698212 156.60142517]
[96.26364899 141.80508423]
[93.69425201 127.02677917]
[91.12485504 112.24847412]
[81.76049805 100.53059387]
[67.91262054 94.76550293]
[54.06473923 89.00041199]
[40.21686172 83.23531342]
[29.42089462 93.89940643]
[15.40235424 99.60234833]
[0.30917791 99.50394440]
[-13.55887508 93.65033722]
[-24.10064125 82.96221161]
[-29.73188972 69.09014130]
[-29.62336159 54.15971756]
[-43.47123718 48.39462662]
[-57.31911850 42.62953568]
[-71.16699219 36.86444092]
[-85.01486969 31.09934998]
[-98.86274719 25.33425903]
[-114.57670593 27.17332077]
[-123.35266876 15.13871479]
[-137.20054626 9.37362289]
[-152.91450500 11.21268463]
[-161.69046021 -0.82192105]
[-175.53834534 -6.58701324]
[-191.72248840 -3.94022059]
[-201.89591980 -16.80231285]
[-195.59307861 -31.94187164]
[-179.29779053 -33.78461838]
[-169.77325439 -20.43489075]
[-155.92536926 -14.66979885]
[-141.20190430 -16.92121887]
[-131.43545532 -4.47425508]
[-117.58757782 1.29083717]
[-102.86411285 -0.96058244]
[-93.09765625 11.48638058]
[-79.24977875 17.25147247]
[-65.40190125 23.01656532]
[-51.55402374 28.78165627]
[-37.70614624 34.54674911]
[-23.85826874 40.31184006]
[-13.33953857 29.71535301]
[0.47220263 23.93770409]
[15.48427677 23.88805008]
[29.40918350 29.60509491]
[40.11315536 40.24645996]
[45.94312286 54.21265030]
[45.98195648 69.38743591]
[59.82983398 75.15253448]
[73.67771149 80.91762543]
[87.52558899 86.68271637]
[74.13864136 79.91591644]
[66.86695099 66.79636383]
[68.22341919 51.85782623]
[77.73928070 40.26263809]
[92.12612152 36.01778793]
[106.41224670 40.59016800]
[115.66075897 52.39970016]
[116.67563629 67.36532593]
[109.10589600 80.31558228]
[117.60642242 67.95674133]
[126.10694885 55.59789276]
[134.60746765 43.23904800]
[136.89018250 34.40072250]
[143.31964111 30.76508331]
[151.99656677 18.52944565]
[160.67350769 6.29381037]
[163.08276367 -2.51086044]
[169.56370544 -6.05389929]
[178.41526794 -18.16380882]
[187.26681519 -30.27371788]
[196.11837769 -42.38362885]
[204.96994019 -54.49353790]
[200.37698364 -69.19764709]
[205.26580811 -83.61821747]
[217.56311035 -92.29234314]
[232.43206787 -92.06476593]
[241.28363037 -104.17467499]
[250.13519287 -116.28458405]
[258.98675537 -128.39448547]
[267.83831787 -140.50439453]
[263.70950317 -160.17297363]
[275.20706177 -176.28248596]
[294.54324341 -178.69514465]
[302.86560059 -191.17466736]
[311.18795776 -203.65417480]
[309.46664429 -219.60461426]
[320.96493530 -230.79251099]
[336.86233521 -228.63545227]
[344.96368408 -214.78816223]
[339.05435181 -199.87309265]
[323.66748047 -195.33180237]
[315.34512329 -182.85229492]
[307.02273560 -170.37278748]
[311.66757202 -161.23017883]
[312.10482788 -150.90386963]
[308.18878174 -141.25173950]
[300.56304932 -134.03817749]
[290.55569458 -130.61161804]
[279.94821167 -131.65284729]
[271.09664917 -119.54293060]
[262.24508667 -107.43302155]
[253.39353943 -95.32311249]
[244.54197693 -83.21320343]
[249.27236938 -69.11492157]
[244.74044800 -54.76481628]
[232.48434448 -45.72924042]
[217.07984924 -45.64197922]
[208.22828674 -33.53207016]
[199.37672424 -21.42215919]
[190.52517700 -9.31224918]
[181.67361450 2.79765987]
[172.90913391 14.97074604]
[164.23220825 27.20638275]
[155.55526733 39.44201660]
[146.96632385 51.73957443]
[138.46578979 64.09841919]
[129.96527100 76.45726776]
[121.46473694 88.81610870]
[119.91048431 100.41465759]
[113.54513550 107.79108429]
[105.90315247 109.67907715]
[108.47254944 124.45738220]
[111.04195404 139.23568726]
[115.59259796 147.14886475]
[113.54061890 154.24429321]
[115.89776611 169.05792236]
[118.25490570 183.87156677]
[142.50999451 198.91162109]
[137.86997986 233.15148926]
[145.08874512 246.30023193]
[152.30751038 259.44897461]
[165.73123169 267.82238770]
[165.07385254 282.70248413]
[172.29261780 295.85122681]
[179.51138306 308.99996948]
[186.82426453 322.09658813]
[194.23089600 335.14044189]
[201.63752747 348.18426514]
[209.04417419 361.22811890]
[218.15423584 373.14477539]
[228.79881287 383.71325684]
[244.04338074 387.94570923]
[247.62368774 402.40362549]
[258.26824951 412.97210693]
[268.91284180 423.54061890]
[284.20794678 420.92541504]
[298.10418701 427.83007812]
[305.25814819 441.59963989]
[302.91897583 456.93939209]
[291.98617554 467.95089722]
[276.66360474 470.40002441]
[262.84307861 463.34500122]
[255.83892822 449.49865723]
[258.34432983 434.18518066]
[247.69976807 423.61666870]
[237.05519104 413.04818726]
[222.57199097 409.57165527]
[218.23031616 394.35784912]
[207.58573914 383.78933716]
[200.98564148 387.35147095]
[208.10990906 400.55166626]
[215.23396301 413.75195312]
[202.03353882 420.87579346]
[194.90972900 407.67593384]
[187.78546143 394.47573853]
[181.18537903 398.03787231]
[184.17764282 412.73638916]
[187.16992188 427.43490601]
[196.25440979 441.74954224]
[185.01403809 454.44168091]
[169.70626831 447.15411377]
[172.47140503 430.42718506]
[169.47914124 415.72866821]
[166.48686218 401.03015137]
[168.80291748 389.45465088]
[173.77107239 380.01980591]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[5 178]
[7 177]
[8 176]
[9 175]
[11 173]
[12 172]
[13 171]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[39 169]
[40 168]
[41 167]
[42 165]
[43 164]
[44 163]
[45 92]
[46 91]
[47 90]
[48 89]
[55 82]
[56 81]
[57 80]
[58 79]
[59 78]
[60 77]
[62 75]
[63 74]
[65 72]
[66 71]
[101 160]
[102 159]
[103 158]
[104 157]
[106 156]
[107 155]
[108 154]
[110 153]
[111 152]
[112 151]
[113 150]
[114 149]
[118 145]
[119 144]
[120 143]
[121 142]
[122 141]
[125 135]
[126 134]
[127 133]
[182 201]
[183 200]
[185 198]
[186 197]
[187 196]
[208 216]
[209 215]
[210 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
