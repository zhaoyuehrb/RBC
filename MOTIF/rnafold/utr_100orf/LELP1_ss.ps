%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCUGGGCAGAGGAACCAAAGGGAAAAGCCACCUUCCCAGGCACAGCCAUAACAUCCACCUCACUCAACUGCUUGUCAAGUUCACCACCAACACAGAGGGGGCUCAGAUAAUCAAGAAACAAUGUCGAGUGAUGAUAAAAGUAAAUCAAAUGACCCCAAGACUGAGCCCAAGAACUGCGAUCCCAAGUGUGAACAAAAGUGUGAGUCCAAAUGCCAGCCCA\
) } def
/len { sequence length } bind def

/coor [
[-69.42843628 437.14587402]
[-81.30435181 447.57363892]
[-97.06980133 446.46627808]
[-107.37141418 434.48077393]
[-106.09742737 418.72790527]
[-94.00367737 408.55358887]
[-92.95266724 393.59045410]
[-91.90165710 378.62731934]
[-90.85064697 363.66418457]
[-89.79963684 348.70104980]
[-96.12193298 344.66638184]
[-115.08881378 332.56234741]
[-128.21716309 339.81814575]
[-141.34552002 347.07391357]
[-154.47386169 354.32971191]
[-150.85256958 372.42669678]
[-153.39253235 390.68527222]
[-161.79621887 407.06872559]
[-175.11280823 419.75424194]
[-191.84576416 427.33563232]
[-210.12098694 428.97918701]
[-227.89672852 424.51544189]
[-243.19168091 414.45642090]
[-254.78683472 423.97232056]
[-266.38198853 433.48822021]
[-277.97714233 443.00411987]
[-289.57229614 452.52001953]
[-288.52441406 468.00167847]
[-296.80502319 481.12457275]
[-311.23007202 486.84274292]
[-326.25283813 482.95739746]
[-336.09677124 470.96255493]
[-336.97665405 455.47042847]
[-328.55416870 442.43811035]
[-314.06793213 436.87677002]
[-299.08819580 440.92486572]
[-287.49304199 431.40896606]
[-275.89788818 421.89306641]
[-264.30273438 412.37716675]
[-252.70758057 402.86126709]
[-254.49163818 399.72235107]
[-256.06497192 396.47265625]
[-270.47872925 400.62518311]
[-284.89248657 404.77770996]
[-298.43875122 414.97259521]
[-311.98516846 404.77795410]
[-305.93896484 388.93878174]
[-289.04501343 390.36395264]
[-274.63125610 386.21142578]
[-260.21749878 382.05889893]
[-260.56466675 368.93041992]
[-257.77453613 356.08575439]
[-252.00233459 344.26437378]
[-243.57505798 334.14816284]
[-232.97309875 326.32199097]
[-220.80273438 321.24005127]
[-207.76150513 319.19931030]
[-194.59825134 320.32238770]
[-182.07009888 324.54995728]
[-170.89889526 331.64404297]
[-161.72964478 341.20135498]
[-148.60130310 333.94555664]
[-135.47294617 326.68978882]
[-122.34459686 319.43399048]
[-78.11366272 319.33016968]
[-68.59776306 307.73501587]
[-59.08186340 296.13983154]
[-49.56596375 284.54467773]
[-40.05006409 272.94952393]
[-41.96166229 262.92340088]
[-37.95960236 253.29589844]
[-29.14050865 247.33326721]
[-18.27623177 247.20060730]
[-8.43887424 235.87690735]
[1.39848197 224.55319214]
[11.23583889 213.22947693]
[7.78914785 203.57759094]
[8.66178989 193.28497314]
[13.76331902 184.21041870]
[22.23356628 178.02052307]
[32.58702087 175.88372803]
[42.97317123 178.25027466]
[53.27812576 167.35037231]
[63.58308029 156.45046997]
[73.88803101 145.55056763]
[84.19298553 134.65066528]
[94.49794006 123.75075531]
[80.44802094 115.56778717]
[74.39432526 100.04396057]
[79.43296051 83.73908234]
[72.73580933 70.31715393]
[57.40913391 67.89379120]
[46.45783997 56.90066528]
[44.09291840 41.56486511]
[51.22372818 27.78331566]
[65.10833740 20.85530281]
[80.40782166 23.44478989]
[91.23921204 34.55606461]
[93.43763733 49.91661835]
[86.15773773 63.62000275]
[92.85488892 77.04193115]
[107.76057434 78.72139740]
[117.27646637 67.12624359]
[126.79236603 55.53108597]
[136.30827332 43.93592834]
[145.82417297 32.34077072]
[155.34007263 20.74561310]
[164.85597229 9.15045738]
[174.37187195 -2.44469976]
[167.97045898 -10.62085629]
[163.11193848 -19.79246330]
[159.94671631 -29.67179680]
[158.57214355 -39.94927597]
[159.02944946 -50.30317307]
[161.30258179 -60.40967941]
[165.31872559 -69.95303345]
[170.95060730 -78.63539886]
[178.02056885 -86.18611908]
[186.30618286 -92.37021637]
[195.54719543 -96.99565125]
[205.45375061 -99.91930389]
[215.71546936 -101.05141449]
[226.01112366 -100.35832214]
[236.01879883 -97.86346436]
[245.42584229 -93.64659119]
[253.93873596 -87.84122467]
[264.83862305 -98.14617920]
[275.73852539 -108.45113373]
[286.63845825 -118.75608826]
[287.24392700 -134.32115173]
[298.44476318 -144.61656189]
[313.27993774 -143.94342041]
[324.17984009 -154.24836731]
[335.07977295 -164.55332947]
[345.97967529 -174.85827637]
[341.77648926 -189.57533264]
[344.90545654 -204.55760193]
[354.64758301 -216.36224365]
[368.76416016 -222.27665710]
[384.01135254 -220.94174194]
[396.88543701 -212.66426086]
[404.42803955 -199.34631348]
[404.90594482 -184.04826355]
[398.20928955 -170.28550720]
[385.87698364 -161.22059631]
[370.74285889 -158.93661499]
[356.28460693 -163.95837402]
[345.38470459 -153.65342712]
[334.48480225 -143.34846497]
[323.58489990 -133.04351807]
[323.42517090 -118.19393158]
[312.51791382 -107.58796692]
[296.94338989 -107.85618591]
[286.04348755 -97.55123138]
[275.14358521 -87.24627686]
[264.24368286 -76.94132233]
[273.09768677 -59.01657104]
[275.37466431 -39.13365555]
[270.79278564 -19.63116074]
[259.87777710 -2.80766535]
[243.90260315 9.34916496]
[224.73904419 15.39740944]
[204.63839722 14.61191463]
[185.96702576 7.07119942]
[176.45112610 18.66635704]
[166.93522644 30.26151276]
[157.41932678 41.85667038]
[147.90342712 53.45182800]
[138.38752747 65.04698181]
[128.87162781 76.64214325]
[119.35572815 88.23729706]
[121.07586670 95.53737640]
[135.67607117 92.09732056]
[139.11590576 106.69757843]
[124.51615143 110.13752747]
[126.23628998 117.43759918]
[139.92803955 123.56427002]
[153.61978149 129.69093323]
[166.47738647 121.16533661]
[181.90347290 120.96734619]
[194.97566223 129.16014099]
[201.52262878 143.12940979]
[199.45529175 158.41763306]
[189.43331909 170.14637756]
[174.65467834 174.57305908]
[159.83518982 170.28512573]
[149.70370483 158.65084839]
[147.49311829 143.38267517]
[133.80137634 137.25601196]
[120.10962677 131.12934875]
[105.39785004 134.05570984]
[95.09289551 144.95561218]
[84.78794098 155.85551453]
[74.48298645 166.75541687]
[64.17803192 177.65531921]
[53.87307739 188.55523682]
[55.49066162 208.59051514]
[42.04848480 223.12115479]
[22.55954933 223.06683350]
[12.72219181 234.39054871]
[2.88483548 245.71426392]
[-6.95252132 257.03796387]
[-9.90597725 276.98507690]
[-28.45490646 282.46542358]
[-37.97080612 294.06057739]
[-47.48670578 305.65573120]
[-57.00260544 317.25091553]
[-66.51850128 328.84606934]
[-53.80643082 320.88345337]
[-38.83145905 320.01730347]
[-25.28611183 326.46118164]
[-16.51039505 338.62615967]
[-14.66822433 353.51260376]
[-20.21383858 367.44982910]
[-31.77980232 377.00119019]
[-46.51418686 379.81152344]
[-60.78379059 375.18783569]
[-71.07002258 364.27026367]
[-74.83650208 349.75207520]
[-75.88751221 364.71520996]
[-76.93852234 379.67831421]
[-77.98953247 394.64144897]
[-79.04054260 409.60458374]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 223]
[7 222]
[8 221]
[9 220]
[10 219]
[12 64]
[13 63]
[14 62]
[15 61]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[42 50]
[43 49]
[44 48]
[65 208]
[66 207]
[67 206]
[68 205]
[69 204]
[73 202]
[74 201]
[75 200]
[76 199]
[82 196]
[83 195]
[84 194]
[85 193]
[86 192]
[87 191]
[90 101]
[91 100]
[102 171]
[103 170]
[104 169]
[105 168]
[106 167]
[107 166]
[108 165]
[109 164]
[126 156]
[127 155]
[128 154]
[129 153]
[132 150]
[133 149]
[134 148]
[135 147]
[176 190]
[177 189]
[178 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
