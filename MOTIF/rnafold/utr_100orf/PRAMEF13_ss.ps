%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCACAGCACUCAUUCCUGGAGCUACUGCUUGGUUCCCUGAGAGGUCCCAGAACUCUGCAAAGUGAGUCCAGCGCUGAGAUUUUUCUUGCAGAUCUAUCAGGAUGAGCAUCCAGGCCCCACCCAGACUCCUGGAGCUGGCAGGGCAGAGCCUGCUGAGAGACCAGGCCUUGUCCAUCUCUGCCAUGGAGGAGCUGCCCAGGG\
) } def
/len { sequence length } bind def

/coor [
[86.95947266 362.53646851]
[89.44660950 343.31503296]
[89.67759705 328.31680298]
[89.90859222 313.31860352]
[77.90390015 304.54217529]
[73.31475067 290.21026611]
[78.10066223 275.75521851]
[90.62524414 266.78631592]
[90.85623169 251.78810120]
[91.08722687 236.78987122]
[91.20272064 221.79032898]
[91.20272064 206.79032898]
[91.20272064 191.79032898]
[88.05731964 185.09776306]
[91.31999969 176.55978394]
[91.55098724 161.56155396]
[91.78198242 146.56333923]
[92.01296997 131.56510925]
[83.65110016 130.22607422]
[75.51042175 126.61628723]
[68.21628571 120.77827454]
[56.53007507 130.18212891]
[44.84386444 139.58598328]
[33.15765762 148.98983765]
[21.47144699 158.39370728]
[9.78523922 167.79756165]
[6.63657188 183.52859497]
[-7.69101286 190.74661255]
[-22.20661926 183.91458130]
[-25.77511597 168.27343750]
[-15.65905666 155.82173157]
[0.38138208 156.11134338]
[12.06759071 146.70748901]
[23.75379944 137.30363464]
[35.44000626 127.89978027]
[47.12621689 118.49591827]
[58.81242371 109.09206390]
[58.23506927 94.10317993]
[45.86010742 85.62612915]
[33.48514557 77.14908600]
[21.11018372 68.67204285]
[8.73522091 60.19499588]
[-7.02251673 58.77926636]
[-13.14985371 45.20336914]
[-25.52481651 36.72632217]
[-37.89977646 28.24927711]
[-33.51463318 42.59397888]
[-37.47491837 57.06174469]
[-48.55450058 67.17326355]
[-63.32308197 69.79795837]
[-77.20822144 64.12319946]
[-85.91100311 51.90593719]
[-86.73699951 36.92869568]
[-79.43047333 23.82851982]
[-66.25356293 16.66129684]
[-51.28643799 17.64585304]
[-62.37157059 7.54041862]
[-73.45670319 -2.56501603]
[-84.54183960 -12.67045116]
[-95.62697601 -22.77588463]
[-106.71210480 -32.88132095]
[-117.79724121 -42.98675537]
[-132.91078186 -40.00567245]
[-146.72030640 -46.42055893]
[-154.01821899 -59.58127213]
[-152.18908691 -74.33905792]
[-163.27421570 -84.44449615]
[-174.35934448 -94.54992676]
[-185.44448853 -104.65536499]
[-196.52961731 -114.76079559]
[-207.69223022 -124.78057861]
[-218.93167114 -134.71411133]
[-235.10212708 -137.44326782]
[-240.56947327 -152.90419006]
[-229.70938110 -165.19200134]
[-213.69377136 -161.66606140]
[-208.99813843 -145.95355225]
[-197.75869751 -136.02001953]
[-190.66099548 -133.94479370]
[-186.42417908 -125.84593201]
[-175.33905029 -115.74049377]
[-164.25390625 -105.63506317]
[-153.16877747 -95.52962494]
[-142.08364868 -85.42419434]
[-127.55758667 -88.60720825]
[-113.77964783 -82.55474091]
[-106.11794281 -69.39602661]
[-107.69180298 -54.07188797]
[-96.60667419 -43.96645355]
[-85.52153778 -33.86101913]
[-74.43640137 -23.75558472]
[-63.35126877 -13.65015030]
[-52.26613617 -3.54471517]
[-41.18100357 6.56071949]
[-29.42273140 15.87431526]
[-17.04776955 24.35136032]
[-4.67280769 32.82840729]
[10.19979000 33.63779831]
[17.21226692 47.82003403]
[29.58722878 56.29707718]
[41.96219254 64.77412415]
[54.33715439 73.25116730]
[66.71211243 81.72821808]
[77.58420563 69.29538727]
[92.72166443 62.64266586]
[109.27057648 63.04180145]
[124.10350037 70.43339539]
[132.95761108 58.32535172]
[141.81172180 46.21730804]
[144.35333252 37.43764877]
[150.89659119 33.99239731]
[159.93611145 22.02213669]
[168.97563171 10.05187893]
[178.01515198 -1.91837931]
[187.05467224 -13.88863754]
[196.09419250 -25.85889626]
[188.68785095 -39.16550827]
[187.34056091 -54.33470917]
[192.28576660 -68.73834991]
[202.66668701 -79.88090515]
[216.68473816 -85.83186340]
[231.91122437 -85.56018829]
[245.70806885 -79.11294556]
[255.68489075 -67.60715485]
[260.11312866 -53.03627396]
[258.22555542 -37.92478943]
[250.34922791 -24.89085770]
[237.84877014 -16.19268608]
[222.88993835 -13.33728790]
[208.06445312 -16.81937599]
[199.02493286 -4.84911823]
[189.98541260 7.12114048]
[180.94589233 19.09139824]
[171.90637207 31.06165695]
[162.86685181 43.03191376]
[153.91976929 55.07142258]
[145.06565857 67.17946625]
[136.21154785 79.28750610]
[141.19686890 93.43482208]
[155.68576050 97.31710815]
[170.17463684 101.19939423]
[184.66352844 105.08168030]
[199.29110718 108.40340424]
[214.03570557 111.15964508]
[228.78030396 113.91589355]
[243.52490234 116.67213440]
[258.26950073 119.42837524]
[273.01409912 122.18461609]
[288.00100708 117.11483765]
[299.08984375 127.05902100]
[313.83444214 129.81526184]
[328.57904053 132.57150269]
[343.32363892 135.32775879]
[358.06823730 138.08399963]
[368.57659912 126.78895569]
[383.52899170 122.99034882]
[398.15417480 127.90029907]
[407.78530884 139.95205688]
[409.34912109 155.29995728]
[402.34658813 169.04653931]
[389.01223755 176.80531311]
[373.60098267 176.10047913]
[361.03051758 167.15696716]
[355.31201172 152.82859802]
[340.56741333 150.07234192]
[325.82281494 147.31610107]
[311.07821655 144.55986023]
[296.33361816 141.80361938]
[282.40133667 147.07054138]
[270.25784302 136.92921448]
[255.51325989 134.17297363]
[240.76866150 131.41673279]
[226.02406311 128.66049194]
[211.27946472 125.90424347]
[196.53486633 123.14800262]
[202.69966125 136.82261658]
[195.99316406 150.23988342]
[181.35543823 153.51655579]
[169.56867981 144.23902893]
[169.31512451 129.24116516]
[180.78125000 119.57056427]
[166.29235840 115.68827820]
[151.80346680 111.80599213]
[137.31457520 107.92371368]
[130.13504028 120.20978546]
[119.39469910 128.43818665]
[107.01119232 131.79609680]
[106.78020477 146.79432678]
[106.54920959 161.79254150]
[106.31822205 176.79077148]
[106.20272064 191.79032898]
[106.20272064 206.79032898]
[106.20272064 221.79032898]
[109.33353424 230.37753296]
[106.08544159 237.02087402]
[105.85445404 252.01908875]
[105.62346649 267.01730347]
[117.86590576 276.36764526]
[122.20440674 290.96322632]
[117.17607880 305.14700317]
[104.90681458 313.54959106]
[104.67581940 328.54779053]
[104.44483185 343.54602051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[8 197]
[9 196]
[10 195]
[11 193]
[12 192]
[13 191]
[15 190]
[16 189]
[17 188]
[18 187]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[38 103]
[39 102]
[40 101]
[41 100]
[42 99]
[44 97]
[45 96]
[46 95]
[56 94]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[71 78]
[72 77]
[107 138]
[108 137]
[109 136]
[111 135]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[139 184]
[140 183]
[141 182]
[142 181]
[143 175]
[144 174]
[145 173]
[146 172]
[147 171]
[148 170]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
