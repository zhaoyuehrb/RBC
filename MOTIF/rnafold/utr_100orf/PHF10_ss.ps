%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGCAGCGGCGGCGGCGGCCGGGACAAGGCGGAGGCGACGGCGGCGGCGGCGGCGCGGGGCGCUCGGGCUGAUGGCGGCGGCGGCCGGGCCCGGGGCUGCGCUGUCCCCGCGGCCGUGCGACAGCGACCCAGCCACCCCCGGAGCGCAGUCCCCGAAGGAUGAUAAUGAAG\
) } def
/len { sequence length } bind def

/coor [
[162.51734924 512.37127686]
[172.58630371 501.09704590]
[185.53190613 493.29302979]
[181.90307617 478.73858643]
[178.27424622 464.18414307]
[167.68777466 453.70675659]
[171.85667419 438.44470215]
[168.22784424 423.89025879]
[164.59902954 409.33581543]
[154.01254272 398.85842896]
[158.18145752 383.59634399]
[154.55262756 369.04190063]
[149.87049866 363.29629517]
[150.98982239 354.20181274]
[147.61557007 339.58624268]
[134.88746643 331.93569946]
[131.25727844 317.16149902]
[139.36819458 303.86297607]
[135.99392700 289.24743652]
[132.61965942 274.63186646]
[122.21765900 263.97131348]
[126.65229034 248.78433228]
[123.27802277 234.16877747]
[112.87601471 223.50822449]
[117.31064606 208.32122803]
[113.93637848 193.70568848]
[110.56211853 179.09013367]
[100.16011047 168.42956543]
[104.59474182 153.24258423]
[101.22047424 138.62702942]
[97.84620667 124.01148224]
[88.09805298 120.96505737]
[80.48596191 114.15599823]
[76.37609100 104.80633545]
[76.50604248 94.59407806]
[80.85250092 85.35202026]
[88.63539124 78.73886871]
[86.03067017 63.96675110]
[71.69319916 58.63907242]
[62.01138306 46.92756653]
[59.50822067 32.04131317]
[64.75720978 17.99481773]
[76.25485992 8.52541637]
[73.65013885 -6.24669933]
[69.06629181 -14.18086052]
[71.13121796 -21.29918861]
[68.78469849 -36.11451340]
[66.43818665 -50.92984009]
[64.09166718 -65.74516296]
[61.74515152 -80.56049347]
[51.94428635 -92.98037720]
[57.59534454 -106.76133728]
[55.24882507 -121.57666016]
[52.90230942 -136.39198303]
[50.55579376 -151.20730591]
[40.75492859 -163.62719727]
[46.40598679 -177.40815735]
[44.05946732 -192.22348022]
[41.71295166 -207.03880310]
[39.36643600 -221.85414124]
[37.01991653 -236.66946411]
[34.67340088 -251.48478699]
[32.32688522 -266.30010986]
[29.98036766 -281.11544800]
[26.09676361 -286.52191162]
[25.61976242 -292.22033691]
[27.81990242 -296.48794556]
[25.99186325 -311.37612915]
[24.16382217 -326.26431274]
[20.00149536 -334.42752075]
[22.43613815 -341.42800903]
[20.86821175 -356.34582520]
[19.30028534 -371.26367188]
[17.73235703 -386.18148804]
[16.16443062 -401.09933472]
[14.59650421 -416.01715088]
[13.02857685 -430.93496704]
[11.46065044 -445.85281372]
[0.03098435 -436.13876343]
[-14.72339725 -438.84213257]
[-21.96647453 -451.97750854]
[-16.37873650 -465.89788818]
[-2.06396699 -470.37979126]
[10.46503448 -462.13098145]
[10.20324898 -477.12869263]
[9.94146252 -492.12640381]
[9.67967701 -507.12411499]
[0.77428967 -520.89459229]
[8.48701763 -535.36682129]
[24.88366699 -535.65307617]
[33.09677124 -521.45880127]
[24.67739296 -507.38589478]
[24.93917847 -492.38818359]
[25.20096397 -477.39047241]
[25.46274948 -462.39276123]
[26.37847900 -447.42074585]
[27.94640541 -432.50289917]
[29.51433182 -417.58508301]
[31.08226013 -402.66723633]
[32.65018463 -387.74942017]
[34.21811295 -372.83160400]
[35.78604126 -357.91375732]
[37.35396576 -342.99594116]
[39.05201340 -328.09234619]
[40.88005447 -313.20416260]
[42.70809555 -298.31597900]
[44.79569244 -283.46194458]
[47.14220810 -268.64663696]
[49.48872757 -253.83129883]
[51.83524323 -239.01597595]
[54.18175888 -224.20065308]
[56.52827835 -209.38533020]
[58.87479401 -194.57000732]
[61.22130966 -179.75466919]
[70.85433960 -168.39448547]
[65.37111664 -153.55383301]
[67.71763611 -138.73851013]
[70.06414795 -123.92317963]
[72.41066742 -109.10785675]
[82.04369354 -97.74765778]
[76.56047821 -82.90700531]
[78.90699005 -68.09168243]
[81.25350952 -53.27635574]
[83.60002899 -38.46103287]
[85.94654083 -23.64570618]
[88.42225647 -8.85142231]
[91.02697754 5.92069387]
[105.06996155 10.88659191]
[114.80658722 22.29071999]
[117.54578400 37.13535690]
[112.45342255 51.45194244]
[100.80278015 61.36203003]
[103.40750885 76.13414764]
[119.75812531 86.18672180]
[123.58472443 104.99507141]
[112.46175385 120.63721466]
[115.83602142 135.25276184]
[119.21028900 149.86831665]
[129.85365295 161.57427979]
[125.17766571 175.71586609]
[128.55192566 190.33142090]
[131.92619324 204.94696045]
[142.56954956 216.65292358]
[137.89356995 230.79450989]
[141.26783752 245.41006470]
[151.91119385 257.11602783]
[147.23521423 271.25759888]
[150.60948181 285.87316895]
[153.98374939 300.48870850]
[167.10348511 308.88577271]
[170.31726074 323.75607300]
[162.23110962 336.21197510]
[165.60537720 350.82754517]
[169.10705566 365.41308594]
[172.73588562 379.96752930]
[183.58192444 391.48596191]
[179.15345764 405.70700073]
[182.78228760 420.26141357]
[186.41111755 434.81585693]
[197.25715637 446.33428955]
[192.82868958 460.55532837]
[196.45751953 475.10977173]
[200.08634949 489.66418457]
[215.18040466 490.47714233]
[229.36367798 495.70458984]
[241.37498474 504.88171387]
[250.14633179 517.19250488]
[254.89772034 531.54223633]
[255.20671082 546.65502930]
[251.04579163 561.18701172]
[242.78497314 573.84600830]
[231.15878296 583.50640869]
[217.20101929 589.30914307]
[202.15280151 590.73840332]
[187.35221863 587.66693115]
[174.11529541 580.36791992]
[163.61907959 569.49035645]
[156.79687500 556.00152588]
[154.25531006 541.10083008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 163]
[4 162]
[5 161]
[7 159]
[8 158]
[9 157]
[11 155]
[12 154]
[14 153]
[15 152]
[18 149]
[19 148]
[20 147]
[22 145]
[23 144]
[25 142]
[26 141]
[27 140]
[29 138]
[30 137]
[31 136]
[37 133]
[38 132]
[43 127]
[44 126]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[52 119]
[53 118]
[54 117]
[55 116]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[67 106]
[68 105]
[69 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[84 95]
[85 94]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
