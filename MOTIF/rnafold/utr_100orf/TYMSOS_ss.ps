%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:11:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGAGGGGCCAAAGCCAGGACUUUGAGACCGGCGCGCGGUCAAGCCCAGGCAGCUCUCCCUAACCCUCCAGCACUGGGCAAACGCUGCCCGAUGACGCCCGCCUCGGGGGCCACGGCAUCACUGGGGCGACUGCGAGCCCGGCCGCGGAGCCGCUGGGACGCGGCUUACCUCCCGGCUGUCGCUGCUGUGU\
) } def
/len { sequence length } bind def

/coor [
[18.70285416 137.10729980]
[4.91539955 143.01542664]
[-8.87205601 148.92356873]
[-22.65951157 154.83171082]
[-36.44696808 160.73983765]
[-50.08685684 166.98110962]
[-63.57113266 173.55181885]
[-77.05540466 180.12254333]
[-90.53968811 186.69325256]
[-104.02396393 193.26397705]
[-104.03510284 208.48767090]
[-110.62808228 222.14123535]
[-122.44698334 231.53982544]
[-137.11427307 234.86123657]
[-151.70893860 231.49890137]
[-163.34822083 222.17192078]
[-176.83250427 228.74264526]
[-190.31677246 235.31335449]
[-199.33316040 248.31394958]
[-214.16366577 246.93363953]
[-227.64794922 253.50434875]
[-236.66432190 266.50494385]
[-251.49482727 265.12463379]
[-264.97909546 271.69534302]
[-278.46337891 278.26608276]
[-281.39709473 282.61788940]
[-285.31802368 285.14703369]
[-289.36273193 285.78320312]
[-292.76586914 284.81051636]
[-306.55331421 290.71865845]
[-320.34075928 296.62680054]
[-334.12823486 302.53491211]
[-347.91567993 308.44305420]
[-355.18563843 322.74435425]
[-370.92800903 325.83590698]
[-383.06655884 315.34616089]
[-382.28964233 299.32192993]
[-369.19326782 290.05563354]
[-353.82382202 294.65560913]
[-340.03634644 288.74746704]
[-326.24890137 282.83932495]
[-312.46145630 276.93118286]
[-298.67398071 271.02307129]
[-285.03408813 264.78179932]
[-271.54983521 258.21109009]
[-258.06555176 251.64036560]
[-250.01365662 239.10975647]
[-234.21865845 240.02008057]
[-220.73437500 233.44935608]
[-212.68247986 220.91874695]
[-196.88748169 221.82907104]
[-183.40321350 215.25836182]
[-169.91893005 208.68765259]
[-170.09210205 193.77337646]
[-163.74652100 180.20712280]
[-152.09228516 170.70239258]
[-137.40711975 167.18589783]
[-122.59123993 170.40718079]
[-110.59467316 179.77969360]
[-97.11039734 173.20898438]
[-83.62612152 166.63825989]
[-70.14184570 160.06755066]
[-56.65756989 153.49682617]
[-55.16884613 150.28576660]
[-52.04322052 147.64096069]
[-47.56607819 146.32736206]
[-42.35510254 146.95239258]
[-28.56764793 141.04425049]
[-14.78019238 135.13610840]
[-0.99273694 129.22798157]
[12.79471874 123.31983948]
[21.44562912 111.19503021]
[37.17778015 112.87132263]
[50.96523666 106.96318817]
[64.75269318 101.05505371]
[78.54014587 95.14691162]
[84.22425079 81.26559448]
[78.54014587 67.38427734]
[72.85604858 53.50296021]
[67.17194366 39.62164307]
[61.48784637 25.74032211]
[55.80374527 11.85900497]
[41.62204742 4.35840750]
[38.78580856 -11.43194771]
[49.47074890 -23.39905167]
[65.48030090 -22.36276627]
[74.53330231 -9.11804104]
[69.68506622 6.17490387]
[75.36916351 20.05622292]
[81.05326843 33.93754196]
[86.73736572 47.81885910]
[92.42146301 61.70017624]
[98.10556793 75.58149719]
[105.53462982 76.61059570]
[107.59304810 61.75250244]
[122.45111084 63.81115341]
[120.39275360 78.66878510]
[127.82181549 79.69788361]
[137.06524658 67.88436890]
[146.30867004 56.07085800]
[148.20964050 36.01160431]
[166.42053223 29.53612900]
[175.27658081 17.42949295]
[184.13261414 5.32285643]
[192.98864746 -6.78377962]
[201.84468079 -18.89041519]
[210.70071411 -30.99705124]
[219.55674744 -43.10368729]
[228.41278076 -55.21032333]
[237.17050171 -67.38826752]
[245.82934570 -79.63672638]
[254.38871765 -91.95488739]
[262.84808350 -104.34194946]
[263.54595947 -120.72623444]
[278.20736694 -128.07307434]
[291.74984741 -118.82466125]
[290.24206543 -102.49497223]
[275.23513794 -95.88259125]
[266.77578735 -83.49552917]
[265.59808350 -76.18842316]
[258.07778931 -70.97789001]
[249.41896057 -58.72943878]
[248.12310791 -51.44235992]
[240.51942444 -46.35428619]
[231.66339111 -34.24765015]
[222.80735779 -22.14101601]
[213.95132446 -10.03437996]
[205.09527588 2.07225585]
[196.23924255 14.17889214]
[187.38320923 26.28552818]
[178.52717590 38.39216232]
[180.99673462 48.32545471]
[177.51071167 58.18260956]
[168.99497986 64.62010956]
[158.12217712 65.31428528]
[148.87875366 77.12779999]
[139.63533020 88.94130707]
[142.41262817 103.68195343]
[155.32128906 111.32175446]
[168.22994995 118.96155548]
[186.63603210 118.72695923]
[194.65443420 134.33013916]
[207.68511963 141.75991821]
[220.71578979 149.18968201]
[233.74645996 156.61946106]
[246.77714539 164.04922485]
[259.80783081 171.47900391]
[268.82696533 173.01501465]
[272.98794556 179.13604736]
[285.89660645 186.77584839]
[298.80526733 194.41564941]
[312.01254272 201.52673340]
[325.49682617 208.09745789]
[338.98110962 214.66816711]
[352.46536255 221.23889160]
[365.94964600 227.80960083]
[380.80749512 222.42254639]
[395.08718872 229.19499207]
[400.31683350 244.10894775]
[393.39379883 258.31622314]
[378.42538452 263.38793945]
[364.29208374 256.31506348]
[359.37893677 241.29386902]
[345.89465332 234.72315979]
[332.41036987 228.15245056]
[318.92611694 221.58172607]
[305.44183350 215.01101685]
[307.70687866 229.83901978]
[297.64889526 240.96723938]
[282.66812134 240.20805359]
[273.78671265 228.12004089]
[277.53918457 213.59698486]
[291.16546631 207.32431030]
[278.25680542 199.68450928]
[265.34814453 192.04470825]
[252.37805176 184.50967407]
[239.34736633 177.07989502]
[226.31669617 169.65013123]
[213.28602600 162.22036743]
[200.25534058 154.79058838]
[187.22467041 147.36082458]
[175.46922302 150.25085449]
[164.54852295 144.15574646]
[160.59014893 131.87020874]
[147.68148804 124.23040771]
[134.77282715 116.59060669]
[118.34545135 127.88643646]
[101.07652283 128.21112061]
[88.81988525 120.19540405]
[84.44828796 108.93437195]
[70.66082764 114.84250641]
[56.87337494 120.75064087]
[43.08591843 126.65878296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 71]
[2 70]
[3 69]
[4 68]
[5 67]
[6 63]
[7 62]
[8 61]
[9 60]
[10 59]
[16 53]
[17 52]
[18 51]
[20 49]
[21 48]
[23 46]
[24 45]
[25 44]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[73 193]
[74 192]
[75 191]
[76 190]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[98 137]
[99 136]
[100 135]
[102 131]
[103 130]
[104 129]
[105 128]
[106 127]
[107 126]
[108 125]
[109 124]
[110 122]
[111 121]
[112 119]
[113 118]
[138 186]
[139 185]
[140 184]
[142 181]
[143 180]
[144 179]
[145 178]
[146 177]
[147 176]
[149 175]
[150 174]
[151 173]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
