%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCCAGCCCGGCCGGCCCUCCCGCGGGCGGCACUCGGGCACCGGGCUCGCCGGGACCAGAUCCGCGAGCCCGUCAGCCUGCGCCAUGGGCUGCGACGGCCGCGUGUCGGGGCUGCUCCGCCGCAACCUGCAGCCCACGCUCACCUACUGGAGCGUCUUCUUCAGCUUCGGCCUGUGCAUCGCCU\
) } def
/len { sequence length } bind def

/coor [
[86.93184662 324.02325439]
[74.03054810 316.02819824]
[64.89170837 303.91018677]
[60.75128174 289.30807495]
[62.16923523 274.19671631]
[68.95379639 260.61972046]
[80.18740845 250.41334534]
[94.35082245 244.95787048]
[94.35082245 229.95787048]
[81.96428680 218.59580994]
[81.61071014 201.45355225]
[93.99619293 189.11376953]
[93.74420166 174.11589050]
[93.49221802 159.11799622]
[93.24022675 144.12011719]
[92.98824310 129.12223816]
[79.09416199 123.46939850]
[68.44309998 134.03135681]
[57.79204559 144.59332275]
[47.14099121 155.15528870]
[47.32525253 170.95849609]
[36.22137833 182.20480347]
[20.41709900 182.22198486]
[9.28881264 170.99981689]
[9.43873692 155.19624329]
[20.77792168 144.18722534]
[36.57903290 144.50422668]
[47.23008728 133.94226074]
[57.88114166 123.38031006]
[68.53219604 112.81834412]
[65.65219879 98.09741974]
[51.80609131 92.32807922]
[37.95998383 86.55873871]
[28.13379478 91.28392029]
[17.54851913 89.83908081]
[9.67898750 82.94290924]
[6.97356701 73.06285858]
[-6.67091274 66.83163452]
[-20.31539345 60.60040665]
[-33.95987320 54.36918259]
[-47.60435104 48.13795853]
[-63.86866760 54.55218887]
[-79.43779755 47.36994553]
[-84.89537048 31.47222900]
[-98.64260101 25.47109795]
[-112.38983917 19.46996880]
[-126.13706970 13.46883869]
[-139.88430786 7.46770859]
[-153.63153076 1.46657860]
[-167.37876892 -4.53455114]
[-181.12600708 -10.53568172]
[-194.87324524 -16.53681183]
[-204.01135254 -17.10558510]
[-208.79966736 -22.75595856]
[-222.44415283 -28.98718452]
[-235.88885498 -21.23995399]
[-251.31597900 -22.90839005]
[-262.79345703 -33.35094070]
[-265.90798950 -48.55223465]
[-259.46197510 -62.66706085]
[-245.93402100 -70.26798248]
[-230.52590942 -68.43229675]
[-219.16236877 -57.86584854]
[-216.21293640 -42.63166428]
[-202.56845093 -36.40044022]
[-188.87211609 -30.28404427]
[-175.12487793 -24.28291512]
[-161.37763977 -18.28178596]
[-147.63040161 -12.28065491]
[-133.88317871 -6.27952528]
[-120.13594055 -0.27839544]
[-106.38870239 5.72273445]
[-92.64147186 11.72386456]
[-78.89424133 17.72499466]
[-67.66309357 11.38439083]
[-54.63690948 12.69627953]
[-44.60139847 21.40418053]
[-41.37312698 34.49347687]
[-27.72864723 40.72470474]
[-14.08416748 46.95592880]
[-0.43968755 53.18715286]
[13.20479202 59.41837692]
[32.25172424 56.15735626]
[43.72932434 72.71263123]
[57.57543182 78.48197174]
[71.42153931 84.25131226]
[83.78509521 71.48892975]
[101.08528137 67.04946136]
[118.24185944 72.33560181]
[127.38160706 60.44169617]
[136.52136230 48.54779053]
[145.66110229 36.65388489]
[154.80085754 24.75997925]
[163.94061279 12.86607456]
[173.08035278 0.97216892]
[182.22010803 -10.92173672]
[183.47097778 -17.44815063]
[187.26959229 -21.71042061]
[191.87213135 -23.05482292]
[201.40628052 -34.63497925]
[200.07189941 -50.15455246]
[209.90583801 -61.76265717]
[224.70960999 -62.93914795]
[234.24375916 -74.51930237]
[243.77790833 -86.09945679]
[242.10292053 -96.87329865]
[246.55319214 -106.58570099]
[255.43391418 -112.11918640]
[265.67401123 -111.84545898]
[275.59182739 -123.09879303]
[285.50961304 -134.35212708]
[295.42739868 -145.60545349]
[305.34518433 -156.85879517]
[311.28167725 -172.73941040]
[328.18508911 -171.43109131]
[331.60720825 -154.82611084]
[316.59851074 -146.94099426]
[306.68072510 -135.68766785]
[296.76293945 -124.43433380]
[286.84515381 -113.18100739]
[276.92736816 -101.92767334]
[274.52899170 -82.75300598]
[255.35806274 -76.56530762]
[245.82391357 -64.98515320]
[236.28976440 -53.40499496]
[237.97747803 -38.65077209]
[228.47346497 -26.77102852]
[212.98643494 -25.10082817]
[203.45228577 -13.52067375]
[194.11401367 -1.78198695]
[184.97425842 10.11191845]
[175.83451843 22.00582314]
[166.69476318 33.89972687]
[157.55500793 45.79363251]
[148.41526794 57.68753815]
[139.27551270 69.58144379]
[130.13577271 81.47534943]
[135.08145142 95.63656616]
[149.63859558 99.25453186]
[164.19573975 102.87248993]
[178.75288391 106.49044800]
[193.31002808 110.10841370]
[207.86715698 113.72637177]
[219.65939331 103.64059448]
[235.13041687 102.44589233]
[248.33128357 110.60166168]
[254.18601990 124.97182465]
[250.44334412 140.03077698]
[238.54238892 149.98803711]
[223.05932617 151.01483154]
[209.94770813 142.71635437]
[204.24920654 128.28350830]
[189.69206238 124.66555023]
[175.13491821 121.04759216]
[160.57777405 117.42963409]
[146.02064514 113.81166840]
[131.46350098 110.19371033]
[125.59415436 114.86284637]
[136.63470459 125.01696777]
[147.67526245 135.17109680]
[162.00785828 139.59561157]
[169.82250977 152.39916992]
[167.20518494 167.16906738]
[155.46678162 176.50770569]
[140.48655701 175.73777771]
[129.76742554 165.24491882]
[128.67848206 150.28324890]
[121.26697540 137.24218750]
[113.85546875 124.20111084]
[107.98612213 128.87023926]
[108.23811340 143.86813354]
[108.49009705 158.86601257]
[108.74208832 173.86389160]
[108.99407196 188.86178589]
[119.69863129 197.05712891]
[123.66430664 209.73832703]
[119.65517426 222.20144653]
[109.35082245 229.95787048]
[109.35082245 244.95787048]
[123.51422882 250.41334534]
[134.74784851 260.61972046]
[141.53240967 274.19671631]
[142.95036316 289.30807495]
[138.80993652 303.91018677]
[129.67109680 316.02819824]
[116.76979065 324.02325439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 179]
[9 178]
[12 174]
[13 173]
[14 172]
[15 171]
[16 170]
[17 30]
[18 29]
[19 28]
[20 27]
[31 86]
[32 85]
[33 84]
[37 82]
[38 81]
[39 80]
[40 79]
[41 78]
[44 74]
[45 73]
[46 72]
[47 71]
[48 70]
[49 69]
[50 68]
[51 67]
[52 66]
[54 65]
[55 64]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[99 129]
[100 128]
[103 125]
[104 124]
[105 123]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
