%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUGGGAGAAAUCCUCCCUUCACUGGGAGAGAACUUCUCUCCCAGGGCGGUGCGACCCGGAGCUCCAGCGCCCUAGUCUCCACUUCGUUUGCUGAAACUUGCUUUCUACCAGCUAAGAACCAUGCUGCGAGUGAUUGUGGAAUCUGCCAGCAAUAUCCCUAAAACGAAAUUUGGCAAGCCGGAUCCUAUUGUUUCUGUCAUUUUUAAGGAUGAGAAAAAGA\
) } def
/len { sequence length } bind def

/coor [
[75.11602020 122.79631042]
[65.27866364 134.12002563]
[55.44130707 145.44374084]
[45.60395050 156.76744080]
[35.76659393 168.09115601]
[25.92923927 179.41487122]
[16.09188271 190.73857117]
[6.25452566 202.06228638]
[-3.58283114 213.38600159]
[-13.42018795 224.70970154]
[-23.25754547 236.03341675]
[-20.79865646 255.98292542]
[-33.61774445 271.06613159]
[-53.09171677 271.83160400]
[-62.44406128 283.55908203]
[-71.71394348 295.35183716]
[-80.90089417 307.20932007]
[-90.08785248 319.06680298]
[-99.27481079 330.92428589]
[-108.46176147 342.78176880]
[-106.22377777 358.42678833]
[-115.77069855 371.02169800]
[-131.43852234 373.09414673]
[-143.93179321 363.41461182]
[-145.83847046 347.72576904]
[-136.02737427 335.33551025]
[-120.31924438 333.59481812]
[-111.13228607 321.73733521]
[-101.94533539 309.87985229]
[-92.75837708 298.02236938]
[-83.57142639 286.16488647]
[-81.96104431 278.95910645]
[-74.17153168 274.20672607]
[-64.81919098 262.47924805]
[-68.66880798 252.98088074]
[-68.22987366 242.66067505]
[-63.51455688 233.37956238]
[-55.31216812 226.83886719]
[-45.05775833 224.26846313]
[-34.58125305 226.19606018]
[-24.74389839 214.87234497]
[-14.90654182 203.54864502]
[-5.06918478 192.22492981]
[4.76817179 180.90121460]
[14.60552883 169.57751465]
[24.44288445 158.25379944]
[34.28024292 146.93008423]
[44.11759949 135.60638428]
[53.95495605 124.28266907]
[63.79231262 112.95895386]
[60.04566574 98.43440247]
[45.95828629 93.28214264]
[31.87091064 88.12988281]
[17.78353310 82.97762299]
[-0.28246620 86.56392670]
[-11.00202179 72.66432953]
[-25.16027260 67.71014404]
[-39.31852341 62.75595856]
[-53.42513657 69.36210632]
[-67.71304321 64.13616943]
[-73.92405701 50.64695740]
[-88.08230591 45.69277191]
[-97.20629120 45.81309509]
[-102.40354919 40.56855011]
[-116.49092102 35.41629028]
[-130.71749878 42.29962158]
[-145.61679077 37.02832794]
[-152.34931946 22.72977829]
[-146.92080688 7.88704681]
[-132.55186462 1.30606210]
[-117.76736450 6.89120674]
[-111.33866119 21.32891273]
[-97.25128174 26.48117447]
[-83.12812042 31.53452110]
[-68.96987152 36.48870850]
[-55.70351791 29.81492424]
[-41.27446365 34.63748550]
[-34.36433792 48.59770966]
[-20.20608711 53.55189514]
[-6.04783630 58.50608063]
[4.97709179 53.54277802]
[16.80919075 57.54703522]
[22.93579292 68.89024353]
[37.02317047 74.04250336]
[51.11054993 79.19476318]
[65.19792938 84.34703064]
[81.72008514 67.51480103]
[104.46569824 63.88475800]
[124.42450714 74.23040009]
[133.44425964 62.24523926]
[142.46401978 50.26008224]
[151.48377991 38.27492523]
[160.50354004 26.28976822]
[169.52328491 14.30461025]
[178.54304504 2.31945324]
[187.56280518 -9.66570377]
[196.58256531 -21.65086174]
[205.60231018 -33.63601685]
[211.24523926 -47.53412247]
[213.13359070 -62.41478729]
[215.02194214 -77.29544830]
[216.91029358 -92.17611694]
[218.79862976 -107.05677795]
[220.68698120 -121.93743896]
[209.52128601 -111.92108154]
[194.61215210 -110.27264404]
[181.52798462 -117.60781097]
[175.15562439 -131.18695068]
[177.87509155 -145.93836975]
[188.67070007 -156.35253906]
[203.51036072 -158.53985596]
[216.85159302 -151.68338013]
[223.71171570 -138.34304810]
[227.25428772 -152.91871643]
[230.79687500 -167.49438477]
[219.63038635 -178.03976440]
[215.24798584 -192.76016235]
[218.82852173 -207.69587708]
[229.40885925 -218.82925415]
[244.14292908 -223.16548157]
[259.06732178 -219.53814697]
[270.16748047 -208.92297363]
[274.45751953 -194.17538452]
[270.78341675 -179.26242065]
[260.13351440 -168.19558716]
[245.37254333 -163.95181274]
[241.82997131 -149.37614441]
[238.28738403 -134.80046082]
[235.56764221 -120.04909515]
[233.67929077 -105.16843414]
[231.79095459 -90.28776550]
[229.90260315 -75.40710449]
[228.01425171 -60.52643967]
[226.12591553 -45.64577866]
[238.99241638 -37.93389893]
[251.85777283 -30.22269440]
[264.09118652 -38.90276337]
[276.32458496 -47.58283234]
[288.55801392 -56.26290131]
[300.73025513 -65.02854156]
[312.84072876 -73.87932587]
[324.95120239 -82.73011017]
[327.13177490 -98.38324738]
[339.79229736 -107.84298706]
[355.42150879 -105.49703217]
[364.74685669 -92.73720551]
[362.23580933 -77.13367462]
[349.37808228 -67.94374084]
[333.80197144 -70.61963654]
[321.69149780 -61.76885223]
[309.58102417 -52.91806793]
[306.03878784 -46.43970871]
[297.23806763 -44.02949142]
[285.00466919 -35.34942245]
[272.77124023 -26.66935158]
[260.53784180 -17.98928261]
[275.43511963 -19.74174881]
[286.27178955 -9.37033367]
[293.02200317 4.02499390]
[294.91040039 18.90565109]
[291.72006226 33.56245422]
[283.81747437 46.31192780]
[272.11032104 55.68967056]
[257.94323730 60.61856461]
[242.94348145 60.53247452]
[228.83390808 55.44129181]
[217.23515320 45.92978287]
[209.47943115 33.09043884]
[206.45756531 18.39798164]
[208.51663208 3.53998041]
[215.41787720 -9.77399540]
[217.58747864 -24.61626244]
[208.56771851 -12.63110542]
[199.54795837 -0.64594769]
[190.52819824 11.33920956]
[181.50845337 23.32436752]
[172.48869324 35.30952454]
[163.46893311 47.29468155]
[154.44917297 59.27983856]
[145.42942810 71.26499939]
[136.40966797 83.25015259]
[138.61062622 98.08779907]
[150.72109985 106.93858337]
[162.83157349 115.78936768]
[174.94204712 124.64015198]
[188.95794678 118.35919952]
[204.23489380 119.94364929]
[216.66346741 128.96728516]
[222.90045166 143.00279236]
[221.26812744 158.27470398]
[212.20558167 170.67492676]
[198.15058899 176.86788940]
[182.88388062 175.18771362]
[170.51211548 166.08633423]
[164.36323547 152.01199341]
[166.09126282 136.75062561]
[153.98078918 127.89984131]
[141.87031555 119.04905701]
[129.75984192 110.19828033]
[118.29927826 119.87585449]
[124.99642944 133.29779053]
[131.69357300 146.71971130]
[138.39073181 160.14164734]
[145.08787537 173.56356812]
[151.78503418 186.98550415]
[165.75392151 195.57630920]
[165.02809143 211.95939636]
[150.35421753 219.28121948]
[136.82751465 210.00975037]
[138.36309814 193.68264771]
[131.66595459 180.26072693]
[124.96880341 166.83879089]
[118.27165222 153.41687012]
[111.57450104 139.99493408]
[104.87734985 126.57300568]
[97.43701935 125.62883759]
[96.87950134 140.61846924]
[96.32199097 155.60810852]
[96.84096527 170.59912109]
[83.34076691 177.13706970]
[71.90113831 167.43475342]
[76.14791870 153.04803467]
[79.35213470 138.39425659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[4 47]
[5 46]
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[11 40]
[14 34]
[15 33]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[51 86]
[52 85]
[53 84]
[54 83]
[56 80]
[57 79]
[58 78]
[61 75]
[62 74]
[64 73]
[65 72]
[89 181]
[90 180]
[91 179]
[92 178]
[93 177]
[94 176]
[95 175]
[96 174]
[97 173]
[98 172]
[99 134]
[100 133]
[101 132]
[102 131]
[103 130]
[104 129]
[113 128]
[114 127]
[115 126]
[136 156]
[137 155]
[138 154]
[139 153]
[140 151]
[141 150]
[142 149]
[182 199]
[183 198]
[184 197]
[185 196]
[200 215]
[201 214]
[202 213]
[203 212]
[204 211]
[205 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
