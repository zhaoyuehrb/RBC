%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUAACUUGUUUAACUAAGGGUGGCUCCUGUUGAGAGGUGACAGCGUGUUGGCAGCCCUCGCAGCCCUCGCUUGCUCUUGGUGCCUCCUCAGCCUCGGCGCCCACUCUGGCCGCACUUGAGGAGCCCUUCAGCCCGCUGCUGCACUGUGGGAGUCCCUUCCUGGGAUGGCCGAGGCCGGAGCCGGCUCCCUCAGCCUUCCGGGAGGAAAAGCCAUGGAGACUUCAGCAUCCUCCUCCCAGCCUCAGGACAACA\
GUCAAGUCCACA\
) } def
/len { sequence length } bind def

/coor [
[83.18817902 408.16409302]
[90.70214081 421.14639282]
[90.39450073 436.14324951]
[82.35445404 448.80648804]
[68.91311646 455.46456909]
[53.96760941 454.18710327]
[41.85119629 445.34445190]
[36.07716370 431.50286865]
[31.07558632 445.64443970]
[26.07400894 459.78601074]
[21.07243156 473.92758179]
[28.10724640 488.07986450]
[22.99531174 503.03457642]
[8.76945019 509.91937256]
[-6.13038826 504.64962769]
[-12.86439323 490.35177612]
[-7.43739986 475.50848389]
[6.93085432 468.92602539]
[11.93243217 454.78442383]
[16.93400955 440.64285278]
[21.93558693 426.50128174]
[19.78894424 415.61547852]
[28.02921867 406.30679321]
[31.68458176 391.75900269]
[35.33994293 377.21121216]
[38.99530411 362.66342163]
[42.56533813 348.09445190]
[46.04991913 333.50479126]
[39.22305298 315.39273071]
[53.38743973 301.01785278]
[56.52904510 286.35055542]
[59.67065048 271.68322754]
[62.81225204 257.01589966]
[65.95385742 242.34857178]
[69.09545898 227.68125916]
[61.11029053 208.63027954]
[75.85099030 193.04624939]
[78.47495270 178.27754211]
[81.09891510 163.50883484]
[83.72287750 148.74012756]
[86.34683228 133.97140503]
[79.82019043 130.54899597]
[74.11114502 125.88885498]
[69.45101166 120.17980957]
[66.02858734 113.65316772]
[51.25987625 116.27712250]
[36.49116516 118.90108490]
[21.72245598 121.52504730]
[16.96392441 132.37461853]
[7.66422892 139.51969910]
[-3.80853558 141.28605652]
[-14.60191250 137.35107422]
[-22.08825302 128.79531860]
[-36.91441727 131.07234192]
[-51.74058151 133.34936523]
[-64.20629120 143.09188843]
[-77.96060181 137.37626648]
[-92.78676605 139.65328979]
[-105.23403931 150.33024597]
[-120.61231232 144.63455200]
[-123.10173035 128.42546082]
[-110.14139557 118.37748718]
[-95.06378937 124.82712555]
[-80.23762512 122.55010223]
[-68.83238220 112.97045135]
[-54.01760483 118.52320099]
[-39.19144058 116.24617767]
[-24.36527634 113.96915436]
[-14.41065502 98.57661438]
[3.95553398 95.32744598]
[19.09849548 106.75634003]
[33.86720657 104.13237762]
[48.63591766 101.50841522]
[63.40462875 98.88445282]
[72.63907623 75.67212677]
[94.61208344 63.78624344]
[95.49076080 48.81200409]
[96.36943054 33.83776093]
[84.54234314 23.96729469]
[80.83839417 9.19792938]
[86.47474670 -4.75540543]
[99.09553528 -12.62011433]
[99.97421265 -27.59435654]
[93.05858612 -41.82406998]
[101.52814484 -54.07624817]
[102.40681458 -69.05049133]
[103.28549194 -84.02473450]
[93.06180573 -95.77692413]
[94.16621399 -110.95041656]
[105.43313599 -120.62471771]
[106.31181335 -135.59895325]
[107.19049072 -150.57319641]
[98.55927277 -166.85726929]
[108.81391907 -181.11643982]
[109.51700592 -196.09996033]
[110.22008514 -211.08346558]
[110.92317200 -226.06698608]
[111.62625885 -241.05049133]
[112.32933807 -256.03399658]
[113.03242493 -271.01751709]
[113.73551178 -286.00103760]
[95.70677185 -299.39096069]
[98.76828003 -328.24020386]
[96.66520691 -343.09204102]
[94.56213379 -357.94387817]
[92.45906067 -372.79571533]
[90.35598755 -387.64755249]
[77.74871826 -393.17095947]
[69.57460785 -404.11035156]
[67.87795258 -417.55154419]
[72.99494934 -429.97903442]
[83.49365997 -438.19540405]
[81.56482697 -453.07086182]
[72.11721039 -465.76153564]
[78.15369415 -479.37808228]
[76.22485352 -494.25357056]
[74.29602051 -509.12902832]
[64.54235840 -513.30102539]
[57.44095230 -521.07324219]
[54.21363831 -531.00964355]
[55.37469101 -541.31115723]
[60.65011597 -550.14160156]
[69.03852081 -555.95452881]
[67.63390350 -570.88861084]
[63.72655106 -579.10595703]
[66.30139160 -586.00579834]
[65.07192993 -600.95532227]
[52.85764313 -610.98461914]
[51.39579773 -626.72119141]
[61.55367279 -638.82873535]
[77.30478668 -640.12414551]
[89.30427551 -629.83880615]
[90.43306732 -614.07489014]
[80.02145386 -602.18481445]
[81.25092316 -587.23529053]
[82.56799316 -572.29321289]
[83.97261047 -557.35913086]
[99.84950256 -546.02081299]
[102.25177765 -526.35034180]
[89.17149353 -511.05786133]
[91.10032654 -496.18240356]
[93.02915955 -481.30691528]
[102.33881378 -469.68023682]
[96.44029236 -454.99969482]
[98.36913300 -440.12423706]
[113.03539276 -432.71496582]
[120.45854950 -417.86944580]
[117.52876282 -401.36303711]
[105.20782471 -389.75061035]
[107.31089783 -374.89877319]
[109.41397095 -360.04693604]
[111.51704407 -345.19509888]
[113.62011719 -330.34326172]
[128.12471008 -326.51745605]
[142.62800598 -322.69198608]
[151.78266907 -334.57443237]
[160.93731689 -346.45687866]
[170.09196472 -358.33929443]
[179.24662781 -370.22174072]
[178.61790466 -386.25247192]
[190.85292053 -396.62954712]
[206.56602478 -393.39257812]
[213.70346069 -379.02468872]
[206.79000854 -364.54766846]
[191.12905884 -361.06707764]
[181.97441101 -349.18466187]
[172.81974792 -337.30221558]
[163.66510010 -325.41976929]
[154.51045227 -313.53732300]
[145.96354675 -291.67245483]
[128.71902466 -285.29794312]
[128.01594543 -270.31442261]
[127.31285095 -255.33091736]
[126.60977173 -240.34741211]
[125.90668488 -225.36389160]
[125.20360565 -210.38038635]
[124.50051880 -195.39686584]
[123.79743195 -180.41336060]
[131.69645691 -171.28057861]
[131.25477600 -158.81321716]
[122.16472626 -149.69451904]
[121.28605652 -134.72029114]
[120.40737915 -119.74604034]
[130.46551514 -108.82041168]
[129.78773499 -93.62187958]
[118.25972748 -83.14605713]
[117.38105774 -68.17181396]
[116.50238037 -53.19757462]
[123.48085785 -40.03892136]
[114.94845581 -26.71568298]
[114.06977844 -11.74143982]
[125.68413544 -2.45463729]
[129.64988708 12.06213951]
[124.24400330 26.29694939]
[111.34367371 34.71643448]
[110.46500397 49.69067764]
[109.58632660 64.66491699]
[118.45456696 68.37889099]
[126.05016327 74.27346802]
[131.84933472 81.94216156]
[135.45214844 90.85613251]
[136.61018372 100.40066528]
[135.24354553 109.91757202]
[148.54418945 116.85247040]
[161.84484863 123.78736115]
[175.14549255 130.72225952]
[188.44613647 137.65715027]
[201.74679565 144.59204102]
[215.04743958 151.52693176]
[230.10356140 143.78311157]
[246.64224243 146.52487183]
[258.16302490 158.47329712]
[260.25799561 174.77076721]
[273.63900757 181.54927063]
[280.19473267 181.56959534]
[285.04562378 184.44616699]
[287.25146484 188.64674377]
[300.46990967 195.73707581]
[313.68835449 202.82739258]
[326.90679932 209.91772461]
[343.72274780 212.07649231]
[346.30346680 228.83287048]
[330.91635132 235.95135498]
[319.81649780 223.13616943]
[306.59805298 216.04583740]
[293.37960815 208.95552063]
[280.16116333 201.86518860]
[266.86050415 194.93029785]
[253.47947693 188.15179443]
[242.23265076 195.31002808]
[228.81015015 195.99038696]
[216.70388794 189.90901184]
[209.11610413 178.55506897]
[208.11254883 164.82757568]
[194.81188965 157.89268494]
[181.51124573 150.95779419]
[168.21060181 144.02290344]
[154.90994263 137.08801270]
[141.60929871 130.15312195]
[128.30865479 123.21822357]
[116.16115570 132.85244751]
[101.11554718 136.59536743]
[98.49158478 151.36408997]
[95.86762238 166.13279724]
[93.24365997 180.90150452]
[90.61970520 195.67021179]
[96.95786285 202.56794739]
[99.39557648 211.47056580]
[97.51227570 220.36653137]
[91.84938049 227.30482483]
[83.76277924 230.82286072]
[80.62117767 245.49018860]
[77.47957611 260.15750122]
[74.33796692 274.82482910]
[71.19636536 289.49215698]
[68.05476379 304.15945435]
[74.45944214 312.89688110]
[75.00650787 323.49703979]
[69.75639343 332.46893311]
[60.63956070 336.98937988]
[57.15497971 351.57901001]
[58.20475006 360.61730957]
[53.54309845 366.31875610]
[49.88773727 380.86657715]
[46.23237610 395.41436768]
[42.57701492 409.96215820]
[55.04587173 401.62384033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 21]
[9 20]
[10 19]
[11 18]
[23 266]
[24 265]
[25 264]
[26 263]
[27 261]
[28 260]
[30 256]
[31 255]
[32 254]
[33 253]
[34 252]
[35 251]
[37 246]
[38 245]
[39 244]
[40 243]
[41 242]
[45 74]
[46 73]
[47 72]
[48 71]
[53 68]
[54 67]
[55 66]
[57 64]
[58 63]
[76 197]
[77 196]
[78 195]
[82 191]
[83 190]
[85 188]
[86 187]
[87 186]
[90 183]
[91 182]
[92 181]
[94 178]
[95 177]
[96 176]
[97 175]
[98 174]
[99 173]
[100 172]
[101 171]
[103 153]
[104 152]
[105 151]
[106 150]
[107 149]
[112 145]
[113 144]
[115 142]
[116 141]
[117 140]
[123 137]
[124 136]
[126 135]
[127 134]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
[203 240]
[204 239]
[205 238]
[206 237]
[207 236]
[208 235]
[209 234]
[213 229]
[214 228]
[217 227]
[218 226]
[219 225]
[220 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
