%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGGGCGGGGACGUGUUUGGCAGCGGGACGCACCAUUUCAGUUGUGUUCUUGGUUCAUUUCGUGUCUCGGCGAUGUUUCCUAGAGUCUCGACGUUCCUACCUCUUCGCCCCCUUUCCCGCCACCCUUUGUCCUCUGGAAGCCCGGAGACAUCAGCGGCUGCGAUUAUGCUAC\
) } def
/len { sequence length } bind def

/coor [
[455.66983032 340.79425049]
[457.49285889 332.93591309]
[444.73132324 325.05282593]
[431.96978760 317.16973877]
[417.07556152 317.06372070]
[409.40103149 303.22854614]
[396.63949585 295.34545898]
[383.87796021 287.46237183]
[371.11642456 279.57928467]
[358.35488892 271.69619751]
[345.59332275 263.81311035]
[332.83178711 255.93002319]
[320.07025146 248.04693604]
[307.30871582 240.16384888]
[292.41448975 240.05783081]
[284.73999023 226.22264099]
[271.97842407 218.33955383]
[259.21688843 210.45646667]
[247.19584656 215.14773560]
[234.48037720 212.00202942]
[225.77806091 201.95268250]
[224.44345093 188.53048706]
[211.82464600 180.42088318]
[199.20584106 172.31126404]
[184.75154114 175.71842957]
[171.83876038 167.67388916]
[168.36302185 152.48979187]
[155.74421692 144.38017273]
[143.12541199 136.27055359]
[130.50660706 128.16094971]
[117.88780975 120.05133820]
[105.26900482 111.94172668]
[90.70241547 108.36198425]
[75.76212311 109.69895935]
[60.82182312 111.03592682]
[45.88152313 112.37290192]
[32.82591248 121.30943298]
[19.45966148 114.73732758]
[4.51936293 116.07429504]
[-8.57681370 125.94456482]
[-23.56504631 119.28987122]
[-25.02672386 102.95599365]
[-11.45819950 93.74582672]
[3.18239284 101.13399506]
[18.12269020 99.79702759]
[30.10967064 90.95612335]
[44.54455185 97.43260193]
[59.48485184 96.09562683]
[74.42514801 94.75865936]
[89.36544800 93.42169189]
[95.22915649 79.61528015]
[85.81711578 67.93565369]
[76.40508270 56.25603485]
[61.72131729 50.36556244]
[59.75993347 35.60066223]
[50.34789658 23.92103958]
[36.70096207 27.66142654]
[22.70232964 25.91715431]
[10.46600151 18.98497391]
[1.82711565 7.94255781]
[-1.93325651 -5.51890707]
[-0.27800614 -19.35370064]
[6.50956535 -31.47244263]
[-2.69250059 -43.31819916]
[-11.89456654 -55.16395950]
[-21.09663200 -67.00971985]
[-36.80697250 -68.73040009]
[-46.63386154 -81.10810852]
[-44.74717712 -96.79938507]
[-32.26625824 -106.49485779]
[-16.59581184 -104.44238281]
[-7.03283644 -91.85964966]
[-9.25087452 -76.21178436]
[-0.04880854 -64.36602783]
[9.15325737 -52.52026749]
[18.35532379 -40.67450714]
[33.89579391 -44.33089066]
[49.53359985 -40.83896255]
[62.13358307 -30.84692192]
[69.14705658 -16.31129837]
[69.12726593 -0.11400641]
[62.02752304 14.50900555]
[71.43955994 26.18862915]
[85.45011139 31.24369431]
[88.08470917 46.84399796]
[97.49674225 58.52362061]
[106.90877533 70.20324707]
[113.37861633 99.32292175]
[125.99742126 107.43253326]
[138.61622620 115.54214478]
[151.23503113 123.65175629]
[163.85383606 131.76136780]
[176.47264099 139.87098694]
[191.72845459 136.72491455]
[204.41018677 145.12898254]
[207.31546021 159.69245911]
[219.93426514 167.80207825]
[232.55307007 175.91168213]
[249.55859375 171.87553406]
[263.94744873 181.19007874]
[267.09997559 197.69491577]
[279.86151123 205.57800293]
[292.62307739 213.46109009]
[308.43008423 214.13096619]
[315.19180298 227.40229797]
[327.95333862 235.28538513]
[340.71487427 243.16847229]
[353.47640991 251.05155945]
[366.23797607 258.93466187]
[378.99951172 266.81774902]
[391.76104736 274.70083618]
[404.52258301 282.58392334]
[417.28411865 290.46701050]
[433.09115601 291.13687134]
[439.85287476 304.40820312]
[452.61441040 312.29129028]
[465.37594604 320.17437744]
[485.67117310 309.55682373]
[508.16741943 313.15444946]
[523.96807861 329.39605713]
[526.91320801 351.73950195]
[540.77142334 357.47976685]
[554.62963867 363.22000122]
[569.08441162 357.41522217]
[583.05682373 363.43405151]
[588.50177002 377.25030518]
[602.35992432 382.99057007]
[616.26879883 388.60690308]
[630.22723389 394.09887695]
[648.35272217 390.93688965]
[658.76013184 405.04965210]
[672.81439209 410.29162598]
[686.86859131 415.53359985]
[700.92285156 420.77554321]
[710.09014893 420.84606934]
[715.17980957 426.23852539]
[729.13824463 431.73052979]
[743.09667969 437.22250366]
[757.05511475 442.71447754]
[771.01354980 448.20645142]
[787.14257812 445.24230957]
[797.56671143 457.90206909]
[791.56243896 473.16250610]
[775.30645752 475.32498169]
[765.52154541 462.16491699]
[751.56311035 456.67291260]
[737.60467529 451.18093872]
[723.64624023 445.68896484]
[709.68780518 440.19699097]
[695.68090820 434.82980347]
[681.62664795 429.58782959]
[667.57238770 424.34585571]
[653.51818848 419.10391235]
[642.36730957 423.84478760]
[630.60272217 419.56738281]
[624.73529053 408.05731201]
[610.77685547 402.56533813]
[603.37725830 403.04388428]
[596.61968994 396.84875488]
[582.76147461 391.10848999]
[569.14178467 397.02792358]
[555.00585938 391.40393066]
[548.88934326 377.07818604]
[535.03118896 371.33795166]
[521.17297363 365.59768677]
[516.03186035 371.60617065]
[509.68423462 376.34429932]
[502.43759155 379.57528687]
[494.64465332 381.13543701]
[486.68615723 380.94259644]
[478.95217896 379.00033569]
[471.82315063 375.39822388]
[465.65103149 370.30752563]
[460.74197388 363.97317505]
[457.34109497 356.70199585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 117]
[3 116]
[4 115]
[6 113]
[7 112]
[8 111]
[9 110]
[10 109]
[11 108]
[12 107]
[13 106]
[14 105]
[16 103]
[17 102]
[18 101]
[22 98]
[23 97]
[24 96]
[27 93]
[28 92]
[29 91]
[30 90]
[31 89]
[32 88]
[33 50]
[34 49]
[35 48]
[36 47]
[38 45]
[39 44]
[51 87]
[52 86]
[53 85]
[55 83]
[56 82]
[63 76]
[64 75]
[65 74]
[66 73]
[121 165]
[122 164]
[123 163]
[126 160]
[127 159]
[128 157]
[129 156]
[131 153]
[132 152]
[133 151]
[134 150]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
