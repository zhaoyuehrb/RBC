%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCUCGGCGUUUCCGCCAUGCGCCUGCAGUGCUCCGCGCGCUCUUGACGUCCGGAGCCCCUGGAGUAGGCGCUUCCGGCCAUUCAUACUGCAGUCGGUCAGUGUUCGGUUGAAGGAUUCUGUGUGCUGUCGGACCCAGAGGGUGACGGCGCCGCUAGGAUGAAGCUCGUGAGAUUUUUGAUGAAAUUGAGUCAUGAAACUGUAACCAUUGAAUUGAAGAACGGAACACAGGUCCAUGGAACAAUCACAGGUG\
UGGAUG\
) } def
/len { sequence length } bind def

/coor [
[-368.27035522 345.90701294]
[-371.34814453 347.58340454]
[-374.44082642 348.08523560]
[-377.16345215 347.55764771]
[-390.03228760 355.26437378]
[-402.90109253 362.97109985]
[-403.85891724 382.40606689]
[-416.27783203 397.12637329]
[-434.88476562 401.25668335]
[-439.99627686 415.35888672]
[-445.10781860 429.46112061]
[-450.21932983 443.56332397]
[-446.81896973 459.60604858]
[-459.19146729 470.36956787]
[-474.60906982 464.78125000]
[-477.21148682 448.58993530]
[-464.32153320 438.45181274]
[-459.21002197 424.34957886]
[-454.09851074 410.24737549]
[-448.98699951 396.14517212]
[-451.45379639 394.24536133]
[-453.70761108 392.09716797]
[-455.72348022 389.72424316]
[-469.56442261 395.50601196]
[-483.40533447 401.28778076]
[-497.24627686 407.06954956]
[-511.08718872 412.85131836]
[-524.92810059 418.63308716]
[-538.76904297 424.41485596]
[-552.60998535 430.19662476]
[-566.34466553 436.22640991]
[-579.96868896 442.50222778]
[-590.26849365 457.78399658]
[-607.67578125 455.45507812]
[-621.22357178 461.89379883]
[-634.77142334 468.33251953]
[-648.31921387 474.77124023]
[-661.86700439 481.20996094]
[-675.41479492 487.64868164]
[-684.55767822 500.56060791]
[-699.37402344 499.03555298]
[-712.92181396 505.47427368]
[-726.46960449 511.91299438]
[-730.23077393 527.09149170]
[-742.89892578 536.25952148]
[-758.49255371 535.08807373]
[-769.64886475 524.13037109]
[-771.10015869 508.56030273]
[-762.16119385 495.72952271]
[-747.05267334 491.69638062]
[-732.90832520 498.36517334]
[-719.36053467 491.92645264]
[-705.81274414 485.48773193]
[-697.63885498 473.03634644]
[-681.85351562 474.10089111]
[-668.30572510 467.66217041]
[-654.75793457 461.22344971]
[-641.21014404 454.78472900]
[-627.66229248 448.34600830]
[-614.11450195 441.90728760]
[-609.77893066 430.63568115]
[-598.57122803 425.15249634]
[-586.24450684 428.87817383]
[-572.62048340 422.60238647]
[-571.06396484 419.47177124]
[-567.93017578 416.92880249]
[-563.50683594 415.69934082]
[-558.39172363 416.35571289]
[-544.55078125 410.57394409]
[-530.70989990 404.79217529]
[-516.86895752 399.01040649]
[-503.02804565 393.22863770]
[-489.18710327 387.44686890]
[-475.34619141 381.66510010]
[-461.50524902 375.88333130]
[-460.08029175 361.28280640]
[-451.79223633 349.06683350]
[-438.58798218 342.26226807]
[-423.64526367 342.60592651]
[-410.60781860 350.10226440]
[-397.73901367 342.39556885]
[-384.87017822 334.68884277]
[-372.18988037 326.67575073]
[-359.70535278 318.36090088]
[-347.22082520 310.04605103]
[-334.73629761 301.73120117]
[-322.25177002 293.41635132]
[-309.76727295 285.10150146]
[-297.28274536 276.78665161]
[-284.79821777 268.47180176]
[-272.31369019 260.15695190]
[-259.82919312 251.84210205]
[-258.73947144 241.72100830]
[-252.13270569 233.69076538]
[-241.99273682 230.54095459]
[-231.57754517 233.53533936]
[-218.89723206 225.52224731]
[-214.93431091 219.31213379]
[-206.01649475 217.49015808]
[-193.24099731 209.62968445]
[-180.46551514 201.76921082]
[-179.29466248 198.47488403]
[-176.48759460 195.57533264]
[-172.24307251 193.82557678]
[-167.08618164 193.86535645]
[-154.03625488 186.46943665]
[-140.98634338 179.07351685]
[-127.93641663 171.67759705]
[-114.88649750 164.28167725]
[-107.62879944 151.27494812]
[-91.80776215 151.20202637]
[-78.75784302 143.80610657]
[-77.87442017 141.17727661]
[-75.91294098 138.73413086]
[-72.93695068 136.88302612]
[-69.15372467 136.00062561]
[-64.90014648 136.38565063]
[-51.51063919 129.62391663]
[-38.12113190 122.86218262]
[-24.73162270 116.10044861]
[-20.19211769 110.29846191]
[-11.14078236 109.33899689]
[2.32884002 102.73828888]
[15.79846191 96.13758850]
[29.26808357 89.53688812]
[42.73770523 82.93618011]
[56.20732880 76.33547974]
[65.46900177 64.53626251]
[68.68144226 49.88429642]
[71.89388275 35.23232651]
[75.10632324 20.58035660]
[78.31876373 5.92838621]
[81.53120422 -8.72358322]
[79.90836334 -15.08017921]
[81.48167419 -20.49975395]
[85.00034332 -23.68640137]
[88.56320953 -38.25712585]
[92.12606812 -52.82785034]
[95.68893433 -67.39857483]
[93.57780457 -84.22057343]
[109.15796661 -90.90598297]
[119.89513397 -77.78540802]
[110.25965881 -63.83571243]
[106.69679260 -49.26498795]
[103.13393402 -34.69426346]
[99.57106781 -20.12354088]
[96.18317413 -5.51114225]
[92.97073364 9.14082718]
[89.75829315 23.79279709]
[86.54585266 38.44476700]
[83.33341217 53.09673691]
[80.12097168 67.74871063]
[86.77470398 71.20960236]
[99.42287445 63.14587402]
[100.08216858 78.13140106]
[106.73590851 81.59230042]
[116.88816071 70.55003357]
[127.04042053 59.50776672]
[124.84584045 44.02494049]
[133.16069031 30.78117752]
[148.05894470 26.02977371]
[162.50611877 32.01419830]
[169.68067932 45.90878677]
[166.19503784 61.15294266]
[153.69499207 70.54883575]
[138.08268738 69.66001892]
[127.93042755 80.70229340]
[117.77817535 91.74456024]
[125.79126740 104.42487335]
[140.12232971 99.99536133]
[154.45339966 95.56584930]
[168.78445435 91.13633728]
[183.11552429 86.70682526]
[197.44659424 82.27732086]
[211.69566345 77.59077454]
[225.85815430 72.64871979]
[240.02064514 67.70665741]
[254.18313599 62.76460266]
[268.34561157 57.82254410]
[282.50811768 52.88048553]
[292.80004883 40.11302948]
[308.95901489 42.90938568]
[314.36206055 58.39290237]
[303.45098877 70.63546753]
[287.45016479 67.04297638]
[273.28768921 71.98503113]
[259.12518311 76.92708588]
[244.96270752 81.86914825]
[230.80021667 86.81120300]
[216.63772583 91.75326538]
[214.78851318 94.72039795]
[211.42559814 96.95151520]
[206.90483093 97.75165558]
[201.87609863 96.60838318]
[187.54502869 101.03789520]
[173.21397400 105.46740723]
[158.88290405 109.89691925]
[144.55183411 114.32643127]
[130.22077942 118.75593567]
[129.77139282 126.24246216]
[128.87261963 141.21551514]
[128.42323303 148.70204163]
[142.12153625 154.81404114]
[155.81982422 160.92604065]
[169.51812744 167.03804016]
[184.07319641 158.39187622]
[200.74696350 160.11950684]
[212.97488403 171.34118652]
[216.06193542 187.47879028]
[229.83253479 193.42610168]
[244.42852783 187.36535645]
[259.00292969 193.47781372]
[264.90902710 208.13706970]
[258.64282227 222.64602661]
[243.92195129 228.39680481]
[229.48004150 221.97755432]
[223.88522339 207.19671631]
[210.11462402 201.24940491]
[199.32519531 209.08287048]
[185.96771240 210.58209229]
[173.51135254 205.25028992]
[165.24435425 194.37884521]
[163.40612793 180.73634338]
[149.70782471 174.62434387]
[136.00952148 168.51234436]
[122.31122589 162.40034485]
[64.36771393 138.44258118]
[62.80803299 89.80509949]
[49.33840942 96.40580750]
[35.86878586 103.00650787]
[22.39916420 109.60720825]
[8.92954254 116.20791626]
[-4.54007959 122.80861664]
[-17.96988678 129.48995972]
[-31.35939407 136.25169373]
[-44.74890137 143.01342773]
[-58.13840866 149.77516174]
[-71.36192322 156.85603333]
[-84.41184235 164.25193787]
[-92.60295868 177.78768921]
[-107.49057770 177.33160400]
[-120.54049683 184.72752380]
[-133.59042358 192.12342834]
[-146.64033508 199.51934814]
[-159.69026184 206.91526794]
[-172.60504150 214.54469299]
[-185.38053894 222.40516663]
[-198.15602112 230.26564026]
[-210.88415527 238.20256042]
[-223.56446838 246.21565247]
[-232.16058350 264.47207642]
[-251.51432800 264.32662964]
[-263.99884033 272.64147949]
[-276.48336792 280.95632935]
[-288.96789551 289.27117920]
[-301.45242310 297.58602905]
[-313.93692017 305.90087891]
[-326.42144775 314.21572876]
[-338.90597534 322.53057861]
[-351.39050293 330.84542847]
[-363.87503052 339.16027832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 82]
[5 81]
[6 80]
[9 20]
[10 19]
[11 18]
[12 17]
[23 75]
[24 74]
[25 73]
[26 72]
[27 71]
[28 70]
[29 69]
[30 68]
[31 64]
[32 63]
[34 60]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[41 53]
[42 52]
[43 51]
[83 261]
[84 260]
[85 259]
[86 258]
[87 257]
[88 256]
[89 255]
[90 254]
[91 253]
[92 252]
[96 250]
[97 249]
[99 248]
[100 247]
[101 246]
[105 245]
[106 244]
[107 243]
[108 242]
[109 241]
[111 239]
[112 238]
[117 237]
[118 236]
[119 235]
[120 234]
[122 233]
[123 232]
[124 231]
[125 230]
[126 229]
[127 228]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[136 146]
[137 145]
[138 144]
[139 143]
[156 168]
[157 167]
[158 166]
[169 199]
[170 198]
[171 197]
[172 196]
[173 195]
[174 194]
[175 190]
[176 189]
[177 188]
[178 187]
[179 186]
[180 185]
[202 226]
[203 225]
[204 224]
[205 223]
[209 218]
[210 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
