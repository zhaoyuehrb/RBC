%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCAGCGGCCGCUCAGUCUGGGCGCUUGCAGGCUGCUAAACCCAACCGCAGUUGACUAGCACCUGCUACCGCGCCUUUGCUUCCUGGCGCACGCGGAGCCUCCUGGAGCCUGCCACCAUCCUGCCUACUACGUGCUGCCCUGCGCCCGCAGCCAUGUGCCGCACCCUGGCCGCCUUCCCCACCACCUGCCUGGAGAGAGCCAAAGAGUUCAAGACACGUCUGGGGAUCUUUCUUCACAAAUCAGAGCUGGGCU\
) } def
/len { sequence length } bind def

/coor [
[432.73977661 196.78405762]
[429.28503418 194.99258423]
[426.29861450 191.92808533]
[411.72940063 188.35906982]
[397.16018677 184.79003906]
[382.59097290 181.22100830]
[375.36688232 182.67793274]
[367.86480713 177.51722717]
[353.34066772 173.76898193]
[338.81652832 170.02073669]
[324.55957031 174.33224487]
[313.13061523 163.39198303]
[298.60647583 159.64373779]
[288.54766846 167.67054749]
[275.50808716 168.45867920]
[264.22470093 161.49778748]
[258.92541504 149.13336182]
[244.44854736 145.20646667]
[227.73481750 150.59495544]
[214.87953186 137.39268494]
[200.35539246 133.64443970]
[185.83125305 129.89619446]
[171.30711365 126.14794922]
[156.78297424 122.39970398]
[142.25883484 118.65145874]
[126.51683044 137.82252502]
[103.12755585 146.08583069]
[78.83631897 141.05830383]
[60.64854050 124.18984222]
[46.76397705 129.86601257]
[32.87940979 135.54217529]
[18.99484634 141.21833801]
[5.11028147 146.89450073]
[-1.62578464 153.02145386]
[-8.98046875 152.55390930]
[-22.93390846 158.05859375]
[-36.88734818 163.56327820]
[-50.84078598 169.06794739]
[-64.79422760 174.57263184]
[-67.30570984 186.15858459]
[-75.00915527 195.01155090]
[-85.91219330 199.01744080]
[-97.27817535 197.29360962]
[-106.31295776 190.38038635]
[-120.39778137 195.53962708]
[-134.48260498 200.69885254]
[-148.56742859 205.85809326]
[-158.66184998 218.78228760]
[-174.86190796 216.23472595]
[-180.50238037 200.83610535]
[-169.78082275 188.42723083]
[-153.72666931 191.77326965]
[-139.64184570 186.61402893]
[-125.55701447 181.45480347]
[-111.47219086 176.29556274]
[-104.75817871 159.24342346]
[-87.40356445 152.42355347]
[-70.29891205 160.61920166]
[-56.34547043 155.11451721]
[-42.39202881 149.60983276]
[-28.43859100 144.10514832]
[-14.48515034 138.60046387]
[-0.56588423 133.00993347]
[13.31868076 127.33377075]
[27.20324516 121.65760803]
[41.08781052 115.98143768]
[54.97237396 110.30527496]
[54.16936493 105.76529694]
[53.82292938 101.16789246]
[53.93651962 96.55884552]
[54.50900269 91.98408508]
[55.53467560 87.48917389]
[41.94657516 81.13594818]
[28.35847473 74.78272247]
[14.77037239 68.42949677]
[1.18227112 62.07626724]
[-11.36190796 70.93849945]
[-26.65805817 72.32534790]
[-40.59159470 65.86375427]
[-49.41446304 53.29185486]
[-50.75335693 37.99143219]
[-44.24811935 24.07822037]
[-31.64862823 15.29480267]
[-16.34408569 14.00387478]
[-2.45133162 20.55269051]
[6.29254961 33.17964935]
[7.53549862 48.48816681]
[21.12360001 54.84139252]
[34.71170044 61.19462204]
[48.29980469 67.54785156]
[61.88790512 73.90107727]
[63.98166656 71.08001709]
[66.28377533 68.42624664]
[68.78092194 65.95510864]
[60.57262802 53.40027237]
[52.28715134 40.89623642]
[43.92480850 28.44347572]
[28.67372704 25.27453041]
[20.37051773 12.52653599]
[23.48560905 -1.99351192]
[15.12326717 -14.44627190]
[0.16842607 -21.17566872]
[-1.21173465 -37.51663589]
[12.40257549 -46.65898514]
[27.00612259 -39.19785690]
[27.57602692 -22.80861473]
[35.93836975 -10.35585308]
[50.55745697 -7.74475241]
[59.21545410 4.76499271]
[56.37757111 20.08113289]
[64.73991394 32.53389359]
[71.06009674 36.32405090]
[73.12746429 45.19197845]
[81.33575439 57.74681473]
[91.49139404 54.59857559]
[102.09783936 53.85582733]
[112.59313202 55.55791855]
[122.42121124 59.61466980]
[131.06135559 65.81114197]
[138.05578613 73.81903839]
[143.03392029 83.21406555]
[145.73199463 93.49845886]
[146.00708008 104.12731934]
[160.53121948 107.87556458]
[175.05535889 111.62380981]
[189.57949829 115.37205505]
[204.10363770 119.12030029]
[218.62777710 122.86854553]
[230.09588623 117.00577545]
[242.10279846 120.40705872]
[248.37544250 130.72959900]
[262.85229492 134.65649414]
[277.88259888 125.67995453]
[294.42504883 130.27427673]
[302.35473633 145.11959839]
[316.87887573 148.86784363]
[332.17465210 144.82443237]
[342.56475830 155.49659729]
[357.08889771 159.24484253]
[371.61303711 162.99308777]
[386.16000366 166.65179443]
[400.72921753 170.22082520]
[415.29843140 173.78985596]
[429.86764526 177.35887146]
[444.52035522 180.56787109]
[459.24771118 183.41488647]
[473.97503662 186.26190186]
[488.70239258 189.10891724]
[503.15478516 185.09292603]
[514.30194092 175.05596924]
[519.38018799 160.07191467]
[534.01568604 157.30564880]
[545.16284180 147.26867676]
[556.31005859 137.23171997]
[567.45721436 127.19476318]
[572.75476074 109.54558563]
[590.06665039 106.59879303]
[601.08935547 96.42527008]
[612.11199951 86.25173950]
[619.65051270 71.06596375]
[636.32965088 74.10598755]
[638.02569580 90.97488403]
[622.28552246 97.27441406]
[611.26287842 107.44794464]
[600.24017334 117.62146759]
[599.44891357 129.67448425]
[590.37359619 138.24028015]
[577.49414062 138.34193420]
[566.34698486 148.37889099]
[555.19982910 158.41586304]
[544.05267334 168.45281982]
[539.77172852 182.71896362]
[524.33892822 186.20314026]
[513.19171143 196.24009705]
[513.65344238 203.72587585]
[528.24798584 200.26185608]
[542.84252930 196.79783630]
[554.85382080 187.81294250]
[569.81176758 188.93547058]
[580.34753418 199.61242676]
[581.27087402 214.58398438]
[572.12689209 226.47463989]
[557.42028809 229.42666626]
[544.39605713 221.98596191]
[529.48645020 220.34169006]
[514.57684326 218.69741821]
[515.03857422 226.18319702]
[527.33465576 234.77423096]
[539.63079834 243.36524963]
[559.23193359 238.83666992]
[575.56555176 250.04779053]
[578.30035400 269.35955811]
[590.90551758 277.49035645]
[603.51068115 285.62115479]
[616.11584473 293.75195312]
[628.72100830 301.88275146]
[641.32617188 310.01354980]
[653.93133545 318.14434814]
[666.53649902 326.27514648]
[679.14166260 334.40594482]
[691.84600830 342.38082886]
[704.64764404 350.19860840]
[719.82720947 346.70315552]
[732.69854736 354.81384277]
[735.93743896 369.30679321]
[748.73907471 377.12457275]
[761.54071045 384.94232178]
[774.39031982 392.68109131]
[787.28729248 400.34057617]
[801.98583984 395.00320435]
[816.65856934 400.41113281]
[824.37744141 414.01086426]
[821.49786377 429.38104248]
[809.37951660 439.26431274]
[793.74426270 438.99414062]
[781.97460938 428.69805908]
[779.62786865 413.23757935]
[766.73083496 405.57809448]
[759.39575195 404.86676025]
[753.72296143 397.74398804]
[740.92132568 389.92620850]
[728.11962891 382.10842896]
[713.74737549 385.84655762]
[700.65332031 378.10058594]
[696.82989502 363.00027466]
[684.02825928 355.18249512]
[679.28302002 355.40573120]
[674.34228516 352.66949463]
[671.01086426 347.01110840]
[658.40570068 338.88031006]
[645.80053711 330.74951172]
[633.19537354 322.61871338]
[620.59020996 314.48791504]
[607.98504639 306.35711670]
[595.37988281 298.22631836]
[582.77471924 290.09552002]
[570.16955566 281.96472168]
[561.13391113 286.73348999]
[550.85437012 287.34069824]
[541.16967773 283.61093140]
[533.83990479 276.15051270]
[530.22644043 266.25003052]
[531.03973389 255.66136169]
[518.74365234 247.07032776]
[506.44754028 238.47930908]
[496.93212891 233.65287781]
[489.96066284 226.78814697]
[485.85537720 218.88133240]
[484.59768677 210.93203735]
[485.85537720 203.83625793]
[471.12802124 200.98924255]
[456.40069580 198.14222717]
[441.67333984 195.29521179]
[439.29281616 196.72457886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 144]
[4 143]
[5 142]
[6 141]
[8 140]
[9 139]
[10 138]
[12 136]
[13 135]
[17 132]
[18 131]
[20 128]
[21 127]
[22 126]
[23 125]
[24 124]
[25 123]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[44 55]
[45 54]
[46 53]
[47 52]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[94 114]
[95 113]
[96 111]
[97 110]
[100 107]
[101 106]
[145 253]
[146 252]
[147 251]
[148 250]
[149 174]
[150 173]
[152 171]
[153 170]
[154 169]
[155 168]
[157 165]
[158 164]
[159 163]
[187 245]
[188 244]
[189 243]
[192 237]
[193 236]
[194 235]
[195 234]
[196 233]
[197 232]
[198 231]
[199 230]
[200 229]
[201 226]
[202 225]
[205 222]
[206 221]
[207 220]
[208 218]
[209 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
