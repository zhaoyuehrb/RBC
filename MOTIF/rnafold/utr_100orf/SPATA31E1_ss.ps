%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:03:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGGGAUGCCCAGAGCUCAGUUGCUUGAAGGCGAUGGGAAAUCUCGUCAUCCCUCUAGGGAAGGGCAGGGCAGGCAGGGUUGAGAGUGGGCAGAGGAUUCCACCCCCAGCUCCCAGACCAUCUGUGGAGUGCA\
) } def
/len { sequence length } bind def

/coor [
[122.33418274 179.56877136]
[121.42451477 172.61878967]
[122.76854706 165.68663025]
[126.26065826 159.48962402]
[118.66085815 146.55737305]
[111.06105804 133.62512207]
[103.46125031 120.69287872]
[83.25730896 112.64349365]
[81.04427338 91.00800323]
[70.68549347 80.15924072]
[60.32671356 69.31047821]
[49.96792984 58.46171570]
[39.60914993 47.61295319]
[29.25036621 36.76419067]
[15.78427124 37.99977875]
[4.24804783 31.32607651]
[-1.23083007 19.39120102]
[1.15673029 6.67618465]
[-8.94870472 -4.40894890]
[-19.05413818 -15.49408245]
[-29.15957451 -26.57921600]
[-39.26500702 -37.66434860]
[-49.62379074 -48.51311111]
[-60.23039246 -59.11971283]
[-70.83699036 -69.72631836]
[-81.44359589 -80.33291626]
[-92.05019379 -90.93952179]
[-102.65679932 -101.54611969]
[-113.26339722 -112.15272522]
[-129.88656616 -109.26889801]
[-144.82002258 -116.75736237]
[-152.30198669 -131.50860596]
[-149.57701111 -147.65486145]
[-160.42578125 -158.01364136]
[-172.99324036 -166.20259094]
[-186.85144043 -171.94284058]
[-200.70962524 -177.68309021]
[-214.56782532 -183.42335510]
[-228.42601013 -189.16360474]
[-242.28421021 -194.90385437]
[-258.46359253 -192.22804260]
[-268.66006470 -205.07186890]
[-262.38436890 -220.22270203]
[-246.09242249 -222.09466553]
[-236.54396057 -208.76203918]
[-222.68576050 -203.02178955]
[-208.82757568 -197.28153992]
[-194.96937561 -191.54129028]
[-181.11117554 -185.80104065]
[-167.25299072 -180.06079102]
[-157.14710999 -191.14642334]
[-147.04211426 -202.23104858]
[-154.03656006 -215.50048828]
[-161.03099060 -228.76991272]
[-168.02543640 -242.03935242]
[-182.18220520 -250.31689453]
[-181.82145691 -266.71206665]
[-167.31430054 -274.35894775]
[-153.58444214 -265.39102173]
[-154.75599670 -249.03378296]
[-147.76156616 -235.76435852]
[-140.76712036 -222.49491882]
[-133.77268982 -209.22549438]
[-131.85501099 -194.75630188]
[-134.90196228 -182.33320618]
[-141.55142212 -173.41804504]
[-150.06700134 -168.86241150]
[-139.21823120 -158.50363159]
[-126.31187439 -162.10804749]
[-113.21038055 -158.81602478]
[-103.38412476 -149.38862610]
[-99.49071503 -136.22654724]
[-102.65679932 -122.75932312]
[-92.05019379 -112.15272522]
[-81.44359589 -101.54611969]
[-70.83699036 -90.93952179]
[-60.23039246 -80.33291626]
[-49.62379074 -69.72631836]
[-39.01718903 -59.11971283]
[-34.24133682 -58.23107529]
[-30.00372505 -54.27606201]
[-28.17987442 -47.76978683]
[-18.07444000 -36.68465042]
[-7.96900511 -25.59951782]
[2.13642931 -14.51438332]
[12.24186420 -3.42925000]
[29.01908875 -3.39791703]
[40.84669113 8.97102928]
[40.09912872 26.40541077]
[50.45790863 37.25417328]
[60.81669235 48.10293579]
[71.17547607 58.95169449]
[81.53425598 69.80046082]
[91.89303589 80.64922333]
[102.22924805 79.13841248]
[112.01283264 82.79920197]
[118.81842041 90.72408295]
[133.75442505 89.34005737]
[148.96810913 81.85806274]
[160.36927795 94.40596008]
[151.46791077 108.83516693]
[135.13845825 104.27606964]
[120.20244598 105.66009521]
[119.26856995 108.30047607]
[117.99133301 110.79293823]
[116.39350128 113.09307861]
[123.99330139 126.02532196]
[131.59310913 138.95756531]
[139.19290161 151.88981628]
[161.08778381 161.36187744]
[161.42231750 184.51046753]
[170.73591614 196.26873779]
[180.04949951 208.02700806]
[189.36309814 219.78527832]
[198.67669678 231.54354858]
[208.12547302 243.19346619]
[217.70817566 254.73347473]
[227.29087830 266.27346802]
[236.87358093 277.81347656]
[251.64401245 286.13638306]
[247.73524475 302.63360596]
[230.80068970 303.44445801]
[225.33357239 287.39617920]
[215.75086975 275.85617065]
[206.16816711 264.31616211]
[196.58546448 252.77616882]
[189.83169556 249.61149597]
[186.91842651 240.85714722]
[177.60482788 229.09886169]
[168.29122925 217.34059143]
[158.97763062 205.58232117]
[149.66404724 193.82405090]
[143.00927734 194.95039368]
[136.28839111 193.90708923]
[130.19584656 190.76870728]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 109]
[5 108]
[6 107]
[7 106]
[9 94]
[10 93]
[11 92]
[12 91]
[13 90]
[14 89]
[18 86]
[19 85]
[20 84]
[21 83]
[22 82]
[23 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[33 68]
[34 67]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[52 63]
[53 62]
[54 61]
[55 60]
[97 103]
[98 102]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[116 126]
[117 125]
[118 124]
[119 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
