%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUUUACCCGGCCUAACAGCUGAGGCGCUUUACGGCGACGGCGGCUGAGUGAGAACCUUGGCGGCUGUGGAGGCUGCCGCGGCUGCGAAGGAGGCGGCGGCGGUGGCGGAGGAAGAGGAGUGGCGGCAGCGGCGGCGGGGACCCGUGCGGGGAUGGCGGAGGUACCGCCUGGGCCUAGCAGCCUCCUCCCACCACCAGCACCUCCGGCCCCGGCGGCGGUCGAGCCCCGCUGUCCCUUCCCGGCGGGGGCCG\
) } def
/len { sequence length } bind def

/coor [
[127.31301117 322.29806519]
[127.31733704 337.60357666]
[120.19807434 351.15255737]
[107.59117889 359.83154297]
[92.39362335 361.64614868]
[78.09769440 356.17944336]
[67.98848724 344.68759155]
[64.38903046 329.81134033]
[68.12644958 314.96917725]
[78.34191895 303.57168579]
[92.68798065 298.23794556]
[94.53131104 283.35162354]
[96.37463379 268.46530151]
[98.21795654 253.57901001]
[100.06127930 238.69270325]
[101.90460968 223.80639648]
[93.12875366 216.56730652]
[88.88134003 205.88476562]
[90.32008362 194.35856628]
[97.20349884 184.85400391]
[107.92234039 179.78961182]
[110.13186646 164.95323181]
[112.34139252 150.11686707]
[114.55091858 135.28048706]
[107.92159271 131.77305603]
[95.21723938 139.74797058]
[94.66294861 124.75819397]
[88.03363037 121.25076294]
[77.01095581 131.42428589]
[65.98828125 141.59780884]
[54.96560287 151.77134705]
[50.60979462 167.58143616]
[34.67391968 171.45182800]
[23.55144310 159.40100098]
[28.68421173 143.82580566]
[44.79207611 140.74867249]
[55.81475067 130.57513428]
[66.83742523 120.40161133]
[77.86009979 110.22808838]
[70.92704010 96.92648315]
[56.27431870 100.13547516]
[41.62159348 103.34447479]
[26.96886826 106.55346680]
[12.31614304 109.76246643]
[0.49073204 120.27294922]
[-13.59714699 115.43756104]
[-28.24987221 118.64656067]
[-42.90259552 121.85555267]
[-57.55532074 125.06455231]
[-72.20804596 128.27354431]
[-86.86077118 131.48254395]
[-93.95622253 145.41769409]
[-108.36913300 151.48416138]
[-123.29416656 146.81755066]
[-131.68417358 133.62127686]
[-129.57766724 118.12622070]
[-117.96925354 107.64868164]
[-102.34008026 107.13583374]
[-90.06976318 116.82981873]
[-75.41704559 113.62082672]
[-60.76431656 110.41182709]
[-46.11159134 107.20283508]
[-31.45886803 103.99383545]
[-16.80614281 100.78483582]
[-6.02879333 90.50388336]
[9.10714626 95.10974121]
[23.75987053 91.90074158]
[38.41259766 88.69174957]
[53.06531906 85.48274994]
[67.71804810 82.27375793]
[69.50255585 74.98915100]
[54.93339920 71.41989899]
[58.50287628 56.85079193]
[73.07158661 60.41993332]
[74.85610199 53.13532639]
[63.34566116 43.51712418]
[51.83522034 33.89892578]
[40.32477951 24.28072548]
[28.81434059 14.66252613]
[17.30389977 5.04432678]
[5.79345989 -4.57387304]
[-5.71698046 -14.19207287]
[-21.26797676 -17.10361099]
[-26.07315063 -31.20182419]
[-37.58359146 -40.82002258]
[-49.09403229 -50.43822098]
[-60.60447311 -60.05642319]
[-72.11491394 -69.67462158]
[-87.47650146 -66.74963379]
[-101.09899902 -74.42828369]
[-106.55027771 -89.08493805]
[-101.25640869 -103.79917908]
[-87.71699524 -111.62339783]
[-72.32493591 -108.86322784]
[-62.34788895 -96.82193756]
[-62.49671173 -81.18505859]
[-50.98627090 -71.56686401]
[-39.47583008 -61.94866180]
[-27.96539116 -52.33046341]
[-16.45495033 -42.71226501]
[-1.72725773 -40.48868179]
[3.90121937 -25.70251274]
[15.41165924 -16.08431244]
[26.92210007 -6.46611357]
[38.43254089 3.15208602]
[49.94298172 12.77028561]
[61.45341873 22.38848495]
[72.96385956 32.00668716]
[84.47430420 41.62488556]
[115.06458282 47.84558868]
[135.29472351 67.22060394]
[141.15002441 91.34415436]
[133.94908142 111.77323151]
[148.09640503 106.78790283]
[162.24371338 101.80258179]
[176.39103699 96.81726074]
[190.53834534 91.83193970]
[197.56805420 86.04424286]
[204.89077759 86.87351227]
[219.09843445 82.06285858]
[233.30609131 77.25220490]
[247.45341492 72.26688385]
[261.53823853 67.10765076]
[275.62307739 61.94841766]
[289.70788574 56.78918457]
[296.66574097 50.91532135]
[303.99813843 51.65431976]
[318.14544678 46.66899872]
[332.29278564 41.68367767]
[340.03613281 23.11610222]
[358.66558838 16.37679482]
[375.95257568 25.40915108]
[389.90600586 19.90446854]
[399.90393066 7.64263439]
[414.58261108 10.16945934]
[428.53607178 4.66477680]
[438.53396606 -7.59705687]
[453.21267700 -5.07023239]
[467.16610718 -10.57491398]
[481.11953735 -16.07959557]
[495.07299805 -21.58427811]
[509.02642822 -27.08896065]
[515.83746338 -33.13246536]
[523.18585205 -32.57434082]
[537.20605469 -37.90670395]
[549.75616455 -55.29835510]
[569.96417236 -51.03219604]
[583.77777100 -56.87898254]
[597.59136963 -62.72576904]
[611.40496826 -68.57255554]
[625.18225098 -74.50432587]
[638.92272949 -80.52085114]
[652.62591553 -86.62190247]
[666.29125977 -92.80724335]
[672.79632568 -99.17892456]
[680.16326904 -98.98345947]
[693.90380859 -104.99998474]
[707.64428711 -111.01650238]
[718.22961426 -126.09990692]
[735.58874512 -123.44582367]
[749.25408936 -129.63116455]
[762.91943359 -135.81651306]
[776.58477783 -142.00186157]
[790.25012207 -148.18721008]
[803.91546631 -154.37254333]
[807.14288330 -164.72264099]
[815.35424805 -171.46124268]
[825.69921875 -172.56037903]
[834.75329590 -167.89802551]
[848.56689453 -173.74481201]
[851.08764648 -188.96482849]
[861.45379639 -200.39053345]
[876.35748291 -204.37602234]
[891.04296875 -199.64955139]
[900.82421875 -187.71929932]
[902.58001709 -172.39216614]
[895.75018311 -158.55900574]
[882.51397705 -150.63392639]
[867.09509277 -151.14576721]
[854.41363525 -159.93122864]
[840.60009766 -154.08444214]
[830.07348633 -137.84559631]
[810.10083008 -140.70721436]
[796.43548584 -134.52186584]
[782.77014160 -128.33651733]
[769.10479736 -122.15117645]
[755.43945312 -115.96582794]
[741.77410889 -109.78048706]
[737.22790527 -98.58971405]
[725.91711426 -93.31714630]
[713.66082764 -97.27600098]
[699.92028809 -91.25947571]
[686.17980957 -85.24295044]
[672.47662354 -79.14190674]
[658.81127930 -72.95655823]
[654.02709961 -67.35106659]
[644.93927002 -66.78034210]
[631.19879150 -60.76382446]
[626.34588623 -55.21769333]
[617.25170898 -54.75897598]
[603.43817139 -48.91218948]
[589.62457275 -43.06539917]
[575.81097412 -37.21861267]
[573.87506104 -28.60339165]
[568.11621094 -21.72968483]
[559.72003174 -18.20861053]
[550.50714111 -18.94003296]
[542.53839111 -23.88650703]
[528.51818848 -18.55414581]
[514.53112793 -13.13551998]
[500.57766724 -7.63083839]
[486.62423706 -2.12615657]
[472.67080688 3.37852526]
[458.71734619 8.88320732]
[449.71749878 20.75131035]
[434.04074097 18.61821747]
[420.08731079 24.12289810]
[411.08746338 35.99100113]
[395.41070557 33.85790634]
[381.45727539 39.36259079]
[380.06658936 49.48436737]
[374.56921387 58.19163132]
[365.89416504 63.88792801]
[355.55993652 65.49641418]
[345.40872192 62.66287231]
[337.27810669 55.83099365]
[323.13076782 60.81631470]
[308.98345947 65.80163574]
[294.86712646 70.87400818]
[280.78228760 76.03324127]
[266.69747925 81.19247437]
[252.61264038 86.35171509]
[249.83537292 90.20572662]
[244.61938477 92.37171936]
[238.11674500 91.45986938]
[223.90908813 96.27052307]
[209.70143127 101.08117676]
[195.52366638 105.97925568]
[181.37635803 110.96457672]
[167.22903442 115.94989777]
[153.08172607 120.93521881]
[138.93440247 125.92054749]
[129.38729858 137.49002075]
[127.17776489 152.32638550]
[124.96823883 167.16276550]
[122.75871277 181.99913025]
[134.60722351 196.80963135]
[131.88502502 215.25637817]
[116.79091644 225.64971924]
[114.94758606 240.53602600]
[113.10426331 255.42233276]
[111.26094055 270.30865479]
[109.41761780 285.19494629]
[107.57429504 300.08126831]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 254]
[12 253]
[13 252]
[14 251]
[15 250]
[16 249]
[21 246]
[22 245]
[23 244]
[24 243]
[28 39]
[29 38]
[30 37]
[31 36]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[75 109]
[76 108]
[77 107]
[78 106]
[79 105]
[80 104]
[81 103]
[82 102]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[113 242]
[114 241]
[115 240]
[116 239]
[117 238]
[119 237]
[120 236]
[121 235]
[122 232]
[123 231]
[124 230]
[125 229]
[127 228]
[128 227]
[129 226]
[132 220]
[133 219]
[135 217]
[136 216]
[138 214]
[139 213]
[140 212]
[141 211]
[142 210]
[144 209]
[145 208]
[147 203]
[148 202]
[149 201]
[150 200]
[151 198]
[152 197]
[153 195]
[154 194]
[156 193]
[157 192]
[158 191]
[160 188]
[161 187]
[162 186]
[163 185]
[164 184]
[165 183]
[169 181]
[170 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
