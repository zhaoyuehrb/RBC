%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUGUACCGGGCCGUGGAGCGGCGGCUCCUGUACCCCCGGCGCGGACCUAAAGGGGCUCGGGCCGCUCGGGCCGGGAAUGGCGGCGGCGGCCGAGCCCGGGGCCCGCGCCUGGCUGGGCGGCGGCUCCCCGCGCCCCGGCAGCCCGGCCUGCAGCCCCGUGCUGGGCUCAGGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[81.20576477 254.71104431]
[76.60874176 240.43283081]
[78.12140656 225.50929260]
[85.48999023 212.44392395]
[97.47840118 203.42848206]
[112.07552338 199.97535706]
[126.83262634 202.66381836]
[139.27313232 211.04180908]
[133.38122559 197.24740601]
[127.48930359 183.45301819]
[121.59738159 169.65863037]
[115.70546722 155.86422729]
[109.81355286 142.06983948]
[100.40089417 143.19740295]
[90.96893311 142.24472046]
[81.97187805 139.25765991]
[73.84300995 134.38006592]
[62.82593536 144.55966187]
[51.80886459 154.73924255]
[40.79179382 164.91883850]
[29.77472305 175.09843445]
[25.42761993 190.91091919]
[9.49388027 194.79010010]
[-1.63523149 182.74539185]
[3.48896194 167.16737366]
[19.59512901 164.08135986]
[30.61219978 153.90177917]
[41.62927246 143.72218323]
[52.64634323 133.54258728]
[63.66341400 123.36299133]
[60.62212753 117.76400757]
[58.43749237 111.77857208]
[57.15703583 105.53690338]
[56.80861664 99.17477417]
[57.39980698 92.83060455]
[58.91775131 86.64239502]
[61.32942581 80.74478149]
[64.58236694 75.26605988]
[68.60580444 70.32540894]
[73.31221008 66.03032684]
[66.23400879 52.80538559]
[59.15580368 39.58044815]
[52.07759857 26.35550880]
[44.99939346 13.13056946]
[37.92118454 -0.09436903]
[30.84298134 -13.31930828]
[17.50926208 -21.83532333]
[18.32520103 -36.70756149]
[11.24699497 -49.93250275]
[4.16878986 -63.15744019]
[-5.19005346 -64.67320251]
[-12.68080521 -70.25701904]
[-16.68645477 -78.54484558]
[-16.41614342 -87.60801697]
[-12.05813313 -95.40166473]
[-18.43052673 -108.98078918]
[-24.80291939 -122.55991364]
[-31.17531395 -136.13903809]
[-37.54770660 -149.71815491]
[-43.92010117 -163.29728699]
[-50.29249191 -176.87640381]
[-56.66488647 -190.45553589]
[-63.16252518 -196.91798401]
[-63.02761841 -204.32934570]
[-69.16072083 -218.01821899]
[-75.29381561 -231.70707703]
[-81.42691803 -245.39595032]
[-87.81013489 -251.97143555]
[-87.54518127 -259.37930298]
[-93.43710327 -273.17367554]
[-108.41686249 -283.85980225]
[-105.67366028 -301.18054199]
[-111.80675507 -314.86941528]
[-117.93985748 -328.55825806]
[-124.07295990 -342.24713135]
[-137.67243958 -351.41152954]
[-136.26582336 -367.75024414]
[-121.30010986 -374.45541382]
[-108.17074585 -364.62933350]
[-110.38408661 -348.38024902]
[-104.25099182 -334.69137573]
[-98.11788940 -321.00250244]
[-91.98478699 -307.31362915]
[-80.78215027 -302.70184326]
[-75.56857300 -291.32345581]
[-79.64270782 -279.06561279]
[-73.75079346 -265.27120972]
[-67.73805237 -251.52905273]
[-61.60494995 -237.84017944]
[-55.47185135 -224.15130615]
[-49.33874893 -210.46244812]
[-43.08576202 -196.82792664]
[-36.71337128 -183.24879456]
[-30.34097672 -169.66967773]
[-23.96858215 -156.09054565]
[-17.59618950 -142.51142883]
[-11.22379589 -128.93231201]
[-4.85140228 -115.35317993]
[1.52099097 -101.77405548]
[19.43112946 -91.54892731]
[17.39372826 -70.23564911]
[24.47193336 -57.01070786]
[31.55014038 -43.78577042]
[44.37757874 -36.21569061]
[44.06792068 -20.39751244]
[51.14612579 -7.17257452]
[58.22433090 6.05236435]
[65.30253601 19.27730370]
[72.38074493 32.50224304]
[79.45894623 45.72718048]
[86.53715515 58.95211792]
[107.52863312 57.46182251]
[126.73349762 66.06628418]
[139.59420776 82.72357178]
[154.17514038 79.20269775]
[168.75607300 75.68181610]
[183.33699036 72.16094208]
[197.91792297 68.64006805]
[212.49885559 65.11918640]
[220.76370239 51.91578674]
[235.60099792 48.55282593]
[248.13749695 56.51347733]
[262.71841431 52.99259949]
[277.29934692 49.47172546]
[291.88027954 45.95084763]
[303.38146973 34.26092529]
[319.18579102 38.63766479]
[323.03509521 54.57865143]
[310.96954346 65.68516541]
[295.40115356 60.53177261]
[280.82022095 64.05265045]
[266.23928833 67.57352448]
[251.65837097 71.09440613]
[244.13601685 83.89868927]
[229.39903259 87.67707062]
[216.01972961 79.70011902]
[201.43879700 83.22099304]
[186.85786438 86.74186707]
[172.27694702 90.26274872]
[157.69601440 93.78362274]
[143.11509705 97.30449677]
[138.61058044 119.37525177]
[123.60794067 136.17791748]
[129.49986267 149.97230530]
[135.39178467 163.76670837]
[141.28369141 177.56109619]
[147.17561340 191.35549927]
[153.06753540 205.14988708]
[160.49140930 218.18392944]
[169.35072327 230.28816223]
[178.21005249 242.39239502]
[187.06936646 254.49662781]
[194.68618774 259.59237671]
[195.97573853 266.89190674]
[204.62127686 279.14978027]
[213.26679993 291.40762329]
[221.91233826 303.66546631]
[230.55786133 315.92330933]
[246.17204285 318.36724854]
[255.41717529 331.18533325]
[252.80828857 346.77279663]
[239.89317322 355.88189697]
[224.33416748 353.10836792]
[215.36212158 340.09765625]
[218.30001831 324.56884766]
[209.65447998 312.31100464]
[201.00895691 300.05313110]
[192.36341858 287.79528809]
[183.71789551 275.53744507]
[174.96513367 263.35592651]
[166.10581970 251.25170898]
[157.24649048 239.14747620]
[148.38717651 227.04324341]
[149.24711609 242.01856995]
[144.03135681 256.08258057]
[133.61486816 266.87594604]
[119.74505615 272.58804321]
[104.74862671 272.26065063]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 148]
[9 147]
[10 146]
[11 145]
[12 144]
[13 143]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[40 111]
[41 110]
[42 109]
[43 108]
[44 107]
[45 106]
[46 105]
[48 103]
[49 102]
[50 101]
[55 99]
[56 98]
[57 97]
[58 96]
[59 95]
[60 94]
[61 93]
[62 92]
[64 91]
[65 90]
[66 89]
[67 88]
[69 87]
[70 86]
[72 83]
[73 82]
[74 81]
[75 80]
[114 141]
[115 140]
[116 139]
[117 138]
[118 137]
[119 136]
[122 133]
[123 132]
[124 131]
[125 130]
[149 173]
[150 172]
[151 171]
[152 170]
[154 169]
[155 168]
[156 167]
[157 166]
[158 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
