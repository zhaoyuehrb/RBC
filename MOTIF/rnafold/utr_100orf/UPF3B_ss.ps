%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUUGUUGGGGGCGGAGCUUUGACGGGAGCUUCCCGGGAGCCGUUUGUGCCCGGGGUAACCCCGUUCCGGCCAAGCCGCUUCAGCGGGGGACGUAGCCAUGAAGGAAGAGAAGGAGCACAGGCCUAAGGAGAAGCGAGUAACCCUGUUAACCCCCGCCGGGGCCACAGGCAGCGGUGGUGGGACCUCGGGGGACAGCU\
) } def
/len { sequence length } bind def

/coor [
[378.46127319 295.50308228]
[365.96484375 287.20611572]
[351.08209229 286.61215210]
[343.86499023 272.53295898]
[331.36859131 264.23599243]
[318.87216187 255.93902588]
[303.98941040 255.34507751]
[296.77230835 241.26586914]
[284.27587891 232.96890259]
[272.35540771 235.05490112]
[261.87481689 228.23794556]
[258.75402832 215.71755981]
[246.38882446 207.22630310]
[234.02362061 198.73503113]
[221.65840149 190.24377441]
[206.37409973 196.22254944]
[190.37684631 191.87220764]
[180.01977539 178.71528625]
[179.53793335 161.81163025]
[167.04151917 153.51466370]
[154.54510498 145.21769714]
[142.04870605 136.92073059]
[129.55229187 128.62376404]
[108.67383575 141.92726135]
[82.94807434 141.09056091]
[61.38982773 125.30073547]
[48.76526642 133.40138245]
[36.14070511 141.50202942]
[23.51614380 149.60267639]
[10.89158249 157.70330811]
[0.82605910 171.34594727]
[-15.06983376 165.45045471]
[-13.80515289 148.54374695]
[2.79093695 145.07875061]
[15.41549778 136.97810364]
[28.04006004 128.87745667]
[40.66461945 120.77681732]
[53.28918076 112.67617035]
[51.65132523 97.76586151]
[37.56934738 92.59885406]
[23.48736954 87.43185425]
[9.40539169 82.26485443]
[-4.67658520 77.09784698]
[-20.29740906 79.60791016]
[-29.58050919 67.96002197]
[-43.66248703 62.79302216]
[-57.74446487 57.62601852]
[-71.82643890 52.45901489]
[-85.90841675 47.29201508]
[-95.05110931 47.27293777]
[-100.16904449 41.93264389]
[-114.16854858 36.54618454]
[-128.16804504 31.15972137]
[-142.32905579 26.21343994]
[-156.63775635 21.71216965]
[-170.94644165 17.21090126]
[-185.25512695 12.70963097]
[-199.56381226 8.20836163]
[-216.48738098 9.22296047]
[-222.14723206 -6.75835228]
[-208.35728455 -16.62108612]
[-195.06254578 -6.10032749]
[-180.75386047 -1.59905779]
[-166.44517517 2.90221167]
[-152.13647461 7.40348101]
[-137.82778931 11.90475082]
[-135.27760315 10.72247219]
[-132.10362244 10.48329639]
[-128.66421509 11.43058491]
[-125.39941406 13.67303658]
[-122.78158569 17.16022110]
[-108.78208160 22.54668236]
[-94.78258514 27.93314362]
[-80.74141693 33.21003723]
[-66.65943909 38.37703705]
[-52.57746124 43.54404068]
[-38.49548340 48.71104431]
[-24.41350746 53.87804794]
[-9.79992008 50.99840546]
[0.49041736 63.01587296]
[14.57239437 68.18287659]
[28.65437126 73.34987640]
[42.73634720 78.51688385]
[56.81832504 83.68388367]
[59.95838928 72.70014954]
[65.94855499 62.35107040]
[61.55924225 48.00764084]
[57.16992950 33.66421127]
[43.73451996 24.89670181]
[42.35589218 8.91299343]
[54.09161377 -2.02557969]
[69.93904114 0.47211972]
[77.74138641 14.49007034]
[71.51335907 29.27490044]
[75.90267181 43.61832809]
[80.29198456 57.96175766]
[87.74713898 57.14282990]
[102.65745544 55.50497055]
[110.11260986 54.68603897]
[111.28365326 39.73182297]
[101.99470520 26.65149117]
[106.56805420 11.27410221]
[121.49540710 5.39587450]
[135.32579041 13.52607918]
[137.44970703 29.42791939]
[126.23786926 40.90286636]
[125.06682587 55.85708237]
[131.87460327 62.04882431]
[137.29415894 69.21593475]
[141.20251465 77.06549835]
[143.53578186 85.29312897]
[144.28924561 93.59453583]
[143.51504517 101.67663574]
[141.31796265 109.26787567]
[137.84925842 116.12734985]
[150.34567261 124.42431641]
[162.84207153 132.72128296]
[175.33848572 141.01824951]
[187.83489990 149.31521606]
[200.36352539 143.55755615]
[213.99278259 144.73512268]
[225.16984558 152.43353271]
[231.03427124 164.55268860]
[230.14967346 177.87855530]
[242.51487732 186.36982727]
[254.88009644 194.86108398]
[267.24530029 203.35235596]
[285.62814331 204.35984802]
[292.57284546 220.47248840]
[305.06927490 228.76945496]
[320.84585571 229.95686340]
[327.16912842 243.44261169]
[339.66555786 251.73957825]
[352.16195679 260.03656006]
[367.93853760 261.22393799]
[374.26181030 274.70971680]
[386.75823975 283.00668335]
[406.20440674 277.98422241]
[422.82568359 288.70590210]
[426.16360474 307.89202881]
[439.03518677 315.59414673]
[451.71716309 313.21374512]
[462.28137207 319.90032959]
[465.35247803 331.60580444]
[478.10211182 339.50814819]
[490.85174561 347.41049194]
[503.60134888 355.31283569]
[516.35095215 363.21517944]
[529.87792969 356.07589722]
[545.06188965 356.66204834]
[557.82891846 364.71618652]
[564.80371094 377.99053955]
[564.20172119 392.87350464]
[576.95129395 400.77584839]
[589.70092773 408.67819214]
[602.51196289 416.48068237]
[615.38348389 424.18276978]
[628.25506592 431.88488770]
[641.12664795 439.58700562]
[653.99822998 447.28912354]
[666.86981201 454.99124146]
[682.01727295 451.35913086]
[694.96118164 459.35354614]
[698.33044434 473.81671143]
[711.20202637 481.51882935]
[724.07360840 489.22094727]
[740.76989746 492.16552734]
[742.56237793 509.02444458]
[726.85852051 515.41387939]
[716.37152100 502.09249878]
[703.49993896 494.39041138]
[690.62835693 486.68829346]
[676.29034424 490.55572510]
[663.12701416 482.92803955]
[659.16772461 467.86282349]
[646.29614258 460.16070557]
[633.42456055 452.45858765]
[620.55297852 444.75646973]
[607.68139648 437.05435181]
[594.80981445 429.35223389]
[587.44995117 428.61474609]
[581.79858398 421.42782593]
[569.04895020 413.52548218]
[556.29937744 405.62313843]
[543.23840332 412.78396606]
[528.24707031 412.44351196]
[515.35375977 404.59307861]
[508.07324219 391.25552368]
[508.44863892 375.96478271]
[495.69900513 368.06243896]
[482.94940186 360.16009521]
[470.19976807 352.25775146]
[457.45013428 344.35540771]
[439.90917969 344.75665283]
[431.33306885 328.46572876]
[418.46148682 320.76361084]
[409.53512573 325.86032104]
[399.21765137 326.79501343]
[389.36825562 323.33181763]
[381.78976440 316.03353882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[4 134]
[5 133]
[6 132]
[8 130]
[9 129]
[12 127]
[13 126]
[14 125]
[15 124]
[19 119]
[20 118]
[21 117]
[22 116]
[23 115]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[39 84]
[40 83]
[41 82]
[42 81]
[43 80]
[45 78]
[46 77]
[47 76]
[48 75]
[49 74]
[51 73]
[52 72]
[53 71]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[86 96]
[87 95]
[88 94]
[99 107]
[100 106]
[140 196]
[141 195]
[144 193]
[145 192]
[146 191]
[147 190]
[148 189]
[153 184]
[154 183]
[155 182]
[156 180]
[157 179]
[158 178]
[159 177]
[160 176]
[161 175]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
