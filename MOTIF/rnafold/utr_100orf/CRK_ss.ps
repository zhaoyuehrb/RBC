%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCCGGAGGGGGAGGCCCGCGGCUGCCGCCGCCAUUUCGGGCGCUGCUGUGAAGCUGAAACCGGAGCCGGUCCGCUGGGCGGCGGGCGCCGGGGGCCGGAGGGGCGCGCGCGGCGGCGGCACCCCAGCGUUUAGGCGCGGAGGCAGCCAUGGCGGGCAACUUCGACUCGGAGGAGCGGAGUAGCUGGUACUGGGGGAGGUUGAGUCGGCAGGAGGCGGUGGCGCUGCUGCAGGGCCAGCGGCACGGGG\
) } def
/len { sequence length } bind def

/coor [
[65.76016235 260.96124268]
[62.98232651 263.09307861]
[59.44870758 277.67092896]
[55.91508865 292.24877930]
[52.38146973 306.82662964]
[48.84785080 321.40444946]
[57.28898239 334.76571655]
[53.72849274 350.16369629]
[40.27875137 358.46310425]
[24.91925430 354.74002075]
[16.76251793 341.20327759]
[20.64778900 325.88400269]
[34.27000427 317.87084961]
[37.80362701 303.29299927]
[41.33724594 288.71514893]
[44.87086487 274.13729858]
[48.40448380 259.55947876]
[51.66380692 244.91784668]
[54.64768219 230.21763611]
[57.63155746 215.51741028]
[60.61543274 200.81718445]
[54.20275116 190.57945251]
[56.55002594 178.32142639]
[66.93637848 170.70242310]
[70.10401154 156.04069519]
[73.27163696 141.37896729]
[65.66350555 128.45162964]
[51.30770111 124.10296631]
[36.95189285 119.75431824]
[22.59608650 115.40566254]
[8.24027824 111.05700684]
[-6.11552858 106.70835114]
[-20.47133636 102.35969543]
[-34.82714081 98.01103973]
[-49.18294907 93.66238403]
[-56.79313660 99.15100861]
[-65.93720245 100.51791382]
[-74.55978394 97.58306885]
[-80.78073883 91.11934662]
[-83.30490112 82.65388489]
[-97.48734283 77.76937103]
[-113.05487823 80.59115601]
[-122.56893158 69.13113403]
[-136.75137329 64.24662781]
[-150.93380737 59.36212158]
[-165.11624146 54.47761154]
[-179.29869080 49.59310532]
[-194.86622620 52.41488647]
[-204.38027954 40.95486832]
[-218.56271362 36.07035828]
[-211.58319092 49.34763718]
[-215.30873108 63.87761688]
[-227.81585693 72.15843964]
[-242.64709473 69.91469574]
[-252.14505005 58.30483246]
[-251.40589905 43.32305527]
[-240.80940247 32.70364761]
[-255.80206299 33.17293549]
[-270.79470825 33.64221954]
[-284.44067383 42.73729706]
[-299.01824951 35.22555923]
[-299.53131104 18.83443832]
[-285.45205688 10.42571545]
[-271.26400757 18.64956093]
[-256.27136230 18.18027687]
[-241.27868652 17.71099091]
[-239.33000183 10.46857643]
[-235.43260193 -4.01625347]
[-233.48390198 -11.25866890]
[-246.21676636 -19.18798828]
[-258.94964600 -27.11730766]
[-271.68249512 -35.04662704]
[-284.41537476 -42.97594833]
[-297.14822388 -50.90526962]
[-309.88110352 -58.83458710]
[-318.79458618 -60.70648575]
[-322.72283936 -66.94367981]
[-335.35546875 -75.03173828]
[-347.98809814 -83.11980438]
[-360.62072754 -91.20786285]
[-373.30371094 -99.21671295]
[-386.03656006 -107.14603424]
[-401.92559814 -104.92836761]
[-413.46649170 -116.07231903]
[-411.80603027 -132.02922058]
[-398.21798706 -140.55828857]
[-383.12597656 -135.11674500]
[-378.10726929 -119.87889862]
[-365.37438965 -111.94957733]
[-358.05426025 -111.08382416]
[-352.53265381 -103.84049225]
[-339.90002441 -95.75242615]
[-327.26739502 -87.66436768]
[-314.63476562 -79.57630157]
[-301.95178223 -71.56745148]
[-289.21890259 -63.63813400]
[-276.48605347 -55.70881653]
[-263.75317383 -47.77949524]
[-251.02030945 -39.85017395]
[-238.28744507 -31.92085457]
[-225.55458069 -23.99153519]
[-213.67820740 21.88792038]
[-199.49577332 26.77242851]
[-184.94265747 23.60127449]
[-174.41418457 35.41066360]
[-160.23173523 40.29517365]
[-146.04930115 45.17967987]
[-131.86686707 50.06418991]
[-117.68442535 54.94869995]
[-103.13130951 51.77754211]
[-92.60282898 63.58693314]
[-78.42039490 68.47144318]
[-58.55504608 62.82451630]
[-44.83429337 79.30657196]
[-30.47848701 83.65522766]
[-16.12268066 88.00388336]
[-1.76687300 92.35253906]
[12.58893394 96.70119476]
[26.94474030 101.04985046]
[41.30054855 105.39850616]
[55.65635681 109.74716187]
[70.01216125 114.09581757]
[81.08820343 78.77887726]
[112.48349762 79.83671570]
[124.00761414 70.23490906]
[135.53173828 60.63310242]
[147.05586243 51.03129578]
[158.57997131 41.42948914]
[170.10409546 31.82768440]
[166.65844727 25.66006660]
[164.97013855 18.32030106]
[165.41311646 10.33279800]
[168.20011902 2.33490443]
[173.35026550 -4.97333050]
[180.67228699 -10.88823605]
[189.76577759 -14.76558781]
[196.12867737 -28.34916306]
[202.49157715 -41.93273926]
[208.76934814 -55.55587006]
[214.96173096 -69.21801758]
[212.81884766 -85.47656250]
[225.99069214 -95.24562073]
[240.92720032 -88.47563171]
[242.26296997 -72.13097382]
[228.62388611 -63.02563477]
[222.43148804 -49.36348343]
[222.53245544 -41.99303055]
[216.07514954 -35.56984329]
[209.71224976 -21.98626709]
[203.34936523 -8.40269089]
[208.56904602 -3.01707006]
[223.11682129 -6.67250729]
[219.00840759 7.75417089]
[224.22808838 13.13979149]
[238.00408936 7.20498037]
[247.61686707 -5.36104727]
[262.36688232 -3.29071069]
[276.14288330 -9.22552204]
[289.91888428 -15.16033268]
[299.53164673 -27.72636032]
[314.28167725 -25.65602493]
[328.05764771 -31.59083557]
[341.83364868 -37.52564621]
[355.60964966 -43.46045685]
[369.38565063 -49.39526749]
[383.16162109 -55.33007812]
[389.78369141 -61.58326721]
[397.14739990 -61.25176239]
[410.99658203 -67.01368713]
[424.84576416 -72.77561188]
[434.37335205 -86.12316132]
[450.66824341 -84.27669525]
[456.96762085 -69.13569641]
[446.79122925 -56.27592850]
[430.60769653 -58.92642212]
[416.75851440 -53.16449356]
[402.90930176 -47.40256882]
[389.09643555 -41.55408478]
[375.32046509 -35.61927414]
[361.54446411 -29.68446350]
[347.76846313 -23.74965096]
[333.99246216 -17.81484032]
[320.21646118 -11.88002968]
[311.58905029 0.26150081]
[295.85366821 -1.38433850]
[282.07769775 4.55047274]
[268.30169678 10.48528385]
[259.67425537 22.62681389]
[243.93890381 20.98097420]
[230.16290283 26.91578674]
[206.31777954 50.58014297]
[179.70590210 43.35180283]
[168.18177795 52.95360947]
[156.65766907 62.55541611]
[145.13354492 72.15721893]
[133.60942078 81.75902557]
[122.08530426 91.36083221]
[126.06891632 100.24251556]
[126.27471924 110.84580231]
[122.01908112 121.50791931]
[113.35884094 130.32331848]
[123.59415436 141.28865051]
[133.82946777 152.25396729]
[144.06478882 163.21929932]
[152.18576050 167.34286499]
[154.35852051 174.38650513]
[164.45579529 185.47908020]
[174.55307007 196.57164001]
[192.23002625 201.77226257]
[195.27290344 219.06658936]
[205.50822449 230.03192139]
[215.74354553 240.99723816]
[225.97885132 251.96257019]
[241.05158997 256.77120972]
[244.07997131 271.35470581]
[254.31527710 282.32003784]
[264.61901855 293.22109985]
[274.99078369 304.05743408]
[290.87725830 308.12582397]
[295.03601074 323.98889160]
[283.18887329 335.32806396]
[267.52316284 330.47860718]
[264.15441895 314.42919922]
[253.78265381 303.59283447]
[246.90515137 300.94073486]
[243.34996033 292.55535889]
[233.11463928 281.59002686]
[218.77400208 277.56567383]
[215.01353455 262.19787598]
[204.77821350 251.23255920]
[194.54290771 240.26722717]
[184.30758667 229.30191040]
[172.24900818 228.57791138]
[163.63230896 219.54898071]
[163.46049500 206.66891479]
[153.36322021 195.57633972]
[143.26594543 184.48377991]
[133.09945679 173.45460510]
[122.86414337 162.48928833]
[112.62882996 151.52395630]
[102.39351654 140.55863953]
[87.93336487 144.54660034]
[84.76573181 159.20832825]
[81.59810638 173.87005615]
[87.62866211 191.28137207]
[75.31565094 203.80107117]
[72.33177948 218.50128174]
[69.34790039 233.20150757]
[66.36402893 247.90173340]
[68.00537109 252.80258179]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[18 249]
[19 248]
[20 247]
[21 246]
[24 244]
[25 243]
[26 242]
[27 122]
[28 121]
[29 120]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[40 112]
[41 111]
[43 109]
[44 108]
[45 107]
[46 106]
[47 105]
[49 103]
[50 102]
[57 66]
[58 65]
[59 64]
[69 101]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 89]
[82 88]
[124 197]
[125 196]
[126 195]
[127 194]
[128 193]
[129 192]
[136 150]
[137 149]
[138 148]
[139 146]
[140 145]
[154 190]
[155 189]
[157 187]
[158 186]
[159 185]
[161 183]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[168 177]
[169 176]
[170 175]
[201 241]
[202 240]
[203 239]
[204 238]
[206 237]
[207 236]
[208 235]
[210 232]
[211 231]
[212 230]
[213 229]
[215 227]
[216 226]
[217 224]
[218 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
