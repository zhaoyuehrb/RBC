%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGAAUUGAGGCUGAGCCAAAGACCCCAGGGCCGUCUCAGUCUCAUAAAAGGGGAUCAGGCAGGAGGAGUUUGGGAGAAACCUGAGAAGGGCCUGAUUUGCAGCAUCAUGAUGGGCCUCUCCUUGGCCUCUGCUGUGCUCCUGGCCUCCCUCCUGAGUCUCCACCUUGGAACUGCCACACGUGGGAGUGACAUAUCCAAGACCUGCU\
) } def
/len { sequence length } bind def

/coor [
[82.40183258 230.08050537]
[70.55360413 220.88162231]
[63.55385208 207.61499023]
[62.64868164 192.64233398]
[67.99922943 178.62905884]
[78.65564728 168.06813049]
[83.25585175 153.79093933]
[87.85605621 139.51374817]
[76.97415161 149.83770752]
[66.09223938 160.16166687]
[55.21033478 170.48561096]
[44.32842255 180.80957031]
[33.44651413 191.13352966]
[22.56460571 201.45748901]
[11.68269730 211.78143311]
[0.80078888 222.10539246]
[-10.08111954 232.42935181]
[-5.80221653 243.66328430]
[-5.56331682 255.64753723]
[-9.36907291 266.97744751]
[-16.75144005 276.33294678]
[-26.82710648 282.63232422]
[-38.40313339 285.15725708]
[-50.11819077 283.63470459]
[-60.60263824 278.26620483]
[-71.93888092 288.08911133]
[-76.78826904 303.75488281]
[-92.83766174 307.12368774]
[-103.57682037 294.73004150]
[-97.95822144 279.32345581]
[-81.76179504 276.75286865]
[-70.42554474 266.92996216]
[-74.66952515 249.31469727]
[-69.36051941 231.90162659]
[-55.88527679 219.53536987]
[-37.91492462 215.70216370]
[-20.40507507 221.54743958]
[-9.52316666 211.22348022]
[1.35874212 200.89953613]
[12.24065113 190.57557678]
[23.12256050 180.25161743]
[34.00446701 169.92765808]
[44.88637924 159.60371399]
[55.76828766 149.27975464]
[66.65019226 138.95579529]
[77.53210449 128.63183594]
[69.48573303 117.51605988]
[66.34359741 104.63189697]
[68.23596191 91.97126770]
[74.54048157 81.36226654]
[84.02348328 74.20519257]
[95.06578827 71.28981018]
[96.41679382 56.35077286]
[97.76779938 41.41173553]
[99.11880493 26.47270203]
[100.46981049 11.53366566]
[101.70850372 -3.41510153]
[102.83480835 -18.37275696]
[103.96111298 -33.33041000]
[105.08741760 -48.28806686]
[106.21372223 -63.24571991]
[96.18587494 -75.16545868]
[97.54118347 -90.31860352]
[108.96662903 -99.80516052]
[110.09293365 -114.76281738]
[111.21923828 -129.72047424]
[112.34554291 -144.67813110]
[113.47184753 -159.63577271]
[111.20563507 -164.34149170]
[110.99334717 -168.98173523]
[112.46583557 -172.78477478]
[115.00106812 -175.23738098]
[116.80051422 -190.12905884]
[118.59995270 -205.02072144]
[120.39939880 -219.91239929]
[122.19883728 -234.80407715]
[123.99827576 -249.69575500]
[125.79772186 -264.58743286]
[115.53000641 -268.74493408]
[107.33724213 -278.02462769]
[103.73556519 -291.23144531]
[106.51832581 -305.97744751]
[98.79167938 -318.83432007]
[91.06504059 -331.69119263]
[76.46688080 -339.16284180]
[75.90880585 -355.55249023]
[89.96492004 -363.99987793]
[104.17548370 -355.81500244]
[103.92189789 -339.41781616]
[111.64854431 -326.56097412]
[119.37519073 -313.70410156]
[126.86481476 -314.09851074]
[126.07601929 -329.07772827]
[125.28723145 -344.05697632]
[119.90822601 -358.05935669]
[131.56307983 -367.50204468]
[144.14514160 -359.33554077]
[140.26647949 -344.84576416]
[141.05526733 -329.86654663]
[141.84405518 -314.88729858]
[149.33367920 -315.28167725]
[155.66728210 -328.87893677]
[162.00086975 -342.47619629]
[168.33447266 -356.07348633]
[174.66807556 -369.67074585]
[181.00166321 -383.26800537]
[177.09915161 -388.89987183]
[175.14314270 -395.41278076]
[175.29470825 -402.15985107]
[177.50715637 -408.48104858]
[181.53378296 -413.76794434]
[186.95494080 -417.52209473]
[193.22163391 -419.40200806]
[199.71098328 -419.25411987]
[207.24351501 -432.22567749]
[214.77603149 -445.19723511]
[222.30854797 -458.16879272]
[229.84106445 -471.14031982]
[224.35971069 -485.78576660]
[229.62336731 -500.51083374]
[243.14668274 -508.36285400]
[258.54437256 -505.63427734]
[268.54611206 -493.61349487]
[268.42941284 -477.97634888]
[258.24932861 -466.10623169]
[242.81262207 -463.60781860]
[235.28010559 -450.63626099]
[227.74757385 -437.66470337]
[220.21505737 -424.69314575]
[212.68254089 -411.72161865]
[215.31611633 -388.74874878]
[194.59893799 -376.93438721]
[188.26533508 -363.33712769]
[181.93173218 -349.73986816]
[175.59814453 -336.14260864]
[169.26454163 -322.54534912]
[162.93093872 -308.94808960]
[163.85264587 -276.11248779]
[140.68939209 -262.78799438]
[138.88995361 -247.89631653]
[137.09051514 -233.00463867]
[135.29107666 -218.11296082]
[133.49162292 -203.22128296]
[131.69218445 -188.32960510]
[129.89274597 -173.43792725]
[128.42950439 -158.50947571]
[127.30319977 -143.55181885]
[126.17689514 -128.59416199]
[125.05059052 -113.63651276]
[123.92428589 -98.67885590]
[133.80027771 -87.58830261]
[132.87112427 -72.40307617]
[121.17137146 -62.11941528]
[120.04506683 -47.16176224]
[118.91876221 -32.20410538]
[117.79245758 -17.24645233]
[116.66615295 -2.28879666]
[119.29898834 4.61825132]
[115.40884399 12.88467121]
[114.05783844 27.82370758]
[112.70683289 42.76274109]
[111.35582733 57.70177841]
[110.00482178 72.64081573]
[127.74060059 84.96632385]
[133.10243225 107.64440155]
[121.15435028 129.61557007]
[131.55979919 140.41958618]
[141.96525574 151.22358704]
[152.37069702 162.02760315]
[162.77615356 172.83160400]
[173.18159485 183.63562012]
[184.06350708 193.95957947]
[195.39974976 203.78248596]
[206.73599243 213.60539246]
[222.23231506 216.79512024]
[226.78410339 230.97717285]
[238.12034607 240.80009460]
[249.45658875 250.62300110]
[265.65301514 253.19355774]
[271.27160645 268.60015869]
[260.53247070 280.99380493]
[244.48306274 277.62500000]
[239.63366699 261.95925903]
[228.29742432 252.13633728]
[216.96118164 242.31341553]
[202.27569580 239.82629395]
[196.91308594 224.94163513]
[185.57684326 215.11872864]
[174.24060059 205.29582214]
[174.21719360 220.29580688]
[163.69279480 230.98397827]
[148.69496155 231.23898315]
[137.81329346 220.91476440]
[137.27996826 205.92425537]
[147.40042114 194.85284424]
[162.37759399 194.04106140]
[151.97213745 183.23706055]
[141.56668091 172.43304443]
[131.16123962 161.62904358]
[120.75579071 150.82502747]
[110.35034180 140.02102661]
[114.30226135 154.49107361]
[118.25418854 168.96112061]
[128.42208862 179.98898315]
[133.13674927 194.22877502]
[131.55886841 209.14555359]
[123.96933746 222.08383179]
[111.71923828 230.74034119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 46]
[9 45]
[10 44]
[11 43]
[12 42]
[13 41]
[14 40]
[15 39]
[16 38]
[17 37]
[25 32]
[26 31]
[52 163]
[53 162]
[54 161]
[55 160]
[56 159]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[77 140]
[78 139]
[82 91]
[83 90]
[84 89]
[101 137]
[102 136]
[103 135]
[104 134]
[105 133]
[106 132]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[166 201]
[167 200]
[168 199]
[169 198]
[170 197]
[171 196]
[172 189]
[173 188]
[174 187]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
