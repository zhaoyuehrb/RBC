%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGACUGUGCGCAUGCGCAUCGGGCCGGACUACGGGGCGCCGCUGAGCCAAGUGGGCCACCCGGGCACGGCCACGCUCCCGGGUCACGUGACACGGAGGGGGCCGAAUUCUGCUGGAGGCAGCGCCAUAUCCUGGAGGUGAAGGUACCACCUCAUGGAGACCCCCGCGGCCGCCGCCCCCGCUGGGAGCUUAUUCCCCUCCUUCCUGCUCCUGGCCUGCGGGACGCUGGUGGCCGCCUUGCUGGGCGCCGCUC\
) } def
/len { sequence length } bind def

/coor [
[49.51440811 306.71685791]
[51.38228226 322.71398926]
[46.65923691 336.95101929]
[41.93619156 351.18804932]
[37.21315002 365.42507935]
[37.48338318 374.52679443]
[32.34322739 379.80776978]
[27.44514847 393.98553467]
[22.54706764 408.16329956]
[17.64898682 422.34103394]
[12.75090599 436.51879883]
[16.39303780 452.50839233]
[4.18439674 463.45739746]
[-11.31581211 458.10244751]
[-14.16230392 441.95223999]
[-1.42685139 431.62072754]
[3.47122931 417.44296265]
[8.36931038 403.26519775]
[13.26739025 389.08743286]
[18.16547203 374.90969849]
[22.97612572 360.70202637]
[27.69916916 346.46499634]
[32.42221069 332.22796631]
[37.14525604 317.99096680]
[24.29511070 310.25186157]
[11.44611359 302.51342773]
[1.07063746 313.34622192]
[-9.30483913 324.17901611]
[-10.39790726 340.18478394]
[-23.67466164 349.19073486]
[-38.95031357 344.28829956]
[-44.50668716 329.23815918]
[-36.08141327 315.58554077]
[-20.13763618 313.80352783]
[-9.76215935 302.97073364]
[0.61331731 292.13793945]
[9.05220890 279.73693848]
[15.32161331 266.10995483]
[21.59101868 252.48297119]
[27.86042404 238.85598755]
[26.15085030 224.05982971]
[38.94784546 214.75672913]
[45.21725082 201.12976074]
[51.48665237 187.50277710]
[57.75605774 173.87579346]
[56.04648590 159.07962036]
[68.84347534 149.77653503]
[75.11288452 136.14955139]
[81.38228607 122.52257538]
[76.94721985 117.95702362]
[73.60592651 112.53947449]
[71.51694489 106.52696228]
[70.77939606 100.20476532]
[56.25525665 96.45652008]
[41.73111725 92.70827484]
[24.09251785 98.04098511]
[12.07358932 85.23745728]
[-2.49562669 81.66843414]
[-21.60240555 88.15129852]
[-34.93364716 74.12319946]
[-49.58637238 70.91419983]
[-64.23909760 67.70520782]
[-78.89182281 64.49620819]
[-93.54454803 61.28721237]
[-108.19727325 58.07821655]
[-122.84999084 54.86922073]
[-136.05607605 63.12980270]
[-150.87030029 59.66669083]
[-158.66412354 47.02580643]
[-173.31684875 43.81681061]
[-188.77174377 49.30117035]
[-201.07150269 38.45460129]
[-197.56318665 22.43512154]
[-181.85585022 17.72219849]
[-170.10784912 29.16408348]
[-155.45512390 32.37308121]
[-143.09132385 24.14678192]
[-128.18566895 27.19242668]
[-119.64099884 40.21649551]
[-104.98827362 43.42549133]
[-90.33554840 46.63448715]
[-75.68282318 49.84348679]
[-61.03009796 53.05248260]
[-46.37737274 56.26147842]
[-31.72464943 59.47047424]
[-23.68146133 53.22383118]
[-13.31067753 52.40335846]
[-4.00090599 57.51839447]
[1.07340133 67.09922028]
[15.64261723 70.66824341]
[26.12711525 64.67021179]
[38.28048706 67.50397491]
[45.47936249 78.18413544]
[60.00350189 81.93238068]
[74.52764130 85.68062592]
[80.80883026 76.41130829]
[90.44352722 69.88246918]
[102.24237823 67.29142761]
[114.59819794 69.32295227]
[116.44152069 54.43664169]
[118.28484344 39.55033493]
[120.12816620 24.66402626]
[121.97148895 9.77771854]
[114.51119995 7.24269676]
[107.64641571 2.83941221]
[101.84930420 -3.28395438]
[97.55298615 -10.85942268]
[95.12113953 -19.50999069]
[94.82070923 -28.76807594]
[96.79955292 -38.10075378]
[101.07079315 -46.94041824]
[107.50506592 -54.71909714]
[104.20587158 -69.35177612]
[100.90667725 -83.98445892]
[97.60748291 -98.61713409]
[94.30828094 -113.24981689]
[82.79425049 -124.92710114]
[87.41032410 -140.66317749]
[103.40789032 -144.27011108]
[114.33001709 -132.03739929]
[108.94096375 -116.54901123]
[112.24015808 -101.91632843]
[115.53935242 -87.28365326]
[118.83854675 -72.65097046]
[122.13774872 -58.01829147]
[129.59666443 -57.23432922]
[126.47816467 -71.90658569]
[139.46873474 -79.40625763]
[150.61552429 -69.36888123]
[144.51448059 -55.66640091]
[151.97340393 -54.88243866]
[158.24281311 -68.50941467]
[164.51220703 -82.13639832]
[159.26809692 -96.80394745]
[165.82028198 -110.53433228]
[179.83586121 -115.44340515]
[186.10527039 -129.07038879]
[192.37467957 -142.69735718]
[198.64408875 -156.32434082]
[204.91348267 -169.95132446]
[211.18289185 -183.57829285]
[204.33836365 -197.63839722]
[208.18293762 -212.79602051]
[220.90132141 -221.89418030]
[236.48829651 -220.63702393]
[247.58415222 -209.61813354]
[248.94976807 -194.04029846]
[239.94035339 -181.25888062]
[224.80987549 -177.30889893]
[218.54046631 -163.68191528]
[212.27105713 -150.05493164]
[206.00166321 -136.42796326]
[199.73225403 -122.80097961]
[193.46284485 -109.17399597]
[198.85366821 -95.33656311]
[192.68971252 -81.42755890]
[178.13919067 -75.86698914]
[171.86978149 -62.24001312]
[165.60038757 -48.61303329]
[172.61079407 -20.10721016]
[159.85568237 3.53626609]
[136.85780334 11.62104321]
[135.01448059 26.50735092]
[133.17115784 41.39365768]
[131.32781982 56.27996445]
[129.48449707 71.16627502]
[137.84684753 83.61903381]
[152.32369995 87.54592896]
[166.80056763 91.47281647]
[181.27743530 95.39971161]
[195.75428772 99.32660675]
[210.23115540 103.25350189]
[224.70800781 107.18038940]
[239.18487549 111.10728455]
[253.66172791 115.03417969]
[268.16250610 118.87181854]
[282.68664551 122.62006378]
[300.32525635 117.28735352]
[312.34417725 130.09088135]
[326.91339111 133.65991211]
[341.48260498 137.22892761]
[356.13534546 140.43792725]
[370.86267090 143.28494263]
[385.58999634 146.13195801]
[400.31735229 148.97897339]
[415.04467773 151.82598877]
[429.77203369 154.67301941]
[444.49935913 157.52003479]
[459.22671509 160.36705017]
[473.95404053 163.21406555]
[481.48110962 150.07548523]
[492.86807251 140.09471130]
[506.87973022 134.35437012]
[521.99627686 133.47712708]
[536.57788086 137.55815125]
[549.04290771 146.15473938]
[558.03924561 158.33442688]
[562.59106445 172.77604675]
[562.20452881 187.91305542]
[556.92156982 202.10353088]
[547.31536865 213.80818176]
[534.42779541 221.75738525]
[519.65686035 225.08886719]
[504.60482788 223.44125366]
[490.90438843 216.99325562]
[480.04168701 206.44432068]
[473.19500732 192.93870544]
[471.10702515 177.94140625]
[456.37969971 175.09439087]
[441.65234375 172.24736023]
[426.92501831 169.40034485]
[412.19766235 166.55332947]
[397.47033691 163.70631409]
[382.74298096 160.85929871]
[368.01565552 158.01228333]
[353.28833008 155.16526794]
[350.90777588 156.59463501]
[347.82537842 157.18061829]
[344.35473633 156.65411377]
[340.89999390 154.86264038]
[337.91357422 151.79815674]
[323.34436035 148.22912598]
[308.77514648 144.66009521]
[298.29064941 150.65812683]
[286.13726807 147.82435608]
[278.93841553 137.14421082]
[264.41427612 133.39596558]
[257.17279053 134.76377869]
[249.73484802 129.51103210]
[235.25798035 125.58414459]
[220.78111267 121.65724945]
[206.30426025 117.73036194]
[191.82739258 113.80346680]
[177.35054016 109.87657166]
[162.87367249 105.94968414]
[148.39682007 102.02278900]
[133.91995239 98.09589386]
[130.27902222 112.57217407]
[121.01521301 123.59560394]
[108.34514618 129.24185181]
[95.00926971 128.79197693]
[88.73986053 142.41896057]
[82.47045898 156.04594421]
[83.73160553 171.81680298]
[71.38304138 180.14520264]
[65.11363220 193.77218628]
[58.84422684 207.39915466]
[52.57482147 221.02613831]
[53.83596802 236.79699707]
[41.48740387 245.12539673]
[35.21799850 258.75238037]
[28.94859314 272.37936401]
[22.67918777 286.00634766]
[32.86296082 287.53378296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[26 36]
[27 35]
[28 34]
[37 253]
[38 252]
[39 251]
[40 250]
[42 248]
[43 247]
[44 246]
[45 245]
[47 243]
[48 242]
[49 241]
[53 95]
[54 94]
[55 93]
[57 90]
[58 89]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[69 76]
[70 75]
[99 166]
[100 165]
[101 164]
[102 163]
[103 162]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[131 159]
[132 158]
[133 157]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[167 237]
[168 236]
[169 235]
[170 234]
[171 233]
[172 232]
[173 231]
[174 230]
[175 229]
[176 227]
[177 226]
[179 223]
[180 222]
[181 221]
[182 216]
[183 215]
[184 214]
[185 213]
[186 212]
[187 211]
[188 210]
[189 209]
[190 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
