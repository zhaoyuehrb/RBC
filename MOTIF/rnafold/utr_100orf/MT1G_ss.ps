%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:15:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCGCCUUCCACGUGCACCCACUGCCUCUUCCCUUCUCGCUUGGGAACUCUAGUCUCGCCUCGGGUUGCAAUGGACCCCAACUGCUCCUGUGCCGCUGCAGGUGUCUCCUGCACCUGCGCCAGCUCCUGCAAGUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAGAGCU\
) } def
/len { sequence length } bind def

/coor [
[103.82138824 279.09289551]
[88.78453064 283.38558960]
[74.52751160 276.96130371]
[67.78205109 262.85339355]
[71.73315430 247.72320557]
[84.51522064 238.71473694]
[85.60383606 223.75428772]
[86.55656433 208.78457642]
[87.37334442 193.80682373]
[88.19011688 178.82908630]
[89.00688934 163.85133362]
[80.84860992 163.51181030]
[72.61547852 162.11341858]
[64.44662476 159.63378906]
[56.48540497 156.06898499]
[46.72815704 167.46179199]
[36.97091293 178.85459900]
[34.49397659 195.06561279]
[19.12009621 200.77314758]
[6.66460419 190.10577393]
[9.94064140 174.03718567]
[25.57810211 169.09736633]
[35.33534622 157.70454407]
[45.09259415 146.31173706]
[41.56087112 139.69532776]
[28.32804298 146.75875854]
[15.09509659 153.82199097]
[8.03209305 140.58892822]
[21.26460075 133.52593994]
[34.49742889 126.46249390]
[30.96570778 119.84607697]
[16.07008171 121.61251831]
[1.17445600 123.37895966]
[-13.72117043 125.14540100]
[-28.61679649 126.91184998]
[-35.27845764 140.82679749]
[-48.41758347 148.91177368]
[-63.84152603 148.58689880]
[-76.62856293 139.95584106]
[-82.69839478 125.77272034]
[-80.11415863 110.56333923]
[-69.70047760 99.18094635]
[-54.78032303 95.25762939]
[-40.11465454 100.04529572]
[-30.38323784 112.01622009]
[-15.48761272 110.24977875]
[-0.59198618 108.48333740]
[14.30364037 106.71689606]
[29.19926643 104.95045471]
[29.64223289 97.24930573]
[30.91373444 89.70280457]
[32.98547363 82.39908600]
[35.81989288 75.42198181]
[39.37076187 68.85005951]
[43.58388901 62.75572968]
[48.39789581 57.20446014]
[53.74509048 52.25408554]
[59.55237961 47.95420837]
[65.74226379 44.34571075]
[72.23387146 41.46041107]
[67.41764832 27.25463676]
[56.20053482 20.84042740]
[52.49342346 8.88161564]
[57.76739883 -2.02955890]
[53.20993042 -16.32044601]
[48.65246201 -30.61133575]
[44.09499359 -44.90222168]
[32.99620056 -51.51906204]
[29.50685501 -63.54321671]
[34.97809219 -74.35682678]
[30.68087578 -88.72811127]
[26.38365936 -103.09940338]
[12.70621490 -115.40390778]
[17.37895012 -132.30357361]
[12.82148075 -146.59446716]
[8.26401234 -160.88534546]
[-2.30891466 -174.13862610]
[7.49954891 -187.96723938]
[23.50298119 -182.37023926]
[22.55490112 -165.44281006]
[27.11236954 -151.15193176]
[31.66983795 -136.86103821]
[42.28696442 -131.01765442]
[46.18766785 -119.12058258]
[40.75494766 -107.39661407]
[45.05216599 -93.02532959]
[49.34938049 -78.65403748]
[62.73988724 -67.33470154]
[58.38588333 -49.45969009]
[62.94335175 -35.16880417]
[67.50081635 -20.87791443]
[72.05828857 -6.58702707]
[85.65213013 4.48729467]
[81.62342834 22.43841934]
[86.43964386 36.64419556]
[116.29507446 37.29185104]
[142.68887329 51.26087570]
[153.81170654 41.19695663]
[158.09599304 33.08817291]
[165.22909546 31.05353165]
[176.53283691 21.19324493]
[187.83659363 11.33295918]
[199.14033508 1.47267234]
[210.44409180 -8.38761425]
[221.74783325 -18.24790001]
[233.05158997 -28.10818672]
[244.35534668 -37.96847534]
[246.87713623 -53.81208801]
[260.90695190 -61.59310150]
[275.68228149 -55.34259033]
[279.86877441 -39.85540771]
[270.25491333 -27.01199913]
[254.21562195 -26.66472435]
[242.91188049 -16.80443764]
[231.60812378 -6.94415140]
[220.30438232 2.91613507]
[209.00062561 12.77642155]
[197.69688416 22.63670731]
[186.39312744 32.49699402]
[175.08938599 42.35728073]
[163.87562561 52.31979370]
[152.75279236 62.38371658]
[157.85995483 70.84407806]
[161.62101746 79.98273468]
[163.94851685 89.58708954]
[178.93305969 88.90634155]
[192.44932556 79.61965942]
[207.13143921 86.92499542]
[207.87567139 103.30724335]
[193.91645813 111.91375732]
[179.61381531 103.89088440]
[164.62925720 104.57163239]
[163.45663452 113.08043671]
[161.16877747 121.35935974]
[157.80590820 129.26290894]
[153.42713928 136.65217590]
[164.73089600 146.51245117]
[176.03463745 156.37274170]
[187.33839417 166.23303223]
[205.47187805 169.33943176]
[210.53919983 186.12501526]
[222.02014160 195.77841187]
[230.63552856 198.92204285]
[233.61982727 205.71284485]
[244.92358398 215.57313538]
[256.22732544 225.43341064]
[267.53106689 235.29370117]
[283.71893311 237.91772461]
[289.28662109 253.34278870]
[278.50662231 265.70092773]
[262.46844482 262.27911377]
[257.67080688 246.59745789]
[246.36705017 236.73716736]
[235.06329346 226.87687683]
[223.75953674 217.01658630]
[212.36672974 207.25933838]
[200.88580322 197.60594177]
[188.78854370 198.33039856]
[179.14054871 190.35092163]
[177.47810364 177.53677368]
[166.17436218 167.67649841]
[154.87060547 157.81620789]
[143.56686401 147.95591736]
[125.20139313 159.68861389]
[103.98463440 164.66810608]
[103.16786194 179.64585876]
[102.35108948 194.62359619]
[101.53431702 209.60134888]
[104.19882965 218.37675476]
[100.56427765 224.84289551]
[99.47566986 239.80334473]
[110.81897736 250.56732178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 171]
[7 170]
[8 168]
[9 167]
[10 166]
[11 165]
[15 24]
[16 23]
[17 22]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[60 95]
[61 94]
[64 92]
[65 91]
[66 90]
[67 89]
[70 87]
[71 86]
[72 85]
[74 82]
[75 81]
[76 80]
[97 122]
[98 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[125 132]
[126 131]
[136 163]
[137 162]
[138 161]
[139 160]
[141 157]
[142 156]
[144 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
