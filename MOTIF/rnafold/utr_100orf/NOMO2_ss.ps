%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCUGCGGCGUGCAGUGUGAGGGGCGGGACCCGGCUGCCGGCGGUGGGUCUAGCUGGGGGAGGUCGGGCCAUGCUGGUGGGCCAGGGCGCGGGGCUGCUGGGGCCCGCGGUGGUCACCGCCGCGGUGGUGCUGCUGCUGAGCGGCGUGGGGCCGGCGCACGGCUCGGAGG\
) } def
/len { sequence length } bind def

/coor [
[112.95178986 304.60791016]
[111.59169769 289.66967773]
[110.23160553 274.73147583]
[108.87151337 259.79327393]
[107.51142120 244.85505676]
[106.01575470 229.92980957]
[104.38462830 215.01876831]
[102.75350952 200.10771179]
[101.12238312 185.19665527]
[92.04698181 173.38623047]
[98.23774719 158.82652283]
[96.60662842 143.91546631]
[92.73967743 137.58557129]
[95.08380127 128.71919250]
[93.72370911 113.78098297]
[86.73742676 111.05300140]
[72.76486206 105.59704590]
[65.77857971 102.86906433]
[54.65574265 112.93298340]
[43.53290558 122.99691010]
[41.29921341 138.88369751]
[27.41301727 146.91819763]
[12.52661324 140.93701172]
[8.05957985 125.52840424]
[17.43864059 112.51253510]
[33.46898651 111.87406921]
[44.59182358 101.81015015]
[55.71466064 91.74623108]
[66.37572479 88.03939819]
[76.88510132 87.39482880]
[86.56097412 89.63991547]
[94.77696228 94.46671295]
[97.75338745 79.76498413]
[100.72982025 65.06325531]
[103.70625305 50.36152649]
[106.54907227 35.63337708]
[109.25804901 20.88002396]
[111.96702576 6.12666988]
[114.67600250 -8.62668419]
[117.38498688 -23.38003731]
[119.95989227 -38.15737915]
[122.40052795 -52.95749283]
[124.84115601 -67.75760651]
[127.28179169 -82.55771637]
[129.72242737 -97.35782623]
[132.16305542 -112.15793610]
[134.60368347 -126.95805359]
[137.04432678 -141.75816345]
[139.48495483 -156.55827332]
[130.54704285 -169.31567383]
[133.23301697 -184.29032898]
[145.45033264 -192.73265076]
[147.89097595 -207.53276062]
[150.33160400 -222.33287048]
[148.63713074 -231.34599304]
[152.95327759 -237.37855530]
[155.66224670 -252.13191223]
[158.37123108 -266.88525391]
[153.25344849 -281.85586548]
[163.16204834 -292.97653198]
[165.87101746 -307.72985840]
[159.19563293 -318.79354858]
[161.77951050 -331.04425049]
[171.69825745 -338.00750732]
[174.67468262 -352.70922852]
[177.65112305 -367.41094971]
[175.89735413 -373.84552002]
[177.44844055 -379.35958862]
[181.01179504 -382.58810425]
[184.52009583 -397.17205811]
[188.02839661 -411.75601196]
[191.53669739 -426.33996582]
[195.04499817 -440.92391968]
[198.55329895 -455.50787354]
[178.64010620 -456.63854980]
[161.13725281 -475.44699097]
[158.42826843 -490.20034790]
[155.71929932 -504.95370483]
[153.01031494 -519.70703125]
[141.97445679 -531.83728027]
[147.21867371 -547.37530518]
[163.34815979 -550.33691406]
[173.77029419 -537.67553711]
[167.76367188 -522.41601562]
[170.47264099 -507.66268921]
[173.18162537 -492.90933228]
[175.89060974 -478.15597534]
[183.29066467 -476.93566895]
[198.09077454 -474.49502563]
[205.49082947 -473.27471924]
[212.79339600 -486.37710571]
[220.09596252 -499.47949219]
[227.39852905 -512.58184814]
[234.70109558 -525.68426514]
[242.00366211 -538.78662109]
[241.96363831 -554.60778809]
[254.91822815 -561.95812988]
[262.22079468 -575.06054688]
[261.43173218 -591.44067383]
[275.36737061 -600.08532715]
[289.69192505 -592.10162354]
[289.66949463 -575.70251465]
[275.32318115 -567.75799561]
[268.02059937 -554.65557861]
[268.58297729 -539.77160645]
[255.10604858 -531.48406982]
[247.80348206 -518.38171387]
[240.50091553 -505.27929688]
[233.19834900 -492.17691040]
[225.89578247 -479.07452393]
[218.59321594 -465.97213745]
[213.13725281 -451.99957275]
[209.62895203 -437.41561890]
[206.12065125 -422.83166504]
[202.61235046 -408.24771118]
[199.10404968 -393.66375732]
[195.59574890 -379.07977295]
[192.35284424 -364.43453979]
[189.37641907 -349.73278809]
[186.39997864 -335.03106689]
[192.88270569 -318.73974609]
[180.62437439 -305.02090454]
[177.91540527 -290.26754761]
[183.22694397 -276.35220337]
[173.12458801 -264.17630005]
[170.41560364 -249.42292786]
[167.70663452 -234.66958618]
[165.13171387 -219.89224243]
[162.69108582 -205.09213257]
[160.25045776 -190.29202271]
[169.11021423 -178.37394714]
[166.84590149 -163.32977295]
[154.28506470 -154.11764526]
[151.84443665 -139.31753540]
[149.40380859 -124.51741791]
[146.96316528 -109.71730804]
[144.52253723 -94.91719055]
[142.08190918 -80.11708069]
[139.64126587 -65.31697083]
[137.20063782 -50.51685715]
[134.76000977 -35.71674728]
[136.78140259 -28.57987976]
[132.13833618 -20.67105865]
[129.42935181 -5.91770601]
[126.72038269 8.83564758]
[124.01140594 23.58900070]
[121.30242157 38.34235382]
[123.19389343 45.51475143]
[118.40798187 53.33795547]
[115.43154907 68.03968811]
[112.45512390 82.74141693]
[109.47869110 97.44314575]
[108.66191864 112.42089081]
[110.02201080 127.35910034]
[111.51767731 142.28434753]
[113.14880371 157.19540405]
[122.34087372 170.07237244]
[116.03343201 183.56553650]
[117.66455841 198.47659302]
[119.29567719 213.38763428]
[120.92680359 228.29869080]
[124.98365021 236.52362061]
[122.44963074 243.49496460]
[123.80972290 258.43316650]
[125.16981506 273.37139893]
[126.52990723 288.30960083]
[127.88999939 303.24780273]
[140.19148254 313.16995239]
[141.79081726 328.89312744]
[131.73916626 341.08901978]
[115.99997711 342.52203369]
[103.91104126 332.34197998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[5 163]
[6 161]
[7 160]
[8 159]
[9 158]
[11 156]
[12 155]
[14 154]
[15 153]
[18 28]
[19 27]
[20 26]
[32 152]
[33 151]
[34 150]
[35 149]
[36 147]
[37 146]
[38 145]
[39 144]
[40 143]
[41 141]
[42 140]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[52 130]
[53 129]
[54 128]
[56 127]
[57 126]
[58 125]
[60 123]
[61 122]
[64 120]
[65 119]
[66 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[76 87]
[77 86]
[78 85]
[79 84]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
