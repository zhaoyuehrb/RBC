%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCAGUGGCCGAGCGGCGUCGUGGGGUUACCCCGCCCGCGCCAGCGCUGCAUCCCUGGCCGCUACCCGGGGAGAGCCGGAGGAUGAAUUGAACCUCGCAGCCGCUGCUAUCUCCAGUGCUCAUCACAGGGUGUGGUGUCUAUCUGAAGAAUAUUUUACUUUCAAAGGAAAGAUGCUGUCUCCAAAUGAUAAAAUGUUAGGAAAACUGGAUCCAUUUUAUCAACCUUCAGUGUCCAAGCAGAAGACCAGUGCA\
GAAAUCAUAAGUGAAGCAA\
) } def
/len { sequence length } bind def

/coor [
[137.83715820 272.77944946]
[130.38604736 271.92453003]
[119.39305115 282.13009644]
[120.44837952 295.53497314]
[113.69971466 306.93978882]
[101.79608154 312.30679321]
[89.16268921 309.88592529]
[78.05381775 319.96527100]
[66.94494629 330.04458618]
[55.83607483 340.12393188]
[44.72720337 350.20327759]
[33.61833191 360.28259277]
[22.50946045 370.36193848]
[11.57493210 380.63012695]
[0.81795478 391.08419800]
[-9.87913322 401.59954834]
[-20.51598358 412.17581177]
[-31.15283585 422.75207520]
[-41.78968430 433.32833862]
[-52.42653656 443.90460205]
[-63.06338882 454.48086548]
[-73.70024109 465.05712891]
[-84.15430450 475.81411743]
[-94.42250824 486.74865723]
[-104.69071198 497.68316650]
[-114.95892334 508.61770630]
[-125.22712708 519.55224609]
[-135.49533081 530.48675537]
[-131.64445496 545.42578125]
[-136.50323486 560.06805420]
[-148.52124023 569.74127197]
[-163.86358643 571.35870361]
[-177.63456726 564.40435791]
[-185.43992615 551.09716797]
[-184.78900146 535.68359375]
[-175.88948059 523.08190918]
[-161.58120728 517.31329346]
[-146.42987061 520.21856689]
[-136.16165161 509.28402710]
[-125.89344788 498.34948730]
[-115.62524414 487.41497803]
[-105.35704041 476.48043823]
[-95.08882904 465.54589844]
[-94.82035828 462.06582642]
[-92.87592316 458.53842163]
[-89.24927521 455.73965454]
[-84.27650452 454.42028809]
[-73.63965607 443.84402466]
[-63.00280380 433.26776123]
[-52.36595154 422.69149780]
[-41.72910309 412.11523438]
[-31.09225082 401.53894043]
[-20.45540047 390.96267700]
[-17.93757629 384.04443359]
[-9.63610840 380.32723999]
[1.12086833 369.87316895]
[1.54803181 366.40899658]
[3.65156960 362.97406006]
[7.40228081 360.34390259]
[12.43012714 359.25305176]
[23.53899765 349.17373657]
[34.64786911 339.09439087]
[45.75674057 329.01504517]
[56.86561203 318.93572998]
[67.97447968 308.85638428]
[79.08335114 298.77706909]
[79.19248199 281.94259644]
[91.70233154 270.17739868]
[109.18746948 271.13708496]
[120.18047333 260.93151855]
[124.65245056 246.61364746]
[121.42212677 231.96560669]
[118.19180298 217.31758118]
[114.96147156 202.66954041]
[111.73114777 188.02149963]
[101.43450928 177.25912476]
[106.01832581 162.11650085]
[102.78799438 147.46846008]
[99.55767059 132.82043457]
[74.74085236 135.86352539]
[48.55444717 119.19080353]
[35.98821640 84.12513733]
[22.80255508 76.97402954]
[9.61689281 69.82292175]
[-3.56876898 62.67181778]
[-16.61842155 70.77133179]
[-31.97001266 71.24485779]
[-45.49404144 63.96500778]
[-53.55261230 50.89002991]
[-53.97801208 35.53702927]
[-46.65580750 22.03588676]
[-33.55563736 14.01833820]
[-18.20137787 13.64106560]
[-4.72325230 21.00555229]
[3.25319409 34.13079071]
[3.58233690 49.48615646]
[16.76799965 56.63726044]
[29.95366096 63.78836823]
[43.13932419 70.93947601]
[52.36674118 59.11345291]
[42.22411728 48.06233597]
[32.08149338 37.01121902]
[21.93887138 25.96010208]
[6.77426004 18.37914467]
[9.86096859 1.70855546]
[26.73455238 0.05975566]
[32.98998642 15.81747913]
[43.13261032 26.86859703]
[53.27523422 37.91971207]
[63.41785812 48.97082901]
[70.24009705 45.85521698]
[83.88457489 39.62399292]
[90.70681763 36.50838089]
[88.99694824 21.60615349]
[87.28707886 6.70392799]
[78.02710724 -6.12430525]
[84.26317596 -19.65060425]
[82.55330658 -34.55282974]
[80.84342957 -49.45505524]
[65.59387207 -55.89203644]
[55.73679733 -69.07224274]
[53.89325714 -85.33245850]
[60.47334290 -100.21289062]
[73.58978271 -109.68034363]
[71.70978546 -124.56205750]
[69.82978821 -139.44378662]
[67.94979095 -154.32550049]
[66.06979370 -169.20722961]
[64.18979645 -184.08894348]
[62.30979538 -198.97065735]
[54.32596207 -213.92709351]
[66.48774719 -225.73925781]
[81.20500946 -217.32270813]
[77.19151306 -200.85066223]
[79.07151031 -185.96894836]
[80.95151520 -171.08721924]
[82.83151245 -156.20550537]
[84.71150970 -141.32377625]
[86.59150696 -126.44206238]
[88.47150421 -111.56034088]
[101.36507416 -107.11950684]
[111.13999176 -97.51623535]
[115.85379028 -84.57916260]
[114.53550720 -70.80693817]
[107.38513184 -58.88564682]
[95.74565887 -51.16492844]
[97.45552826 -36.26269913]
[99.16539764 -21.36047363]
[108.30307007 -9.59814835]
[102.18930054 4.99405670]
[103.89916992 19.89628220]
[105.60904694 34.79850769]
[112.80524445 36.91150284]
[117.03122711 22.51910782]
[121.25721741 8.12671375]
[125.48344421 -6.26561069]
[139.87570190 -2.03914475]
[135.64961243 12.35270214]
[131.42362976 26.74509621]
[127.19763947 41.13749313]
[134.39382935 43.25048447]
[143.88902283 31.63836098]
[153.38420105 20.02623749]
[162.87939453 8.41411304]
[172.37458801 -3.19801116]
[174.48158264 -19.46123886]
[189.72146606 -25.51750183]
[202.41671753 -15.13663769]
[199.50758362 1.00241208]
[183.98670959 6.29717588]
[174.49151611 17.90929985]
[164.99633789 29.52142334]
[155.50114441 41.13354874]
[146.00595093 52.74567413]
[154.22341919 91.35405731]
[138.85716248 120.35530853]
[114.20570374 129.59010315]
[117.43603516 144.23814392]
[120.66635895 158.88616943]
[131.19404602 170.69627380]
[126.37918091 184.79116821]
[129.60951233 199.43920898]
[132.83984375 214.08724976]
[136.07015991 228.73529053]
[139.30049133 243.38331604]
[146.82038879 234.43499756]
[157.76118469 227.86813354]
[171.41894531 224.63569641]
[186.85777283 225.49613953]
[201.85752869 225.58181763]
[216.85728455 225.66749573]
[231.85704041 225.75317383]
[246.85678101 225.83885193]
[261.85653687 225.92453003]
[276.85629272 226.01020813]
[291.85604858 226.09588623]
[306.85580444 226.18156433]
[321.85556030 226.26724243]
[336.85458374 226.09588623]
[351.84848022 225.66755676]
[366.84234619 225.23921204]
[381.83624268 224.81086731]
[393.85284424 214.18162537]
[409.62985229 217.09115601]
[417.06451416 231.30754089]
[410.45355225 245.92517090]
[394.86837769 249.73065186]
[382.26458740 239.80474854]
[367.27069092 240.23309326]
[352.27682495 240.66143799]
[337.28292847 241.08978271]
[334.62582397 243.35313416]
[330.75344849 244.46142578]
[326.21170044 243.86305237]
[321.76989746 241.26699829]
[306.77014160 241.18132019]
[291.77038574 241.09564209]
[276.77062988 241.00996399]
[261.77087402 240.92428589]
[246.77110291 240.83860779]
[231.77134705 240.75292969]
[216.77159119 240.66725159]
[201.77185059 240.58157349]
[186.77209473 240.49589539]
[183.23425293 247.10903931]
[176.15858459 260.33532715]
[172.62074280 266.94848633]
[181.01652527 279.37872314]
[189.41230774 291.80895996]
[197.80809021 304.23919678]
[206.20387268 316.66943359]
[214.81141663 328.95397949]
[223.62820435 341.08923340]
[232.44497681 353.22448730]
[248.44866943 350.19229126]
[264.11404419 354.43646240]
[276.31045532 365.05612183]
[282.62347412 379.88156128]
[281.83294678 395.91741943]
[274.14834595 409.94784546]
[283.10317993 421.98159790]
[292.05801392 434.01531982]
[307.44177246 432.85614014]
[320.99920654 440.21813965]
[328.40423584 453.75213623]
[327.29391479 469.13949585]
[318.02252197 481.47015381]
[303.54855347 486.80944824]
[288.49060059 483.45361328]
[277.65359497 472.47351074]
[274.49557495 457.37283325]
[280.02426147 442.97015381]
[271.06945801 430.93640137]
[262.11462402 418.90267944]
[248.65936279 422.20083618]
[234.91889954 420.12191772]
[222.96739197 412.94638062]
[214.62165833 401.72659302]
[211.16493225 388.13253784]
[213.14971924 374.20333862]
[220.30972290 362.04125977]
[211.49295044 349.90600586]
[202.67616272 337.77075195]
[199.30804443 336.85494995]
[196.20745850 334.28396606]
[194.13783264 330.19711304]
[193.77363586 325.06521606]
[185.37785339 312.63497925]
[176.98207092 300.20474243]
[168.58628845 287.77450562]
[160.19050598 275.34426880]
[152.73939514 274.48931885]
[155.71823120 289.19058228]
[142.65701294 296.56652832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 70]
[3 69]
[7 66]
[8 65]
[9 64]
[10 63]
[11 62]
[12 61]
[13 60]
[14 56]
[15 55]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[71 185]
[72 184]
[73 183]
[74 182]
[75 181]
[77 179]
[78 178]
[79 177]
[82 99]
[83 98]
[84 97]
[85 96]
[100 110]
[101 109]
[102 108]
[103 107]
[113 152]
[114 151]
[115 150]
[117 148]
[118 147]
[119 146]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
[189 224]
[190 223]
[191 222]
[192 221]
[193 220]
[194 219]
[195 218]
[196 217]
[197 216]
[198 215]
[199 211]
[200 210]
[201 209]
[202 208]
[227 271]
[228 270]
[229 269]
[230 268]
[231 267]
[232 263]
[233 262]
[234 261]
[240 254]
[241 253]
[242 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
