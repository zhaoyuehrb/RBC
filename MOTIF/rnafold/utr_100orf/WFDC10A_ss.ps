%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGACAGCUCUGCAGGGAAGUCUGUGACAACCUGGCCAGACAUAGGGCUCACGAUCUGAUCAGAGUCAUGGCACCCCAGACUCUGCUGCCUGUCCUGGUUCUCUGUGUGCUGCUGCUGCAGGCCCAGGGAGGAUACCGUGACAAGAAGAGGAUGCAGAAAACACAGC\
) } def
/len { sequence length } bind def

/coor [
[85.76717377 398.91177368]
[72.14927673 392.35095215]
[61.07134628 382.06646729]
[53.51842499 368.97274780]
[50.16211700 354.23416138]
[51.30086136 339.16116333]
[56.83340454 325.09411621]
[66.26779175 313.28378296]
[78.76512909 304.78036499]
[93.21414948 300.33999634]
[93.21414948 285.33999634]
[93.21414948 270.33999634]
[93.21414948 255.33998108]
[93.21414948 240.33998108]
[93.21414948 225.33998108]
[79.38879395 219.70182800]
[68.74652100 209.17152405]
[62.93095016 195.33157349]
[62.85698700 180.27893066]
[68.56704712 166.30722046]
[79.21984100 155.55728149]
[93.21414948 149.68916321]
[93.21414948 134.68916321]
[93.21414948 119.68916321]
[81.98648834 109.74231720]
[67.09585571 111.55036926]
[52.20522690 113.35842133]
[37.31459427 115.16647339]
[30.26709747 126.67298126]
[18.05228996 131.93084717]
[5.23201561 129.22102356]
[-3.54528689 119.75564575]
[-18.46695518 121.28659058]
[-33.38862610 122.81753540]
[-48.31029510 124.34848785]
[-55.98536301 137.83450317]
[-70.13536835 144.20295715]
[-85.31933594 141.00502014]
[-95.69872284 129.47038269]
[-97.28244019 114.03433990]
[-89.46152496 100.63236237]
[-75.24327087 94.41779327]
[-60.09488678 97.78025818]
[-49.84123993 109.42681885]
[-34.91957092 107.89586639]
[-19.99790382 106.36492157]
[-5.07623434 104.83397675]
[4.95233011 91.35607910]
[21.95804977 89.24037170]
[35.50654221 100.27584076]
[50.39717484 98.46778870]
[65.28781128 96.65973663]
[80.17844391 94.85168457]
[83.96861267 88.37985992]
[70.03403473 82.82762146]
[55.14193344 81.03166199]
[48.47596741 67.59422302]
[56.05603409 54.65039825]
[71.03672791 53.88951874]
[79.88934326 65.99939728]
[91.54896545 75.43620300]
[95.33914185 68.96437073]
[89.63110352 55.09287643]
[83.92307281 41.22138214]
[78.21503448 27.34988785]
[72.50700378 13.47839451]
[66.79897308 -0.39309943]
[61.09093475 -14.26459312]
[54.90657806 -21.04320145]
[55.40837097 -28.44737434]
[49.95916748 -42.42257309]
[44.50996780 -56.39777374]
[31.37992859 -66.22295380]
[33.59217072 -82.47219849]
[48.87092590 -88.42967987]
[61.49872589 -77.96685791]
[58.48516846 -61.84697342]
[63.93436813 -47.87177658]
[69.38356781 -33.89657593]
[74.96243286 -19.97262764]
[80.67046356 -6.10113382]
[86.37849426 7.77036047]
[92.08653259 21.64185524]
[97.79456329 35.51334763]
[103.50260162 49.38484192]
[109.21063232 63.25633621]
[108.04177856 48.30194473]
[118.29423523 37.35265350]
[133.29310608 37.53704071]
[143.27330017 48.73506927]
[141.73716736 63.65620422]
[129.68524170 72.58587646]
[143.89851379 67.79180145]
[158.11177063 62.99771881]
[172.32502747 58.20363998]
[182.92851257 46.46154785]
[197.46113586 49.72533035]
[211.67439270 44.93125153]
[225.88764954 40.13717270]
[240.10092163 35.34309387]
[254.22261047 30.28564453]
[268.24786377 24.96657181]
[282.27310181 19.64749908]
[296.29833984 14.32842541]
[310.32357788 9.00935173]
[320.48327637 -3.11875796]
[335.12716675 -0.39740941]
[349.15240479 -5.71648264]
[359.31213379 -17.84459305]
[373.95602417 -15.12324429]
[387.98126221 -20.44231796]
[401.95645142 -25.89151955]
[415.88040161 -31.47037697]
[429.80435181 -37.04923630]
[439.50708008 -50.27002716]
[455.77618408 -48.20891190]
[461.87539673 -32.98618698]
[451.53039551 -20.26168633]
[435.38320923 -23.12528801]
[421.45925903 -17.54642868]
[407.53530884 -11.96757030]
[402.47534180 -6.53891563]
[393.30032349 -6.41707373]
[379.27508545 -1.09800041]
[370.11856079 10.64965343]
[354.47149658 8.30876064]
[340.44625854 13.62783432]
[331.28973389 25.37548828]
[315.64266968 23.03459549]
[301.61740112 28.35366821]
[287.59216309 33.67274094]
[273.56692505 38.99181366]
[259.54168701 44.31089020]
[256.78671265 48.25704956]
[251.50604248 50.49160767]
[244.89498901 49.55635834]
[230.68173218 54.35043716]
[216.46847534 59.14451218]
[202.25520325 63.93859100]
[192.66835022 75.33778381]
[177.11911011 72.41690063]
[162.90585327 77.21098328]
[148.69258118 82.00505829]
[134.47932434 86.79914093]
[108.21414948 119.68916321]
[108.21414948 134.68916321]
[108.21414948 149.68916321]
[122.20846558 155.55728149]
[132.86125183 166.30722046]
[138.57131958 180.27893066]
[138.49736023 195.33157349]
[132.68177795 209.17152405]
[122.03950500 219.70182800]
[108.21414948 225.33998108]
[108.21414948 240.33998108]
[108.21414948 255.33998108]
[108.21414948 270.33999634]
[108.21414948 285.33999634]
[108.21414948 300.33999634]
[122.66317749 304.78036499]
[135.16052246 313.28378296]
[144.59490967 325.09411621]
[150.12744141 339.16116333]
[151.26618958 354.23416138]
[147.90988159 368.97274780]
[140.35696411 382.06646729]
[129.27902222 392.35095215]
[115.66112518 398.91177368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 159]
[11 158]
[12 157]
[13 156]
[14 155]
[15 154]
[22 147]
[23 146]
[24 145]
[25 53]
[26 52]
[27 51]
[28 50]
[32 47]
[33 46]
[34 45]
[35 44]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[70 79]
[71 78]
[72 77]
[92 144]
[93 143]
[94 142]
[95 141]
[97 139]
[98 138]
[99 137]
[100 136]
[101 133]
[102 132]
[103 131]
[104 130]
[105 129]
[107 127]
[108 126]
[110 124]
[111 123]
[112 121]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
