%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGGCUGCCGGAAGCGGGUCUGGAGCGGGCGAGACGGCCAGGGCCGGCGAGCGCAGUGCAGCGCCGCGCGGUGCGGGCGGCCGAGUGGGGGCGUCAUGGAGGAUGAGCGGAGCUUUUCGGAUAUCUGCGGCGGCCGCCUGGCGCUGCAGCGCCGCUACUACUCCCCGUCCUGCCGGGAAUUCUGCCUCAGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[97.42624664 583.77606201]
[89.69056702 569.31610107]
[98.57408905 555.53149414]
[98.81208038 540.53338623]
[99.05007172 525.53527832]
[99.28806305 510.53717041]
[99.52605438 495.53906250]
[99.76403809 480.54095459]
[100.00202942 465.54281616]
[89.38391113 449.39028931]
[99.97541809 432.24673462]
[99.73742676 417.24862671]
[99.49944305 402.25051880]
[99.26145172 387.25241089]
[99.02346039 372.25430298]
[84.12133026 362.79376221]
[77.81829071 346.13790894]
[82.81092072 328.87982178]
[97.28398132 317.97256470]
[96.57025146 302.98953247]
[95.85652161 288.00653076]
[87.11605835 279.63439941]
[86.40479279 267.15045166]
[94.64932251 257.22216797]
[94.17340088 242.22972107]
[93.69748688 227.23727417]
[90.33947754 220.64450073]
[93.33485413 212.00358582]
[93.09686279 197.00547791]
[92.85887909 182.00735474]
[92.62088776 167.00924683]
[89.36790466 160.36402893]
[92.50000000 151.77172852]
[92.50000000 136.77172852]
[92.50000000 121.77173615]
[78.28385925 113.48700714]
[72.12860107 96.42633820]
[57.49715805 99.73099518]
[42.86571121 103.03565216]
[28.23426437 106.34030914]
[16.56127548 117.85870361]
[0.82348490 113.24850464]
[-2.78941989 97.25228882]
[9.43920803 86.32559204]
[24.92960548 91.70886230]
[39.56105423 88.40420532]
[54.19250107 85.09954834]
[68.82394409 81.79489136]
[78.91384888 70.69561768]
[80.81273651 55.81629562]
[82.71162415 40.93697357]
[80.69244385 32.01730347]
[84.76049042 25.83734894]
[86.89521790 10.99002838]
[89.02993774 -3.85729361]
[91.16466522 -18.70461464]
[89.06046295 -24.99048996]
[90.27228546 -30.55658531]
[93.60988617 -33.98619843]
[96.21460724 -48.75831604]
[98.81933594 -63.53042984]
[101.42405701 -78.30255127]
[104.02877808 -93.07466125]
[106.63349915 -107.84677887]
[109.23822784 -122.61889648]
[111.84294891 -137.39100647]
[114.44766998 -152.16313171]
[117.05239105 -166.93524170]
[111.82901001 -181.86932373]
[121.65883636 -193.05967712]
[124.26355743 -207.83178711]
[126.86827850 -222.60391235]
[129.47300720 -237.37602234]
[132.07772827 -252.14814758]
[134.56517029 -266.94046021]
[136.93519592 -281.75204468]
[130.01383972 -292.64413452]
[132.29975891 -304.93762207]
[142.02975464 -312.13592529]
[144.63447571 -326.90805054]
[147.23919678 -341.68014526]
[149.84391785 -356.45227051]
[151.97863770 -371.29959106]
[153.64122009 -386.20715332]
[155.30378723 -401.11474609]
[156.96635437 -416.02230835]
[158.62893677 -430.92990112]
[152.46888733 -445.50262451]
[161.56918335 -457.29388428]
[163.23176575 -472.20147705]
[151.93844604 -482.67846680]
[149.01396179 -497.62170410]
[155.37414551 -511.26034546]
[168.38992310 -518.45251465]
[170.05250549 -533.36010742]
[171.59675598 -548.28039551]
[173.02259827 -563.21246338]
[174.44844055 -578.14453125]
[175.87428284 -593.07659912]
[166.80970764 -606.31341553]
[171.64456177 -621.61059570]
[186.66996765 -627.23345947]
[200.35972595 -618.86865234]
[202.21220398 -602.93292236]
[190.80635071 -591.65075684]
[189.38050842 -576.71868896]
[187.95468140 -561.78662109]
[186.52883911 -546.85455322]
[189.02522278 -539.88970947]
[184.96008301 -531.69750977]
[183.29750061 -516.78991699]
[194.40896606 -506.90695190]
[197.60815430 -492.20223999]
[191.46336365 -478.27041626]
[178.13934326 -470.53890991]
[176.47676086 -455.63131714]
[182.75572205 -442.12487793]
[173.53651428 -429.26733398]
[171.87393188 -414.35974121]
[170.21136475 -399.45217896]
[168.54879761 -384.54458618]
[166.88621521 -369.63702393]
[168.53993225 -367.36099243]
[169.38677979 -364.28933716]
[169.11790466 -360.72790527]
[167.54139709 -357.08898926]
[164.61604309 -353.84753418]
[162.01130676 -339.07543945]
[159.40658569 -324.30331421]
[156.80186462 -309.53118896]
[163.68672180 -293.39407349]
[151.74678040 -279.38201904]
[149.37675476 -264.57043457]
[151.42639160 -257.46130371]
[146.84983826 -249.54342651]
[144.24511719 -234.77130127]
[141.64039612 -219.99919128]
[139.03567505 -205.22706604]
[136.43095398 -190.45495605]
[141.84063721 -176.57746887]
[131.82450867 -164.33052063]
[129.21978760 -149.55841064]
[126.61506653 -134.78628540]
[124.01033783 -120.01417542]
[121.40561676 -105.24205780]
[118.80089569 -90.46994019]
[116.19617462 -75.69782257]
[113.59144592 -60.92570877]
[110.98672485 -46.15359116]
[108.38200378 -31.38147545]
[106.01198578 -16.56989288]
[103.87725830 -1.72257102]
[101.74253845 13.12475014]
[99.60781860 27.97207260]
[97.59095001 42.83586121]
[95.69206238 57.71518326]
[93.79317474 72.59450531]
[107.60263824 73.82766724]
[118.72482300 81.37724304]
[124.58731842 93.00328064]
[124.07733154 105.59159088]
[117.73163605 115.98423004]
[107.50000000 121.77173615]
[107.50000000 136.77172852]
[107.50000000 151.77172852]
[107.61899567 166.77125549]
[107.85698700 181.76937866]
[108.09497833 196.76748657]
[108.33296967 211.76559448]
[108.68993378 226.76135254]
[109.16584778 241.75379944]
[109.64176941 256.74624634]
[119.71182251 272.15707397]
[110.83953094 287.29278564]
[111.55326080 302.27581787]
[112.26699066 317.25881958]
[123.54176331 322.68582153]
[131.39041138 332.33825684]
[134.36886597 344.34277344]
[131.97064209 356.40286255]
[124.71185303 366.23837280]
[114.02157593 372.01629639]
[114.25955963 387.01443481]
[114.49755096 402.01254272]
[114.73554230 417.01065063]
[114.97353363 432.00875854]
[123.21960449 439.12237549]
[126.12376404 449.39028931]
[122.95805359 459.35031128]
[115.00014496 465.78082275]
[114.76215363 480.77893066]
[114.52416229 495.77703857]
[114.28617096 510.77514648]
[114.04818726 525.77325439]
[113.81019592 540.77136230]
[113.57220459 555.76947021]
[122.01390076 569.82897949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[11 186]
[12 185]
[13 184]
[14 183]
[15 182]
[19 176]
[20 175]
[21 174]
[24 172]
[25 171]
[26 170]
[28 169]
[29 168]
[30 167]
[31 166]
[33 165]
[34 164]
[35 163]
[37 48]
[38 47]
[39 46]
[40 45]
[49 157]
[50 156]
[51 155]
[53 154]
[54 153]
[55 152]
[56 151]
[59 150]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 133]
[76 132]
[79 130]
[80 129]
[81 128]
[82 127]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[89 116]
[90 115]
[94 111]
[95 110]
[96 108]
[97 107]
[98 106]
[99 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
