%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCACUUCUCUUCCCUUCAUUCUUCGCCAGGCUCUCUGCUGACUCAAGUUCUUCAGUUCACGAUCUUCUAGUUGCAGCGAUGAGUGCACGAGUGAGAUCAAGAUCCAGAGGAAGAGGAGAUGGUCAGGAGGCUCCCGAUGUGGUUGCAUUCGUGGCUCCCGGUGAAUCUCAGCAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[288.50857544 236.66775513]
[276.22128296 228.06411743]
[263.93399048 219.46046448]
[251.64671326 210.85681152]
[239.28482056 202.36071777]
[226.84925842 193.97282410]
[214.41369629 185.58493042]
[201.97813416 177.19703674]
[189.54257202 168.80914307]
[177.10700989 160.42124939]
[164.67144775 152.03335571]
[152.23588562 143.64546204]
[139.80032349 135.25756836]
[127.36475372 126.86968231]
[114.85646820 118.59062958]
[102.27640533 110.42104340]
[88.97124481 103.49481201]
[75.06348419 97.87570953]
[61.15573120 92.25661469]
[47.24797058 86.63751221]
[33.34021378 81.01841736]
[19.43245697 75.39931488]
[7.70621300 82.05978394]
[-5.52114630 80.76042175]
[-15.43230724 72.19998932]
[-18.54785919 59.68032074]
[-32.35543060 53.81935501]
[-37.59142303 54.46699524]
[-42.09270096 53.15546417]
[-45.23180771 50.49918747]
[-46.71945190 47.27329636]
[-60.20136261 40.69772720]
[-73.68327332 34.12216187]
[-87.16518402 27.54659271]
[-101.94742584 32.45811081]
[-115.52632904 25.59749603]
[-120.11761475 11.47461796]
[-133.59953308 4.89905119]
[-147.08143616 -1.67651606]
[-160.56335449 -8.25208282]
[-174.04525757 -14.82765007]
[-187.63987732 -21.16692352]
[-201.34306335 -27.26797485]
[-215.04623413 -33.36902237]
[-233.29554749 -31.00949669]
[-243.06861877 -45.57094193]
[-256.87619019 -51.43190765]
[-270.68377686 -57.29287338]
[-286.41009521 -55.56280899]
[-295.10241699 -67.65797424]
[-308.90997314 -73.51893616]
[-321.12768555 -64.21177673]
[-336.36413574 -62.27629852]
[-350.52081299 -68.23315430]
[-359.78964233 -80.47996521]
[-361.67733765 -95.72241211]
[-355.67614746 -109.86034393]
[-343.40032959 -119.09073639]
[-328.15203857 -120.93065643]
[-314.03298950 -114.88516998]
[-304.84112549 -102.58049011]
[-303.04901123 -87.32651520]
[-289.24145508 -81.46554565]
[-274.50271606 -83.61483002]
[-264.82281494 -71.10044861]
[-251.01522827 -65.23947906]
[-237.20765686 -59.37851334]
[-225.86007690 -63.61924362]
[-214.29862976 -58.82704544]
[-208.94519043 -47.07220459]
[-195.24200439 -40.97115707]
[-181.53881836 -34.87010574]
[-176.81442261 -35.72638321]
[-171.50448608 -33.60417175]
[-167.46969604 -28.30956078]
[-153.98777771 -21.73399353]
[-140.50587463 -15.15842628]
[-127.02395630 -8.58285904]
[-113.54204559 -2.00729227]
[-99.58638763 -7.08422279]
[-85.82014465 -0.60771763]
[-80.58961487 14.06468296]
[-67.10770416 20.64024925]
[-53.62579346 27.21581650]
[-40.14388275 33.79138565]
[-26.49446487 40.01178360]
[-12.68689156 45.87274933]
[2.60792303 38.90978622]
[18.52465630 45.27581024]
[25.05155563 61.49155807]
[38.95931244 67.11065674]
[52.86706924 72.72975922]
[66.77482605 78.34885406]
[80.68258667 83.96795654]
[94.59034729 89.58705139]
[86.52224731 76.94166565]
[85.14728546 62.00481796]
[90.77130890 48.09905243]
[102.14331055 38.31756210]
[116.73371124 34.83614349]
[131.29701233 38.42919540]
[142.59378052 48.29748535]
[148.11114502 62.24591446]
[146.62184143 77.17179871]
[138.45713806 89.75502777]
[125.43319702 97.19658661]
[110.44599152 97.84098053]
[123.02605438 106.01056671]
[131.95491028 108.06923676]
[135.75263977 114.43412018]
[148.18821716 122.82201385]
[160.62377930 131.20989990]
[173.05934143 139.59779358]
[185.49490356 147.98568726]
[197.93046570 156.37358093]
[210.36602783 164.76147461]
[222.80158997 173.14936829]
[235.23715210 181.53726196]
[247.67271423 189.92515564]
[256.56430054 192.13934326]
[260.25036621 198.56953430]
[272.53765869 207.17318726]
[284.82492065 215.77682495]
[297.11221313 224.38047791]
[317.20425415 215.62643433]
[338.39819336 220.67245483]
[352.22387695 237.34140015]
[353.25234985 258.84338379]
[366.49658203 265.88546753]
[379.74078369 272.92755127]
[392.98498535 279.96960449]
[408.80227661 279.61676025]
[416.40734863 292.42349243]
[429.65155029 299.46557617]
[442.95672607 306.39178467]
[456.32180786 313.20166016]
[469.68692017 320.01150513]
[480.09298706 314.19387817]
[491.89471436 314.13568115]
[502.14688110 319.73544312]
[508.34722900 329.49401855]
[509.04660034 340.91433716]
[522.16589355 348.18649292]
[535.28521729 355.45861816]
[548.40447998 362.73077393]
[561.52380371 370.00292969]
[574.64306641 377.27505493]
[591.02136230 376.44799805]
[599.69830322 390.36355591]
[591.74786377 404.70657349]
[575.34869385 404.72219849]
[567.37091064 390.39434814]
[554.25164795 383.12222290]
[541.13232422 375.85006714]
[528.01306152 368.57791138]
[514.89373779 361.30578613]
[501.77444458 354.03363037]
[484.53851318 360.14071655]
[468.01608276 351.58862305]
[462.87704468 333.37661743]
[449.51196289 326.56674194]
[436.14685059 319.75689697]
[428.73883057 319.52108765]
[422.60949707 312.70977783]
[409.36526489 305.66769409]
[394.49530029 306.52426147]
[385.94293213 293.21383667]
[372.69869995 286.17175293]
[359.45449829 279.12966919]
[346.21029663 272.08761597]
[339.79562378 277.93405151]
[332.09017944 281.96975708]
[323.59417725 283.92178345]
[314.86184692 283.65289307]
[306.46542358 281.17098999]
[298.95761108 276.62930298]
[292.83511353 270.31707764]
[288.50588989 262.64093018]
[286.26190186 254.09889221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 124]
[2 123]
[3 122]
[4 121]
[5 119]
[6 118]
[7 117]
[8 116]
[9 115]
[10 114]
[11 113]
[12 112]
[13 111]
[14 110]
[15 108]
[16 107]
[17 95]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[26 87]
[27 86]
[31 85]
[32 84]
[33 83]
[34 82]
[37 79]
[38 78]
[39 77]
[40 76]
[41 75]
[42 72]
[43 71]
[44 70]
[46 67]
[47 66]
[48 65]
[50 63]
[51 62]
[128 170]
[129 169]
[130 168]
[131 167]
[133 165]
[134 164]
[135 162]
[136 161]
[137 160]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
