%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAGAGGGCGGGAACAGGAAGUGAGGAUAGGCCGAGUUCCGGGCGCGAGGCGGCCACCGUGGAGAGCAGAGCGCGGCGGCUGGAAGCUGCUAAGUCAGAGCCGCGAUGUUCCGGAUUGAGGGCCUCGCGCCGAAGCUGGACCCGGAGGAGAUGAAACGGAAGAUGCGCGAGGAUGUGAUCUCCUCCAUACGGAACUUUCUCAUCU\
) } def
/len { sequence length } bind def

/coor [
[130.04388428 352.96804810]
[125.09027100 338.26290894]
[129.75830078 323.46463013]
[142.25300598 314.26345825]
[142.02645874 299.26516724]
[141.79991150 284.26687622]
[141.57336426 269.26858521]
[141.34681702 254.27029419]
[141.12026978 239.27200317]
[140.89372253 224.27371216]
[147.43194580 203.90939331]
[161.65895081 194.66709900]
[151.21376038 183.90151978]
[140.76855469 173.13594055]
[125.91815186 173.16845703]
[115.17187500 162.39942932]
[115.23844910 146.82273865]
[104.79325104 136.05714417]
[89.83599854 134.92543030]
[77.88987732 143.99682617]
[65.94375610 153.06822205]
[53.99763489 162.13961792]
[55.31352234 175.86170959]
[49.72106934 188.34284973]
[38.77888107 196.36618042]
[25.40880394 197.92189026]
[13.11608791 192.70979309]
[1.03432083 201.59973145]
[-2.79137564 217.17996216]
[-17.41756821 223.77192688]
[-31.62429237 216.31884766]
[-34.51336670 200.53807068]
[-23.86853981 188.53526306]
[-7.85561180 189.51795959]
[4.22615480 180.62803650]
[3.60077929 164.22525024]
[12.96869373 150.54432678]
[28.80197334 145.08798218]
[44.92624283 150.19349670]
[56.87236404 141.12210083]
[68.81848907 132.05070496]
[80.76461029 122.97931671]
[72.85778046 101.14302063]
[82.84521484 82.69767761]
[76.07575989 69.31207275]
[69.30630493 55.92646408]
[62.53685379 42.54085541]
[55.76739883 29.15524864]
[48.99794388 15.76964188]
[42.22849274 2.38403392]
[35.45903778 -11.00157356]
[28.68958282 -24.38718224]
[21.92012978 -37.77278900]
[6.73390198 -40.35826111]
[-3.89378309 -51.26264954]
[-6.03736734 -66.15792084]
[0.91776979 -79.30189514]
[-5.85168409 -92.68750000]
[-12.82253170 -105.96934509]
[-19.99318314 -119.14438629]
[-27.16383362 -132.31942749]
[-30.95150757 -134.45335388]
[-33.59586334 -137.38719177]
[-34.98579788 -140.66285706]
[-35.17054749 -143.83322144]
[-34.34220505 -146.51361084]
[-40.70428467 -160.09756470]
[-47.06636429 -173.68153381]
[-53.42844391 -187.26548767]
[-59.79052353 -200.84944153]
[-70.21745300 -203.95622253]
[-77.07112885 -212.12138367]
[-78.27281189 -222.49272156]
[-73.66544342 -231.61651611]
[-79.61434174 -245.38642883]
[-85.56324768 -259.15634155]
[-91.51214600 -272.92626953]
[-97.46104431 -286.69619751]
[-103.40994263 -300.46609497]
[-115.09104156 -305.93914795]
[-119.76178741 -317.53250122]
[-115.42374420 -328.82601929]
[-121.16399384 -342.68420410]
[-126.90425110 -356.54238892]
[-131.05038452 -359.72131348]
[-133.33276367 -363.76849365]
[-133.73287964 -367.82797241]
[-132.57487488 -371.16067505]
[-137.68151855 -385.26464844]
[-142.78814697 -399.36865234]
[-155.67459106 -409.51119995]
[-153.06658936 -425.70166016]
[-137.64703369 -431.28463745]
[-125.27825165 -420.51684570]
[-128.68417358 -404.47528076]
[-123.57752991 -390.37130737]
[-118.47089386 -376.26733398]
[-113.04605865 -362.28265381]
[-107.30580139 -348.42443848]
[-101.56555176 -334.56625366]
[-87.08776093 -324.65032959]
[-89.64002991 -306.41500854]
[-83.69113159 -292.64508057]
[-77.74223328 -278.87518311]
[-71.79332733 -265.10525513]
[-65.84442902 -251.33534241]
[-59.89553070 -237.56541443]
[-43.57646179 -227.19610596]
[-46.20656204 -207.21151733]
[-39.84448242 -193.62756348]
[-33.48240280 -180.04360962]
[-27.12032509 -166.45964050]
[-20.75824547 -152.87568665]
[-13.98879051 -139.49008179]
[-6.81813955 -126.31504059]
[0.35251158 -113.13999176]
[4.60038757 -110.95253754]
[7.51805258 -106.07219696]
[7.53392410 -99.45695496]
[14.30337715 -86.07135010]
[29.01225281 -83.88343811]
[39.73924255 -73.32901764]
[42.22356796 -58.30632019]
[35.30573654 -44.54224396]
[42.07519150 -31.15663528]
[48.84464645 -17.77102852]
[55.61409760 -4.38541985]
[62.38355255 9.00018787]
[69.15300751 22.38579559]
[75.92246246 35.77140427]
[82.69190979 49.15701294]
[89.46136475 62.54261780]
[96.23081970 75.92823029]
[107.55316925 75.85503387]
[118.10414124 81.01615143]
[125.51354980 90.66913605]
[127.93662262 103.02581787]
[124.49991608 115.57921600]
[115.55883026 125.61194611]
[126.00402832 136.37753296]
[141.57562256 136.78146362]
[152.01518250 147.84808350]
[151.53414917 162.69073486]
[161.97933960 173.45631409]
[172.42454529 184.22190857]
[185.08216858 192.27078247]
[199.26165771 197.16381836]
[213.44116211 202.05686951]
[227.62066650 206.94990540]
[241.80015564 211.84295654]
[255.97966003 216.73599243]
[270.15914917 221.62902832]
[284.33865356 226.52207947]
[298.51815796 231.41511536]
[289.02029419 219.80517578]
[284.98620605 205.35781860]
[287.09542847 190.50685120]
[294.99267578 177.75405884]
[307.34753418 169.24777222]
[322.07876587 166.42094421]
[336.70474243 169.74978638]
[348.76153564 178.67353821]
[356.21813965 191.68888855]
[357.81835938 206.60328674]
[353.29263306 220.90426636]
[343.40338135 232.18267822]
[329.81652832 238.53858948]
[314.82202148 238.90147400]
[327.77447510 246.46678162]
[340.72692871 254.03208923]
[355.94754028 249.77662659]
[369.67800903 257.60284424]
[373.77230835 272.86758423]
[365.80136108 286.51455688]
[350.49417114 290.44723511]
[336.93225098 282.33242798]
[333.16162109 266.98452759]
[320.20916748 259.41925049]
[307.25671387 251.85392761]
[293.62509155 245.59461975]
[279.44561768 240.70156860]
[265.26611328 235.80853271]
[251.08660889 230.91549683]
[236.90711975 226.02244568]
[222.72761536 221.12940979]
[208.54812622 216.23635864]
[194.36862183 211.34332275]
[180.18913269 206.45028687]
[174.11485291 210.84950256]
[184.21267700 221.94155884]
[197.33851624 229.20190430]
[198.24952698 244.17420959]
[186.10079956 252.97241211]
[172.15966797 247.43661499]
[169.35566711 232.70156860]
[161.96629333 219.64793396]
[155.89201355 224.04716492]
[156.11856079 239.04545593]
[156.34510803 254.04373169]
[156.57165527 269.04202271]
[156.79820251 284.04031372]
[157.02474976 299.03860474]
[157.25129700 314.03689575]
[170.01821899 322.85650635]
[175.13107300 337.50704956]
[170.62385559 352.35510254]
[158.22969055 361.69128418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 198]
[10 197]
[12 145]
[13 144]
[14 143]
[17 140]
[18 139]
[19 42]
[20 41]
[21 40]
[22 39]
[27 35]
[28 34]
[44 133]
[45 132]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[51 126]
[52 125]
[53 124]
[57 120]
[58 119]
[59 116]
[60 115]
[61 114]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[82 100]
[83 99]
[84 98]
[88 97]
[89 96]
[90 95]
[146 188]
[147 187]
[148 186]
[149 185]
[150 184]
[151 183]
[152 182]
[153 181]
[154 180]
[168 179]
[169 178]
[170 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
