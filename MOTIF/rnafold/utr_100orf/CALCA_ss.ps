%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCGCUGCCACCGCCUCUGAUCCAAGCCACCUCCCGCCAGGUGAGCCCCGAGAUCCUGGCUCAGAGAGGUGUCAUGGGCUUCCAAAAGUUCUCCCCCUUCCUGGCUCUCAGCAUCUUGGUCCUGUUGCAGGCAGGCAGCCUCCAUGCAGCACCAUUCAGGUCUGCCCUGGAGA\
) } def
/len { sequence length } bind def

/coor [
[196.49572754 369.91735840]
[184.52378845 360.88006592]
[181.01538086 346.29611206]
[187.56715393 332.80264282]
[201.19743347 326.54040527]
[215.70347595 330.35961914]
[208.28089905 317.32482910]
[200.85832214 304.29003906]
[193.43574524 291.25527954]
[186.01316833 278.22048950]
[178.59059143 265.18572998]
[168.49528503 263.36730957]
[160.92062378 256.12799072]
[158.54939270 245.69638062]
[162.40536499 235.48228455]
[155.45275879 222.19088745]
[148.50015259 208.89947510]
[141.54756165 195.60807800]
[128.79240417 187.91682434]
[129.25190735 172.10229492]
[122.29929352 158.81089783]
[115.34669495 145.51948547]
[108.39408875 132.22808838]
[99.26568604 133.29521179]
[90.19321442 131.82667542]
[81.86759186 127.93432617]
[74.92287445 121.91457367]
[69.88796234 114.22588348]
[55.23075485 117.41436005]
[40.60259247 120.73352814]
[26.00463676 124.18311310]
[11.40668011 127.63269806]
[-3.19127679 131.08229065]
[-17.78923416 134.53187561]
[-25.88073158 148.10771179]
[-41.22213364 151.90467834]
[-54.71165848 143.67008972]
[-58.34621048 128.28941345]
[-49.96947479 114.88769531]
[-34.55121994 111.41596222]
[-21.23882103 119.93392181]
[-6.64086485 116.48432922]
[7.95709181 113.03474426]
[22.55504799 109.58515930]
[37.15300751 106.13556671]
[42.95827103 101.52233124]
[52.04227829 102.75715637]
[66.69947815 99.56867981]
[73.16226196 80.28080750]
[89.63773346 68.34981537]
[88.30076599 53.40951920]
[86.96379089 38.46921921]
[85.62682343 23.52892113]
[84.28985596 8.58862400]
[82.95288086 -6.35167456]
[81.61591339 -21.29197311]
[72.67938232 -34.34758377]
[79.25148773 -47.71383286]
[77.91451263 -62.65413284]
[76.57754517 -77.59442902]
[74.84107208 -92.49358368]
[72.70635223 -107.34090424]
[68.37484741 -115.42063141]
[70.66848755 -122.47203827]
[68.79911804 -137.35508728]
[66.92974091 -152.23815918]
[57.53292084 -164.96647644]
[63.62376404 -178.55879211]
[61.75439072 -193.44184875]
[59.88502121 -208.32490540]
[58.01564789 -223.20796204]
[45.65862274 -227.08183289]
[35.72787857 -235.32037354]
[29.68267250 -246.66687012]
[28.39379120 -259.41146851]
[32.01827621 -271.64883423]
[39.98125076 -281.56289673]
[51.06679153 -287.69641113]
[49.72982025 -302.63671875]
[48.39284897 -317.57702637]
[47.05587769 -332.51730347]
[45.71891022 -347.45761108]
[44.38193893 -362.39791870]
[34.51167297 -375.49407959]
[41.16636658 -390.48233032]
[57.50024414 -391.94400024]
[66.71041107 -378.37548828]
[59.32223511 -363.73489380]
[60.65920639 -348.79458618]
[61.99617767 -333.85427856]
[63.33314896 -318.91400146]
[64.67012024 -303.97369385]
[66.00708771 -289.03338623]
[81.85866547 -282.38131714]
[92.22657013 -268.55773926]
[94.19462585 -251.30114746]
[87.13367462 -235.33557129]
[72.89870453 -225.07733154]
[74.76808167 -210.19427490]
[76.63745117 -195.31121826]
[78.50682068 -180.42816162]
[87.76993561 -168.76437378]
[81.81280518 -154.10752869]
[83.68217468 -139.22447205]
[85.55154419 -124.34140778]
[87.55367279 -109.47562408]
[89.68840027 -94.62830353]
[92.30862427 -92.22351074]
[93.87864685 -88.41683197]
[93.74639130 -83.72311401]
[91.51784515 -78.93140411]
[92.85481262 -63.99110413]
[94.19178009 -49.05080414]
[103.03268433 -37.06382370]
[96.55621338 -22.62894249]
[97.89318085 -7.68864489]
[99.23014832 7.25165319]
[100.56712341 22.19195175]
[101.90409088 37.13224792]
[103.24105835 52.07254791]
[104.57803345 67.01284790]
[118.71695709 72.45392609]
[128.98266602 83.59526062]
[133.25083923 98.13132477]
[130.63822937 113.05408478]
[121.68548584 125.27548981]
[128.63809204 138.56689453]
[135.59069824 151.85829163]
[142.54330444 165.14968872]
[155.79574585 173.79164124]
[154.83895874 188.65547180]
[161.79156494 201.94688416]
[168.74415588 215.23828125]
[175.69676208 228.52967834]
[193.18737793 238.50901794]
[191.62536621 257.76315308]
[199.04794312 270.79791260]
[206.47052002 283.83270264]
[213.89309692 296.86749268]
[221.31567383 309.90225220]
[228.73825073 322.93704224]
[236.96015930 335.48294067]
[245.94932556 347.49105835]
[254.93849182 359.49917603]
[263.92764282 371.50732422]
[272.91680908 383.51544189]
[289.99914551 390.35095215]
[291.43664551 407.82714844]
[300.63870239 419.67291260]
[309.84075928 431.51867676]
[319.04284668 443.36444092]
[326.80502319 448.24218750]
[328.30117798 455.50473022]
[337.29034424 467.51284790]
[346.27951050 479.52096558]
[361.89071655 483.21820068]
[368.60296631 497.78958130]
[361.26718140 512.05725098]
[345.51074219 515.07623291]
[333.42065430 504.53063965]
[334.27139282 488.51013184]
[325.28222656 476.50201416]
[316.29306030 464.49389648]
[307.19708252 452.56649780]
[297.99502563 440.72073364]
[288.79293823 428.87496948]
[279.59088135 417.02923584]
[267.61257935 415.20239258]
[259.85156250 405.38058472]
[260.90869141 392.50460815]
[251.91952515 380.49645996]
[242.93037415 368.48834229]
[233.94120789 356.48022461]
[224.95204163 344.47210693]
[222.66450500 359.29666138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 141]
[7 140]
[8 139]
[9 138]
[10 137]
[11 136]
[15 134]
[16 133]
[17 132]
[18 131]
[20 129]
[21 128]
[22 127]
[23 126]
[28 48]
[29 47]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
[58 113]
[59 112]
[60 111]
[61 107]
[62 106]
[64 105]
[65 104]
[66 103]
[68 101]
[69 100]
[70 99]
[71 98]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[142 174]
[143 173]
[144 172]
[145 171]
[146 170]
[148 167]
[149 166]
[150 165]
[151 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
