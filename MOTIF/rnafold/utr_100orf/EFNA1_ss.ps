%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGAUCUGUGAGCCCAGCGCUGACUGCGCCGCGGAGAAAGCCAGUGGGAACCCAGACCCAUAGGAGACCCGCGUCCCCGCUCGGCCUGGCCAGGCCCCGCGCUAUGGAGUUCCUCUGGGCCCCUCUCUUGGGUCUGUGCUGCAGUCUGGCCGCUGCUGAUCGCCACACCGUCUUCUGGAACAGUUCAAAUCCCAAGUUCCGGA\
) } def
/len { sequence length } bind def

/coor [
[500.20538330 860.42645264]
[498.46926880 857.31750488]
[497.77404785 853.42633057]
[498.41397095 849.12261963]
[492.41061401 835.37634277]
[486.40722656 821.63006592]
[480.40386963 807.88385010]
[465.73983765 798.24670410]
[467.94195557 779.96649170]
[461.72967529 766.31341553]
[455.51736450 752.66027832]
[449.30505371 739.00720215]
[443.67129517 734.21905518]
[443.10388184 725.09820557]
[437.10052490 711.35192871]
[420.74038696 701.04925537]
[423.28695679 681.05493164]
[416.86715698 667.49810791]
[410.44738770 653.94134521]
[404.02758789 640.38458252]
[397.19735718 627.02984619]
[389.96304321 613.88964844]
[382.72872925 600.74951172]
[375.39440918 587.66485596]
[367.96054077 574.63647461]
[360.52667236 561.60815430]
[353.09280396 548.57983398]
[345.65893555 535.55145264]
[338.22506714 522.52313232]
[330.79119873 509.49481201]
[317.76339722 502.27499390]
[317.64443970 486.45422363]
[310.21057129 473.42590332]
[302.77670288 460.39755249]
[295.34283447 447.36923218]
[287.90896606 434.34088135]
[280.47509766 421.31253052]
[264.07946777 417.57598877]
[255.28437805 402.84851074]
[259.95007324 385.99075317]
[252.31838989 373.07727051]
[244.68670654 360.16381836]
[230.24215698 356.71557617]
[222.31858826 343.72821045]
[226.03337097 328.60079956]
[218.40168762 315.68734741]
[212.28982544 311.52670288]
[210.75381470 302.51824951]
[203.31994629 289.48989868]
[195.88607788 276.46157837]
[191.59364319 274.35961914]
[188.57798767 269.53683472]
[188.43112183 262.92062378]
[181.39802551 249.67163086]
[174.36492920 236.42263794]
[167.33183289 223.17366028]
[160.29873657 209.92468262]
[152.86486816 196.89633179]
[145.03713989 184.10075378]
[137.11207581 171.36524963]
[129.09013367 158.69053650]
[121.06819153 146.01580811]
[113.04624939 133.34109497]
[105.02430725 120.66638184]
[97.00235748 107.99166870]
[87.35596466 118.06215668]
[72.98960114 123.12992096]
[55.94687271 121.62173462]
[43.92008591 112.65756226]
[31.89329910 103.69338989]
[15.55186272 102.31879425]
[8.81737137 87.36624908]
[18.61769104 74.21764374]
[34.87109375 76.39913940]
[40.85747147 91.66660309]
[52.88425827 100.63077545]
[64.91104889 109.59494781]
[70.92443848 105.11286163]
[82.95122528 96.14868927]
[88.96462250 91.66660309]
[83.81044006 77.57992554]
[78.65625763 63.49324799]
[64.59958649 56.78149796]
[59.57318115 42.42218399]
[66.05843353 29.06265259]
[60.90425491 14.97597599]
[55.75007629 0.88930047]
[50.59589767 -13.19737530]
[45.44171906 -27.28405190]
[32.52114868 -37.38310623]
[35.07452774 -53.58225250]
[50.47515869 -59.21719360]
[62.88019562 -48.49118805]
[59.52839279 -32.43822861]
[64.68257141 -18.35155487]
[69.83675385 -4.26487875]
[74.99092865 9.82179737]
[80.14511108 23.90847206]
[93.72092438 29.92785263]
[99.14866638 44.14032364]
[92.74293518 58.33906937]
[97.89711761 72.42574310]
[103.05129242 86.51242065]
[109.67707825 99.96972656]
[117.69902039 112.64443970]
[125.72096252 125.31915283]
[133.74290466 137.99386597]
[141.76484680 150.66857910]
[149.78678894 163.34330750]
[157.02346802 168.92382812]
[157.83271790 176.27304077]
[165.66044617 189.06861877]
[169.55455017 191.00962830]
[172.34562683 193.80862427]
[173.89926147 197.01269531]
[174.24230957 200.17189026]
[173.54771423 202.89158630]
[180.58081055 216.14056396]
[187.61390686 229.38954163]
[194.64700317 242.63853455]
[201.68009949 255.88751221]
[208.91442871 269.02770996]
[216.34828186 282.05603027]
[223.78215027 295.08438110]
[231.31515503 308.05566406]
[238.94683838 320.96911621]
[253.99021912 325.01068115]
[261.54586792 338.21548462]
[257.60015869 352.53213501]
[265.23184204 365.44558716]
[272.86352539 378.35906982]
[286.20999146 380.18948364]
[295.92272949 389.24130249]
[298.60757446 402.04498291]
[293.50344849 413.87866211]
[300.93731689 426.90701294]
[308.37118530 439.93536377]
[315.80505371 452.96368408]
[323.23892212 465.99203491]
[330.67279053 479.02035522]
[344.23229980 487.17205811]
[343.81954956 502.06094360]
[351.25341797 515.08929443]
[358.68728638 528.11761475]
[366.12115479 541.14593506]
[373.55502319 554.17431641]
[380.98889160 567.20263672]
[388.42276001 580.23095703]
[395.39660645 586.13665771]
[395.86889648 593.51513672]
[403.10324097 606.65533447]
[410.33755493 619.79553223]
[414.13882446 621.91259766]
[416.79895020 624.83636475]
[418.20443726 628.10809326]
[418.40261841 631.27972412]
[417.58438110 633.96478271]
[424.00415039 647.52154541]
[430.42395020 661.07830811]
[436.84375000 674.63513184]
[447.28567505 677.69824219]
[454.17449951 685.83636475]
[455.41860962 696.20471191]
[450.84677124 705.34857178]
[456.85015869 719.09478760]
[462.95816040 732.79492188]
[469.17047119 746.44799805]
[475.38278198 760.10113525]
[481.59506226 773.75421143]
[493.38000488 779.00250244]
[498.27218628 790.50524902]
[494.15011597 801.88049316]
[500.15350342 815.62670898]
[506.15686035 829.37298584]
[512.16021729 843.11920166]
[518.58001709 856.67602539]
[525.41027832 870.03070068]
[532.24047852 883.38543701]
[539.07073975 896.74011230]
[545.90093994 910.09478760]
[552.73120117 923.44952393]
[559.56140137 936.80419922]
[566.39166260 950.15887451]
[581.54107666 948.90826416]
[596.01434326 953.55499268]
[607.60443115 963.39050293]
[614.54400635 976.91497803]
[615.77471924 992.06604004]
[611.10888672 1006.53320312]
[601.25811768 1018.11035156]
[587.72454834 1025.03210449]
[572.57189941 1026.24291992]
[558.11090088 1021.55804443]
[546.54669189 1011.69207764]
[539.64276123 998.14941406]
[538.45190430 982.99517822]
[543.15576172 968.54034424]
[553.03692627 956.98913574]
[546.20672607 943.63439941]
[539.37646484 930.27972412]
[532.54626465 916.92504883]
[525.71600342 903.57031250]
[518.88580322 890.21563721]
[512.05554199 876.86096191]
[505.22534180 863.50622559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[6 173]
[7 172]
[9 169]
[10 168]
[11 167]
[12 166]
[14 165]
[15 164]
[17 160]
[18 159]
[19 158]
[20 157]
[21 152]
[22 151]
[23 150]
[24 148]
[25 147]
[26 146]
[27 145]
[28 144]
[29 143]
[30 142]
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[37 135]
[40 131]
[41 130]
[42 129]
[45 126]
[46 125]
[48 124]
[49 123]
[50 122]
[53 121]
[54 120]
[55 119]
[56 118]
[57 117]
[58 112]
[59 111]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[65 104]
[68 77]
[69 76]
[70 75]
[80 103]
[81 102]
[82 101]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[176 205]
[177 204]
[178 203]
[179 202]
[180 201]
[181 200]
[182 199]
[183 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
