%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCUCCUUGCUAUAGAAGACCUGGGACAGAGGACUGCUGUCUGCCCUCUCUGGUCACCCUGCCUAGCUAGAGGAUCUGAGACUACUCACCCCAUAACCUCAAAAACCUCUUCAUGAGGAUGGUGACCCCAGCCAUGAGGACCCUCGCCAUCCUUGCUGCCAUUCUCCUGGUGGCCCUGCAGGCCCAGGCUGAGCCACUCCAGGCAAGAGCUG\
) } def
/len { sequence length } bind def

/coor [
[82.92100525 330.02059937]
[68.39781952 324.22308350]
[61.04456329 310.42224121]
[64.33322144 295.13436890]
[76.71098328 285.57797241]
[77.14725494 270.58432007]
[77.58352661 255.59065247]
[78.01979828 240.59700012]
[75.07337952 233.82215881]
[78.57302094 225.38888550]
[79.22731018 210.40316772]
[79.88159943 195.41744995]
[80.53589630 180.43171692]
[81.19018555 165.44599915]
[74.98462677 161.23397827]
[73.89485168 176.19435120]
[60.39395142 182.73083496]
[47.98268509 174.30703735]
[49.07218552 159.34664917]
[62.57351685 152.80995178]
[56.36796188 148.59793091]
[42.68258667 154.73881531]
[28.99720764 160.87969971]
[15.31183147 167.02058411]
[5.88871908 179.72946167]
[-8.89070606 177.88072205]
[-22.57608223 184.02160645]
[-36.26145935 190.16249084]
[-49.94683456 196.30337524]
[-51.60348892 211.50872803]
[-60.58926392 223.76240540]
[-74.41016388 229.83276367]
[-89.31413269 228.18118286]
[-101.30952454 219.35076904]
[-114.99489594 225.49165344]
[-128.68028259 231.63253784]
[-142.36564636 237.77342224]
[-151.52229309 251.37812805]
[-167.86180115 249.98080444]
[-174.57548523 235.01890564]
[-164.75688171 221.88394165]
[-148.50653076 224.08805847]
[-134.82116699 217.94717407]
[-121.13578033 211.80628967]
[-107.45040894 205.66540527]
[-106.07245636 190.83412170]
[-97.39812469 178.60252380]
[-83.67534637 172.31350708]
[-68.54783630 173.74710083]
[-56.08772278 182.61799622]
[-42.40234375 176.47711182]
[-28.71696854 170.33622742]
[-15.03159142 164.19534302]
[-6.58734846 151.92570496]
[9.17094707 153.33522034]
[22.85632324 147.19433594]
[36.54169846 141.05345154]
[50.22707748 134.91256714]
[43.41387939 111.19758606]
[46.75663376 88.03973389]
[58.64359283 69.38195801]
[76.09759521 57.97869873]
[95.44637299 54.99932098]
[113.06787109 59.96134567]
[120.18688202 46.75832367]
[127.30588531 33.55530548]
[134.42489624 20.35228348]
[135.74227905 11.31724548]
[141.74465942 7.01011181]
[149.05493164 -6.08797455]
[139.47216797 -29.94700813]
[150.83921814 -52.59384537]
[144.30288696 -66.09482574]
[137.76657104 -79.59580994]
[131.23023987 -93.09678650]
[124.69392395 -106.59777069]
[108.00440979 -109.35763550]
[96.36506653 -121.40281677]
[94.22162628 -137.84742737]
[102.22254944 -152.18336487]
[95.49056244 -165.58786011]
[88.75857544 -178.99235535]
[82.02658844 -192.39683533]
[67.02471161 -190.34196472]
[52.16894531 -193.27197266]
[39.07073212 -200.86904907]
[29.15086555 -212.30911255]
[23.48537827 -226.35122681]
[22.68882179 -241.47221375]
[26.84759903 -256.03186035]
[35.51059723 -268.45083618]
[47.73812103 -277.38204956]
[62.20381546 -281.85668945]
[77.33855438 -281.38937378]
[91.50063324 -276.03079224]
[103.15386200 -266.36224365]
[111.03417206 -253.43244934]
[114.28677368 -238.64396667]
[112.55885315 -223.60092163]
[106.03783417 -209.93508911]
[95.43107605 -199.12882996]
[102.16306305 -185.72433472]
[108.89505005 -172.31985474]
[115.62703705 -158.91535950]
[128.94305420 -157.98249817]
[140.14970398 -150.53274536]
[146.26135254 -138.42240906]
[145.58662415 -124.76571655]
[138.19490051 -113.13409424]
[144.73123169 -99.63311005]
[151.26754761 -86.13212585]
[157.80387878 -72.63114929]
[164.34019470 -59.13016891]
[169.73892212 -61.06398010]
[175.62960815 -61.99129486]
[181.81889343 -61.79925156]
[188.08920288 -60.41300201]
[194.20625305 -57.80065918]
[205.55548096 -67.60857391]
[216.90469360 -77.41648865]
[228.25392151 -87.22440338]
[239.60313416 -97.03231049]
[250.95236206 -106.84022522]
[262.30157471 -116.64813995]
[273.65081787 -126.45605469]
[285.00003052 -136.26396179]
[296.34924316 -146.07188416]
[307.69845581 -155.87979126]
[318.75762939 -166.01364136]
[329.51736450 -176.46485901]
[334.02551270 -191.63020325]
[348.54592896 -194.94779968]
[359.30566406 -205.39903259]
[363.25701904 -221.31501770]
[379.08905029 -225.59040833]
[390.51513672 -213.82702637]
[385.78106689 -198.12605286]
[369.75689697 -194.63928223]
[358.99716187 -184.18806458]
[355.25863647 -169.77027893]
[339.96859741 -165.70512390]
[329.20886230 -155.25390625]
[329.03140259 -152.45986938]
[327.73861694 -149.56759644]
[325.28744507 -147.00148010]
[321.78897095 -145.19367981]
[317.50637817 -144.53057861]
[306.15716553 -134.72265625]
[294.80795288 -124.91474915]
[283.45870972 -115.10683441]
[272.10949707 -105.29891968]
[260.76028442 -95.49100494]
[249.41105652 -85.68309021]
[238.06182861 -75.87517548]
[226.71261597 -66.06726837]
[215.36338806 -56.25934982]
[204.01416016 -46.45143890]
[208.10676575 -32.02054596]
[222.91520691 -29.63094330]
[237.72363281 -27.24134064]
[252.53207397 -24.85173798]
[267.34051514 -22.46213531]
[282.14895630 -20.07253075]
[296.95739746 -17.68292809]
[309.62194824 -27.13725471]
[325.25015259 -24.78462219]
[334.57006836 -12.02080631]
[332.05233765 3.58164787]
[319.19067383 12.76608086]
[303.61572266 10.08353138]
[294.56777954 -2.87449169]
[279.75933838 -5.26409483]
[264.95089722 -7.65369797]
[250.14247131 -10.04330063]
[235.33403015 -12.43290424]
[220.52560425 -14.82250690]
[205.71716309 -17.21211052]
[197.74441528 -5.97957468]
[186.60301208 1.18351650]
[174.11260986 3.57148385]
[162.15301514 1.22230148]
[154.84274292 14.32038784]
[147.62791443 27.47128868]
[140.50891113 40.67430878]
[133.38989258 53.87733078]
[126.27089691 67.08035278]
[142.26644897 79.93560791]
[151.45393372 100.55730438]
[150.17048645 125.16224670]
[136.88410950 148.33004761]
[145.84149170 160.36189270]
[154.79887390 172.39373779]
[169.10725403 181.48805237]
[164.32929993 197.75480652]
[147.37557983 197.66667175]
[142.76701355 181.35112000]
[133.80964661 169.31927490]
[124.85226440 157.28741455]
[117.68317413 159.49064636]
[122.08960724 173.82881165]
[126.49581909 188.16706848]
[112.15750885 192.57305908]
[107.75143433 178.23524475]
[103.34499359 163.89707947]
[96.17591095 166.10029602]
[95.52161407 181.08601379]
[94.86732483 196.07173157]
[94.21303558 211.05746460]
[93.55874634 226.04318237]
[93.01345062 241.03326416]
[92.57717896 256.02691650]
[92.14090729 271.02056885]
[91.70463562 286.01422119]
[103.50580597 296.27416992]
[105.89998627 311.72738647]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 213]
[6 212]
[7 211]
[8 210]
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[21 58]
[22 57]
[23 56]
[24 55]
[26 53]
[27 52]
[28 51]
[29 50]
[34 45]
[35 44]
[36 43]
[37 42]
[64 186]
[65 185]
[66 184]
[67 183]
[69 182]
[70 181]
[72 113]
[73 112]
[74 111]
[75 110]
[76 109]
[80 104]
[81 103]
[82 102]
[83 101]
[118 157]
[119 156]
[120 155]
[121 154]
[122 153]
[123 152]
[124 151]
[125 150]
[126 149]
[127 148]
[128 147]
[129 142]
[130 141]
[132 139]
[133 138]
[158 177]
[159 176]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
[190 198]
[191 197]
[192 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
