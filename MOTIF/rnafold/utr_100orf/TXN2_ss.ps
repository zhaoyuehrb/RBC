%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAAGUGACGACAGGCGUGCCCUUGACAGGCAGGGAGGGCUAGGCUGUGCAUCCCUCCGCUCGCAUUGCAGGGAGAUGGCUCAGCGACUUCUUCUGAGGAGGUUCCUGGCCUCUGUCAUCUCCAGGAAGCCCUCUCAGGGUCAGUGGCCACCCCUCACUUCCAGAGCCCUGCAGA\
) } def
/len { sequence length } bind def

/coor [
[133.65005493 631.93835449]
[143.18098450 620.15118408]
[156.17018127 612.33728027]
[153.27629089 597.61907959]
[150.38240051 582.90087891]
[147.48851013 568.18267822]
[144.59461975 553.46447754]
[141.70072937 538.74627686]
[138.80683899 524.02807617]
[135.91294861 509.30990601]
[125.38755035 519.99713135]
[110.45167542 518.61163330]
[102.07173157 506.17068481]
[106.40054321 491.80886841]
[120.25976562 486.07110596]
[133.47329712 493.16998291]
[131.88781738 478.25399780]
[122.84860992 466.41583252]
[129.08390808 451.87515259]
[127.49842834 436.95919800]
[125.91294861 422.04321289]
[124.19590759 407.14181519]
[122.34743500 392.25613403]
[113.10070038 380.57934570]
[119.07840729 365.93087769]
[117.22993469 351.04522705]
[115.38145447 336.15954590]
[113.53298187 321.27389526]
[111.68450928 306.38821411]
[100.27555084 302.14157104]
[91.71263123 293.38714600]
[87.67189789 281.75045776]
[88.98171234 269.42935181]
[95.45366669 258.77868652]
[105.90682983 251.86051941]
[104.58484650 236.91889954]
[103.26285553 221.97726440]
[101.94087219 207.03562927]
[100.61888123 192.09399414]
[99.29689789 177.15237427]
[97.97490692 162.21073914]
[96.65291595 147.26910400]
[95.33093262 132.32746887]
[78.79048157 124.83992767]
[68.80354309 109.67712402]
[68.45596313 91.52418518]
[55.25061417 84.40950012]
[39.43164444 84.67548370]
[31.89700890 71.82719421]
[18.69166183 64.71250153]
[5.48631430 57.59781647]
[-7.71903276 50.48312378]
[-20.04134560 59.48997498]
[-35.05284500 62.24997330]
[-49.77299118 58.21511841]
[-61.27908707 48.18653107]
[-67.28658295 34.15539932]
[-66.60269928 18.90760994]
[-59.36320877 5.47062540]
[-47.00552368 -3.48763132]
[-31.98326874 -6.18849230]
[-17.27912712 -2.09569979]
[-5.81261349 7.97811937]
[0.13958560 22.03280067]
[-0.60434264 37.27777863]
[12.60100460 44.39246750]
[25.80635071 51.50715637]
[39.01169968 58.62184906]
[53.88613510 57.84697342]
[62.36530685 71.20414734]
[75.57065582 78.31884003]
[83.85646820 71.60542297]
[93.86314392 67.91877747]
[104.52398682 67.65190125]
[109.95712280 53.67045212]
[115.39026642 39.68900299]
[120.82341003 25.70755386]
[126.25655365 11.72610283]
[131.68969727 -2.25534725]
[137.12284851 -16.23679733]
[142.55598450 -30.21824837]
[147.98913574 -44.19969940]
[152.80027771 -58.40719223]
[156.98005676 -72.81307220]
[161.15983582 -87.21895599]
[165.33961487 -101.62483978]
[161.75422668 -117.03443146]
[172.73155212 -127.10158539]
[176.91133118 -141.50746155]
[181.09111023 -155.91334534]
[185.27088928 -170.31922913]
[189.45068359 -184.72511292]
[193.63046265 -199.13099670]
[197.81024170 -213.53688049]
[201.99002075 -227.94274902]
[200.59677124 -244.83935547]
[216.44735718 -250.85560608]
[226.61636353 -237.28993225]
[216.39590454 -223.76296997]
[212.21612549 -209.35708618]
[208.03634644 -194.95121765]
[203.85655212 -180.54533386]
[199.67677307 -166.13945007]
[195.49699402 -151.73356628]
[191.31721497 -137.32768250]
[187.13743591 -122.92180634]
[191.02178955 -108.54261780]
[179.74549866 -97.44505310]
[175.56571960 -83.03917694]
[171.38594055 -68.63329315]
[167.20616150 -54.22740936]
[181.46115112 -58.89593506]
[194.09748840 -50.81367874]
[195.83715820 -35.91490173]
[185.40283203 -25.13878059]
[170.45573425 -26.39749908]
[161.97058105 -38.76655579]
[156.53744507 -24.78510475]
[151.10429382 -10.80365372]
[145.67115784 3.17779636]
[140.23800659 17.15924644]
[134.80487061 31.14069748]
[129.37171936 45.12214661]
[123.93857574 59.10359573]
[118.50543213 73.08504486]
[128.27044678 83.64006042]
[132.55650330 97.36570740]
[130.53295898 111.60189056]
[122.59197998 123.58957672]
[110.27256012 131.00549316]
[111.59455109 145.94711304]
[112.91654205 160.88874817]
[114.23852539 175.83038330]
[115.56051636 190.77201843]
[116.88249969 205.71363831]
[118.20449066 220.65527344]
[119.52647400 235.59690857]
[120.84846497 250.53854370]
[136.65576172 259.36929321]
[143.95533752 275.76788330]
[140.00752258 293.11737061]
[126.57017517 304.53973389]
[128.41865540 319.42541504]
[130.26712036 334.31106567]
[132.11560059 349.19674683]
[133.96408081 364.08242798]
[143.34301758 376.82391357]
[137.23310852 390.40765381]
[139.08157349 405.29333496]
[143.25590515 413.45285034]
[140.82891846 420.45773315]
[142.41439819 435.37371826]
[143.99987793 450.28967285]
[153.15249634 463.19473267]
[146.80380249 476.66851807]
[148.38926697 491.58450317]
[150.63113403 506.41601562]
[153.52502441 521.13421631]
[156.41893005 535.85241699]
[159.31282043 550.57061768]
[162.20671082 565.28881836]
[165.10060120 580.00701904]
[167.99449158 594.72521973]
[170.88838196 609.44342041]
[185.86900330 611.75787354]
[199.15310669 619.05914307]
[209.13655090 630.46557617]
[214.61381531 644.59973145]
[214.92346191 659.75494385]
[210.02813721 674.10107422]
[200.51893616 685.90576172]
[187.54415894 693.74359131]
[172.67057800 696.66802979]
[157.69424438 694.32598877]
[144.42362976 687.00024414]
[134.46121216 675.57543945]
[129.01000977 661.43115234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 164]
[4 163]
[5 162]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[16 156]
[17 155]
[19 153]
[20 152]
[21 151]
[22 149]
[23 148]
[25 146]
[26 145]
[27 144]
[28 143]
[29 142]
[35 138]
[36 137]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[46 71]
[47 70]
[49 68]
[50 67]
[51 66]
[52 65]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 111]
[84 110]
[85 109]
[86 108]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
[95 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
