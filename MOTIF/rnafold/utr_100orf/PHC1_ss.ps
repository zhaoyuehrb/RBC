%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCGCGGAGGCCGAGCGAGCCCCCAGCCCAGCCUGGCGACUGGGGACCCCGGCACAUGAGGUGGACGCCCCCGGGGAAGACUUGGGUGCACAGCCAGGCGAGAAGGUCUUGAGUCAGACAGAGCACCAGCCUUGGGGACCCUGGACCACUAUCAUGGAGACUGAGAGCGAGCAGAACUCCAAUUCCACCAAUGGGAGUUCUAGCUCAGGGGGCAGCUCUCGGCCCCAGAUAGCUCAAAUGUCACUUUAUGAA\
C\
) } def
/len { sequence length } bind def

/coor [
[63.15908813 400.79916382]
[70.20785522 387.55853271]
[80.63239288 376.77291870]
[93.62547302 369.27758789]
[108.18094635 365.65295410]
[123.17169952 366.17962646]
[137.43688965 370.81689453]
[149.87188721 379.20562744]
[159.51118469 390.69210815]
[156.05854797 376.09487915]
[151.47401428 370.32595825]
[152.65409851 361.29809570]
[149.38015747 346.65975952]
[146.10621643 332.02139282]
[142.83227539 317.38305664]
[139.55833435 302.74468994]
[136.28440857 288.10635376]
[133.01046753 273.46798706]
[117.73293304 267.42553711]
[108.98878479 253.32061768]
[110.39950562 236.61825562]
[121.60583496 223.93032837]
[118.15320587 209.33309937]
[114.70057678 194.73585510]
[111.24794769 180.13861084]
[107.79531860 165.54138184]
[104.34268951 150.94413757]
[92.68434906 150.60282898]
[81.40670013 147.62828064]
[71.09658813 142.17530823]
[62.29051971 134.52766418]
[55.44674301 125.08329773]
[50.92138672 114.33367157]
[48.94993210 102.83816528]
[34.01292801 101.46488190]
[19.07592583 100.09159851]
[4.13892078 98.71830750]
[-10.79808331 97.34502411]
[-25.73508644 95.97174072]
[-40.67209244 94.59845734]
[-46.46850204 114.10409546]
[-66.47161102 128.39955139]
[-95.36296082 127.77635956]
[-109.33243561 133.24021912]
[-123.30191803 138.70407104]
[-137.27139282 144.16792297]
[-151.24087524 149.63179016]
[-163.78941345 161.03224182]
[-178.21810913 152.13008118]
[-173.65811157 135.80087280]
[-156.70472717 135.66230774]
[-142.73524475 130.19845581]
[-128.76577759 124.73459625]
[-114.79629517 119.27074432]
[-100.82682037 113.80688477]
[-104.19016266 99.18881989]
[-119.14283752 100.37941742]
[-134.09552002 101.57000732]
[-145.55578613 112.79683685]
[-161.46038818 110.69371796]
[-169.60867310 96.87398529]
[-163.74996948 81.93894958]
[-148.37857056 77.34550476]
[-135.28611755 86.61733246]
[-120.33343506 85.42674255]
[-105.38076019 84.23614502]
[-104.14868164 76.83803558]
[-115.73069763 67.30614471]
[-101.68452454 62.04182434]
[-100.45243835 54.64371872]
[-114.21219635 48.67135620]
[-129.95199585 50.27427673]
[-138.54627991 38.10926056]
[-152.30603027 32.13690186]
[-166.06579590 26.16454124]
[-179.82554626 20.19218063]
[-193.58531189 14.21982098]
[-207.34506226 8.24746132]
[-222.73579407 12.77570724]
[-235.78883362 3.44845581]
[-236.49101257 -12.57922363]
[-224.30368042 -23.01226616]
[-208.57591248 -19.84733582]
[-201.37271118 -5.51229572]
[-187.61294556 0.46006411]
[-173.85319519 6.43242407]
[-160.09342957 12.40478420]
[-146.33367920 18.37714386]
[-132.57391357 24.34950447]
[-117.81831360 22.31940269]
[-108.23983765 34.91160202]
[-94.48007965 40.88396072]
[-70.44755554 39.00362396]
[-51.05842209 48.11819839]
[-40.37820816 63.55051804]
[-39.29880524 79.66145325]
[-24.36180115 81.03473663]
[-9.42479801 82.40802002]
[5.51220608 83.78131104]
[20.44920921 85.15459442]
[35.38621521 86.52787781]
[50.32321930 87.90116119]
[53.70589828 78.29698944]
[58.92469025 69.55359650]
[65.77260590 62.01776505]
[73.97805023 55.98838043]
[83.21556854 51.70458221]
[93.11878967 49.33626938]
[93.30214691 34.33739090]
[93.48550415 19.33851242]
[93.66886139 4.33963299]
[93.85221863 -10.65924644]
[81.58014679 -19.97065926]
[77.19530487 -34.55237961]
[82.17856598 -48.75206757]
[94.42108154 -57.19355774]
[94.60443878 -72.19243622]
[94.78779602 -87.19131470]
[84.34518433 -95.67051697]
[80.73638153 -108.42703247]
[85.06076050 -120.75322723]
[95.53203583 -128.23295593]
[95.89871979 -143.22848511]
[96.26540375 -158.22399902]
[88.86777496 -172.20918274]
[96.91388702 -184.74351501]
[97.28057861 -199.73902893]
[88.95983887 -213.87046814]
[97.27202606 -228.00692749]
[113.66627502 -227.60603333]
[121.27758026 -213.08020020]
[112.27609253 -199.37234497]
[111.90940857 -184.37683105]
[119.33326721 -171.46421814]
[111.26092529 -157.85731506]
[110.89423370 -142.86178589]
[110.52754974 -127.86627960]
[122.63846588 -116.17846680]
[122.53279114 -99.00970459]
[109.78667450 -87.00795746]
[109.60331726 -72.00907898]
[109.41996002 -57.01020050]
[121.45246887 -48.27195740]
[126.08711243 -33.95469284]
[121.34712219 -19.48451996]
[108.85109711 -10.47588921]
[108.66773987 4.52298975]
[108.48438263 19.52186966]
[108.30102539 34.52074814]
[108.11766815 49.51962662]
[120.07030487 52.97503281]
[130.83442688 59.21516037]
[141.53781128 48.70624542]
[145.96435547 33.51689529]
[160.46673584 30.12126923]
[171.17013550 19.61235237]
[181.87351990 9.10343838]
[180.47320557 -6.47132015]
[189.45411682 -19.27276993]
[204.57575989 -23.25646019]
[218.69816589 -16.54141045]
[225.15315247 -2.29826522]
[220.89286804 12.74779892]
[207.92890930 21.49249077]
[192.38244629 19.80683517]
[181.67904663 30.31575012]
[170.97564697 40.82466507]
[167.31468201 55.26234436]
[152.04673767 59.40964127]
[141.34333801 69.91855621]
[146.77612305 79.35636902]
[150.08697510 89.73065186]
[165.06428528 88.90593719]
[180.04159546 88.08123016]
[195.01890564 87.25651550]
[209.99090576 86.34028625]
[224.95701599 85.33255768]
[239.92312622 84.32482910]
[254.88923645 83.31710052]
[269.85534668 82.30937195]
[284.82144165 81.30164337]
[299.78756714 80.29391479]
[314.75366211 79.28618622]
[328.00286865 70.63924408]
[341.22119141 77.50402069]
[356.18728638 76.49629211]
[371.15341187 75.48856354]
[382.75006104 64.40266418]
[398.62777710 66.70004272]
[406.60650635 80.61834717]
[400.56567383 95.48064423]
[385.13928223 99.88585663]
[372.16113281 90.45467377]
[357.19503784 91.46240234]
[342.22891235 92.47013092]
[330.05020142 101.04499054]
[315.76141357 94.25229645]
[300.79528809 95.26002502]
[285.82919312 96.26775360]
[270.86306763 97.27548218]
[255.89695740 98.28321075]
[240.93084717 99.29093933]
[225.96473694 100.29866791]
[210.99862671 101.30639648]
[204.55496216 104.88095093]
[195.84361267 102.23383331]
[180.86630249 103.05854034]
[165.88899231 103.88324738]
[150.91168213 104.70796204]
[140.95631409 130.60627747]
[118.93992615 147.49151611]
[122.39255524 162.08874512]
[125.84518433 176.68598938]
[129.29782104 191.28321838]
[132.75044250 205.88046265]
[136.20307922 220.47770691]
[149.26545715 224.82637024]
[158.40644836 234.97589111]
[161.32272339 248.20930481]
[157.35841370 261.05426025]
[147.64881897 270.19406128]
[150.92276001 284.83242798]
[154.19668579 299.47076416]
[157.47062683 314.10913086]
[160.74456787 328.74746704]
[164.01850891 343.38583374]
[167.29244995 358.02416992]
[170.65579224 372.64224243]
[174.10841370 387.23947144]
[181.45787048 395.40777588]
[180.60285950 405.12057495]
[187.32270813 418.53115845]
[194.04255676 431.94171143]
[200.76239014 445.35229492]
[216.01606750 448.79608154]
[225.44622803 461.27029419]
[224.60028076 476.88497925]
[213.87762451 488.26736450]
[198.34117126 490.04302979]
[185.32678223 481.37359619]
[180.97943115 466.35244751]
[187.35182190 452.07214355]
[180.63197327 438.66156006]
[173.91212463 425.25097656]
[167.19227600 411.84042358]
[167.17045593 426.84039307]
[163.01599121 441.25360107]
[155.05056763 453.96389771]
[143.89100647 463.98709106]
[130.40145874 470.54699707]
[115.62651825 473.13562012]
[100.71028900 471.55252075]
[86.80783844 465.92031860]
[74.99571991 456.67510986]
[66.18862152 444.53283691]
[61.06852722 430.43371582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 229]
[10 228]
[12 227]
[13 226]
[14 225]
[15 224]
[16 223]
[17 222]
[18 221]
[22 216]
[23 215]
[24 214]
[25 213]
[26 212]
[27 211]
[34 102]
[35 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[56 66]
[57 65]
[58 64]
[70 92]
[71 91]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[116 142]
[117 141]
[118 140]
[122 137]
[123 136]
[124 135]
[126 133]
[127 132]
[152 170]
[153 169]
[155 167]
[156 166]
[157 165]
[172 209]
[173 208]
[174 207]
[175 206]
[176 204]
[177 203]
[178 202]
[179 201]
[180 200]
[181 199]
[182 198]
[183 197]
[185 195]
[186 194]
[187 193]
[231 245]
[232 244]
[233 243]
[234 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
