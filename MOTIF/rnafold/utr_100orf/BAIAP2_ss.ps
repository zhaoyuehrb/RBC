%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGUGGUUCGGGUCCGCUUUCGUCUCCGUCCUGCUGCCGUUACCGCCGCUGCUGCCGCCGCUUGCGUCCCCCGCUCCGGUCUGUGGUGCAGCCGGGACCCAGGACCAUGUCUCUGUCUCGCUCAGAGGAGAUGCACCGGCUCACGGAAAAUGUCUAUAAGACCAUCAUGGAGCAGUUCAACCCUAGCCUCCGGAACUUCAUCGCCA\
) } def
/len { sequence length } bind def

/coor [
[100.29741669 330.55435181]
[113.21073151 322.53469849]
[110.74181366 307.73928833]
[108.27289581 292.94387817]
[105.80397797 278.14846802]
[93.93383026 265.22393799]
[100.53170013 248.03314209]
[97.84066772 233.27650452]
[95.14963531 218.51986694]
[92.45861053 203.76322937]
[82.56354523 192.63052368]
[87.69953156 177.66616821]
[85.00850677 162.90953064]
[82.31747437 148.15289307]
[79.62644196 133.39625549]
[77.25055695 109.36636353]
[90.20947266 97.58456421]
[79.64279938 86.93817902]
[66.21427917 90.05102539]
[53.10530090 86.15266418]
[43.70982361 76.36398315]
[40.40507126 63.31615067]
[43.95065689 50.44393539]
[33.54520798 39.63992691]
[23.13975906 28.83591652]
[12.73431015 18.03190613]
[2.32886100 7.22789669]
[-8.07658863 -3.57611322]
[-18.48203659 -14.38012314]
[-51.47341156 -27.04128265]
[-64.71880341 -34.08114243]
[-77.96418762 -41.12100601]
[-91.20957947 -48.16086578]
[-104.45497131 -55.20072937]
[-117.70035553 -62.24058914]
[-125.09508514 -58.35979843]
[-133.32794189 -57.72552109]
[-141.05206299 -60.36708450]
[-147.03308105 -65.78392029]
[-150.34643555 -73.03852844]
[-150.51979065 -80.91812134]
[-163.31822205 -88.74117279]
[-176.11665344 -96.56423187]
[-185.07238770 -98.37024689]
[-189.04740906 -104.60228729]
[-201.72680664 -112.61682892]
[-214.40620422 -120.63137054]
[-220.98854065 -121.27761841]
[-225.56805420 -124.64618683]
[-227.34120178 -129.08222961]
[-239.77397156 -137.47427368]
[-252.20672607 -145.86631775]
[-264.63949585 -154.25837708]
[-277.07223511 -162.65042114]
[-285.93746948 -164.85832214]
[-289.62750244 -171.26321411]
[-301.93273926 -179.84118652]
[-314.23794556 -188.41915894]
[-326.54315186 -196.99714661]
[-338.84838867 -205.57511902]
[-357.22653198 -206.71479797]
[-364.05203247 -222.88130188]
[-376.48480225 -231.27334595]
[-388.91757202 -239.66540527]
[-409.06872559 -240.16767883]
[-416.77975464 -257.89880371]
[-429.45913696 -265.91333008]
[-442.13854980 -273.92788696]
[-458.04208374 -271.81683350]
[-469.50796509 -283.03796387]
[-467.74050903 -298.98333740]
[-454.09558105 -307.42108154]
[-439.04040527 -301.87844849]
[-434.12399292 -286.60726929]
[-421.44461060 -278.59274292]
[-408.76519775 -270.57818604]
[-399.03768921 -273.71307373]
[-388.97946167 -270.91662598]
[-381.97720337 -262.87982178]
[-380.52551270 -252.09815979]
[-368.09277344 -243.70611572]
[-355.66000366 -235.31407166]
[-343.72817993 -237.30952454]
[-333.30123901 -230.41839600]
[-330.27041626 -217.88032532]
[-317.96517944 -209.30235291]
[-305.65997314 -200.72438049]
[-293.35476685 -192.14640808]
[-281.04953003 -183.56843567]
[-268.68020630 -175.08317566]
[-256.24743652 -166.69113159]
[-243.81468201 -158.29908752]
[-231.38191223 -149.90704346]
[-218.94915771 -141.51499939]
[-206.39166260 -133.31077576]
[-193.71226501 -125.29622650]
[-181.03286743 -117.28168488]
[-168.29359436 -109.36265564]
[-155.49516296 -101.53960419]
[-142.69673157 -93.71654510]
[-121.11237335 -95.30677032]
[-110.66049957 -75.48597717]
[-97.41510773 -68.44612122]
[-84.16971588 -61.40625763]
[-70.92433167 -54.36639404]
[-57.67893982 -47.32653427]
[-44.43354797 -40.28667068]
[-56.43347168 -49.28677368]
[-59.30043030 -64.01024628]
[-51.55420685 -76.85532379]
[-37.19419098 -81.19006348]
[-23.63449669 -74.77643585]
[-17.87601852 -60.92580795]
[-22.89320755 -46.78773117]
[-15.75399685 -59.97983551]
[-8.61478615 -73.17194366]
[-1.47557545 -86.36405182]
[-7.39467621 -100.83810425]
[-2.57602096 -115.71474457]
[10.70516872 -123.96968842]
[26.17792130 -121.70519257]
[36.53647614 -109.99048615]
[36.88983917 -94.35689545]
[27.07116508 -82.18611908]
[11.71653080 -79.22483826]
[4.57732010 -66.03273010]
[-2.56189108 -52.84062576]
[-9.70110226 -39.64851761]
[-7.67802763 -24.78557205]
[2.72742152 -13.98156261]
[13.13287067 -3.17755270]
[23.53832054 7.62645721]
[33.94376755 18.43046761]
[44.34922028 29.23447609]
[54.75466919 40.03848648]
[70.93213654 37.25574875]
[85.72901154 44.73842239]
[93.22502136 59.71462631]
[90.28918457 76.37151337]
[100.85585785 87.01789856]
[114.59245300 93.04332733]
[129.58186340 93.60688019]
[144.57127380 94.17042542]
[159.56068420 94.73397827]
[169.18022156 82.70191193]
[183.86842346 78.68816376]
[197.93721008 84.02980804]
[206.06561279 96.48240662]
[221.05502319 97.04595184]
[228.03227234 87.41793060]
[238.68209839 82.40541840]
[250.30894470 83.14926910]
[260.03103638 89.34918976]
[265.49468994 99.36698151]
[280.46035767 100.38083649]
[295.42605591 101.39469147]
[310.39175415 102.40854645]
[326.60336304 97.44660950]
[335.85919189 111.65103912]
[324.77215576 124.47733307]
[309.37789917 117.37424469]
[294.41220093 116.36038971]
[279.44650269 115.34653473]
[264.48080444 114.33267975]
[251.44233704 127.18073273]
[232.83399963 126.40653229]
[220.49147034 112.03536224]
[205.50205994 111.47181702]
[196.46157837 123.27891541]
[182.03141785 127.54910278]
[167.68606567 122.44378662]
[158.99713135 109.72338867]
[144.00772095 109.15983582]
[129.01831055 108.59629059]
[114.02890778 108.03273773]
[109.11744690 113.70085907]
[123.84635925 116.53973389]
[128.75216675 130.71481323]
[118.92901611 142.05084229]
[104.20016479 139.21165466]
[99.29454041 125.03710175]
[94.38307953 130.70523071]
[97.07411194 145.46186829]
[99.76514435 160.21850586]
[102.45616913 174.97514343]
[112.54371643 187.16333008]
[107.21524811 201.07220459]
[109.90627289 215.82884216]
[112.59730530 230.58547974]
[115.28833771 245.34211731]
[125.43430328 253.30755615]
[127.37118530 265.65490723]
[120.59939575 275.67953491]
[123.06831360 290.47494507]
[125.53723907 305.27038574]
[128.00614929 320.06579590]
[142.82376099 323.45794678]
[155.21243286 332.26644897]
[163.28297424 345.14801025]
[165.80468750 360.13833618]
[162.39303589 374.95144653]
[153.56825256 387.32852173]
[140.67608643 395.38211060]
[125.68247223 397.88409424]
[110.87383270 394.45297241]
[98.50838470 385.61190796]
[90.47176361 372.70916748]
[87.98949432 357.71228027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[4 194]
[5 193]
[7 190]
[8 189]
[9 188]
[10 187]
[12 185]
[13 184]
[14 183]
[15 182]
[17 140]
[18 139]
[23 135]
[24 134]
[25 133]
[26 132]
[27 131]
[28 130]
[29 129]
[30 107]
[31 106]
[32 105]
[33 104]
[34 103]
[35 102]
[41 100]
[42 99]
[43 98]
[45 97]
[46 96]
[47 95]
[50 94]
[51 93]
[52 92]
[53 91]
[54 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[62 82]
[63 81]
[64 80]
[66 76]
[67 75]
[68 74]
[114 128]
[115 127]
[116 126]
[117 125]
[141 175]
[142 174]
[143 173]
[144 172]
[148 168]
[149 167]
[154 164]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
