%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACAGAAGACUACUUGGGUUCAUGGUCUCUAAUAUUUCAAACAGGAGCUCCCUUUAGCGAGUCCUUCUUUUCCUGACUGCAGCUCUUUUCAUUUUGCCAUCCUUUUCCAGCUCCAUGAUGGUUCUGCAGGUUUCUGCGGCCCCCCGGACAGUGGCUCUGACGGCGUUACUGAUGGUGCUGCUCACAUCUGUGGUCCAGGGCAGGGCCACUCCAG\
) } def
/len { sequence length } bind def

/coor [
[99.75572968 210.02789307]
[101.96326447 195.19122314]
[110.19085693 182.64901733]
[122.92076874 174.71495056]
[137.80166626 172.85234070]
[124.63411713 165.66793823]
[111.46656799 158.48353577]
[98.29901886 151.29913330]
[83.77786255 155.05891418]
[75.75146484 167.73081970]
[67.72506714 180.40270996]
[59.69866943 193.07461548]
[51.67227173 205.74650574]
[43.64587402 218.41839600]
[42.99441147 224.99040222]
[39.62926102 229.56298828]
[35.19918823 231.33627319]
[26.80929184 243.77047729]
[26.20310020 260.15841675]
[11.58306885 267.58718872]
[-2.01096511 258.41473389]
[-0.59462583 242.07685852]
[14.37507820 235.38058472]
[22.76497269 222.94638062]
[30.97397804 210.39199829]
[39.00037766 197.72010803]
[47.02677155 185.04821777]
[55.05316925 172.37631226]
[63.07956696 159.70442200]
[71.10596466 147.03251648]
[68.09848785 140.16192627]
[54.97942734 147.43450928]
[41.86037064 154.70707703]
[28.74131393 161.97966003]
[19.39744949 173.71388245]
[4.44042301 174.84851074]
[-6.56661892 164.65806580]
[-6.58605099 149.65808105]
[4.39455175 139.43916321]
[19.35425568 140.53491211]
[33.59734344 135.83018494]
[47.84043503 131.12547302]
[62.08352280 126.42074585]
[59.07604218 119.55014801]
[44.32099152 116.85043335]
[29.56593895 114.15071106]
[14.81088829 111.45099640]
[0.05583745 108.75128174]
[-14.83073139 106.91006470]
[-29.79891014 105.93353271]
[-44.76708984 104.95700073]
[-59.73526764 103.98046875]
[-69.54995728 115.99926758]
[-84.56322479 119.92118835]
[-99.00215912 114.23816681]
[-107.31470490 101.13545227]
[-106.30451202 85.65129089]
[-96.36001587 73.73966980]
[-81.30509186 69.98085022]
[-66.92864990 75.82016754]
[-58.75873566 89.01229095]
[-43.79055786 89.98882294]
[-28.82237816 90.96535492]
[-13.85419941 91.94188690]
[-24.50453377 81.37920380]
[-27.02285385 66.59210968]
[-20.46926308 53.09950256]
[-7.28971529 45.93713379]
[7.59687614 47.77816772]
[18.63448906 57.93548584]
[21.70362854 72.61814117]
[15.65882015 86.34622192]
[2.75555515 93.99623108]
[17.51060677 96.69594574]
[32.26565552 99.39566040]
[47.02070618 102.09538269]
[61.77575684 104.79509735]
[71.76127625 83.39534760]
[89.91508484 74.96083069]
[88.39756012 60.03779221]
[86.88003540 45.11475372]
[85.36251068 30.19171333]
[83.84498596 15.26867390]
[82.32746124 0.34563363]
[70.36248779 -9.62818718]
[69.03608704 -24.78388977]
[78.61833191 -36.12919998]
[77.10080719 -51.05223846]
[67.61778259 -59.79061127]
[66.65882874 -72.24822998]
[74.19419098 -81.70743561]
[72.89286041 -96.65088654]
[71.59153748 -111.59432983]
[70.29020691 -126.53777313]
[57.15718842 -134.58947754]
[51.35134888 -148.66589355]
[54.90543747 -163.28890991]
[66.25281525 -172.90010071]
[64.95149231 -187.84353638]
[50.65905762 -193.19975281]
[40.11219788 -204.23272705]
[35.40500259 -218.75186157]
[37.47208786 -233.87435913]
[45.90303040 -246.59764099]
[59.02386093 -254.39549255]
[74.22943115 -255.71965027]
[88.50066376 -250.30718994]
[99.00399017 -239.23277283]
[103.65397644 -224.69522095]
[101.52735901 -209.58097839]
[93.04637146 -196.89099121]
[79.89493561 -189.14486694]
[81.19626617 -174.20143127]
[94.03418732 -166.69638062]
[100.06245422 -152.90783691]
[96.77719879 -138.03973389]
[85.23365784 -127.83909607]
[86.53498077 -112.89565277]
[87.83631134 -97.95220947]
[89.13763428 -83.00876617]
[99.95726776 -69.18959808]
[92.02384949 -52.56976318]
[93.54137421 -37.64672470]
[105.21127319 -28.46254539]
[106.96283722 -13.35007954]
[97.25050354 -1.17189121]
[98.76802826 13.75114822]
[100.28555298 28.67418861]
[101.80307770 43.59722900]
[103.32060242 58.52026749]
[104.83812714 73.44330597]
[123.11880493 81.07608032]
[132.75309753 100.61225128]
[126.71690369 123.59048462]
[105.48342133 138.13159180]
[118.65097046 145.31599426]
[131.81852722 152.50039673]
[144.98606873 159.68479919]
[156.72972107 159.81344604]
[163.35299683 167.88352966]
[177.49322510 172.88891602]
[191.63345337 177.89431763]
[205.77366638 182.89971924]
[219.91389465 187.90510559]
[234.12510681 192.70527649]
[248.40431213 197.29920959]
[262.68353271 201.89314270]
[276.99560547 206.38359070]
[291.33984375 210.77030945]
[305.68405151 215.15704346]
[320.02825928 219.54377747]
[348.00595093 202.57710266]
[362.83297729 204.84851074]
[377.66000366 207.11993408]
[392.48703003 209.39134216]
[407.31405640 211.66276550]
[422.14108276 213.93418884]
[436.95373535 208.37583923]
[448.36260986 217.95117188]
[463.18963623 220.22259521]
[475.84411621 211.13954163]
[490.84848022 213.65429688]
[499.42977905 225.77438354]
[514.25683594 228.04579163]
[529.08386230 230.31721497]
[542.81396484 222.01887512]
[557.81195068 227.71455383]
[562.57257080 243.03498840]
[553.44390869 256.22769165]
[537.42871094 257.17230225]
[526.81243896 245.14424133]
[511.98538208 242.87281799]
[497.15835571 240.60140991]
[485.34228516 249.59672546]
[470.27322388 247.50439453]
[460.91821289 235.04962158]
[446.09118652 232.77819824]
[432.33905029 238.49900818]
[419.86965942 228.76119995]
[405.04263306 226.48979187]
[390.21560669 224.21836853]
[375.38858032 221.94696045]
[360.56155396 219.67553711]
[345.73452759 217.40412903]
[339.03131104 230.82302856]
[349.75244141 241.31382751]
[360.47360229 251.80464172]
[376.48480225 255.35046387]
[381.16094971 271.06878662]
[369.69158936 282.78994751]
[353.87542725 278.45623779]
[349.98278809 262.52578735]
[339.26162720 252.03497314]
[328.54049683 241.54415894]
[315.64154053 233.88798523]
[301.29733276 229.50126648]
[286.95309448 225.11453247]
[272.60888672 220.72779846]
[265.29653931 221.77716064]
[258.08959961 216.17234802]
[243.81039429 211.57841492]
[229.53117371 206.98448181]
[224.95214844 208.32708740]
[219.48103333 206.81057739]
[214.90850830 202.04533386]
[200.76828003 197.03994751]
[186.62805176 192.03454590]
[172.48782349 187.02914429]
[158.34759521 182.02375793]
[166.89805603 194.34809875]
[169.49006653 209.12245178]
[165.64547729 223.62138367]
[156.07348633 235.17028809]
[142.53984070 241.63871765]
[127.54110718 241.83346558]
[113.84409332 235.71859741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 138]
[6 137]
[7 136]
[8 135]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[17 24]
[18 23]
[44 77]
[45 76]
[46 75]
[47 74]
[48 73]
[49 64]
[50 63]
[51 62]
[52 61]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[87 123]
[88 122]
[91 120]
[92 119]
[93 118]
[94 117]
[98 113]
[99 112]
[140 209]
[141 208]
[142 207]
[143 206]
[144 205]
[145 202]
[146 201]
[147 200]
[148 198]
[149 197]
[150 196]
[151 195]
[152 184]
[153 183]
[154 182]
[155 181]
[156 180]
[157 179]
[159 177]
[160 176]
[163 173]
[164 172]
[165 171]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
