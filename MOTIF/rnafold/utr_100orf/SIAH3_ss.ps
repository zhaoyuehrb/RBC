%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:16:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCUGCGCUCCUUCCAGGGCCCAAGGACUCACAGCUUCCUCCGCUGCCUUCCCGGACCAACAACCCCCCAAAAGUUGUGAUGCUUUUCUUUACCCAGUGCUUUGGGGCUGUAUUAGAUCUCAUUCAUCUCCGGUUUCAGCACUACAAGGCUAAACGGGUUUUCUCCGCUGCCGGGCAAC\
) } def
/len { sequence length } bind def

/coor [
[-125.63231659 370.09191895]
[-142.28846741 365.81323242]
[-152.38269043 376.90853882]
[-162.47692871 388.00387573]
[-172.57116699 399.09921265]
[-182.66540527 410.19454956]
[-192.75964355 421.28988647]
[-202.85386658 432.38522339]
[-199.19499207 448.88693237]
[-206.01670837 464.17004395]
[-220.45446777 472.30209351]
[-236.73071289 470.25582886]
[-246.63299561 481.52279663]
[-256.53527832 492.78976440]
[-266.43756104 504.05676270]
[-276.33984375 515.32373047]
[-271.99874878 530.12774658]
[-276.37234497 544.92218018]
[-288.06503296 554.98620605]
[-303.34573364 557.10839844]
[-317.33843994 550.61157227]
[-325.57809448 537.56890869]
[-325.43545532 522.14221191]
[-316.95608521 509.25408936]
[-302.84567261 503.01708984]
[-287.60681152 505.42144775]
[-277.70452881 494.15447998]
[-267.80224609 482.88748169]
[-257.89996338 471.62051392]
[-247.99769592 460.35354614]
[-252.12765503 447.64318848]
[-249.40988159 434.44735718]
[-240.45060730 424.24057007]
[-227.51367188 419.76425171]
[-213.94920349 422.29098511]
[-203.85496521 411.19564819]
[-193.76074219 400.10031128]
[-183.66650391 389.00497437]
[-173.57226562 377.90963745]
[-163.47802734 366.81430054]
[-153.38378906 355.71899414]
[-158.50682068 344.14062500]
[-158.86302185 331.43771362]
[-154.36387634 319.50292969]
[-145.64692688 310.12786865]
[-133.98564148 304.73419189]
[-121.10350037 304.15817261]
[-108.91927338 308.52099609]
[-98.45011139 297.77871704]
[-87.98094940 287.03643799]
[-77.51177979 276.29415894]
[-67.04261780 265.55187988]
[-70.84323120 248.32588196]
[-63.49512863 232.11642456]
[-47.75974655 223.47065735]
[-29.82672882 226.00407410]
[-19.73249245 214.90873718]
[-9.63825703 203.81340027]
[0.45597795 192.71807861]
[-3.74824309 181.29971313]
[-2.68273759 169.10614014]
[3.51087809 158.46508789]
[13.70618057 151.43417358]
[25.99634933 149.40316772]
[38.05068588 152.81961060]
[48.51984787 142.07733154]
[58.98900986 131.33503723]
[69.45817566 120.59275818]
[79.92733765 109.85047913]
[77.80355072 102.69470978]
[78.15341949 95.23863983]
[80.93793488 88.31318665]
[85.84680176 82.69015503]
[80.79724121 68.56563568]
[75.74768066 54.44112396]
[70.69812012 40.31660843]
[65.64856720 26.19209099]
[60.59900284 12.06757450]
[46.20848465 5.53392935]
[40.73112869 -9.29085159]
[47.41655731 -23.61148834]
[62.29841614 -28.93180084]
[76.54756927 -22.09534264]
[81.71024323 -7.15806293]
[74.72351837 7.01801538]
[79.77307892 21.14253044]
[84.82263947 35.26704788]
[89.87220001 49.39156342]
[94.92176056 63.51607895]
[99.97131348 77.64059448]
[108.60089111 79.36099243]
[115.89839172 84.27788544]
[129.48393250 77.91916656]
[143.06945801 71.56044769]
[156.65499878 65.20173645]
[165.87388611 52.34395218]
[180.68095398 53.95637131]
[194.26649475 47.59765244]
[207.62574768 40.77632904]
[220.74295044 33.50043106]
[233.86016846 26.22453117]
[246.97738647 18.94863510]
[260.09460449 11.67273617]
[273.21182251 4.39683867]
[276.95956421 -1.09856355]
[282.14602661 -3.49746561]
[286.90655518 -2.89484572]
[300.26580811 -9.71617222]
[313.62506104 -16.53750038]
[326.98431396 -23.35882759]
[340.34356689 -30.18015289]
[353.70278931 -37.00148010]
[367.06204224 -43.82280731]
[366.78897095 -59.04406738]
[373.12585449 -72.81833649]
[384.76724243 -82.43595886]
[399.36996460 -86.03063202]
[414.02484131 -82.94136810]
[425.83624268 -73.83332825]
[439.19549561 -80.65465546]
[443.82733154 -95.76496887]
[457.82614136 -103.10046387]
[472.88662720 -98.30912781]
[480.07369995 -84.23356628]
[475.12341309 -69.22456360]
[460.97265625 -62.18669891]
[446.01681519 -67.29541016]
[432.65756226 -60.47408295]
[433.10916138 -45.56564331]
[427.01797485 -31.88328743]
[415.54324341 -22.16262054]
[400.92626953 -18.37255287]
[386.05282593 -21.31666756]
[373.88339233 -30.46356010]
[360.52413940 -23.64223289]
[347.16488647 -16.82090569]
[333.80563354 -9.99957943]
[320.44638062 -3.17825198]
[307.08712769 3.64307499]
[293.72790527 10.46440220]
[280.48770142 17.51405334]
[267.37048340 24.78995132]
[254.25328064 32.06584930]
[241.13606262 39.34174728]
[228.01885986 46.61764526]
[214.90164185 53.89354324]
[214.00680542 56.57505417]
[211.98257446 59.05890274]
[208.90058899 60.90816879]
[204.99092102 61.72060776]
[200.62521362 61.18318939]
[187.03967285 67.54190063]
[178.79251099 79.94487000]
[163.01370239 78.78726959]
[149.42817688 85.14598846]
[135.84263611 91.50469971]
[122.25711060 97.86341858]
[112.95552063 118.22356415]
[90.66961670 120.31964111]
[80.20045471 131.06192017]
[69.73129272 141.80419922]
[59.26213074 152.54649353]
[48.79296875 163.28877258]
[52.39867783 181.03730774]
[44.71340179 197.26345825]
[28.97444534 205.57165527]
[11.55131054 202.81231689]
[1.45707548 213.90763855]
[-8.63716030 225.00297546]
[-18.73139572 236.09831238]
[-14.59727001 247.92573547]
[-15.88660049 260.31567383]
[-22.29260445 270.91479492]
[-32.54253769 277.73620605]
[-44.65012360 279.53201294]
[-56.30033875 276.02102661]
[-66.76950073 286.76330566]
[-77.23866272 297.50561523]
[-87.70782471 308.24789429]
[-98.17698669 318.99017334]
[-93.01293182 335.76580811]
[-97.02128601 352.76315308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[4 39]
[5 38]
[6 37]
[7 36]
[8 35]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[48 180]
[49 179]
[50 178]
[51 177]
[52 176]
[56 170]
[57 169]
[58 168]
[59 167]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[92 157]
[93 156]
[94 155]
[95 154]
[97 152]
[98 151]
[99 146]
[100 145]
[101 144]
[102 143]
[103 142]
[104 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 136]
[112 135]
[113 134]
[119 128]
[120 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
