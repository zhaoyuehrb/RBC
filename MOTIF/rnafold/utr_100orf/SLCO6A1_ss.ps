%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGCCUCCUGCCCUAGGAGAAACGUUCGCUCUGGAGGCUUGGGCGGCAAGAGCCCCUUGUGGCCACCGAGUCCUCCGACGCCCUCGCCAGGCUGGCCUUUGGGUUGGCCCAGGCAGGACGGGCAGCCGAGAGCACUCGGGCCGCGUCGCCAGGAGCCGCCCAGGGUGAGCCAUGUUCGUAGGCGUCGCCCGGCACUCUGGGAGCCAGGAUGAAGUCUCAAGGGGAGUAGAGCCGCUGGAGGCCGCGCGGGCCCA\
GCCUGCUAAGGACAGGA\
) } def
/len { sequence length } bind def

/coor [
[64.38941193 853.30352783]
[55.71936417 866.31750488]
[40.69802856 870.66418457]
[26.41802406 864.29113770]
[19.62193298 850.20758057]
[23.51865959 835.06329346]
[36.26828766 826.00891113]
[37.30315781 811.04467773]
[38.33802414 796.08044434]
[39.37289047 781.11614990]
[40.40775681 766.15191650]
[41.35650635 751.18194580]
[42.21910477 736.20678711]
[35.22651291 723.05560303]
[43.74460983 709.72320557]
[44.60720825 694.74804688]
[45.46980667 679.77288818]
[38.47721100 666.62170410]
[46.99530792 653.28930664]
[47.85790634 638.31414795]
[34.12768936 629.76190186]
[26.54973984 615.36444092]
[27.28141975 599.01684570]
[36.21738052 585.19604492]
[50.99243927 577.73504639]
[51.68265533 562.75091553]
[52.37287140 547.76678467]
[53.06308746 532.78271484]
[53.75330353 517.79858398]
[54.44351959 502.81445312]
[46.53731155 493.68984985]
[46.96683121 481.22357178]
[56.04622650 472.09643555]
[56.90882492 457.12127686]
[57.77142334 442.14608765]
[50.34351730 435.19491577]
[47.89726257 425.09469604]
[51.46864319 415.10241699]
[60.11232376 408.57669067]
[61.31932449 393.62533569]
[62.52632141 378.67395020]
[55.83823013 365.36535645]
[64.66089630 352.23254395]
[65.86789703 337.28118896]
[67.07489014 322.32983398]
[68.28189087 307.37844849]
[69.48889160 292.42709351]
[70.69588470 277.47573853]
[56.73894119 269.65933228]
[47.56177902 256.48590088]
[45.04787445 240.57003784]
[49.75198364 225.09790039]
[60.77874374 213.18931580]
[75.95256805 207.26873779]
[76.98743439 192.30447388]
[78.02230835 177.34022522]
[79.05717468 162.37596130]
[80.09204102 147.41169739]
[81.12690735 132.44744873]
[82.16177368 117.48318481]
[86.98699951 84.21699524]
[86.12439728 69.24182129]
[85.26180267 54.26664352]
[84.39920044 39.29146576]
[72.88245392 28.80327415]
[72.22097778 13.60402775]
[82.29084015 2.68920040]
[81.42824554 -12.28597641]
[80.47949219 -27.25594139]
[79.44462585 -42.22019958]
[78.40975952 -57.18445969]
[77.37489319 -72.14871979]
[76.25394440 -87.10677338]
[75.04694366 -102.05813599]
[61.50965881 -113.16567993]
[60.23776245 -130.29122925]
[71.53197479 -142.77473450]
[70.15300751 -157.71121216]
[68.77404022 -172.64768982]
[67.39506531 -187.58416748]
[66.01609802 -202.52066040]
[64.63712311 -217.45713806]
[63.25815582 -232.39361572]
[51.38625336 -242.47804260]
[50.20055771 -257.64541626]
[59.88768387 -268.90130615]
[58.50871277 -283.83776855]
[47.53115845 -298.64324951]
[55.53209305 -314.27978516]
[53.98133469 -329.19940186]
[52.34475327 -344.10986328]
[50.62241364 -359.01065063]
[48.90007019 -373.91143799]
[47.17772675 -388.81222534]
[37.90702820 -401.63272095]
[44.13177109 -415.16421509]
[42.40942764 -430.06503296]
[40.68708420 -444.96582031]
[38.96474457 -459.86660767]
[37.24240112 -474.76739502]
[33.16179276 -482.89743042]
[35.58699036 -489.84942627]
[34.03623199 -504.76904297]
[32.48547363 -519.68865967]
[30.93471336 -534.60827637]
[26.94793129 -542.78479004]
[29.45296669 -549.70837402]
[28.07399750 -564.64483643]
[26.69502640 -579.58135986]
[25.23013878 -594.50964355]
[23.67937851 -609.42926025]
[14.55682278 -622.35559082]
[20.93686676 -635.81457520]
[19.38610840 -650.73419189]
[17.83535004 -665.65380859]
[14.30320072 -671.17218018]
[14.09201527 -676.80493164]
[16.42464256 -680.93402100]
[15.21764469 -695.88543701]
[14.01064587 -710.83679199]
[12.80364704 -725.78814697]
[11.51064205 -740.73229980]
[10.13167191 -755.66876221]
[8.75270176 -770.60522461]
[5.28428888 -776.16394043]
[5.13793564 -781.79876709]
[7.51792431 -785.90069580]
[6.48305702 -800.86499023]
[5.44818974 -815.82922363]
[4.41332245 -830.79351807]
[3.37845540 -845.75775146]
[-6.22522306 -859.05065918]
[0.73091143 -873.90136719]
[17.09098434 -875.03277588]
[26.02515411 -861.28094482]
[18.34271431 -846.79260254]
[19.37758255 -831.82836914]
[20.41244888 -816.86407471]
[21.44731522 -801.89984131]
[22.48218346 -786.93560791]
[23.68918228 -771.98425293]
[25.06815147 -757.04772949]
[26.44712257 -742.11126709]
[30.17741966 -735.76330566]
[27.75500679 -726.99511719]
[28.96200562 -712.04376221]
[30.16900444 -697.09240723]
[31.37600327 -682.14105225]
[32.75497437 -667.20458984]
[34.30573273 -652.28491211]
[35.85649109 -637.36529541]
[44.86812592 -625.50616455]
[38.59900284 -610.98004150]
[40.14976120 -596.06042480]
[43.95286179 -589.75579834]
[41.63150787 -580.96032715]
[43.01047897 -566.02380371]
[44.38944626 -551.08734131]
[45.85433578 -536.15905762]
[47.40509415 -521.23944092]
[48.95585251 -506.31979370]
[50.50661469 -491.40017700]
[52.14319229 -476.48971558]
[53.86553192 -461.58892822]
[55.58787537 -446.68814087]
[57.31021881 -431.78735352]
[59.03256226 -416.88656616]
[68.18006897 -405.13189697]
[62.07851791 -390.53457642]
[63.80086136 -375.63378906]
[65.52320099 -360.73300171]
[67.24554443 -345.83221436]
[71.12094116 -339.57177734]
[68.90095520 -330.75018311]
[70.45171356 -315.83056641]
[79.62957001 -307.98620605]
[81.06285095 -295.59515381]
[73.44519043 -285.21673584]
[74.82416534 -270.28027344]
[86.40832520 -260.98818970]
[88.01956940 -245.86012268]
[78.19463348 -233.77258301]
[79.57360840 -218.83610535]
[80.95257568 -203.89962769]
[82.33155060 -188.96315002]
[83.71051788 -174.02665710]
[85.08948517 -159.09017944]
[86.46846008 -144.15370178]
[97.41783905 -137.40182495]
[102.56657410 -125.40158081]
[99.83480072 -112.43367004]
[89.99830627 -103.26513672]
[91.20529938 -88.31377411]
[94.86230469 -81.92330933]
[92.33914948 -73.18358612]
[93.37402344 -58.21932602]
[94.40888977 -43.25506973]
[95.44375610 -28.29080963]
[99.02697754 -21.85868454]
[96.40341949 -13.14857483]
[97.26602173 1.82660162]
[108.52255249 11.51298809]
[109.61067963 26.68765831]
[99.37438202 38.42886734]
[100.23697662 53.40404510]
[101.09957886 68.37921906]
[101.96217346 83.35440063]
[111.84424591 94.63910675]
[126.57466125 97.47016907]
[141.30506897 100.30123138]
[156.03549194 103.13230133]
[172.73112488 100.18406677]
[180.18595886 115.41107941]
[167.61772156 126.78982544]
[153.20442200 117.86270905]
[138.47401428 115.03164673]
[123.74359894 112.20058441]
[109.01318359 109.36952209]
[97.12602997 118.51805115]
[96.09116364 133.48231506]
[95.05629730 148.44656372]
[94.02143097 163.41082764]
[92.98656464 178.37509155]
[91.95169830 193.33934021]
[90.91683197 208.30360413]
[103.43917084 214.81408691]
[112.51210022 225.56851196]
[116.79438019 238.92599487]
[115.67244720 252.86477661]
[109.34809875 265.28823853]
[98.80317688 274.34033203]
[85.64724731 278.68273926]
[84.44024658 293.63409424]
[83.23325348 308.58544922]
[82.02625275 323.53680420]
[80.81925201 338.48818970]
[79.61225128 353.43954468]
[86.21401215 367.81756592]
[77.47768402 379.88095093]
[76.27068329 394.83230591]
[75.06368256 409.78369141]
[84.49697113 427.62576294]
[72.74659729 443.00869751]
[71.88400269 457.98385620]
[71.02140045 472.95904541]
[79.66970825 489.23526001]
[69.42762756 503.50466919]
[68.73741150 518.48876953]
[68.04719543 533.47290039]
[67.35697937 548.45703125]
[66.66676331 563.44110107]
[65.97654724 578.42523193]
[78.11557007 585.33502197]
[86.06188202 596.74182129]
[88.31536865 610.39270020]
[84.49349976 623.62127686]
[75.39485931 633.86822510]
[62.83308411 639.17675781]
[61.97048569 654.15191650]
[68.90138245 668.37420654]
[60.44498444 680.63543701]
[59.58238220 695.61065674]
[58.71978378 710.58581543]
[65.65068054 724.80810547]
[57.19428253 737.06933594]
[56.33168411 752.04455566]
[58.95523834 760.75463867]
[55.37201691 767.18676758]
[54.33715057 782.15100098]
[53.30228424 797.11529541]
[52.26741409 812.07952881]
[51.23254776 827.04382324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 272]
[8 271]
[9 270]
[10 269]
[11 268]
[12 266]
[13 265]
[15 263]
[16 262]
[17 261]
[19 259]
[20 258]
[25 252]
[26 251]
[27 250]
[28 249]
[29 248]
[30 247]
[33 245]
[34 244]
[35 243]
[39 241]
[40 240]
[41 239]
[43 237]
[44 236]
[45 235]
[46 234]
[47 233]
[48 232]
[54 225]
[55 224]
[56 223]
[57 222]
[58 221]
[59 220]
[60 219]
[61 207]
[62 206]
[63 205]
[64 204]
[67 201]
[68 200]
[69 198]
[70 197]
[71 196]
[72 195]
[73 193]
[74 192]
[77 188]
[78 187]
[79 186]
[80 185]
[81 184]
[82 183]
[83 182]
[86 179]
[87 178]
[89 175]
[90 174]
[91 172]
[92 171]
[93 170]
[94 169]
[96 167]
[97 166]
[98 165]
[99 164]
[100 163]
[102 162]
[103 161]
[104 160]
[105 159]
[107 158]
[108 157]
[109 156]
[110 154]
[111 153]
[113 151]
[114 150]
[115 149]
[118 148]
[119 147]
[120 146]
[121 145]
[122 143]
[123 142]
[124 141]
[127 140]
[128 139]
[129 138]
[130 137]
[131 136]
[208 218]
[209 217]
[210 216]
[211 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
