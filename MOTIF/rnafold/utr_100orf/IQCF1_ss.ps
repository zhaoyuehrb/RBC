%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGCCUUUCUUCCUCCACCCUUCCUGCCUAUGCUAUGGCUGGAUGAACACAGAUGUGAGGGGAUUUGAACCAUCUACAAUCAAUCCAUAUGUGACCAAUGGAGGAGAAGCAGCCCCAAAAGACGAAGGAACCCUCAAAAGAAGAUGAGCCUCAGCAGAAGGAGAUGCCAACCCAUUUGUCCUUAGGAGCAGAGUCAA\
) } def
/len { sequence length } bind def

/coor [
[293.48864746 185.23332214]
[305.55224609 176.31872559]
[320.08761597 172.62036133]
[305.72280884 168.30151367]
[291.35803223 163.98266602]
[274.52447510 168.92758179]
[262.00961304 155.42599487]
[247.57841492 151.33445740]
[233.14723206 147.24290466]
[218.71603394 143.15136719]
[204.28485107 139.05981445]
[196.98497009 140.26103210]
[189.65908813 134.78810120]
[175.29429626 130.46925354]
[160.92948914 126.15039825]
[146.56468201 121.83155060]
[132.19989014 117.51270294]
[117.83508301 113.19384766]
[112.62654877 120.06327820]
[104.75308990 124.77490997]
[95.14256287 126.30290985]
[85.10935211 124.02878571]
[76.17466736 117.88212585]
[63.10607529 125.24498749]
[50.03747940 132.60786438]
[41.81213760 146.12283325]
[26.92572021 145.62905884]
[13.85712528 152.99192810]
[0.78853041 160.35479736]
[-0.86192983 175.78385925]
[-11.29110146 187.27349854]
[-26.48875618 190.40574646]
[-40.61108398 183.97616577]
[-48.22776413 170.45707703]
[-46.41002655 155.04682922]
[-35.85682678 143.67100525]
[-20.62608719 140.70381165]
[-6.57433796 147.28620911]
[6.49425650 139.92333984]
[19.56285095 132.56047058]
[26.85343933 119.57214355]
[42.67461395 119.53926849]
[55.74320602 112.17639923]
[68.81179810 104.81352997]
[70.11258698 89.87003326]
[58.51273346 80.35985565]
[42.99595261 81.72633362]
[31.36753273 71.91641998]
[30.16042900 57.11511993]
[18.56057739 47.60494232]
[6.96072817 38.09476471]
[-4.63912153 28.58458710]
[-20.21665764 25.81854820]
[-25.15341377 11.76587200]
[-36.75326157 2.25569463]
[-48.35311508 -7.25448322]
[-56.98271561 -10.27959633]
[-60.05946732 -17.00750160]
[-71.50774384 -26.69961166]
[-84.71892548 -24.04677963]
[-96.86723328 -29.41179657]
[-103.60489655 -40.62948227]
[-102.66245270 -53.48592377]
[-113.95629883 -63.35755157]
[-125.25014496 -73.22917938]
[-136.54399109 -83.10080719]
[-156.47254944 -86.09368896]
[-161.93920898 -104.63509369]
[-173.53906250 -114.14527130]
[-189.79954529 -116.27328491]
[-195.83612061 -131.52096558]
[-185.43887329 -144.20280457]
[-169.30358887 -141.27282715]
[-164.02888489 -125.74511719]
[-152.42903137 -116.23493958]
[-142.38014221 -118.15270233]
[-132.73405457 -114.13348389]
[-126.77426910 -105.28350830]
[-126.67236328 -94.39465332]
[-115.37851715 -84.52302551]
[-104.08467102 -74.65139771]
[-92.79082489 -64.77976990]
[-76.07907104 -66.62568665]
[-62.94131470 -55.60034561]
[-61.81563187 -38.14788818]
[-50.36735535 -28.45577621]
[-38.84293365 -18.85433388]
[-27.24308586 -9.34415531]
[-15.64323521 0.16602248]
[-0.89539915 2.25182891]
[4.87105608 16.98473740]
[16.47090530 26.49491501]
[28.07075500 36.00509262]
[39.67060471 45.51527023]
[54.42131042 43.79703522]
[66.32068634 53.27646255]
[68.02291107 68.76000977]
[79.62276459 78.27018738]
[109.69590759 75.88934326]
[122.15393066 98.82904816]
[136.51873779 103.14789581]
[150.88354492 107.46675110]
[165.24833679 111.78559875]
[179.61314392 116.10444641]
[193.97795105 120.42329407]
[208.37638855 124.62862396]
[222.80758667 128.72016907]
[237.23876953 132.81172180]
[251.66996765 136.90325928]
[266.10116577 140.99481201]
[277.72955322 135.39941406]
[289.66949463 139.11134338]
[295.67687988 149.61785889]
[310.04168701 153.93670654]
[324.40646362 158.25555420]
[339.15994263 160.96386719]
[354.12213135 162.02857971]
[368.43667603 155.29035950]
[380.58264160 163.91154480]
[395.54479980 164.97625732]
[409.85937500 158.23802185]
[422.00534058 166.85920715]
[436.96749878 167.92393494]
[451.92968750 168.98864746]
[466.89184570 170.05337524]
[481.85400391 171.11808777]
[496.81616211 172.18280029]
[511.78628540 173.12939453]
[526.76336670 173.95777893]
[532.61108398 159.00706482]
[545.05883789 147.52679443]
[562.11547852 142.38772583]
[580.57415771 145.35064697]
[596.61444092 156.57328796]
[611.16760254 152.93936157]
[625.72076416 149.30541992]
[640.27392578 145.67149353]
[645.95660400 131.23240662]
[659.05908203 122.91954041]
[674.54327393 123.92934418]
[686.45513916 133.87353516]
[690.21435547 148.92837524]
[684.37536621 163.30494690]
[671.18347168 171.47520447]
[655.71118164 170.29748535]
[643.90783691 160.22465515]
[629.35467529 163.85858154]
[614.80151367 167.49252319]
[600.24835205 171.12644958]
[599.71600342 178.60754395]
[614.27496338 174.99676514]
[622.20776367 187.72743225]
[612.55145264 199.20588684]
[598.65130615 193.56970215]
[598.11895752 201.05078125]
[612.01086426 206.70889282]
[625.90277100 212.36700439]
[639.01348877 204.06707764]
[654.49670410 205.09217834]
[666.39874268 215.04812622]
[670.14306641 230.10667419]
[664.28991699 244.47747803]
[651.08990479 252.63468933]
[635.61877441 251.44169617]
[623.82543945 241.35720825]
[620.24468994 226.25894165]
[606.35278320 220.60083008]
[592.46081543 214.94271851]
[575.24816895 223.68832397]
[556.81591797 224.14941406]
[540.77752686 216.97645569]
[529.96551514 204.24716187]
[525.93499756 188.93489075]
[510.95788574 188.10650635]
[504.09890747 190.87878418]
[495.75146484 187.14497375]
[480.78927612 186.08024597]
[465.82711792 185.01553345]
[450.86495972 183.95082092]
[435.90280151 182.88609314]
[420.94061279 181.82138062]
[407.69625854 188.63575745]
[394.48010254 179.93841553]
[379.51794434 178.87370300]
[366.27355957 185.68809509]
[353.05740356 176.99075317]
[338.09524536 175.92602539]
[350.37042236 184.54692078]
[358.48074341 197.16526794]
[361.22500610 211.91209412]
[358.19671631 226.60322571]
[349.84439087 239.06271362]
[337.40512085 247.44512939]
[322.72134399 250.50894165]
[307.96792603 247.80033875]
[295.33001709 239.72053528]
[286.67947388 227.46621704]
[283.29754639 212.85244751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 115]
[4 114]
[5 113]
[7 110]
[8 109]
[9 108]
[10 107]
[11 106]
[13 105]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[23 44]
[24 43]
[25 42]
[27 40]
[28 39]
[29 38]
[45 98]
[46 97]
[49 94]
[50 93]
[51 92]
[52 91]
[54 89]
[55 88]
[56 87]
[58 86]
[59 85]
[63 82]
[64 81]
[65 80]
[66 79]
[68 75]
[69 74]
[116 187]
[117 186]
[119 184]
[120 183]
[122 181]
[123 180]
[124 179]
[125 178]
[126 177]
[127 176]
[128 174]
[129 173]
[134 149]
[135 148]
[136 147]
[137 146]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
