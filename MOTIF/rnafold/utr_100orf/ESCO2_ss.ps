%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAUUUGAAGACGCUCACGGAGCGGCUGGCUAGGCUGAGGAGAGCUCGCCGGGCUCUGAGGCGCAGGAAUUCAAUAAAGAAAAUGGCAGCUCUUACUCCAAGGAAGAGGAAGCAGGAUUCUUUGAAGUGUGACAGCCUUUUACACUUCACUGAAAAUCUGUUUCCAUCACCUAAUAAAAAGC\
) } def
/len { sequence length } bind def

/coor [
[67.42527008 183.61703491]
[61.08316422 170.02374268]
[59.34796524 155.12443542]
[62.39650726 140.43750000]
[69.91812134 127.45961761]
[81.14318848 117.51532745]
[66.40695953 120.31597900]
[51.67073441 123.11663818]
[36.93450928 125.91728973]
[22.19828606 128.71794128]
[11.56374645 146.83204651]
[-8.68365669 151.19683838]
[-25.35877609 139.41061401]
[-39.86952209 143.21038818]
[-54.38027191 147.01014709]
[-68.89102173 150.80990601]
[-76.07662964 161.53988647]
[-88.25875092 164.39677429]
[-98.76879120 158.37783813]
[-113.34229279 161.92930603]
[-127.91580200 165.48077393]
[-142.48930359 169.03224182]
[-157.06282043 172.58370972]
[-171.63632202 176.13517761]
[-176.70162964 180.44396973]
[-182.33625793 181.38768005]
[-186.76795959 179.55006409]
[-201.45422363 182.60189819]
[-216.14048767 185.65374756]
[-230.82675171 188.70558167]
[-245.51300049 191.75741577]
[-253.23855591 202.10543823]
[-265.55096436 204.33486938]
[-275.73907471 197.78570557]
[-290.47528076 200.58636475]
[-305.21151733 203.38702393]
[-319.94772339 206.18768311]
[-328.63168335 219.39239502]
[-344.12597656 222.50721741]
[-357.23815918 213.68415833]
[-360.18899536 198.15779114]
[-351.22778320 185.13961792]
[-335.67108154 182.35311890]
[-322.74838257 191.45144653]
[-308.01217651 188.65080261]
[-293.27593994 185.85014343]
[-278.53973389 183.04948425]
[-265.89923096 170.89099121]
[-248.56484985 177.07115173]
[-233.87858582 174.01931763]
[-219.19232178 170.96748352]
[-204.50605774 167.91563416]
[-189.81980896 164.86380005]
[-175.18778992 161.56166077]
[-160.61427307 158.01019287]
[-146.04077148 154.45872498]
[-131.46726990 150.90727234]
[-116.89376068 147.35580444]
[-102.32025146 143.80433655]
[-90.31885529 131.01461792]
[-72.69078064 136.29916382]
[-58.18003464 132.49938965]
[-43.66928482 128.69963074]
[-29.15853882 124.89987183]
[-27.13592911 115.71215820]
[-21.86257362 107.85140228]
[-14.03310680 102.42916107]
[-4.70699644 100.23072815]
[4.83475447 101.60163116]
[13.26554871 106.39410400]
[19.39762878 113.98172760]
[34.13385391 111.18106842]
[48.87007904 108.38040924]
[63.60630417 105.57975769]
[78.34252930 102.77909851]
[63.56882858 105.37483215]
[49.59076691 99.93297577]
[40.46109390 88.03133392]
[38.82683945 73.12062836]
[45.16183090 59.52401733]
[57.62932587 51.18365860]
[72.61453247 50.51772690]
[85.77269745 57.71930313]
[93.28878021 70.70038605]
[92.98429871 85.69493866]
[93.49641418 70.70368195]
[94.00853729 55.71242905]
[91.16874695 47.00493622]
[94.65953827 40.47021866]
[95.42752838 25.48989296]
[84.65429688 13.92645550]
[85.29654694 -1.86477828]
[96.97323608 -12.51515007]
[112.75679779 -11.70598221]
[123.28311920 0.08265910]
[122.30712891 15.85678291]
[110.40785217 26.25788116]
[109.63986206 41.23820877]
[108.99978638 56.22454453]
[108.48767090 71.21579742]
[107.97555542 86.20705414]
[118.49122620 96.90381622]
[133.48904419 96.64772034]
[148.48684692 96.39162445]
[158.00863647 87.66802216]
[170.52078247 87.77665710]
[179.30693054 96.11286926]
[194.30693054 96.11286926]
[209.30638123 95.98480988]
[224.30419922 95.72872162]
[239.30200195 95.47262573]
[254.29981995 95.21652985]
[269.29763794 94.96043396]
[284.29544067 94.70433807]
[299.29327393 94.44824219]
[314.29107666 94.19214630]
[329.28887939 93.93605042]
[344.83752441 84.09146881]
[359.84448242 93.16897583]
[374.83575439 92.65685272]
[389.82699585 92.14473724]
[400.58169556 80.87644196]
[415.79223633 80.57064056]
[426.46856689 90.89302826]
[441.45980835 90.38091278]
[456.45108032 89.86878967]
[471.44232178 89.35667419]
[486.43359375 88.84455872]
[501.42483521 88.33244324]
[516.41607666 87.82032776]
[531.40734863 87.30821228]
[546.39862061 86.79609680]
[561.38989258 86.28397369]
[570.88354492 73.85802460]
[586.15454102 70.49207306]
[599.99243164 77.77542114]
[605.86334229 92.26908875]
[600.99523926 107.12961578]
[587.68664551 115.34031677]
[572.22149658 113.02434540]
[561.90197754 101.27523041]
[546.91070557 101.78734589]
[531.91949463 102.29946136]
[516.92822266 102.81158447]
[501.93695068 103.32369995]
[486.94570923 103.83581543]
[471.95443726 104.34793091]
[456.96319580 104.86004639]
[441.97195435 105.37216187]
[426.98068237 105.88428497]
[417.03366089 116.91118622]
[401.83770752 117.64409637]
[390.33911133 107.13599396]
[375.34786987 107.64810944]
[360.35659790 108.16022491]
[351.86019897 116.79154968]
[339.35903931 117.32729340]
[329.54498291 108.93386078]
[314.54718018 109.18995667]
[299.54934692 109.44605255]
[284.55154419 109.70214844]
[269.55374146 109.95824432]
[254.55592346 110.21434021]
[239.55810547 110.47043610]
[224.56028748 110.72653198]
[209.56246948 110.98262787]
[202.91238403 114.24828339]
[194.30693054 111.11286926]
[179.30693054 111.11286926]
[164.61860657 120.69743347]
[148.74295044 111.38944244]
[133.74513245 111.64553833]
[118.74732208 111.90163422]
[132.39035034 118.13601685]
[143.37353516 128.35217285]
[150.57759094 141.50897217]
[153.26837158 156.26565552]
[151.17164612 171.11839294]
[144.50111389 184.55357361]
[133.93655396 195.20204163]
[120.55455780 201.97863770]
[105.71887207 204.19277954]
[90.94136810 201.61882019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 75]
[7 74]
[8 73]
[9 72]
[10 71]
[13 64]
[14 63]
[15 62]
[16 61]
[19 59]
[20 58]
[21 57]
[22 56]
[23 55]
[24 54]
[27 53]
[28 52]
[29 51]
[30 50]
[31 49]
[34 47]
[35 46]
[36 45]
[37 44]
[85 101]
[86 100]
[87 99]
[89 98]
[90 97]
[102 173]
[103 172]
[104 171]
[107 169]
[108 168]
[109 166]
[110 165]
[111 164]
[112 163]
[113 162]
[114 161]
[115 160]
[116 159]
[117 158]
[119 155]
[120 154]
[121 153]
[124 150]
[125 149]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
