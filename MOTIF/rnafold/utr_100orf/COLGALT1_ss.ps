%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCACGCCCGGCGCGCUCCUCCCCUUUAAGGCGCGCGGCCGGGCGGGGCCCCUAUGACCCCUUUAAGGCGCGGCCAGAGUCCUCCCGCAGAAAAACGACUUAAAGGAGACGCGUGGCGCGAUGGCGGCGGCCCCACGCGCGGGCCGGCGGCGCGGGCAGCCGCUCCUGGCGCUGCUGCUUCUGCUGCUGGCGCCACUGCCGCCGGGGGCCCCGCCGGGCG\
) } def
/len { sequence length } bind def

/coor [
[68.44980621 182.97023010]
[62.38050842 190.29423523]
[54.11317062 194.88017273]
[44.80129242 196.13633728]
[35.72676086 193.93228149]
[25.94052315 205.30020142]
[16.15428925 216.66812134]
[6.36805391 228.03604126]
[-3.41818142 239.40396118]
[-13.20441628 250.77188110]
[-22.99065208 262.13980103]
[-32.77688599 273.50772095]
[-42.48207474 284.94491577]
[-52.10572815 296.45080566]
[-61.72938156 307.95666504]
[-71.35303497 319.46255493]
[-74.27194214 335.01217651]
[-88.37242889 339.81066895]
[-97.99607849 351.31655884]
[-107.61973572 362.82241821]
[-103.71156311 377.83929443]
[-109.40780640 392.27301025]
[-122.51813507 400.57354736]
[-138.00135803 399.54916382]
[-149.90386963 389.59378052]
[-153.64889526 374.53540039]
[-147.79641724 360.16433716]
[-134.59681702 352.00650024]
[-119.12561798 353.19879150]
[-109.50196075 341.69290161]
[-99.87831116 330.18701172]
[-97.64775085 315.46038818]
[-82.85891724 309.83889771]
[-73.23526001 298.33303833]
[-63.61161041 286.82714844]
[-53.98795700 275.32125854]
[-52.10906982 268.17916870]
[-44.14480591 263.72149658]
[-34.35857010 252.35357666]
[-24.57233620 240.98565674]
[-14.78610134 229.61773682]
[-4.99986601 218.24981689]
[4.78636885 206.88189697]
[14.57260418 195.51397705]
[24.35883904 184.14605713]
[21.13806725 163.95529175]
[34.06211853 147.73391724]
[55.04953384 146.32286072]
[64.17390442 134.41716003]
[73.29827881 122.51145172]
[82.42264557 110.60575104]
[72.86355591 122.16532135]
[58.46096420 126.35642242]
[44.19201279 121.73072815]
[34.98765945 109.88674927]
[34.02867508 94.91743469]
[41.64645767 81.99577332]
[55.20850754 75.58712769]
[70.02816010 77.90615845]
[80.98432922 88.15177155]
[70.41548157 77.50753784]
[59.84664536 66.86331177]
[49.27780533 56.21908188]
[38.70896149 45.57485199]
[28.14012337 34.93062592]
[17.57128143 24.28639603]
[7.00244141 13.64216614]
[-16.48583984 15.84507561]
[-33.70838928 0.11061632]
[-33.63288879 -22.95363998]
[-45.34134293 -32.32978439]
[-57.04980087 -41.70592880]
[-68.75825500 -51.08206940]
[-81.63568878 -50.44151688]
[-91.19364929 -58.48585892]
[-92.66246033 -70.48825836]
[-104.23645782 -80.02988434]
[-120.49111176 -82.20203400]
[-126.48627472 -97.46604156]
[-116.05463409 -110.11961365]
[-99.92736816 -107.14584351]
[-94.69482422 -91.60388184]
[-83.12083435 -82.06224823]
[-65.67894745 -80.09822083]
[-59.38211060 -62.79052734]
[-47.67365646 -53.41438293]
[-35.96519852 -44.03823853]
[-24.25674438 -34.66209412]
[-18.15292931 -38.12509537]
[-11.36450195 -39.98917770]
[-4.30423307 -40.12981796]
[2.59582043 -38.52762604]
[8.91075897 -35.27019501]
[14.24900532 -30.54738426]
[18.27657890 -24.64027596]
[20.73798180 -17.90446091]
[21.47239113 -10.74864197]
[20.42411423 -3.60983253]
[17.64666939 3.07332587]
[28.21551132 13.71755505]
[38.78435135 24.36178398]
[49.35319138 35.00601196]
[59.92203140 45.65024185]
[70.49087524 56.29447174]
[81.05971527 66.93869781]
[91.62855530 77.58292389]
[98.73124695 75.17423248]
[101.66165161 60.46326065]
[112.93662262 70.35684967]
[120.03931427 67.94815826]
[121.95315552 53.07075119]
[123.86699677 38.19334412]
[125.78083801 23.31593895]
[121.80481720 6.83480978]
[136.54118347 -1.54825425]
[148.67607117 10.29154873]
[140.65824890 25.22978020]
[138.74440002 40.10718536]
[136.83056641 54.98459244]
[134.91671753 69.86199951]
[129.48767090 83.22030640]
[120.60948944 93.11035156]
[109.45573425 98.78409576]
[124.39174652 100.16812134]
[139.32775879 101.55214691]
[154.26377869 102.93617249]
[169.19978333 104.32019806]
[178.02609253 101.99712372]
[184.33775330 105.83152771]
[199.25259399 107.42772675]
[214.16741943 109.02392578]
[229.08224487 110.62012482]
[243.99707031 112.21632385]
[258.91189575 113.81252289]
[267.77032471 111.61515045]
[274.02685547 115.53888702]
[288.91751099 117.34693909]
[297.80627441 115.27570343]
[304.00637817 119.28798676]
[318.86981201 121.30752563]
[333.73324585 123.32705688]
[348.59667969 125.34659576]
[363.54214478 126.62442780]
[378.53268433 127.15738678]
[393.52319336 127.69035339]
[408.51373291 128.22331238]
[423.50427246 128.75628662]
[438.49478149 129.28924561]
[453.48532104 129.82220459]
[468.47583008 130.35516357]
[483.46636963 130.88813782]
[498.45690918 131.42109680]
[512.52325439 124.17901611]
[524.96759033 132.36364746]
[539.95812988 132.89660645]
[554.94866943 133.42956543]
[569.93920898 133.96252441]
[584.92968750 134.49549866]
[599.92022705 135.02845764]
[614.91076660 135.56141663]
[629.90734863 135.88124084]
[644.90698242 135.98785400]
[659.90661621 136.09446716]
[674.90625000 136.20108032]
[690.78790283 130.26747131]
[700.88616943 143.88594055]
[690.59533691 157.35946655]
[674.79962158 151.20071411]
[659.79998779 151.09408569]
[644.80035400 150.98747253]
[629.80072021 150.88085938]
[625.83575439 153.53115845]
[620.16522217 153.72378540]
[614.37780762 150.55195618]
[599.38726807 150.01898193]
[584.39672852 149.48602295]
[569.40618896 148.95306396]
[554.41571045 148.42008972]
[539.42517090 147.88713074]
[524.43463135 147.35417175]
[511.44049072 154.63436890]
[497.92395020 146.41162109]
[482.93341064 145.87866211]
[467.94287109 145.34570312]
[452.95236206 144.81272888]
[437.96182251 144.27976990]
[422.97128296 143.74681091]
[407.98077393 143.21385193]
[392.99023438 142.68087769]
[377.99969482 142.14791870]
[363.00918579 141.61495972]
[373.33627319 152.49389648]
[374.37417603 167.45794678]
[365.64791870 179.65844727]
[351.15124512 183.51155090]
[337.51892090 177.25379944]
[330.99008179 163.74919128]
[334.55282593 149.17843628]
[346.57714844 140.21002197]
[331.71371460 138.19049072]
[316.85028076 136.17094421]
[301.98684692 134.15141296]
[287.10943604 132.23757935]
[272.21881104 130.42951965]
[257.31570435 128.72735596]
[242.40087891 127.13115692]
[227.48605347 125.53495789]
[212.57121277 123.93875885]
[197.65638733 122.34255981]
[182.74156189 120.74636078]
[167.81576538 119.25621033]
[152.87974548 117.87218475]
[137.94374084 116.48815918]
[123.00772095 115.10413361]
[108.07170868 113.72010803]
[94.32835388 119.73011780]
[85.20398712 131.63583374]
[76.07961273 143.54153442]
[66.95523834 155.44723511]
[70.94946289 164.27082825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 36]
[14 35]
[15 34]
[16 33]
[18 31]
[19 30]
[20 29]
[48 219]
[49 218]
[50 217]
[51 216]
[60 106]
[61 105]
[62 104]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[70 88]
[71 87]
[72 86]
[73 85]
[76 83]
[77 82]
[110 120]
[111 119]
[112 118]
[113 117]
[123 215]
[124 214]
[125 213]
[126 212]
[127 211]
[129 210]
[130 209]
[131 208]
[132 207]
[133 206]
[134 205]
[136 204]
[137 203]
[139 202]
[140 201]
[141 200]
[142 199]
[143 191]
[144 190]
[145 189]
[146 188]
[147 187]
[148 186]
[149 185]
[150 184]
[151 183]
[152 182]
[154 180]
[155 179]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[161 171]
[162 170]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
