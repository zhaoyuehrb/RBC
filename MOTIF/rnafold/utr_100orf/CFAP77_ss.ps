%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCUCCAGGCUGUGCCCGACGUGGGGAAGCGCGCCCAAACCAGCCCGCGGGCCGGCUCCCCGGCGACCUCAAGGAUGCCAGAGGCCAGGAGCUCCGGCCCGGACCUCACGCGAUGGAGGAAGCAGCAGCAGCCUGUGCGCCGCACGGUCAGCCAGGUCUGCCCGCCCCCGCGGC\
) } def
/len { sequence length } bind def

/coor [
[281.37692261 145.45510864]
[266.58966064 142.93783569]
[251.80239868 140.42054749]
[237.01512146 137.90327454]
[222.22785950 135.38598633]
[207.44058228 132.86871338]
[192.65332031 130.35144043]
[177.86605835 127.83415222]
[164.02081299 133.32585144]
[151.71482849 123.38235474]
[136.92755127 120.86507416]
[122.14028931 118.34779358]
[107.35301971 115.83051300]
[93.43199921 121.41667938]
[84.48648834 133.45735168]
[85.39538574 149.47463989]
[73.34366608 160.06404114]
[57.57637024 157.10229492]
[50.18882751 142.86137390]
[56.84812164 128.26570129]
[72.44581604 124.51184845]
[81.39132690 112.47116852]
[77.99233246 105.78559875]
[71.19433594 92.41446686]
[67.79534149 85.72889709]
[52.79592896 85.86201477]
[37.79652023 85.99513245]
[22.79711151 86.12825012]
[7.79770136 86.26136780]
[-0.78694612 89.47494507]
[-7.46853209 86.26136780]
[-22.46794128 86.12825012]
[-33.69731140 96.92356873]
[-48.90694809 96.57489777]
[-59.12943649 85.80288696]
[-74.12884521 85.66976929]
[-89.12825775 85.53665161]
[-104.12766266 85.40353394]
[-110.82560730 99.11849976]
[-122.81625366 108.56239319]
[-137.71887207 111.86010742]
[-152.57450867 108.35688782]
[-164.43359375 98.74830627]
[-170.94148254 84.94213867]
[-170.80603027 69.67962646]
[-164.05413818 55.99113846]
[-152.02638245 46.59454346]
[-137.11090088 43.35553741]
[-122.26917267 46.91722870]
[-110.44802094 56.57244110]
[-103.99454498 70.40412903]
[-88.99514008 70.53723907]
[-73.99572754 70.67035675]
[-58.99631882 70.80347443]
[-48.58425903 60.21458817]
[-33.37082672 60.13591385]
[-22.33482552 71.12883759]
[-7.33541536 71.26195526]
[7.66458464 71.26195526]
[22.66399384 71.12883759]
[37.66340256 70.99571991]
[52.66281128 70.86260223]
[67.66222382 70.72949219]
[74.81375122 57.54405594]
[66.74490356 44.89915085]
[58.67605591 32.25424194]
[50.60720825 19.60933495]
[36.66128159 12.13794708]
[36.33748245 -2.75313854]
[28.26863480 -15.39804649]
[13.47525024 -22.47532082]
[12.47759914 -38.84409332]
[26.30197906 -47.66557312]
[40.72705460 -39.86498260]
[40.91354370 -23.46689415]
[48.98239136 -10.82198620]
[62.35118103 -4.25504732]
[63.25211716 11.54048634]
[71.32096863 24.18539429]
[79.38981628 36.83030319]
[87.45866394 49.47520828]
[109.73123169 59.63149643]
[120.35137177 76.62683868]
[119.04015350 92.51525116]
[109.87030029 101.04324341]
[124.65756226 103.56052399]
[139.44483948 106.07780457]
[154.23210144 108.59508514]
[169.13502502 103.28343964]
[180.38333130 113.04688263]
[195.17059326 115.56416321]
[209.95787048 118.08144379]
[224.74513245 120.59872437]
[239.53240967 123.11600494]
[254.31967163 125.63328552]
[269.10693359 128.15055847]
[283.89419556 130.66784668]
[298.79711914 125.35620117]
[310.04544067 135.11964417]
[324.83270264 137.63693237]
[339.61996460 140.15420532]
[354.42898560 142.54016113]
[369.25860596 144.79460144]
[384.08822632 147.04902649]
[397.94076538 129.13014221]
[425.30661011 128.53738403]
[436.93859863 119.06657410]
[448.57061768 109.59576416]
[460.20263672 100.12495422]
[459.21487427 84.63935089]
[467.54635620 71.54867554]
[481.99349976 65.88656616]
[497.00106812 69.83020782]
[506.79837036 81.86319733]
[507.61810303 97.35860443]
[499.14508057 110.35813141]
[484.63735962 115.86318970]
[469.67346191 111.75697327]
[458.04144287 121.22778320]
[446.40942383 130.69859314]
[434.77740479 140.16940308]
[435.44213867 147.63987732]
[449.24102783 141.75851440]
[459.09860229 153.06463623]
[451.39199829 165.93351746]
[436.77154541 162.58085632]
[437.43627930 170.05134583]
[450.55773926 177.31959534]
[468.94146729 176.55282593]
[477.41531372 191.90515137]
[490.66369629 198.93939209]
[503.91207886 205.97363281]
[517.16046143 213.00785828]
[530.47070312 219.92425537]
[543.84185791 226.72224426]
[557.21301270 233.52024841]
[570.58416748 240.31823730]
[579.68353271 241.42497253]
[584.13067627 247.35737610]
[597.37902832 254.39161682]
[610.75018311 261.18960571]
[624.23986816 267.74920654]
[637.72955322 274.30883789]
[654.04010010 272.60644531]
[663.44934082 286.03765869]
[656.27789307 300.78561401]
[639.90307617 301.67886353]
[631.16992188 287.79852295]
[617.68023682 281.23889160]
[604.19055176 274.67929077]
[599.43719482 275.37701416]
[594.19860840 273.07418823]
[590.34478760 267.63998413]
[577.09643555 260.60574341]
[563.78613281 253.68937683]
[550.41503906 246.89137268]
[537.04388428 240.09338379]
[523.67272949 233.29539490]
[516.26208496 233.06614685]
[510.12622070 226.25624084]
[496.87783813 219.22200012]
[483.62945557 212.18777466]
[470.38107300 205.15353394]
[458.70687866 208.39602661]
[447.60275269 202.61830139]
[443.28945923 190.44104004]
[430.16802979 183.17279053]
[406.88186646 189.41323853]
[387.96859741 179.47424316]
[381.83380127 161.87864685]
[367.00418091 159.62420654]
[352.17456055 157.36978149]
[345.06689453 159.47964478]
[337.10269165 154.94148254]
[322.31542969 152.42419434]
[307.52816772 149.90692139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 97]
[2 96]
[3 95]
[4 94]
[5 93]
[6 92]
[7 91]
[8 90]
[10 88]
[11 87]
[12 86]
[13 85]
[14 22]
[15 21]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[31 58]
[32 57]
[35 54]
[36 53]
[37 52]
[38 51]
[64 81]
[65 80]
[66 79]
[67 78]
[69 76]
[70 75]
[99 176]
[100 175]
[101 174]
[102 172]
[103 171]
[104 170]
[106 121]
[107 120]
[108 119]
[109 118]
[127 167]
[128 166]
[130 163]
[131 162]
[132 161]
[133 160]
[134 158]
[135 157]
[136 156]
[137 155]
[139 154]
[140 153]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
