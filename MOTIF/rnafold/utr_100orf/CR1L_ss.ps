%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUGUGAGUUUGGGGAUUGUUGUGUCCACUAACCGGACUCAGAAGGGACUUCCCUGCUCGGCUGGCUUUCGGUUUCUCUGCUCACCUCCGGAUAAAUCACGGGGUCUCCCGCGCCGCUCAUGGCGCCUCCCGUCCGUCUCGAGCGUCCCUUUCCUUCCCGGCGCUUUCCUGGGUUGCUUCUGGCGGCCCUGGUGUUGCUGCUGUCCUCCUUCUCCGAUC\
) } def
/len { sequence length } bind def

/coor [
[86.48907471 338.22109985]
[74.08602142 328.89672852]
[69.56465912 314.05297852]
[74.66355133 299.39755249]
[87.42206573 290.56579590]
[87.63433075 275.56732178]
[84.58846283 268.84014893]
[87.95721436 260.35845947]
[88.38169861 245.36447144]
[88.80618286 230.37048340]
[76.91572571 221.43991089]
[72.51187134 207.04998779]
[77.48389435 192.65788269]
[90.12314606 183.85133362]
[90.54763031 168.85734558]
[90.97211456 153.86334229]
[91.39659882 138.86935425]
[91.82107544 123.87536621]
[85.17258453 120.40440369]
[78.23045349 133.70127869]
[64.93369293 126.75891876]
[71.87560272 113.46249390]
[65.22711182 109.99153137]
[53.16715240 118.91103363]
[46.67270660 133.33784485]
[31.83916283 134.68513489]
[19.77920532 143.60462952]
[7.71924829 152.52412415]
[-4.34070873 161.44361877]
[-5.11838627 177.06185913]
[-15.79117012 188.49101257]
[-31.31970024 190.33459473]
[-44.37187576 181.72212219]
[-48.78486252 166.72013855]
[-42.47497940 152.41212463]
[-28.42156410 145.55387878]
[-13.26020622 149.38366699]
[-1.20024931 140.46417236]
[10.85970783 131.54466248]
[22.91966438 122.62517548]
[28.55149841 108.83634949]
[44.24765396 106.85107422]
[56.30760956 97.93157959]
[60.69995117 83.58907318]
[55.70285416 69.44591522]
[50.70575714 55.30275345]
[45.70866013 41.15959167]
[40.71156311 27.01642799]
[35.71446609 12.87326717]
[30.71737099 -1.26989484]
[25.72027397 -15.41305637]
[18.33925438 -2.35470486]
[3.92207360 1.78593659]
[-9.26329613 -5.36570883]
[-13.65530205 -19.70831299]
[-6.73521614 -33.01667023]
[7.52842855 -37.65869904]
[20.95509911 -30.97298431]
[17.17542839 -45.48897934]
[13.39575768 -60.00497055]
[9.61608696 -74.52096558]
[5.83641577 -89.03695679]
[2.05674505 -103.55295563]
[-2.29684067 -108.51139069]
[-3.34208012 -114.08718872]
[-1.61828065 -118.53327942]
[-4.98565197 -133.15042114]
[-8.35302258 -147.76756287]
[-20.98930550 -149.88894653]
[-31.92189598 -157.54110718]
[-38.76893616 -169.61032104]
[-39.80859375 -183.98068237]
[-34.38705444 -197.90205383]
[-43.97455978 -209.43807983]
[-53.56206512 -220.97409058]
[-63.14956665 -232.51011658]
[-72.73707581 -244.04612732]
[-87.50819397 -249.71397400]
[-89.69253540 -264.44754028]
[-99.28004456 -275.98355103]
[-108.86754608 -287.51959229]
[-118.45505524 -299.05560303]
[-133.92991638 -297.91186523]
[-147.10385132 -306.11108398]
[-152.91122437 -320.50045776]
[-149.11895752 -335.54699707]
[-137.18527222 -345.46499634]
[-121.69890594 -346.44079590]
[-108.61469269 -338.09915161]
[-102.96376801 -323.64761353]
[-106.91902924 -308.64309692]
[-97.33152771 -297.10708618]
[-87.74402618 -285.57107544]
[-78.15651703 -274.03503418]
[-64.07115936 -269.19232178]
[-61.20105362 -253.63363647]
[-51.61354828 -242.09762573]
[-42.02604294 -230.56159973]
[-32.43853760 -219.02557373]
[-22.85103416 -207.48956299]
[-8.30866051 -211.16642761]
[-5.35628653 -225.87300110]
[-2.40391231 -240.57958984]
[0.54846179 -255.28616333]
[3.50083590 -269.99273682]
[6.45320988 -284.69931030]
[1.01267362 -289.84835815]
[-2.28015494 -296.50079346]
[-3.06068754 -303.81402588]
[-1.27928090 -310.87966919]
[2.79839444 -316.83636475]
[8.62979126 -320.97488403]
[15.46728992 -322.82229614]
[19.45199585 -337.28332520]
[23.43670082 -351.74438477]
[27.42140770 -366.20544434]
[31.40611458 -380.66650391]
[23.38405609 -394.28347778]
[27.42109489 -409.56347656]
[41.12212753 -417.44110107]
[56.35857391 -413.24273682]
[64.09091949 -399.45919800]
[59.73170471 -384.26797485]
[45.86716843 -376.68179321]
[41.88246155 -362.22073364]
[37.89775848 -347.75967407]
[33.91305161 -333.29864502]
[29.92834473 -318.83758545]
[37.86898041 -297.83746338]
[21.15979004 -281.74694824]
[18.20741653 -267.04037476]
[15.25504112 -252.33378601]
[12.30266762 -237.62721252]
[9.35029316 -222.92062378]
[6.39791918 -208.21405029]
[22.59804153 -189.58419800]
[21.72306824 -166.39559937]
[6.26411819 -151.13493347]
[9.63148880 -136.51779175]
[12.99886036 -121.90065002]
[16.57273865 -107.33262634]
[20.35240936 -92.81662750]
[24.13208199 -78.30063629]
[27.91175270 -63.78464127]
[31.69142342 -49.26865005]
[35.47109222 -34.75265503]
[39.86343384 -20.41015434]
[44.86053085 -6.26699162]
[49.85762787 7.87617016]
[54.85472488 22.01933098]
[59.85182190 36.16249466]
[64.84892273 50.30565643]
[69.84601593 64.44881439]
[74.84311676 78.59197998]
[84.59107971 71.81672668]
[95.80151367 69.07543182]
[106.92024994 70.50499725]
[116.49052429 75.68003082]
[123.34384918 83.70027161]
[126.74169159 93.33808899]
[126.45108032 103.22288513]
[139.84497070 109.97593689]
[153.23884583 116.72899628]
[166.63273621 123.48205566]
[180.07408142 130.14016724]
[193.56217957 136.70301819]
[208.38374329 128.54536438]
[224.98193359 130.80999756]
[236.83866882 142.40756226]
[239.41726685 158.62327576]
[252.99690247 164.99458313]
[268.77676392 163.85163879]
[277.01242065 176.26223755]
[290.59204102 182.63356018]
[304.17166138 189.00488281]
[317.75131226 195.37620544]
[331.33093262 201.74752808]
[344.91055298 208.11885071]
[358.49017334 214.49015808]
[372.06979370 220.86148071]
[388.97732544 222.11543274]
[392.45285034 238.70932007]
[377.46957397 246.64265442]
[365.69848633 234.44111633]
[352.11886597 228.06979370]
[338.53924561 221.69847107]
[324.95959473 215.32714844]
[311.37997437 208.95582581]
[297.80035400 202.58451843]
[284.22073364 196.21319580]
[270.64108276 189.84187317]
[255.83253479 191.44055176]
[246.62557983 178.57421875]
[233.04594421 172.20289612]
[222.00657654 179.70326233]
[208.59524536 180.78007507]
[196.30444336 175.04565430]
[188.38789368 163.90013123]
[186.99934387 150.19111633]
[173.51123047 143.62828064]
[166.12731934 143.52832031]
[159.87968445 136.87594604]
[146.48579407 130.12287903]
[133.09190369 123.36982727]
[119.69802094 116.61677551]
[106.81507111 124.29984283]
[106.39058685 139.29383850]
[105.96610260 154.28782654]
[105.54162598 169.28182983]
[105.11714172 184.27581787]
[117.23792267 193.78334045]
[121.38774109 208.43367004]
[116.17683411 222.55140686]
[103.80017090 230.79496765]
[103.37569427 245.78895569]
[102.95121002 260.78295898]
[102.63282776 275.77957153]
[102.42056274 290.77807617]
[114.92404175 299.96734619]
[119.60615540 314.76116943]
[114.66654968 329.47103882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 218]
[6 217]
[8 216]
[9 215]
[10 214]
[14 210]
[15 209]
[16 208]
[17 207]
[18 206]
[23 43]
[24 42]
[26 40]
[27 39]
[28 38]
[29 37]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[50 148]
[51 147]
[58 146]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[66 140]
[67 139]
[68 138]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[79 94]
[80 93]
[81 92]
[82 91]
[101 135]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[161 205]
[162 204]
[163 203]
[164 202]
[165 200]
[166 199]
[170 194]
[171 193]
[173 191]
[174 190]
[175 189]
[176 188]
[177 187]
[178 186]
[179 185]
[180 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
