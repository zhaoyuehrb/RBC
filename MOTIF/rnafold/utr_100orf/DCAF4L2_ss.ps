%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCUUCCGUGCCAAGUCGUGCUUGUAAAGAAGCGGUACUUCCUCUUACUCCCGGGACAGAACUUCCCCUCAGGAGGGAGAACAUCCGCCGAACGAAAUGGAGAGCAAAAGACCGCGACUGCUCGAGGAAGCAGACAAGCAGAAAAAGACAGUCAGAGUGGGACUCAAUGCACCUUCCAUGCUACGAAAGAACCAGC\
) } def
/len { sequence length } bind def

/coor [
[105.23921204 288.37283325]
[104.28784943 273.40301514]
[103.33649445 258.43322754]
[102.38513184 243.46342468]
[101.43377686 228.49362183]
[100.48241425 213.52381897]
[91.95347595 201.31289673]
[98.79994202 187.04978943]
[97.84857941 172.07998657]
[96.89722443 157.11018372]
[95.82713318 142.14840698]
[94.63838196 127.19557953]
[80.14949799 123.31329346]
[71.64360046 135.66844177]
[63.13770294 148.02359009]
[54.63180542 160.37873840]
[46.12590790 172.73388672]
[42.12439728 189.20884705]
[25.18556023 189.92443848]
[19.80879211 173.84567261]
[33.77075577 164.22799683]
[42.27665710 151.87284851]
[50.78255463 139.51770020]
[59.28845215 127.16254425]
[67.79434967 114.80739594]
[65.56744385 107.64562988]
[52.17944336 114.41034698]
[38.82452011 121.24013519]
[27.24318695 111.70742035]
[31.37819672 97.28862000]
[46.25025558 95.34195709]
[61.11363983 93.32209778]
[58.88673782 86.16033173]
[44.87451935 80.80703735]
[30.86230278 75.45374298]
[16.85008430 70.10044861]
[-1.01705205 79.26820374]
[-19.58583641 72.46153259]
[-27.06088829 54.48130798]
[-41.31195450 49.80080414]
[-55.56302261 45.12030411]
[-69.81408691 40.43980408]
[-84.06515503 35.75930023]
[-98.31622314 31.07879829]
[-112.56729126 26.39829636]
[-126.81835938 21.71779633]
[-141.06942749 17.03729439]
[-149.06962585 25.27304077]
[-159.52037048 29.90296936]
[-170.89279175 30.29171753]
[-181.53878784 26.42132950]
[-189.92987061 18.88830948]
[-194.87657166 8.81203365]
[-195.69700623 -2.33147931]
[-209.70921326 -7.68477249]
[-223.72143555 -13.03806591]
[-237.73365784 -18.39135933]
[-251.30966187 -10.63081932]
[-266.68859863 -13.46324825]
[-276.60897827 -25.55125809]
[-276.38671875 -41.18726349]
[-266.12673950 -52.98841476]
[-250.67353821 -55.38257599]
[-237.32359314 -47.23929214]
[-232.38035583 -32.40357590]
[-218.36814880 -27.05028343]
[-204.35592651 -21.69699097]
[-190.34370422 -16.34369659]
[-175.31614685 -27.43726730]
[-156.48847961 -27.24322510]
[-141.45516968 -15.65925694]
[-136.38891602 2.78622699]
[-122.13785553 7.46672869]
[-107.88678741 12.14723015]
[-93.63571930 16.82773209]
[-79.38465118 21.50823402]
[-65.13359070 26.18873596]
[-50.88251877 30.86923790]
[-36.63145447 35.54973984]
[-22.38038635 40.23023987]
[-14.79107380 33.29122925]
[-4.92750406 30.10905838]
[5.44667673 31.32327271]
[14.44705105 36.78092957]
[20.41071701 45.55220413]
[22.20337677 56.08823395]
[36.21559525 61.44152832]
[50.22781372 66.79482269]
[64.24002838 72.14811707]
[75.05226135 66.46423340]
[86.15763855 64.32271576]
[96.51033020 65.43624878]
[105.24530792 69.23351288]
[111.74925995 74.93582153]
[115.70363617 81.64979553]
[117.09675598 88.46657562]
[116.20486450 94.55809021]
[113.54501343 99.26106262]
[127.86854553 94.80725861]
[142.19207764 90.35344696]
[156.51560974 85.89964294]
[170.83915710 81.44583893]
[185.16268921 76.99203491]
[198.14538574 61.57998657]
[216.80464172 66.62782288]
[230.97964478 61.72180176]
[245.15466309 56.81578445]
[252.50401306 40.94670105]
[268.73526001 35.40670776]
[283.65402222 43.15961838]
[297.74942017 38.02931595]
[309.24862671 23.65335083]
[326.39706421 27.35980988]
[340.40930176 22.00651550]
[354.42150879 16.65322304]
[368.43371582 11.29992962]
[382.31457520 5.61469412]
[396.05621338 -0.39926401]
[409.79785156 -6.41322184]
[423.53945923 -12.42718029]
[437.28109741 -18.44113731]
[443.89682007 -24.75539398]
[451.28878784 -24.43957901]
[465.12408447 -30.23475647]
[464.95574951 -46.30707932]
[470.95153809 -61.17856598]
[482.16662598 -72.58465576]
[496.86380005 -78.80071259]
[512.78259277 -78.90278625]
[527.48687744 -72.90481567]
[538.73791504 -61.75197220]
[552.47949219 -67.76593018]
[558.00268555 -82.57371521]
[572.41333008 -89.06285095]
[587.16186523 -83.38346100]
[593.49829102 -68.90502167]
[587.66326904 -54.21733093]
[573.11865234 -48.03433609]
[558.49346924 -54.02430344]
[544.75183105 -48.01034546]
[545.56365967 -33.99488449]
[541.53240967 -20.51597023]
[533.12316895 -9.19968891]
[521.33038330 -1.41848636]
[507.56039429 1.87526476]
[493.46365356 0.26579511]
[480.73696899 -6.07369995]
[470.91928101 -16.39944077]
[457.08395386 -10.60426426]
[443.29504395 -4.69951105]
[429.55343628 1.31444681]
[415.81179810 7.32840490]
[402.07015991 13.34236240]
[388.32855225 19.35632133]
[386.70996094 22.50014496]
[383.48266602 25.01242065]
[378.96191406 26.14309883]
[373.78701782 25.31214714]
[359.77481079 30.66544151]
[345.76257324 36.01873398]
[331.75036621 41.37202835]
[326.52355957 52.28848267]
[314.88485718 56.85963440]
[302.87973022 52.12470627]
[288.78433228 57.25500870]
[285.02304077 69.58554077]
[274.69030762 77.61552429]
[261.42395020 78.23391724]
[250.06068420 70.99079132]
[235.88566589 75.89681244]
[221.71064758 80.80283356]
[218.08435059 90.36994934]
[209.60943604 96.48545837]
[198.94799805 96.93022919]
[189.61648560 91.31556702]
[175.29295349 95.76937103]
[160.96942139 100.22317505]
[146.64588928 104.67697906]
[132.32235718 109.13079071]
[117.99881744 113.58459473]
[109.59120941 126.00683594]
[110.77995300 140.95965576]
[114.58314514 149.27670288]
[111.86701965 156.15882874]
[112.81838226 171.12863159]
[113.76973724 186.09843445]
[122.36672211 199.38008118]
[115.45221710 212.57246399]
[116.40357208 227.54226685]
[117.35493469 242.51206970]
[118.30628967 257.48187256]
[119.25765228 272.45166016]
[120.20900726 287.42147827]
[131.25115967 299.05978394]
[128.89399719 314.92874146]
[114.94574738 322.85501099]
[100.10630035 316.75823975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[8 186]
[9 185]
[10 184]
[11 182]
[12 181]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[33 89]
[34 88]
[35 87]
[36 86]
[39 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[45 74]
[46 73]
[47 72]
[54 68]
[55 67]
[56 66]
[57 65]
[98 180]
[99 179]
[100 178]
[101 177]
[102 176]
[103 175]
[105 171]
[106 170]
[107 169]
[110 165]
[111 164]
[113 161]
[114 160]
[115 159]
[116 158]
[117 154]
[118 153]
[119 152]
[120 151]
[121 150]
[123 149]
[124 148]
[131 140]
[132 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
