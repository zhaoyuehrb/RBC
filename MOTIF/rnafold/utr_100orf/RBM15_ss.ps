%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCUUCCUGGAGCGCGGGGAGAUGUAAAGAUAGACAAAUAAUUUUCCCAAUGAGACUGUAGAAGAGAGAGCAAUUGGCCAAUGAGGACUGCGGGGCGGGACCCUGUGCCGCGGCGGAGUCCAAGAUGGCGGCGUGCGGUUCCGCUGUGUGAAACGAGCGCGGGGCGGCGGGUUACUCAGC\
) } def
/len { sequence length } bind def

/coor [
[36.95867920 193.34783936]
[22.98643303 196.02416992]
[17.96323967 210.15808105]
[12.94004440 224.29200745]
[7.91685057 238.42591858]
[3.01449823 252.60218811]
[-1.76665473 266.81982422]
[2.00703549 282.77886963]
[-10.11102009 293.82806396]
[-25.65480423 288.60092163]
[-28.63420486 272.47470093]
[-15.98427010 262.03866577]
[-11.20311642 247.82104492]
[-12.05323792 240.46131897]
[-6.21706343 233.40272522]
[-1.19386899 219.26879883]
[3.82932520 205.13488770]
[8.85251904 191.00097656]
[-1.93362343 180.57701111]
[-15.88780022 186.07981873]
[-29.84197617 191.58264160]
[-43.79615402 197.08544922]
[-57.75033188 202.58825684]
[-71.70450592 208.09107971]
[-85.65868378 213.59388733]
[-99.61286163 219.09671021]
[-98.91156006 234.22241211]
[-103.16196442 248.75556946]
[-111.90301514 261.11975098]
[-124.18655396 269.97375488]
[-138.68014526 274.35717773]
[-153.81164551 273.79455566]
[-167.93968201 268.34689331]
[-179.53178406 258.60510254]
[-187.33049011 245.62594604]
[-190.48988342 230.81726074]
[-188.66723633 215.78541565]
[-182.06027222 202.16091919]
[-171.38566589 191.42167664]
[-157.80130005 184.73260498]
[-142.78071594 182.81925964]
[-127.95323944 185.88920593]
[-114.92723846 193.60945129]
[-105.11567688 205.14253235]
[-91.16149902 199.63970947]
[-77.20732117 194.13690186]
[-63.25314331 188.63407898]
[-49.29896545 183.13127136]
[-35.34479141 177.62846375]
[-21.39061356 172.12564087]
[-7.43643665 166.62283325]
[0.51076788 142.67858887]
[21.57164574 131.87901306]
[42.67057037 138.48455811]
[54.14292526 128.82095337]
[65.61528015 119.15736389]
[77.08763123 109.49376678]
[71.66953278 96.93662262]
[73.58324432 81.60594940]
[84.00415039 67.87835693]
[72.86841583 57.82871628]
[61.73267365 47.77907562]
[47.14501190 52.58487701]
[32.11210632 49.43728638]
[20.67773247 39.18298721]
[15.91767788 24.58033562]
[19.11237526 9.55737019]
[29.40246582 -1.84480619]
[44.01996613 -6.55906487]
[59.03284454 -3.31729412]
[70.40270996 7.00848579]
[75.07112885 21.64069176]
[71.78231049 36.64333344]
[82.91805267 46.69297409]
[94.05379486 56.74261475]
[101.43359375 55.40523911]
[98.75908661 40.64559937]
[113.51876831 37.97133636]
[116.19319153 52.73048782]
[123.57299042 51.39310837]
[130.47396851 38.07483292]
[137.37493896 24.75655365]
[144.27590942 11.43827438]
[136.11996460 -1.50110841]
[135.53956604 -16.68530846]
[142.59054565 -30.03259850]
[155.29071045 -38.00515747]
[170.17601013 -38.54664993]
[177.07699585 -51.86492920]
[183.97796631 -65.18320465]
[190.87893677 -78.50148773]
[197.77992249 -91.81976318]
[197.25906372 -107.63239288]
[209.98426819 -115.37309265]
[216.88523865 -128.69136047]
[212.33409119 -143.58850098]
[219.52238464 -156.99682617]
[233.75257874 -161.24385071]
[240.65354919 -174.56213379]
[247.55453491 -187.88040161]
[254.45550537 -201.19868469]
[253.93464661 -217.01132202]
[266.65985107 -224.75201416]
[273.56082153 -238.07028198]
[275.47940063 -254.91532898]
[292.19726562 -257.73489380]
[299.53460693 -242.45092773]
[286.87911987 -231.16931152]
[279.97811890 -217.85102844]
[280.99258423 -202.99101257]
[267.77377319 -194.29771423]
[260.87280273 -180.97943115]
[253.97183228 -167.66114807]
[247.07086182 -154.34288025]
[251.80743408 -140.26806641]
[244.99859619 -126.66312408]
[230.20352173 -121.79039001]
[223.30255127 -108.47211456]
[224.31700134 -93.61209869]
[211.09819031 -84.91878510]
[204.19721985 -71.60050964]
[197.29624939 -58.28223038]
[190.39526367 -44.96395493]
[183.49429321 -31.64567566]
[191.63597107 -19.17255783]
[192.44656372 -4.19928551]
[185.60839844 9.25826740]
[172.86865234 17.54053307]
[157.59419250 18.33925056]
[150.69322205 31.65752792]
[143.79223633 44.97580719]
[136.89126587 58.29408646]
[140.81477356 72.77186584]
[153.49612427 80.78330231]
[166.17749023 88.79473877]
[181.97694397 89.62405396]
[188.60441589 102.96293640]
[201.28578186 110.97437286]
[213.96714783 118.98580933]
[229.76660156 119.81512451]
[236.39407349 133.15400696]
[249.07543945 141.16543579]
[261.75680542 149.17687988]
[274.43817139 157.18830872]
[287.11950684 165.19975281]
[299.80087280 173.21118164]
[312.48223877 181.22262573]
[325.36459351 188.90669250]
[338.43951416 196.25833130]
[351.51440430 203.60998535]
[367.28829956 200.68359375]
[379.31625366 211.30000305]
[378.37142944 227.31521606]
[365.17864990 236.44372559]
[349.85824585 231.68292236]
[344.16275024 216.68490601]
[331.08786011 209.33325195]
[318.01293945 201.98159790]
[314.51696777 202.58961487]
[310.55203247 201.51947021]
[306.91702271 198.56909180]
[304.47079468 193.90397644]
[291.78942871 185.89254761]
[279.10809326 177.88110352]
[266.42672729 169.86967468]
[253.74536133 161.85823059]
[241.06401062 153.84680176]
[228.38264465 145.83535767]
[213.49024963 145.57908630]
[205.95570374 131.66716003]
[193.27435303 123.65573120]
[180.59298706 115.64429474]
[165.70059204 115.38800812]
[158.16604614 101.47609711]
[145.48469543 93.46466064]
[132.80332947 85.45322418]
[119.83172607 122.96483612]
[86.75122833 120.96611786]
[75.27887726 130.62971497]
[63.80651855 140.29330444]
[52.33416367 149.95690918]
[56.16399765 161.48196411]
[54.83383560 174.07675171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 13]
[7 12]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[54 181]
[55 180]
[56 179]
[57 178]
[60 75]
[61 74]
[62 73]
[80 132]
[81 131]
[82 130]
[83 129]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[94 118]
[95 117]
[98 114]
[99 113]
[100 112]
[101 111]
[103 109]
[104 108]
[133 176]
[134 175]
[135 174]
[137 172]
[138 171]
[139 170]
[141 168]
[142 167]
[143 166]
[144 165]
[145 164]
[146 163]
[147 162]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
