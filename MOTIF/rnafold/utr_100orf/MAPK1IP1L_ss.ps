%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCUUCCUGUUCCGGCGCCAGGAGGAGCCGCGCGCUGCUGGUGCUGUUGCCGCCGCUGCUCUAGCUGCCGUCAGUCAGGCUGCGCCCGCGUCUUCAGGGCCCAGUCCCUCGGACCCAUCGCCGCUUCUAGACCCUACUGCGGUCUCGGAUAUUGCCGGGAAAAUGUCUGAUGAAUUUUCGUUGGCAGAUGCACUACCUGAACACUCCCCUGCCAAAACCUCUGCUGUGAGCAAUACAAAACCUGGCCAACCUC\
CUCAAGGCU\
) } def
/len { sequence length } bind def

/coor [
[-91.32044983 214.30641174]
[-104.36969757 221.70350647]
[-117.41894531 229.10060120]
[-130.46820068 236.49771118]
[-143.51744080 243.89480591]
[-147.83016968 258.86270142]
[-161.16934204 266.17852783]
[-175.41236877 261.97476196]
[-188.46162415 269.37185669]
[-201.51087952 276.76895142]
[-214.56011963 284.16604614]
[-215.08180237 297.92111206]
[-222.26757812 309.53460693]
[-234.15425110 316.03643799]
[-247.59313965 315.82598877]
[-259.08398438 309.06478882]
[-272.22000122 316.30667114]
[-285.35601807 323.54855347]
[-298.49206543 330.79046631]
[-306.84182739 344.22888184]
[-321.72305298 343.59768677]
[-334.85910034 350.83956909]
[-347.99511719 358.08145142]
[-352.48498535 372.99719238]
[-365.90994263 380.15435791]
[-380.10214233 375.78204346]
[-393.23815918 383.02392578]
[-406.37417603 390.26580811]
[-419.51019287 397.50769043]
[-432.64620972 404.74957275]
[-440.99600220 418.18801880]
[-455.87722778 417.55682373]
[-469.01324463 424.79870605]
[-482.14929199 432.04058838]
[-488.12878418 438.90100098]
[-495.48422241 439.28939819]
[-508.70520020 446.37506104]
[-517.21368408 459.71356201]
[-532.08636475 458.90600586]
[-545.30737305 465.99163818]
[-545.71258545 481.34518433]
[-553.75402832 494.43072510]
[-567.26849365 501.72830200]
[-582.62066650 501.27490234]
[-595.68096924 493.19253540]
[-602.93615723 479.65524292]
[-602.43463135 464.30453491]
[-594.31134033 451.26968384]
[-580.75140381 444.05697632]
[-565.40234375 444.60659790]
[-552.39300537 452.77069092]
[-539.17205811 445.68505859]
[-531.60919189 432.85333252]
[-515.79083252 433.15411377]
[-502.56988525 426.06845093]
[-489.39117432 418.90457153]
[-476.25512695 411.66268921]
[-463.11911011 404.42080688]
[-455.70892334 391.50033569]
[-439.88812256 391.61355591]
[-426.75207520 384.37167358]
[-413.61605835 377.12979126]
[-400.48004150 369.88790894]
[-387.34402466 362.64602661]
[-383.46508789 348.31109619]
[-370.24645996 340.77969360]
[-355.23699951 344.94543457]
[-342.10098267 337.70355225]
[-328.96493530 330.46166992]
[-321.55474854 317.54122925]
[-305.73394775 317.65441895]
[-292.59790039 310.41253662]
[-279.46188354 303.17065430]
[-266.32586670 295.92877197]
[-264.80197144 279.56869507]
[-253.70677185 267.22497559]
[-237.27491760 263.90582275]
[-221.95721436 271.11682129]
[-208.90797424 263.71972656]
[-195.85871887 256.32260132]
[-182.80947876 248.92550659]
[-179.10076904 234.54562378]
[-165.97235107 226.85803223]
[-150.91455078 230.84555054]
[-137.86529541 223.44845581]
[-124.81604767 216.05136108]
[-111.76679993 208.65425110]
[-98.71754456 201.25715637]
[-97.06275177 188.49803162]
[-88.23706055 178.87095642]
[-75.28970337 176.03285217]
[-62.88764572 181.23564148]
[-49.75162125 173.99375916]
[-36.61559677 166.75187683]
[-23.47957230 159.50997925]
[-10.34354877 152.26809692]
[-2.93333983 139.34765625]
[12.88746166 139.46086121]
[26.02348518 132.21897888]
[39.15951157 124.97709656]
[52.29553223 117.73521423]
[48.46001434 105.20758820]
[47.91792679 91.88642883]
[50.82103729 78.63801575]
[57.09333038 66.35326385]
[66.42862701 55.88790131]
[59.10900879 42.79503250]
[51.78939056 29.70216751]
[44.46977234 16.60929871]
[31.46308136 5.73444986]
[38.31232834 -9.77439213]
[55.11113739 -7.48609066]
[57.56263733 9.28968048]
[64.88225555 22.38254738]
[72.20187378 35.47541428]
[79.52149963 48.56828308]
[94.08069611 44.95862579]
[94.43631744 29.96284294]
[82.27200317 20.51109123]
[78.05493927 5.87996769]
[83.20096588 -8.26154709]
[95.53963470 -16.56186295]
[95.89524841 -31.55764771]
[96.25086975 -46.55343246]
[96.60649109 -61.54921722]
[96.96210480 -76.54499817]
[83.04601288 -82.66143799]
[72.53349304 -93.64121246]
[67.02762604 -107.80997467]
[67.36801910 -123.00710297]
[73.50276184 -136.91513062]
[84.49635315 -147.41319275]
[98.67234802 -152.90042114]
[113.86901093 -152.54003906]
[127.76895905 -146.38700867]
[138.25256348 -135.37962341]
[143.72113037 -121.19641876]
[143.34075928 -106.00024414]
[137.16944885 -92.10839844]
[126.14826965 -81.63928986]
[111.95789337 -76.18937683]
[111.60227203 -61.19359589]
[111.24665070 -46.19781113]
[110.89103699 -31.20202827]
[110.53541565 -16.20624542]
[122.46675873 -7.33037567]
[126.93665314 7.03917646]
[122.03077698 21.45395279]
[109.43210602 30.31846237]
[109.07648468 45.31424713]
[120.63867188 49.36745834]
[130.87330627 55.79267120]
[139.31086731 64.20771027]
[145.58407593 74.14167023]
[149.44348145 85.06089020]
[150.76687622 96.39743042]
[165.72236633 97.55215454]
[180.67784119 98.70687866]
[195.63333130 99.86160278]
[210.58882141 101.01633453]
[224.96055603 96.72058868]
[236.82920837 87.54808044]
[248.69786072 78.37556458]
[260.56652832 69.20304871]
[272.43518066 60.03053284]
[284.30383301 50.85801697]
[289.15933228 43.16101837]
[296.36798096 41.64811325]
[308.34454346 32.61694336]
[314.24560547 17.31630325]
[330.48657227 15.04411125]
[340.36013794 28.13780212]
[333.70922852 43.12770844]
[317.37573242 44.59350204]
[305.39916992 53.62467194]
[293.47634888 62.72667313]
[281.60769653 71.89918518]
[269.73904419 81.07170105]
[257.87039185 90.24421692]
[246.00172424 99.41673279]
[234.13307190 108.58924866]
[238.76853943 122.85572815]
[243.40357971 137.12094116]
[258.39700317 137.56544495]
[273.39041138 138.00994873]
[288.38381958 138.45443726]
[303.37722778 138.89894104]
[318.37063599 139.34344482]
[333.36404419 139.78794861]
[337.85446167 125.37479401]
[346.06790161 112.70823669]
[357.39495850 102.72823334]
[370.99505615 96.17534637]
[385.85894775 93.53585815]
[400.88366699 95.00562286]
[414.95428467 100.47558594]
[427.02664185 109.53984070]
[436.20492554 121.52574921]
[441.80801392 135.54388428]
[443.42010498 150.55400085]
[440.92163086 165.44224548]
[434.49792480 179.10383606]
[424.62573242 190.52496338]
[412.03759766 198.85812378]
[397.66766357 203.48492432]
[382.58224487 204.06204224]
[367.90081787 200.54664612]
[354.71282959 193.19958496]
[343.99688721 182.56608582]
[336.54821777 169.43521118]
[332.91955566 154.78135681]
[317.92614746 154.33685303]
[302.93273926 153.89234924]
[287.93930054 153.44786072]
[272.94589233 153.00335693]
[257.95248413 152.55885315]
[242.95907593 152.11434937]
[240.22296143 159.09745789]
[254.18916321 164.56968689]
[268.15527344 170.04212952]
[262.68261719 184.00816345]
[248.71693420 178.53588867]
[234.75073242 173.06364441]
[232.01461792 180.04675293]
[243.31903076 189.90626526]
[254.62345886 199.76577759]
[265.92788696 209.62528992]
[281.83895874 215.47967529]
[280.61801147 232.38958740]
[264.03094482 235.89747620]
[256.06838989 220.92971802]
[244.76394653 211.07020569]
[233.45953369 201.21069336]
[222.15510559 191.35118103]
[207.77511597 195.61920166]
[192.83250427 194.30836487]
[179.41525269 187.60186768]
[169.39819336 176.43679810]
[164.18106079 162.37332153]
[164.49287415 147.37655640]
[170.29003906 133.54208374]
[180.76251221 122.80301666]
[194.44692993 116.65999603]
[209.43409729 115.97181702]
[194.47860718 114.81709290]
[179.52311707 113.66236877]
[164.56762695 112.50764465]
[149.61215210 111.35292053]
[141.93478394 128.83970642]
[128.35264587 142.26560974]
[110.77821350 149.74015808]
[91.68611908 150.21089172]
[73.76469421 143.61149597]
[59.53741837 130.87123108]
[46.40139389 138.11311340]
[33.26536942 145.35499573]
[20.12934494 152.59687805]
[11.77956009 166.03532410]
[-3.10166526 165.40412903]
[-16.23768997 172.64601135]
[-29.37371445 179.88789368]
[-42.50973892 187.12977600]
[-55.64576340 194.37165833]
[-60.21092987 211.27525330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[3 86]
[4 85]
[5 84]
[8 81]
[9 80]
[10 79]
[11 78]
[16 74]
[17 73]
[18 72]
[19 71]
[21 69]
[22 68]
[23 67]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[32 58]
[33 57]
[34 56]
[36 55]
[37 54]
[39 52]
[40 51]
[92 263]
[93 262]
[94 261]
[95 260]
[96 259]
[98 257]
[99 256]
[100 255]
[101 254]
[106 116]
[107 115]
[108 114]
[109 113]
[117 150]
[118 149]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[156 248]
[157 247]
[158 246]
[159 245]
[160 244]
[161 181]
[162 180]
[163 179]
[164 178]
[165 177]
[166 176]
[168 175]
[169 174]
[183 217]
[184 216]
[185 215]
[186 214]
[187 213]
[188 212]
[189 211]
[224 234]
[225 233]
[226 232]
[227 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
