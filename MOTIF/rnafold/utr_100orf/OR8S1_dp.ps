%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR8S1)
} def

/sequence { (\
AUGGCCUUGGGGAAUCACAGCACCAUCACCGAGUUCCUCCUCCUUGGGCUGUCUGCCGACCCCAACAUCCGGGCUCUGCUCUUUGUGCUGUUCCUGGGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 68 0.021600947 ubox
2 64 0.017681217 ubox
2 67 0.029121802 ubox
3 57 0.003283995 ubox
3 63 0.019623742 ubox
3 66 0.031112785 ubox
3 75 0.004522464 ubox
4 56 0.003286056 ubox
4 62 0.019612419 ubox
4 68 0.005406115 ubox
4 74 0.005105168 ubox
5 55 0.003273984 ubox
5 73 0.005108499 ubox
5 97 0.021572578 ubox
5 98 0.118557818 ubox
5 99 0.900796067 ubox
6 72 0.005105409 ubox
6 96 0.021617698 ubox
6 97 0.118864200 ubox
6 98 0.903561485 ubox
6 99 0.397007358 ubox
7 59 0.019420886 ubox
7 65 0.083281515 ubox
7 71 0.004425964 ubox
7 96 0.109571255 ubox
7 97 0.888515484 ubox
7 98 0.398102938 ubox
8 58 0.019664917 ubox
8 64 0.096412081 ubox
8 96 0.846878187 ubox
8 97 0.423786038 ubox
9 57 0.019701259 ubox
9 63 0.098548646 ubox
9 94 0.043626423 ubox
9 95 0.851268192 ubox
10 56 0.019627248 ubox
10 62 0.098549921 ubox
10 93 0.043544035 ubox
10 94 0.849146925 ubox
10 95 0.502266515 ubox
11 54 0.013774114 ubox
11 57 0.003829572 ubox
11 61 0.098527016 ubox
11 92 0.042918391 ubox
11 93 0.842993538 ubox
11 94 0.516568246 ubox
12 53 0.015264832 ubox
12 56 0.004352376 ubox
12 60 0.098286166 ubox
12 91 0.016274535 ubox
12 92 0.825714165 ubox
12 93 0.526497253 ubox
13 52 0.011591731 ubox
13 91 0.482871537 ubox
13 92 0.533507487 ubox
14 91 0.263156486 ubox
15 59 0.052465298 ubox
15 90 0.096854976 ubox
16 55 0.044845158 ubox
16 58 0.055045455 ubox
16 85 0.005726123 ubox
16 87 0.021684606 ubox
16 90 0.033258095 ubox
17 52 0.097537507 ubox
17 54 0.029561232 ubox
17 84 0.003634661 ubox
17 86 0.021111879 ubox
17 89 0.022886332 ubox
17 91 0.822452624 ubox
18 51 0.105752598 ubox
18 55 0.008945439 ubox
18 85 0.020802364 ubox
18 90 0.988705601 ubox
19 50 0.106032446 ubox
19 54 0.008948204 ubox
19 80 0.011571963 ubox
19 84 0.015773852 ubox
19 89 0.993411623 ubox
20 49 0.106207578 ubox
20 53 0.008881090 ubox
20 56 0.004491576 ubox
20 79 0.016322186 ubox
20 83 0.007967194 ubox
20 86 0.004024917 ubox
20 88 0.994079678 ubox
21 48 0.106129567 ubox
21 51 0.007071410 ubox
21 55 0.004496691 ubox
21 78 0.016366828 ubox
21 85 0.004269138 ubox
21 87 0.994060281 ubox
22 50 0.006885040 ubox
22 52 0.005219761 ubox
22 54 0.004346058 ubox
22 77 0.015681218 ubox
22 84 0.004207076 ubox
22 86 0.992918331 ubox
23 47 0.106275086 ubox
23 48 0.005596161 ubox
23 51 0.005112690 ubox
23 85 0.957510069 ubox
24 46 0.113534738 ubox
24 47 0.005754661 ubox
24 51 0.054693803 ubox
24 78 0.050240705 ubox
24 85 0.231335489 ubox
24 87 0.005145819 ubox
25 34 0.004184366 ubox
25 45 0.112035005 ubox
25 50 0.053345484 ubox
25 52 0.015359400 ubox
25 54 0.004074430 ubox
25 77 0.049348379 ubox
25 84 0.320802639 ubox
25 86 0.009895768 ubox
26 32 0.009800555 ubox
26 33 0.004167720 ubox
26 47 0.015628151 ubox
26 48 0.005826027 ubox
26 51 0.015350019 ubox
26 85 0.007704260 ubox
27 31 0.011423836 ubox
27 46 0.121701060 ubox
27 47 0.005306112 ubox
27 51 0.020094318 ubox
27 55 0.004003454 ubox
27 78 0.158299287 ubox
27 85 0.103524514 ubox
27 87 0.004478666 ubox
28 34 0.006652635 ubox
28 45 0.120104145 ubox
28 50 0.019028768 ubox
28 52 0.011726277 ubox
28 54 0.005900409 ubox
28 77 0.147084222 ubox
28 84 0.149761196 ubox
28 86 0.008844306 ubox
29 33 0.007040738 ubox
29 47 0.116016301 ubox
29 48 0.013213173 ubox
29 51 0.012220346 ubox
29 72 0.009493268 ubox
29 73 0.004395254 ubox
29 85 0.011320510 ubox
30 46 0.132066447 ubox
30 47 0.012510701 ubox
30 51 0.015813209 ubox
30 71 0.009535506 ubox
30 72 0.004389778 ubox
30 78 0.444562448 ubox
30 85 0.003519090 ubox
31 39 0.123904077 ubox
31 42 0.227432267 ubox
31 45 0.131116529 ubox
31 50 0.008396770 ubox
31 53 0.021853179 ubox
31 69 0.004464347 ubox
31 70 0.007005841 ubox
31 76 0.823107943 ubox
31 77 0.096494488 ubox
31 81 0.365046693 ubox
31 83 0.007208847 ubox
31 84 0.003521186 ubox
32 38 0.124030282 ubox
32 41 0.227864405 ubox
32 44 0.131176656 ubox
32 45 0.006163532 ubox
32 50 0.046479744 ubox
32 52 0.021089973 ubox
32 54 0.012452217 ubox
32 68 0.004982914 ubox
32 75 0.828315281 ubox
32 77 0.289959367 ubox
32 80 0.365697985 ubox
32 82 0.007332921 ubox
33 37 0.121336624 ubox
33 40 0.226554089 ubox
33 43 0.130521630 ubox
33 44 0.005143207 ubox
33 49 0.048951475 ubox
33 53 0.012795979 ubox
33 66 0.005360163 ubox
33 68 0.003279753 ubox
33 74 0.827913257 ubox
33 76 0.296623638 ubox
33 79 0.365725406 ubox
33 81 0.007248813 ubox
34 48 0.035891628 ubox
34 51 0.003854986 ubox
34 65 0.004913427 ubox
34 67 0.003253980 ubox
34 73 0.682928143 ubox
34 78 0.361858762 ubox
35 47 0.013003775 ubox
35 48 0.037722027 ubox
35 71 0.003320485 ubox
35 72 0.531112597 ubox
35 73 0.419848609 ubox
36 46 0.013180234 ubox
36 47 0.054485805 ubox
36 48 0.011309458 ubox
36 71 0.525012990 ubox
36 72 0.589918574 ubox
36 73 0.389128393 ubox
37 46 0.061053662 ubox
37 47 0.011295778 ubox
37 48 0.008628181 ubox
37 71 0.590533277 ubox
37 72 0.396574884 ubox
37 73 0.113599199 ubox
38 46 0.010224484 ubox
38 47 0.005769913 ubox
38 48 0.018294617 ubox
38 71 0.379381197 ubox
38 72 0.110344422 ubox
38 73 0.150589805 ubox
39 46 0.012603777 ubox
39 47 0.028294681 ubox
39 48 0.007725282 ubox
39 71 0.123237780 ubox
39 72 0.182635199 ubox
39 73 0.247302207 ubox
40 46 0.039522296 ubox
40 47 0.008061193 ubox
40 48 0.003489497 ubox
40 71 0.182731440 ubox
40 72 0.247648994 ubox
40 73 0.047586387 ubox
41 46 0.007602280 ubox
41 47 0.003540960 ubox
41 59 0.003779491 ubox
41 71 0.237604768 ubox
41 72 0.037617802 ubox
41 73 0.049107252 ubox
42 46 0.007382621 ubox
42 58 0.004030680 ubox
42 71 0.050433684 ubox
42 72 0.066506492 ubox
42 73 0.022214515 ubox
43 71 0.067137715 ubox
43 72 0.022388072 ubox
43 73 0.004312835 ubox
44 59 0.013741249 ubox
44 65 0.886979623 ubox
44 71 0.019345275 ubox
44 72 0.004471402 ubox
45 58 0.014606260 ubox
45 64 0.959738627 ubox
45 67 0.017793358 ubox
45 71 0.005867258 ubox
46 53 0.004239036 ubox
46 54 0.005054025 ubox
46 57 0.016882306 ubox
46 61 0.007295068 ubox
46 62 0.032841409 ubox
46 63 0.966406819 ubox
46 66 0.015852050 ubox
46 70 0.009109769 ubox
46 81 0.016986034 ubox
47 52 0.003934323 ubox
47 53 0.005888796 ubox
47 54 0.003547102 ubox
47 56 0.015157847 ubox
47 57 0.184611230 ubox
47 60 0.005549566 ubox
47 61 0.034239199 ubox
47 62 0.966266556 ubox
47 63 0.019571759 ubox
47 69 0.009045374 ubox
47 70 0.005703244 ubox
47 80 0.017404993 ubox
48 52 0.004239406 ubox
48 53 0.007606766 ubox
48 56 0.191776025 ubox
48 60 0.034605923 ubox
48 61 0.961104464 ubox
48 62 0.020213073 ubox
48 68 0.008801309 ubox
48 69 0.005838256 ubox
48 79 0.019630695 ubox
48 86 0.007066215 ubox
49 55 0.192454233 ubox
49 78 0.019621807 ubox
49 85 0.007968866 ubox
50 58 0.049586933 ubox
50 67 0.010538190 ubox
51 57 0.052766285 ubox
51 60 0.954484502 ubox
51 66 0.010636537 ubox
51 74 0.011302611 ubox
51 84 0.008001934 ubox
52 59 0.963833577 ubox
52 65 0.010368637 ubox
52 73 0.011305951 ubox
53 58 0.962185801 ubox
53 72 0.011230397 ubox
54 64 0.008470507 ubox
54 71 0.011198401 ubox
55 63 0.008560351 ubox
55 70 0.010862268 ubox
55 74 0.015545066 ubox
55 79 0.126532820 ubox
56 72 0.008049212 ubox
56 73 0.015257560 ubox
56 78 0.126666729 ubox
57 71 0.008671330 ubox
57 72 0.014926467 ubox
57 78 0.008929882 ubox
58 69 0.020923056 ubox
58 70 0.009944254 ubox
58 76 0.216817786 ubox
58 77 0.004363293 ubox
58 81 0.007461124 ubox
59 68 0.020741473 ubox
59 75 0.214711461 ubox
59 80 0.007389868 ubox
60 72 0.004296760 ubox
60 73 0.141554252 ubox
60 99 0.004483113 ubox
61 71 0.004355488 ubox
61 72 0.141735724 ubox
61 73 0.175260939 ubox
61 98 0.004504456 ubox
62 71 0.141564108 ubox
62 72 0.175751223 ubox
62 73 0.005107015 ubox
62 97 0.004497164 ubox
63 71 0.175762854 ubox
63 72 0.005224727 ubox
63 96 0.004487788 ubox
64 95 0.004273528 ubox
65 86 0.009097500 ubox
66 85 0.011860899 ubox
67 84 0.013252937 ubox
68 98 0.068750170 ubox
68 99 0.005051472 ubox
68 100 0.003381718 ubox
69 97 0.099855376 ubox
69 98 0.007054388 ubox
69 99 0.003696933 ubox
70 78 0.006206014 ubox
70 96 0.100145064 ubox
70 97 0.005866112 ubox
70 98 0.003549454 ubox
71 77 0.006387030 ubox
71 80 0.007237882 ubox
71 81 0.179574091 ubox
71 82 0.013875401 ubox
71 94 0.005258256 ubox
71 95 0.100110946 ubox
72 76 0.006274255 ubox
72 79 0.008044586 ubox
72 80 0.180596076 ubox
72 81 0.014784441 ubox
72 93 0.005297958 ubox
72 94 0.100212204 ubox
72 95 0.003488081 ubox
73 79 0.181512716 ubox
73 80 0.005213449 ubox
73 91 0.005294117 ubox
73 92 0.004360073 ubox
73 93 0.099975921 ubox
73 94 0.003470732 ubox
74 78 0.180234098 ubox
74 90 0.011519201 ubox
77 87 0.009772811 ubox
77 90 0.004038502 ubox
78 84 0.006995584 ubox
78 86 0.019201485 ubox
78 88 0.100419110 ubox
78 91 0.003425832 ubox
79 85 0.020543087 ubox
79 87 0.100456140 ubox
79 90 0.003527573 ubox
93 99 0.003492407 ubox
94 98 0.003469738 ubox
5 99 0.9500000 lbox
6 98 0.9500000 lbox
7 97 0.9500000 lbox
8 96 0.9500000 lbox
9 95 0.9500000 lbox
10 94 0.9500000 lbox
11 93 0.9500000 lbox
12 92 0.9500000 lbox
17 91 0.9500000 lbox
18 90 0.9500000 lbox
19 89 0.9500000 lbox
20 88 0.9500000 lbox
21 87 0.9500000 lbox
22 86 0.9500000 lbox
23 85 0.9500000 lbox
31 76 0.9500000 lbox
32 75 0.9500000 lbox
33 74 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
