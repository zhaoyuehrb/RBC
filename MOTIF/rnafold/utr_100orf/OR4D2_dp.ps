%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR4D2)
} def

/sequence { (\
AUGGAAACAGGGAACCUCACGUGGGUAUCAGACUUUGUCUUCCUGGGGCUCUCGCAGACUCGGGAGCUCCAGCGUUUCCUGUUUCUAAUGUUCCUGUUUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 89 0.136006818 ubox
1 91 0.029400300 ubox
1 97 0.008339672 ubox
2 87 0.899884858 ubox
2 88 0.105164858 ubox
2 90 0.026527298 ubox
2 96 0.007641824 ubox
3 85 0.010847132 ubox
3 86 0.990238528 ubox
3 89 0.006591529 ubox
3 94 0.015975816 ubox
4 84 0.008264822 ubox
4 85 0.999716182 ubox
4 93 0.015651038 ubox
5 83 0.006886229 ubox
5 84 0.999423308 ubox
5 92 0.014899271 ubox
5 99 0.005748815 ubox
6 82 0.004956928 ubox
6 83 0.998558854 ubox
6 91 0.010472727 ubox
6 98 0.006037005 ubox
7 82 0.999450384 ubox
7 97 0.006114112 ubox
8 81 0.999956190 ubox
8 96 0.006132780 ubox
9 80 0.999715109 ubox
9 95 0.006119240 ubox
10 79 0.999887043 ubox
10 80 0.006313863 ubox
10 94 0.006083655 ubox
11 29 0.005184968 ubox
11 78 0.999773298 ubox
11 79 0.012744779 ubox
11 93 0.006042134 ubox
12 28 0.009383307 ubox
12 29 0.069368415 ubox
12 42 0.003561498 ubox
12 76 0.009999623 ubox
12 77 0.994920436 ubox
12 78 0.016833698 ubox
12 92 0.005506377 ubox
13 28 0.069033909 ubox
13 41 0.003462761 ubox
13 75 0.013071169 ubox
13 76 0.991696815 ubox
13 77 0.019391761 ubox
13 91 0.005006568 ubox
14 22 0.007998924 ubox
14 26 0.228120340 ubox
14 75 0.963882771 ubox
14 76 0.013908069 ubox
15 21 0.008716382 ubox
15 24 0.171828318 ubox
15 25 0.249542384 ubox
15 74 0.948106530 ubox
16 23 0.211936976 ubox
16 24 0.270485543 ubox
16 25 0.766583407 ubox
16 31 0.031579093 ubox
16 72 0.150693341 ubox
17 23 0.237331993 ubox
17 24 0.770934863 ubox
17 25 0.067294557 ubox
17 30 0.031810727 ubox
17 32 0.015741026 ubox
17 71 0.115602008 ubox
18 23 0.775819828 ubox
18 24 0.088488227 ubox
18 31 0.017051475 ubox
18 37 0.027021868 ubox
19 26 0.291669227 ubox
19 36 0.026583459 ubox
19 38 0.226873333 ubox
19 44 0.003228565 ubox
19 75 0.032451671 ubox
20 25 0.306065244 ubox
20 37 0.242444471 ubox
20 45 0.006321791 ubox
20 74 0.036561589 ubox
21 28 0.025435492 ubox
21 33 0.027311570 ubox
21 36 0.231371936 ubox
21 38 0.006019061 ubox
21 44 0.012794160 ubox
21 73 0.041971114 ubox
22 27 0.025389848 ubox
22 30 0.060995751 ubox
22 32 0.026912093 ubox
22 37 0.005410905 ubox
22 45 0.003770078 ubox
22 72 0.034226597 ubox
23 29 0.096951709 ubox
23 34 0.211250832 ubox
23 35 0.115344100 ubox
23 36 0.007276747 ubox
23 39 0.008885361 ubox
23 40 0.036993558 ubox
23 41 0.022426654 ubox
23 42 0.029697982 ubox
23 43 0.165705784 ubox
23 44 0.084085135 ubox
23 73 0.008013025 ubox
24 28 0.063065039 ubox
24 33 0.213077341 ubox
24 34 0.142830064 ubox
24 35 0.007254659 ubox
24 38 0.007706832 ubox
24 39 0.040832528 ubox
24 40 0.030011586 ubox
24 41 0.029471440 ubox
24 42 0.173052881 ubox
24 43 0.098780738 ubox
24 44 0.008539131 ubox
25 33 0.145570210 ubox
25 34 0.005459401 ubox
25 38 0.038707079 ubox
25 39 0.031652025 ubox
25 40 0.015243053 ubox
25 41 0.169432423 ubox
25 42 0.101017692 ubox
25 43 0.010388625 ubox
25 73 0.009224216 ubox
26 32 0.142749957 ubox
26 37 0.047279128 ubox
26 72 0.005638657 ubox
27 36 0.049617866 ubox
27 38 0.022881890 ubox
27 44 0.003265733 ubox
28 37 0.017888913 ubox
29 37 0.102691582 ubox
30 36 0.100296539 ubox
30 40 0.883759185 ubox
30 41 0.041361568 ubox
30 44 0.003525374 ubox
31 35 0.068126572 ubox
31 39 0.945896693 ubox
31 40 0.011813489 ubox
31 41 0.009100386 ubox
31 42 0.060803106 ubox
31 43 0.003825358 ubox
31 76 0.003486830 ubox
32 38 0.945018470 ubox
32 40 0.009312804 ubox
32 41 0.059933433 ubox
32 75 0.003912959 ubox
33 37 0.935707954 ubox
33 74 0.003965042 ubox
36 74 0.004188629 ubox
37 73 0.014832206 ubox
38 72 0.007715146 ubox
39 72 0.003174831 ubox
43 72 0.965078225 ubox
44 71 0.987918983 ubox
45 70 0.999914881 ubox
46 69 0.999939201 ubox
46 70 0.007146230 ubox
47 68 0.999323199 ubox
47 69 0.007318504 ubox
48 67 0.999987006 ubox
49 66 0.999989808 ubox
50 65 0.999848742 ubox
51 64 0.999978244 ubox
52 63 0.999285860 ubox
53 62 0.999733442 ubox
53 63 0.010363478 ubox
54 61 0.958707315 ubox
73 90 0.004169863 ubox
74 89 0.004215111 ubox
75 88 0.004211733 ubox
76 87 0.004102907 ubox
86 96 0.004397397 ubox
86 100 0.006986169 ubox
87 95 0.007449257 ubox
87 98 0.052900415 ubox
87 99 0.018745307 ubox
88 97 0.088274697 ubox
88 98 0.025131795 ubox
89 96 0.088819543 ubox
89 100 0.017944583 ubox
90 95 0.052391112 ubox
90 97 0.015653229 ubox
90 99 0.037093955 ubox
91 96 0.025330836 ubox
2 87 0.9500000 lbox
3 86 0.9500000 lbox
4 85 0.9500000 lbox
5 84 0.9500000 lbox
6 83 0.9500000 lbox
7 82 0.9500000 lbox
8 81 0.9500000 lbox
9 80 0.9500000 lbox
10 79 0.9500000 lbox
11 78 0.9500000 lbox
12 77 0.9500000 lbox
13 76 0.9500000 lbox
14 75 0.9500000 lbox
15 74 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
43 72 0.9500000 lbox
44 71 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
49 66 0.9500000 lbox
50 65 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
showpage
end
%%EOF
