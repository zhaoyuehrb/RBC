%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGACCAAGCAUUCAGCAAGCCACUCUUCCACCUCCCUUACUGCAGGAAGGCACUCCGAAGACAUAAGUCGGUGAGACAUGGCUGAAGAUAAAAGCAAGAGAGACUCCAUCGAGAUGAGUAUGAAGGGAUGCCAGACAAACAACGGGUUUGUCCAUAAUGAAGACAUUCUGGAGCAGA\
) } def
/len { sequence length } bind def

/coor [
[77.06061554 449.85598755]
[62.78457260 455.25573730]
[47.58018494 453.91806030]
[34.46629715 446.10852051]
[26.04667664 433.37774658]
[23.99304771 418.25341797]
[28.71315956 403.73849487]
[39.26982880 392.71490479]
[53.56702423 387.37139893]
[54.88164520 372.42913818]
[52.32828903 365.47018433]
[56.35271072 357.23690796]
[57.92936325 342.32000732]
[59.50601959 327.40310669]
[61.08267212 312.48620605]
[62.65932846 297.56927490]
[60.22849274 290.56661987]
[64.39678955 282.40524292]
[66.23498535 267.51831055]
[57.93618393 261.39233398]
[52.90314102 252.29605103]
[52.10918045 241.84941101]
[55.76572037 231.94514465]
[63.27168655 224.40588379]
[73.31124115 220.64880371]
[75.93036652 205.87924194]
[78.54949188 191.10966492]
[81.16861725 176.34010315]
[83.78774261 161.57052612]
[78.64980316 156.10687256]
[74.32430267 170.46966553]
[59.72297668 173.90496826]
[49.44733429 162.97743225]
[53.77314758 148.61473083]
[68.37392426 145.17955017]
[63.23598099 139.71589661]
[48.33348083 141.42338562]
[33.43098450 143.13087463]
[23.79790497 155.66001892]
[8.11624336 157.62496948]
[-4.31034946 147.85997009]
[-6.10939741 132.15840149]
[3.78644323 119.83575439]
[19.50614548 118.20281219]
[31.72348976 128.22837830]
[46.62598801 126.52088928]
[61.52848816 124.81339264]
[59.53819275 96.69348145]
[73.75064087 76.22787476]
[94.57275391 70.26007843]
[95.62493896 55.29703140]
[96.67711639 40.33398056]
[97.72930145 25.37092781]
[90.97908020 11.06201077]
[99.59008789 -1.09117377]
[100.64226532 -16.05422592]
[101.69445038 -31.01727676]
[87.90458679 -40.11540985]
[80.61863708 -54.83821487]
[81.73668671 -71.13310242]
[90.85987854 -84.56758881]
[105.42474365 -91.53503418]
[106.21416473 -106.51424408]
[99.21386719 -120.70249176]
[107.61025238 -133.00492859]
[108.39967346 -147.98414612]
[98.10613251 -159.67520142]
[99.12010193 -174.85501099]
[110.32917023 -184.59626770]
[111.11859131 -199.57548523]
[111.90801239 -214.55470276]
[112.69743347 -229.53390503]
[113.48685455 -244.51312256]
[114.27627563 -259.49234009]
[114.93421936 -274.47790527]
[115.46063995 -289.46865845]
[99.36219025 -297.35333252]
[88.35040283 -311.43093872]
[84.59640503 -328.85104370]
[88.80766296 -346.11196899]
[100.09523010 -359.76449585]
[116.16088104 -367.10119629]
[115.89763641 -382.09890747]
[115.63438416 -397.09658813]
[102.45790863 -405.12054443]
[95.73178864 -419.00445557]
[97.60231018 -434.31799316]
[107.47258759 -446.17468262]
[122.19306183 -450.79110718]
[137.06648254 -446.69415283]
[147.34678650 -435.19113159]
[149.75357056 -419.95266724]
[143.51884460 -405.84127808]
[130.63208008 -397.35983276]
[130.89532471 -382.36215210]
[131.15856934 -367.36444092]
[142.79963684 -363.45416260]
[152.69268799 -356.13745117]
[159.86904907 -346.11196899]
[163.62030029 -334.34155273]
[163.56816101 -321.96343994]
[159.70263672 -310.17852783]
[152.38441467 -300.13467407]
[142.31121826 -292.81518555]
[130.45140076 -288.94223022]
[129.92498779 -273.95147705]
[132.84103394 -267.13656616]
[129.25549316 -258.70291138]
[128.46606445 -243.72370911]
[127.67665100 -228.74449158]
[126.88722992 -213.76527405]
[126.09780884 -198.78607178]
[125.30838776 -183.80685425]
[135.43145752 -172.94136047]
[134.84425354 -157.73905945]
[123.37888336 -147.19471741]
[122.58946991 -132.21551514]
[129.64622498 -119.09867096]
[121.19337463 -105.72482300]
[120.40395355 -90.74561310]
[132.33340454 -84.06507874]
[140.25360107 -72.83891296]
[142.56913757 -59.22940826]
[138.77091980 -45.88824081]
[129.54673767 -35.43983078]
[116.65750122 -29.96509361]
[115.60531616 -15.00204182]
[114.55313873 -0.03899068]
[121.37861633 13.19966793]
[112.69235229 26.42311096]
[111.64017487 41.38616180]
[110.58798981 56.34921265]
[109.53580475 71.31226349]
[137.32090759 92.82009888]
[129.52806091 134.98364258]
[143.65814209 140.01762390]
[157.78822327 145.05160522]
[171.91828918 150.08557129]
[186.04837036 155.11955261]
[200.17845154 160.15353394]
[214.30851746 165.18751526]
[229.36007690 159.63500977]
[243.01054382 168.06378174]
[244.78845215 184.00802612]
[233.32994080 195.23664856]
[217.42500305 193.13603210]
[209.27455139 179.31758118]
[195.14447021 174.28361511]
[181.01438904 169.24963379]
[166.88430786 164.21565247]
[152.75424194 159.18167114]
[138.62416077 154.14770508]
[124.49408722 149.11372375]
[118.00988770 152.88270569]
[131.02209473 160.34477234]
[131.06576538 175.34471130]
[118.09720612 182.88238525]
[105.08515930 175.42004395]
[105.04150391 160.42066956]
[98.55731201 164.18965149]
[95.93818665 178.95922852]
[93.31906128 193.72879028]
[90.69993591 208.49836731]
[88.08081055 223.26792908]
[100.45416260 239.06329346]
[97.31705475 258.57333374]
[81.12193298 269.35650635]
[79.28372955 284.24343872]
[77.57623291 299.14593506]
[75.99958038 314.06283569]
[74.42292786 328.97976685]
[72.84627533 343.89666748]
[71.26962280 358.81356812]
[69.82392883 373.74374390]
[68.50930786 388.68603516]
[81.65384674 396.44384766]
[90.12353516 409.14135742]
[92.23670959 424.25750732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 175]
[10 174]
[12 173]
[13 172]
[14 171]
[15 170]
[16 169]
[18 168]
[19 167]
[25 164]
[26 163]
[27 162]
[28 161]
[29 160]
[36 47]
[37 46]
[38 45]
[50 133]
[51 132]
[52 131]
[53 130]
[55 128]
[56 127]
[57 126]
[62 120]
[63 119]
[65 117]
[66 116]
[69 113]
[70 112]
[71 111]
[72 110]
[73 109]
[74 108]
[75 106]
[76 105]
[82 96]
[83 95]
[84 94]
[135 153]
[136 152]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
