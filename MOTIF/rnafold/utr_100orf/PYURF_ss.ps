%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGGCGGGGCCUGCCCGGCUGGCCUGGACGAACGGGAAGCCGGGAGCUCGGCCACGGGUGGCGAGGCUGCGGUGAGGCCUGGUCUCCGGCUGCCAGACCAUGCUGAGUGGAGCACGCUGCAGGCUCGCCUCAGCGCUGCGGGGAACGCGCGCGCCGCCGUCCGCGGUCGCCCGUAGGUGCCUGCACGCGUCGGGGUCGC\
) } def
/len { sequence length } bind def

/coor [
[185.91860962 245.08058167]
[183.82597351 242.19300842]
[182.67811584 238.40393066]
[182.81202698 234.04745483]
[175.24478149 221.09613037]
[167.67755127 208.14480591]
[160.11030579 195.19348145]
[152.54306030 182.24215698]
[144.97581482 169.29083252]
[137.30809021 156.39874268]
[129.54034424 143.56666565]
[121.77259827 130.73458862]
[110.02984619 134.86190796]
[98.04481506 134.83209229]
[87.19383240 130.95329285]
[78.62377167 123.95886993]
[66.29943848 132.50935364]
[53.97510147 141.05982971]
[41.65076828 149.61032104]
[29.32643318 158.16079712]
[17.00209808 166.71128845]
[4.67776346 175.26176453]
[1.61731708 187.79647827]
[-8.82973194 194.66371155]
[-20.75969505 192.63578796]
[-33.21551514 200.99357605]
[-45.67133331 209.35136414]
[-58.12715530 217.70913696]
[-60.93398285 233.26219177]
[-73.96383667 242.20637512]
[-89.48634338 239.23526001]
[-98.29226685 226.11157227]
[-95.15721130 210.62135315]
[-81.94114685 201.95466614]
[-66.48493958 205.25332642]
[-54.02911758 196.89553833]
[-41.57329941 188.53775024]
[-29.11747932 180.17997742]
[-22.25088501 164.03349304]
[-3.87272048 162.93743896]
[8.45161438 154.38694763]
[20.77594948 145.83647156]
[33.10028458 137.28598022]
[45.42461777 128.73550415]
[57.74895477 120.18501282]
[70.07328796 111.63452911]
[65.26687622 102.38190460]
[63.50054169 91.30570984]
[48.61649704 89.44422913]
[33.73244858 87.58274841]
[18.84840012 85.72126007]
[3.96435118 83.85977936]
[-10.92697334 90.72858429]
[-24.16325569 81.04701233]
[-22.12814140 64.77463531]
[-6.91518307 58.65107727]
[5.82583237 68.97573090]
[20.70988083 70.83721161]
[35.59392929 72.69869995]
[50.47797775 74.56018066]
[65.36202240 76.42166138]
[75.88582611 65.73290253]
[73.79309845 50.87960052]
[71.70037079 36.02630234]
[69.60763550 21.17300415]
[67.51490784 6.31970501]
[65.42218018 -8.53359318]
[55.83521271 -21.11932755]
[61.72119141 -34.80159760]
[59.62845993 -49.65489578]
[57.53573227 -64.50819397]
[55.44300079 -79.36149597]
[53.35027313 -94.21479034]
[51.25754166 -109.06809235]
[49.16481018 -123.92138672]
[47.07208252 -138.77468872]
[26.37865448 -135.13903809]
[4.36125994 -153.10711670]
[-0.89063704 -167.15765381]
[-12.96999073 -177.37527466]
[-10.17859650 -192.00598145]
[-15.43049335 -206.05651855]
[-20.68239021 -220.10705566]
[-25.93428802 -234.15759277]
[-31.18618393 -248.20812988]
[-46.17398834 -252.22625732]
[-55.91138840 -264.30776978]
[-56.65415955 -279.80703735]
[-48.11668396 -292.76431274]
[-33.58180237 -298.19726562]
[-18.63846970 -294.01678467]
[-9.03270245 -281.83035278]
[-8.45811462 -266.32394409]
[-17.13564682 -253.46002197]
[-11.88374996 -239.40948486]
[-6.63185358 -225.35894775]
[-1.37995696 -211.30841064]
[3.87193990 -197.25787354]
[15.57564259 -188.04524231]
[13.15989971 -172.40956116]
[18.41179657 -158.35902405]
[25.90363503 -158.70881653]
[48.37915039 -159.75822449]
[52.29897690 -174.23699951]
[56.21880722 -188.71577454]
[60.13863373 -203.19454956]
[52.05560684 -216.77543640]
[56.02409744 -232.07336426]
[69.68967438 -240.01235962]
[84.94478607 -235.88235474]
[92.73885345 -222.13360596]
[88.44779205 -206.92300415]
[74.61740875 -199.27473450]
[70.69757843 -184.79595947]
[66.77775574 -170.31718445]
[62.85792542 -155.83839417]
[61.92538071 -140.86741638]
[64.01811218 -126.01412201]
[66.11083984 -111.16082001]
[68.20356750 -96.30751801]
[70.29630280 -81.45422363]
[72.38903046 -66.60092163]
[74.48175812 -51.74762726]
[76.57449341 -36.89432526]
[86.01177216 -25.37100029]
[80.27547455 -10.62632370]
[82.36820221 4.22697496]
[84.46093750 19.08027458]
[86.55366516 33.93357086]
[88.64639282 48.78687286]
[90.73912811 63.64017105]
[106.32506561 62.97965622]
[120.84761810 68.71737671]
[131.79429626 79.87377167]
[137.26591492 94.53070831]
[151.91175842 91.29044342]
[166.55760193 88.05017853]
[181.20343018 84.80990601]
[188.91311646 79.89725494]
[196.10218811 81.63500977]
[210.79666138 78.62290192]
[225.49111938 75.61079407]
[235.49084473 63.06547165]
[251.53327942 63.20578003]
[261.31204224 75.92407990]
[257.32571411 91.46398926]
[242.63224792 97.90460968]
[228.50321960 90.30525970]
[213.80876160 93.31736755]
[199.11430359 96.32946777]
[184.44371033 99.45574951]
[169.79786682 102.69602203]
[155.15202332 105.93628693]
[140.50617981 109.17655182]
[134.60467529 122.96685028]
[142.37242126 135.79891968]
[150.14016724 148.63099670]
[157.26658630 154.35702515]
[157.92713928 161.72358704]
[165.49438477 174.67491150]
[173.06163025 187.62623596]
[180.62887573 200.57756042]
[188.19610596 213.52888489]
[195.76335144 226.48022461]
[203.72972107 239.18994141]
[212.08750916 251.64575195]
[220.44529724 264.10159302]
[228.80307007 276.55740356]
[239.58770752 278.04031372]
[247.60806274 285.07214355]
[250.37213135 295.14663696]
[247.19912720 304.86907959]
[255.16549683 317.57879639]
[263.13186646 330.28851318]
[271.09823608 342.99822998]
[287.98382568 343.92343140]
[300.86459351 354.62265015]
[304.79318237 370.72906494]
[298.41445923 385.85122681]
[306.57751465 398.43551636]
[314.74057007 411.01980591]
[329.58639526 417.98641968]
[330.70626831 434.34729004]
[316.94818115 443.27175903]
[302.46524048 435.57913208]
[302.15628052 419.18289185]
[293.99322510 406.59860229]
[285.83016968 394.01431274]
[272.48608398 394.54812622]
[260.52566528 388.36743164]
[253.12373352 376.99243164]
[252.30436707 363.33743286]
[258.38851929 350.96459961]
[250.42213440 338.25488281]
[242.45576477 325.54516602]
[234.48941040 312.83544922]
[216.78825378 305.06405640]
[216.34725952 284.91519165]
[207.98947144 272.45935059]
[199.63168335 260.00354004]
[191.27391052 247.54772949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[9 159]
[10 157]
[11 156]
[12 155]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[25 38]
[26 37]
[27 36]
[28 35]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[78 101]
[79 100]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[103 116]
[104 115]
[105 114]
[106 113]
[135 154]
[136 153]
[137 152]
[138 151]
[140 150]
[141 149]
[142 148]
[165 201]
[166 200]
[167 199]
[168 198]
[172 196]
[173 195]
[174 194]
[175 193]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
