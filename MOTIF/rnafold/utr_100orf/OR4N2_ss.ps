%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAAGGUACUAGCUCUUCUUUAUGCAUCUGGUAGAACUCAGCUGUGAAUUCCUGUGAUCCUGGGCUUUUUCUGGCCAGGGAAAUGGAAAGCGAGAACAGAACAGUGAUAAGAGAAUUCAUCCUCCUUGGUCUGACCCAGUCUCAAGAUAUUCAGCUCCUGGUCUUUGUGCUAGUUUUAAUAU\
) } def
/len { sequence length } bind def

/coor [
[-19.24971390 513.49066162]
[-32.25411224 511.74688721]
[-37.96493530 525.61724854]
[-43.67575836 539.48760986]
[-49.38657761 553.35791016]
[-47.48600006 569.06457520]
[-59.48614502 577.88757324]
[-65.19696808 591.75793457]
[-70.90779114 605.62829590]
[-68.19764709 621.80194092]
[-81.01979828 632.02563477]
[-96.18392181 625.78216553]
[-98.09046173 609.49420166]
[-84.77813721 599.91748047]
[-79.06731415 586.04711914]
[-73.35649109 572.17675781]
[-75.66555023 557.46221924]
[-63.25692749 547.64709473]
[-57.54610443 533.77679443]
[-51.83528137 519.90643311]
[-46.12446213 506.03607178]
[-59.20535660 495.40197754]
[-68.39093018 481.24490356]
[-72.78131104 464.93148804]
[-71.94017029 448.04067993]
[-65.93807983 432.21072388]
[-55.34670258 418.98037720]
[-41.18437958 409.63937378]
[-24.81822586 405.10256958]
[-7.83215952 405.82046509]
[-2.83506250 391.67730713]
[2.16203451 377.53414917]
[7.15913153 363.39099121]
[12.15622807 349.24780273]
[17.15332603 335.10464478]
[14.09796047 320.52679443]
[25.99067307 310.09252930]
[30.98777008 295.94937134]
[26.04930878 277.26815796]
[41.51749420 264.36486816]
[46.03145599 250.06018066]
[50.54541779 235.75549316]
[55.05937958 221.45079041]
[47.97851562 208.39717102]
[52.35253525 193.82588196]
[66.09238434 186.48733521]
[70.60634613 172.18264771]
[74.99868774 157.84013367]
[79.26908875 143.46086121]
[83.53949738 129.08158875]
[87.80990601 114.70230865]
[80.99756622 101.91409302]
[85.12264252 88.02416992]
[97.81082153 81.02729034]
[102.08122253 66.64801025]
[101.52543640 57.50706100]
[106.54815674 52.06195450]
[111.06211853 37.75726318]
[115.57608032 23.45257568]
[108.53682709 9.55700874]
[113.31840515 -4.88567781]
[126.60908508 -11.51089096]
[131.12304688 -25.81558037]
[135.63700867 -40.12026978]
[140.15097046 -54.42496109]
[144.66493225 -68.72965240]
[130.31733704 -64.35396576]
[117.85293579 -72.69895172]
[116.43234253 -87.63153076]
[127.09960175 -98.17712402]
[142.01490784 -96.58533478]
[150.21627808 -84.02673340]
[155.92709351 -97.89707947]
[154.02651978 -113.60371399]
[166.02665710 -122.42673492]
[171.73748779 -136.29708862]
[177.44830322 -150.16743469]
[183.15911865 -164.03778076]
[188.86994934 -177.90812683]
[194.58076477 -191.77847290]
[200.29159546 -205.64881897]
[206.00241089 -219.51916504]
[211.71324158 -233.38951111]
[208.84002686 -251.56744385]
[223.12425232 -261.74517822]
[228.59872437 -275.71051025]
[234.07319641 -289.67584229]
[239.54765320 -303.64114380]
[245.02212524 -317.60647583]
[233.11288452 -326.88278198]
[224.30895996 -339.12667847]
[219.31689453 -353.34091187]
[218.53321838 -368.37069702]
[222.01287842 -382.99749756]
[229.46557617 -396.03796387]
[240.27990723 -406.43945312]
[253.57351685 -413.36517334]
[268.26510620 -416.26144409]
[283.16238403 -414.90194702]
[288.63687134 -428.86724854]
[282.08212280 -443.24816895]
[287.69424438 -458.02246094]
[302.14364624 -464.42480469]
[316.85778809 -458.65679932]
[323.10699463 -444.14050293]
[317.18374634 -429.48818970]
[302.60217285 -423.39279175]
[297.12771606 -409.42745972]
[308.98028564 -400.30093384]
[317.78982544 -388.19210815]
[322.83544922 -374.07730103]
[323.70019531 -359.09756470]
[320.30548096 -344.46636963]
[312.91809082 -331.37139893]
[302.12924194 -320.87808228]
[288.80737305 -313.84301758]
[274.02807617 -310.84384155]
[258.98745728 -312.13198853]
[253.51298523 -298.16668701]
[248.03851318 -284.20135498]
[242.56404114 -270.23605347]
[237.08956909 -256.27072144]
[241.64405823 -245.04887390]
[237.17950439 -233.36051941]
[225.58358765 -227.67869568]
[219.87275696 -213.80834961]
[214.16194153 -199.93798828]
[208.45111084 -186.06764221]
[202.74029541 -172.19729614]
[197.02946472 -158.32695007]
[191.31864929 -144.45660400]
[185.60783386 -130.58625793]
[179.89700317 -116.71591949]
[182.20606995 -102.00138092]
[169.79743958 -92.18625641]
[164.08662415 -78.31591034]
[158.96961975 -64.21569061]
[154.45565796 -49.91099930]
[149.94169617 -35.60631180]
[145.42773438 -21.30162048]
[140.91377258 -6.99692965]
[147.99462891 6.05668879]
[143.62062073 20.62798119]
[129.88076782 27.96653557]
[125.36680603 42.27122498]
[120.85284424 56.57591629]
[116.46050262 70.91841888]
[112.19009399 85.29769135]
[119.00243378 98.08590698]
[114.87735748 111.97583008]
[102.18917847 118.97270966]
[97.91877747 133.35198975]
[93.64836884 147.73126221]
[89.37796021 162.11054993]
[89.93375397 171.25149536]
[84.91103363 176.69659424]
[80.39707184 191.00129700]
[87.43631744 204.89685059]
[82.65474701 219.33953857]
[69.36406708 225.96475220]
[64.85010529 240.26943970]
[60.33614731 254.57414246]
[55.82218552 268.87881470]
[61.40436554 278.24765015]
[60.90606689 288.92193604]
[54.73439789 297.37466431]
[45.13093185 300.94647217]
[40.13383484 315.08963013]
[42.83177185 330.67910767]
[31.29648781 340.10174561]
[26.29939079 354.24490356]
[21.30229378 368.38806152]
[16.30519676 382.53121948]
[11.30809975 396.67440796]
[6.31100225 410.81756592]
[17.21933746 418.31372070]
[25.99673271 428.20642090]
[32.13127518 439.91107178]
[35.26700974 452.73773193]
[35.22459412 465.93157959]
[32.01154327 478.71752930]
[25.82151222 490.34561157]
[17.02259636 500.13504028]
[6.13548279 507.51403809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[4 19]
[5 18]
[7 16]
[8 15]
[9 14]
[30 175]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[37 168]
[38 167]
[40 163]
[41 162]
[42 161]
[43 160]
[46 157]
[47 156]
[48 154]
[49 153]
[50 152]
[51 151]
[54 148]
[55 147]
[57 146]
[58 145]
[59 144]
[62 141]
[63 140]
[64 139]
[65 138]
[66 137]
[72 136]
[73 135]
[75 133]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[99 108]
[100 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
