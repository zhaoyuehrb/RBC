%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUUUGGUGCAGAAGGUGACGGGAAACAGGCCGCAGACCUGAACUUCCAACCGUAUGUAGGCGAGAAGCCGGUGCCGAUACUCCCACUAUCCCACAAUGUCCCACUGGGCCCCAGAGUGGAAGAGGGCGGAGGCUAAUCCAAGAGACCUUGGGGCCAGCUGGGAUGUCAGGGGCAGCAGAGGCAGUGGCUGGAGUG\
) } def
/len { sequence length } bind def

/coor [
[-88.77194214 263.05587769]
[-90.71035767 248.18165588]
[-84.40206909 234.57254028]
[-97.84197235 241.23353577]
[-111.28188324 247.89453125]
[-124.72178650 254.55552673]
[-138.16169739 261.21652222]
[-147.99662781 276.77847290]
[-165.45025635 274.99554443]
[-178.78279114 281.86895752]
[-192.11531067 288.74234009]
[-205.44784546 295.61575317]
[-207.91508484 310.82162476]
[-218.73645020 321.53384399]
[-233.61459351 323.79324341]
[-246.81228638 316.94058228]
[-260.14480591 323.81399536]
[-273.47735596 330.68737793]
[-276.18930054 341.23474121]
[-284.09967041 348.39648438]
[-294.42956543 349.98294067]
[-303.72509766 345.70828247]
[-317.26898193 352.15521240]
[-330.81289673 358.60211182]
[-344.35678101 365.04904175]
[-349.90194702 381.63494873]
[-365.41915894 388.93984985]
[-381.10531616 382.88827515]
[-394.54522705 389.54928589]
[-407.98513794 396.21026611]
[-421.42501831 402.87127686]
[-424.93563843 418.10968018]
[-437.45108032 427.48510742]
[-453.06188965 426.57070923]
[-464.39718628 415.79824829]
[-466.10473633 400.25418091]
[-457.37829590 387.27792358]
[-442.33825684 382.99645996]
[-428.08602905 389.43136597]
[-414.64611816 382.77035522]
[-401.20620728 376.10937500]
[-387.76629639 369.44836426]
[-385.39489746 356.77691650]
[-376.01586914 347.65115356]
[-362.89978027 345.56613159]
[-350.80371094 351.50515747]
[-337.25979614 345.05822754]
[-323.71591187 338.61129761]
[-310.17202759 332.16436768]
[-300.41461182 315.47781372]
[-280.35073853 317.35485840]
[-267.01821899 310.48144531]
[-253.68568420 303.60806274]
[-251.61227417 288.88259888]
[-241.14164734 278.07382202]
[-226.13873291 275.47268677]
[-212.32124329 282.28320312]
[-198.98870850 275.40982056]
[-185.65618896 268.53640747]
[-172.32365417 261.66302490]
[-168.33900452 250.23449707]
[-157.27867126 244.40150452]
[-144.82269287 247.77662659]
[-131.38278198 241.11563110]
[-117.94287872 234.45462036]
[-104.50297546 227.79362488]
[-91.06306458 221.13262939]
[-78.13259888 213.52981567]
[-65.77744293 205.02391052]
[-53.42229843 196.51802063]
[-41.06715012 188.01211548]
[-28.71199989 179.50621033]
[-22.61635780 165.91606140]
[-6.86196566 164.46356201]
[5.49318314 155.95767212]
[17.84833145 147.45176697]
[30.20347977 138.94587708]
[28.88695335 124.10901642]
[35.21577454 110.51482391]
[47.58102798 101.85648346]
[62.71929550 100.54132843]
[76.57367706 107.02233124]
[88.92882538 98.51643372]
[101.21611023 89.91278076]
[113.43474579 81.21192932]
[125.65338898 72.51107788]
[130.83567810 64.97572327]
[138.13562012 63.77091980]
[150.49076843 55.26502228]
[149.86305237 48.95452881]
[151.01921082 42.76024246]
[153.84458923 37.17313004]
[158.09321594 32.62957764]
[163.40898132 29.47734070]
[169.35546875 27.94895363]
[175.45170593 28.14471054]
[181.21110535 30.02638435]
[186.18031311 33.42208862]
[199.40211487 26.33802032]
[212.62391663 19.25395584]
[225.84571838 12.16988850]
[239.06752014 5.08582258]
[252.28932190 -1.99824333]
[265.51110840 -9.08230972]
[278.73291016 -16.16637611]
[291.89810181 -23.35511017]
[305.00585938 -30.64806175]
[318.11358643 -37.94101334]
[331.22134399 -45.23396301]
[337.20687866 -52.14849091]
[344.59539795 -52.53675842]
[357.81719971 -59.62082291]
[371.03900146 -66.70488739]
[384.26080322 -73.78895569]
[397.48260498 -80.87302399]
[410.70440674 -87.95709229]
[419.21450806 -101.29457855]
[434.08709717 -100.48523712]
[447.30889893 -107.56929779]
[460.23937988 -115.17211914]
[472.85818481 -123.28173065]
[485.47698975 -131.39134216]
[485.69610596 -143.29057312]
[491.57620239 -153.49954224]
[501.55380249 -159.53573608]
[513.08605957 -159.99618530]
[523.29858398 -154.88206482]
[536.16833496 -162.58723450]
[549.03808594 -170.29238892]
[556.53411865 -184.87805176]
[572.92468262 -185.40873718]
[581.34857178 -171.33854675]
[573.14001465 -157.14166260]
[556.74328613 -157.42263794]
[543.87353516 -149.71748352]
[531.00378418 -142.01231384]
[527.63226318 -124.02713776]
[511.92175293 -114.03741455]
[493.58660889 -118.77253723]
[480.96780396 -110.66292572]
[468.34899902 -102.55331421]
[482.20422363 -96.80592346]
[486.50576782 -82.43592834]
[478.08724976 -70.02107239]
[463.14553833 -68.69992065]
[452.67922974 -79.44497681]
[454.39297485 -94.34749603]
[441.17117310 -87.26343536]
[433.60678101 -74.43264008]
[417.78845215 -74.73529053]
[404.56668091 -67.65122223]
[391.34487915 -60.56715775]
[378.12307739 -53.48308945]
[364.90127563 -46.39902496]
[351.67947388 -39.31495667]
[338.51428223 -32.12622452]
[325.40652466 -24.83327103]
[312.29879761 -17.54032135]
[299.19107056 -10.24736977]
[294.86990356 -4.24167156]
[285.81698608 -2.94457507]
[272.59518433 4.13949108]
[259.37338257 11.22355747]
[246.15158081 18.30762291]
[232.92977905 25.39168930]
[219.70799255 32.47575378]
[206.48619080 39.55982208]
[193.26438904 46.64388657]
[183.40209961 68.19989777]
[158.99667358 67.62017059]
[146.64152527 76.12606812]
[134.35423279 84.72971344]
[122.13559723 93.43057251]
[109.91696167 102.13142395]
[105.69395447 109.00809479]
[97.43472290 110.87158203]
[85.07957458 119.37747955]
[86.18934631 134.63249207]
[79.55815887 148.30451965]
[67.05699921 156.76545715]
[52.09934616 157.82592773]
[38.70937729 151.30102539]
[26.35422897 159.80691528]
[13.99908066 168.31282043]
[1.64393222 176.81871033]
[-5.33543396 191.01727295]
[-20.20610237 191.86135864]
[-32.56125259 200.36726379]
[-44.91640091 208.87316895]
[-57.27154922 217.37905884]
[-69.62669373 225.88496399]
[-54.66739273 226.98915100]
[-42.61198425 235.91479492]
[-37.19002914 249.90057373]
[-40.07890320 264.61975098]
[-50.38488770 275.51870728]
[-64.91963196 279.22558594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 67]
[4 66]
[5 65]
[6 64]
[7 63]
[9 60]
[10 59]
[11 58]
[12 57]
[16 53]
[17 52]
[18 51]
[22 49]
[23 48]
[24 47]
[25 46]
[28 42]
[29 41]
[30 40]
[31 39]
[68 191]
[69 190]
[70 189]
[71 188]
[72 187]
[74 185]
[75 184]
[76 183]
[77 182]
[82 177]
[83 176]
[84 174]
[85 173]
[86 172]
[88 171]
[89 170]
[98 168]
[99 167]
[100 166]
[101 165]
[102 164]
[103 163]
[104 162]
[105 161]
[106 159]
[107 158]
[108 157]
[109 156]
[111 155]
[112 154]
[113 153]
[114 152]
[115 151]
[116 150]
[118 148]
[119 147]
[120 141]
[121 140]
[122 139]
[127 136]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
