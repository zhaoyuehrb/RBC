%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCAGUGUCUCCUGUACCAGCAGAAGCUCCAGAACUCUCACCCGAUUGCCUGCCUCUGCUGCGUCUUUGCCCACUGAACAGCCAUGAGAAGGCAACUCCGGUCCAGAAGGGCUCCAUCCUUUCCUUACAGUUAUCGCUACAGACUCGAUGAUCCGGAUGAAGCGAACCAGAACUACUUAGCAG\
) } def
/len { sequence length } bind def

/coor [
[82.90881348 178.57528687]
[86.31967926 163.96824646]
[93.14607239 150.61265564]
[94.30551910 135.65753174]
[95.46496582 120.70240784]
[87.27758789 133.27088928]
[79.09020996 145.83937073]
[78.04080200 161.62574768]
[64.61085510 168.06669617]
[56.42347717 180.63517761]
[48.23609924 193.20365906]
[47.18669128 208.99003601]
[33.75674820 215.43098450]
[25.56936836 227.99946594]
[17.38198853 240.56794739]
[13.80281067 257.13980103]
[-3.11220837 258.28802490]
[-8.89811802 242.35192871]
[4.81350374 232.38056946]
[13.00088310 219.81208801]
[21.18826294 207.24360657]
[21.65205383 192.35621643]
[35.66761398 185.01628113]
[43.85499191 172.44779968]
[52.04237366 159.87931824]
[52.50616455 144.99192810]
[66.52172089 137.65199280]
[74.70910645 125.08351135]
[82.89648438 112.51502991]
[72.29414368 123.12589264]
[57.41504669 125.02651978]
[44.48584747 117.42153931]
[38.91720963 103.49349976]
[43.03951263 89.07106781]
[55.12764740 80.18978882]
[70.12291718 80.56634521]
[81.75072479 90.04421997]
[72.32742310 78.37368011]
[62.90412140 66.70314789]
[45.57992935 60.49308395]
[43.51300430 43.07603836]
[33.89288712 31.56719971]
[24.27277184 20.05836105]
[9.48566437 14.43234634]
[7.25963163 -0.29497698]
[-2.36048436 -11.80381584]
[-12.07797146 -23.23055840]
[-21.89212990 -34.57437897]
[-31.70628738 -45.91820145]
[-41.52044296 -57.26202393]
[-51.33460236 -68.60585022]
[-61.14876175 -79.94966888]
[-73.94791412 -81.66146851]
[-81.88824463 -91.33104706]
[-81.12701416 -103.41797638]
[-90.74713135 -114.92681885]
[-100.36724854 -126.43565369]
[-119.58308411 -132.47813416]
[-122.12886810 -151.63262939]
[-132.13424683 -162.80815125]
[-142.13960266 -173.98368835]
[-152.14497375 -185.15922546]
[-164.97135925 -186.65344238]
[-173.07473755 -196.18679810]
[-172.51885986 -208.28489685]
[-182.33302307 -219.62872314]
[-197.40126038 -216.65492249]
[-211.93246460 -221.62882996]
[-222.01779175 -233.21250916]
[-224.94435120 -248.29000854]
[-219.92491150 -262.80554199]
[-208.30967712 -272.85452271]
[-193.22308350 -275.73379517]
[-178.72335815 -270.66888428]
[-168.71084595 -259.02221680]
[-165.87886047 -243.92666626]
[-170.98919678 -229.44288635]
[-161.17503357 -218.09906006]
[-144.31614685 -213.26133728]
[-140.96943665 -195.16459656]
[-130.96408081 -183.98905945]
[-120.95870209 -172.81352234]
[-110.95333862 -161.63798523]
[-100.71324921 -161.99142456]
[-91.78823853 -156.52497864]
[-87.26353455 -146.84428406]
[-88.85840607 -136.05577087]
[-79.23828888 -124.54692841]
[-69.61817169 -113.03809357]
[-52.84386444 -107.91479492]
[-49.80493927 -89.76382446]
[-39.99077988 -78.42000580]
[-30.17662239 -67.07618713]
[-20.36246490 -55.73236084]
[-10.54830647 -44.38853836]
[-0.73414892 -33.04471588]
[6.03543615 -30.03646088]
[9.14835453 -21.42393112]
[18.76847076 -9.91509247]
[32.86748123 -5.11226654]
[35.78160858 10.43824577]
[45.40172577 21.94708443]
[55.02184296 33.45592499]
[67.05215454 34.85053635]
[75.16010284 44.38000870]
[74.57466125 57.27984619]
[83.99796295 68.95038605]
[93.42125702 80.62091827]
[101.18156433 80.77756500]
[107.85288239 83.74541473]
[112.52941132 88.74006653]
[114.72573853 94.73413849]
[129.72087097 94.35209656]
[144.71600342 93.97004700]
[158.31463623 85.88377380]
[171.23484802 93.29440308]
[186.22998047 92.91236115]
[201.22511292 92.53031921]
[216.22024536 92.14826965]
[231.21537781 91.76622772]
[233.86627197 84.90612793]
[238.12170410 78.93485260]
[243.70733643 74.21856689]
[250.26766968 71.04316711]
[257.38870239 69.59692383]
[264.62405396 69.95936584]
[271.52285767 72.09699249]
[277.65802002 75.86602783]
[282.65243530 81.02205658]
[286.20245361 87.23583221]
[288.09603882 94.11429596]
[303.00476074 95.76663971]
[317.91348267 97.41898346]
[332.82217407 99.07133484]
[347.73089600 100.72367859]
[362.63961792 102.37602234]
[377.54833984 104.02836609]
[387.18780518 91.98328400]
[401.81637573 87.08346558]
[416.76614380 90.89244080]
[427.26666260 102.19477081]
[429.96728516 117.38391876]
[424.00622559 131.61308289]
[411.28564453 140.34179688]
[395.86462402 140.78475952]
[382.66400146 132.80061340]
[375.89599609 118.93708038]
[360.98727417 117.28473663]
[346.07855225 115.63239288]
[331.16983032 113.98004913]
[316.26113892 112.32769775]
[301.35241699 110.67535400]
[286.44369507 109.02301025]
[270.26452637 125.46347046]
[246.95204163 124.66489410]
[231.59742737 106.76136017]
[216.60229492 107.14340210]
[201.60716248 107.52545166]
[186.61203003 107.90749359]
[171.61689758 108.28953552]
[159.09082031 116.34848785]
[145.09805298 108.96517944]
[130.10292053 109.34722900]
[115.10778809 109.72927094]
[128.45040894 116.58304596]
[141.79304504 123.43682098]
[156.74578857 124.62657166]
[170.97238159 129.38093567]
[183.63607788 137.42025757]
[193.99203491 148.27171326]
[201.43116760 161.29705811]
[205.51591492 175.73016357]
[206.00602722 190.72215271]
[202.87269592 205.39125061]
[196.30018616 218.87464905]
[186.67509460 230.37933350]
[174.56350708 239.22860718]
[160.67782593 244.90200806]
[145.83471680 247.06584167]
[130.90721130 245.59283447]
[116.77330017 240.56964111]
[104.26428223 232.29168701]
[94.11589813 221.24586487]
[86.92503357 208.08183289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[6 28]
[7 27]
[9 25]
[10 24]
[11 23]
[13 21]
[14 20]
[15 19]
[37 108]
[38 107]
[39 106]
[41 103]
[42 102]
[43 101]
[45 99]
[46 98]
[47 96]
[48 95]
[49 94]
[50 93]
[51 92]
[52 91]
[55 89]
[56 88]
[57 87]
[59 83]
[60 82]
[61 81]
[62 80]
[65 78]
[66 77]
[112 164]
[113 163]
[114 162]
[116 160]
[117 159]
[118 158]
[119 157]
[120 156]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[137 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
