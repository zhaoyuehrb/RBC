%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCACCUGCAGACUGUCCAAACUAAAGGUGGGCCACUGCCCCCACAGUUUCUCUCUGCUUCUGGUCAGCUGGGUUGUCCUGCAUGGUGACGGGUGUCAUCCCGAACAAAUCAGAUGGCAUCAGAGGCACUCCAUCAAGUGGGAGAUGGGGAGGAGGCUGUACUGAAGAAAGAAAACUUCAACAUGAUGAAUGCCCUUGACCAACUGCCAAAAC\
) } def
/len { sequence length } bind def

/coor [
[97.50109100 330.99157715]
[82.35716248 330.33038330]
[68.35385132 324.52667236]
[57.18213272 314.28125000]
[50.19104385 300.83132935]
[48.22478867 285.80102539]
[51.52080917 271.00537109]
[59.68108749 258.23095703]
[71.72023773 249.02037048]
[86.18446350 244.48585510]
[86.83876038 229.50012207]
[87.49304962 214.51440430]
[88.14733887 199.52868652]
[76.39518738 190.41688538]
[72.21244812 175.96113586]
[77.40451813 161.64694214]
[90.17729187 153.03518677]
[90.83158112 138.04946899]
[91.48587036 123.06374359]
[85.13129425 119.08010101]
[77.37256622 131.91763306]
[69.61383057 144.75515747]
[65.55232239 159.19482422]
[50.57833481 160.07785034]
[44.84784698 146.21562195]
[56.07473373 136.26757812]
[64.24844360 123.69020081]
[72.42214966 111.11281586]
[66.06757355 107.12918091]
[52.86455536 114.24818420]
[46.79905319 121.07292938]
[39.41733551 121.37313080]
[26.11217499 128.29936218]
[12.80701160 135.22558594]
[-0.49815062 142.15180969]
[-8.84826183 156.26591492]
[-25.24137306 155.82101440]
[-32.81365585 141.27478027]
[-23.77539635 127.59114838]
[-7.42437983 128.84664917]
[5.88078260 121.92042542]
[19.18594551 114.99419403]
[32.49110794 108.06796265]
[45.74554825 101.04515839]
[58.94857025 93.92615509]
[65.87480164 80.62099457]
[64.13340759 65.72241974]
[62.39201355 50.82384491]
[60.65061951 35.92526627]
[58.90922546 21.02669334]
[57.16783142 6.12811708]
[55.42643738 -8.77045822]
[53.68504333 -23.66903305]
[49.58190536 -31.82572937]
[52.02828979 -38.79674530]
[50.50376511 -53.71907425]
[48.97923660 -68.64139557]
[47.45471191 -83.56372833]
[17.71754265 -113.54765320]
[11.77634621 -127.32089233]
[5.83514977 -141.09413147]
[-0.10604672 -154.86737061]
[-6.04724312 -168.64062500]
[-11.98843956 -182.41386414]
[-17.92963600 -196.18710327]
[-24.07052040 -209.87248230]
[-30.40979576 -223.46710205]
[-36.74906921 -237.06170654]
[-43.08834457 -250.65632629]
[-55.93292236 -259.89361572]
[-54.29932404 -274.69836426]
[-60.63859940 -288.29296875]
[-66.97787476 -301.88760376]
[-73.31714630 -315.48220825]
[-86.16172791 -324.71948242]
[-84.52812958 -339.52423096]
[-90.86740112 -353.11886597]
[-97.20668030 -366.71347046]
[-103.54595184 -380.30807495]
[-115.37507629 -385.44335938]
[-120.37612152 -396.89382935]
[-116.36863708 -408.30477905]
[-122.50952148 -421.99014282]
[-132.87753296 -425.26275635]
[-139.59617615 -433.52957153]
[-140.63594055 -443.91079712]
[-135.89385986 -452.95687866]
[-141.63410950 -466.81509399]
[-147.37435913 -480.67327881]
[-153.11460876 -494.53146362]
[-158.85485840 -508.38964844]
[-164.59510803 -522.24786377]
[-177.92773438 -531.79632568]
[-176.05577087 -548.08825684]
[-160.90493774 -554.36395264]
[-148.06111145 -544.16748047]
[-150.73692322 -527.98809814]
[-144.99667358 -514.12988281]
[-139.25640869 -500.27172852]
[-133.51615906 -486.41351318]
[-127.77590942 -472.55532837]
[-122.03565979 -458.69714355]
[-105.87570190 -448.07513428]
[-108.82415009 -428.13101196]
[-102.68326569 -414.44564819]
[-87.92256927 -404.95117188]
[-89.95133209 -386.64736938]
[-83.61206055 -373.05273438]
[-77.27278900 -359.45812988]
[-70.93350983 -345.86352539]
[-58.54235840 -337.59860229]
[-59.72253036 -321.82147217]
[-53.38325500 -308.22686768]
[-47.04398346 -294.63226318]
[-40.70470810 -281.03762817]
[-28.31355476 -272.77273560]
[-29.49372673 -256.99560547]
[-23.15445137 -243.40098572]
[-16.81517792 -229.80636597]
[-10.47590446 -216.21174622]
[-6.37750101 -213.76644897]
[-3.76973033 -208.72236633]
[-4.15639448 -202.12829590]
[1.78480196 -188.35505676]
[7.72599840 -174.58181763]
[13.66719532 -160.80857849]
[19.60839081 -147.03533936]
[25.54958725 -133.26208496]
[31.49078369 -119.48885345]
[38.69115829 -117.39012909]
[49.52659607 -127.76284790]
[53.09190750 -113.19269562]
[60.29227829 -111.09397888]
[72.70339203 -119.51801300]
[85.11450195 -127.94203949]
[97.52561188 -136.36607361]
[109.93672943 -144.79010010]
[110.29853821 -160.30296326]
[119.73622131 -172.62001038]
[134.62080383 -177.00509644]
[149.22885132 -171.77206421]
[157.94326782 -158.93312073]
[157.41319275 -143.42510986]
[147.84245300 -131.21116638]
[132.91117859 -126.98780060]
[118.36075592 -132.37899780]
[105.94964600 -123.95496368]
[93.53853607 -115.53092957]
[81.12742615 -107.10690308]
[68.71630859 -98.68286896]
[62.37703705 -85.08824921]
[63.90156555 -70.16592407]
[65.42608643 -55.24359894]
[66.95061493 -40.32127380]
[68.58361816 -25.41042709]
[70.32501221 -10.51185226]
[72.06640625 4.38672352]
[73.80780029 19.28529930]
[75.54919434 34.18387604]
[77.29058838 49.08245087]
[79.03198242 63.98102570]
[80.77337646 78.87960052]
[93.79315948 56.14776993]
[126.49849701 46.14894485]
[165.89775085 62.65148163]
[180.06626892 67.57624054]
[194.23477173 72.50099945]
[208.40328979 77.42575836]
[222.57180786 82.35050964]
[235.23107910 73.37709808]
[250.74667358 73.59204865]
[263.15249634 82.91271973]
[267.67828369 97.75512695]
[262.58377075 112.41204834]
[249.82788086 121.24761200]
[234.31553650 120.86435699]
[222.01155090 111.40965271]
[217.64704895 96.51902771]
[203.47853088 91.59426880]
[189.31002808 86.66950989]
[175.14151001 81.74475098]
[160.97299194 76.81999207]
[156.98934937 83.17456818]
[145.03843689 102.23828888]
[155.64503479 112.84489441]
[166.25163269 123.45149231]
[182.23011780 124.88936615]
[190.94776917 138.35719299]
[185.71713257 153.52360535]
[170.55072021 158.75422668]
[157.08290100 150.03657532]
[155.64503479 134.05809021]
[145.03843689 123.45149231]
[134.43182373 112.84489441]
[127.44177246 115.56317902]
[136.93232727 127.17908478]
[128.81767273 139.79464722]
[114.31200409 135.97554016]
[113.46165466 120.99974823]
[106.47159576 123.71803284]
[105.81729889 138.70375061]
[105.16300964 153.68948364]
[117.13661957 163.38168335]
[121.06136322 178.09391785]
[115.63463593 192.13011169]
[103.13306427 200.18296814]
[102.47877502 215.16870117]
[101.82447815 230.15441895]
[101.17018890 245.14013672]
[115.18416595 250.91804504]
[126.37474823 261.14285278]
[133.39060974 274.57986450]
[135.38456726 289.60650635]
[132.11581421 304.40823364]
[123.97908783 317.19766235]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[13 206]
[17 202]
[18 201]
[19 200]
[29 45]
[30 44]
[32 43]
[33 42]
[34 41]
[35 40]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[55 154]
[56 153]
[57 152]
[58 151]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
[64 124]
[65 123]
[66 120]
[67 119]
[68 118]
[69 117]
[71 115]
[72 114]
[73 113]
[74 112]
[76 110]
[77 109]
[78 108]
[79 107]
[82 105]
[83 104]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[165 182]
[166 181]
[167 180]
[168 179]
[169 178]
[184 194]
[185 193]
[186 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
