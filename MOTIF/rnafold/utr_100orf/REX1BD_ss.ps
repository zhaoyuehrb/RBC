%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCUUCCUUCUGGCUGGCCGGCCGCAGGGUAGGGGGUCCGUGGACCUCCCGGCCUGUAGGGGGCGUCGGGCGCAGCGGAAGGGCCUGCUCCGGAGCCUGGCCAGGGCUGCGCAGUCAUGAUCACCGAGACCGCGGCGGAGCCUACGGUCCCUGCAGUGCCUGCUGCUGAGGAGGCCACCGAAGCUCGGGGACGCGAGGAGCCGGCGUGGCCCUGGA\
) } def
/len { sequence length } bind def

/coor [
[118.28755188 126.41352844]
[110.42927551 131.04454041]
[101.42198944 133.34234619]
[91.95693970 133.03059387]
[82.78860474 130.03718567]
[74.67459106 124.50751495]
[68.31316376 116.80015564]
[55.85614777 125.15616608]
[43.39913559 133.51217651]
[41.62965012 137.46446228]
[38.96440125 140.35963440]
[35.84468079 142.04606628]
[32.71575928 142.53065491]
[29.97494316 141.96644592]
[17.05721474 149.59089661]
[9.10560417 163.26870728]
[-5.78773785 163.07470703]
[-18.70546532 170.69917297]
[-31.62319374 178.32362366]
[-44.54092026 185.94807434]
[-57.45864868 193.57252502]
[-69.21494293 202.88862610]
[-79.58981323 213.72200012]
[-89.96467590 224.55538940]
[-93.33803558 240.60382080]
[-109.00514221 245.44879150]
[-120.84902191 234.10620117]
[-116.68570709 218.24432373]
[-100.79805756 214.18052673]
[-90.42319489 203.34713745]
[-80.04833221 192.51374817]
[-84.22633362 186.28524780]
[-96.76034546 167.59973145]
[-110.71968842 173.08943176]
[-124.67902374 178.57911682]
[-138.63836670 184.06881714]
[-152.59771729 189.55851746]
[-166.55705261 195.04821777]
[-180.51640320 200.53790283]
[-190.30346680 213.69638062]
[-206.55905151 211.53125000]
[-212.56080627 196.26983643]
[-202.13464355 183.61175537]
[-186.00608826 186.57856750]
[-172.04675293 181.08886719]
[-158.08740234 175.59916687]
[-144.12806702 170.10948181]
[-130.16871643 164.61978149]
[-116.20938110 159.13008118]
[-102.25003815 153.64038086]
[-65.08310699 180.65480042]
[-52.16537476 173.03034973]
[-39.24764633 165.40589905]
[-26.32991982 157.78143311]
[-13.41219234 150.15698242]
[-6.38454342 137.02453613]
[9.43276119 136.67317200]
[22.35048866 129.04870605]
[35.04312897 121.05516052]
[47.50014114 112.69915009]
[59.95715332 104.34314728]
[61.14481735 89.39023590]
[50.16305161 79.17256927]
[39.18128586 68.95489502]
[28.19952011 58.73722076]
[12.82569027 55.00145721]
[8.77830982 40.66730499]
[-2.20345473 30.44963074]
[-13.18521976 20.23195839]
[-24.16698456 10.01428509]
[-35.14875031 -0.20338809]
[-43.55849838 -3.75533605]
[-46.21379852 -10.64830589]
[-57.04718018 -21.02317047]
[-67.88056183 -31.39803505]
[-78.78842163 -41.69456863]
[-89.77018738 -51.91224289]
[-105.55320740 -51.09257889]
[-117.23697662 -61.73518372]
[-117.88972473 -77.52598572]
[-107.12419128 -89.09658813]
[-91.32736969 -89.58235168]
[-79.87123871 -78.69508362]
[-79.55251312 -62.89400864]
[-68.57074738 -52.67633438]
[-61.53625107 -50.42256165]
[-57.50569916 -42.23141861]
[-46.67231750 -31.85655403]
[-35.83893204 -21.48168945]
[-24.93107605 -11.18515301]
[-13.94931126 -0.96748018]
[-2.96754670 9.25019264]
[8.01421833 19.46786499]
[18.99598312 29.68553925]
[33.58432388 32.69046402]
[38.41719437 47.75545502]
[49.39896011 57.97312927]
[60.38072205 68.19080353]
[71.36248779 78.40847015]
[92.59305573 66.82096863]
[114.99141693 71.58580017]
[128.09667969 88.77179718]
[142.97070312 86.83176422]
[157.84471130 84.89173126]
[172.71871948 82.95169830]
[187.59274292 81.01166534]
[202.46675110 79.07164001]
[217.34075928 77.13160706]
[232.21478271 75.19157410]
[247.08879089 73.25154114]
[261.96279907 71.31150818]
[276.83682251 69.37147522]
[291.71081543 67.43144226]
[276.72583008 66.76058197]
[263.63134766 59.44385529]
[255.20584106 47.03375244]
[253.23704529 32.16352081]
[258.14273071 17.98839188]
[268.88195801 7.51611567]
[283.17608643 2.96875167]
[297.99203491 5.31118107]
[310.18615723 14.04637527]
[317.17102051 27.32085991]
[317.46450806 42.31798935]
[311.00451660 55.85544205]
[319.71603394 43.64440918]
[328.42755127 31.43337250]
[325.57348633 15.88892841]
[334.61557007 2.92682338]
[350.18930054 0.23724511]
[363.05508423 9.41587257]
[365.57986450 25.01718903]
[356.26571655 37.78520966]
[340.63858032 40.14489365]
[331.92706299 52.35593033]
[323.21554565 64.56696320]
[328.70523071 78.52630615]
[343.40100098 81.53212738]
[358.09674072 84.53794098]
[371.18719482 76.09530640]
[386.04794312 79.35297394]
[394.01605225 91.88474274]
[408.71179199 94.89055634]
[423.40753174 97.89637756]
[432.43685913 96.55033875]
[438.29269409 101.05284119]
[452.94360352 104.27011871]
[467.61734009 107.38174438]
[482.31307983 110.38756561]
[497.00881958 113.39337921]
[511.70458984 116.39919281]
[526.40032959 119.40500641]
[541.09606934 122.41082764]
[555.79180908 125.41664124]
[564.82116699 124.07061005]
[570.67700195 128.57310486]
[585.32788086 131.79039001]
[599.97882080 135.00765991]
[614.77331543 137.48219299]
[629.67370605 139.20768738]
[644.57415771 140.93316650]
[659.47454834 142.65866089]
[674.07318115 136.56019592]
[685.82592773 145.71017456]
[700.72637939 147.43566895]
[715.55432129 140.43116760]
[728.87847900 149.99147034]
[726.99200439 166.28175354]
[711.83563232 172.54397583]
[699.00085449 162.33609009]
[684.10046387 160.61061096]
[670.56762695 166.83248901]
[657.74908447 157.55908203]
[642.84863281 155.83360291]
[627.94824219 154.10810852]
[613.04779053 152.38261414]
[622.46282959 164.05982971]
[622.29071045 179.05883789]
[612.61016846 190.51692200]
[597.85052490 193.19146729]
[584.76501465 185.85874939]
[579.34082031 171.87384033]
[584.05975342 157.63545227]
[596.76153564 149.65856934]
[582.11065674 146.44129944]
[567.45971680 143.22401428]
[552.78601074 140.11239624]
[538.09027100 137.10658264]
[523.39453125 134.10075378]
[508.69876099 131.09494019]
[494.00302124 128.08912659]
[479.30725098 125.08331299]
[464.61151123 122.07749939]
[457.43225098 123.81584167]
[449.72634888 118.92102814]
[435.07543945 115.70375061]
[420.40173340 112.59212494]
[405.70596313 109.58631134]
[391.01022339 106.58049011]
[378.76150513 114.97718811]
[363.81509399 112.13820648]
[355.09094238 99.23368835]
[340.39517212 96.22787476]
[325.69943237 93.22206116]
[293.65084839 82.30545807]
[278.77685547 84.24549103]
[263.90283203 86.18552399]
[249.02882385 88.12555695]
[234.15481567 90.06558990]
[219.28079224 92.00561523]
[204.40678406 93.94564819]
[189.53276062 95.88568115]
[174.65875244 97.82571411]
[159.78474426 99.76574707]
[144.91072083 101.70578003]
[130.03671265 103.64581299]
[128.41529846 112.08972931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 61]
[8 60]
[9 59]
[14 58]
[15 57]
[17 55]
[18 54]
[19 53]
[20 52]
[21 51]
[22 31]
[23 30]
[24 29]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[62 99]
[63 98]
[64 97]
[65 96]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[73 89]
[74 88]
[75 87]
[76 85]
[77 84]
[102 216]
[103 215]
[104 214]
[105 213]
[106 212]
[107 211]
[108 210]
[109 209]
[110 208]
[111 207]
[112 206]
[113 205]
[125 136]
[126 135]
[127 134]
[137 204]
[138 203]
[139 202]
[142 199]
[143 198]
[144 197]
[146 196]
[147 195]
[148 193]
[149 192]
[150 191]
[151 190]
[152 189]
[153 188]
[154 187]
[156 186]
[157 185]
[158 184]
[159 176]
[160 175]
[161 174]
[162 173]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
