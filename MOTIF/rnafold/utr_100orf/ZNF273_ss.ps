%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACGGCUUCCGGGAUUUGGCGGGGCCUUUGUCUCUCGCUGCAGUCGCAGCUCCAGGUCUCGUCUUCACUGCUCUAUGUCCUCUGCUCCUAGAGGUCCACCUUCUGUGGCCCCGUUACCUGCAGGUAUUGGGAGAUCCACAGCUAAGACGCCAGGACUCCCUGGAAGCCUAGAAA\
) } def
/len { sequence length } bind def

/coor [
[82.90608215 341.61334229]
[73.19262695 329.83999634]
[69.55771637 315.01602173]
[72.72304535 300.08474731]
[82.06015015 288.01074219]
[95.71514130 281.19134521]
[95.44892120 266.19372559]
[95.18269348 251.19607544]
[94.91647339 236.19844055]
[94.65025330 221.20080566]
[94.38402557 206.20317078]
[94.11780548 191.20553589]
[93.85158539 176.20788574]
[93.58535767 161.21025085]
[93.31913757 146.21261597]
[82.49304199 143.28678894]
[72.67681885 137.86401367]
[64.43670654 130.25709534]
[58.24801636 120.90483093]
[54.46774673 110.34668732]
[39.49668121 111.27791595]
[24.52561569 112.20914459]
[9.55454922 113.14037323]
[-5.41651630 114.07160187]
[-20.38758278 115.00283051]
[-35.35864639 115.93406677]
[-50.32971573 116.86529541]
[-65.30078125 117.79652405]
[-80.27184296 118.72775269]
[-83.14089966 127.66690063]
[-88.35107422 135.44850159]
[-95.48742676 141.47610474]
[-103.98800659 145.29203796]
[-113.18806458 146.61209106]
[-122.37209320 145.34671021]
[-130.82939148 141.60690308]
[-137.90916443 135.69461060]
[-143.07048035 128.07844543]
[-145.92370605 119.35649109]
[-160.90893555 118.69111633]
[-175.89416504 118.02574921]
[-190.87940979 117.36037445]
[-205.86463928 116.69499969]
[-220.15904236 124.73253632]
[-234.12709045 116.14035797]
[-233.39965820 99.75734711]
[-218.72505188 92.43695831]
[-205.19926453 101.70976257]
[-190.21403503 102.37513733]
[-175.22879028 103.04051208]
[-160.24356079 103.70588684]
[-145.25833130 104.37125397]
[-133.65618896 86.94471741]
[-113.77962494 79.95651245]
[-93.56955719 86.36908722]
[-81.20307159 103.75668335]
[-66.23200989 102.82545471]
[-51.26094437 101.89422607]
[-36.28987885 100.96299744]
[-21.31881142 100.03176880]
[-6.34774542 99.10054016]
[8.62332058 98.16931152]
[23.59438705 97.23808289]
[38.56545258 96.30685425]
[53.53651810 95.37562561]
[54.98442459 87.59685516]
[57.72495651 80.17424011]
[61.67942047 73.32092285]
[66.73426056 67.23369598]
[72.74433136 62.08735657]
[79.53704834 58.02968216]
[86.91735840 55.17718887]
[94.67333984 53.61178207]
[102.58227539 53.37841797]
[110.41706085 54.48379517]
[117.95272064 56.89617157]
[124.97286224 60.54627991]
[131.27590942 65.32929993]
[136.68087769 71.10789490]
[149.80232239 63.83963013]
[162.92376709 56.57136917]
[176.04521179 49.30310440]
[189.16665649 42.03484344]
[193.47993469 29.85758018]
[204.58407593 24.07986832]
[216.25827026 27.32235527]
[229.50665283 20.28811836]
[242.69207764 13.13658714]
[255.81352234 5.86832428]
[264.13629150 -7.58686590]
[279.01876831 -6.98557186]
[292.14019775 -14.25383472]
[305.26165771 -21.52209854]
[315.03875732 -32.89787292]
[320.25234985 -46.96266556]
[325.46597290 -61.02745438]
[322.18197632 -77.09442139]
[334.63217163 -87.76795959]
[350.00888062 -82.06804657]
[352.49383545 -65.85826111]
[339.53076172 -55.81384659]
[334.31713867 -41.74905777]
[329.10354614 -27.68426895]
[339.47268677 -16.84449768]
[349.84091187 -6.00568008]
[364.12313843 -10.59026432]
[378.40533447 -15.17484951]
[392.68756104 -19.75943375]
[406.96975708 -24.34401894]
[421.25198364 -28.92860222]
[434.60186768 -45.66559601]
[454.58511353 -40.57166672]
[468.60305786 -45.90988159]
[482.62103271 -51.24810028]
[496.63900757 -56.58631897]
[506.78213501 -68.72828674]
[521.42974854 -66.02693176]
[535.44769287 -71.36515045]
[549.46569824 -76.70336914]
[563.48364258 -82.04158783]
[573.41259766 -95.09330750]
[589.64379883 -92.75228882]
[595.47998047 -77.42677307]
[584.91735840 -64.88233948]
[568.82183838 -68.02362061]
[554.80389404 -62.68540192]
[540.78588867 -57.34718323]
[526.76794434 -52.00896835]
[517.62750244 -40.24882126]
[501.97723389 -42.56834793]
[487.95925903 -37.23013306]
[473.94128418 -31.89191437]
[459.92330933 -26.55369759]
[457.64114380 -17.91702271]
[451.53460693 -11.20934105]
[442.89068604 -8.03342724]
[433.62045288 -9.22700787]
[425.83657837 -14.64639091]
[411.55435181 -10.06180573]
[397.27212524 -5.47722149]
[382.98992920 -0.89263690]
[368.70770264 3.69194770]
[354.42550659 8.27653217]
[312.52990723 -8.40065193]
[299.40847778 -1.13238859]
[286.28701782 6.13587427]
[278.90280151 19.07118988]
[263.08178711 18.98977089]
[249.96034241 26.25803375]
[245.61917114 32.26843643]
[236.54089355 33.53649521]
[223.29251099 40.57073212]
[214.81864929 55.92306519]
[196.43492126 55.15628815]
[183.31347656 62.42455292]
[170.19203186 69.69281769]
[157.07058716 76.96107483]
[143.94912720 84.22933960]
[145.41807556 110.83687592]
[132.09405518 133.91477966]
[108.31677246 145.94639587]
[108.58300018 160.94403076]
[108.84922028 175.94166565]
[109.11544037 190.93930054]
[109.38166809 205.93695068]
[109.64788818 220.93458557]
[109.91410828 235.93222046]
[110.18033600 250.92985535]
[110.44655609 265.92749023]
[110.71277618 280.92514038]
[124.60118866 287.25558472]
[134.36093140 298.99060059]
[138.05419922 313.80014038]
[134.94767761 328.74377441]
[125.65819550 340.85443115]
[112.03016663 347.72756958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 170]
[7 169]
[8 168]
[9 167]
[10 166]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[20 65]
[21 64]
[22 63]
[23 62]
[24 61]
[25 60]
[26 59]
[27 58]
[28 57]
[29 56]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[79 158]
[80 157]
[81 156]
[82 155]
[83 154]
[86 152]
[87 151]
[88 149]
[89 148]
[91 146]
[92 145]
[93 144]
[94 103]
[95 102]
[96 101]
[105 143]
[106 142]
[107 141]
[108 140]
[109 139]
[110 138]
[112 133]
[113 132]
[114 131]
[115 130]
[117 128]
[118 127]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
