%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUUGGCGCGAGAUCCGAACGUCGGCGGCCGCGGUUCUGGCGUUCCCUGAGGCGCCGGGAGCCUGCGCCGGCGUCCUGCCGGCUUCGUCUCCUCAGCGGCCAUGAGGCGGACAGGCCCCGAGGAGGAGGCCUGCGGCGUGUGGCUGGACGCGGCGGCGCUGAAGAGGCGGAAAGUGCAGACACAUUUAAUCAAACCAGGCA\
) } def
/len { sequence length } bind def

/coor [
[78.76948547 168.96900940]
[72.44196320 182.56909180]
[66.11443329 196.16918945]
[59.78691101 209.76927185]
[53.45938492 223.36936951]
[47.13185883 236.96945190]
[40.80433273 250.56954956]
[34.47680664 264.16964722]
[28.36155319 277.86648560]
[22.46004868 291.65676880]
[27.06740189 307.02401733]
[17.80741501 320.12484741]
[1.78356063 320.90948486]
[-8.71203327 308.77597046]
[-5.62804556 293.03213501]
[8.66975403 285.75527954]
[14.57125759 271.96496582]
[13.65524769 267.27105713]
[15.68330097 261.95242310]
[20.87671852 257.84210205]
[27.20424461 244.24201965]
[33.53176880 230.64193726]
[39.85929489 217.04183960]
[46.18682098 203.44175720]
[52.51434708 189.84165955]
[58.84186935 176.24157715]
[65.16939545 162.64147949]
[71.28465271 148.94464111]
[77.18615723 135.15434265]
[83.08766174 121.36404419]
[74.44159698 109.10657501]
[59.47061539 110.03911591]
[44.50733566 111.08805084]
[29.55266380 112.25331116]
[14.59799290 113.41856384]
[-0.35667819 114.58382416]
[-15.31134892 115.74907684]
[-30.26601982 116.91433716]
[-45.21117783 118.19585419]
[-60.14591599 119.59353638]
[-75.08065796 120.99122620]
[-90.01539612 122.38891602]
[-104.95013428 123.78660583]
[-119.88488007 125.18429565]
[-129.77603149 137.51071167]
[-145.49511719 139.14962769]
[-157.71626282 129.12870789]
[-159.18890381 113.39317322]
[-149.03932190 101.27864838]
[-133.28910828 99.97246552]
[-121.28256989 110.24955750]
[-106.34782410 108.85186768]
[-91.41308594 107.45417786]
[-76.47834778 106.05648804]
[-61.54360580 104.65879822]
[-46.60886765 103.26110840]
[-40.23744202 99.50511169]
[-31.43127632 101.95967102]
[-16.47660637 100.79441071]
[-1.52193594 99.62915039]
[13.43273449 98.46389771]
[28.38740540 97.29863739]
[43.34207535 96.13337708]
[49.77114105 92.47692108]
[58.53807068 95.06813049]
[73.50905609 94.13558960]
[78.65153503 80.04463959]
[67.80039978 69.68833923]
[56.94926834 59.33203506]
[46.09814072 48.97573471]
[35.24700928 38.61943436]
[24.39587784 28.26313591]
[8.38819599 27.19837952]
[-0.64123440 13.93757439]
[4.23419189 -1.34672403]
[19.27446556 -6.92971039]
[32.94197464 1.47140479]
[34.75217819 17.41200447]
[45.60330963 27.76830482]
[56.45444107 38.12460327]
[67.30557251 48.48090363]
[78.15670013 58.83720398]
[89.00783539 69.19350433]
[104.00737762 69.31015015]
[115.01825714 59.12385559]
[126.02913666 48.93756104]
[137.04000854 38.75127029]
[148.05088806 28.56497574]
[159.06176758 18.37868309]
[170.07264709 8.19238949]
[181.08352661 -1.99390352]
[185.95936584 -17.04504204]
[200.55621338 -20.00832558]
[211.56709290 -30.19461823]
[222.57797241 -40.38091278]
[233.58885193 -50.56720352]
[244.59973145 -60.75349808]
[255.61061096 -70.93978882]
[262.14886475 -84.43982697]
[263.31414795 -99.39450073]
[264.47940063 -114.34917450]
[256.92352295 -128.90393066]
[265.97723389 -142.57736206]
[282.32681274 -141.30340576]
[289.15322876 -126.39260864]
[279.43405151 -113.18391418]
[278.26879883 -98.22924042]
[277.10354614 -83.27457428]
[284.08712769 -80.53968811]
[295.80746460 -89.90095520]
[298.05429077 -75.06991577]
[305.03787231 -72.33502960]
[314.33801270 -84.10394287]
[323.63815308 -95.87285614]
[332.93829346 -107.64176941]
[342.23843384 -119.41068268]
[351.53857422 -131.17959595]
[360.74691772 -143.02047729]
[369.86291504 -154.93260193]
[369.18209839 -170.96119690]
[381.38333130 -181.37799072]
[397.10687256 -178.19209290]
[404.29095459 -163.84747314]
[397.42459106 -149.34806824]
[381.77505493 -145.81660461]
[372.65905762 -133.90447998]
[371.08941650 -126.67684174]
[363.30749512 -121.87945557]
[354.00735474 -110.11054230]
[344.70721436 -98.34162903]
[335.40707397 -86.57270813]
[326.10693359 -74.80379486]
[316.80679321 -63.03488541]
[324.77316284 -50.32516479]
[339.41900635 -53.56542969]
[351.22195435 -64.10113525]
[365.32009888 -59.29582977]
[379.96594238 -62.53609848]
[394.61178589 -65.77636719]
[409.25762939 -69.01663208]
[423.90347290 -72.25689697]
[432.18847656 -85.71551514]
[447.58267212 -89.29248047]
[460.95291138 -80.86564636]
[464.36694336 -65.43450165]
[455.79922485 -52.15407944]
[440.33285522 -48.90340805]
[427.14373779 -57.61105728]
[412.49789429 -54.37079239]
[397.85205078 -51.13052368]
[383.20620728 -47.89025879]
[368.56036377 -44.64999008]
[357.80499268 -34.34605408]
[342.65927124 -38.91959000]
[328.01342773 -35.67932129]
[284.30661011 -34.78739166]
[265.79690552 -59.92891312]
[254.78602600 -49.74261856]
[243.77514648 -39.55632782]
[232.76426697 -29.37003326]
[221.75338745 -19.18374062]
[210.74250793 -8.99744701]
[206.65425110 5.32509899]
[191.26982117 9.01697445]
[180.25894165 19.20326805]
[169.24806213 29.38956070]
[158.23718262 39.57585526]
[147.22630310 49.76214600]
[136.21542358 59.94844055]
[125.20455170 70.13473511]
[114.19367218 80.32102966]
[125.43108368 85.27758026]
[134.32177734 96.43153381]
[137.64680481 112.37445068]
[147.66061401 123.54241180]
[157.67443848 134.71037292]
[173.42019653 139.29328918]
[177.06082153 155.28321838]
[164.85115051 166.23109436]
[149.35145569 160.87467957]
[146.50648499 144.72419739]
[136.49266052 133.55624390]
[126.47883606 122.38827515]
[119.07861328 123.60758972]
[122.51236725 138.20928955]
[125.94611359 152.81097412]
[129.37986755 167.41265869]
[132.81361389 182.01435852]
[139.78799438 195.29434204]
[133.10234070 208.72200012]
[118.30183411 211.16024780]
[107.66221619 200.58676147]
[110.00762939 185.77204895]
[108.57526398 170.84059143]
[107.14289856 155.90913391]
[105.71054077 140.97769165]
[104.27817535 126.04622650]
[96.87795258 127.26554871]
[90.97644806 141.05584717]
[85.07494354 154.84614563]
[85.48174286 161.45680237]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 17]
[10 16]
[28 200]
[29 199]
[30 198]
[31 66]
[32 65]
[33 63]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[84 171]
[85 170]
[86 169]
[87 168]
[88 167]
[89 166]
[90 165]
[91 164]
[93 162]
[94 161]
[95 160]
[96 159]
[97 158]
[98 157]
[99 108]
[100 107]
[101 106]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 126]
[119 125]
[134 155]
[135 154]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
