%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCAGCCCGGGACUCCGGCGAGAGCGACGCAAGGUCGGCUGCGGCGGCGGCCCGAGGGCGCCCGUGUGCCCAGUGCGCGGCGGGGACGGCCGCGAGCUCGCUGGAGGGCUCCCCAGAAUAAUCCAGAAGUCGAUUCCAUCAUGGCAGAACUCAAGGUGGAGGCGCCGGCCAGCGUAGACUGGCAGAAACGCUGCCUGACCCUGGAAACUCAGCUUUUCCGGUUCCGCCUACAGGCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[443.17501831 193.63613892]
[449.38110352 186.13700867]
[437.34927368 177.17962646]
[425.31741333 168.22224426]
[413.28555298 159.26487732]
[406.05905151 157.79479980]
[401.15707397 150.11309814]
[389.24203491 141.00091553]
[377.32699585 131.88874817]
[342.08679199 137.07734680]
[326.92001343 113.93866730]
[311.94537354 113.06649017]
[296.97076416 112.19432068]
[281.99612427 111.32214355]
[267.00741577 110.74051666]
[252.01023865 110.44964600]
[237.01306152 110.15877533]
[222.01588440 109.86790466]
[207.01869202 109.57703400]
[192.02151489 109.28616333]
[177.02433777 108.99529266]
[162.02716064 108.70442963]
[147.02998352 108.41355896]
[132.03280640 108.12268829]
[132.36213684 126.99945831]
[121.29409027 146.61154175]
[98.88759613 160.33428955]
[68.83501434 162.05798340]
[57.53347397 171.92080688]
[46.23193359 181.78363037]
[43.71368408 197.62780762]
[29.68562508 205.41197205]
[14.90888596 199.16476440]
[10.71891308 183.67852783]
[20.32989693 170.83296204]
[36.36911392 170.48208618]
[47.67065048 160.61926270]
[58.97219086 150.75645447]
[51.22169876 137.91394043]
[37.22844315 143.31660461]
[23.23518944 148.71928406]
[9.24193287 154.12194824]
[-4.75132275 159.52461243]
[-18.74457741 164.92727661]
[-28.61339378 178.02455139]
[-44.85519028 175.75823975]
[-50.76179886 160.45974731]
[-40.25700760 147.86683655]
[-24.14724350 150.93402100]
[-10.15398884 145.53135681]
[3.83926702 140.12869263]
[17.83252335 134.72602844]
[31.82577896 129.32334900]
[45.81903458 123.92069244]
[44.90020370 116.47718811]
[31.08883095 110.62517548]
[43.06253815 101.59017944]
[42.14370728 94.14667511]
[27.25669861 92.30901337]
[12.36969090 90.47135162]
[-2.51731610 88.63368225]
[-17.40432358 86.79602051]
[-32.29133224 84.95835876]
[-47.17164612 91.85098267]
[-60.42340088 82.19059753]
[-58.41432571 65.91497803]
[-43.21118546 59.76708984]
[-30.45366669 70.07135010]
[-15.56665993 71.90901184]
[-0.67965239 73.74667358]
[14.20735550 75.58434296]
[29.09436226 77.42200470]
[43.98136902 79.25966644]
[46.90739059 72.35398865]
[33.09613037 66.50171661]
[38.94862747 52.69055557]
[52.75942993 58.54262924]
[55.68545151 51.63695145]
[44.00997543 42.21976852]
[32.33450317 32.80258560]
[20.65902901 23.38540459]
[8.98355579 13.96822357]
[-2.69191790 4.55104160]
[-18.00048447 7.74193382]
[-31.75406837 0.30063382]
[-37.45864868 -14.25930405]
[-32.42069244 -29.06312180]
[-19.01897621 -37.12091064]
[-3.58137345 -34.62802887]
[6.60294819 -22.76153755]
[6.72526407 -7.12443209]
[18.40073776 2.29274988]
[30.07621193 11.70993233]
[41.75168610 21.12711334]
[53.42715836 30.54429626]
[65.10263062 39.96147919]
[105.87754059 42.99073410]
[130.19540405 66.39372253]
[132.32366943 93.12550354]
[147.32084656 93.41637421]
[162.31802368 93.70724487]
[177.31521606 93.99811554]
[192.31239319 94.28898621]
[207.30957031 94.57985687]
[222.30674744 94.87072754]
[237.30392456 95.16159821]
[252.30110168 95.45246887]
[267.29827881 95.74333954]
[271.83154297 93.24247742]
[276.41427612 92.76389313]
[280.27258301 93.99104309]
[282.86831665 96.34752655]
[297.84292603 97.21969604]
[312.81756592 98.09186554]
[327.79217529 98.96404266]
[313.04281616 96.23347473]
[303.05108643 85.04573822]
[301.99838257 70.08272552]
[310.32522583 57.60620880]
[324.54699707 52.83740997]
[338.71209717 57.77199554]
[346.89263916 70.34491730]
[345.66473389 85.29577637]
[348.74545288 70.61554718]
[351.82620239 55.93531799]
[341.31399536 44.52156830]
[339.55175781 29.10488701]
[347.21704102 15.61329937]
[361.36242676 9.23459911]
[376.54870605 12.42152405]
[386.93646240 23.94863701]
[388.53137207 39.38352966]
[380.72015381 52.79116821]
[366.50640869 59.01604462]
[363.42568970 73.69627380]
[360.34497070 88.37650299]
[373.74945068 95.10848999]
[383.68511963 83.87094116]
[393.62078857 72.63339233]
[403.55645752 61.39584732]
[413.49212646 50.15829849]
[423.42779541 38.92074966]
[426.77218628 23.45705986]
[440.99899292 19.04718971]
[450.93466187 7.80964184]
[460.87033081 -3.42790604]
[459.65036011 -19.18503952]
[469.99301147 -31.13515282]
[485.76217651 -32.18845749]
[497.60226440 -21.72004318]
[498.48880005 -5.94063807]
[487.89578247 5.78811836]
[472.10787964 6.50776339]
[462.17221069 17.74531174]
[452.23654175 28.98285866]
[449.60284424 43.64276505]
[434.66534424 48.85641861]
[424.72967529 60.09396744]
[414.79400635 71.33151245]
[404.85833740 82.56906128]
[394.92266846 93.80661011]
[384.98699951 105.04415894]
[386.43917847 119.97370148]
[398.35421753 129.08587646]
[410.26925659 138.19805908]
[422.24295044 147.23301697]
[434.27478027 156.19039917]
[446.30664062 165.14778137]
[458.33850098 174.10516357]
[472.83984375 177.94059753]
[487.72686768 176.10293579]
[502.61386108 174.26527405]
[517.50085449 172.42761230]
[532.38787842 170.58993530]
[541.91107178 157.97709656]
[557.57501221 155.87516785]
[570.08642578 165.53120422]
[572.02264404 181.21644592]
[562.23486328 193.62510681]
[546.53002930 195.39537048]
[534.22552490 185.47694397]
[519.33856201 187.31460571]
[504.45153809 189.15228271]
[489.56451416 190.98994446]
[474.67752075 192.82760620]
[471.88595581 199.78872681]
[485.83154297 205.31323242]
[499.73007202 210.95512390]
[494.14645386 224.87715149]
[480.20147705 219.35260010]
[466.30282593 213.71096802]
[463.51126099 220.67208862]
[473.00372314 232.28643799]
[482.49618530 243.90080261]
[491.98864746 255.51515198]
[501.55596924 267.06790161]
[511.19778442 278.55856323]
[520.83959961 290.04922485]
[530.48144531 301.53991699]
[551.67987061 298.61145020]
[570.19079590 309.07534790]
[578.50622559 328.49792480]
[573.36853027 348.85131836]
[583.87182617 359.56024170]
[594.37506104 370.26919556]
[604.87835693 380.97814941]
[615.38159180 391.68710327]
[625.88488770 402.39602661]
[636.38812256 413.10498047]
[651.96362305 411.71289062]
[664.76031494 420.70056152]
[668.73602295 435.82431030]
[662.01348877 449.94317627]
[647.76696777 456.39062500]
[632.72314453 452.12240601]
[623.98529053 439.15380859]
[625.67919922 423.60824585]
[615.17590332 412.89929199]
[604.67266846 402.19033813]
[594.16937256 391.48141479]
[583.66613770 380.77246094]
[573.16284180 370.06350708]
[562.65960693 359.35455322]
[554.41619873 362.99023438]
[545.47064209 364.24310303]
[536.49926758 363.00564575]
[528.18408203 359.35894775]
[521.16058350 353.56787109]
[515.96942139 346.06158447]
[513.01458740 337.40197754]
[512.53228760 328.24142456]
[514.57171631 319.27374268]
[518.99078369 311.18173218]
[509.34893799 299.69104004]
[499.70712280 288.20037842]
[490.06530762 276.70971680]
[483.37258911 273.61273193]
[480.37429810 265.00759888]
[470.88183594 253.39324951]
[461.38937378 241.77890015]
[451.89691162 230.16453552]
[443.18377686 217.78593445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[4 167]
[5 166]
[7 165]
[8 164]
[9 163]
[11 115]
[12 114]
[13 113]
[14 112]
[15 108]
[16 107]
[17 106]
[18 105]
[19 104]
[20 103]
[21 102]
[22 101]
[23 100]
[24 99]
[28 38]
[29 37]
[30 36]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[123 136]
[124 135]
[125 134]
[137 162]
[138 161]
[139 160]
[140 159]
[141 158]
[142 157]
[144 155]
[145 154]
[146 153]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
[192 241]
[193 240]
[194 239]
[195 238]
[196 236]
[197 235]
[198 234]
[199 233]
[203 223]
[204 222]
[205 221]
[206 220]
[207 219]
[208 218]
[209 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
