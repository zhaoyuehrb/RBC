%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAGAGCUGACCUUGGAGCAGAGCAUUGCCGAGUAUCUGAAAGAUGUCAAUGACCCUCGCUGCUGCUCGGAGACCUUGGGGAUGACCUGCACCCACUAGCAUGCCUGGAUGGUUCAAAAAGGCGUGGUAUGGGCUGGCGUCUUUACUCAGCUUCUCCUCCUUCAUCCUGAUCAUCGUUGCCCUGGUAGUGCCCCACUGGC\
) } def
/len { sequence length } bind def

/coor [
[197.49873352 247.68170166]
[197.30026245 240.38943481]
[188.22265625 228.44804382]
[179.14503479 216.50665283]
[165.28321838 211.05697632]
[163.09132385 195.38833618]
[154.01370239 183.44692993]
[144.93609619 171.50553894]
[135.85847473 159.56414795]
[126.78086090 147.62275696]
[117.70324707 135.68135071]
[108.62564087 123.73995972]
[91.19806671 123.67516327]
[77.96080017 112.33940887]
[63.28698349 115.45051575]
[48.61316299 118.56162262]
[36.71784973 128.99291992]
[22.66256332 124.06359863]
[7.98874331 127.17470551]
[-6.68507767 130.28581238]
[-21.35889816 133.39692688]
[-36.03271866 136.50802612]
[-50.70653915 139.61912537]
[-65.35585022 142.84368896]
[-79.97976685 146.18150330]
[-94.60368347 149.51931763]
[-82.53749084 158.43037415]
[-80.16484833 173.24153137]
[-88.84371185 185.47579956]
[-103.60683441 188.13101196]
[-116.00469971 179.68750000]
[-118.94152069 164.97779846]
[-110.73709106 152.42131042]
[-125.60749817 154.38879395]
[-140.47790527 156.35627747]
[-150.08586121 168.61698914]
[-165.19459534 170.40046692]
[-176.82409668 161.16519165]
[-191.69450378 163.13267517]
[-206.53268433 165.33004761]
[-221.33508301 167.75677490]
[-236.13748169 170.18350220]
[-245.15289307 183.16416931]
[-260.72106934 185.88577271]
[-273.60571289 176.73361206]
[-276.16256714 161.13752747]
[-266.87469482 148.35038757]
[-251.25244141 145.95857239]
[-238.56420898 155.38110352]
[-223.76181030 152.95437622]
[-208.95941162 150.52764893]
[-205.49194336 147.23501587]
[-199.91726685 146.08973694]
[-193.66198730 148.26226807]
[-178.79158020 146.29478455]
[-169.96398926 134.35285950]
[-154.91131592 132.14572144]
[-142.44538879 141.48587036]
[-127.57498169 139.51838684]
[-112.70457458 137.55090332]
[-97.94149780 134.89540100]
[-83.31758118 131.55758667]
[-68.69366455 128.21977234]
[-62.86833191 123.66358948]
[-53.81764603 124.94531250]
[-39.14382553 121.83420563]
[-24.47000504 118.72309875]
[-9.79618359 115.61199188]
[4.87763691 112.50088501]
[19.55145836 109.38977814]
[30.39720154 99.18099976]
[45.50205612 103.88780212]
[60.17587662 100.77669525]
[74.84970093 97.66558838]
[76.72657776 90.18496704]
[80.77333832 83.61943817]
[86.61269379 78.58114624]
[93.70020294 75.53983307]
[101.37506866 74.77904510]
[106.60220337 60.71928024]
[111.82933044 46.65951157]
[117.05646515 32.59974289]
[122.28359222 18.53997231]
[127.51071930 4.48020267]
[132.73785400 -9.57956696]
[137.96498108 -23.63933563]
[138.02293396 -32.78014374]
[143.38331604 -37.87519073]
[148.82740784 -51.85238266]
[142.01435852 -61.60434341]
[140.77047729 -73.31470490]
[145.28996277 -84.05921173]
[154.34222412 -91.21083069]
[165.60437012 -93.08195496]
[171.47839355 -106.88397980]
[177.35241699 -120.68599701]
[183.22644043 -134.48802185]
[183.70855713 -143.61628723]
[189.29963684 -148.45706177]
[195.38655090 -162.16653442]
[193.91494751 -177.91915894]
[206.15121460 -186.41168213]
[212.23812866 -200.12115479]
[218.32504272 -213.83062744]
[224.41194153 -227.54008484]
[230.49885559 -241.24955750]
[236.58576965 -254.95903015]
[242.67266846 -268.66848755]
[232.43957520 -279.94696045]
[227.68470764 -294.41455078]
[229.23187256 -309.56466675]
[236.81301880 -322.77246094]
[249.11466980 -331.74963379]
[264.00549316 -334.94079590]
[278.90554810 -331.79306030]
[291.23330688 -322.85180664]
[298.85293579 -309.66616821]
[300.44427490 -294.52062988]
[295.73162842 -280.03924561]
[285.53146362 -268.73098755]
[271.61102295 -262.55511475]
[256.38214111 -262.58157349]
[250.29522705 -248.87211609]
[244.20832825 -235.16264343]
[238.12141418 -221.45318604]
[232.03450012 -207.74371338]
[225.94760132 -194.03424072]
[219.86068726 -180.32476807]
[221.76765442 -165.55274963]
[209.09600830 -156.07963562]
[203.00910950 -142.37016296]
[197.02845764 -128.61399841]
[191.15443420 -114.81197357]
[185.28041077 -101.00995636]
[179.40638733 -87.20793152]
[187.25953674 -70.67691040]
[180.42433167 -53.35599136]
[162.80459595 -46.40830231]
[157.36051941 -32.43110657]
[152.02474976 -18.41220474]
[146.79762268 -4.35243654]
[141.57049561 9.70733261]
[136.34336853 23.76710129]
[131.11622620 37.82686996]
[125.88909912 51.88663864]
[120.66197205 65.94641113]
[115.43484497 80.00617981]
[124.98591614 96.29986572]
[120.56703186 114.66234589]
[129.64465332 126.60373688]
[138.72225952 138.54513550]
[147.79986572 150.48652649]
[156.87748718 162.42793274]
[165.95509338 174.36932373]
[175.03271484 186.31071472]
[189.54383850 192.61453247]
[191.08644104 207.42903137]
[200.16404724 219.37043762]
[209.24166870 231.31182861]
[206.73243713 216.52319336]
[208.21853638 201.59698486]
[213.59437561 187.59339905]
[222.47813416 175.50709534]
[234.23881531 166.19653320]
[248.04106140 160.32304382]
[262.90451050 158.30378723]
[277.77346802 160.28221130]
[291.59179688 166.11778259]
[303.37799072 175.39601135]
[312.29492188 187.45787048]
[317.70919800 201.44664001]
[319.23626709 216.36871338]
[316.76766968 231.16418457]
[310.47872925 244.78216553]
[300.81616211 256.25537109]
[288.46627808 264.76892090]
[274.30627441 269.71807861]
[259.34191895 270.75131226]
[244.63606262 267.79522705]
[231.23330688 261.05981445]
[220.08721924 251.02537537]
[225.31436157 265.08514404]
[230.54148865 279.14489746]
[244.99661255 290.54760742]
[241.40307617 307.72195435]
[246.84716797 321.69915771]
[252.29124451 335.67633057]
[267.15872192 340.52322388]
[275.38842773 353.82006836]
[273.09457397 369.28848267]
[261.36022949 379.62478638]
[245.72599792 379.94848633]
[233.57388306 370.10671997]
[230.64173889 354.74649048]
[238.31405640 341.12042236]
[232.86996460 327.14321899]
[227.42588806 313.16604614]
[216.47785950 308.01196289]
[211.82994080 296.40664673]
[216.48171997 284.37203979]
[211.25459290 270.31225586]
[206.02745056 256.25250244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[4 157]
[6 155]
[7 154]
[8 153]
[9 152]
[10 151]
[11 150]
[12 149]
[14 74]
[15 73]
[16 72]
[18 70]
[19 69]
[20 68]
[21 67]
[22 66]
[23 65]
[24 63]
[25 62]
[26 61]
[33 60]
[34 59]
[35 58]
[38 55]
[39 54]
[40 51]
[41 50]
[42 49]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 142]
[85 141]
[86 140]
[88 139]
[89 138]
[94 135]
[95 134]
[96 133]
[97 132]
[99 131]
[100 130]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[181 202]
[182 201]
[183 200]
[185 197]
[186 196]
[187 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
