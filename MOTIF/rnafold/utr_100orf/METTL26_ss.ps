%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCCCGCGGAAGCCCGGCCACCGCCCCCGACGCGACCCGCGCCGCGUCCGCGGCGGGGAGUUGUUGCUGCCGCGAUGCUGGUGGCGGCGGCCGCGGAGCGGAACAAGGAUCCCAUCUUGCACGUGCUGCGGCAGUACCUGGAUCCGGCCCAGCGUGGCGUCCGCGUCCUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[100.41749573 406.00817871]
[92.15818787 393.29757690]
[88.74729156 378.52795410]
[90.59667969 363.48281860]
[97.48303986 349.97897339]
[108.57479858 339.64706421]
[122.53258514 333.73468018]
[121.73425293 318.75595093]
[120.93592072 303.77722168]
[120.13758850 288.79846191]
[119.33925629 273.81973267]
[118.54091644 258.84100342]
[110.13721466 246.54354858]
[117.12907410 232.35115051]
[116.33074188 217.37240601]
[115.53240967 202.39366150]
[114.60118103 187.42259216]
[113.53712463 172.46038818]
[111.94272614 157.54536438]
[109.81997681 142.69631958]
[107.69723511 127.84729004]
[81.26424408 117.67821503]
[78.57708740 92.71608734]
[66.77881622 83.45321655]
[54.98054123 74.19034576]
[43.18227005 64.92747498]
[27.54974937 62.49131775]
[22.31706619 48.54612732]
[10.51879311 39.28325653]
[-1.36121809 30.12545776]
[-13.32203197 21.07344437]
[-23.16466141 36.36520767]
[-40.11200714 37.15686035]
[-49.82268524 24.76108170]
[-64.51129913 21.72057533]
[-79.19990540 18.68006897]
[-93.88851929 15.63956356]
[-108.57713318 12.59905720]
[-123.29215240 9.68902493]
[-138.03240967 6.90969372]
[-153.02725220 11.95599937]
[-164.10050964 1.99445736]
[-178.84077454 -0.78487355]
[-193.58103943 -3.56420445]
[-208.32128906 -6.34353542]
[-223.06155396 -9.12286568]
[-237.80181885 -11.90219688]
[-253.08979797 -5.96843767]
[-265.70135498 -16.45085526]
[-262.66278076 -32.56603622]
[-247.09989929 -37.73606491]
[-235.02249146 -26.64245796]
[-220.28222656 -23.86312866]
[-205.54196167 -21.08379745]
[-190.80169678 -18.30446625]
[-176.06144714 -15.52513504]
[-161.32118225 -12.74580479]
[-147.38066101 -17.99090767]
[-135.25308228 -7.83056831]
[-120.51281738 -5.05123758]
[-113.33473206 -6.90752411]
[-105.53662872 -2.08955455]
[-90.84801483 0.95095134]
[-76.15940094 3.99145722]
[-61.47079086 7.03196287]
[-46.78217697 10.07246876]
[-39.03632736 2.59104085]
[-27.18175697 0.96481836]
[-31.38451576 -13.43437672]
[-35.58727646 -27.83357048]
[-39.79003525 -42.23276520]
[-43.99279785 -56.63196182]
[-48.19555664 -71.03115845]
[-52.39831543 -85.43035126]
[-56.60107422 -99.82954407]
[-67.89505768 -110.90910339]
[-64.03363800 -125.29446411]
[-68.23640442 -139.69366455]
[-80.45431519 -150.63233948]
[-76.82573700 -166.62500000]
[-61.08343887 -171.21978760]
[-49.42174530 -159.68995667]
[-53.83720779 -143.89642334]
[-49.63444519 -129.49722290]
[-38.64107513 -119.44759369]
[-42.20188141 -104.03230286]
[-37.99912262 -89.63311005]
[-33.79636002 -75.23391724]
[-29.59360123 -60.83472061]
[-25.39084244 -46.43552399]
[-21.18808174 -32.03633118]
[-16.98532104 -17.63713646]
[-12.78256226 -3.23794150]
[-4.27002001 9.11263084]
[7.69079399 18.16464233]
[14.94457245 19.69872475]
[19.78166199 27.48498535]
[31.57993507 36.74785233]
[46.36856461 38.52147293]
[52.44513702 53.12920380]
[64.24340820 62.39207458]
[76.04168701 71.65494537]
[87.83995819 80.91780853]
[94.88457489 76.88796997]
[103.24601746 75.49869537]
[111.92378235 77.16644287]
[119.79338074 81.92662048]
[125.75139618 89.40059662]
[128.86729431 98.81768799]
[143.65457153 96.30040741]
[158.44183350 93.78312683]
[173.22911072 91.26584625]
[188.01637268 88.74856567]
[202.80363464 86.23128510]
[208.38079834 70.68144226]
[220.96078491 60.11941910]
[237.05639648 57.34967041]
[252.26757812 63.03347778]
[262.48425293 75.53420258]
[277.22451782 72.75486755]
[291.96478271 69.97554016]
[306.70501709 67.19620514]
[314.58743286 62.51739883]
[321.73141479 64.50079346]
[336.51870728 61.98351288]
[351.30596924 59.46623230]
[365.90576172 50.84753799]
[378.22927856 62.49089432]
[370.45242310 77.55598450]
[353.82324219 74.25350189]
[339.03598022 76.77078247]
[324.24871826 79.28806305]
[309.48437500 81.93647003]
[294.74411011 84.71579742]
[280.00384521 87.49513245]
[265.26358032 90.27445984]
[261.59674072 103.44742584]
[252.56353760 113.80066681]
[239.88761902 119.27182007]
[226.02539062 118.73841858]
[213.69015503 112.24771118]
[205.32092285 101.01855469]
[190.53364563 103.53583527]
[175.74638367 106.05311584]
[160.95912170 108.57039642]
[146.17184448 111.08767700]
[131.38458252 113.60495758]
[122.54627228 125.72454071]
[124.66902161 140.57357788]
[126.79176331 155.42262268]
[129.64328003 158.79089355]
[131.10752869 162.51918030]
[131.24357605 166.12100220]
[130.26425171 169.18035889]
[128.49934387 171.39633179]
[129.56338501 186.35855103]
[133.30372620 194.72712708]
[130.51115417 201.59533691]
[131.30947876 216.57406616]
[132.10781860 231.55281067]
[140.56861877 244.92163086]
[133.51965332 258.04266357]
[134.31799316 273.02139282]
[135.11633301 288.00015259]
[135.91465759 302.97888184]
[136.71299744 317.95761108]
[137.51132202 332.93637085]
[152.01847839 337.33160400]
[164.14561462 346.42602539]
[172.42834473 359.12139893]
[175.86645508 373.88470459]
[174.04478455 388.93319702]
[167.18333435 402.44970703]
[156.11062622 412.80206299]
[142.16375732 418.74014282]
[127.02688599 419.54690552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[14 160]
[15 159]
[16 158]
[17 156]
[18 155]
[19 150]
[20 149]
[21 148]
[23 103]
[24 102]
[25 101]
[26 100]
[28 98]
[29 97]
[30 95]
[31 94]
[34 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 60]
[40 59]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[73 88]
[74 87]
[75 86]
[77 84]
[78 83]
[109 147]
[110 146]
[111 145]
[112 144]
[113 143]
[114 142]
[119 136]
[120 135]
[121 134]
[122 133]
[124 132]
[125 131]
[126 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
