%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUGUUCUCGCGAGAGUUAGCGGCCUCCGGUGUGGGAUGGCCGCGGAGCCGGGCGGAGCUGGCUUGCGGCUCCCGGGGCCGGCUCUCCGGCCGGAGACAUGGCCCGGGGGCCCGGCCCGCUAGGCAGGCCUCGCCCCGAUACGGUCGCCAUGCCCAAGAGAGGAAAGCGACUCAAGUUCCGGGCCCACGACGCCUGCU\
) } def
/len { sequence length } bind def

/coor [
[131.21963501 139.05494690]
[120.85501862 149.89813232]
[105.85884857 149.55937195]
[95.99444580 138.25921631]
[97.68385315 123.35507202]
[91.51113892 137.02612305]
[85.33841705 150.69717407]
[79.38120270 164.46348572]
[73.64095306 178.32168579]
[67.90069580 192.17987061]
[70.57650757 208.35923767]
[57.73267746 218.55572510]
[42.58184052 212.28002930]
[40.70988083 195.98808289]
[54.04250717 186.43962097]
[59.78275681 172.58142090]
[65.52301025 158.72323608]
[64.55158234 154.03889465]
[66.51881409 148.69519043]
[71.66737366 144.52444458]
[77.84008789 130.85340881]
[84.01280212 117.18235016]
[72.83939362 107.17461395]
[59.92826080 114.81023407]
[47.01713181 122.44585419]
[34.10599899 130.08148193]
[21.25523758 137.81826782]
[8.46563435 145.65574646]
[-4.32396793 153.49322510]
[-7.76923418 168.91741943]
[-21.15654755 177.31713867]
[-36.54344940 173.70898438]
[-44.80117035 160.23362732]
[-41.03054428 144.88572693]
[-27.46862030 136.77093506]
[-12.16144657 140.70361328]
[0.62815589 132.86613464]
[13.41775799 125.02866364]
[17.48196983 118.84774780]
[26.47037888 117.17034149]
[39.38150787 109.53472137]
[52.29264069 101.89910126]
[65.20376587 94.26348114]
[68.81989288 79.70588684]
[60.98241806 66.91628265]
[53.14493942 54.12667847]
[45.30746078 41.33707809]
[38.14871979 35.64870071]
[37.44914246 28.28445625]
[29.81352234 15.37332630]
[22.17790031 2.46219563]
[14.54228020 -10.44893456]
[6.90665865 -23.36006546]
[-0.72896248 -36.27119446]
[-8.36458397 -49.18232727]
[-14.65434742 -44.26641846]
[-23.67624092 -42.10955429]
[-34.21302414 -43.83714294]
[-47.57812119 -50.64700317]
[-60.94321823 -57.45685959]
[-74.30831909 -64.26671600]
[-87.67341614 -71.07657623]
[-103.31418610 -67.50644684]
[-115.76694489 -77.62120819]
[-115.47900391 -93.66167450]
[-102.67124176 -103.32297516]
[-87.16867828 -99.19379425]
[-80.86355591 -84.44167328]
[-67.49845886 -77.63181305]
[-54.13336182 -70.82196045]
[-40.76826477 -64.01210022]
[-27.40316582 -57.20223999]
[-15.77073002 -66.67253113]
[-19.72882652 -81.14089203]
[-23.68692207 -95.60925293]
[-34.79148483 -106.87864685]
[-30.68679810 -121.19650269]
[-34.64489365 -135.66485596]
[-38.60298920 -150.13322449]
[-42.56108475 -164.60157776]
[-46.51918030 -179.06994629]
[-50.47727966 -193.53829956]
[-63.92343140 -201.40206909]
[-67.73139954 -216.13142395]
[-60.15163803 -228.90180969]
[-64.10973358 -243.37017822]
[-68.06783295 -257.83853149]
[-72.02592468 -272.30688477]
[-75.98402405 -286.77526855]
[-88.01477814 -297.91946411]
[-84.11565399 -313.84832764]
[-68.29773712 -318.17559814]
[-56.83313751 -306.44976807]
[-61.51565933 -290.73336792]
[-57.55756378 -276.26498413]
[-53.59946823 -261.79663086]
[-49.64137268 -247.32827759]
[-45.68327713 -232.85990906]
[-32.65840530 -225.72630310]
[-28.43822670 -211.10972595]
[-36.00891495 -197.49639893]
[-32.05081940 -183.02804565]
[-28.09272575 -168.55967712]
[-24.13463020 -154.09132385]
[-20.17653275 -139.62295532]
[-16.21843719 -125.15459442]
[-5.39698315 -114.92007446]
[-9.21856022 -99.56735229]
[-5.26046419 -85.09899139]
[-1.30236864 -70.63063049]
[4.54654646 -56.81794739]
[12.18216801 -43.90681839]
[19.81778908 -30.99568558]
[27.45341110 -18.08455658]
[35.08903122 -5.17342567]
[42.72465134 7.73770475]
[50.36027527 20.64883614]
[58.09706116 33.49959946]
[65.93453979 46.28919983]
[73.77201843 59.07880402]
[81.60949707 71.86840820]
[104.46102905 69.99551392]
[120.75498199 82.63834381]
[123.77326202 100.71302795]
[137.80491638 106.01515198]
[151.83657837 111.31727600]
[165.86824036 116.61940002]
[179.89990234 121.92152405]
[193.93156433 127.22364044]
[207.96322632 132.52577209]
[223.60745239 130.16596985]
[232.77816772 141.90255737]
[246.80982971 147.20466614]
[260.84149170 152.50679016]
[281.73037720 147.75059509]
[294.13665771 164.23860168]
[308.40249634 168.87385559]
[322.66833496 173.50910950]
[336.93420410 178.14437866]
[350.88900757 171.22335815]
[365.29058838 176.12739563]
[371.80270386 189.47384644]
[386.06857300 194.10910034]
[400.43966675 198.40696716]
[414.90802002 202.36506653]
[429.37637329 206.32315063]
[443.84475708 210.28125000]
[458.31311035 214.23934937]
[472.78146362 218.19744873]
[482.87194824 208.79997253]
[496.18316650 205.64283752]
[509.21133423 209.44711304]
[518.58123779 219.11573792]
[521.92077637 232.04716492]
[536.32519531 236.23202515]
[549.21826172 227.38313293]
[564.77783203 228.94345093]
[575.65710449 240.17622375]
[576.71923828 255.77769470]
[567.46276855 268.38131714]
[552.25823975 272.03604126]
[538.28485107 265.01623535]
[532.14031982 250.63642883]
[517.73590088 246.45156860]
[505.09823608 256.92208862]
[488.54412842 257.80877686]
[474.58319092 248.56474304]
[468.82336426 232.66580200]
[454.35501099 228.70771790]
[439.88665771 224.74961853]
[425.41827393 220.79151917]
[410.94992065 216.83341980]
[396.48156738 212.87532043]
[393.24801636 214.30218506]
[389.16104126 214.22836304]
[384.93603516 212.26913452]
[381.43331909 208.37493896]
[367.16744995 203.73968506]
[354.05419922 210.70945740]
[339.52056885 206.21188354]
[332.29891968 192.41021729]
[318.03308105 187.77496338]
[303.76724243 183.13970947]
[289.50140381 178.50445557]
[282.33938599 183.77844238]
[273.41705322 185.18162537]
[264.72082520 182.27334595]
[258.24603271 175.58729553]
[255.53936768 166.53845215]
[241.50770569 161.23632812]
[227.47604370 155.93420410]
[212.83544922 158.67324829]
[202.66110229 146.55743408]
[188.62944031 141.25531006]
[174.59777832 135.95318604]
[160.56611633 130.65106201]
[146.53445435 125.34893799]
[132.50280762 120.04681396]
[118.47113800 114.74468994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 20]
[8 17]
[9 16]
[10 15]
[23 43]
[24 42]
[25 41]
[26 40]
[27 38]
[28 37]
[29 36]
[44 121]
[45 120]
[46 119]
[47 118]
[49 117]
[50 116]
[51 115]
[52 114]
[53 113]
[54 112]
[55 111]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[73 110]
[74 109]
[75 108]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[124 199]
[125 198]
[126 197]
[127 196]
[128 195]
[129 194]
[130 193]
[132 191]
[133 190]
[134 189]
[136 184]
[137 183]
[138 182]
[139 181]
[142 178]
[143 177]
[144 173]
[145 172]
[146 171]
[147 170]
[148 169]
[149 168]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
