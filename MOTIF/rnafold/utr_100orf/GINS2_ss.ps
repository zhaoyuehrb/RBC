%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAACGGCGGCCGCGGCGUCUCCUCCGGGACGCUGAGGGGCCCGAGGAGACCGUGAGGCUCUGGCCUGCAGCUCGCGCCGCCAUGGACGCUGCCGAGGUCGAAUUCCUCGCCGAGAAGGAGCUGGUUACCAUUAUCCCCAACUUCAGUCUGGACAAGAUCUACCUCAUCGGGGGGGACCUGG\
) } def
/len { sequence length } bind def

/coor [
[353.19131470 191.56277466]
[338.38943481 193.99272156]
[324.57583618 188.14596558]
[316.01617432 175.82800293]
[315.35366821 160.84265137]
[322.79290771 147.81736755]
[336.03817749 140.77407837]
[321.32330322 137.86334229]
[306.60842896 134.95260620]
[291.89355469 132.04187012]
[277.17868042 129.13113403]
[262.46380615 126.22039032]
[247.74893188 123.30965424]
[226.90686035 133.34255981]
[208.87362671 117.73115540]
[193.93901062 116.33221436]
[179.00437927 114.93327332]
[164.06976318 113.53432465]
[149.13513184 112.13538361]
[134.20051575 110.73643494]
[119.26589203 109.33749390]
[105.74574280 120.62400818]
[88.33738708 117.95401764]
[76.27742767 126.87351227]
[64.21746826 135.79301453]
[58.17449951 151.03816223]
[41.91311646 153.15934753]
[32.16163635 139.97448730]
[38.95154953 125.04701996]
[55.29797363 123.73305511]
[67.35793304 114.81356049]
[79.41788483 105.89405823]
[78.96302032 103.97600555]
[78.68649292 102.02424622]
[64.20310974 98.12145996]
[49.71973038 94.21867371]
[35.23635483 90.31588745]
[23.67356873 96.06484985]
[11.68020248 92.49990082]
[5.54251766 82.05949402]
[-8.87250042 77.91133118]
[-23.28751945 73.76316833]
[-37.70253754 69.61500549]
[-52.11755753 65.46684265]
[-57.22689819 66.73991394]
[-61.84582901 65.98640442]
[-65.28047180 63.73730087]
[-67.15091705 60.72294617]
[-81.33599854 55.84611511]
[-95.52108002 50.96928406]
[-109.70616150 46.09245300]
[-118.86246490 46.25978851]
[-124.08949280 41.01049805]
[-138.18971252 35.89349365]
[-154.23377991 39.28762817]
[-164.99246216 26.91093254]
[-159.39816284 11.49549103]
[-143.20581055 8.89938736]
[-133.07270813 21.79327202]
[-118.97248840 26.91027451]
[-104.82932281 31.90737152]
[-90.64424896 36.78420258]
[-76.45916748 41.66103363]
[-62.27408600 46.53786469]
[-47.96939468 51.05182648]
[-33.55437469 55.19998932]
[-19.13935661 59.34814835]
[-4.72433901 63.49631119]
[9.69067955 67.64447021]
[26.45727539 62.49598694]
[39.13913727 75.83251190]
[53.62251663 79.73529816]
[68.10589600 83.63808441]
[82.58927917 87.54087067]
[95.79513550 79.00756073]
[111.26882935 81.79624176]
[120.66483307 94.40287018]
[135.59945679 95.80181122]
[150.53407288 97.20075989]
[165.46870422 98.59970093]
[180.40332031 99.99864960]
[195.33795166 101.39759064]
[210.27256775 102.79653931]
[214.29960632 97.17561340]
[219.83245850 93.11511230]
[226.30419922 90.99130249]
[233.06385803 90.98404694]
[239.44190979 93.06197357]
[244.81661987 96.98876953]
[248.67456055 102.34960938]
[250.65966797 108.59477234]
[265.37454224 111.50551605]
[280.08941650 114.41625214]
[294.80429077 117.32698822]
[309.51916504 120.23773193]
[324.23403931 123.14846802]
[338.94894409 126.05920410]
[353.84307861 127.83807373]
[368.82955933 128.47470093]
[383.81604004 129.11131287]
[398.80252075 129.74792480]
[413.78900146 130.38455200]
[418.45483398 127.94399261]
[423.12130737 127.58850861]
[426.98901367 128.96546936]
[429.51675415 131.45452881]
[444.45138550 132.85346985]
[459.38598633 134.25241089]
[474.32061768 135.65135193]
[489.25524902 137.05030823]
[504.18984985 138.44924927]
[519.12451172 139.84819031]
[531.22515869 130.03942871]
[546.35107422 131.67091370]
[555.62762451 143.26748657]
[570.56225586 144.66642761]
[585.49688721 146.06536865]
[600.26293945 130.60684204]
[621.37554932 129.91474915]
[636.74847412 144.02990723]
[651.51068115 141.36946106]
[666.27282715 138.70901489]
[681.03503418 136.04856873]
[693.24407959 125.98628998]
[707.14190674 131.34356689]
[721.90405273 128.68312073]
[736.66625977 126.02266693]
[740.69500732 111.30084229]
[750.71881104 99.79057312]
[764.74743652 93.77723694]
[779.99548340 94.45477295]
[793.43548584 101.68866730]
[802.39886475 114.04261780]
[805.10601807 129.06375122]
[801.01934814 143.76959229]
[790.95031738 155.24029541]
[776.89807129 161.19834900]
[761.65283203 160.46076965]
[748.24139404 153.17401123]
[739.32672119 140.78485107]
[724.56451416 143.44529724]
[709.80236816 146.10574341]
[698.64916992 155.97773743]
[683.69549561 150.81074524]
[668.93328857 153.47119141]
[654.17114258 156.13163757]
[639.40893555 158.79209900]
[639.06500244 161.18560791]
[638.51165771 163.53953552]
[651.28460693 171.40414429]
[664.05755615 179.26875305]
[676.83050537 187.13336182]
[692.70806885 184.83509827]
[704.30535889 195.92034912]
[702.72589111 211.88546753]
[689.18127441 220.48336792]
[674.06182861 215.11848450]
[668.96588135 199.90631104]
[656.19293213 192.04168701]
[643.41998291 184.17707825]
[630.64703369 176.31246948]
[620.64801025 182.37257385]
[608.95074463 183.74613953]
[597.65704346 180.11491394]
[588.82586670 172.06640625]
[584.09790039 161.00000000]
[569.16333008 159.60105896]
[554.22869873 158.20210266]
[542.95983887 167.87417603]
[527.79406738 166.66819763]
[517.72552490 154.78280640]
[502.79092407 153.38386536]
[487.85629272 151.98492432]
[472.92166138 150.58598328]
[457.98706055 149.18704224]
[443.05242920 147.78808594]
[428.11779785 146.38914490]
[413.15240479 145.37103271]
[398.16592407 144.73442078]
[383.17941284 144.09779358]
[368.19293213 143.46118164]
[353.20645142 142.82455444]
[364.41958618 152.78778076]
[368.58285522 167.19845581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 97]
[8 96]
[9 95]
[10 94]
[11 93]
[12 92]
[13 91]
[15 83]
[16 82]
[17 81]
[18 80]
[19 79]
[20 78]
[21 77]
[23 32]
[24 31]
[25 30]
[34 74]
[35 73]
[36 72]
[37 71]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[48 64]
[49 63]
[50 62]
[51 61]
[53 60]
[54 59]
[98 182]
[99 181]
[100 180]
[101 179]
[102 178]
[106 177]
[107 176]
[108 175]
[109 174]
[110 173]
[111 172]
[112 171]
[115 168]
[116 167]
[117 166]
[120 147]
[121 146]
[122 145]
[123 144]
[125 142]
[126 141]
[127 140]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
