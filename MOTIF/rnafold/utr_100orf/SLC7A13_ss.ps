%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUAUUUCAGGAAUCCAUCAACAUCCUUUGCAGCUACAUAGGCAGGAAAAUCUAGAAAUUGUAAUUUAUAUAGAAUUUUAAAACUCUUCAAUUACAAUGGAUAGAGGGGAGAAAAUACAGCUCAAGAGAGUGUUUGGAUAUUGGUGGGGCACAAGUUUUUUGCUUAUUAAUAUCAUUGGUGCAGGAAUUUUUGUGU\
) } def
/len { sequence length } bind def

/coor [
[190.79550171 337.16607666]
[184.55265808 350.80523682]
[174.07371521 361.53799438]
[160.58784485 368.10543823]
[145.67686462 369.73718262]
[131.08978271 366.24188232]
[118.53761292 358.02951050]
[109.49267578 346.06335449]
[105.01591492 331.74697876]
[105.63243103 316.75964355]
[111.26991272 302.85934448]
[121.26709747 291.67648315]
[134.45137024 284.52279663]
[149.27624512 282.23739624]
[164.00282288 285.08831787]
[176.90293884 292.74050903]
[169.43714905 279.73043823]
[161.97135925 266.72036743]
[154.50555420 253.71031189]
[147.03976440 240.70024109]
[139.57397461 227.69017029]
[132.10816956 214.68009949]
[124.64237976 201.67002869]
[111.59691620 194.48219299]
[111.43915558 178.66177368]
[103.97335815 165.65170288]
[96.50756073 152.64163208]
[89.04177094 139.63156128]
[74.93740082 134.52598572]
[60.87377548 139.74273682]
[46.81014633 144.95947266]
[32.74652100 150.17622375]
[18.68289375 155.39295959]
[16.18789864 170.54785156]
[6.43732214 182.41468811]
[-7.94597960 187.80134583]
[-23.09296989 185.25886536]
[-34.92918777 175.47114563]
[-40.27074432 161.07102966]
[-37.68079376 145.93208313]
[-27.85601425 134.12660217]
[-13.43922615 128.83020020]
[1.69152832 131.46759033]
[13.46615219 141.32933044]
[27.52977943 136.11259460]
[41.59340668 130.89584351]
[55.65703201 125.67910767]
[69.72065735 120.46236420]
[70.66535950 113.02210236]
[55.78482819 111.13270569]
[40.90429688 109.24330902]
[26.02379608 107.35368347]
[27.91365242 92.47321320]
[42.79369354 94.36277771]
[57.67422485 96.25217438]
[72.55475616 98.14157104]
[73.49945068 90.70130157]
[61.18581772 82.13541412]
[48.87218475 73.56952667]
[36.55855179 65.00363922]
[24.24491882 56.43775177]
[11.93128681 47.87186432]
[-3.81585407 46.34276581]
[-9.84532833 32.72312164]
[-22.15896034 24.15723419]
[-37.20283508 28.42523384]
[-51.44929504 21.97756195]
[-58.17159271 7.85861301]
[-54.19566727 -7.26507807]
[-41.39882660 -16.25256729]
[-25.82335281 -14.86023426]
[-14.82350349 -3.74549937]
[-13.59307289 11.84360123]
[-1.27943981 20.40948868]
[13.58694744 21.32589722]
[20.49717522 35.55823135]
[32.81080627 44.12411880]
[45.12443924 52.69000626]
[57.43807220 61.25589371]
[69.75170898 69.82178497]
[82.06533813 78.38767242]
[88.65693665 74.80984497]
[81.50149536 61.62653732]
[94.68491364 54.47129822]
[101.84014130 67.65419769]
[108.43173981 64.07637787]
[107.95820618 49.08385468]
[107.48468018 34.09132767]
[107.01115417 19.09880447]
[106.53762054 4.10628128]
[106.06409454 -10.88624191]
[97.89499664 -24.43528175]
[105.22666168 -37.40046310]
[104.75313568 -52.39299011]
[104.27960968 -67.38551331]
[92.58697510 -78.01838684]
[91.92107391 -93.80863953]
[102.67697144 -105.38819885]
[118.47338867 -105.88711548]
[129.93858337 -95.00939178]
[130.27046204 -79.20858765]
[119.27213287 -67.85903931]
[119.74565887 -52.86651611]
[120.21918488 -37.87399292]
[128.35441589 -25.39731979]
[121.05661774 -11.35977077]
[121.53014374 3.63275337]
[122.00367737 18.62527657]
[122.47720337 33.61780167]
[122.95072937 48.61032486]
[123.42426300 63.60284805]
[130.27745056 66.64976501]
[136.37129211 52.94337845]
[137.93139648 38.02472687]
[152.60197449 34.89838028]
[160.10874939 47.88484955]
[150.07768250 59.03721619]
[143.98384094 72.74360657]
[150.83703613 75.79052734]
[162.28530884 66.09841156]
[173.73359680 56.40630341]
[178.26708984 48.46472168]
[185.43994141 46.65328217]
[197.03979492 37.14310455]
[208.63964844 27.63292885]
[213.91435242 12.10522938]
[230.04963684 9.17524052]
[240.44688416 21.85708427]
[234.41030884 37.10476685]
[218.14982605 39.23277664]
[206.54997253 48.74295807]
[194.95011902 58.25313568]
[183.42570496 67.85457611]
[171.97743225 77.54668427]
[160.52915955 87.23880005]
[148.58052063 118.49921417]
[124.98828125 133.89120483]
[102.05184174 132.16577148]
[109.51763153 145.17584229]
[116.98342896 158.18591309]
[124.44921875 171.19598389]
[138.02868652 179.31437683]
[137.65245056 194.20423889]
[145.11824036 207.21430969]
[152.58404541 220.22438049]
[160.04983521 233.23445129]
[167.51562500 246.24452209]
[174.98143005 259.25457764]
[182.44721985 272.26464844]
[189.91300964 285.27471924]
[198.95808411 297.24078369]
[209.43836975 307.97222900]
[219.91864014 318.70367432]
[230.39892578 329.43508911]
[240.87919617 340.16653442]
[251.35948181 350.89797974]
[261.83975220 361.62942505]
[279.67614746 366.18765259]
[283.36050415 383.34124756]
[294.00888062 393.90591431]
[304.65725708 404.47058105]
[315.30563354 415.03521729]
[325.95401001 425.59988403]
[336.60238647 436.16455078]
[347.25079346 446.72918701]
[353.55072021 448.78640747]
[357.29705811 453.07620239]
[358.06195068 457.79946899]
[368.37152100 468.69500732]
[378.68106079 479.59054565]
[388.99063110 490.48608398]
[399.30020142 501.38165283]
[409.60974121 512.27716064]
[424.88793945 519.62658691]
[422.05517578 536.34222412]
[405.20861816 538.24749756]
[398.71420288 522.58673096]
[388.40463257 511.69119263]
[378.09509277 500.79565430]
[367.78552246 489.90011597]
[357.47595215 479.00457764]
[347.16641235 468.10900879]
[336.68612671 457.37759399]
[326.03775024 446.81292725]
[315.38937378 436.24826050]
[304.74096680 425.68359375]
[294.09259033 415.11895752]
[283.44421387 404.55429077]
[272.79583740 393.98962402]
[260.69610596 393.72195435]
[251.73788452 384.99890137]
[251.10830688 372.10971069]
[240.62803650 361.37826538]
[230.14776611 350.64682007]
[219.66748047 339.91537476]
[209.18721008 329.18392944]
[198.70692444 318.45251465]
[188.22665405 307.72106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 150]
[17 149]
[18 148]
[19 147]
[20 146]
[21 145]
[22 144]
[23 143]
[25 141]
[26 140]
[27 139]
[28 138]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[57 81]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[64 74]
[65 73]
[86 111]
[87 110]
[88 109]
[89 108]
[90 107]
[91 106]
[93 104]
[94 103]
[95 102]
[119 135]
[120 134]
[121 133]
[123 132]
[124 131]
[125 130]
[151 198]
[152 197]
[153 196]
[154 195]
[155 194]
[156 193]
[157 192]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[164 184]
[165 183]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
