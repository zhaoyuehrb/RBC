%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGCCGCAUAGAGACGCAGCGCACGCGCAGUCGCGUAUCCGUGUGAUGGGCGGGCUGUUGACGGCGCUGCGAUGGCUGCCUGCGAGGGCAGGAGAAGCGGAGCUCUCGGUUCCUCUCAGUCGGACUUCCUGACGCCGCCAGUGGGCGGGGCCCCUUGGGCCGUCGCCACCA\
) } def
/len { sequence length } bind def

/coor [
[187.27348328 238.64811707]
[179.77348328 225.65773010]
[172.27348328 212.66735840]
[164.77348328 199.67697144]
[157.27348328 186.68659973]
[149.77348328 173.69621277]
[136.70915222 166.54272461]
[136.50976562 150.72277832]
[129.00976562 137.73239136]
[117.98020935 143.46411133]
[105.98096466 146.09107971]
[93.85813141 145.50608826]
[82.44649506 141.82574463]
[72.51198578 135.37716675]
[64.70033264 126.67037964]
[59.49524307 116.35866547]
[57.18882751 105.18985748]
[42.21082687 104.37777710]
[27.23282623 103.56569672]
[12.25482464 102.75360870]
[-2.72317624 101.94152832]
[-17.70117760 101.12944031]
[-32.67918015 100.31735992]
[-47.65718079 99.50527954]
[-56.43060303 102.17231750]
[-62.89752197 98.54090881]
[-77.85842133 97.45854187]
[-92.82848358 96.51127625]
[-107.80648041 95.69919586]
[-122.79120636 95.02236176]
[-137.78141785 94.48081970]
[-152.77165222 93.93928528]
[-167.76187134 93.39775085]
[-182.75209045 92.85621643]
[-197.74658203 92.45001984]
[-212.74414062 92.17921448]
[-226.68176270 99.66609955]
[-239.26725769 91.70027924]
[-254.26481628 91.42946625]
[-269.26235962 91.15865326]
[-284.25991821 90.88784027]
[-296.75878906 100.94559479]
[-312.38308716 97.30403900]
[-319.14718628 82.75666046]
[-311.86227417 68.46296692]
[-296.11669922 65.38785553]
[-283.98910522 75.89028931]
[-268.99157715 76.16110229]
[-253.99400330 76.43191528]
[-238.99644470 76.70272827]
[-226.13156128 69.19646454]
[-212.47332764 77.18165588]
[-197.47576904 77.45246887]
[-190.70780945 74.41886139]
[-182.21055603 77.86598969]
[-167.22033691 78.40753174]
[-152.23011780 78.94906616]
[-137.23988342 79.49060059]
[-122.24966431 80.03213501]
[-115.42803192 77.12121582]
[-106.99440002 80.72119141]
[-92.01639557 81.53327942]
[-85.14331818 78.74598694]
[-76.77605438 82.49764252]
[-61.81515503 83.58000946]
[-46.84509659 84.52727509]
[-31.86709404 85.33935547]
[-16.88909340 86.15144348]
[-1.91109252 86.96352386]
[13.06690884 87.77561188]
[28.04491043 88.58769226]
[43.02291107 89.39977264]
[58.00091171 90.21186066]
[60.65553284 80.01051331]
[65.80406952 70.53701782]
[73.24470520 62.40383148]
[82.62487793 56.16692734]
[93.45713806 52.28871918]
[92.64505005 37.31071854]
[91.83296967 22.33271790]
[91.02088165 7.35471630]
[90.20880127 -7.62328482]
[89.39672089 -22.60128593]
[79.99190521 -36.03562546]
[87.16824341 -50.78120422]
[103.54334259 -51.66903687]
[112.27189636 -37.78579712]
[104.37471771 -23.41337013]
[105.18680573 -8.43536854]
[105.99888611 6.54263258]
[106.81096649 21.52063370]
[107.62305450 36.49863434]
[108.43513489 51.47663498]
[122.64993286 56.26615906]
[132.36073303 44.83372879]
[142.07151794 33.40129852]
[151.78231812 21.96886635]
[152.72676086 16.76477623]
[155.32946777 12.85208416]
[158.81156921 10.64878464]
[162.34162903 10.19889355]
[172.65711975 -0.69103914]
[182.97261047 -11.58097172]
[193.28810120 -22.47090340]
[203.60360718 -33.36083603]
[213.91909790 -44.25077057]
[220.42204285 -59.90797043]
[237.26754761 -57.99350739]
[240.09120178 -41.27635193]
[224.80902100 -33.93527603]
[214.49353027 -23.04534531]
[204.17803955 -12.15541172]
[193.86254883 -1.26547968]
[183.54705811 9.62445259]
[173.23156738 20.51438522]
[163.21475220 31.67966080]
[153.50395203 43.11209106]
[143.79316711 54.54452133]
[134.08236694 65.97695160]
[144.61090088 82.62111664]
[147.55404663 101.97790527]
[162.49296570 100.62561035]
[177.43188477 99.27330780]
[192.37080383 97.92101288]
[207.30972290 96.56871796]
[218.64787292 85.21855927]
[234.57429504 87.14949036]
[242.87161255 100.88026428]
[237.17483521 115.87779999]
[221.85403442 120.63728333]
[208.66201782 111.50763702]
[193.72309875 112.85993195]
[178.78417969 114.21222687]
[163.84526062 115.56452942]
[148.90634155 116.91682434]
[142.00013733 130.23239136]
[149.50013733 143.22277832]
[163.10092163 151.30541992]
[162.76387024 166.19621277]
[170.26387024 179.18659973]
[177.76387024 192.17697144]
[185.26387024 205.16735840]
[192.76387024 218.15773010]
[200.26387024 231.14811707]
[220.45849609 240.82023621]
[219.80694580 262.44207764]
[228.22474670 274.85742188]
[236.64256287 287.27276611]
[245.06036377 299.68807983]
[253.47816467 312.10342407]
[262.00772095 324.44226074]
[270.64828491 336.70358276]
[279.28887939 348.96493530]
[287.92944336 361.22625732]
[296.57003784 373.48760986]
[310.63641357 382.95193481]
[305.43591309 399.08856201]
[288.49023438 398.55838013]
[284.30871582 382.12817383]
[275.66812134 369.86685181]
[267.02752686 357.60549927]
[258.38696289 345.34417725]
[249.74638367 333.08285522]
[243.30073547 329.41381836]
[241.06283569 320.52124023]
[232.64503479 308.10589600]
[224.22721863 295.69055176]
[215.80941772 283.27523804]
[207.39161682 270.85989380]
[199.44044495 271.05847168]
[191.97833252 268.04434204]
[186.26341248 262.24496460]
[183.29101562 254.56376648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[8 137]
[9 136]
[17 73]
[18 72]
[19 71]
[20 70]
[21 69]
[22 68]
[23 67]
[24 66]
[26 65]
[27 64]
[28 62]
[29 61]
[30 59]
[31 58]
[32 57]
[33 56]
[34 55]
[35 53]
[36 52]
[38 50]
[39 49]
[40 48]
[41 47]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[94 119]
[95 118]
[96 117]
[97 116]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[106 110]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
[146 169]
[147 168]
[148 167]
[149 166]
[150 165]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
