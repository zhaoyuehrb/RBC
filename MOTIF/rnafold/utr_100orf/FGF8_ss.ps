%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCGCACCCUCUCCGCUCGCGCCCUGCUCAGCGCGUCCUCCCGCGGCGGCCCGCGGGACGGCGUGACCCGCCGGGCUCUCGGUGCCCCGGGGCCGCGCGCCAUGGGCAGCCCCCGCUCCGCGCUGAGCUGCCUGCUGUUGCACUUGCUGGUCCUCUGCCUCCAAGCCCAGGAAGGCCCGGGCAGGGGCCCUGCGCUGGGCA\
) } def
/len { sequence length } bind def

/coor [
[247.91853333 427.35858154]
[248.40699768 442.49267578]
[243.95259094 456.96459961]
[235.03849792 469.20458984]
[222.63163757 477.88494873]
[208.07781982 482.06408691]
[192.95573425 481.28866577]
[178.90570068 475.64282227]
[167.45179749 465.73895264]
[159.83641052 452.65136719]
[156.88563538 437.79971313]
[158.91954041 422.79498291]
[165.71748352 409.26477051]
[176.54211426 398.67675781]
[190.21922302 392.17941284]
[205.26522827 390.47753906]
[208.48977661 375.82824707]
[211.71434021 361.17892456]
[214.93888855 346.52960205]
[218.05000305 331.85580444]
[221.04747009 317.15832520]
[224.04493713 302.46087646]
[227.04240417 287.76342773]
[215.57598877 279.26586914]
[208.76504517 266.61883545]
[207.97059631 252.18377686]
[213.42184448 238.69416809]
[203.44830322 227.49021912]
[193.47476196 216.28627014]
[183.50122070 205.08232117]
[173.52766418 193.87838745]
[163.55412292 182.67443848]
[153.58058167 171.47048950]
[143.60704041 160.26654053]
[133.63349915 149.06259155]
[123.65995026 137.85864258]
[103.48303986 144.50773621]
[82.51741028 141.07833862]
[65.51061249 128.34700012]
[56.31370926 109.19666290]
[41.32493591 109.77686310]
[26.33616066 110.35706329]
[11.34738636 110.93726349]
[-3.64138842 111.51745605]
[-18.63016319 112.09765625]
[-33.61893845 112.67785645]
[-48.60771179 113.25805664]
[-62.18598557 122.45384216]
[-76.81874084 115.05017090]
[-77.45306396 98.66329193]
[-63.43640518 90.15063477]
[-49.18791199 98.26927948]
[-34.19913483 97.68907928]
[-19.21036148 97.10887909]
[-4.22158718 96.52868652]
[10.76718807 95.94848633]
[25.75596237 95.36828613]
[40.74473572 94.78808594]
[55.73351288 94.20788574]
[53.65148926 90.86537933]
[51.82682800 87.23255157]
[38.68446350 80.00217438]
[25.54210091 72.77180481]
[12.39973927 65.54142761]
[-3.34640718 68.61363220]
[-15.47205830 58.10895920]
[-14.67545223 42.08569717]
[-1.56767750 32.83551788]
[13.79610348 37.45437241]
[19.63011169 52.39906693]
[32.77247620 59.62944031]
[45.91483688 66.85980988]
[59.05720139 74.09018707]
[68.94374847 62.80939865]
[60.05202103 50.72895432]
[51.16028976 38.64851379]
[42.26855850 26.56806755]
[26.65215683 25.75446320]
[15.24757957 15.05541515]
[13.43972111 -0.47731397]
[22.08219719 -13.50964355]
[37.09429550 -17.88810539]
[51.38776016 -11.54532623]
[58.21365738 2.52383018]
[54.34900284 17.67633820]
[63.24073410 29.75678062]
[72.13246155 41.83722687]
[81.02419281 53.91766739]
[87.30988312 54.49629974]
[93.18195343 55.87988281]
[93.41407776 40.88167953]
[93.64620972 25.88347626]
[93.87833405 10.88527203]
[94.11046600 -4.11293221]
[86.58765411 -18.03118896]
[94.52098083 -30.63719940]
[94.75311279 -45.63540268]
[87.23029327 -59.55366135]
[95.16362762 -72.15966797]
[95.39575195 -87.15787506]
[89.59525299 -103.08867645]
[103.29773712 -113.07257843]
[116.68469238 -102.66941071]
[110.39395905 -86.92574310]
[110.16183472 -71.92754364]
[117.70124817 -59.08205795]
[109.75131226 -45.40327454]
[109.51918793 -30.40507126]
[117.05860138 -17.55958748]
[109.10866547 -3.88080382]
[108.87654114 11.11740017]
[108.64440918 26.11560440]
[108.41228485 41.11380768]
[108.18015289 56.11201096]
[122.48410797 61.43142319]
[134.16069031 71.25774384]
[141.84545898 84.44273376]
[144.64038086 99.44565582]
[142.21887207 114.51335144]
[134.86390686 127.88510132]
[144.83744812 139.08905029]
[154.81098938 150.29299927]
[164.78453064 161.49694824]
[174.75807190 172.70089722]
[184.73161316 183.90483093]
[194.70515442 195.10877991]
[204.67871094 206.31272888]
[214.65225220 217.51667786]
[224.62579346 228.72062683]
[248.01226807 225.82301331]
[267.21282959 238.96017456]
[281.05990601 233.19313049]
[292.55758667 216.64025879]
[311.60617065 219.94110107]
[325.26812744 213.74830627]
[338.93008423 207.55549622]
[348.03500366 193.91612244]
[364.37969971 195.25138855]
[371.15014648 210.18768311]
[361.38150024 223.35983276]
[345.12289429 221.21745300]
[331.46093750 227.41026306]
[317.79898071 233.60307312]
[315.07284546 243.45909119]
[307.20422363 250.32922363]
[296.63531494 251.76042175]
[286.82696533 247.04019165]
[272.97988892 252.80723572]
[273.31506348 260.63339233]
[271.77755737 268.31433105]
[284.57019043 276.14685059]
[297.36282349 283.97937012]
[310.15545654 291.81192017]
[322.94808960 299.64443970]
[331.90725708 301.45858765]
[335.87677002 307.69845581]
[348.54666138 315.72802734]
[361.21655273 323.75756836]
[373.88644409 331.78713989]
[386.55633545 339.81671143]
[399.22622681 347.84625244]
[410.10604858 343.03503418]
[421.83712769 344.06561279]
[431.51235962 350.56637573]
[436.79034424 360.82461548]
[436.46148682 372.23641968]
[448.87683105 380.65420532]
[461.29217529 389.07202148]
[476.76412964 385.84802246]
[489.93820190 394.57836914]
[492.99844360 410.08355713]
[484.12927246 423.16458130]
[468.59262085 426.06072998]
[455.60607910 417.05377197]
[452.87435913 401.48736572]
[440.45901489 393.06954956]
[428.04370117 384.65173340]
[410.31130981 389.18041992]
[394.62750244 379.14288330]
[391.19668579 360.51614380]
[378.52679443 352.48660278]
[365.85690308 344.45703125]
[353.18698120 336.42745972]
[340.51708984 328.39791870]
[327.84719849 320.36834717]
[315.11557007 312.43707275]
[302.32293701 304.60455322]
[289.53030396 296.77200317]
[276.73767090 288.93948364]
[263.94503784 281.10696411]
[257.44689941 286.18365479]
[249.88456726 289.47146606]
[241.73986816 290.76089478]
[238.74240112 305.45834351]
[235.74491882 320.15582275]
[232.74745178 334.85327148]
[234.09916687 343.89376831]
[229.58819580 349.75418091]
[226.36364746 364.40347290]
[223.13908386 379.05279541]
[219.91453552 393.70208740]
[232.85533142 401.56433105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 201]
[17 200]
[18 199]
[19 198]
[20 196]
[21 195]
[22 194]
[23 193]
[27 129]
[28 128]
[29 127]
[30 126]
[31 125]
[32 124]
[33 123]
[34 122]
[35 121]
[36 120]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[61 73]
[62 72]
[63 71]
[64 70]
[74 88]
[75 87]
[76 86]
[77 85]
[90 114]
[91 113]
[92 112]
[93 111]
[94 110]
[96 108]
[97 107]
[99 105]
[100 104]
[131 148]
[132 147]
[134 143]
[135 142]
[136 141]
[150 190]
[151 189]
[152 188]
[153 187]
[154 186]
[156 185]
[157 184]
[158 183]
[159 182]
[160 181]
[161 180]
[166 177]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
