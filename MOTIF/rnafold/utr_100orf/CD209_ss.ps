%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACAGGGUGGGAAAUAAAAGCUGUGGCCCCCAGGAGUUCUGGACACUGGGGGAGAGUGGGGUGACAUGAGUGACUCCAAGGAACCAAGACUGCAGCAGCUGGGCCUCCUGGAGGAGGAACAGCUGAGAGGCCUUGGAUUCCGACAGACUCGAGGAUACAAGAGCU\
) } def
/len { sequence length } bind def

/coor [
[87.36342621 140.18521118]
[76.51561737 137.03747559]
[68.53513336 149.73834229]
[60.55465317 162.43919373]
[52.57417297 175.14006042]
[44.59369278 187.84092712]
[36.61320877 200.54179382]
[45.70322418 212.69645691]
[49.78487015 227.31509399]
[48.30613708 242.42065430]
[41.46701050 255.97023010]
[30.19243050 266.13134766]
[16.00718689 271.52978516]
[0.82971799 271.43548584]
[-13.28734684 265.86117554]
[-24.43478966 255.56074524]
[-31.10501289 241.92723083]
[-32.39592361 226.80447388]
[-28.13293266 212.23768616]
[-18.89257812 200.19689941]
[-5.92454243 192.31056213]
[9.01735592 189.64520264]
[23.91234589 192.56130981]
[31.89282799 179.86044312]
[39.87331009 167.15957642]
[47.85379028 154.45872498]
[55.83427048 141.75785828]
[63.81475067 129.05699158]
[56.43653870 115.99705505]
[41.43915939 116.27754211]
[26.44178391 116.55802155]
[11.44440651 116.83850861]
[-3.55297136 117.11898804]
[-18.55034828 117.39947510]
[-33.54772568 117.67995453]
[-43.06547546 126.42511749]
[-55.58908463 126.32702637]
[-64.38544464 117.98542786]
[-79.38544464 117.98542786]
[-94.38544464 117.98542786]
[-110.22457123 124.03176880]
[-120.41932678 110.48542786]
[-110.22457123 96.93908691]
[-94.38544464 102.98542786]
[-79.38544464 102.98542786]
[-64.38544464 102.98542786]
[-49.70804596 93.39799500]
[-33.82820892 102.68257904]
[-18.83083153 102.40209198]
[-3.83345413 102.12161255]
[11.16392326 101.84112549]
[26.16130066 101.56064606]
[41.15867615 101.28015900]
[56.15605545 100.99967957]
[57.65346146 93.66838074]
[60.33692169 86.87207794]
[64.06912231 80.79550934]
[68.68533325 75.59252167]
[73.99983215 71.38228607]
[66.25823975 58.53441620]
[58.51664352 45.68655014]
[50.77505112 32.83868027]
[43.03345490 19.99081230]
[35.29186249 7.14294434]
[21.54231834 -0.68397266]
[21.60088158 -15.57846260]
[13.85928822 -28.42633057]
[-0.74754840 -35.88101959]
[-1.32468414 -52.27000809]
[12.72158813 -60.73371124]
[26.94166756 -52.56539536]
[26.70715523 -36.16792679]
[34.44874954 -23.32005692]
[47.64456177 -16.41210556]
[48.13973236 -0.59864956]
[55.88132477 12.24921894]
[63.62291718 25.09708786]
[71.36450958 37.94495392]
[79.10610962 50.79282379]
[86.84770203 63.64069366]
[110.00724030 62.65247726]
[129.56988525 75.08806610]
[142.69822693 67.83228302]
[155.82658386 60.57649994]
[168.95492554 53.32071686]
[182.01487732 45.94250107]
[195.00524902 38.44250107]
[207.99563599 30.94250107]
[220.98600769 23.44250107]
[233.97639465 15.94250107]
[242.05903625 2.34171629]
[256.94982910 2.67877889]
[269.94021606 -4.82122087]
[270.36190796 -18.62203598]
[277.50045776 -30.31393433]
[289.39413452 -36.88976669]
[302.87518311 -36.72063065]
[314.41314697 -29.95806694]
[327.54150391 -37.21384811]
[340.66983032 -44.46963120]
[353.79818726 -51.72541809]
[366.92654419 -58.98120117]
[380.05490112 -66.23698425]
[384.52896118 -81.15745544]
[397.94635010 -88.32883453]
[412.14315796 -83.97154236]
[425.27151489 -91.22732544]
[438.39987183 -98.48310852]
[451.52822876 -105.73889160]
[464.65655518 -112.99467468]
[472.65222168 -127.31255341]
[489.05133057 -127.27648163]
[496.98388672 -112.92356110]
[488.28958130 -99.01885223]
[471.91235352 -99.86631775]
[458.78399658 -92.61053467]
[445.65563965 -85.35475159]
[432.52728271 -78.09896851]
[419.39895630 -70.84318542]
[415.53521729 -56.50418091]
[402.32455444 -48.95876694]
[387.31066895 -53.10863113]
[374.18234253 -45.85284805]
[361.05398560 -38.59706497]
[347.92562866 -31.34128189]
[334.79727173 -24.08549881]
[321.66891479 -16.82971573]
[320.18151855 -0.50061941]
[309.15505981 11.85809135]
[292.77560425 15.25785828]
[277.44021606 8.16915989]
[264.44982910 15.66915989]
[257.29635620 28.73349380]
[241.47639465 28.93288231]
[228.48600769 36.43288040]
[215.49563599 43.93288040]
[202.50524902 51.43288040]
[189.51487732 58.93288040]
[185.27676392 65.02596283]
[176.21070862 66.44906616]
[163.08236694 73.70484924]
[149.95401001 80.96063232]
[136.82566833 88.21641541]
[138.66351318 100.33950806]
[136.61305237 112.42845917]
[130.88050842 123.26750183]
[122.04237366 131.76658630]
[128.04075623 145.51501465]
[134.36700439 152.16311646]
[134.02008057 159.57707214]
[139.76033020 173.43525696]
[145.50057983 187.29345703]
[160.73834229 189.21861267]
[172.96234131 198.51750183]
[178.88438416 212.68878174]
[176.91146851 227.92042542]
[167.57431030 240.11521912]
[153.38453674 245.99281311]
[138.15914917 243.97216797]
[125.99369049 234.59683228]
[120.16059875 220.38870239]
[122.22896576 205.16972351]
[131.64239502 193.03370667]
[125.90213776 179.17550659]
[120.16188812 165.31732178]
[114.29232025 151.51339722]
[108.29393768 137.76496887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[5 25]
[6 24]
[7 23]
[29 54]
[30 53]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[38 46]
[39 45]
[40 44]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
[64 75]
[66 73]
[67 72]
[82 143]
[83 142]
[84 141]
[85 140]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[92 132]
[93 131]
[98 127]
[99 126]
[100 125]
[101 124]
[102 123]
[103 122]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[147 167]
[148 166]
[150 165]
[151 164]
[152 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
