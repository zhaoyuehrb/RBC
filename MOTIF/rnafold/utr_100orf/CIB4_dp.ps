%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CIB4)
} def

/sequence { (\
GCGAGUCCUUGAGGCUGAGGUUCUACUGCUGGCAGACAGAAAGGUGUGGUUGGCAUGGGGCAAUGCUUGAGGUAUCAGAUGCACUGGGAGGACCUGGAAGAGUACCAGGCCCUGACCUUCCUGACCAGAAAUGAAAUUCUGUGCAUCCAUGACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 82 0.013681524 ubox
1 144 0.013684488 ubox
2 81 0.013686654 ubox
2 143 0.013681847 ubox
2 151 0.045482762 ubox
3 76 0.983755250 ubox
3 80 0.003659103 ubox
3 142 0.003579321 ubox
3 150 0.003921230 ubox
4 75 0.984260583 ubox
5 73 0.043522043 ubox
5 75 0.063956828 ubox
5 153 0.051809013 ubox
6 74 0.077817395 ubox
6 152 0.051567779 ubox
7 72 0.993150079 ubox
7 151 0.050494916 ubox
8 71 0.993348231 ubox
8 72 0.111318140 ubox
9 70 0.976670892 ubox
9 71 0.113699417 ubox
10 69 0.938694543 ubox
10 70 0.206470143 ubox
10 149 0.009161904 ubox
11 68 0.672101781 ubox
11 148 0.009220676 ubox
12 67 0.642336165 ubox
12 68 0.709597614 ubox
13 66 0.511296338 ubox
13 67 0.762551268 ubox
13 68 0.008684337 ubox
14 61 0.004406226 ubox
14 66 0.859199506 ubox
15 60 0.004402570 ubox
15 65 0.942585314 ubox
16 59 0.003784563 ubox
16 62 0.016873166 ubox
16 65 0.034810336 ubox
17 61 0.011445393 ubox
17 64 0.105240774 ubox
20 61 0.999222901 ubox
21 59 0.008416334 ubox
21 60 0.999080861 ubox
22 58 0.008476538 ubox
22 59 0.996965782 ubox
22 60 0.009675471 ubox
23 57 0.009099604 ubox
23 58 0.999752789 ubox
23 59 0.013146319 ubox
24 57 0.998116508 ubox
24 58 0.012496740 ubox
25 56 0.978909076 ubox
27 55 0.989029130 ubox
28 54 0.999930350 ubox
29 53 0.999950676 ubox
30 52 0.994894495 ubox
30 55 0.007206229 ubox
31 51 0.976418568 ubox
31 54 0.007268810 ubox
32 47 0.007041437 ubox
32 50 0.979922960 ubox
33 46 0.007322340 ubox
33 48 0.422761674 ubox
33 49 0.904557357 ubox
33 52 0.009542330 ubox
34 45 0.007346478 ubox
34 47 0.565539572 ubox
34 51 0.009871233 ubox
35 50 0.006081189 ubox
36 45 0.584060103 ubox
36 47 0.798838198 ubox
37 44 0.586084042 ubox
37 46 0.807071857 ubox
37 48 0.043247294 ubox
38 45 0.786296112 ubox
38 47 0.043077569 ubox
68 77 0.007097849 ubox
69 76 0.009993457 ubox
70 75 0.009778310 ubox
72 153 0.015731072 ubox
73 151 0.022645679 ubox
73 152 0.016409957 ubox
74 150 0.025606254 ubox
75 124 0.003235060 ubox
75 149 0.024742617 ubox
75 152 0.112359933 ubox
76 86 0.003404617 ubox
76 123 0.003747172 ubox
76 151 0.130449100 ubox
77 85 0.005513097 ubox
77 122 0.003844276 ubox
77 150 0.126853632 ubox
78 84 0.005677882 ubox
78 121 0.003746678 ubox
78 147 0.996325896 ubox
79 146 0.998882713 ubox
80 145 0.999135508 ubox
80 154 0.006052608 ubox
81 144 0.999652623 ubox
81 153 0.007464757 ubox
82 123 0.008769070 ubox
82 143 0.999549317 ubox
82 151 0.008728385 ubox
83 122 0.013341728 ubox
83 142 0.958251580 ubox
83 150 0.008600341 ubox
84 97 0.003215617 ubox
84 128 0.049759767 ubox
84 141 0.828571847 ubox
85 96 0.003447398 ubox
85 114 0.014001604 ubox
85 123 0.249101006 ubox
85 127 0.094027253 ubox
85 141 0.018076120 ubox
85 149 0.009808922 ubox
86 94 0.021061084 ubox
86 95 0.019762252 ubox
86 112 0.037353710 ubox
86 113 0.019638516 ubox
86 117 0.546370792 ubox
86 118 0.367253460 ubox
86 119 0.030658517 ubox
86 120 0.021671706 ubox
86 121 0.578233399 ubox
86 122 0.357322658 ubox
86 126 0.122411537 ubox
86 138 0.008920813 ubox
86 139 0.110188473 ubox
86 140 0.117954711 ubox
86 148 0.010158689 ubox
87 93 0.021093148 ubox
87 94 0.020805247 ubox
87 111 0.037385042 ubox
87 112 0.019808327 ubox
87 113 0.064485242 ubox
87 116 0.546965319 ubox
87 117 0.401719952 ubox
87 118 0.033532672 ubox
87 119 0.016087097 ubox
87 120 0.579144661 ubox
87 121 0.368367652 ubox
87 122 0.007882574 ubox
87 125 0.121869876 ubox
87 126 0.036758546 ubox
87 137 0.005365922 ubox
87 138 0.085737451 ubox
87 139 0.125559939 ubox
87 140 0.040753762 ubox
87 147 0.010100065 ubox
88 93 0.020686768 ubox
88 110 0.037277178 ubox
88 111 0.015042600 ubox
88 112 0.073421335 ubox
88 116 0.400953167 ubox
88 117 0.037316034 ubox
88 118 0.017220314 ubox
88 119 0.578014698 ubox
88 120 0.368431763 ubox
88 121 0.009456327 ubox
88 125 0.036873171 ubox
88 137 0.059466132 ubox
88 138 0.116207976 ubox
88 139 0.044097965 ubox
88 146 0.006462807 ubox
89 113 0.687574924 ubox
89 118 0.566035761 ubox
89 119 0.322090784 ubox
89 122 0.115680941 ubox
89 137 0.090691223 ubox
89 138 0.037676042 ubox
90 111 0.267018882 ubox
90 112 0.756172293 ubox
90 113 0.110024558 ubox
90 117 0.553584170 ubox
90 118 0.142021530 ubox
90 121 0.120126204 ubox
90 122 0.014504004 ubox
90 126 0.015645545 ubox
90 137 0.006392126 ubox
91 110 0.275284266 ubox
91 111 0.757565606 ubox
91 112 0.109545128 ubox
91 116 0.547019994 ubox
91 117 0.137724975 ubox
91 120 0.120201155 ubox
91 121 0.012490413 ubox
91 125 0.015657322 ubox
92 118 0.006469182 ubox
92 119 0.119372225 ubox
93 109 0.997950868 ubox
94 108 0.999154956 ubox
94 128 0.003753854 ubox
95 107 0.998930986 ubox
95 127 0.003779746 ubox
96 106 0.999157938 ubox
96 111 0.008177077 ubox
96 112 0.012384500 ubox
96 117 0.011395569 ubox
96 121 0.034841775 ubox
96 126 0.003621470 ubox
97 105 0.996816096 ubox
97 110 0.008182426 ubox
97 111 0.012361307 ubox
97 116 0.011391753 ubox
97 120 0.035051655 ubox
97 125 0.003550334 ubox
98 119 0.035056791 ubox
99 113 0.011792624 ubox
99 118 0.035045761 ubox
100 112 0.011841724 ubox
100 117 0.035050149 ubox
102 110 0.012978211 ubox
102 116 0.034465661 ubox
103 109 0.012836049 ubox
103 115 0.032307921 ubox
104 113 0.003736540 ubox
106 114 0.033582262 ubox
106 123 0.003445668 ubox
107 113 0.033753842 ubox
107 118 0.003345304 ubox
107 122 0.003459687 ubox
108 112 0.033036734 ubox
108 117 0.003702543 ubox
108 121 0.003461386 ubox
109 116 0.004644423 ubox
109 120 0.003430880 ubox
112 128 0.093897034 ubox
113 127 0.094534172 ubox
114 120 0.050283938 ubox
114 122 0.006012038 ubox
114 126 0.095486147 ubox
114 132 0.003291824 ubox
114 139 0.020256902 ubox
115 119 0.044007103 ubox
115 138 0.020197070 ubox
117 128 0.037498927 ubox
118 124 0.040524649 ubox
118 127 0.037732977 ubox
118 128 0.006609198 ubox
118 129 0.017591221 ubox
118 130 0.114124897 ubox
118 131 0.026221805 ubox
118 134 0.006247135 ubox
118 135 0.060360508 ubox
118 136 0.004960519 ubox
119 123 0.040779844 ubox
119 127 0.008455464 ubox
119 128 0.018353176 ubox
119 129 0.130221263 ubox
119 130 0.028518490 ubox
119 133 0.005931901 ubox
119 134 0.068000221 ubox
119 135 0.004904345 ubox
120 128 0.129037516 ubox
120 133 0.068578006 ubox
121 128 0.103390915 ubox
122 127 0.100709293 ubox
122 133 0.006035954 ubox
122 145 0.017177849 ubox
123 132 0.008656852 ubox
123 138 0.016825365 ubox
123 139 0.046353182 ubox
123 140 0.005296731 ubox
123 142 0.010530418 ubox
123 144 0.019213695 ubox
124 137 0.018596809 ubox
124 138 0.043974451 ubox
124 142 0.082053460 ubox
125 141 0.064327291 ubox
126 133 0.230785693 ubox
126 141 0.549650235 ubox
127 132 0.223269713 ubox
127 138 0.007820977 ubox
127 140 0.907326913 ubox
128 137 0.008890235 ubox
128 138 0.014514089 ubox
128 139 0.938239378 ubox
129 137 0.018783008 ubox
129 138 0.934428078 ubox
130 137 0.827351695 ubox
130 138 0.062378562 ubox
131 137 0.083138251 ubox
131 142 0.004601591 ubox
132 136 0.088913429 ubox
132 141 0.004932225 ubox
133 139 0.087623652 ubox
133 140 0.012230455 ubox
134 138 0.076536106 ubox
144 151 0.003213248 ubox
146 152 0.003758414 ubox
147 151 0.005122617 ubox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
12 68 0.9500000 lbox
13 67 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
27 55 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
32 50 0.9500000 lbox
33 49 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
78 147 0.9500000 lbox
79 146 0.9500000 lbox
80 145 0.9500000 lbox
81 144 0.9500000 lbox
82 143 0.9500000 lbox
83 142 0.9500000 lbox
84 141 0.9500000 lbox
86 121 0.9500000 lbox
87 120 0.9500000 lbox
88 119 0.9500000 lbox
89 118 0.9500000 lbox
90 117 0.9500000 lbox
91 116 0.9500000 lbox
93 109 0.9500000 lbox
94 108 0.9500000 lbox
95 107 0.9500000 lbox
96 106 0.9500000 lbox
97 105 0.9500000 lbox
127 140 0.9500000 lbox
128 139 0.9500000 lbox
129 138 0.9500000 lbox
130 137 0.9500000 lbox
showpage
end
%%EOF
