%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCAGGUGGGCGCGCGUUGCCUAACGACCUUCCGCGCGGACGGUGGGCAGGCGACGGCGGCGUGUGGAUGGAGGCCUUCGCCCUUGGCCCAGCGCGGCGGGGCAGGCGGCGGACCCGGGCCGCCGGCUCCCUGCUCUCUCGGGCCGCCAUCCUCCUCUUUAUCUCCG\
) } def
/len { sequence length } bind def

/coor [
[97.53440094 275.44641113]
[97.25883484 260.44894409]
[82.94429779 252.98965454]
[74.28565979 239.25607300]
[73.72014618 222.93687439]
[81.49612427 208.47169495]
[95.57975006 199.84341431]
[95.02871704 184.85353088]
[94.47768402 169.86366272]
[86.27806854 157.42921448]
[93.50318909 143.35412598]
[92.95215607 128.36424255]
[92.40112305 113.37437439]
[91.84507751 109.93892670]
[92.18777466 106.75901031]
[77.20359039 107.44771576]
[62.21940994 108.13642120]
[47.23522949 108.82512665]
[32.25104523 109.51382446]
[17.26686478 110.20252991]
[2.28268456 110.89123535]
[-12.70149708 111.57994080]
[-27.68567848 112.26863861]
[-42.66986084 112.95734406]
[-50.55758286 123.90322876]
[-63.12992859 128.23283386]
[-75.71063232 124.57333374]
[-83.75610352 114.48030853]
[-98.75041199 114.89362335]
[-107.28026581 118.26892090]
[-114.02340698 115.17424774]
[-129.02278137 115.31203461]
[-144.02214050 115.44982147]
[-159.01960754 115.72537994]
[-174.01391602 116.13869476]
[-189.00822449 116.55201721]
[-204.00251770 116.96533203]
[-218.99682617 117.37864685]
[-228.57217407 129.74176025]
[-243.86505127 133.00700378]
[-257.65463257 125.63262939]
[-263.42990112 111.10058594]
[-258.46395874 96.27246094]
[-245.10154724 88.14964294]
[-229.65200806 90.56747437]
[-219.41014099 102.38433838]
[-204.41583252 101.97102356]
[-189.42153931 101.55770874]
[-174.42723083 101.14439392]
[-159.43292236 100.73107910]
[-152.80802917 97.39077759]
[-144.15992737 100.45045471]
[-129.16056824 100.31266785]
[-114.16119385 100.17488098]
[-99.16372681 99.89931488]
[-84.16941833 99.48600006]
[-73.16193390 86.79359436]
[-56.04455948 85.95449829]
[-43.35856247 97.97315979]
[-28.37438202 97.28446198]
[-13.39020061 96.59575653]
[1.59398091 95.90705109]
[16.57816124 95.21834564]
[31.56234360 94.52964783]
[46.54652405 93.84094238]
[61.53070450 93.15223694]
[76.51488495 92.46353149]
[91.49906921 91.77483368]
[105.73046875 87.03486633]
[118.13512421 78.60133362]
[130.53977966 70.16780853]
[142.94444275 61.73427582]
[155.34910583 53.30074692]
[167.75376892 44.86721802]
[153.84141541 38.20102692]
[143.38374329 24.30814552]
[140.64343262 9.56057930]
[137.90313721 -5.18698692]
[126.84152985 -17.29372025]
[132.05273438 -32.84284973]
[148.17590332 -35.83876419]
[158.62490845 -23.19952202]
[152.65069580 -7.92729378]
[155.39100647 6.82027292]
[158.13131714 21.56783867]
[164.66067505 25.25801849]
[177.71940613 32.63837433]
[184.24876404 36.32855225]
[198.29643250 31.06898880]
[212.34410095 25.80942535]
[226.39176941 20.54986191]
[240.43943787 15.29029846]
[254.48710632 10.03073502]
[268.38452148 4.38609505]
[282.12112427 -1.63933647]
[291.65090942 -14.26841545]
[306.41424561 -12.29528904]
[320.15084839 -18.32072067]
[333.88745117 -24.34615135]
[347.62405396 -30.37158394]
[354.25674438 -36.70864487]
[361.66879272 -36.37895203]
[375.51376343 -42.15101624]
[389.35873413 -47.92307663]
[403.20370483 -53.69513702]
[417.04867554 -59.46719742]
[426.80886841 -71.91907501]
[441.53347778 -69.67507172]
[455.37844849 -75.44712830]
[469.22341919 -81.21919250]
[483.06838989 -86.99124908]
[496.91336060 -92.76331329]
[510.75833130 -98.53537750]
[514.21490479 -113.66255951]
[525.92498779 -123.84359741]
[541.38580322 -125.16368103]
[554.65240479 -117.11519623]
[560.62341309 -102.79296875]
[557.00292969 -87.70417023]
[545.18310547 -77.65075684]
[529.70886230 -76.49848175]
[516.53039551 -84.69039917]
[502.68542480 -78.91834259]
[488.84045410 -73.14627838]
[474.99548340 -67.37421417]
[461.15051270 -61.60215378]
[447.30551147 -55.83009338]
[438.53561401 -43.79107285]
[422.82073975 -45.62222672]
[408.97576904 -39.85016251]
[395.13079834 -34.07810211]
[381.28582764 -28.30603981]
[367.44085693 -22.53397942]
[353.64947510 -16.63498306]
[339.91287231 -10.60955238]
[326.17626953 -4.58412075]
[312.43966675 1.44131041]
[303.89242554 13.63941097]
[288.14654541 12.09726334]
[274.40994263 18.12269402]
[272.79272461 21.29627991]
[269.53802490 23.83069229]
[264.96954346 24.95581055]
[259.74667358 24.07840347]
[245.69900513 29.33796692]
[231.65133667 34.59753036]
[217.60366821 39.85709381]
[203.55599976 45.11665726]
[189.50833130 50.37622070]
[176.18730164 57.27187729]
[163.78263855 65.70540619]
[151.37797546 74.13893890]
[138.97331238 82.57246399]
[126.56865692 91.00599670]
[114.16399384 99.43952179]
[107.39099884 112.82334137]
[107.94203186 127.81321716]
[108.49306488 142.80308533]
[116.73209381 156.30970764]
[109.46755981 169.31262207]
[110.01859283 184.30250549]
[110.56962585 199.29237366]
[123.27258301 205.19801331]
[132.14305115 215.95463562]
[135.48947144 229.42121887]
[132.71252441 242.94903564]
[124.41155243 253.90267944]
[112.25630951 260.17340088]
[112.53186798 275.17086792]
[115.07611847 294.38482666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 169]
[2 168]
[7 162]
[8 161]
[9 160]
[11 158]
[12 157]
[13 156]
[15 68]
[16 67]
[17 66]
[18 65]
[19 64]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[28 56]
[29 55]
[31 54]
[32 53]
[33 52]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[69 155]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[76 85]
[77 84]
[78 83]
[88 149]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 140]
[95 139]
[97 137]
[98 136]
[99 135]
[100 134]
[102 133]
[103 132]
[104 131]
[105 130]
[106 129]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
