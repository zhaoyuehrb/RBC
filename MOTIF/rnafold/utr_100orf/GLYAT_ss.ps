%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAUUUCUGGAGGUGGUGUAUCAAAAUUUACUCUGCGAGACUCUGCUGAACUGGCUGCAUCAGGGAGAAAUUUCAUCUCCCAGAAGGGUGUUGCUCAUCGUUUCUUCCCGGAAACAUCUGCAGAGACUAGCUUUUCAGGCUAAGGUAUCCUCCAUGAUGUUACCAUUGCAAGGUGCCCAGAUGCUGCAGAUGCUGGAGAAAUCCUUGAGGAAGAGCCUCCCAGCAUCCUUAAAGGUUUAUGGAACUGUCUUUC\
) } def
/len { sequence length } bind def

/coor [
[86.62980652 469.88278198]
[98.61535645 478.90200806]
[107.06794739 491.29370117]
[111.09140778 505.74401855]
[110.25916290 520.72088623]
[104.65944672 534.63647461]
[94.88596344 546.01538086]
[81.97491455 553.65112305]
[67.29518127 556.73419189]
[52.40314865 554.93774414]
[38.87771225 548.45214844]
[28.15287781 537.96514893]
[21.36573029 524.58850098]
[19.23585701 509.74047852]
[21.98858261 494.99667358]
[12.90591717 506.93423462]
[3.82325172 518.87176514]
[-5.25941372 530.80932617]
[-7.45794153 546.47705078]
[-21.32207489 551.92083740]
[-30.40473938 563.85839844]
[-39.48740387 575.79595947]
[-34.89070129 590.61657715]
[-39.91507721 605.29766846]
[-52.62856293 614.19415283]
[-68.14255524 613.88507080]
[-80.49162292 604.48931885]
[-84.92727661 589.61968994]
[-79.74393463 574.99395752]
[-66.93469238 566.23596191]
[-51.42495728 566.71331787]
[-42.34229279 554.77575684]
[-33.25962830 542.83819580]
[-31.71075249 528.02435303]
[-17.19696808 521.72668457]
[-8.11430168 509.78912354]
[0.96836370 497.85156250]
[10.05102921 485.91400146]
[17.84136963 473.09564209]
[24.25469589 459.53579712]
[30.66802216 445.97595215]
[37.08134842 432.41610718]
[43.49467468 418.85629272]
[49.65732193 405.18069458]
[55.56720352 391.39398193]
[61.47708511 377.60726929]
[67.38696289 363.82055664]
[67.13445282 356.45574951]
[73.45488739 349.90164185]
[79.53350830 336.18850708]
[85.61212921 322.47534180]
[91.69075012 308.76220703]
[97.76937103 295.04907227]
[103.84798431 281.33590698]
[93.33049774 252.27236938]
[110.57693481 233.60543823]
[108.55822754 218.74189758]
[99.17846680 207.17170715]
[104.98814392 192.45578003]
[102.96943665 177.59223938]
[100.95072174 162.72871399]
[98.93201447 147.86517334]
[96.91329956 133.00163269]
[66.13480377 133.34495544]
[38.28047562 104.81021881]
[23.73000526 101.16551208]
[9.17953682 97.52081299]
[-5.37093163 93.87610626]
[-19.92140007 90.23140717]
[-34.47187042 86.58670044]
[-47.02592087 95.91031647]
[-62.63283920 94.93142700]
[-73.92350769 84.11224365]
[-75.56681824 68.56124115]
[-66.78685760 55.62113953]
[-51.72924805 51.40185547]
[-37.50373077 57.89560318]
[-30.82716751 72.03623199]
[-16.27669716 75.68093872]
[-1.72622919 79.32563782]
[12.82423973 82.97034454]
[27.37470818 86.61504364]
[41.92517853 90.25975037]
[45.37921906 83.60244751]
[55.74133682 63.63055801]
[44.38320541 53.83296585]
[28.87979889 50.67782211]
[24.29639053 36.50595856]
[12.93825817 26.70836830]
[1.58012497 16.91077423]
[-9.77800751 7.11318207]
[-25.72084427 1.34583282]
[-24.59230042 -15.57051182]
[-8.02464104 -19.16898346]
[0.01958496 -4.24495077]
[11.37771797 5.55264187]
[22.73585129 15.35023499]
[34.09398270 25.14782715]
[48.78498077 27.60218430]
[54.18079758 42.47483444]
[65.53893280 52.27242661]
[78.06187439 44.01555634]
[73.53178406 29.71596527]
[69.00169373 15.41637516]
[64.47160339 1.11678481]
[59.94151688 -13.18280602]
[55.41142654 -27.48239708]
[45.51492310 -31.90795326]
[39.79210663 -40.85618591]
[39.92039108 -51.25793457]
[45.61717224 -59.69873047]
[41.43937683 -74.10518646]
[37.26158142 -88.51164246]
[33.08378601 -102.91810608]
[20.88484764 -113.87793732]
[24.54113960 -129.86428833]
[40.29138184 -134.43177795]
[51.93307495 -122.88175201]
[47.49024200 -107.09590149]
[51.66803741 -92.68943787]
[55.84583282 -78.28298187]
[60.02362823 -63.87652588]
[74.90835571 -51.50858307]
[69.71102142 -32.01248550]
[74.24111176 -17.71289444]
[78.77119446 -3.41330457]
[83.30128479 10.88628578]
[87.83137512 25.18587685]
[92.36146545 39.48546600]
[107.34763336 38.84139252]
[110.63414764 24.20586205]
[113.92066956 9.57032967]
[117.20718384 -5.06520224]
[120.49370575 -19.70073509]
[123.78022766 -34.33626556]
[121.35117340 -51.11530304]
[136.80204773 -58.09432602]
[147.78555298 -45.17926407]
[138.41575623 -31.04974747]
[135.12924194 -16.41421509]
[131.84271240 -1.77868378]
[128.55619812 12.85684776]
[125.26968384 27.49238014]
[121.98316193 42.12791061]
[122.39910889 58.08320999]
[119.21849060 72.99472809]
[130.45553589 63.05849075]
[141.69258118 53.12225342]
[152.92962646 43.18601608]
[157.26890564 35.18132401]
[164.36607361 33.19783020]
[175.72421265 23.40023804]
[187.08233643 13.60264492]
[184.91433716 0.00689011]
[189.70234680 -12.78582287]
[200.09832764 -21.47830772]
[213.32391357 -23.88662338]
[225.91250610 -19.48802185]
[237.39001465 -29.14549446]
[248.86752319 -38.80296707]
[260.34503174 -48.46044159]
[265.42111206 -64.05420685]
[281.51766968 -67.18991852]
[292.07595825 -54.64183044]
[286.23449707 -39.31833649]
[270.00250244 -36.98293304]
[258.52499390 -27.32545853]
[247.04748535 -17.66798592]
[235.56997681 -8.01051331]
[237.25648499 8.33152008]
[228.77604675 22.59628296]
[213.30662537 29.04982567]
[196.87992859 24.96077728]
[185.52180481 34.75836945]
[174.16366577 44.55596161]
[162.86585999 54.42306519]
[151.62881470 64.35929871]
[140.39176941 74.29553986]
[129.15472412 84.23177338]
[133.05979919 102.38419342]
[126.59046936 119.78843689]
[111.77684021 130.98291016]
[113.79555511 145.84645081]
[115.81426239 160.70999146]
[117.83296967 175.57353210]
[119.85168457 190.43707275]
[129.37583923 203.07040405]
[123.42176819 216.72319031]
[125.44047546 231.58673096]
[144.63754272 239.42062378]
[152.09463501 263.40213013]
[165.65446472 269.81546021]
[179.21430969 276.22879028]
[192.77415466 282.64212036]
[206.33398438 289.05545044]
[219.89382935 295.46875000]
[233.45365906 301.88208008]
[247.01350403 308.29541016]
[239.60145569 295.25463867]
[239.62121582 280.25466919]
[247.06758118 267.23345947]
[259.98562622 259.60955811]
[274.98394775 259.38449097]
[288.12493896 266.61734009]
[295.95867920 279.40924072]
[296.42849731 294.40188599]
[289.41110229 307.65917969]
[276.74877930 315.70065308]
[261.76620483 316.41522217]
[274.43899536 324.44018555]
[287.11181641 332.46514893]
[299.78460693 340.49011230]
[315.68988037 338.39212036]
[327.14654541 349.62265015]
[325.36596680 365.56658936]
[311.71411133 373.99313354]
[296.66348267 368.43811035]
[291.75964355 353.16290283]
[279.08685303 345.13793945]
[266.41403198 337.11297607]
[253.74122620 329.08801270]
[240.60017395 321.85525513]
[227.04034424 315.44192505]
[213.48049927 309.02859497]
[199.92065430 302.61526489]
[186.36082458 296.20193481]
[172.80097961 289.78863525]
[159.24114990 283.37530518]
[145.68130493 276.96197510]
[138.65126038 279.57510376]
[150.20732117 289.13845825]
[147.70315552 303.92794800]
[133.64295959 309.15390015]
[122.08710480 299.59033203]
[124.59117889 284.80139160]
[117.56113434 287.41452026]
[111.48251343 301.12768555]
[105.40389252 314.84082031]
[99.32527161 328.55395508]
[93.24665833 342.26712036]
[87.16803741 355.98025513]
[81.17367554 369.73043823]
[75.26379395 383.51715088]
[69.35391235 397.30386353]
[63.44403076 411.09057617]
[64.05395508 416.21752930]
[62.78063202 420.63363647]
[60.20386124 423.74472046]
[57.05451584 425.26962280]
[50.64118958 438.82943726]
[44.22785950 452.38928223]
[37.81453323 465.94912720]
[31.40120888 479.50897217]
[43.22192383 470.27474976]
[57.38265610 465.32766724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 38]
[16 37]
[17 36]
[18 35]
[20 33]
[21 32]
[22 31]
[39 253]
[40 252]
[41 251]
[42 250]
[43 249]
[44 245]
[45 244]
[46 243]
[47 242]
[49 241]
[50 240]
[51 239]
[52 238]
[53 237]
[54 236]
[56 189]
[57 188]
[59 186]
[60 185]
[61 184]
[62 183]
[63 182]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[85 101]
[86 100]
[88 98]
[89 97]
[90 96]
[91 95]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[107 124]
[111 122]
[112 121]
[113 120]
[114 119]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
[146 179]
[147 178]
[148 177]
[149 176]
[151 175]
[152 174]
[153 173]
[158 169]
[159 168]
[160 167]
[161 166]
[191 229]
[192 228]
[193 227]
[194 226]
[195 225]
[196 224]
[197 223]
[198 222]
[209 221]
[210 220]
[211 219]
[212 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
