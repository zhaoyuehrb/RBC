%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCAGCCCAUGGCCGAGCCUGCCCUCCUCCCCGCCGCCCAGAUGGAGAGGCUGGCCCCAGGGCCCCUAGCCUCACCGUGUCCUCGGAUCCCGCGGGCCCGCAUUGCCA\
) } def
/len { sequence length } bind def

/coor [
[78.13918304 291.96099854]
[74.10848999 277.51339722]
[67.49017334 290.97436523]
[60.87185669 304.43533325]
[54.25354004 317.89633179]
[58.04664612 333.48452759]
[48.11073685 346.08044434]
[32.06779099 346.02157593]
[22.22458458 333.35308838]
[26.13198090 317.79312134]
[40.79256058 311.27801514]
[47.41087723 297.81701660]
[54.02919388 284.35604858]
[60.64751053 270.89508057]
[65.28276825 256.62924194]
[67.84059906 241.84892273]
[62.38690186 227.98867798]
[72.36412048 215.71000671]
[74.92195129 200.92968750]
[77.47978210 186.14938354]
[80.03761292 171.36907959]
[82.59545135 156.58877563]
[85.15328217 141.80845642]
[75.35349274 136.89068604]
[67.05902100 129.71977234]
[60.77645111 120.73368835]
[56.88949585 110.48127747]
[55.63556290 99.58870697]
[57.09122849 88.72126007]
[61.16759109 78.54267883]
[67.61568451 69.67462158]
[76.04168701 62.65871429]
[85.93096161 57.92346573]
[96.67951965 55.75808716]
[107.63087463 56.29482651]
[112.67161560 42.16716003]
[117.71235657 28.03949356]
[107.07183838 17.15185165]
[102.23339844 2.78256369]
[104.10594940 -12.20121861]
[112.26493073 -24.83419037]
[125.04706573 -32.63973236]
[139.88916016 -34.11536789]
[144.92990112 -48.24303436]
[149.97064209 -62.37069702]
[155.01138306 -76.49836731]
[152.36160278 -92.09609222]
[163.92591858 -101.48308563]
[168.96665955 -115.61075592]
[174.00740051 -129.73841858]
[179.04814148 -143.86608887]
[184.08888245 -157.99374390]
[189.12962341 -172.12141418]
[193.56069946 -186.45199585]
[197.37397766 -200.95919800]
[201.18725586 -215.46640015]
[205.00051880 -229.97360229]
[200.16113281 -245.64244080]
[211.50794983 -257.48226929]
[227.36833191 -253.31332397]
[231.42648315 -237.42422485]
[219.50772095 -226.16032410]
[215.69445801 -211.65312195]
[211.88117981 -197.14591980]
[208.06790161 -182.63871765]
[209.64013672 -179.32438660]
[209.59153748 -175.05406189]
[207.47773743 -170.64352417]
[203.25729370 -167.08067322]
[198.21655273 -152.95300293]
[193.17581177 -138.82534790]
[188.13507080 -124.69767761]
[183.09432983 -110.57001495]
[178.05358887 -96.44234467]
[181.06393433 -81.85512543]
[169.13905334 -71.45762634]
[164.09831238 -57.32995605]
[159.05757141 -43.20229340]
[154.01683044 -29.07462692]
[164.57263184 -18.53704071]
[169.52680969 -4.40319633]
[167.84619141 10.54125118]
[159.81088257 23.32616806]
[146.96929932 31.38723946]
[131.84002686 33.08023453]
[126.79928589 47.20790100]
[121.75854492 61.33556747]
[136.11405945 74.22894287]
[143.63856506 91.99694824]
[142.90876770 111.27873993]
[134.06274414 128.42713928]
[118.77369690 140.19851685]
[99.93358612 144.36630249]
[97.37575531 159.14660645]
[94.81792450 173.92691040]
[92.26009369 188.70721436]
[89.70225525 203.48751831]
[87.14442444 218.26783752]
[92.41516876 233.18527222]
[82.62091064 244.40675354]
[80.06307220 259.18707275]
[91.81670380 249.86759949]
[106.62672424 247.48783875]
[120.70829773 252.65594482]
[130.46273804 264.05114746]
[133.39723206 278.76132202]
[128.76181030 293.02709961]
[117.74110413 303.20275879]
[103.15157318 306.68783569]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[5 11]
[15 101]
[16 100]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[23 93]
[35 87]
[36 86]
[37 85]
[43 79]
[44 78]
[45 77]
[46 76]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[53 69]
[54 65]
[55 64]
[56 63]
[57 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
