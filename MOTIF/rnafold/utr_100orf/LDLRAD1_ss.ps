%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGUGACAAUGCAGGGAACCCGUGCUGAGCUCUCUGCACACAGCCCCAGUCGGGCAGCAGGAAACCGAAGACAUGAACAAGGUCUUCCCCCAGGGAGAGAAUGGCUACACUGCUGCUGAAUCCAAAGCCCACCCUGGAGGGGAAGCAGGCGGCGGCCACCUCUGCUGCUCAC\
) } def
/len { sequence length } bind def

/coor [
[-43.60152435 258.01214600]
[-58.11893082 261.83441162]
[-72.95330811 259.81286621]
[-85.84833527 252.28640747]
[-97.74180603 261.42672729]
[-109.63526917 270.56704712]
[-107.08154297 284.33840942]
[-110.70024872 297.80041504]
[-119.72838593 308.33471680]
[-132.35664368 313.91796875]
[-146.09179688 313.51025391]
[-158.24890137 307.24847412]
[-170.30453491 316.17382812]
[-182.36016846 325.09918213]
[-194.41578674 334.02453613]
[-206.47142029 342.94989014]
[-218.52705383 351.87521362]
[-230.58267212 360.80056763]
[-242.63830566 369.72592163]
[-239.29727173 384.58383179]
[-242.29470825 399.51483154]
[-251.11128235 411.93206787]
[-264.21948242 419.68417358]
[-279.34823608 421.42803955]
[-293.87637329 416.86154175]
[-305.28680420 406.77581787]
[-311.60266113 392.91833496]
[-311.72961426 377.68994141]
[-305.64569092 363.72906494]
[-294.40496826 353.45452881]
[-279.95498657 348.64642334]
[-264.79928589 350.13781738]
[-251.56364441 357.67028809]
[-239.50802612 348.74493408]
[-227.45239258 339.81961060]
[-215.39677429 330.89425659]
[-203.34114075 321.96890259]
[-191.28550720 313.04354858]
[-179.22988892 304.11819458]
[-167.17425537 295.19287109]
[-169.40284729 279.20382690]
[-163.23742676 264.18252563]
[-150.26965332 254.25563049]
[-133.97366333 252.20161438]
[-118.77558899 258.67358398]
[-106.88212585 249.53326416]
[-94.98865509 240.39294434]
[-98.94271851 225.99520874]
[-97.07817841 211.14028931]
[-89.64826965 198.09570312]
[-77.75813293 188.86465454]
[-63.20053482 184.87841797]
[-48.18560791 186.77445984]
[-35.00528717 194.29475403]
[-23.11182022 185.15443420]
[-11.21835423 176.01411438]
[0.67511255 166.87379456]
[12.56857872 157.73347473]
[24.46204567 148.59315491]
[36.35551071 139.45283508]
[48.24897766 130.31251526]
[60.14244461 121.17219543]
[72.03591156 112.03187561]
[68.28237915 94.50672913]
[75.15260315 76.88459015]
[91.39022064 65.37018585]
[85.12561035 51.74100113]
[78.86100006 38.11181641]
[63.67250061 38.72652435]
[49.40663910 33.47736359]
[38.23886490 23.16478920]
[31.87217331 9.36139393]
[31.27744484 -5.82790279]
[36.54536819 -20.08684540]
[46.87262344 -31.24104691]
[60.68437958 -37.58957291]
[75.87445068 -38.16432190]
[90.12644958 -32.87764359]
[101.26705170 -22.53572464]
[107.59740448 -8.71562767]
[108.15216827 6.47518110]
[102.84675598 20.72021484]
[92.49018860 31.84720612]
[98.75479126 45.47639084]
[105.01940155 59.10557556]
[119.32627869 63.61259842]
[132.27154541 56.03499603]
[145.21681213 48.45739746]
[158.16209412 40.87979889]
[171.10736084 33.30220032]
[184.05262756 25.72459984]
[196.99789429 18.14699936]
[209.80505371 10.33824062]
[222.46997070 2.30083919]
[235.13488770 -5.73656273]
[247.79980469 -13.77396488]
[260.46472168 -21.81136703]
[257.58303833 -32.36781693]
[258.00131226 -43.51293182]
[261.80645752 -54.22011948]
[268.76788330 -63.46591568]
[278.34783936 -70.32760620]
[289.74166870 -74.07457733]
[301.94494629 -74.24446869]
[313.84191895 -70.69628906]
[324.86816406 -80.86593628]
[335.89443970 -91.03557587]
[336.28210449 -106.83511353]
[347.78564453 -117.67227173]
[363.58020020 -117.11756897]
[374.29513550 -105.50009918]
[373.57348633 -89.71229553]
[361.84335327 -79.12078094]
[346.06405640 -80.00932312]
[335.03781128 -69.83967590]
[324.01156616 -59.67003250]
[331.35556030 -46.59082413]
[345.77859497 -50.71100235]
[360.20162964 -54.83118057]
[365.39663696 -69.45279694]
[378.21286011 -78.20060730]
[393.72219849 -77.71089935]
[405.96102905 -68.17197418]
[410.22323608 -53.25174332]
[404.86990356 -38.68734360]
[391.95956421 -30.07908058]
[376.45642090 -30.73700714]
[364.32180786 -40.40813828]
[349.89877319 -36.28796005]
[335.47573853 -32.16778183]
[326.46032715 -10.69516277]
[307.80245972 1.86696291]
[286.10681152 2.12093258]
[268.50213623 -9.14644814]
[255.83720398 -1.10904586]
[243.17228699 6.92835617]
[230.50737000 14.96575832]
[217.84245300 23.00316048]
[215.94052124 27.41717148]
[211.22753906 30.66769028]
[204.57550049 31.09226799]
[191.63021851 38.66986847]
[178.68495178 46.24746704]
[165.73968506 53.82506561]
[152.79441833 61.40266800]
[139.84915161 68.98026276]
[126.90387726 76.55786896]
[132.59123230 90.53813934]
[131.82040405 104.86267853]
[125.36631775 116.83170319]
[135.43658447 127.94879150]
[145.50685120 139.06588745]
[161.27561951 143.56898499]
[164.99720764 159.54026794]
[152.84315491 170.54985046]
[137.31651306 165.27201843]
[134.38975525 149.13615417]
[124.31949615 138.01905823]
[114.24922943 126.90196991]
[106.00838470 129.84385681]
[97.27114105 130.32011414]
[88.75934601 128.29141235]
[81.17623138 123.92534637]
[69.28276825 133.06565857]
[57.38929749 142.20597839]
[45.49583054 151.34629822]
[33.60236740 160.48661804]
[21.70889854 169.62693787]
[9.81543255 178.76725769]
[-2.07803369 187.90759277]
[-13.97150040 197.04791260]
[-25.86496735 206.18823242]
[-21.99028397 220.86004639]
[-24.02255821 235.85714722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 47]
[5 46]
[6 45]
[12 40]
[13 39]
[14 38]
[15 37]
[16 36]
[17 35]
[18 34]
[19 33]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[61 165]
[62 164]
[63 163]
[66 85]
[67 84]
[68 83]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[93 138]
[94 137]
[95 136]
[96 135]
[97 134]
[105 116]
[106 115]
[107 114]
[117 130]
[118 129]
[119 128]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
