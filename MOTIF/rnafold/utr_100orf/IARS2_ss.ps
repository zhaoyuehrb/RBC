%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCGCGUGCGCCCUCUUACUCGGCUCCCCUUGGUUUCCUGGGGUCCUGCCCCUUCAAGCUGGGGCGGGAGCGGAGGACCCCGCUCUCAGGGGUUGCCGGACCAUGCGUUGGGGGCUGCGCCCUCGCGGGCCGGGCGCGGCCGCCCUGGCCACUGCCCGAAGUUUGUGGGGGACGCCCCGCCUUCCCUGCAGCCCGGGAUGGC\
) } def
/len { sequence length } bind def

/coor [
[243.04667664 149.53695679]
[236.20675659 141.24836731]
[233.78230286 131.44238281]
[219.01463318 128.81250000]
[204.24697876 126.18263245]
[189.47932434 123.55276489]
[174.71165466 120.92288971]
[159.94400024 118.29301453]
[145.17634583 115.66314697]
[130.40867615 113.03327179]
[113.06942749 130.39315796]
[88.54186249 131.03651428]
[80.29211426 143.56414795]
[72.04237366 156.09178162]
[78.38819885 170.15357971]
[76.10166168 185.41055298]
[65.91239929 196.99426270]
[51.07175446 201.20840454]
[36.31533432 196.70823669]
[26.35184860 184.92974854]
[24.36061668 169.63143921]
[30.97703171 155.69491577]
[44.08981705 147.56727600]
[59.51473236 147.84204102]
[67.76448059 135.31440735]
[76.01422882 122.78676605]
[72.87157440 124.13834381]
[69.61777496 125.30684662]
[56.12468338 131.85945129]
[42.63159561 138.41204834]
[29.13850784 144.96464539]
[24.18698311 156.87789917]
[12.80980778 162.05668640]
[1.33461297 158.22019958]
[-12.25730419 164.56526184]
[-24.05195618 176.74403381]
[-39.01986313 168.78173828]
[-35.51226807 152.19459534]
[-18.60236359 150.97334290]
[-5.01044750 144.62828064]
[4.25667334 129.72807312]
[22.58590698 131.47155762]
[36.07899475 124.91896057]
[49.57208252 118.36636353]
[63.06517029 111.81375885]
[61.34491730 96.91272736]
[46.71372986 93.60693359]
[32.08253860 90.30114746]
[17.45134544 86.99535370]
[2.82015514 83.68956757]
[-11.81103611 80.38377380]
[-26.44222641 77.07798767]
[-41.07341766 73.77219391]
[-55.70460892 70.46640778]
[-67.27843475 80.80207825]
[-82.72035980 82.32739258]
[-96.09265137 74.45583344]
[-102.25338745 60.21416855]
[-98.83363342 45.07861328]
[-87.14836884 34.86910248]
[-71.69081116 33.51139069]
[-58.40469742 41.52755737]
[-52.39881897 55.83521271]
[-37.76762772 59.14100266]
[-23.13643646 62.44679260]
[-8.50524521 65.75258636]
[6.12594557 69.05837250]
[20.75713730 72.36416626]
[35.38832855 75.66995239]
[50.01951981 78.97574615]
[64.65071106 82.28153992]
[71.27275085 77.78837585]
[78.20782471 75.10713196]
[71.14320374 61.87492752]
[64.07859039 48.64272308]
[51.98442841 44.15113831]
[46.37366104 32.98067474]
[49.76780701 21.36695290]
[42.90679550 8.02804375]
[36.04578400 -5.31086636]
[29.18477058 -18.64977646]
[22.32375908 -31.98868561]
[15.46274662 -45.32759476]
[0.17358425 -48.61020660]
[-9.38771820 -60.98419189]
[-8.70660686 -76.60693359]
[1.89531958 -88.10185242]
[17.41215515 -90.04139709]
[30.51732445 -81.50978088]
[35.02296829 -66.53536224]
[28.80165672 -52.18860626]
[35.66267014 -38.84969711]
[42.52368164 -25.51078796]
[49.38469315 -12.17187786]
[56.24570465 1.16703165]
[63.10671616 14.50594139]
[78.35095215 23.19554329]
[77.31079865 41.57810593]
[84.37541199 54.81031036]
[91.44002533 68.04251099]
[106.03051758 67.47021484]
[119.44631195 73.23444366]
[129.07412720 84.21237946]
[133.03855896 98.26561737]
[147.80621338 100.89548492]
[162.57386780 103.52536011]
[177.34153748 106.15522766]
[192.10919189 108.78510284]
[206.87684631 111.41497803]
[221.64451599 114.04484558]
[236.41217041 116.67472076]
[259.04824829 102.74170685]
[282.98910522 120.66892242]
[297.62026978 117.36313629]
[312.25146484 114.05734253]
[326.88265991 110.75155640]
[341.51385498 107.44576263]
[345.78549194 96.34509277]
[354.79446411 88.76407623]
[366.22659302 86.49884796]
[377.21719360 89.99904633]
[385.06893921 98.28416443]
[399.79455566 95.42829895]
[414.52017212 92.57243347]
[429.24578857 89.71656799]
[443.97143555 86.86070251]
[458.69705200 84.00483704]
[473.42266846 81.14897156]
[488.14828491 78.29309845]
[502.87393188 75.43723297]
[517.59954834 72.58136749]
[532.32519531 69.72550201]
[547.00531006 66.64431000]
[561.63647461 63.33852005]
[576.26770020 60.03273010]
[590.89886475 56.72694016]
[605.53009033 53.42115021]
[620.16125488 50.11536026]
[633.39056396 37.30966187]
[649.93243408 43.16305923]
[664.51123047 39.63344193]
[679.09008789 36.10382843]
[693.66888428 32.57421494]
[703.21893311 19.68328094]
[719.25628662 19.25646400]
[729.47851562 31.62117767]
[726.04394531 47.29227448]
[711.58728027 54.24822998]
[697.19848633 47.15303040]
[682.61968994 50.68264389]
[668.04089355 54.21225739]
[653.46203613 57.74187088]
[646.89349365 67.90322113]
[634.77288818 70.96110535]
[623.46704102 64.74655151]
[608.83587646 68.05233765]
[594.20465088 71.35813141]
[579.57348633 74.66392517]
[564.94226074 77.96971130]
[550.31109619 81.27550507]
[547.04705811 84.76782227]
[541.55279541 86.24382782]
[535.18103027 84.45112610]
[520.45544434 87.30699158]
[505.72979736 90.16285706]
[491.00415039 93.01873016]
[476.27853394 95.87459564]
[461.55291748 98.73046112]
[446.82730103 101.58632660]
[432.10165405 104.44219208]
[417.37603760 107.29805756]
[402.65042114 110.15392303]
[387.92480469 113.00979614]
[378.61798096 128.76966858]
[360.43637085 132.79570007]
[344.81964111 122.07695770]
[330.18844604 125.38274384]
[315.55725098 128.68853760]
[300.92608643 131.99432373]
[286.29489136 135.30010986]
[279.33187866 148.58605957]
[284.93911743 162.49859619]
[290.54638672 176.41113281]
[302.88146973 186.31849670]
[300.46279907 201.01541138]
[306.07003784 214.92794800]
[311.67730713 228.84048462]
[317.28454590 242.75302124]
[332.36962891 246.38897705]
[342.41088867 258.21911621]
[343.54730225 273.69451904]
[335.34185791 286.86459351]
[320.94973755 292.66513062]
[305.90499878 288.86575317]
[295.99264526 276.92736816]
[295.02420044 261.44055176]
[303.37200928 248.36027527]
[297.76477051 234.44773865]
[292.15750122 220.53520203]
[286.55026245 206.62266541]
[274.61621094 197.71041870]
[276.63385010 182.01838684]
[271.02658081 168.10585022]
[265.41934204 154.19331360]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 111]
[4 110]
[5 109]
[6 108]
[7 107]
[8 106]
[9 105]
[10 104]
[12 26]
[13 25]
[14 24]
[28 45]
[29 44]
[30 43]
[31 42]
[34 40]
[35 39]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[73 100]
[74 99]
[75 98]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[113 180]
[114 179]
[115 178]
[116 177]
[117 176]
[122 173]
[123 172]
[124 171]
[125 170]
[126 169]
[127 168]
[128 167]
[129 166]
[130 165]
[131 164]
[132 163]
[133 160]
[134 159]
[135 158]
[136 157]
[137 156]
[138 155]
[140 152]
[141 151]
[142 150]
[143 149]
[181 204]
[182 203]
[183 202]
[185 200]
[186 199]
[187 198]
[188 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
