%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCUGAGUGAGAUGGCAGCUGGCUUGGCAAGGGGACAGCACCUUUGUCACCACAUUAUGUCCCUGUACCCUACAUGCUGCGCCUAUACCCAGGACCGAUGGUAACUGAGGCGGAGGGGAAAGGAGGGCCUGAGAUGGCAAGUCUGUCCUCCUCGGUGGUUCCUGUGUCCUUCA\
) } def
/len { sequence length } bind def

/coor [
[27.28481293 335.59933472]
[12.72590828 339.21017456]
[-0.20661792 331.61083984]
[-4.13740540 317.13360596]
[-12.69224453 329.45492554]
[-21.24708366 341.77624512]
[-29.80192375 354.09756470]
[-38.35676193 366.41885376]
[-46.91160202 378.74017334]
[-55.46644211 391.06149292]
[-56.98141479 406.80999756]
[-70.59564209 412.85168457]
[-79.15048218 425.17300415]
[-74.86899567 440.21304321]
[-81.30387878 454.46527100]
[-95.41679382 461.20022583]
[-110.54404449 457.23788452]
[-119.54300690 444.44909668]
[-118.16464996 428.87237549]
[-107.05978394 417.86257935]
[-91.47179413 416.61816406]
[-82.91695404 404.29684448]
[-82.01388550 389.42962646]
[-67.78775787 382.50665283]
[-59.23291397 370.18533325]
[-50.67807388 357.86401367]
[-42.12323380 345.54272461]
[-33.56839752 333.22140503]
[-25.01355553 320.90008545]
[-16.45871735 308.57876587]
[-8.57562923 295.81723022]
[-1.38689482 282.65206909]
[5.80183983 269.48687744]
[12.99057484 256.32168579]
[20.17930984 243.15649414]
[19.48797607 228.27795410]
[32.89255905 219.87391663]
[40.08129501 206.70874023]
[47.27003098 193.54354858]
[54.45876312 180.37837219]
[61.17302322 166.96498108]
[67.40425110 153.32051086]
[73.63547516 139.67602539]
[79.86669922 126.03154755]
[72.75965881 118.46496582]
[68.36316681 109.06102753]
[67.11470795 98.75547028]
[52.64917755 94.78704071]
[38.18364716 90.81861877]
[22.46388054 95.48991394]
[10.74623871 84.01695251]
[15.08482456 68.20212555]
[31.01647377 64.31437683]
[42.15206909 76.35308838]
[56.61760330 80.32151031]
[71.08313751 84.28993988]
[73.98273468 79.84825134]
[77.55826569 75.93010712]
[81.71683502 72.63730621]
[86.35040283 70.05538940]
[91.33858490 68.25143433]
[96.55179596 67.27231598]
[98.42117310 52.38925934]
[100.29054260 37.50619888]
[102.15991974 22.62314034]
[98.58018494 8.05655289]
[90.02534485 -4.26475906]
[81.47050476 -16.58607101]
[72.91566467 -28.90738297]
[58.91565704 -38.46960831]
[64.22860718 -54.56957626]
[81.17015076 -53.92117691]
[85.23697662 -37.46222305]
[93.79181671 -25.14090919]
[102.34665680 -12.81959820]
[110.90149689 -0.49828678]
[118.34302521 -1.43297303]
[133.22608948 -3.30234551]
[140.66761780 -4.23703194]
[145.90957642 -18.29127693]
[143.48277283 -33.92525482]
[155.17996216 -43.14616013]
[160.42192078 -57.20040512]
[165.66389465 -71.25465393]
[170.90585327 -85.30889893]
[176.14781189 -99.36314392]
[161.58152771 -95.78221893]
[149.58886719 -104.79200745]
[148.97247314 -119.77933502]
[160.18473816 -129.74351501]
[174.99591064 -127.37083435]
[182.53468323 -114.40135956]
[189.00845337 -127.93244934]
[195.48222351 -141.46353149]
[193.62136841 -159.76840210]
[208.44061279 -169.14248657]
[214.67184448 -182.78695679]
[220.90307617 -196.43144226]
[221.98294067 -213.35096741]
[238.54017639 -216.99708557]
[246.62730408 -202.09625244]
[234.54754639 -190.20021057]
[228.31632996 -176.55574036]
[222.08509827 -162.91125488]
[226.01840210 -151.45060730]
[220.91264343 -140.02113342]
[209.01332092 -134.98976135]
[202.53953552 -121.45867157]
[196.06576538 -107.92758942]
[190.20205688 -94.12117767]
[184.96009827 -80.06693268]
[179.71813965 -66.01268768]
[174.47618103 -51.95844269]
[169.23420715 -37.90419769]
[172.03594971 -23.27547264]
[159.96382141 -13.04931545]
[154.72186279 1.00493085]
[117.04297638 24.49251366]
[115.17360687 39.37557220]
[113.30422974 54.25863266]
[111.43486023 69.14169312]
[127.03199768 81.23134613]
[132.90875244 100.06998444]
[147.50671387 103.51957703]
[162.10467529 106.96916199]
[176.70262146 110.41874695]
[191.30058289 113.86833954]
[205.89854431 117.31792450]
[220.49650574 120.76751709]
[235.09445190 124.21710205]
[240.15454102 122.69316864]
[244.81932068 123.23023987]
[248.36381531 125.32603455]
[250.37123108 128.26182556]
[264.76361084 132.48782349]
[279.15600586 136.71380615]
[293.54840088 140.93978882]
[308.26150513 134.54411316]
[322.36721802 142.18661499]
[325.04489136 158.00462341]
[314.24044800 169.86392212]
[298.24209595 168.66706848]
[289.32241821 155.33218384]
[274.93002319 151.10620117]
[260.53762817 146.88021851]
[246.14523315 142.65422058]
[231.64486694 138.81506348]
[217.04690552 135.36546326]
[202.44895935 131.91587830]
[187.85099792 128.46629333]
[173.25303650 125.01670837]
[158.65509033 121.56711578]
[144.05712891 118.11753082]
[129.45916748 114.66794586]
[114.46733093 129.55821228]
[93.51117706 132.26277161]
[87.27995300 145.90725708]
[81.04872894 159.55172729]
[74.81750488 173.19621277]
[75.39939117 177.57342529]
[74.61785126 181.50415039]
[72.78577423 184.61022949]
[70.30757904 186.65626526]
[67.62394714 187.56709290]
[60.43521500 200.73228455]
[53.24647903 213.89747620]
[46.05774689 227.06265259]
[46.23489380 242.88287354]
[33.34449387 250.34523010]
[26.15575981 263.51040649]
[18.96702576 276.67559814]
[11.77828979 289.84078979]
[4.58955526 303.00598145]
[19.29348755 300.04043579]
[31.87843132 308.20251465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[12 22]
[13 21]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[37 167]
[38 166]
[39 165]
[40 164]
[41 159]
[42 158]
[43 157]
[44 156]
[47 56]
[48 55]
[49 54]
[62 121]
[63 120]
[64 119]
[65 118]
[66 76]
[67 75]
[68 74]
[69 73]
[79 117]
[80 116]
[82 114]
[83 113]
[84 112]
[85 111]
[86 110]
[92 109]
[93 108]
[94 107]
[96 104]
[97 103]
[98 102]
[123 154]
[124 153]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[130 147]
[134 146]
[135 145]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
