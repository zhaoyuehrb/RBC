%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUCCUGGACUCGGGGGCAGCGGGCCUGCUCUGAGCCCUCACCCUGGACUUGUCUCCUCUGUUCAGUUCAUGCCAUGGAGGAAGUGGUGAAGGAGGUGGUGGGACAUGCCAAGGAGACUGGAGAGAAAGCCAUUGCCGAAGCCAUAAAGAAAGCCCAAGAGUCAGGGGACAAAA\
) } def
/len { sequence length } bind def

/coor [
[89.11916351 394.02700806]
[86.43621826 378.83471680]
[92.41382599 364.61248779]
[105.14454651 355.89859009]
[104.60916138 340.90814209]
[104.07377625 325.91769409]
[103.53839111 310.92724609]
[93.43448639 296.59564209]
[102.15867615 280.39627075]
[101.35581207 265.41778564]
[100.55294800 250.43927002]
[99.75008392 235.46078491]
[98.94721985 220.48228455]
[87.72940826 210.75106812]
[86.70182037 195.57218933]
[96.98486328 183.87190247]
[96.18199921 168.89340210]
[95.37913513 153.91490173]
[94.57627106 138.93640137]
[83.76094818 138.02790833]
[73.09860229 134.04139709]
[63.47891235 127.01277924]
[55.77726364 117.23693848]
[42.36388397 123.95119476]
[28.95050430 130.66545105]
[15.53712559 137.37971497]
[13.99029064 152.72933960]
[4.37250280 164.79174805]
[-10.24723911 169.71786499]
[-25.20382690 165.93580627]
[-35.72466660 154.65238953]
[-38.45260239 139.46812439]
[-32.51715088 125.22824860]
[-19.81230164 116.47666168]
[-4.39212036 116.00595856]
[8.82286739 123.96633148]
[22.23624611 117.25207520]
[35.64962387 110.53781891]
[49.06300354 103.82356262]
[50.72258759 96.50947571]
[35.73225403 95.97107697]
[20.74191856 95.43267822]
[5.75158405 94.89427948]
[-7.79526615 101.33499908]
[-22.69511223 99.60451508]
[-34.40522003 90.23043823]
[-39.35535431 76.07077026]
[-36.03629684 61.44258118]
[-25.45997238 50.80578613]
[-10.85094738 47.40338135]
[3.33671212 52.27270508]
[12.77755833 63.92954254]
[26.53228951 69.91346741]
[40.28702164 75.89739227]
[54.04175186 81.88131714]
[55.70133591 74.56723785]
[46.49927139 62.72147751]
[37.29720306 50.87572098]
[28.09513855 39.02996063]
[18.89307213 27.18420410]
[9.69100571 15.33844566]
[0.48894000 3.49268770]
[-8.71312618 -8.35307026]
[-19.60603142 -9.08863735]
[-28.10991096 -15.57904148]
[-31.54838562 -25.47651672]
[-29.00874519 -35.41492844]
[-37.78214645 -47.58158112]
[-52.95330429 -53.80797958]
[-54.87821579 -70.09376526]
[-41.57670212 -79.68551636]
[-26.73221397 -72.71606445]
[-25.61549187 -56.35498428]
[-16.84209251 -44.18832779]
[1.32097256 -37.61072540]
[3.13263202 -17.55513573]
[12.33469772 -5.70937824]
[21.53676414 6.13637972]
[30.73883057 17.98213768]
[39.94089508 29.82789612]
[49.14296341 41.67365265]
[58.34502792 53.51941299]
[67.54709625 65.36516571]
[100.80056763 56.61957550]
[127.91987610 72.32436371]
[140.39192200 63.99081039]
[152.86396790 55.65725708]
[165.33601379 47.32370377]
[177.80804443 38.99015045]
[178.54417419 23.60300255]
[188.08802795 11.73842621]
[202.61631775 7.81504440]
[216.50280762 13.13513947]
[228.97485352 4.80158615]
[236.15066528 -9.29870892]
[251.03161621 -9.93627167]
[263.50366211 -18.26982498]
[275.97570801 -26.60337830]
[288.44775391 -34.93693161]
[300.91979980 -43.27048492]
[313.39184570 -51.60403824]
[309.66375732 -65.45584869]
[310.39950562 -79.76020050]
[315.51373291 -93.11631012]
[324.49301147 -104.22036743]
[336.44726562 -111.99279785]
[350.19802856 -115.68323517]
[364.39462280 -114.94293213]
[377.64688110 -109.85767365]
[388.66113281 -100.93808746]
[401.27993774 -109.04769897]
[406.83013916 -116.34421539]
[414.19714355 -117.18710327]
[426.95867920 -125.07019043]
[434.25149536 -139.75851440]
[450.63311768 -140.51670837]
[459.25152588 -126.56481171]
[451.24081421 -112.25534058]
[434.84176636 -112.30865479]
[422.08023071 -104.42556763]
[409.38955688 -96.42889404]
[396.77075195 -88.31928253]
[400.43240356 -73.02175140]
[398.63714600 -57.36788559]
[391.58340454 -43.24851990]
[380.10583496 -32.37543869]
[365.57666016 -26.07385826]
[349.74160767 -25.12092781]
[334.51019287 -29.64993286]
[321.72540283 -39.13199615]
[309.25335693 -30.79844284]
[296.78131104 -22.46488762]
[284.30926514 -14.13133526]
[271.83721924 -5.79778147]
[259.36517334 2.53577209]
[253.08143616 16.03999519]
[237.30841064 17.27363014]
[224.83636475 25.60718346]
[224.43736267 40.47253799]
[215.25289917 52.39351273]
[200.63917542 56.67050934]
[186.14160156 51.46219254]
[173.66955566 59.79574585]
[161.19750977 68.12930298]
[148.72547913 76.46285248]
[136.25343323 84.79640961]
[138.66450500 92.89253998]
[139.29028320 101.31684875]
[138.10185242 109.68035889]
[135.15408325 117.59687805]
[130.58311462 124.70088196]
[124.59998322 130.66433716]
[117.48095703 135.21188354]
[109.55476379 138.13354492]
[110.35762787 153.11203003]
[111.16049194 168.09053040]
[111.96335602 183.06903076]
[123.43818665 193.60307312]
[124.03903198 208.80484009]
[113.92572021 219.67941284]
[114.72858429 234.65791321]
[115.53144836 249.63641357]
[116.33431244 264.61489868]
[117.13717651 279.59341431]
[126.20529175 288.79547119]
[126.54853058 301.30880737]
[118.52883911 310.39187622]
[119.06421661 325.38229370]
[119.59960175 340.37274170]
[120.13498688 355.36318970]
[133.45492554 363.14669800]
[140.43190002 376.90625000]
[138.83959961 392.25122070]
[129.18611145 404.28509521]
[114.55184937 409.16787720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[9 164]
[10 163]
[11 162]
[12 161]
[13 160]
[16 157]
[17 156]
[18 155]
[19 154]
[23 39]
[24 38]
[25 37]
[26 36]
[56 83]
[57 82]
[58 81]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
[67 74]
[68 73]
[85 146]
[86 145]
[87 144]
[88 143]
[89 142]
[93 138]
[94 137]
[96 135]
[97 134]
[98 133]
[99 132]
[100 131]
[101 130]
[110 122]
[111 121]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
