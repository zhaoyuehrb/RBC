%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGAGCUAGGGGCGGGCCCCUGCGUCUCUGGGCGCUGGAGCGCGGCGACUAUCACGCCGCGUGGCGGACGGACGGACUGACGGACGCGCAGCCUUACCCGAAAGGCCAUGGCGGAGCACGCCCCUCGCCGCUGCUGCCUGGGCUGGGACUUCAGCACGCAGCAGGUAAAGGUUGUUGCUGUUGAUGCAGAGUUGAAUGUCUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[383.14886475 264.34143066]
[370.27212524 256.64794922]
[357.39541626 248.95445251]
[344.51867676 241.26095581]
[331.64193726 233.56747437]
[318.70800781 225.97050476]
[305.71765137 218.47050476]
[292.72726440 210.97050476]
[272.16732788 212.76971436]
[261.75198364 194.04238892]
[248.43821716 187.13275146]
[235.12442017 180.22311401]
[221.81063843 173.31347656]
[208.49685669 166.40383911]
[195.18305969 159.49420166]
[181.86927795 152.58456421]
[167.00860596 153.58935547]
[158.32389832 140.36489868]
[145.01010132 133.45526123]
[130.14942932 134.46005249]
[121.46472931 121.23559570]
[108.15093994 114.32595825]
[68.21794891 124.34221649]
[53.32524872 122.55130005]
[38.43254471 120.76039124]
[23.53983879 118.96947479]
[8.64713573 117.17855835]
[-6.24556828 115.38764954]
[-21.20362473 114.26669312]
[-36.19691086 113.81796265]
[-51.19019699 113.36923218]
[-66.18348694 112.92050171]
[-77.63754272 123.47712708]
[-92.83647156 122.80846405]
[-102.83001709 111.82371521]
[-117.82330322 111.37497711]
[-132.81951904 111.03840637]
[-147.81784058 110.81401825]
[-162.81616211 110.58963013]
[-174.11102295 121.31641388]
[-189.31825256 120.87519836]
[-199.47500610 110.04116821]
[-214.47332764 109.81678009]
[-229.47164917 109.59239197]
[-244.46997070 109.36799622]
[-259.46829224 109.14360809]
[-274.46661377 108.91921234]
[-289.46493530 108.69482422]
[-304.46325684 108.47043610]
[-314.55545044 120.41538239]
[-329.97329712 123.02764893]
[-343.43695068 115.07380676]
[-348.58932495 100.30941772]
[-342.99758911 85.70577240]
[-329.30200195 78.15826416]
[-313.96920776 81.23059845]
[-304.23886108 93.47211456]
[-289.24053955 93.69650269]
[-274.24221802 93.92089081]
[-259.24389648 94.14528656]
[-244.24557495 94.36967468]
[-229.24725342 94.59407043]
[-214.24893188 94.81845856]
[-199.25061035 95.04284668]
[-188.77430725 84.51751709]
[-173.56068420 84.53142548]
[-162.59178162 95.59130859]
[-147.59346008 95.81569672]
[-132.59513855 96.04008484]
[-125.85951996 92.99674225]
[-117.37457275 96.38169098]
[-102.38128662 96.83042908]
[-91.74869537 86.46298981]
[-76.53697968 86.70448303]
[-65.73475647 97.92721558]
[-50.74146652 98.37594604]
[-35.74818039 98.82467651]
[-20.75489426 99.27340698]
[-30.22016144 87.63688660]
[-28.82273674 72.70211792]
[-17.36304474 63.02351379]
[-2.40501356 64.14482117]
[7.48362875 75.42377472]
[6.63882399 90.39996338]
[-4.45465517 100.49494171]
[10.43804932 102.28585815]
[25.33075333 104.07677460]
[40.22345734 105.86768341]
[55.11616135 107.65859985]
[70.00886536 109.44950867]
[75.50675201 104.34821320]
[86.50253296 94.14562225]
[92.00041962 89.04432678]
[91.32744598 74.05943298]
[90.65447235 59.07453537]
[77.12615967 51.93787766]
[69.03978729 39.07291031]
[68.48227692 23.98796654]
[75.50328827 10.73800755]
[88.12873840 2.83461666]
[87.45576477 -12.15027905]
[78.17609406 -25.67136574]
[85.48905182 -40.34967422]
[101.87168121 -41.08542252]
[110.47095490 -27.12173080]
[102.44065857 -12.82325172]
[103.11363220 2.16164422]
[116.39671326 8.90148163]
[124.57717133 21.46874046]
[125.37411499 36.54293442]
[118.47350311 50.08096695]
[105.63937378 58.40156555]
[106.31234741 73.38645935]
[106.98531342 88.37135315]
[115.06057739 101.01216888]
[128.37435913 107.92180634]
[144.18733215 107.41123199]
[151.91973877 120.14147186]
[165.23353577 127.05110931]
[181.04649353 126.54054260]
[188.77891541 139.27078247]
[202.09269714 146.18041992]
[215.40649414 153.09005737]
[228.72027588 159.99969482]
[242.03405762 166.90933228]
[255.34785461 173.81896973]
[268.66162109 180.72859192]
[277.19314575 176.71035767]
[286.47930908 177.06340027]
[294.44174194 181.58212280]
[299.35659790 189.14277649]
[300.22726440 197.98013306]
[313.21765137 205.48013306]
[326.20800781 212.98013306]
[335.20541382 214.56101990]
[339.33541870 220.69073486]
[352.21215820 228.38423157]
[365.08889771 236.07771301]
[377.96563721 243.77120972]
[390.84234619 251.46469116]
[414.61901855 249.60821533]
[425.33541870 270.09799194]
[438.84997559 276.60626221]
[452.36450195 283.11450195]
[465.87902832 289.62277222]
[480.66293335 281.40573120]
[497.26669312 283.59765625]
[509.17300415 295.13839722]
[511.82772827 311.33773804]
[525.43811035 317.64309692]
[539.04846191 323.94845581]
[552.65887451 330.25381470]
[566.49548340 336.04586792]
[580.53900146 341.31646729]
[594.58251953 346.58709717]
[608.62603760 351.85772705]
[622.66961670 357.12835693]
[636.71313477 362.39895630]
[645.84796143 362.48455811]
[650.92633057 367.85491943]
[664.88940430 373.33502197]
[678.85253906 378.81512451]
[692.81561279 384.29525757]
[706.77874756 389.77536011]
[720.74182129 395.25549316]
[734.70495605 400.73559570]
[748.35076904 393.09844971]
[763.70336914 396.07022095]
[773.51373291 408.24768066]
[773.14971924 423.88101196]
[762.78320312 435.58865356]
[747.30889893 437.84262085]
[734.03332520 429.57864380]
[729.22485352 414.69869995]
[715.26171875 409.21859741]
[701.29864502 403.73846436]
[687.33551025 398.25836182]
[673.37243652 392.77822876]
[659.40930176 387.29812622]
[645.44616699 381.81802368]
[631.44250488 376.44250488]
[617.39898682 371.17187500]
[603.35546875 365.90124512]
[589.31195068 360.63061523]
[575.26837158 355.36001587]
[561.22485352 350.08938599]
[564.95251465 364.61883545]
[556.04003906 376.68402100]
[541.05676270 377.39190674]
[531.04650879 366.22076416]
[533.38763428 351.40457153]
[546.35351562 343.86419678]
[532.74310303 337.55883789]
[519.13275146 331.25347900]
[505.52236938 324.94812012]
[494.51492310 332.50390625]
[481.10379028 333.64291382]
[468.78317261 327.96109009]
[460.81613159 316.84545898]
[459.37078857 303.13729858]
[445.85623169 296.62905884]
[432.34170532 290.12078857]
[418.82717896 283.61254883]
[413.54107666 287.37570190]
[407.30166626 289.33660889]
[400.71011353 289.27294922]
[394.41198730 287.15911865]
[389.03393555 283.17187500]
[385.12127686 277.67587280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[4 137]
[5 136]
[6 134]
[7 133]
[8 132]
[10 127]
[11 126]
[12 125]
[13 124]
[14 123]
[15 122]
[16 121]
[18 119]
[19 118]
[21 116]
[22 115]
[23 90]
[24 89]
[25 88]
[26 87]
[27 86]
[28 85]
[29 78]
[30 77]
[31 76]
[32 75]
[35 72]
[36 71]
[37 69]
[38 68]
[39 67]
[42 64]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[93 114]
[94 113]
[95 112]
[100 107]
[101 106]
[142 203]
[143 202]
[144 201]
[145 200]
[149 195]
[150 194]
[151 193]
[152 192]
[153 186]
[154 185]
[155 184]
[156 183]
[157 182]
[158 181]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
