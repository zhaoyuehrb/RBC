%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:07:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUGUCUCUCGCUGACGCCAGAGAUCCAGCUAUCGUCUUCACUGCUCUGUGCCGUCAGCUCCUAGAGGCCCAGCCUCUGUGGCCCUGUGACCUGCAGGUAUUAGGAGGGUCACAGCUAGGACGCCGGGACCCCCUGGAAGCCUAGAAAUGGGACCAUUGCAAUUUAGAGAUGUGGCCAUAGAAUUCUCUCUGGAGGAGUGGCAUUGCCUGGACGCUGCACAGCGGAAUCUAUAUAGGGAUGUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[89.40568542 278.31671143]
[89.21643829 263.31790161]
[89.02719116 248.31909180]
[88.83794403 233.32028198]
[88.45948029 218.32505798]
[87.89185333 203.33580017]
[87.32423401 188.34654236]
[86.75661469 173.35728455]
[86.18898773 158.36802673]
[85.62136841 143.37876892]
[70.85228729 137.55628967]
[58.44947433 126.68319702]
[46.62154770 135.90817261]
[34.79362488 145.13314819]
[22.96570015 154.35812378]
[11.13777542 163.58309937]
[-0.69014972 172.80807495]
[-12.45964432 182.10748291]
[-24.17024040 191.48095703]
[-35.82147217 200.92811584]
[-47.41287613 210.44857788]
[-59.00428009 219.96905518]
[-70.59568787 229.48953247]
[-82.18708801 239.00999451]
[-84.00722504 243.84960938]
[-87.17556763 247.18746948]
[-90.90086365 248.76214600]
[-94.40203857 248.66137695]
[-106.34540558 257.73638916]
[-118.28878021 266.81140137]
[-115.19152069 281.75695801]
[-118.89395142 296.56420898]
[-128.66094971 308.29318237]
[-142.55328369 314.61505127]
[-157.81259155 314.27459717]
[-171.40916443 307.33947754]
[-180.64337158 295.18658447]
[-183.68174744 280.22894287]
[-179.92103577 265.43640137]
[-170.10792542 253.74598694]
[-156.19081116 247.47888184]
[-140.93293762 247.87939453]
[-127.36379242 254.86802673]
[-115.42042542 245.79301453]
[-103.47705078 236.71800232]
[-91.70755768 227.41859436]
[-80.11615753 217.89811707]
[-68.52474976 208.37765503]
[-56.93334579 198.85717773]
[-45.34194183 189.33671570]
[-42.17578888 182.67927551]
[-33.54370880 179.77035522]
[-21.83311462 170.39689636]
[-18.58321762 163.77993774]
[-9.91512680 160.98014832]
[1.91279840 151.75517273]
[13.74072361 142.53019714]
[25.56864738 133.30522156]
[37.39657211 124.08024597]
[49.22449875 114.85527039]
[47.67441559 107.51720428]
[32.99822998 110.61711884]
[29.89855385 95.94087982]
[44.57425690 92.84106445]
[43.02417374 85.50299835]
[28.47586441 81.84969330]
[13.92755413 78.19638062]
[-0.62075680 74.54307556]
[-15.16906738 70.88977051]
[-29.71737862 67.23645782]
[-46.55216217 69.24304962]
[-53.14066315 53.62165070]
[-39.95363617 42.96619797]
[-26.06407166 52.68814850]
[-11.51576042 56.34145737]
[3.03255057 59.99476242]
[17.58086205 63.64807129]
[32.12917328 67.30137634]
[46.67748260 70.95468903]
[57.83731079 60.93180084]
[55.76220703 46.07602692]
[53.68710709 31.22025681]
[51.61200333 16.36448479]
[49.44322968 1.52209866]
[47.18086243 -13.30630970]
[44.91849899 -28.13471794]
[39.46356201 -42.10768127]
[31.08089638 -54.54676819]
[22.69823456 -66.98586273]
[14.31557178 -79.42494965]
[5.93290854 -91.86403656]
[-2.44975424 -104.30313110]
[-10.83241749 -116.74221802]
[-19.21508026 -129.18130493]
[-34.20637894 -126.50159454]
[-48.98999023 -130.15736389]
[-61.00457001 -139.51522827]
[-68.16851807 -152.95390320]
[-69.24063873 -168.14503479]
[-64.03517151 -182.45666504]
[-53.45400620 -193.40924072]
[-39.33039093 -199.10514832]
[-24.11132240 -198.55752563]
[-10.43360043 -191.86128235]
[-0.66697294 -180.17654419]
[3.49643373 -165.52780151]
[1.33528388 -150.45300293]
[-6.77599001 -137.56398010]
[1.60667288 -125.12488556]
[9.98933601 -112.68579102]
[18.37199783 -100.24670410]
[26.75466156 -87.80760956]
[35.13732529 -75.36852264]
[43.51998901 -62.92943192]
[51.90264893 -50.49034119]
[59.24071884 -52.04042435]
[81.25492096 -56.69066620]
[83.89070129 -71.45726776]
[86.52648163 -86.22387695]
[89.16226196 -100.99048615]
[91.79804230 -115.75708771]
[81.21547699 -126.95153046]
[79.27639008 -142.05429077]
[86.51654053 -155.24687195]
[99.97560120 -161.57077026]
[102.61138153 -176.33737183]
[105.24716187 -191.10398865]
[107.88294220 -205.87059021]
[110.51872253 -220.63719177]
[104.43649292 -235.86672974]
[114.79570770 -248.57966614]
[130.93969727 -245.69802856]
[136.26089478 -230.18620300]
[125.28532410 -218.00141907]
[122.64954376 -203.23480225]
[120.01376343 -188.46820068]
[117.37799072 -173.70159912]
[114.74221039 -158.93499756]
[125.18224335 -148.34519958]
[127.41105652 -133.46244812]
[120.36663055 -119.96321106]
[106.56465149 -113.12130737]
[103.92887115 -98.35470581]
[101.29309082 -83.58809662]
[98.65731049 -68.82149506]
[96.02153015 -54.05488586]
[90.98020935 -43.36009979]
[83.81320190 -35.47447968]
[75.53859711 -30.72651482]
[67.19385529 -29.13005829]
[59.74691010 -30.39708328]
[62.00927353 -15.56867409]
[64.27163696 -0.74026579]
[68.37714386 5.38270521]
[66.46777344 14.28938293]
[68.54287720 29.14515495]
[70.61798096 44.00092697]
[72.69308472 58.85669708]
[114.50998688 60.28767395]
[133.76817322 90.13487244]
[148.73207092 89.09481812]
[163.69598389 88.05477142]
[178.65988159 87.01471710]
[193.62377930 85.97466278]
[180.54756165 78.62532806]
[172.31889343 66.08383179]
[170.78311157 51.16266251]
[176.28457642 37.20796204]
[187.58959961 27.34913254]
[202.16296387 23.79706955]
[216.73652649 27.34833717]
[228.04208374 37.20654678]
[233.54432678 51.16094971]
[232.00933838 66.08220673]
[223.78135681 78.62414551]
[210.70388794 85.97466278]
[225.66778564 87.01471710]
[240.63168335 88.05477142]
[255.59558105 89.09481812]
[270.55947876 90.13487244]
[274.34381104 88.12219238]
[278.18640137 87.46879578]
[281.65704346 88.02841949]
[284.41592407 89.53126526]
[286.24591064 91.62367249]
[301.13830566 93.41726685]
[316.03067017 95.21086884]
[330.92306519 97.00446320]
[345.81542969 98.79806519]
[360.67529297 91.86142731]
[373.95559692 101.48255157]
[371.99468994 117.76404572]
[356.80981445 123.95690155]
[344.02185059 113.69044495]
[329.12945557 111.89684296]
[314.23709106 110.10324860]
[299.34469604 108.30964661]
[284.45233154 106.51605225]
[269.51943970 105.09877777]
[254.55552673 104.05872345]
[239.59162903 103.01866913]
[224.62773132 101.97861481]
[209.66383362 100.93856049]
[194.66383362 100.93856049]
[179.69993591 101.97861481]
[164.73603821 103.01866913]
[149.77212524 104.05872345]
[134.80822754 105.09877777]
[138.31120300 112.94686127]
[139.96571350 122.16314697]
[149.70382690 133.57231140]
[159.44195557 144.98147583]
[169.18006897 156.39064026]
[184.69430542 157.78578186]
[194.40762329 169.49501038]
[192.98194885 184.27685547]
[202.72007751 195.68601990]
[212.45820618 207.09518433]
[222.19631958 218.50434875]
[237.07812500 226.62643433]
[233.39315796 243.17506409]
[216.47114563 244.21522522]
[210.78715515 228.24246216]
[201.04904175 216.83331299]
[191.31091309 205.42414856]
[181.57279968 194.01498413]
[166.75048828 193.10134888]
[156.71211243 181.66957092]
[157.77091980 166.12875366]
[148.03279114 154.71958923]
[138.29466248 143.31044006]
[128.55654907 131.90127563]
[121.57006836 134.62873840]
[119.30773163 149.45715332]
[107.59710693 140.08367920]
[100.61062622 142.81115723]
[101.17824554 157.80041504]
[101.74587250 172.78965759]
[102.31349182 187.77891541]
[102.88111115 202.76817322]
[103.44873810 217.75743103]
[106.62030029 223.51290894]
[106.45282745 229.16230774]
[103.83675385 233.13102722]
[104.02600098 248.12983704]
[104.21524811 263.12863159]
[104.40449524 278.12744141]
[106.83812714 297.35574341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 247]
[2 246]
[3 245]
[4 244]
[5 241]
[6 240]
[7 239]
[8 238]
[9 237]
[10 236]
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[17 55]
[18 53]
[19 52]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[28 45]
[29 44]
[30 43]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[80 158]
[81 157]
[82 156]
[83 155]
[84 153]
[85 152]
[86 151]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[117 146]
[118 145]
[119 144]
[120 143]
[121 142]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
[160 208]
[161 207]
[162 206]
[163 205]
[164 204]
[176 203]
[177 202]
[178 201]
[179 200]
[180 199]
[185 198]
[186 197]
[187 196]
[188 195]
[189 194]
[210 232]
[211 231]
[212 230]
[213 229]
[216 226]
[217 225]
[218 224]
[219 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
