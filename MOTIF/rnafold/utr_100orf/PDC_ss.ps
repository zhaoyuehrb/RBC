%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGAUUCUCACCCACUCAACAAGGACACCAGGCACAGAGAUCCAAACUAUUAUAUCAAAUCCAGUCCCUAAAAUGGAAGAAGCCAAAAGCCAAAGUUUGGAGGAAGACUUUGAAGGACAGGCCACACAUACAGGACCCAAAGGAGUAAUAAAUGAUUGGAGAAAGUUUAAAU\
) } def
/len { sequence length } bind def

/coor [
[-72.68119812 301.57730103]
[-86.72495270 296.33609009]
[-99.64228058 288.73742676]
[-111.04126740 279.01327515]
[-122.59896088 288.57461548]
[-134.15666199 298.13598633]
[-145.71435547 307.69735718]
[-150.35223389 315.60650635]
[-157.56642151 317.32434082]
[-169.29389954 326.67669678]
[-181.02137756 336.02905273]
[-182.39892578 354.89776611]
[-196.86114502 366.59478760]
[-214.96987915 364.08410645]
[-226.35408020 373.85140991]
[-220.74031067 387.91427612]
[-219.99940491 403.03808594]
[-224.21174622 417.58233643]
[-232.92037964 429.96936035]
[-245.18069458 438.85549927]
[-259.66275024 443.27685547]
[-274.79568481 442.75384521]
[-288.93792725 437.34320068]
[-300.55551147 427.63180542]
[-308.38818359 414.67312622]
[-311.58633423 399.87277222]
[-309.80307007 384.83618164]
[-303.23178101 371.19442749]
[-292.58532715 360.42727661]
[-279.01852417 353.70266724]
[-264.00302124 351.75000000]
[-249.16754150 354.78109741]
[-236.12136841 362.46722412]
[-224.73716736 352.69992065]
[-226.35412598 341.36663818]
[-222.24263000 330.55380249]
[-213.32084656 323.00289917]
[-201.74163818 320.68817139]
[-190.37371826 324.30157471]
[-178.64624023 314.94921875]
[-166.91877747 305.59689331]
[-155.27572632 296.13964844]
[-143.71801758 286.57827759]
[-132.16032410 277.01693726]
[-120.60262299 267.45556641]
[-128.01860046 254.43635559]
[-133.06219482 240.32398987]
[-135.57902527 225.54687500]
[-135.49148560 210.55387878]
[-132.80108643 195.80058289]
[-127.58840179 181.73550415]
[-120.01075745 168.78643799]
[-110.29740906 157.34744263]
[-98.74262238 147.76689148]
[-85.69677734 140.33677673]
[-71.55570984 135.28390503]
[-56.74874115 132.76289368]
[-41.72560501 132.85151672]
[-26.94281769 135.54823303]
[-12.84978771 140.77224731]
[0.12483864 148.36589050]
[11.58621502 158.09944153]
[23.14391327 148.53808594]
[34.70161057 138.97673035]
[46.25931168 129.41535950]
[57.81700897 119.85400391]
[69.37471008 110.29264832]
[80.93240356 100.73128510]
[83.74312592 85.99697876]
[76.51682281 72.85237885]
[61.27204514 68.68435669]
[53.51227188 54.91622543]
[57.84123611 39.71636963]
[71.69064331 32.10259628]
[86.84387970 36.59201813]
[94.31080627 50.52114868]
[89.66142273 65.62607574]
[96.88772583 78.77067566]
[104.38017273 79.10716248]
[100.38964844 64.64771271]
[112.90827179 56.38429642]
[124.63569641 65.73670197]
[119.36507416 79.78012848]
[126.85752106 80.11661530]
[135.23300171 67.67269897]
[143.60848999 55.22877121]
[134.64060974 41.90275955]
[131.47398376 26.19471169]
[134.56352234 10.51055145]
[143.40820312 -2.75898504]
[156.63204956 -11.60276318]
[172.19815063 -14.69403934]
[187.72235107 -11.58943272]
[195.87310791 -24.18169785]
[204.02386475 -36.77396393]
[212.17462158 -49.36623001]
[220.32537842 -61.95849609]
[228.47613525 -74.55076599]
[236.62689209 -87.14302826]
[244.77764893 -99.73529816]
[241.22396851 -115.13487244]
[249.67100525 -128.49237061]
[265.10729980 -131.88304138]
[278.37475586 -123.29524994]
[281.60202026 -107.82398224]
[272.87445068 -94.64806366]
[257.36990356 -91.58454132]
[249.21914673 -78.99227142]
[241.06838989 -66.40000916]
[232.91763306 -53.80773926]
[224.76687622 -41.21547318]
[216.61611938 -28.62320709]
[208.46536255 -16.03094101]
[200.31460571 -3.43867564]
[208.72283936 7.81831646]
[212.78698730 21.29947853]
[211.99826050 35.38776398]
[206.43118286 48.38600540]
[196.73718262 58.72134781]
[184.06837463 65.13558960]
[169.94067383 66.83831787]
[156.05241394 63.60425949]
[147.67692566 76.04817963]
[139.30143738 88.49210358]
[141.42617798 95.68484497]
[154.74229431 88.77969360]
[168.05841064 81.87454987]
[178.01065063 70.65167999]
[192.87275696 68.62242889]
[205.46932983 76.76652527]
[209.71878052 91.15201569]
[203.56947327 104.83361053]
[189.99029541 111.20587158]
[175.53727722 107.19232941]
[160.60646057 108.63132477]
[145.67564392 110.07032013]
[147.80038452 117.26306152]
[161.59330750 123.15843964]
[175.43858337 128.92977905]
[189.33509827 134.57659912]
[206.28520203 134.93778992]
[210.63038635 151.32545471]
[196.08601379 160.03738403]
[183.68826294 148.47312927]
[169.79174805 142.82629395]
[162.38644409 143.22261047]
[155.69792175 136.95135498]
[141.90501404 131.05598450]
[139.45480347 145.85450745]
[130.18713379 157.64900208]
[116.38809967 163.53004456]
[101.46160126 162.04692078]
[89.08966064 153.56547546]
[82.32413483 140.17788696]
[82.83392334 125.18654633]
[90.49376678 112.28898621]
[78.93606567 121.85034180]
[67.37837219 131.41171265]
[55.82067108 140.97306824]
[44.26296997 150.53442383]
[32.70527267 160.09577942]
[21.14757538 169.65715027]
[28.56107140 182.73939514]
[33.58901596 196.90711975]
[36.07972336 211.72940063]
[35.95865250 226.75566101]
[33.23064804 241.52929688]
[27.97974777 255.60160828]
[20.36660194 268.54537964]
[10.62355042 279.96789551]
[-0.95246011 289.52279663]
[-14.00893211 296.92062378]
[-28.14854622 301.93765259]
[-42.94125748 304.42245483]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 45]
[5 44]
[6 43]
[7 42]
[9 41]
[10 40]
[11 39]
[14 34]
[15 33]
[62 162]
[63 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[69 78]
[70 77]
[84 124]
[85 123]
[86 122]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[137 148]
[138 147]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
