%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUGUAGAAACAGGCCUGUUAAGGAGAGGCCACCGGGACUUCAGUGUCUCCUCCAUCCCAGGAGCGCAGUGGCCACUAUGGGGUCUGGGCUGCCCCUUGUCCUCCUCUUGACCCUCCUUGGCAGCUCACAUGGAACAGGGCCGGGUAUGACUUUGCAACUGAAGCUGAAGGAGUCUU\
) } def
/len { sequence length } bind def

/coor [
[70.95819092 102.49484253]
[56.18607712 99.89012146]
[41.41396332 97.28540039]
[26.64184570 94.68067932]
[17.61840248 96.27444458]
[11.63560963 91.89943695]
[-3.08879828 89.03730011]
[-17.81320572 86.17516327]
[-32.53761292 83.31303406]
[-42.77753448 92.08860016]
[-56.00980377 93.33700562]
[-67.37227631 86.82498932]
[-72.81945038 75.12982178]
[-87.49166107 72.01114655]
[-102.16387939 68.89247131]
[-116.83609009 65.77379608]
[-131.50830078 62.65512466]
[-146.18052673 59.53644943]
[-160.85273743 56.41777039]
[-167.14151001 65.03987122]
[-175.91735840 71.04467773]
[-186.15782166 73.76362610]
[-196.68014526 72.90913391]
[-206.27781677 68.60487366]
[-213.85894775 61.36856079]
[-218.57041931 52.04986572]
[-219.89392090 41.73067474]
[-234.31283569 37.59611511]
[-249.71110535 41.22983932]
[-259.81265259 30.28415871]
[-274.23159790 26.14959908]
[-288.65051270 22.01503754]
[-303.06942749 17.88047791]
[-317.48837280 13.74591732]
[-331.90728760 9.61135769]
[-351.85083008 23.47342300]
[-377.57165527 12.37334061]
[-392.56936646 12.63512611]
[-407.56707764 12.89691257]
[-422.56481934 13.15869808]
[-437.56253052 13.42048454]
[-448.35943604 24.96181297]
[-464.15753174 25.40468788]
[-475.58404541 14.48635864]
[-475.85986328 -1.31552339]
[-464.82135010 -12.62598133]
[-449.01742554 -12.73472214]
[-437.82431030 -1.57723081]
[-422.82659912 -1.83901691]
[-407.82888794 -2.10080314]
[-392.83117676 -2.36258912]
[-377.83343506 -2.62437534]
[-374.20462036 -17.17881203]
[-387.32391357 -24.45095634]
[-400.44320679 -31.72310066]
[-413.56250000 -38.99524307]
[-428.68356323 -34.39861679]
[-442.58654785 -41.91411591]
[-447.02304077 -57.08293152]
[-439.36099243 -70.90567780]
[-424.14611816 -75.18155670]
[-410.40515137 -67.37377167]
[-406.29037476 -52.11454010]
[-393.17108154 -44.84239578]
[-380.05175781 -37.57025146]
[-366.93246460 -30.29810715]
[-354.71517944 -32.90913010]
[-343.11776733 -30.45654869]
[-334.04312134 -23.86614418]
[-328.76864624 -14.69775200]
[-327.77273560 -4.80756807]
[-313.35379028 -0.67300767]
[-298.93487549 3.46155262]
[-284.51596069 7.59611320]
[-270.09701538 11.73067379]
[-255.67810059 15.86523342]
[-241.31117249 11.93577480]
[-230.17828369 23.17718887]
[-215.75935364 27.31174850]
[-201.23524475 14.25628948]
[-181.63505554 12.56655025]
[-164.84756470 23.09614563]
[-157.73405457 41.74555969]
[-143.06184387 44.86423492]
[-128.38963318 47.98291016]
[-113.71741486 51.10158539]
[-99.04520416 54.22026062]
[-84.37298584 57.33893585]
[-69.70077515 60.45761108]
[-56.01556396 50.70418930]
[-39.17657089 53.91619492]
[-29.67547989 68.58862305]
[-14.95107079 71.45075989]
[-0.22666344 74.31289673]
[14.49774456 77.17502594]
[29.24656868 79.90856171]
[44.01868439 82.51328278]
[58.79080200 85.11800385]
[73.56291962 87.72273254]
[88.84524536 73.07004547]
[110.01249695 72.62481689]
[118.61614227 60.33753586]
[127.21979523 48.05025482]
[122.04078674 33.42296982]
[126.48085785 18.55470085]
[138.83270264 9.16260529]
[154.34680176 8.85813332]
[167.05764771 17.75836182]
[172.07766724 32.44097137]
[167.47656250 47.26019669]
[155.02354431 56.51774597]
[139.50708008 56.65390396]
[130.90342712 68.94118500]
[122.29978180 81.22846222]
[127.87510681 91.47772217]
[128.98426819 103.09243011]
[142.98797607 108.46794891]
[156.99168396 113.84346771]
[170.99539185 119.21898651]
[184.99908447 124.59450531]
[199.00279236 129.97003174]
[205.62675476 129.30996704]
[210.80021667 131.74607849]
[213.39599609 135.78526306]
[227.20358276 141.64622498]
[241.01115417 147.50718689]
[254.81872559 153.36816406]
[268.62628174 159.22912598]
[282.48449707 164.96937561]
[296.39224243 170.58847046]
[310.79586792 164.65776062]
[324.82028198 170.55445862]
[330.38552856 184.32266235]
[344.29327393 189.94175720]
[349.51718140 189.20283508]
[354.04064941 190.43560791]
[357.22564697 193.03669739]
[358.76937866 196.23612976]
[372.36398315 202.57540894]
[385.95858765 208.91467285]
[399.55322266 215.25395203]
[413.14782715 221.59323120]
[428.92495728 220.41305542]
[437.18984985 232.80421448]
[450.78448486 239.14347839]
[467.06515503 237.17594910]
[476.69171143 250.45233154]
[469.76110840 265.31500244]
[453.40301514 266.47454834]
[444.44519043 252.73809814]
[430.85058594 246.39881897]
[416.04583740 248.03242493]
[406.80856323 235.18785095]
[393.21392822 228.84857178]
[379.61932373 222.50929260]
[366.02471924 216.17002869]
[352.43008423 209.83074951]
[338.67419434 203.84951782]
[324.76641846 198.23040771]
[311.19891357 204.26847839]
[297.01443481 198.76803589]
[290.77313232 184.49623108]
[276.86538696 178.87713623]
[269.46499634 179.28785706]
[262.76531982 173.03669739]
[248.95774841 167.17573547]
[235.15017700 161.31475830]
[221.34260559 155.45379639]
[207.53503418 149.59283447]
[193.62727356 143.97373962]
[179.62356567 138.59820557]
[165.61985779 133.22268677]
[151.61616516 127.84717560]
[137.61245728 122.47165680]
[123.60874939 117.09613800]
[114.96619415 125.01326752]
[103.90386200 128.88616943]
[92.21032715 128.08863831]
[81.77626038 122.74964142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[6 95]
[7 94]
[8 93]
[9 92]
[13 89]
[14 88]
[15 87]
[16 86]
[17 85]
[18 84]
[19 83]
[27 79]
[28 78]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[35 71]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[53 66]
[54 65]
[55 64]
[56 63]
[101 114]
[102 113]
[103 112]
[116 175]
[117 174]
[118 173]
[119 172]
[120 171]
[121 170]
[124 169]
[125 168]
[126 167]
[127 166]
[128 165]
[129 163]
[130 162]
[133 159]
[134 158]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
