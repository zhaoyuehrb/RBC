%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCGCGUGCGCAGAGGUGCGGCCGGGGAGGCGCGCGGAGGCUGGAGCUGGAGGCGCGGCGCCGGUGAGCUGAGAACCAUGUGUGCUCAGUAUUGCAUCUCCUUUGCUGAUGUUGAAAAAGCUCAUAUCAACAUUCGAGAUUCUAUCCACCUCACACCAGUGCUAACAAGCUCCAUUU\
) } def
/len { sequence length } bind def

/coor [
[-143.25439453 428.80035400]
[-153.27806091 426.37423706]
[-163.50804138 437.34454346]
[-167.26103210 452.71417236]
[-181.59971619 456.74548340]
[-191.82969666 467.71578979]
[-202.05966187 478.68609619]
[-212.28964233 489.65640259]
[-222.51962280 500.62670898]
[-232.74958801 511.59701538]
[-242.97956848 522.56732178]
[-236.95285034 537.66644287]
[-238.10317993 553.82489014]
[-246.15016174 567.81719971]
[-259.44180298 576.87243652]
[-275.29342651 579.22296143]
[-290.52987671 574.44909668]
[-300.56683350 585.59625244]
[-310.60379028 596.74340820]
[-316.70892334 612.55999756]
[-333.59744263 611.07189941]
[-336.84271240 594.43145752]
[-321.75097656 586.70648193]
[-311.71401978 575.55926514]
[-301.67703247 564.41210938]
[-307.56719971 551.83520508]
[-308.21578979 537.91912842]
[-303.49163818 524.76727295]
[-294.07821655 514.38031006]
[-281.37496948 508.35153198]
[-267.28918457 507.62280273]
[-253.94987488 512.33734131]
[-243.71989441 501.36706543]
[-233.48992920 490.39675903]
[-223.25994873 479.42645264]
[-213.02996826 468.45614624]
[-202.80000305 457.48583984]
[-192.57002258 446.51553345]
[-189.54875183 431.93057251]
[-174.47834778 427.11459351]
[-164.24836731 416.14428711]
[-166.38374329 396.80432129]
[-153.44165039 381.87036133]
[-133.38664246 381.21417236]
[-123.74483490 369.72351074]
[-114.10301971 358.23284912]
[-104.46120453 346.74218750]
[-94.81938934 335.25152588]
[-85.17758179 323.76083374]
[-75.63640594 312.18649292]
[-66.19660187 300.52929688]
[-68.00406647 285.78924561]
[-58.59682465 273.83273315]
[-43.12386322 272.03683472]
[-33.68405914 260.37963867]
[-24.24425125 248.72245789]
[-14.80444622 237.06526184]
[-5.36464024 225.40808105]
[3.97307920 213.66896057]
[13.20800114 201.84878540]
[6.79111576 187.03259277]
[8.72483444 170.90823364]
[18.57618904 157.87977600]
[33.73673630 151.55361938]
[50.11266708 153.74043274]
[59.13989258 141.76089478]
[68.16711426 129.78135681]
[77.19434357 117.80182648]
[67.05627441 91.05951691]
[85.48131561 63.43749619]
[80.84606171 49.17164612]
[76.21080780 34.90579987]
[71.57555389 20.63995171]
[66.94029236 6.37410402]
[62.30504227 -7.89174366]
[50.68194199 -18.62553024]
[54.10760880 -33.12084198]
[49.47235489 -47.38669205]
[35.88819885 -55.92192459]
[34.23498154 -71.87957001]
[45.78091431 -83.01828766]
[61.66894150 -80.79340363]
[69.71113586 -66.91165924]
[63.73820114 -52.02194595]
[68.37345886 -37.75609589]
[79.66500854 -28.04269981]
[76.57089233 -12.52699852]
[81.20614624 1.73884904]
[85.84140015 16.00469589]
[90.47665405 30.27054405]
[95.11190796 44.53639221]
[99.74716187 58.80223846]
[106.74901581 61.48999786]
[107.53424072 46.51056671]
[122.02322388 42.62864304]
[130.19233704 55.20900726]
[120.75272369 66.86551666]
[127.75457764 69.55327606]
[140.74496460 62.05327988]
[153.73533630 54.55327988]
[166.72572327 47.05327988]
[179.71609497 39.55327988]
[181.45701599 24.24722099]
[191.75642395 13.03224659]
[206.51020813 10.06746006]
[220.01901245 16.28438377]
[233.00938416 8.78438473]
[241.09204102 -4.81640005]
[255.98283386 -4.47933769]
[268.97320557 -11.97933769]
[281.96359253 -19.47933769]
[294.95397949 -26.97933769]
[307.94436646 -34.47933578]
[320.93472290 -41.97933578]
[326.82263184 -49.00039291]
[334.21792603 -49.49460602]
[347.33721924 -56.76675034]
[351.45199585 -72.02597809]
[365.19296265 -79.83376312]
[380.40783691 -75.55788422]
[388.06991577 -61.73514175]
[383.63339233 -46.56632614]
[369.73043823 -39.05082703]
[354.60937500 -43.64745331]
[341.49008179 -36.37530899]
[328.43472290 -28.98895645]
[315.44436646 -21.48895645]
[302.45397949 -13.98895645]
[289.46359253 -6.48895645]
[276.47320557 1.01104355]
[263.48281860 8.51104355]
[256.32934570 21.57537842]
[240.50938416 21.77476501]
[227.51901245 29.27476501]
[226.14862061 44.08219910]
[216.20414734 55.37695312]
[201.34199524 58.68901062]
[187.21609497 52.54365921]
[174.22572327 60.04365921]
[161.23533630 67.54366302]
[148.24496460 75.04366302]
[135.25457764 82.54366302]
[137.60316467 95.66065979]
[135.40827942 108.28990173]
[129.27284241 118.96397400]
[120.23682404 126.56101227]
[109.61741638 130.42085266]
[98.82408142 130.39521790]
[89.17387390 126.82905579]
[80.14665222 138.80859375]
[71.11942291 150.78811646]
[62.09219742 162.76765442]
[68.22299957 175.35742188]
[68.32469177 189.29400635]
[62.43449402 201.85198975]
[51.75581741 210.60015869]
[38.41285706 213.87217712]
[25.02816200 211.08370972]
[15.79324055 222.90386963]
[12.96420479 231.61932373]
[6.29254913 234.84788513]
[-3.14725685 246.50506592]
[-12.58706284 258.16226196]
[-22.02686882 269.81945801]
[-31.46667480 281.47665405]
[-30.00631905 296.98486328]
[-39.74568558 308.67245483]
[-54.53940964 309.96908569]
[-63.97921753 321.62628174]
[-66.95992279 330.29104614]
[-73.68691254 333.40264893]
[-83.32872772 344.89334106]
[-92.97054291 356.38400269]
[-102.61235046 367.87466431]
[-112.25416565 379.36532593]
[-121.89598083 390.85598755]
[-118.33116150 400.96343994]
[-119.29132843 411.55676270]
[-124.53501129 420.71807861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[5 38]
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[17 25]
[18 24]
[19 23]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 169]
[51 168]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 159]
[60 158]
[65 152]
[66 151]
[67 150]
[68 149]
[70 92]
[71 91]
[72 90]
[73 89]
[74 88]
[75 87]
[77 85]
[78 84]
[98 142]
[99 141]
[100 140]
[101 139]
[102 138]
[106 134]
[107 133]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[116 125]
[117 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
