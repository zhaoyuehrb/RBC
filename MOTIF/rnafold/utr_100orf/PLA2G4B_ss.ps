%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAAUUGGGACAUCACAUCCCUGGCUCUGGGUUAGAAAGCUGACAGUCCUUGAUCCUGUGGCCACUGCCCCAUCAUUCCUGCUCCUGAGGACUCAGUCUCAUGGCUGUGGCAGAGGUGUCCAGGACCUGCCUGCUCACGGUUCGUGUCCUGCAGGCCCAUCGCCUACCCUCUAAGGACCUAGUGACCCCCUCUGACUGCU\
) } def
/len { sequence length } bind def

/coor [
[112.36072540 523.39331055]
[102.91233826 511.57876587]
[97.57917023 497.42205811]
[96.88372803 482.31008911]
[100.89412689 467.72338867]
[109.21747589 455.09100342]
[121.03833008 445.65051270]
[135.19862366 440.32684326]
[134.49900818 425.34317017]
[133.79940796 410.35949707]
[123.14997864 403.09811401]
[118.56091309 390.84521484]
[121.91846466 377.99798584]
[132.21307373 369.30587769]
[131.74658203 354.31314087]
[131.28007507 339.32040405]
[130.81358337 324.32763672]
[115.65814209 317.06561279]
[104.43051910 305.19152832]
[98.38257599 290.51034546]
[98.01301575 275.10018921]
[103.04074097 261.01980591]
[112.48504639 250.03344727]
[124.83647919 243.39048767]
[121.82437134 228.69602966]
[118.81226349 214.00157166]
[106.27709198 206.03883362]
[103.01305389 191.17947388]
[111.45008850 178.08541870]
[108.43798065 163.39096069]
[105.42587280 148.69650269]
[92.24547577 141.53569031]
[78.27831268 147.00547791]
[64.31114960 152.47525024]
[50.34399033 157.94502258]
[36.37683105 163.41479492]
[26.57099533 176.55928040]
[10.31850815 174.37097168]
[4.33853436 159.10099792]
[14.78275776 146.45780945]
[30.90705681 149.44763184]
[44.87421799 143.97785950]
[58.84137726 138.50808716]
[72.80854034 133.03831482]
[86.77570343 127.56853485]
[73.20296478 104.19543457]
[83.72929382 82.80795288]
[77.40176392 69.20787048]
[71.07424164 55.60777664]
[64.74671173 42.00769043]
[58.41918945 28.40760040]
[45.58259583 19.15922546]
[47.22898483 4.35589314]
[40.90145874 -9.24419594]
[34.57393265 -22.84428596]
[28.14084244 -36.39476013]
[21.60257530 -49.89479828]
[15.06430912 -63.39484024]
[2.08543849 -72.44245911]
[3.50140977 -87.26960754]
[-3.03685641 -100.76964569]
[-9.59873104 -107.13480377]
[-9.56999588 -114.53086090]
[-15.89752197 -128.13095093]
[-22.22504616 -141.73104858]
[-28.55257225 -155.33113098]
[-41.38916779 -164.57949829]
[-39.74277878 -179.38284302]
[-46.07030487 -192.98292542]
[-52.39782715 -206.58302307]
[-70.12602997 -204.59811401]
[-87.44445801 -208.77589417]
[-102.27817535 -218.59915161]
[-112.85565186 -232.87525940]
[-117.92030334 -249.88102722]
[-116.87976074 -267.57058716]
[-109.87510681 -283.82165527]
[-97.76200867 -296.69000244]
[-104.92280579 -309.87039185]
[-112.08360291 -323.05081177]
[-119.24440002 -336.23120117]
[-134.60386658 -339.16735840]
[-144.44244385 -351.32202148]
[-144.11468506 -366.95617676]
[-133.77531433 -378.68783569]
[-118.30628967 -380.97766113]
[-105.01160431 -372.74447632]
[-100.16860199 -357.87573242]
[-106.06399536 -343.39199829]
[-98.90319824 -330.21160889]
[-91.74240112 -317.03118896]
[-84.58160400 -303.85079956]
[-72.57608032 -306.69274902]
[-60.22833252 -306.56845093]
[-48.26103210 -303.47985840]
[-37.37586594 -297.60256958]
[-28.21238899 -289.27587891]
[-21.31044197 -278.98312378]
[-17.07835960 -267.32376099]
[-15.76880455 -254.97827148]
[-17.46370125 -242.66859436]
[-22.06912422 -231.11584473]
[-29.32048798 -220.99809265]
[-38.79774094 -212.91053772]
[-32.47021484 -199.31045532]
[-26.14268875 -185.71035767]
[-13.75868130 -177.43475342]
[-14.95248318 -161.65866089]
[-8.62495804 -148.05856323]
[-2.29743266 -134.45848083]
[4.03009272 -120.85839081]
[10.46318340 -107.30791473]
[17.00144958 -93.80787659]
[29.51265907 -85.72586823]
[28.56435013 -69.93310547]
[35.10261536 -56.43306351]
[41.64088058 -42.93302536]
[47.38993835 -38.27997208]
[48.17402267 -29.17181015]
[54.50154495 -15.57172108]
[60.82907104 -1.97163248]
[73.21308136 6.30397177]
[72.01927948 22.08007431]
[78.34680176 35.68016434]
[84.67433167 49.28025055]
[91.00185394 62.88034058]
[97.32937622 76.48043060]
[116.00540924 79.54516602]
[128.03652954 96.34016418]
[124.39251709 118.43668365]
[138.93051147 114.74250031]
[153.46849060 111.04831696]
[168.00646973 107.35413361]
[182.54446411 103.65995026]
[197.08244324 99.96576691]
[211.48019409 84.10013580]
[231.09399414 90.51157379]
[245.44386292 86.14335632]
[259.79373169 81.77513123]
[274.14358521 77.40691376]
[287.53543091 67.01004791]
[301.23321533 77.00039673]
[295.42523193 92.92846680]
[278.51181030 91.75677490]
[264.16195679 96.12500000]
[249.81207275 100.49321747]
[235.46221924 104.86144257]
[232.61140442 113.28341675]
[226.10287476 119.54141235]
[217.31156921 122.13768005]
[208.17724609 120.36730194]
[200.77662659 114.50375366]
[186.23864746 118.19793701]
[171.70065308 121.89212036]
[157.16267395 125.58630371]
[142.62469482 129.28048706]
[128.08670044 132.97467041]
[120.12033844 145.68438721]
[123.13243866 160.37884521]
[126.14454651 175.07331848]
[139.05279541 183.79196167]
[141.89817810 198.73715210]
[133.50672913 210.98945618]
[136.51882935 225.68391418]
[139.53094482 240.37838745]
[158.98045349 243.09536743]
[175.49972534 255.66067505]
[184.21118164 275.72344971]
[181.89991760 298.59738159]
[193.66883850 307.89752197]
[205.43774414 317.19766235]
[221.61383057 322.27416992]
[221.21371460 339.22338867]
[204.81611633 343.53091431]
[196.13760376 328.96658325]
[184.36869812 319.66644287]
[172.59977722 310.36630249]
[165.90141296 313.74002075]
[176.45838928 324.39599609]
[169.58621216 337.72915649]
[154.78201294 335.31347656]
[152.50468445 320.48742676]
[145.80632019 323.86114502]
[146.27282715 338.85391235]
[146.73931885 353.84664917]
[147.20582581 368.83938599]
[160.17025757 380.57913208]
[160.62765503 397.72528076]
[148.78308105 409.65988159]
[149.48268127 424.64355469]
[150.18229675 439.62725830]
[164.77702332 443.60830688]
[177.42611694 451.90625000]
[186.89033508 463.70809937]
[192.24246216 477.85766602]
[192.95816040 492.96868896]
[188.96731567 507.56076050]
[180.66090393 520.20428467]
[168.85270691 529.66058350]
[154.69956970 535.00323486]
[139.58805847 535.70880127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 191]
[9 190]
[10 189]
[14 186]
[15 185]
[16 184]
[17 183]
[24 165]
[25 164]
[26 163]
[29 160]
[30 159]
[31 158]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[47 127]
[48 126]
[49 125]
[50 124]
[51 123]
[53 121]
[54 120]
[55 119]
[56 117]
[57 116]
[58 115]
[60 113]
[61 112]
[63 111]
[64 110]
[65 109]
[66 108]
[68 106]
[69 105]
[70 104]
[78 92]
[79 91]
[80 90]
[81 89]
[130 157]
[131 156]
[132 155]
[133 154]
[134 153]
[135 152]
[137 147]
[138 146]
[139 145]
[140 144]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
