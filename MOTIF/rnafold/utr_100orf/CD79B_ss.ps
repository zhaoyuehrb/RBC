%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGACAGGCUGCAGCCGGUGCAGUUACACGUUUUCCUCCAAGGAGCCUCGGACGUUGUCACGGGUUUGGGGUCGGGGACAGAGCGGUGACCAUGGCCAGGCUGGCGUUGUCUCCUGUGCCCAGCCACUGGAUGGUGGCGUUGCUGCUGCUGCUCUCAGCAGCUGAGCCAGUACCAGCAGCCAGAUCGGAGG\
) } def
/len { sequence length } bind def

/coor [
[49.66825867 90.14749146]
[35.52728653 85.14420319]
[21.38631439 80.14091492]
[7.24534035 75.13762665]
[-6.89563274 70.13433838]
[-21.03660583 65.13105774]
[-35.17757797 60.12776947]
[-49.31855392 55.12448120]
[-58.46716309 55.21088409]
[-63.64688110 49.92399216]
[-77.70497894 44.69237518]
[-91.93875885 51.01987457]
[-106.12114716 45.51400757]
[-112.06573486 31.90527916]
[-126.12383270 26.67366219]
[-140.18193054 21.44204712]
[-154.24003601 16.21043015]
[-168.29814148 10.97881413]
[-182.39813232 5.86119509]
[-196.53910828 0.85790873]
[-210.68008423 -4.14537764]
[-224.47814941 5.62597418]
[-241.21554565 5.25661182]
[-254.30671692 -4.91019154]
[-258.71868896 -20.71518898]
[-272.93881226 -25.48883438]
[-287.15896606 -30.26247978]
[-301.37908936 -35.03612518]
[-315.59924316 -39.80976868]
[-324.74523926 -39.57523346]
[-330.00988770 -44.77755737]
[-344.15087891 -49.78084564]
[-358.29183960 -54.78413010]
[-372.43280029 -59.78741837]
[-386.57379150 -64.79070282]
[-400.79391479 -69.56434631]
[-415.08950806 -74.10710144]
[-429.38507080 -78.64984894]
[-443.68063354 -83.19260406]
[-457.97622681 -87.73535156]
[-462.21237183 -86.64411163]
[-466.17419434 -86.93681335]
[-469.45819092 -88.35531616]
[-471.78704834 -90.53646851]
[-473.03302002 -93.06267548]
[-487.00454712 -98.52124786]
[-496.15115356 -98.73114014]
[-501.15695190 -104.18299103]
[-515.03826904 -109.86708832]
[-528.91961670 -115.55119324]
[-542.80090332 -121.23529053]
[-556.68225098 -126.91938782]
[-570.56353760 -132.60348511]
[-584.44488525 -138.28759766]
[-598.32617188 -143.97169495]
[-610.42401123 -134.50920105]
[-625.63446045 -132.37925720]
[-639.86608887 -138.15476990]
[-649.29064941 -150.28218079]
[-651.37286377 -165.49926758]
[-645.55279541 -179.71270752]
[-633.39593506 -189.09916687]
[-618.17236328 -191.13372803]
[-603.97723389 -185.26910400]
[-594.62890625 -173.08285522]
[-592.64208984 -157.85301208]
[-578.76080322 -152.16891479]
[-564.87945557 -146.48481750]
[-550.99816895 -140.80070496]
[-537.11682129 -135.11660767]
[-523.23547363 -129.43251038]
[-509.35418701 -123.74840546]
[-495.47286987 -118.06430817]
[-481.54598999 -112.49279022]
[-467.57443237 -107.03421021]
[-453.43347168 -102.03092957]
[-439.13787842 -97.48817444]
[-424.84231567 -92.94542694]
[-410.54675293 -88.40267181]
[-396.25115967 -83.85992432]
[-391.66198730 -85.22826385]
[-386.16464233 -83.71814728]
[-381.57049561 -78.93167877]
[-367.42953491 -73.92839050]
[-353.28854370 -68.92510223]
[-339.14758301 -63.92181778]
[-325.00659180 -58.91853333]
[-310.82559204 -54.02990723]
[-296.60543823 -49.25625992]
[-282.38531494 -44.48261642]
[-268.16516113 -39.70897293]
[-253.94503784 -34.93532944]
[-243.82661438 -43.65714264]
[-230.61317444 -46.25760651]
[-217.73895264 -41.95174408]
[-208.60411072 -31.76388741]
[-205.67680359 -18.28635025]
[-191.53582764 -13.28306484]
[-177.39485168 -8.27977848]
[-170.02990723 -9.01356983]
[-163.06651306 -3.07928634]
[-149.00842285 2.15232992]
[-134.95031738 7.38394594]
[-120.89221954 12.61556244]
[-106.83412170 17.84717941]
[-93.43910217 11.43553638]
[-79.10766602 16.54087639]
[-72.47336578 30.63427353]
[-58.41526413 35.86589050]
[-44.31526566 40.98350906]
[-30.17429352 45.98679733]
[-16.03331947 50.99008179]
[-1.89234626 55.99337006]
[12.24862671 60.99665451]
[26.38960075 65.99993896]
[40.53057480 71.00322723]
[54.67154694 76.00651550]
[63.04642105 63.70345306]
[74.70326996 54.21512985]
[88.72221375 48.39879608]
[103.96537018 46.81763458]
[119.16918182 49.68729782]
[133.04913330 56.85096359]
[144.40826416 67.78554535]
[152.24028015 81.63912964]
[165.93025208 75.50850677]
[179.62022400 69.37788391]
[193.31021118 63.24726486]
[207.00018311 57.11664200]
[220.69015503 50.98601913]
[229.85700989 37.38818741]
[246.19546509 38.79776001]
[252.89791870 53.76469040]
[243.06947327 66.89228058]
[226.82078552 64.67599487]
[213.13081360 70.80661774]
[199.44082642 76.93724060]
[185.75085449 83.06786346]
[172.06088257 89.19848633]
[158.37089539 95.32910919]
[157.64247131 110.31140900]
[170.67314148 117.74118042]
[183.70381165 125.17095184]
[196.73449707 132.60072327]
[209.76516724 140.03048706]
[222.79585266 147.46026611]
[235.82652283 154.89002991]
[251.64732361 155.00402832]
[258.87121582 168.02955627]
[271.90188599 175.45932007]
[284.93258667 182.88909912]
[297.96325684 190.31886292]
[310.99392700 197.74862671]
[323.62716675 195.10208130]
[334.33129883 201.57000732]
[337.64337158 213.21357727]
[350.55203247 220.85337830]
[363.46066284 228.49317932]
[376.36932373 236.13298035]
[389.27798462 243.77278137]
[405.98831177 246.63664246]
[407.86224365 263.48669434]
[392.18945312 269.95196533]
[381.63818359 256.68145752]
[368.72952271 249.04164124]
[355.82086182 241.40184021]
[342.91220093 233.76203918]
[330.00357056 226.12223816]
[312.47723389 226.88508606]
[303.56414795 210.77931213]
[290.53347778 203.34953308]
[277.50280762 195.91976929]
[264.47213745 188.49000549]
[251.44145203 181.06022644]
[236.55270386 181.47766113]
[228.39675903 167.92071533]
[215.36607361 160.49093628]
[202.33540344 153.06117249]
[189.30471802 145.63139343]
[176.27404785 138.20162964]
[163.24337769 130.77185059]
[150.21269226 123.34208679]
[143.55648804 133.67922974]
[134.82716370 142.23760986]
[124.47948456 148.61468506]
[113.04306793 152.52041626]
[101.09534454 153.79029846]
[89.23236847 152.39210510]
[78.03913879 148.42593384]
[68.06068420 142.11775208]
[59.77558899 133.80668640]
[53.57303619 123.92700195]
[49.73459625 112.98536682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 117]
[2 116]
[3 115]
[4 114]
[5 113]
[6 112]
[7 111]
[8 110]
[10 109]
[11 108]
[14 105]
[15 104]
[16 103]
[17 102]
[18 101]
[19 99]
[20 98]
[21 97]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[36 80]
[37 79]
[38 78]
[39 77]
[40 76]
[45 75]
[46 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[54 67]
[55 66]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[141 182]
[142 181]
[143 180]
[144 179]
[145 178]
[146 177]
[147 176]
[149 174]
[150 173]
[151 172]
[152 171]
[153 170]
[156 168]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
