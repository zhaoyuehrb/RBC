%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCAGGGCGGAAGCAGAGGCGUUGGCGGCGUGAGGCUCAGGACUGUACAUCAGAGGAAGCCAAAAGCCAGCUGGAAUACUUCCUGAAUACAGUUUUAAUCUUGUUUGCAAUUAUUUCGAAGGGGAGAAAUCAUCUGGAUCAGAAUUAAGAUGCUCUGGUUUCAAGGAAAUAGCAUGCAACUUGCCAGAUCCUCCUUUGGACUCUUCUUGAGAAAUUGCUCUGCCUCUAAGACAACUCUGCCUGUGUUGA\
) } def
/len { sequence length } bind def

/coor [
[91.15161896 674.86834717]
[75.35838318 674.27740479]
[64.67012787 662.63537598]
[65.42800903 646.84924316]
[77.18238831 636.28466797]
[77.74326324 621.29516602]
[78.30413055 606.30566406]
[71.04812622 593.29797363]
[79.29602051 579.79675293]
[79.85688782 564.80725098]
[80.41775513 549.81774902]
[80.97862244 534.82824707]
[78.46282959 530.79693604]
[78.43477631 525.14721680]
[81.74495697 519.47338867]
[82.67934418 504.50250244]
[83.61373901 489.53161621]
[84.54813385 474.56076050]
[85.48252106 459.58990479]
[86.41691589 444.61901855]
[76.39950562 433.65603638]
[77.13384247 418.46014404]
[88.70075226 408.02728271]
[89.63514709 393.05642700]
[90.56954193 378.08554077]
[91.03696442 363.09283447]
[91.03696442 348.09283447]
[91.03696442 333.09283447]
[91.03696442 318.09283447]
[91.03696442 303.09283447]
[83.29965973 290.36557007]
[91.03696442 276.56539917]
[91.03696442 261.56539917]
[91.03696442 246.56538391]
[91.03696442 231.56538391]
[78.64428711 220.17852783]
[78.32813263 203.01356506]
[90.77368927 190.70222473]
[90.58669281 175.70338440]
[90.39969635 160.70455933]
[90.21269989 145.70571899]
[90.02570343 130.70687866]
[89.83871460 115.70805359]
[80.05439758 104.33847809]
[65.25096130 101.91810608]
[50.44752121 99.49774170]
[35.64408112 97.07737732]
[20.84064293 94.65700531]
[6.03720284 92.23664093]
[-4.85516310 99.11216736]
[-17.12116814 96.80882263]
[-24.30039406 87.09367371]
[-39.07250977 84.48894501]
[-53.84462738 81.88422394]
[-60.13679123 83.77056885]
[-65.62222290 82.41754150]
[-68.95059204 79.02602386]
[-83.65318298 76.05383301]
[-98.35576630 73.08163452]
[-113.05835724 70.10944366]
[-127.76094055 67.13725281]
[-142.53305054 64.53253174]
[-157.36552429 62.29689789]
[-172.19798279 60.06126404]
[-182.30232239 71.71912384]
[-197.11177063 76.04159546]
[-211.90069580 71.64938354]
[-221.94998169 59.94402695]
[-224.05296326 44.66066742]
[-217.53855896 30.67616844]
[-204.48551941 22.45293236]
[-189.05900574 22.61496162]
[-176.18156433 31.11055565]
[-169.96234131 45.22880173]
[-155.12988281 47.46443558]
[-140.29742432 49.70006943]
[-137.97724915 48.17193604]
[-134.91979980 47.45838547]
[-131.42791748 47.84189224]
[-127.90002441 49.49178314]
[-124.78874969 52.43466568]
[-110.08615875 55.40685654]
[-95.38357544 58.37905121]
[-80.68098450 61.35124207]
[-65.97840118 64.32343292]
[-51.23990250 67.11210632]
[-36.46778488 69.71683502]
[-21.69567108 72.32155609]
[-5.53718567 65.44664001]
[8.45756912 77.43320465]
[23.26100922 79.85356903]
[38.06444931 82.27393341]
[52.86788940 84.69430542]
[67.67132568 87.11466980]
[82.47476959 89.53503418]
[70.64391327 80.31381989]
[56.03115082 76.92749023]
[42.89820099 69.68003845]
[32.24304581 59.12220764]
[24.87539673 46.05630875]
[21.35512733 31.47523499]
[21.94974709 16.48702431]
[26.61407471 2.23065615]
[34.99365616 -10.21050930]
[46.45171738 -19.89104843]
[60.11754227 -26.07532120]
[74.95264435 -28.29337883]
[89.82968140 -26.37666321]
[103.61812592 -20.47083092]
[115.27016449 -11.02467537]
[123.90036011 1.24397671]
[128.85287476 15.40281200]
[129.75135803 30.37587738]
[126.52754974 45.02534866]
[119.42641449 58.23799133]
[108.99144745 69.00673676]
[104.05615997 83.17159271]
[115.17827606 73.10686493]
[126.30038452 63.04214478]
[137.42250061 52.97742462]
[148.54461670 42.91270447]
[159.66671753 32.84798050]
[170.78883362 22.78326035]
[181.91094971 12.71853924]
[193.03306580 2.65381789]
[204.15516663 -7.41090345]
[208.40338135 -15.46675777]
[215.47923279 -17.53070831]
[226.72595215 -27.45599556]
[212.11099243 -30.83277512]
[205.52346802 -44.30885315]
[211.83630371 -57.91577148]
[226.37977600 -61.58828735]
[238.39587402 -52.60978699]
[238.99636841 -37.62242889]
[250.83952332 -46.82785034]
[262.68267822 -56.03327560]
[274.52581787 -65.23869324]
[286.36895752 -74.44411469]
[271.38296509 -75.09232330]
[259.58023071 -84.34950256]
[255.38009644 -98.74946594]
[260.35522461 -112.90036774]
[272.64276123 -121.50364685]
[287.64184570 -121.33793640]
[299.73632812 -112.46529388]
[304.39758301 -98.20792389]
[299.88119507 -83.90547943]
[312.58206177 -91.88595581]
[325.28292847 -99.86643982]
[337.98376465 -107.84692383]
[345.55221558 -121.74041748]
[360.44522095 -121.96037292]
[373.14605713 -129.94085693]
[385.84692383 -137.92134094]
[385.06207275 -154.44978333]
[392.68292236 -169.03152466]
[406.54174805 -177.72363281]
[422.79898071 -178.22993469]
[437.00665283 -170.50683594]
[449.60705566 -178.64503479]
[462.20742798 -186.78321838]
[474.80783081 -194.92141724]
[487.40820312 -203.05961609]
[497.43307495 -216.73214722]
[513.34643555 -210.88400269]
[512.13214111 -193.97360229]
[495.54641724 -190.45921326]
[482.94601440 -182.32102966]
[470.34564209 -174.18283081]
[457.74523926 -166.04463196]
[445.14486694 -157.90644836]
[446.72421265 -144.35517883]
[442.29486084 -131.38134766]
[432.66577148 -121.53058624]
[419.67196655 -116.76158905]
[405.82498169 -118.05676270]
[393.82742310 -125.22047424]
[381.12655640 -117.23999023]
[368.42568970 -109.25950623]
[361.76568604 -95.93683624]
[345.96426392 -95.14605713]
[333.26339722 -87.16557312]
[320.56253052 -79.18509674]
[307.86166382 -71.20461273]
[295.57440186 -62.60096741]
[283.73123169 -53.39554596]
[271.88809204 -44.19012451]
[260.04495239 -34.98470306]
[248.20178223 -25.77927971]
[236.65124512 -16.20927811]
[225.40452576 -6.28398991]
[214.21989441 3.71120882]
[203.09777832 13.77593040]
[191.97566223 23.84065247]
[180.85356140 33.90537262]
[169.73144531 43.97009277]
[158.60932922 54.03481674]
[147.48721313 64.09954071]
[136.36511230 74.16426086]
[125.24299622 84.22898102]
[114.12088013 94.29370117]
[115.31075287 98.33085632]
[115.35637665 102.58643341]
[114.22875214 106.73884583]
[111.98849487 110.46733856]
[108.78312683 113.47681427]
[104.83754730 115.52105713]
[105.02454376 130.51988220]
[105.21153259 145.51872253]
[105.39852905 160.51756287]
[105.58552551 175.51638794]
[105.77252197 190.51522827]
[116.42235565 198.73524475]
[120.34436798 211.40061951]
[116.32327271 223.83070374]
[106.03696442 231.56538391]
[106.03696442 246.56538391]
[106.03696442 261.56539917]
[106.03696442 276.56539917]
[113.77426147 290.36557007]
[106.03696442 303.09283447]
[106.03696442 318.09283447]
[106.03696442 333.09283447]
[106.03696442 348.09283447]
[106.03696442 363.09283447]
[118.23932648 354.36917114]
[132.70230103 358.34689331]
[138.72740173 372.08364868]
[131.85778809 385.41812134]
[117.17498779 388.48663330]
[105.54040527 379.01992798]
[104.60601807 393.99081421]
[103.67162323 408.96166992]
[113.85150146 420.75183105]
[112.69063568 435.92111206]
[101.38778687 445.55340576]
[100.45339203 460.52429199]
[99.51899719 475.49514771]
[98.58460999 490.46603394]
[97.65021515 505.43688965]
[96.71582031 520.40777588]
[95.96813202 535.38909912]
[95.40726471 550.37860107]
[94.84639740 565.36816406]
[94.28553009 580.35766602]
[101.50141907 594.43750000]
[93.29364014 606.86651611]
[92.73277283 621.85607910]
[92.17190552 636.84558105]
[103.10392761 648.25897217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 250]
[6 249]
[7 248]
[9 246]
[10 245]
[11 244]
[12 243]
[15 242]
[16 241]
[17 240]
[18 239]
[19 238]
[20 237]
[23 234]
[24 233]
[25 232]
[26 226]
[27 225]
[28 224]
[29 223]
[30 222]
[32 220]
[33 219]
[34 218]
[35 217]
[38 213]
[39 212]
[40 211]
[41 210]
[42 209]
[43 208]
[44 95]
[45 94]
[46 93]
[47 92]
[48 91]
[49 90]
[52 88]
[53 87]
[54 86]
[57 85]
[58 84]
[59 83]
[60 82]
[61 81]
[62 76]
[63 75]
[64 74]
[117 202]
[118 201]
[119 200]
[120 199]
[121 198]
[122 197]
[123 196]
[124 195]
[125 194]
[126 193]
[128 192]
[129 191]
[135 190]
[136 189]
[137 188]
[138 187]
[139 186]
[148 185]
[149 184]
[150 183]
[151 182]
[153 180]
[154 179]
[155 178]
[160 172]
[161 171]
[162 170]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
