%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCCACACCAUGGCGAGCGUGGUGGUGAAGACGAUCUGGCAGUCCAAAGAGAUCCAUGAGGCCGGGGACACCCCCACGGGGGUGGAGAGCUGCUCCCAGCUAGUCCCAG\
) } def
/len { sequence length } bind def

/coor [
[166.60914612 185.79107666]
[156.61395264 174.60644531]
[146.61874390 163.42181396]
[136.62355042 152.23718262]
[126.62834930 141.05253601]
[116.63315582 129.86790466]
[94.74670410 133.78100586]
[75.08215332 123.40630341]
[62.16246796 131.02743530]
[49.24277878 138.64855957]
[36.32308960 146.26968384]
[23.40339851 153.89082336]
[10.48370934 161.51194763]
[2.52857804 175.18771362]
[-12.36471367 174.98989868]
[-25.28440285 182.61102295]
[-32.87533569 197.14752197]
[-49.26900482 197.57139587]
[-57.60100937 183.44660950]
[-49.30009460 169.30351257]
[-32.90553284 169.69132996]
[-19.98584366 162.07020569]
[-12.95481491 148.93955994]
[2.86257887 148.59225464]
[15.78226852 140.97113037]
[28.70195770 133.35000610]
[41.62164688 125.72887421]
[54.54133606 118.10774231]
[67.46102905 110.48661041]
[64.45816803 102.97710419]
[63.24226761 94.64628601]
[64.02870941 85.93074799]
[66.92404938 77.32138824]
[71.91284180 69.33590698]
[78.85148621 62.48827744]
[70.51793671 50.01623535]
[62.18438339 37.54418945]
[53.85083008 25.07214546]
[45.51727676 12.60010147]
[30.41131210 14.78473854]
[15.85601330 10.19060802]
[4.74134398 -0.27012199]
[-0.72587031 -14.52046680]
[0.53988957 -29.73100853]
[8.28730679 -42.88168716]
[20.97812462 -51.36141968]
[36.09257507 -53.48655319]
[50.62966919 -48.83514023]
[61.70305634 -38.33072281]
[67.11411285 -24.05895805]
[65.78845978 -8.85351753]
[57.98931885 4.26654768]
[66.32287598 16.73859215]
[74.65642548 29.21063614]
[82.98998260 41.68267822]
[91.32353210 54.15472412]
[98.74989319 55.20315170]
[97.41592407 40.26258469]
[91.84883118 26.33392906]
[98.45792389 12.86841869]
[112.88195801 8.75173092]
[125.60275269 16.70040321]
[128.22605896 31.46923065]
[119.02051544 43.31264496]
[113.60260773 57.30000687]
[121.02896881 58.34843445]
[132.48953247 48.67085648]
[143.95008850 38.99327469]
[155.41064453 29.31569481]
[160.45938110 13.71305466]
[176.55041504 10.54912663]
[187.13069153 23.07868767]
[181.31611633 38.41239929]
[165.08822632 40.77625656]
[153.62767029 50.45383453]
[142.16711426 60.13141632]
[130.70654297 69.80899811]
[138.17797852 87.72074890]
[136.70272827 105.71866608]
[127.81778717 119.87271118]
[137.81298828 131.05734253]
[147.80818176 142.24197388]
[157.80337524 153.42660522]
[167.79858398 164.61123657]
[177.79377747 175.79586792]
[188.40037537 186.40248108]
[199.58500671 196.39767456]
[210.76963806 206.39286804]
[228.82328796 209.66218567]
[233.79327393 226.42842102]
[245.25384521 236.10600281]
[256.71438599 245.78358459]
[268.17495728 255.46116638]
[279.63552856 265.13873291]
[295.86340332 267.50259399]
[301.67797852 282.83630371]
[291.09771729 295.36587524]
[275.00668335 292.20193481]
[269.95794678 276.59930420]
[258.49737549 266.92172241]
[247.03681946 257.24414062]
[235.57626343 247.56655884]
[224.11570740 237.88897705]
[211.94842529 238.57272339]
[202.30586243 230.47892761]
[200.77444458 217.57749939]
[189.58981323 207.58230591]
[178.40518188 197.58711243]
[175.46597290 197.69831848]
[172.30537415 196.56587219]
[169.43077087 194.09899902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 85]
[2 84]
[3 83]
[4 82]
[5 81]
[6 80]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[15 22]
[16 21]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[66 77]
[67 76]
[68 75]
[69 74]
[86 108]
[87 107]
[88 106]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
