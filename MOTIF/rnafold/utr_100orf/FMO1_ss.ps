%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUUUCCUUCUCACAUUCACACACCAGAGACCCGCUACAGAAGAUUCAAACUGAGCAAAUCGCCUAAUCUUCCAAAUUCUUUUUCCUGGCUUGUUAGAGCAGCCAAGGGUGGGGUGGAGCUUGUGAAUAAAAAGCCUGCUUCAUCUUCCUCAUGCAGGAGAACAUGGCCAAGCGAGUUGCCAUUGUGGGAGCUGGGGUCAGCGGCCUGGCCUCCAUCAAGUGCUGUCUGGAAGAAGGACUGGAGCCCACCU\
) } def
/len { sequence length } bind def

/coor [
[104.86441040 568.94055176]
[102.73833466 554.09197998]
[108.01682281 540.05139160]
[119.39830780 530.28094482]
[134.07633972 527.18981934]
[148.43162537 531.54016113]
[158.92384338 542.25830078]
[157.62677002 527.31451416]
[156.32969666 512.37066650]
[155.03263855 497.42684937]
[153.73556519 482.48303223]
[152.43849182 467.53921509]
[151.14143372 452.59539795]
[139.60838318 443.23995972]
[138.08009338 428.10327148]
[147.97114563 416.06979370]
[146.67407227 401.12597656]
[135.14102173 391.77053833]
[133.61273193 376.63385010]
[143.50378418 364.60037231]
[142.20671082 349.65655518]
[140.81726074 334.72103882]
[139.33546448 319.79440308]
[137.85366821 304.86779785]
[140.61619568 277.31515503]
[157.53083801 266.33749390]
[151.91937256 252.42666626]
[146.30792236 238.51582336]
[140.69647217 224.60496521]
[128.26409912 221.28027344]
[119.88494873 211.25782776]
[118.78332520 198.04557800]
[125.58343506 186.43830872]
[120.14446259 172.45912170]
[114.70549011 158.47993469]
[109.26651764 144.50074768]
[103.82754517 130.52156067]
[92.77725220 131.30236816]
[81.69488525 128.04354858]
[72.06456757 120.84140778]
[65.28905487 110.33727264]
[62.49064636 97.66845703]
[47.62926102 99.70296478]
[32.76787567 101.73747253]
[17.90648842 103.77198029]
[3.04510379 105.80648804]
[-11.81628132 107.84099579]
[-26.67766762 109.87550354]
[-31.06781387 121.54634094]
[-39.94412613 130.20085144]
[-51.58613586 134.24699402]
[-63.77323532 132.97775269]
[-74.20817566 126.69385529]
[-80.95010376 116.63547516]
[-95.85726929 118.30177307]
[-110.76442719 119.96807098]
[-121.86126709 131.55426025]
[-137.82479858 129.95883179]
[-146.40914917 116.40567780]
[-141.02917480 101.29159546]
[-125.81189728 96.21083832]
[-112.43072510 105.06091309]
[-97.52356720 103.39461517]
[-82.61640167 101.72831726]
[-74.58895874 85.97415161]
[-58.56103897 78.14226532]
[-40.88991165 81.54999542]
[-28.71217537 95.01411438]
[-13.85079002 92.97960663]
[1.01059556 90.94509888]
[15.87198067 88.91059113]
[30.73336601 86.87608337]
[45.59475327 84.84157562]
[60.45613861 82.80706787]
[46.43864822 77.46759033]
[31.78910255 74.24411774]
[22.37923622 62.56274414]
[22.34898376 47.56277466]
[31.71165466 35.84354401]
[46.34807968 32.56100464]
[59.81886673 39.15933228]
[66.19746399 52.73567581]
[74.50019073 65.22826385]
[73.20312500 50.28444672]
[71.90605927 35.34062958]
[70.60898590 20.39681435]
[69.31192017 5.45300007]
[68.01485443 -9.49081516]
[66.71778870 -24.43463135]
[65.42071533 -39.37844467]
[59.29707718 -53.07154846]
[49.02346420 -64.00099945]
[38.74984741 -74.93044281]
[28.47623253 -85.85989380]
[12.62708092 -90.07135773]
[8.61153316 -105.97127533]
[20.56044197 -117.20317841]
[36.18179321 -112.21263885]
[39.40568161 -96.13350677]
[49.67929459 -85.20405579]
[59.95291138 -74.27461243]
[70.22652435 -63.34516144]
[77.24922180 -65.97798920]
[67.90103149 -77.70878601]
[76.16895294 -90.22443390]
[90.62696838 -86.22869873]
[91.29460144 -71.24365234]
[98.31729889 -73.87648010]
[98.87374878 -88.86615753]
[99.43020630 -103.85583496]
[99.98665619 -118.84550476]
[100.54311371 -133.83517456]
[101.09956360 -148.82485962]
[101.65601349 -163.81452942]
[102.21247101 -178.80421448]
[102.76892090 -193.79388428]
[103.32537842 -208.78355408]
[103.88182831 -223.77323914]
[104.43828583 -238.76290894]
[101.63529968 -247.42704773]
[105.09545898 -253.93420410]
[105.83726501 -268.91586304]
[106.57907104 -283.89749146]
[107.32087708 -298.87915039]
[94.71138000 -307.76757812]
[88.93023682 -322.07080078]
[91.82216644 -337.22467041]
[102.46438599 -348.39367676]
[117.46099091 -352.01382446]
[132.02661133 -346.92993164]
[141.51342773 -334.76425171]
[142.89422607 -319.39880371]
[135.72839355 -305.73666382]
[122.30252075 -298.13732910]
[121.56071472 -283.15570068]
[120.81890869 -268.17404175]
[120.07710266 -253.19239807]
[119.42796326 -238.20645142]
[118.87150574 -223.21678162]
[118.31505585 -208.22709656]
[117.75859833 -193.23742676]
[117.20214844 -178.24775696]
[116.64569092 -163.25807190]
[116.08924103 -148.26840210]
[115.53278351 -133.27873230]
[114.97633362 -118.28905487]
[114.41987610 -103.29937744]
[113.86342621 -88.30970001]
[113.30696869 -73.32003021]
[126.71810150 -66.60128021]
[134.74388123 -53.92899323]
[135.08547974 -38.93288422]
[127.64505005 -25.90828705]
[114.55376434 -18.58584213]
[99.56134796 -19.06291389]
[86.96208954 -27.20285606]
[80.36453247 -40.67551422]
[81.66159821 -25.73169899]
[82.95867157 -10.78788376]
[84.25573730 4.15593195]
[85.55280304 19.09974670]
[86.84987640 34.04356384]
[88.14694214 48.98737717]
[89.44400787 63.93119431]
[111.21392822 67.72124481]
[125.08259583 82.19326782]
[139.06178284 76.75430298]
[153.04096985 71.31533051]
[167.02014160 65.87635803]
[180.99932861 60.43738174]
[187.83917236 54.42567444]
[195.18519592 55.01876450]
[209.23057556 49.75310516]
[217.15269470 35.80249405]
[233.02093506 33.44061279]
[244.66255188 44.47929764]
[243.14707947 60.45061111]
[229.63706970 69.10272980]
[214.49624634 63.79848862]
[200.45085144 69.06414795]
[186.43830872 74.41656494]
[172.45912170 79.85553741]
[158.47993469 85.29450989]
[144.50074768 90.73348236]
[130.52156067 96.17245483]
[128.15768433 112.38390350]
[117.80673218 125.08259583]
[123.24569702 139.06178284]
[128.68467712 153.04096985]
[134.12364197 167.02014160]
[139.56262207 180.99932861]
[155.71115112 187.75979614]
[161.84028625 203.79682922]
[154.60731506 218.99351501]
[160.21876526 232.90435791]
[165.83023071 246.81521606]
[171.44168091 260.72604370]
[182.11366272 271.26684570]
[196.09284973 276.70584106]
[210.07203674 282.14480591]
[224.05122375 287.58377075]
[238.03041077 293.02273560]
[252.00958252 298.46173096]
[268.12725830 295.43637085]
[278.59933472 308.05648804]
[272.65301514 323.33959961]
[256.40539551 325.56375122]
[246.57061768 312.44091797]
[232.59143066 307.00192261]
[218.61224365 301.56295776]
[204.63307190 296.12399292]
[190.65388489 290.68502808]
[176.67469788 285.24603271]
[170.70109558 289.78103638]
[180.36140442 301.25616455]
[193.95549011 307.59655762]
[195.54960632 322.51162720]
[183.60261536 331.58187866]
[169.66452026 326.03845215]
[167.21049500 311.23992920]
[158.75389099 298.85101318]
[152.78028870 303.38598633]
[154.26208496 318.31262207]
[155.74388123 333.23925781]
[159.69612122 341.44314575]
[157.15052795 348.35949707]
[158.44760132 363.30328369]
[170.26403809 373.45266724]
[171.36657715 388.62628174]
[161.61788940 399.82891846]
[162.91496277 414.77273560]
[174.73139954 424.92208862]
[175.83392334 440.09570312]
[166.08525085 451.29833984]
[167.38230896 466.24215698]
[168.67938232 481.18597412]
[169.97644043 496.12979126]
[171.27351379 511.07360840]
[172.57058716 526.01739502]
[173.86764526 540.96124268]
[180.45231628 551.28759766]
[176.82063293 561.58197021]
[179.76972961 576.28924561]
[182.71882629 590.99645996]
[191.76123047 605.33770752]
[180.48364258 617.99676514]
[165.19734192 610.66430664]
[168.01159668 593.94555664]
[165.06250000 579.23834229]
[162.11340332 564.53106689]
[155.05014038 577.76397705]
[142.49241638 585.96789551]
[127.53672028 587.11981201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 240]
[8 239]
[9 238]
[10 237]
[11 236]
[12 235]
[13 234]
[16 231]
[17 230]
[20 227]
[21 226]
[22 224]
[23 223]
[24 222]
[26 197]
[27 196]
[28 195]
[29 194]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[42 74]
[43 73]
[44 72]
[45 71]
[46 70]
[47 69]
[48 68]
[54 64]
[55 63]
[56 62]
[83 164]
[84 163]
[85 162]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[91 102]
[92 101]
[93 100]
[94 99]
[108 149]
[109 148]
[110 147]
[111 146]
[112 145]
[113 144]
[114 143]
[115 142]
[116 141]
[117 140]
[118 139]
[119 138]
[121 137]
[122 136]
[123 135]
[124 134]
[166 185]
[167 184]
[168 183]
[169 182]
[170 181]
[172 180]
[173 179]
[198 213]
[199 212]
[200 211]
[201 210]
[202 209]
[203 208]
[242 250]
[243 249]
[244 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
