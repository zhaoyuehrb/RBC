%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUAGUCCCAGAGAUAGAAAAAAGUAGAGGUAGGAGGGCGCGGCGGCUCACGCCUGUAAUCCCAGCACUUUGGAAGGCCGAGGCGGGCGGAUCACGAGAGGGUCACCAUGAAGUUCAAUCCCUUCGUUACCUCGGACCGCAGUAAAAACCGCAAACGUCACUUCAAUGCCCCCUCACACGUGCGCAGGAAGAUCAUGUCAUCCCCGC\
) } def
/len { sequence length } bind def

/coor [
[54.04640961 345.66479492]
[47.90416718 359.34957886]
[39.31813812 371.64916992]
[28.58943748 382.13226318]
[16.09432030 390.43118286]
[2.27099228 396.25488281]
[-12.39575863 399.39913940]
[-27.39156723 399.75369263]
[-42.19052887 397.30609131]
[-56.27364349 392.14218140]
[-69.14700317 384.44305420]
[-80.35915375 374.47872925]
[-89.51686859 362.59866333]
[-96.29899597 349.21948242]
[-100.46767426 334.81036377]
[-101.87671661 319.87670898]
[-100.47670746 304.94216919]
[-96.31673431 290.53057861]
[-89.54270172 277.14727783]
[-80.39216614 265.26165771]
[-69.18605042 255.29055786]
[-56.31733704 247.58366394]
[-42.23735046 242.41123962]
[-27.43987274 239.95469666]
[-12.44385147 240.30017090]
[2.22479773 243.43557739]
[16.05164337 249.25093079]
[28.55177689 257.54229736]
[39.28681183 268.01889038]
[47.88027573 280.31329346]
[54.02836227 293.98721313]
[54.47924042 278.99398804]
[44.11332703 268.35992432]
[44.35699844 253.14823914]
[55.58127213 242.34762573]
[56.03215408 227.35440063]
[56.48303223 212.36117554]
[56.93391037 197.36796570]
[57.38478851 182.37474060]
[50.03354645 169.42063904]
[58.18216324 155.85928345]
[58.63304138 140.86605835]
[47.67385101 130.62417603]
[32.74538803 132.08741760]
[17.81692886 133.55067444]
[2.88846970 135.01391602]
[-8.36503696 146.44799805]
[-24.30537033 144.63543701]
[-32.70446777 130.96669006]
[-27.11926460 115.92723846]
[-11.83424854 111.05406952]
[1.42522490 120.08545685]
[16.35368538 118.62220764]
[31.28214455 117.15896606]
[46.21060562 115.69571686]
[47.66687012 108.33846283]
[32.95235062 105.42592621]
[18.23782730 102.51339722]
[6.95073843 92.63404083]
[21.15035820 87.79887390]
[35.86487961 90.71140289]
[50.57940292 93.62393951]
[52.03566742 86.26667786]
[38.79027939 79.22681427]
[25.54488945 72.18695068]
[12.29949951 65.14709473]
[-4.06166506 66.26258850]
[-12.98246861 52.50209427]
[-5.28595400 38.02122116]
[11.11036491 37.71665192]
[19.33936119 51.90170288]
[32.58475113 58.94156265]
[45.83013916 65.98142242]
[59.07553101 73.02128601]
[75.38024139 63.35651398]
[92.38062286 61.47095490]
[106.87294006 66.28915405]
[113.00144196 52.59823227]
[119.12994385 38.90730286]
[110.24777985 26.45521736]
[108.80049896 11.32901001]
[115.07709503 -2.39945340]
[127.30084229 -11.08484650]
[142.13087463 -12.47621059]
[148.25936890 -26.16713715]
[154.38786316 -39.85806274]
[160.51637268 -53.54899216]
[165.81111145 -67.58343506]
[170.25296021 -81.91068268]
[174.69479370 -96.23793793]
[179.13664246 -110.56518555]
[178.68888855 -119.69022369]
[183.75442505 -125.07349396]
[188.41111755 -139.33235168]
[188.10057068 -148.46310425]
[193.24644470 -153.76962280]
[198.11694336 -167.95687866]
[202.98742676 -182.14413452]
[207.85792542 -196.33139038]
[195.55516052 -214.28717041]
[204.27200317 -238.18702698]
[204.27200317 -253.18702698]
[195.60830688 -267.11083984]
[203.57243347 -281.44625854]
[219.97157288 -281.44625854]
[227.93571472 -267.11083984]
[219.27200317 -253.18702698]
[219.27200317 -238.18702698]
[233.94108582 -235.05364990]
[240.06958008 -248.74456787]
[246.19808960 -262.43548584]
[252.32658386 -276.12643433]
[258.45507812 -289.81735229]
[264.58358765 -303.50827026]
[256.73553467 -316.89437866]
[258.28796387 -332.33358765]
[268.64398193 -343.88925171]
[283.82144165 -347.11795044]
[297.98431396 -340.77816772]
[305.68667603 -327.30773926]
[303.96685791 -311.88626099]
[293.48611450 -300.44363403]
[278.27450562 -297.37979126]
[272.14602661 -283.68884277]
[266.01751709 -269.99792480]
[259.88900757 -256.30700684]
[253.76051331 -242.61607361]
[247.63201904 -228.92514038]
[249.83151245 -213.84202576]
[244.46775818 -200.72030640]
[234.01716614 -192.80415344]
[222.04518127 -191.46090698]
[217.17468262 -177.27365112]
[212.30419922 -163.08638000]
[207.43370056 -148.89912415]
[202.66998291 -134.67565918]
[198.01329041 -120.41680145]
[193.46388245 -106.12333679]
[189.02204895 -91.79608917]
[184.58020020 -77.46884155]
[180.13836670 -63.14159393]
[192.92083740 -70.99068451]
[207.88423157 -69.94332123]
[219.44863892 -60.39008331]
[223.30166626 -45.89338684]
[218.00651550 -31.85909653]
[205.53776550 -23.52062988]
[190.54502869 -23.98742676]
[178.61914062 -33.08541489]
[174.20729065 -47.42049026]
[168.07879639 -33.72956085]
[161.95030212 -20.03863525]
[155.82179260 -6.34770918]
[164.66305542 5.63968849]
[166.32810974 20.54215622]
[160.27026367 34.36854172]
[148.02471924 43.36539459]
[132.82087708 45.03580475]
[126.69236755 58.72673035]
[120.56386566 72.41765594]
[129.95423889 79.98107147]
[136.49838257 90.75286102]
[139.10595703 103.64233398]
[137.10920715 117.19366455]
[130.38224792 129.75027466]
[119.39654541 139.65666199]
[105.20149231 145.47319031]
[89.32844543 146.17625427]
[73.62626648 141.31694031]
[73.17538452 156.31016541]
[80.49437714 170.33666992]
[72.37800598 182.82562256]
[71.92713165 197.81883240]
[71.47624969 212.81205750]
[71.02537537 227.80528259]
[70.57449341 242.79850769]
[81.12947845 254.25407410]
[80.45864105 269.45291138]
[69.47245789 279.44488525]
[69.02158356 294.43811035]
[72.57308197 299.56423950]
[73.48656464 305.19943237]
[72.01264954 310.16918945]
[77.93466949 323.95068359]
[83.85668945 337.73217773]
[95.52666473 343.22772217]
[100.17498779 354.82949829]
[95.81578827 366.11434937]
[101.52999115 379.98330688]
[107.24418640 393.85226440]
[119.65520477 403.66433716]
[117.34973907 418.37945557]
[123.06394196 432.24841309]
[128.77813721 446.11734009]
[140.40243530 458.45883179]
[131.76118469 473.04531860]
[115.35263062 468.77969360]
[114.90918732 451.83154297]
[109.19498444 437.96261597]
[103.48078156 424.09365845]
[91.47848511 415.27355957]
[93.37523651 399.56646729]
[87.66103363 385.69750977]
[81.94683075 371.82855225]
[67.48763275 361.88494873]
[70.07519531 343.65420532]
[64.15316772 329.87271118]
[58.23115158 316.09121704]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 180]
[32 179]
[35 176]
[36 175]
[37 174]
[38 173]
[39 172]
[41 170]
[42 169]
[43 55]
[44 54]
[45 53]
[46 52]
[63 74]
[64 73]
[65 72]
[66 71]
[77 160]
[78 159]
[79 158]
[84 153]
[85 152]
[86 151]
[87 150]
[88 141]
[89 140]
[90 139]
[91 138]
[93 137]
[94 136]
[96 135]
[97 134]
[98 133]
[99 132]
[101 108]
[102 107]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[183 208]
[184 207]
[185 206]
[188 204]
[189 203]
[190 202]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
