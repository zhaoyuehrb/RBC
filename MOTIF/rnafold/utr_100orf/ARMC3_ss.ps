%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCAACGAGGCACAACAAGGGACUGGGGGUUCGUCUGCUGGGUUUGCGGAGCAGCUAGCUACUCGGCGGGAUCUCCCGGCAGGAUGGGUAAAAAGAUAAAGAAGGAAGUAGAGCCUCCUCCUAAGGAUGUGUUUGACCCAUUAAUGAUUGAAAGCAAAAAAGCAGCAACUGUGGUGUUAAUGC\
) } def
/len { sequence length } bind def

/coor [
[62.22268677 345.51879883]
[49.03034210 334.86993408]
[55.61103821 319.24526978]
[56.12038803 304.25390625]
[56.62973404 289.26254272]
[47.19921112 282.79412842]
[42.01796341 272.46508789]
[42.48144150 260.79858398]
[48.59001541 250.70774841]
[58.92002869 244.76837158]
[59.93814087 229.80296326]
[60.95625305 214.83755493]
[61.97436523 199.87214661]
[62.99247742 184.90673828]
[56.13687134 171.68365479]
[64.79300690 158.44047546]
[65.81111145 143.47506714]
[66.82922363 128.50965881]
[60.83016586 142.25779724]
[46.63371658 147.10144043]
[33.48254395 139.88710022]
[29.93877602 125.31172180]
[38.30960083 112.86466217]
[53.14472961 110.64952087]
[38.42985153 107.73878479]
[23.71497536 104.82804108]
[9.00009727 101.91730499]
[-5.71477890 99.00656891]
[-20.42965508 96.09582520]
[-35.14453125 93.18508911]
[-43.56705856 101.61398315]
[-54.89970779 104.88668060]
[-66.28501129 102.29873657]
[-74.91022491 94.60846710]
[-78.70217133 83.81975555]
[-93.30972290 80.41102600]
[-107.91727448 77.00229645]
[-122.52482605 73.59356689]
[-137.13238525 70.18484497]
[-151.73992920 66.77611542]
[-166.34748840 63.36738586]
[-180.95503235 59.95865631]
[-195.56259155 56.54993057]
[-210.17013550 53.14120102]
[-221.53103638 59.27947998]
[-233.63854980 56.12384033]
[-240.12721252 45.89786530]
[-254.67477417 42.24158478]
[-265.30703735 53.32538986]
[-280.06118774 57.59271240]
[-294.96847534 53.89565659]
[-306.01892090 43.22871399]
[-310.23995972 28.46123886]
[-306.49618530 13.56560898]
[-295.79467773 2.54867220]
[-281.01403809 -1.62607002]
[-266.13021851 2.16436696]
[-255.14688110 12.90037441]
[-251.01849365 27.69401932]
[-236.47093201 31.35030365]
[-219.88882446 25.63544846]
[-206.76141357 38.53364944]
[-192.15385437 41.94237900]
[-177.54631042 45.35110474]
[-162.93875122 48.75983429]
[-148.33120728 52.16856384]
[-133.72364807 55.57728958]
[-119.11609650 58.98601913]
[-104.50854492 62.39474487]
[-89.90099335 65.80347443]
[-75.29344177 69.21220398]
[-60.37844849 58.62665176]
[-42.14545059 62.34572983]
[-32.23379517 78.47021484]
[-17.51891708 81.38095093]
[-2.80404019 84.29168701]
[11.91083622 87.20243073]
[26.62571335 90.11316681]
[41.34059143 93.02390289]
[56.05546570 95.93464661]
[105.94307709 66.50807190]
[115.94844818 55.33253860]
[119.29515839 37.23579407]
[136.15403748 32.39807510]
[145.96820068 21.05425072]
[155.78236389 9.71042824]
[165.59651184 -1.63339412]
[175.41067505 -12.97721672]
[185.22483826 -24.32103920]
[195.03898621 -35.66485977]
[194.89192200 -48.57713699]
[203.31878662 -57.82579803]
[215.38951111 -58.81109619]
[225.39488220 -69.98663330]
[235.40025330 -81.16217041]
[238.84074402 -96.60475922]
[253.09471130 -100.92605591]
[263.10006714 -112.10159302]
[273.10543823 -123.27713013]
[276.02941895 -145.48271179]
[296.79910278 -151.54295349]
[306.02285767 -163.37182617]
[308.40725708 -179.01232910]
[322.33505249 -184.29113770]
[331.55880737 -196.11999512]
[340.78259277 -207.94886780]
[350.00634766 -219.77774048]
[352.39074707 -235.41824341]
[366.31854248 -240.69705200]
[375.54232788 -252.52590942]
[380.51397705 -268.73452759]
[397.46545410 -268.44412231]
[401.87902832 -252.07475281]
[387.37118530 -243.30215454]
[378.14743042 -231.47328186]
[376.42276001 -216.67886353]
[361.83523560 -210.55397034]
[352.61145020 -198.72509766]
[343.38769531 -186.89624023]
[334.16390991 -175.06736755]
[332.43927002 -160.27294922]
[317.85171509 -154.14805603]
[308.62796021 -142.31918335]
[311.25494385 -134.83905029]
[310.69177246 -126.83672333]
[306.95648193 -119.63111115]
[300.59600830 -114.43939209]
[292.60717773 -112.17159271]
[284.28097534 -113.27175903]
[274.27560425 -102.09622192]
[264.27023315 -90.92069244]
[261.54541016 -76.27745056]
[246.57579041 -71.15679932]
[236.57041931 -59.98126221]
[226.56504822 -48.80572891]
[223.90788269 -31.46891403]
[206.38281250 -25.85070419]
[196.56864929 -14.50688076]
[186.75450134 -3.16305876]
[176.94033813 8.18076324]
[167.12617493 19.52458572]
[157.31202698 30.86840820]
[147.49786377 42.21223068]
[148.05374146 54.31034088]
[139.95036316 63.84369659]
[127.12398529 65.33790588]
[117.11861420 76.51344299]
[117.62767029 83.99614716]
[128.69319153 73.86924744]
[143.50999451 76.20642853]
[150.92098999 89.24779510]
[145.34567261 103.17316437]
[130.98228455 107.49670410]
[118.64578247 98.96155548]
[119.15483856 106.44425964]
[130.58157349 116.16174316]
[146.31230164 114.63865662]
[158.45932007 124.74932861]
[159.81600952 140.49528503]
[149.57746887 152.53471375]
[133.81805420 153.72485352]
[121.88755035 143.35960388]
[120.86408997 127.58848572]
[109.43734741 117.87100220]
[102.52667236 120.78519440]
[108.35505676 134.60655212]
[114.18322754 148.42799377]
[100.36168671 154.25595093]
[94.53369904 140.43493652]
[88.70531464 126.61357880]
[81.79463196 129.52777100]
[80.77651978 144.49317932]
[79.75841522 159.45858765]
[86.54119110 173.75209045]
[77.95788574 185.92485046]
[76.93977356 200.89025879]
[75.92166138 215.85566711]
[74.90354919 230.82107544]
[73.88543701 245.78648376]
[86.87570190 259.55212402]
[85.72272491 278.12481689]
[71.62108612 289.77191162]
[71.11173248 304.76324463]
[70.60238647 319.75460815]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 184]
[4 183]
[5 182]
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[16 173]
[17 172]
[18 171]
[24 80]
[25 79]
[26 78]
[27 77]
[28 76]
[29 75]
[30 74]
[35 71]
[36 70]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[47 60]
[48 59]
[81 147]
[82 146]
[84 143]
[85 142]
[86 141]
[87 140]
[88 139]
[89 138]
[90 137]
[93 135]
[94 134]
[95 133]
[97 131]
[98 130]
[99 129]
[101 123]
[102 122]
[104 120]
[105 119]
[106 118]
[107 117]
[109 115]
[110 114]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
