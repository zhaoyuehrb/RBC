%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUAUAACAGCACUCCCAAAGAACUGGGUACUCAACACUGAGCAGAUCUGUUCUUUGAGCUAAAAACCAUGUGCUGUACCAAGAGUUUGCUCCUGGCUGCUUUGAUGUCAGUGCUGCUACUCCACCUCUGCGGCGAAUCAGAAGCAGCAAGCAACUUUGACUGCUGUC\
) } def
/len { sequence length } bind def

/coor [
[110.84427643 268.15713501]
[101.54790497 280.38305664]
[87.37786102 286.30804443]
[72.14580536 284.33828735]
[59.94908142 275.00363159]
[54.06855392 260.81509399]
[56.08605194 245.58926392]
[65.45887756 233.42187500]
[79.66579437 227.58584595]
[81.58952332 212.70971680]
[83.51325989 197.83358765]
[85.43699646 182.95745850]
[87.36073303 168.08132935]
[89.28446960 153.20520020]
[83.24332428 139.59072876]
[92.68658447 126.89681244]
[94.61032104 112.02068329]
[87.79135132 116.23435974]
[79.05157471 117.74149323]
[64.19374847 119.80179596]
[49.33591461 121.86209869]
[34.47808456 123.92240143]
[19.62025261 125.98270416]
[4.76242161 128.04301453]
[-10.09540939 130.10331726]
[-24.95324135 132.16362000]
[-33.06001663 136.45678711]
[-40.10266876 134.12269592]
[-54.99584198 135.90969849]
[-69.88901520 137.69670105]
[-84.78218842 139.48370361]
[-100.30926514 152.30039978]
[-117.76100159 144.02572632]
[-132.57847595 146.35864258]
[-147.39595032 148.69154358]
[-162.21342468 151.02445984]
[-174.62034607 161.74826050]
[-190.01998901 156.11059570]
[-192.57049561 139.91099548]
[-179.64814758 129.81422424]
[-164.54632568 136.20698547]
[-149.72885132 133.87406921]
[-134.91137695 131.54116821]
[-120.09390259 129.20825195]
[-114.81822205 120.40303802]
[-105.35975647 115.87889099]
[-94.75767517 117.35852051]
[-86.56919098 124.59053802]
[-71.67601776 122.80352783]
[-56.78284836 121.01652527]
[-41.88967514 119.22952271]
[-27.01354408 117.30578613]
[-12.15571308 115.24548340]
[2.70211816 113.18518066]
[17.55994987 111.12487793]
[32.41778183 109.06457520]
[47.27561188 107.00426483]
[62.13344193 104.94396210]
[76.99127197 102.88365936]
[82.89026642 89.09229279]
[74.11814117 76.92472076]
[65.34600830 64.75715637]
[50.32736206 67.47799683]
[35.61779022 63.40477371]
[24.13788223 53.34621811]
[18.16699028 39.29946899]
[18.89063454 24.05351448]
[26.16513824 10.63545418]
[38.54613876 1.70945048]
[53.57538605 -0.95223033]
[68.26880646 3.17888999]
[79.70901489 13.28257465]
[85.62454224 27.35272980]
[84.84086609 42.59571457]
[77.51358032 55.98502350]
[86.28570557 68.15259552]
[95.05783844 80.32015991]
[90.97135925 65.88753510]
[97.61785126 52.44045258]
[111.56571198 46.92166138]
[125.61363983 52.18053436]
[132.50865173 65.50189972]
[128.69084167 80.00791168]
[116.12934113 88.20951080]
[130.73553467 84.79497528]
[145.34173584 81.38044739]
[159.94793701 77.96591949]
[174.55412292 74.55138397]
[189.16032410 71.13685608]
[196.83911133 66.11814880]
[204.06617737 67.79637909]
[218.73263550 64.65074921]
[233.39909363 61.50512695]
[237.45048523 52.91590500]
[244.90385437 47.25599289]
[253.99353027 45.70616913]
[262.63867188 48.49193954]
[268.91955566 54.86080933]
[283.73703003 52.52790070]
[298.55450439 50.19499588]
[313.37197876 47.86208725]
[328.18945312 45.52918243]
[343.00692749 43.19627380]
[357.80233765 40.72735596]
[372.57446289 38.12263489]
[387.34658813 35.51791000]
[402.11868286 32.91318893]
[416.89080811 30.30846596]
[424.83441162 25.72038651]
[431.95803833 27.79418945]
[446.77551270 25.46128273]
[450.89074707 22.12765121]
[455.42156982 20.85936165]
[459.50204468 21.46437645]
[462.47146606 23.43153191]
[477.39492798 21.91843033]
[492.31842041 20.40532684]
[507.24191284 18.89222336]
[522.16540527 17.37912178]
[527.31842041 3.01216888]
[538.20074463 -7.69008350]
[552.65161133 -12.60269547]
[567.80194092 -10.75026512]
[580.64349365 -2.50059366]
[588.62658691 10.50834084]
[590.16625977 25.69360542]
[584.95672607 40.04015350]
[574.03234863 50.69947052]
[559.56219482 55.55513763]
[544.41931152 53.64305878]
[531.61035156 45.34288025]
[523.67852783 32.30260849]
[508.75503540 33.81571198]
[493.83154297 35.32881546]
[478.90805054 36.84191895]
[463.98455811 38.35502243]
[449.10842896 40.27875519]
[434.29095459 42.61166382]
[419.49554443 45.08058167]
[404.72341919 47.68530273]
[389.95129395 50.29002762]
[375.17919922 52.89474869]
[360.40707397 55.49947357]
[354.34277344 59.77395248]
[345.33984375 58.01374817]
[330.52236938 60.34665680]
[315.70489502 62.67956161]
[300.88742065 65.01246643]
[286.06994629 67.34537506]
[271.25247192 69.67828369]
[256.45281982 84.03433990]
[236.54472351 76.17158508]
[221.87826538 79.31721497]
[207.21180725 82.46283722]
[192.57485962 85.74305725]
[177.96865845 89.15758514]
[163.36245728 92.57211304]
[148.75627136 95.98664093]
[134.15007019 99.40117645]
[119.54386902 102.81570435]
[109.48645020 113.94441986]
[107.56271362 128.82054138]
[113.46626282 143.49905396]
[104.16059875 155.12892151]
[102.23686218 170.00506592]
[100.31312561 184.88119507]
[98.38938904 199.75732422]
[96.46565247 214.63345337]
[94.54192352 229.50958252]
[106.79692078 238.76757812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 169]
[10 168]
[11 167]
[12 166]
[13 165]
[14 164]
[16 162]
[17 161]
[19 59]
[20 58]
[21 57]
[22 56]
[23 55]
[24 54]
[25 53]
[26 52]
[28 51]
[29 50]
[30 49]
[31 48]
[33 44]
[34 43]
[35 42]
[36 41]
[60 77]
[61 76]
[62 75]
[84 160]
[85 159]
[86 158]
[87 157]
[88 156]
[89 155]
[91 154]
[92 153]
[93 152]
[98 150]
[99 149]
[100 148]
[101 147]
[102 146]
[103 145]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[110 138]
[111 137]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
