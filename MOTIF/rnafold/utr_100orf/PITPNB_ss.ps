%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGCGAUGGUGGCUCGGGGGGGCAGGGAGGCGGGGCCGCGCAGGCGCUGUGAGAGGCGGUAGCGGCGGCGGCGGCGGUGGUAUCGGCGGCAGCUGUGAGGGGGUUCCGGGAAGAUGGUGCUGAUCAAGGAAUUCCGUGUGGUUUUGCCAUGUUCUGUUCAGGAGUAUCAGGUUGGGCAGCUUUACUCUGUUGCAGAAGCUAGUAAGAAUGAGA\
) } def
/len { sequence length } bind def

/coor [
[364.48022461 561.95434570]
[379.08432007 565.37774658]
[391.67364502 573.53289795]
[384.55462646 560.32989502]
[371.70388794 552.79943848]
[371.96469116 536.98040771]
[364.84570312 523.77740479]
[357.72668457 510.57437134]
[350.60769653 497.37133789]
[334.44717407 497.29571533]
[320.44985962 489.03204346]
[312.48532104 474.75479126]
[312.81054688 458.31555176]
[321.43151855 444.20422363]
[314.12124634 431.10614014]
[306.81097412 418.00805664]
[299.50070190 404.90997314]
[288.11511230 404.25097656]
[278.35955811 398.11560059]
[272.71777344 387.92929077]
[272.69171143 376.16513062]
[278.40344238 365.74371338]
[271.47720337 352.43853760]
[264.55096436 339.13339233]
[257.62475586 325.82821655]
[250.69851685 312.52307129]
[243.77227783 299.21789551]
[236.84605408 285.91275024]
[229.91983032 272.60757446]
[212.89559937 263.43444824]
[214.09457397 243.30923462]
[206.78430176 230.21115112]
[199.47402954 217.11306763]
[192.16374207 204.01496887]
[184.85346985 190.91688538]
[177.54319763 177.81880188]
[170.23292542 164.72071838]
[162.92263794 151.62263489]
[155.61236572 138.52455139]
[148.30209351 125.42646027]
[140.99182129 112.32836914]
[133.68153381 99.23028564]
[126.37126160 86.13220215]
[121.72940826 115.21108246]
[96.87461090 123.04253387]
[81.16871643 106.68495178]
[66.18299103 106.03066254]
[51.19290924 105.48536682]
[36.19925308 105.04909515]
[21.20560074 104.61282349]
[6.21194601 104.17655182]
[-8.78170776 103.74028778]
[-21.39076614 113.65951538]
[-36.97393036 109.84579468]
[-43.57713318 95.22467041]
[-36.13496017 81.01222229]
[-20.35641098 78.11102295]
[-8.34543705 88.74662781]
[6.64821672 89.18289948]
[21.64187050 89.61917114]
[36.63552475 90.05544281]
[51.62918091 90.49171448]
[58.40402222 87.54529572]
[66.83728790 91.04493713]
[81.82300568 91.69923401]
[81.08030701 83.82885742]
[83.55412292 75.15462494]
[73.42027283 64.09546661]
[63.28641510 53.03630447]
[53.15256500 41.97714615]
[43.01871109 30.91798592]
[27.99091339 25.97067451]
[25.09702873 11.35990238]
[14.96317577 0.30074185]
[-0.06462146 -4.64656830]
[-2.95850563 -19.25734138]
[-13.09235859 -30.31650162]
[-28.06961250 -26.91393852]
[-42.73682404 -31.47118759]
[-53.14858246 -42.76237106]
[-56.50418472 -57.75021744]
[-51.90098190 -72.40306854]
[-40.57722092 -82.77938843]
[-25.57892990 -86.08798981]
[-10.94057655 -81.43888092]
[-0.59980494 -70.08264923]
[2.66177011 -55.07406235]
[-2.03319860 -40.45035553]
[8.10065460 -29.39119530]
[22.40361023 -25.23490906]
[26.02233696 -9.83311081]
[36.15618896 1.22604883]
[50.45914459 5.38233376]
[54.07786942 20.78413200]
[64.21172333 31.84329224]
[74.34557343 42.90245056]
[84.47943115 53.96161270]
[94.61328125 65.02077484]
[101.95833588 63.50413895]
[106.67621613 49.26540375]
[116.64844513 60.47087860]
[123.99349976 58.95424652]
[128.91825867 44.78573227]
[133.84301758 30.61721992]
[138.76777649 16.44870567]
[143.69253540 2.28019309]
[148.61729431 -11.88831997]
[153.54205322 -26.05683327]
[158.46681213 -40.22534561]
[151.83135986 -54.31820297]
[157.02760315 -68.61693573]
[170.50387573 -74.85597229]
[175.42863464 -89.02448273]
[180.14680481 -103.26312256]
[184.65739441 -117.56887817]
[177.13838196 -131.46995544]
[181.73120117 -146.59217834]
[195.71101379 -153.96379089]
[210.78382874 -149.21134949]
[218.00721741 -135.15438843]
[213.09568787 -120.13266754]
[198.96315002 -113.05828857]
[194.45256042 -98.75253296]
[195.82220459 -94.18082428]
[194.33711243 -88.70015717]
[189.59715271 -84.09972382]
[184.67239380 -69.93121338]
[191.37371826 -56.67874908]
[186.58116150 -42.23970795]
[172.63531494 -35.30058670]
[167.71055603 -21.13207626]
[162.78579712 -6.96356249]
[157.86103821 7.20495081]
[152.93629456 21.37346458]
[148.01153564 35.54197693]
[143.08677673 49.71049118]
[138.16201782 63.87900162]
[139.46934509 78.82192230]
[146.77963257 91.92001343]
[154.08990479 105.01809692]
[161.40017700 118.11618042]
[168.71044922 131.21426392]
[176.02073669 144.31234741]
[183.33100891 157.41044617]
[190.64128113 170.50852966]
[197.95155334 183.60661316]
[205.26184082 196.70469666]
[212.57211304 209.80278015]
[219.88238525 222.90087891]
[227.19265747 235.99896240]
[237.80644226 238.35548401]
[245.22001648 246.00526428]
[247.16061401 256.25637817]
[243.22499084 265.68133545]
[250.15121460 278.98651123]
[257.07745361 292.29165649]
[264.00366211 305.59683228]
[270.92990112 318.90200806]
[277.85614014 332.20715332]
[284.78237915 345.51232910]
[291.70858765 358.81747437]
[309.98315430 363.82403564]
[318.64294434 380.31723022]
[312.59878540 397.59970093]
[319.90905762 410.69778442]
[327.21932983 423.79586792]
[334.52960205 436.89395142]
[348.50573730 436.37106323]
[361.28302002 441.89376831]
[370.39123535 452.33227539]
[374.09625244 465.61254883]
[371.73016357 479.12829590]
[363.81069946 490.25234985]
[370.92971802 503.45535278]
[378.04870605 516.65838623]
[385.16772461 529.86138916]
[398.52767944 538.33618164]
[397.75765991 553.21087646]
[404.87667847 566.41394043]
[413.48031616 578.70117188]
[423.45223999 589.90655518]
[433.42419434 601.11193848]
[443.39611816 612.31732178]
[447.55551147 613.53375244]
[450.78811646 615.78271484]
[452.88333130 618.64685059]
[453.78756714 621.68310547]
[453.59878540 624.47637939]
[462.90234375 636.24261475]
[472.20587158 648.00885010]
[481.50939941 659.77508545]
[496.07623291 668.44940186]
[491.77340698 684.84826660]
[474.82431030 685.25323486]
[469.74316406 669.07861328]
[460.43963623 657.31237793]
[451.13610840 645.54614258]
[441.83255005 633.77990723]
[432.19073486 622.28924561]
[422.21881104 611.08386230]
[412.24685669 599.87854004]
[402.27493286 588.67315674]
[405.63250732 603.29254150]
[403.85452271 618.18676758]
[397.15005493 631.60504150]
[386.30718994 641.97003174]
[372.60052490 648.06323242]
[357.64129639 649.16845703]
[343.18798828 645.15570068]
[330.93960571 636.49676514]
[322.33596802 624.20947266]
[318.38845825 609.73822021]
[319.56106567 594.78411865]
[325.71603394 581.10510254]
[336.12973022 570.30902100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 179]
[4 178]
[6 176]
[7 175]
[8 174]
[9 173]
[14 167]
[15 166]
[16 165]
[17 164]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[40 141]
[41 140]
[42 139]
[43 138]
[46 65]
[47 64]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[67 98]
[68 97]
[69 96]
[70 95]
[71 94]
[73 92]
[74 91]
[76 89]
[77 88]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[112 127]
[113 126]
[114 123]
[115 122]
[180 202]
[181 201]
[182 200]
[183 199]
[188 198]
[189 197]
[190 196]
[191 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
