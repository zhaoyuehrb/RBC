%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGUUGAUAGGGAGAAGCCAACAUCUCCCGCAGGACCCCCUAAUCUUCAGGGCAGCUCCCAGAGCAUGGAUCCCUCCUGAUUCCACUCAGCCCGAUGUUCCUCACAGUCAAGCUGCUCCUGGGCCAGAGAUGCAGUCUGAAGGUGUCAGGGCAAGAGAGUGUAGCCACGCUGAAGAGACUGGUGUCCAGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[31.90834618 432.60211182]
[35.31913757 447.20919800]
[32.96202469 462.02282715]
[25.18598366 474.84988403]
[13.14225864 483.79129028]
[-1.38607049 487.52325439]
[-16.24807739 485.49328613]
[-29.24343300 478.00192261]
[-38.44816971 466.15823364]
[-42.49952316 451.71569824]
[-40.79796600 436.81344604]
[-49.96114349 448.68930054]
[-59.12432480 460.56518555]
[-68.28750610 472.44104004]
[-77.45068359 484.31689453]
[-86.61386108 496.19277954]
[-82.11747742 511.04409790]
[-87.24101257 525.69091797]
[-100.01436615 534.50122070]
[-115.52591705 534.08721924]
[-127.81116486 524.60815430]
[-132.14617920 509.70892334]
[-126.86405182 495.11856079]
[-113.99587250 486.44735718]
[-98.48972321 487.02960205]
[-89.32654572 475.15371704]
[-80.16336823 463.27786255]
[-71.00019073 451.40200806]
[-61.83700943 439.52612305]
[-52.67382812 427.65026855]
[-44.89794159 414.82312012]
[-38.60712814 401.20602417]
[-41.14335632 383.84661865]
[-26.02291107 373.34698486]
[-19.95116234 359.63079834]
[-13.87941170 345.91461182]
[-7.80766153 332.19842529]
[-9.73095894 317.42852783]
[2.93020606 307.94140625]
[9.00195599 294.22521973]
[0.11112805 282.27453613]
[-1.61562860 267.37908936]
[4.38490295 253.52772522]
[16.59308624 244.48023987]
[31.78988457 242.74688721]
[37.86163712 229.03070068]
[43.93338394 215.31449890]
[50.00513458 201.59831238]
[56.07688522 187.88212585]
[62.14863586 174.16593933]
[68.22038269 160.44975281]
[73.96063995 146.59155273]
[79.36607361 132.59936523]
[84.77150726 118.60718536]
[69.49488831 113.23352814]
[57.63392639 97.18699646]
[43.73017502 91.55799866]
[29.82642365 85.92899323]
[15.92267132 80.29998779]
[-1.02787757 79.96053314]
[-5.39407206 63.57844925]
[9.13911152 54.84787750]
[21.55167580 66.39623260]
[35.45542908 72.02523804]
[49.35918045 77.65424347]
[63.26293182 83.28324890]
[67.70044708 77.23689270]
[76.57547760 65.14417267]
[81.01299286 59.09781265]
[71.47387695 47.52174377]
[61.93476486 35.94567490]
[52.39565277 24.36960793]
[42.85654449 12.79354000]
[27.10319519 11.52563000]
[16.92421341 -0.56419528]
[18.35860634 -16.30325699]
[30.55537415 -26.35384941]
[46.27839279 -24.75313377]
[56.19947052 -12.45078564]
[54.43260956 3.25442839]
[63.97172165 14.83049583]
[73.51083374 26.40656471]
[83.04994965 37.98263168]
[92.58905792 49.55870056]
[107.55823517 50.51975250]
[118.49935150 40.25856018]
[129.44046021 29.99736595]
[140.38157654 19.73617172]
[151.32267761 9.47497749]
[156.24847412 -11.37223816]
[176.51124573 -15.25987148]
[186.94648743 -26.03511238]
[197.38172913 -36.81035233]
[207.81695557 -47.58559418]
[218.16551208 -58.44411850]
[228.42671204 -69.38522339]
[238.68789673 -80.32633972]
[237.71139526 -91.17513275]
[242.76895142 -100.57366943]
[251.97416687 -105.52677917]
[262.16635132 -104.60839844]
[272.77294922 -115.21499634]
[283.37954712 -125.82160187]
[268.62109375 -128.50273132]
[261.37109375 -141.63426208]
[266.96514893 -155.55212402]
[281.28631592 -160.01350403]
[293.79501343 -151.73507690]
[295.28570557 -136.80986023]
[306.70739746 -146.53329468]
[318.12908936 -156.25671387]
[323.62164307 -171.09391785]
[338.32830811 -173.45256042]
[349.75000000 -183.17599487]
[361.17169189 -192.89941406]
[372.59338379 -202.62283325]
[384.01507568 -212.34626770]
[395.35845947 -222.16091919]
[406.62283325 -232.06616211]
[417.80746460 -242.06135559]
[428.91165161 -252.14587402]
[440.01580811 -262.23037720]
[447.67620850 -277.35501099]
[464.33038330 -274.18090820]
[465.89065552 -257.29888916]
[450.10034180 -251.12620544]
[438.99615479 -241.04170227]
[427.89199829 -230.95718384]
[425.05044556 -224.12445068]
[416.52807617 -220.80177307]
[405.26370239 -210.89654541]
[402.31301880 -204.11022949]
[393.73849487 -200.92457581]
[382.31680298 -191.20115662]
[370.89511108 -181.47772217]
[359.47341919 -171.75430298]
[348.05172729 -162.03086853]
[343.37612915 -147.88916016]
[327.85250854 -144.83503723]
[316.43081665 -135.11160278]
[305.00915527 -125.38817596]
[293.98614502 -115.21499634]
[283.37954712 -104.60839844]
[272.77294922 -94.00179291]
[269.16238403 -75.01303864]
[249.62901306 -70.06514740]
[239.36781311 -59.12403488]
[229.10662842 -48.18292236]
[226.82119751 -41.14463806]
[218.59220886 -37.15035248]
[208.15696716 -26.37511444]
[197.72172546 -15.59987354]
[187.28648376 -4.82463360]
[188.87532043 3.93283653]
[186.20875549 12.56863499]
[179.76573181 19.10186386]
[170.90591431 21.97326851]
[161.58387756 20.41608810]
[150.64276123 30.67728233]
[139.70166016 40.93847656]
[128.76054382 51.19966888]
[117.81943512 61.46086502]
[135.46357727 92.15443420]
[123.04107666 119.49631500]
[98.76369476 124.01261902]
[93.35826111 138.00480652]
[87.95282745 151.99699402]
[88.76522827 157.17840576]
[87.61611176 161.69750977]
[85.08901978 164.91609192]
[81.93657684 166.52149963]
[75.86482239 180.23768616]
[69.79307556 193.95387268]
[63.72132492 207.67005920]
[57.64957428 221.38626099]
[51.57782364 235.10244751]
[45.50607300 248.81863403]
[54.43972778 261.23382568]
[55.94964218 276.35391235]
[49.72995377 290.10824585]
[37.54228210 298.84420776]
[22.71814537 300.29696655]
[16.64639473 314.01315308]
[18.13540077 329.76412964]
[5.90852785 338.27017212]
[-0.16322225 351.98635864]
[-6.23497248 365.70254517]
[-12.30672264 379.41876221]
[-8.39434719 391.71777344]
[-13.74345589 403.02133179]
[-24.99001884 407.49682617]
[-31.28083038 421.11395264]
[-18.85467720 412.71209717]
[-4.17596388 409.62417603]
[10.58211613 412.30728149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[31 192]
[32 191]
[34 188]
[35 187]
[36 186]
[37 185]
[39 183]
[40 182]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[50 172]
[51 171]
[52 167]
[53 166]
[54 165]
[56 66]
[57 65]
[58 64]
[59 63]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[85 162]
[86 161]
[87 160]
[88 159]
[89 158]
[91 153]
[92 152]
[93 151]
[94 150]
[95 148]
[96 147]
[97 146]
[101 144]
[102 143]
[103 142]
[109 141]
[110 140]
[111 139]
[113 137]
[114 136]
[115 135]
[116 134]
[117 133]
[118 131]
[119 130]
[120 128]
[121 127]
[122 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
