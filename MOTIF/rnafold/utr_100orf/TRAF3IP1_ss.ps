%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGUCCUGGCAGGACCGGGCGGCGGCGGCGGCGGGGCCGGCGGCGGCCAGGGACCCGGGCUUAGGCUCGGCCAGGCCGGCUGAGGGGCGCGGGCGGCCAGCGGGCGGCGGACGCCGUCAUGAACGCGGCGGUGGUGAGGCGGACGCAGGAGGCGCUGGGGAAAGUGAUUCGGAGGCCGCCGCUGACCGAGAAGCUGCUGAGCAAGCCCCCGUUCCGCU\
) } def
/len { sequence length } bind def

/coor [
[67.83623505 736.06823730]
[63.96958923 751.00317383]
[52.62682343 761.46002197]
[37.42736435 764.10198975]
[23.22130585 758.08605957]
[14.54174995 745.33190918]
[14.15831184 729.90930176]
[22.19334602 716.73956299]
[36.08290100 710.02508545]
[37.79277039 695.12286377]
[39.50264359 680.22064209]
[37.14384079 673.22180176]
[41.34480667 665.11840820]
[43.26729965 650.24212646]
[45.18979263 635.36578369]
[39.14751053 621.75183105]
[48.58971405 609.05712891]
[50.51220703 594.18084717]
[52.43470001 579.30456543]
[54.35719299 564.42828369]
[52.09857178 557.39648438]
[56.41482162 549.35388184]
[58.54954147 534.50653076]
[60.68426514 519.65924072]
[47.89859390 504.95352173]
[50.09457779 485.28341675]
[66.30133820 473.39782715]
[67.79824066 458.47271729]
[69.29513550 443.54760742]
[70.79203796 428.62246704]
[72.28894043 413.69735718]
[73.78584290 398.77221680]
[75.28274536 383.84710693]
[61.87900162 369.70245361]
[63.23056412 349.95635986]
[78.91343689 337.38760376]
[79.76976776 322.41207886]
[72.77166748 309.26385498]
[81.28418732 295.92788696]
[82.14051819 280.95236206]
[82.99684906 265.97683716]
[83.85317993 251.00128174]
[84.70951080 236.02575684]
[85.56584930 221.05021667]
[86.42218018 206.07467651]
[87.27851105 191.09913635]
[88.13484192 176.12359619]
[88.99117279 161.14807129]
[89.84751129 146.17253113]
[76.98593903 141.29562378]
[66.07264709 132.92279053]
[58.03150940 121.76284790]
[53.54326248 108.76054382]
[52.98785782 95.01660919]
[56.41231537 81.69454956]
[43.67900085 73.76595306]
[30.94568253 65.83735657]
[18.21236420 57.90876389]
[2.40783763 57.18246460]
[-4.30646038 43.88707352]
[-17.03977776 35.95847702]
[-29.77309608 28.02988052]
[-42.50641251 20.10128593]
[-47.71018600 19.92891121]
[-51.91028976 17.97654915]
[-54.59751511 14.92294598]
[-55.60504532 11.55054379]
[-67.98712158 3.08389521]
[-80.36920166 -5.38275290]
[-92.75128174 -13.84940147]
[-105.13336182 -22.31604958]
[-117.51543427 -30.78269768]
[-129.89752197 -39.24934769]
[-145.86686707 -37.71327972]
[-156.92054749 -49.34064102]
[-154.57913208 -65.21191406]
[-140.63874817 -73.15201569]
[-125.79326630 -67.06998444]
[-121.43087006 -51.63142395]
[-109.04878998 -43.16477585]
[-96.66670990 -34.69812775]
[-84.28462982 -26.23147964]
[-71.90255737 -17.76483154]
[-59.52047348 -9.29818344]
[-47.13839722 -0.83153492]
[-34.57781601 7.36796808]
[-21.84449959 15.29656315]
[-9.11118221 23.22515869]
[3.62213492 31.15375519]
[18.51589012 31.31294632]
[26.14095879 45.17544556]
[38.87427902 53.10404205]
[51.60759354 61.03263855]
[64.34091187 68.96123505]
[75.34372711 59.66337204]
[88.63581085 54.11066818]
[102.98303223 52.81867981]
[117.05329132 55.90736008]
[124.61504364 42.95282745]
[132.17678833 29.99829292]
[139.73854065 17.04375839]
[147.30029297 4.08922434]
[154.86203003 -8.86530972]
[145.79177856 -23.92392921]
[145.60275269 -41.41308975]
[154.25677490 -56.50960541]
[169.28938293 -65.09589386]
[186.51091003 -64.88288879]
[193.69964600 -78.04807281]
[200.88838196 -91.21325684]
[196.66200256 -106.20577240]
[204.13993835 -119.45473480]
[218.45906067 -123.39155579]
[225.64779663 -136.55673218]
[232.83651733 -149.72192383]
[240.02525330 -162.88710022]
[241.38967896 -171.91217041]
[247.41180420 -176.18788147]
[254.78779602 -189.24908447]
[262.16378784 -202.31027222]
[269.53979492 -215.37145996]
[269.48913574 -220.57783508]
[271.25982666 -224.85771179]
[274.19555664 -227.67324829]
[277.52169800 -228.82427979]
[285.45031738 -241.55758667]
[293.37890625 -254.29090881]
[293.38412476 -270.69006348]
[307.72210693 -278.64959717]
[321.64315796 -269.98147583]
[320.82647705 -253.60266113]
[306.11221313 -246.36231995]
[298.18362427 -233.62899780]
[290.25503540 -220.89567566]
[282.60098267 -207.99546814]
[275.22497559 -194.93428040]
[267.84899902 -181.87309265]
[260.47299194 -168.81188965]
[253.19044495 -155.69837952]
[246.00170898 -142.53318787]
[238.81297302 -129.36799622]
[231.62423706 -116.20281982]
[236.05387878 -102.02840424]
[228.95101929 -88.57463074]
[214.05355835 -84.02452850]
[206.86482239 -70.85934448]
[199.67608643 -57.69415665]
[207.37075806 -47.68280411]
[210.72206116 -35.46047974]
[209.19856262 -22.83188629]
[202.99131775 -11.67559433]
[192.99075317 -3.66459155]
[180.65908813 -0.01542568]
[167.81657410 -1.30356109]
[160.25482178 11.65097332]
[152.69306946 24.60550690]
[145.13133240 37.56003952]
[137.56958008 50.51457596]
[130.00782776 63.46910858]
[141.32991028 77.04757690]
[146.87196350 93.83596802]
[161.86584473 94.26430511]
[176.85972595 94.69264221]
[189.46353149 84.76674652]
[205.04870605 88.57222748]
[211.65965271 103.18985748]
[204.22499084 117.40624237]
[188.44798279 120.31578064]
[176.43138123 109.68653107]
[161.43750000 109.25818634]
[146.44361877 108.82984924]
[141.30419922 122.99865723]
[131.96652222 134.82983398]
[119.37968445 143.12080383]
[104.82304382 147.02886963]
[103.96671295 162.00439453]
[103.11038208 176.97993469]
[102.25405121 191.95547485]
[101.39771271 206.93101501]
[100.54138184 221.90653992]
[99.68505096 236.88208008]
[98.82872009 251.85762024]
[97.97238922 266.83316040]
[97.11605835 281.80868530]
[96.25971985 296.78424072]
[103.19657135 311.00360107]
[94.74530029 323.26840210]
[93.88896942 338.24395752]
[102.74177551 344.17724609]
[108.29375458 353.17935181]
[109.60165405 363.59332275]
[106.49626160 373.53463745]
[99.60095978 381.23226929]
[90.20786285 385.34399414]
[88.71096039 400.26913452]
[87.21406555 415.19424438]
[85.71716309 430.11938477]
[84.22026062 445.04449463]
[82.72335815 459.96963501]
[81.22646332 474.89474487]
[89.81703949 481.20175171]
[94.97839355 490.43334961]
[95.83909607 500.89379883]
[92.31079865 510.69299316]
[85.09215546 518.08825684]
[75.53158569 521.79394531]
[73.39686584 536.64123535]
[71.26213837 551.48858643]
[69.23348236 566.35076904]
[67.31098938 581.22705078]
[65.38849640 596.10333252]
[63.46600342 610.97961426]
[69.37077332 625.65765381]
[60.06608200 637.28833008]
[58.14358902 652.16461182]
[56.22109604 667.04089355]
[54.40486908 681.93054199]
[52.69499588 696.83276367]
[50.98512650 711.73498535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 219]
[10 218]
[11 217]
[13 216]
[14 215]
[15 214]
[17 212]
[18 211]
[19 210]
[20 209]
[22 208]
[23 207]
[24 206]
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[33 194]
[36 188]
[37 187]
[39 185]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[55 94]
[56 93]
[57 92]
[58 91]
[60 89]
[61 88]
[62 87]
[63 86]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[72 80]
[73 79]
[98 159]
[99 158]
[100 157]
[101 156]
[102 155]
[103 154]
[108 147]
[109 146]
[110 145]
[113 142]
[114 141]
[115 140]
[116 139]
[118 138]
[119 137]
[120 136]
[121 135]
[125 134]
[126 133]
[127 132]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
