%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAUCGAGCCCUGGCUCUCCGGGCAGCUGGAGGGGUCGCGCUGCGCCUGUUGGGGCUGCACCUCGGACCAGGGCUUCUGCUGCAUCUGCAGCCAUGUCGGGCCGCUCAGUGCCACAUGCCCACCCGGCCACCGCCGAGUACGAAUUUGCCAACCCGAGCCGCCUGGGUGAGCAGCGCUUCGGAGAAGGCCUCC\
) } def
/len { sequence length } bind def

/coor [
[119.57955170 149.35772705]
[105.97560120 152.76206970]
[91.95487213 152.48638916]
[78.49526978 148.54988098]
[66.53557587 141.22714233]
[56.90994644 131.02888489]
[50.28975677 118.66644287]
[35.64313889 121.90320587]
[20.99652290 125.13996887]
[6.34990740 128.37673950]
[-8.29670906 131.61349487]
[-22.94332504 134.85026550]
[-37.58994293 138.08702087]
[-52.23655701 141.32379150]
[-66.88317108 144.56054688]
[-74.59963989 149.47416687]
[-81.79176331 147.72946167]
[-96.48862457 150.72985840]
[-111.18548584 153.73023987]
[-119.91442871 166.63153076]
[-134.86187744 169.46498108]
[-147.10748291 161.06376648]
[-161.80435181 164.06414795]
[-176.47656250 167.18283081]
[-191.12318420 170.41958618]
[-205.76979065 173.65635681]
[-220.41641235 176.89311218]
[-235.06303406 180.12988281]
[-249.70964050 183.36663818]
[-262.99377441 196.10972595]
[-279.50772095 190.18879700]
[-294.10031128 193.66110229]
[-305.73455811 204.38279724]
[-319.90719604 199.80184937]
[-334.49978638 203.27415466]
[-349.09234619 206.74645996]
[-356.72866821 211.78375244]
[-363.94796753 210.15513611]
[-378.59457397 213.39190674]
[-393.24118042 216.62866211]
[-407.40246582 225.95039368]
[-420.28012085 214.92306519]
[-413.24862671 199.49598694]
[-396.47793579 201.98205566]
[-381.83132935 198.74528503]
[-367.18472290 195.50852966]
[-352.56463623 192.15388489]
[-337.97207642 188.68157959]
[-323.37951660 185.20927429]
[-312.78900146 174.73594666]
[-297.57260132 179.06852722]
[-282.98004150 175.59623718]
[-276.36740112 165.45709229]
[-264.22830200 162.45051575]
[-252.94641113 168.72003174]
[-238.29978943 165.48326111]
[-223.65318298 162.24650574]
[-209.00656128 159.00973511]
[-194.35993958 155.77297974]
[-179.71333313 152.53620911]
[-173.85263062 148.01704407]
[-164.80473328 149.36729431]
[-150.10787964 146.36691284]
[-142.13516235 133.83808899]
[-127.27319336 130.58590698]
[-114.18586731 139.03338623]
[-99.48901367 136.03298950]
[-84.79215240 133.03260803]
[-70.11993408 129.91394043]
[-55.47332001 126.67716980]
[-40.82670593 123.44040680]
[-26.18008804 120.20364380]
[-11.53347206 116.96688080]
[3.11314416 113.73011780]
[17.75975990 110.49335480]
[32.40637589 107.25659180]
[47.05299377 104.01982880]
[49.39449310 83.91811371]
[59.08685303 66.15241241]
[74.72218323 53.30335617]
[69.51625824 39.23572159]
[64.31033325 25.16808701]
[59.10440826 11.10045147]
[53.89848709 -2.96718359]
[40.94088364 -13.01867771]
[43.43470001 -29.22709846]
[58.81451416 -34.91861343]
[71.25888824 -24.23827744]
[67.96611786 -8.17310715]
[73.17204285 5.89452839]
[78.37796783 19.96216393]
[83.58389282 34.02980042]
[88.78981781 48.09743500]
[101.09768677 46.91196442]
[113.34603882 48.60517883]
[124.87070465 53.08526230]
[135.04676819 60.10929108]
[143.32241821 69.29637909]
[149.24893188 80.14836884]
[152.50492859 92.07679749]
[167.50444031 91.95597076]
[182.50395203 91.83514404]
[197.50346375 91.71431732]
[212.50297546 91.59348297]
[228.14627075 81.89079285]
[243.06831360 91.11577606]
[258.06393433 90.75331879]
[273.05953979 90.39086151]
[288.04202271 89.66616821]
[303.00262451 88.57964325]
[317.96322632 87.49311829]
[332.92382812 86.40660095]
[347.88442993 85.32007599]
[351.41159058 82.73612213]
[355.19735718 81.53792572]
[358.77185059 81.63565826]
[361.74316406 82.79536438]
[363.83795166 84.67716980]
[378.83746338 84.55634308]
[393.83697510 84.43551636]
[407.57437134 76.58730316]
[420.36355591 84.22182465]
[435.36306763 84.10099792]
[450.36257935 83.98017120]
[465.36209106 83.85933685]
[480.36160278 83.73851013]
[495.35968018 83.49685669]
[510.35528564 83.13440704]
[525.35089111 82.77194977]
[530.90295410 75.12146759]
[539.23303223 70.95240021]
[548.40942383 71.08969879]
[556.36846924 75.37566376]
[561.37872314 82.73384857]
[576.37432861 83.09630585]
[591.37237549 83.33795166]
[606.37188721 83.45878601]
[620.23394775 75.83290100]
[632.89849854 83.67247009]
[647.89801025 83.79329681]
[654.58471680 70.07284546]
[666.56762695 60.61914062]
[681.46752930 57.30921555]
[696.32604980 60.80026627]
[708.19299316 70.39913177]
[714.71215820 84.19995880]
[714.58923340 99.46258545]
[707.84851074 113.15659332]
[695.82849121 122.56304169]
[680.91564941 125.81426239]
[666.07104492 122.26473236]
[654.24194336 112.61920929]
[647.77716064 98.79281616]
[632.77764893 98.67198181]
[619.98846436 106.30651093]
[606.25103760 98.45829773]
[591.25152588 98.33747101]
[584.52862549 101.43146515]
[576.01190186 98.09192657]
[561.01623535 97.72946930]
[543.84692383 109.17012787]
[525.71337891 97.76757050]
[510.71774292 98.13002014]
[495.72213745 98.49247742]
[489.10235596 101.80145264]
[480.48245239 98.73802185]
[465.48294067 98.85885620]
[450.48342896 98.97968292]
[435.48391724 99.10050964]
[420.48437500 99.22134399]
[407.81985474 107.06091309]
[393.95779419 99.43502808]
[378.95828247 99.55585480]
[363.95877075 99.67668152]
[348.97094727 100.28067017]
[334.01034546 101.36719513]
[319.04974365 102.45372009]
[304.08914185 103.54023743]
[289.12857056 104.62676239]
[286.55307007 107.05331421]
[282.66934204 108.34619904]
[278.02618408 107.90195465]
[273.42199707 105.38648224]
[258.42639160 105.74893951]
[243.43077087 106.11139679]
[234.85459900 114.65413666]
[222.35566711 115.07114410]
[212.62380981 106.59299469]
[197.62429810 106.71382904]
[182.62478638 106.83465576]
[167.62527466 106.95548248]
[152.62576294 107.07631683]
[148.93801880 120.60618591]
[141.83695984 132.69882202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 77]
[8 76]
[9 75]
[10 74]
[11 73]
[12 72]
[13 71]
[14 70]
[15 69]
[17 68]
[18 67]
[19 66]
[22 63]
[23 62]
[24 60]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[31 52]
[32 51]
[34 49]
[35 48]
[36 47]
[38 46]
[39 45]
[40 44]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[100 192]
[101 191]
[102 190]
[103 189]
[104 188]
[106 185]
[107 184]
[108 183]
[109 179]
[110 178]
[111 177]
[112 176]
[113 175]
[118 174]
[119 173]
[120 172]
[122 170]
[123 169]
[124 168]
[125 167]
[126 166]
[127 164]
[128 163]
[129 162]
[134 160]
[135 159]
[136 157]
[137 156]
[139 154]
[140 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
