%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUCGCUGCACAGUCUGUCUCUUCGCCGGUUCCCGGCCCCGUGGAUCCUACUUCUCUGUCGCCCGCGGUUCGCCGCCCCGCUCGCCGCCGCGAUGCCAGUGUUUCAUACGCGCACGAUCGAGAGCAUCCUGGAGCCGGUGGCACAGCAGAUCUCCCACCUGGUGAUAAUGCACGAGGAGGGCGAGGUGGACG\
) } def
/len { sequence length } bind def

/coor [
[75.71067047 123.72660065]
[72.82876587 138.44715881]
[69.94686890 153.16770935]
[67.06496429 167.88825989]
[69.95554352 184.59397888]
[54.70288849 191.99618530]
[43.36759949 179.38874817]
[52.34441757 165.00636292]
[55.22631836 150.28581238]
[58.10821915 135.56526184]
[60.99011993 120.84470367]
[66.64309692 110.72434235]
[74.37560272 103.38623047]
[83.36354828 99.19598389]
[92.72855377 98.31300354]
[86.40753937 84.70989227]
[80.08652496 71.10677338]
[73.76550293 57.50366211]
[67.44448853 43.90054321]
[61.12347412 30.29743004]
[45.89757538 28.84165192]
[33.52633667 20.01842880]
[27.27406120 6.27887297]
[28.72873497 -8.64560032]
[37.40002060 -20.75652122]
[31.07900429 -34.35963440]
[24.75798798 -47.96274948]
[18.43696976 -61.56586838]
[12.11595440 -75.16898346]
[5.79493761 -88.77209473]
[-0.52607918 -102.37521362]
[-6.84709597 -115.97832489]
[-13.16811275 -129.58143616]
[-19.48912811 -143.18455505]
[-25.81014633 -156.78767395]
[-38.64231110 -166.04219055]
[-36.98883820 -180.84472656]
[-43.30985641 -194.44784546]
[-53.58877182 -193.55662537]
[-63.86631393 -196.43496704]
[-72.76203918 -202.95387268]
[-78.99357605 -212.48123169]
[-81.55839539 -223.93772888]
[-96.55401611 -223.57527161]
[-111.54963684 -223.21282959]
[-126.54525757 -222.85037231]
[-142.23365784 -216.42306519]
[-152.75277710 -229.71910095]
[-142.88832092 -243.50782776]
[-126.90771484 -237.84599304]
[-111.91209412 -238.20845032]
[-96.91647339 -238.57089233]
[-81.92085266 -238.93334961]
[-72.81341553 -250.85202026]
[-76.40315247 -265.41613770]
[-79.99288940 -279.98028564]
[-83.58261871 -294.54440308]
[-87.17235565 -309.10852051]
[-97.98741913 -320.65603638]
[-93.52079010 -334.86514282]
[-97.11052704 -349.42926025]
[-100.70025635 -363.99337769]
[-104.28999329 -378.55752563]
[-117.53230286 -386.75988770]
[-120.96533203 -401.58111572]
[-113.06401062 -414.15509033]
[-116.65374756 -428.71923828]
[-120.24347687 -443.28335571]
[-123.83321381 -457.84747314]
[-139.73764038 -460.16198730]
[-153.50453186 -468.38049316]
[-163.04281616 -481.22021484]
[-166.91691589 -496.69915771]
[-164.56278992 -512.44201660]
[-156.36982727 -526.04455566]
[-143.61680603 -535.44097900]
[-147.44070435 -549.94537354]
[-151.26460266 -564.44976807]
[-163.61187744 -569.85113525]
[-170.48977661 -581.21398926]
[-169.57666016 -594.26977539]
[-161.42991638 -604.26275635]
[-165.01965332 -618.82690430]
[-168.72659302 -633.36163330]
[-172.55049133 -647.86602783]
[-176.37437439 -662.37042236]
[-180.19827271 -676.87487793]
[-192.12528992 -688.13000488]
[-188.07876587 -704.02209473]
[-172.22143555 -708.20263672]
[-160.86596680 -696.37109375]
[-165.69387817 -680.69873047]
[-161.86997986 -666.19433594]
[-158.04608154 -651.68994141]
[-154.22218323 -637.18554688]
[-149.47068787 -631.51153564]
[-150.45552063 -622.41662598]
[-146.86578369 -607.85247803]
[-132.11816406 -599.78131104]
[-127.67735291 -583.21685791]
[-136.76019287 -568.27368164]
[-132.93629456 -553.76928711]
[-129.11239624 -539.26483154]
[-115.13797760 -537.90625000]
[-102.44059753 -531.84429932]
[-92.55560303 -521.78955078]
[-86.68598938 -508.93640137]
[-85.55599976 -494.82174683]
[-89.32183838 -481.14086914]
[-97.55041504 -469.54400635]
[-109.26908875 -461.43722534]
[-105.67935181 -446.87307739]
[-102.08961487 -432.30895996]
[-98.49988556 -417.74484253]
[-85.66019440 -410.28305054]
[-81.81221771 -395.56411743]
[-89.72586823 -382.14724731]
[-86.13613129 -367.58312988]
[-82.54639435 -353.01898193]
[-78.95666504 -338.45486450]
[-68.39836121 -327.94909668]
[-72.60823059 -312.69827271]
[-69.01849365 -298.13412476]
[-65.42875671 -283.57000732]
[-61.83902359 -269.00588989]
[-58.24929047 -254.44175720]
[-36.15710449 -252.47660828]
[-20.96060371 -237.50549316]
[-18.84445190 -217.12976074]
[-29.70674133 -200.76885986]
[-23.38572502 -187.16575623]
[-11.00567913 -178.88421631]
[-12.20703030 -163.10868835]
[-5.88601351 -149.50556946]
[0.43500298 -135.90246582]
[6.75601959 -122.29934692]
[13.07703590 -108.69622803]
[19.39805222 -95.09311676]
[25.71906853 -81.48999786]
[32.04008484 -67.88688660]
[38.36110306 -54.28376770]
[44.68211746 -40.68065262]
[51.00313568 -27.07753754]
[65.85131073 -25.89550400]
[78.19635773 -17.38340378]
[84.66598511 -3.74484515]
[83.43222046 11.40027332]
[74.72658539 23.97641373]
[81.04760742 37.57952881]
[87.36862183 51.18264389]
[93.68963623 64.78575897]
[100.01065826 78.38887787]
[106.33167267 91.99198914]
[114.95180511 104.26770782]
[125.60104370 114.83150482]
[136.25027466 125.39530182]
[146.98426819 135.87297058]
[157.80229187 146.26383972]
[175.77406311 150.24760437]
[180.00849915 167.27221680]
[190.99252319 177.48745728]
[201.97656250 187.70269775]
[217.35121155 191.43504333]
[221.40177917 205.76831055]
[232.38580322 215.98353577]
[243.36984253 226.19877625]
[259.15267944 225.37561035]
[270.83880615 236.01562500]
[271.49505615 251.80628967]
[260.73208618 263.37927246]
[244.93536377 263.86853027]
[233.47682190 252.98381042]
[233.15460205 237.18281555]
[222.17056274 226.96757507]
[211.18653870 216.75233459]
[196.59753418 213.75064087]
[191.76132202 198.68672180]
[180.77729797 188.47148132]
[169.79325867 178.25625610]
[157.68896484 178.37887573]
[148.45346069 169.94664001]
[147.41143799 157.08187866]
[136.59339905 146.69100952]
[129.58219910 144.32167053]
[125.68648529 136.04454041]
[115.03724670 125.48074341]
[104.38800812 114.91694641]
[97.21867371 117.11936188]
[101.62350464 131.45802307]
[106.02833557 145.79670715]
[110.43294525 160.13543701]
[96.09413910 164.53982544]
[91.68966675 150.20152283]
[87.28483582 135.86285400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[4 8]
[15 153]
[16 152]
[17 151]
[18 150]
[19 149]
[20 148]
[25 143]
[26 142]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[32 136]
[33 135]
[34 134]
[35 133]
[37 131]
[38 130]
[43 53]
[44 52]
[45 51]
[46 50]
[54 126]
[55 125]
[56 124]
[57 123]
[58 122]
[60 120]
[61 119]
[62 118]
[63 117]
[66 114]
[67 113]
[68 112]
[69 111]
[76 103]
[77 102]
[78 101]
[82 98]
[83 97]
[84 95]
[85 94]
[86 93]
[87 92]
[154 187]
[155 186]
[156 185]
[157 183]
[158 182]
[160 179]
[161 178]
[162 177]
[164 175]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
