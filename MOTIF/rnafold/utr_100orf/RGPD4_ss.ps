%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGCUUUCCUGUUGGAAUUGGCGACUGCUGCGGGGCUGAGCGCUGGUUUCACGCGUCUCGGGAGCCAGGUUGGUGGCGCGAUGAGUUGCAGCAAGGCCUACGGGGAGCGGUACGUCGCCUCCGUGCAGGGCUCCGCCCCGUCGCCUCGAAAGAAGUCAACGAGAGGAUUCUAUUUUGCAA\
) } def
/len { sequence length } bind def

/coor [
[106.01041412 343.74661255]
[98.84737396 356.92581177]
[99.05538177 372.74563599]
[86.17956543 380.23315430]
[79.01652527 393.41232300]
[71.85349274 406.59152222]
[64.69045258 419.77069092]
[57.75470734 433.07089233]
[51.04830170 446.48822021]
[44.34189224 459.90551758]
[37.63548660 473.32281494]
[39.15980911 489.65097046]
[25.62671661 498.91311646]
[10.95789051 491.58117676]
[10.24336433 475.19760132]
[24.21817970 466.61642456]
[30.92458725 453.19909668]
[37.63099289 439.78179932]
[44.33740234 426.36450195]
[43.69394302 421.60931396]
[46.04823685 416.40243530]
[51.51126862 412.60766602]
[58.67430496 399.42846680]
[65.83734131 386.24929810]
[73.00038147 373.07009888]
[72.28002167 358.19293213]
[85.66819000 349.76278687]
[92.83123016 336.58358765]
[121.85555267 314.48870850]
[119.80196381 299.62994385]
[110.39508057 288.08178711]
[116.17019653 273.35229492]
[114.11660767 258.49353027]
[112.06301117 243.63476562]
[110.00942230 228.77600098]
[107.95583344 213.91723633]
[105.90224457 199.05848694]
[103.84864807 184.19972229]
[94.44176483 172.65156555]
[100.21688080 157.92205811]
[98.16329193 143.06329346]
[96.10970306 128.20454407]
[94.05610657 113.34577942]
[70.22747040 96.37601471]
[59.75830460 85.63373566]
[49.28914261 74.89144897]
[38.81998062 64.14916992]
[21.33876801 64.25121307]
[9.41798210 51.92995834]
[10.07145119 35.13607025]
[-0.58057445 24.57508850]
[-11.23259926 14.01410580]
[-21.88462448 3.45312333]
[-32.62690735 -7.01603889]
[-43.45865631 -17.39260864]
[-54.29040527 -27.76918030]
[-65.12215424 -38.14575195]
[-75.95390320 -48.52231979]
[-86.78565216 -58.89889145]
[-97.70606995 -69.18210602]
[-108.71434784 -79.37120819]
[-119.72263336 -89.56030273]
[-130.73091125 -99.74940491]
[-145.92501831 -96.59999084]
[-160.05459595 -103.01360321]
[-167.68655396 -116.52407837]
[-165.88623047 -131.93635559]
[-155.34590149 -143.32411194]
[-140.11851501 -146.30851746]
[-126.05934143 -139.74200439]
[-118.57440186 -126.14953613]
[-120.54180908 -110.75768280]
[-109.53353119 -100.56858826]
[-98.52525330 -90.37948608]
[-87.51696777 -80.19038391]
[-80.45479584 -77.94867706]
[-76.40908051 -69.73063660]
[-65.57733154 -59.35406876]
[-54.74558258 -48.97750092]
[-43.91383362 -38.60092926]
[-33.08208466 -28.22435760]
[-22.25033760 -17.84778786]
[-15.22768497 -15.48517895]
[-11.32364178 -7.19890213]
[-0.67161685 3.36208081]
[9.98040867 13.92306328]
[20.63243294 24.48404694]
[33.39786530 22.62780952]
[45.07232666 28.55833054]
[51.28392029 40.30644989]
[49.56226349 53.68000793]
[60.03142548 64.42228699]
[70.50058746 75.16457367]
[80.96974945 85.90685272]
[76.27626801 71.66005707]
[85.17222595 59.58272552]
[100.17001343 59.84018326]
[108.64620209 72.21573639]
[103.46643829 86.29309845]
[114.29818726 75.91652679]
[125.12993622 65.53995514]
[135.78195190 54.97897339]
[146.25112915 44.23669052]
[156.72029114 33.49440765]
[167.18945312 22.75212669]
[177.65861511 12.00984287]
[188.12777710 1.26756036]
[191.88899231 -7.08451414]
[198.87005615 -9.56732750]
[209.52207947 -20.12831116]
[220.17410278 -30.68929291]
[219.99128723 -46.49252319]
[231.09620667 -57.73781586]
[246.90048218 -57.75353622]
[258.02774048 -46.53035736]
[257.87637329 -30.72679329]
[246.53616333 -19.71881676]
[230.73509216 -20.03726768]
[220.08306885 -9.47628498]
[209.43103027 1.08469748]
[198.87005615 11.73672295]
[188.40089417 22.47900581]
[177.93173218 33.22128677]
[167.46257019 43.96356964]
[156.99340820 54.70585251]
[146.52424622 65.44813538]
[145.69110107 70.17377472]
[141.86483765 74.41805267]
[135.50650024 76.37170410]
[124.67475891 86.74827576]
[113.84300995 97.12484741]
[108.91487122 111.29218292]
[110.96846008 126.15094757]
[113.02204895 141.00970459]
[115.07564545 155.86846924]
[124.62941742 168.47941589]
[118.70741272 182.14613342]
[120.76100159 197.00489807]
[122.81459045 211.86364746]
[124.86818695 226.72241211]
[126.92177582 241.58117676]
[128.97537231 256.43994141]
[131.02896118 271.29870605]
[140.58273315 283.90963745]
[134.66072083 297.57635498]
[136.71430969 312.43511963]
[144.32554626 325.36065674]
[156.32313538 334.36386108]
[168.32072449 343.36706543]
[180.31831360 352.37030029]
[194.11424255 345.74224854]
[209.40971375 346.29629517]
[222.68995667 353.90512085]
[230.90324402 366.82022095]
[232.16223145 382.07388306]
[226.17761230 396.16085815]
[214.32461548 405.84408569]
[199.32696533 408.89843750]
[184.63101196 404.62203979]
[173.61378479 393.99758911]
[168.80694580 379.46649170]
[171.31509399 364.36788940]
[159.31750488 355.36465454]
[147.31991577 346.36145020]
[135.32232666 337.35824585]
[127.99434662 338.95532227]
[134.20684814 352.60833740]
[140.41935730 366.26135254]
[146.63186646 379.91436768]
[152.84436035 393.56738281]
[163.05372620 404.55688477]
[166.36239624 419.18740845]
[161.87518311 433.50051880]
[150.80615234 443.62359619]
[136.15017700 446.81771851]
[121.87261200 442.21865845]
[111.83644867 431.07077026]
[108.75708008 416.39025879]
[113.46750641 402.14938354]
[113.43522644 387.14941406]
[113.40294647 372.14944458]
[113.37067413 357.14950562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[4 25]
[5 24]
[6 23]
[7 22]
[8 19]
[9 18]
[10 17]
[11 16]
[29 146]
[30 145]
[32 143]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 137]
[40 135]
[41 134]
[42 133]
[43 132]
[44 94]
[45 93]
[46 92]
[47 91]
[50 87]
[51 86]
[52 85]
[53 84]
[54 82]
[55 81]
[56 80]
[57 79]
[58 78]
[59 77]
[60 75]
[61 74]
[62 73]
[63 72]
[99 131]
[100 130]
[101 129]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[107 121]
[109 120]
[110 119]
[111 118]
[147 165]
[148 164]
[149 163]
[150 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
