%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUGAAGAGCAAACCCCCUCCUGCUCAGAGCUGCUGCCGCCUGCGCCCAGGGCUGCACUCCGCGCAGGCCUCAUAGCCAGGCCAUGGCCCCCACAGAGCCCUGGAGCCCCAGCCCGGGGUCAGCGCCCUGGGACUACUCGGGGUUGGACGGCCUGGAGGAGCUGGAGCUGUGUCCGGCCGGGG\
) } def
/len { sequence length } bind def

/coor [
[55.22789383 442.38555908]
[58.60500336 457.18283081]
[56.40480423 472.20028687]
[48.92484665 485.40689087]
[37.17673874 495.01660156]
[22.74931335 499.72976685]
[7.59376335 498.90896606]
[-6.24024963 492.66519165]
[-16.88178825 481.84289551]
[-22.89167023 467.90570068]
[-23.45711136 452.73846436]
[-18.50163841 438.39245605]
[-8.69543934 426.80786133]
[4.63527918 419.55139160]
[19.68764687 417.60443115]
[23.23911285 403.03091431]
[26.79057884 388.45742798]
[30.34204483 373.88391113]
[22.40772057 361.33074951]
[25.80180740 346.50054932]
[39.02252579 338.26339722]
[42.57398987 323.68991089]
[46.12545776 309.11639404]
[38.19113159 296.56323242]
[41.58522034 281.73303223]
[54.80593872 273.49588013]
[58.35740280 258.92236328]
[53.85346222 244.72506714]
[64.63816071 233.14918518]
[68.18962097 218.57568359]
[71.74108887 204.00216675]
[75.29255676 189.42866516]
[78.46965790 174.76899719]
[81.27031708 160.03277588]
[84.07097626 145.29653931]
[82.22662354 138.12113953]
[87.04729462 130.33358765]
[90.09912872 115.64732361]
[82.30537415 102.83103180]
[67.86161041 98.78408051]
[53.41785431 94.73712921]
[38.97409439 90.69017029]
[24.53033447 86.64321899]
[10.08657551 82.59626770]
[-4.35718393 78.54931641]
[-18.80094337 74.50236511]
[-27.98464394 80.38650513]
[-38.67071915 80.23449707]
[-47.31978989 74.33893585]
[-51.20051193 64.85476685]
[-65.49768066 60.31704712]
[-79.79485321 55.77932739]
[-94.64343262 61.85380936]
[-108.57977295 53.90661240]
[-110.91310883 38.03414917]
[-99.85350800 26.41241264]
[-83.88494110 27.95660782]
[-75.25713348 41.48215866]
[-60.95996475 46.01987457]
[-46.66279221 50.55759430]
[-28.15170860 45.01751328]
[-14.75399113 60.05860901]
[-0.31023225 64.10556030]
[14.13352680 68.15251160]
[28.57728577 72.19946289]
[43.02104568 76.24641418]
[57.46480560 80.29336548]
[71.90856171 84.34031677]
[86.35232544 88.38726807]
[74.01857758 79.85036469]
[69.49125671 65.54989624]
[74.66496277 51.47038269]
[87.37458801 43.50386810]
[102.30136108 44.98421097]
[113.19866943 55.29191208]
[115.50616455 70.11336517]
[108.25726318 83.24687958]
[119.39300537 73.19724274]
[130.52874756 63.14759827]
[141.66448975 53.09795761]
[152.80023193 43.04831696]
[163.93597412 32.99867630]
[175.07170105 22.94903564]
[180.37997437 3.51824594]
[199.42314148 0.24554513]
[210.20928955 -10.17842388]
[220.99542236 -20.60239220]
[231.78157043 -31.02636147]
[242.56771851 -41.45032883]
[253.35385132 -51.87429810]
[264.13998413 -62.29826736]
[265.19470215 -66.56622314]
[267.34680176 -69.92751312]
[270.17187500 -72.14690399]
[273.21270752 -73.15290070]
[276.03610229 -73.03411865]
[287.50845337 -82.69771576]
[298.98083496 -92.36131287]
[295.23580933 -112.09944153]
[305.90972900 -130.89727783]
[327.63986206 -138.86441040]
[334.76721191 -152.06292725]
[341.89456177 -165.26144409]
[349.02191162 -178.45996094]
[348.01470947 -194.82814026]
[361.83395386 -203.65769958]
[376.26358032 -195.86553955]
[376.45962524 -179.46755981]
[362.22042847 -171.33261108]
[355.09307861 -158.13409424]
[347.96572876 -144.93557739]
[340.83837891 -131.73706055]
[351.62451172 -121.31308746]
[364.57202148 -128.88690186]
[377.51950073 -136.46070862]
[390.46697998 -144.03451538]
[403.41445923 -151.60832214]
[416.36196899 -159.18214417]
[429.30944824 -166.75595093]
[442.25692749 -174.32975769]
[449.90100098 -188.83837891]
[466.29611206 -189.20228577]
[474.57638550 -175.04710388]
[466.22378540 -160.93447876]
[449.83074951 -161.38227844]
[436.88323975 -153.80845642]
[423.93576050 -146.23464966]
[410.98828125 -138.66084290]
[398.04080200 -131.08703613]
[385.09329224 -123.51322174]
[372.14581299 -115.93941498]
[359.19833374 -108.36560059]
[356.22946167 -93.02993011]
[347.10418701 -81.11355591]
[334.16918945 -74.79028320]
[320.38275146 -74.90374756]
[308.64440918 -80.88895416]
[297.17205811 -71.22536469]
[285.69970703 -61.56176758]
[274.56396484 -51.51212311]
[263.77783203 -41.08815765]
[252.99168396 -30.66418648]
[242.20553589 -20.24021912]
[231.41940308 -9.81624985]
[220.63325500 0.60771906]
[209.84710693 11.03168774]
[210.59042358 21.25210953]
[205.46681213 30.37967873]
[195.96386719 35.26940536]
[185.12135315 34.08477783]
[173.98561096 44.13441849]
[162.84986877 54.18405914]
[151.71412659 64.23369598]
[140.57838440 74.28334045]
[129.44264221 84.33297729]
[118.30690765 94.38262177]
[116.76709747 109.40673828]
[104.78539276 118.69915771]
[101.73355103 133.38542175]
[98.80719757 148.09719849]
[96.00653839 162.83341980]
[93.20588684 177.56965637]
[94.94564056 182.54164124]
[94.62080383 187.21199036]
[92.69662476 190.84014893]
[89.86606598 192.98013306]
[86.31459808 207.55363464]
[82.76313019 222.12715149]
[79.21166229 236.70065308]
[83.46157837 251.94036865]
[72.93090820 262.47384644]
[69.37944031 277.04736328]
[77.32830811 290.44335938]
[73.51900482 305.17239380]
[60.69896317 312.66784668]
[57.14749908 327.24136353]
[53.59603119 341.81488037]
[61.54489136 355.21087646]
[57.73559570 369.93991089]
[44.91555023 377.43536377]
[41.36408615 392.00888062]
[37.81261826 406.58239746]
[34.26115417 421.15588379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 183]
[16 182]
[17 181]
[18 180]
[21 177]
[22 176]
[23 175]
[26 172]
[27 171]
[29 169]
[30 168]
[31 167]
[32 166]
[33 162]
[34 161]
[35 160]
[37 159]
[38 158]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[50 60]
[51 59]
[52 58]
[77 156]
[78 155]
[79 154]
[80 153]
[81 152]
[82 151]
[83 150]
[85 146]
[86 145]
[87 144]
[88 143]
[89 142]
[90 141]
[91 140]
[96 139]
[97 138]
[98 137]
[101 112]
[102 111]
[103 110]
[104 109]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
