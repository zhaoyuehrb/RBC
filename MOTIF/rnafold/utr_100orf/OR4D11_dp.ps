%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR4D11)
} def

/sequence { (\
AUGGAGUUGGGAAAUGUCACCAGAGUAAAAGAAUUUAUAUUUCUGGGACUUACUCAAUCCCAAGACCAGAGUUUGGUCUUGUUUCUUUUUUUAUGUCUUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 82 0.004989922 ubox
1 94 0.037434420 ubox
1 96 0.013972752 ubox
2 62 0.197627500 ubox
2 81 0.003726413 ubox
2 93 0.039464477 ubox
2 95 0.014947370 ubox
2 100 0.005410859 ubox
3 59 0.018568761 ubox
3 60 0.935166825 ubox
3 61 0.297883404 ubox
3 84 0.003832269 ubox
3 85 0.027695385 ubox
3 86 0.039758105 ubox
3 88 0.009892499 ubox
3 89 0.004863141 ubox
3 90 0.004798776 ubox
3 91 0.005159687 ubox
3 92 0.035533148 ubox
3 97 0.010316378 ubox
3 98 0.033691057 ubox
3 99 0.003515631 ubox
4 55 0.009760244 ubox
4 58 0.011256359 ubox
4 59 0.938132899 ubox
4 60 0.310788582 ubox
4 83 0.004709661 ubox
4 84 0.026874305 ubox
4 85 0.042993840 ubox
4 87 0.012488625 ubox
4 88 0.005955395 ubox
4 89 0.005923041 ubox
4 90 0.006389825 ubox
4 91 0.034580308 ubox
4 92 0.005693589 ubox
4 96 0.007144388 ubox
4 97 0.036451233 ubox
4 99 0.008606085 ubox
5 54 0.009843652 ubox
5 58 0.821654031 ubox
5 82 0.004567679 ubox
5 83 0.025671977 ubox
5 84 0.041190664 ubox
5 86 0.012684236 ubox
5 87 0.005807868 ubox
5 88 0.005800580 ubox
5 89 0.006404517 ubox
5 90 0.033151541 ubox
5 91 0.005726902 ubox
5 96 0.034338334 ubox
5 98 0.008964317 ubox
6 53 0.009873076 ubox
6 58 0.555250312 ubox
6 82 0.009733945 ubox
6 83 0.015558319 ubox
6 85 0.011640154 ubox
6 89 0.016976753 ubox
6 97 0.008297876 ubox
7 52 0.009475577 ubox
7 57 0.918808314 ubox
7 63 0.003394278 ubox
8 56 0.994094758 ubox
8 62 0.006148782 ubox
8 93 0.010814353 ubox
9 51 0.003357326 ubox
9 54 0.023329657 ubox
9 55 0.999123278 ubox
9 61 0.007910305 ubox
9 86 0.006395176 ubox
9 87 0.012090921 ubox
9 92 0.010869531 ubox
10 50 0.003541758 ubox
10 53 0.041466501 ubox
10 54 0.997727494 ubox
10 55 0.012295663 ubox
10 60 0.008171563 ubox
10 85 0.006723159 ubox
10 86 0.013200950 ubox
10 91 0.010789354 ubox
11 51 0.006475401 ubox
11 53 0.996552994 ubox
11 54 0.011396279 ubox
11 55 0.008910005 ubox
11 59 0.008168438 ubox
11 84 0.006628157 ubox
11 85 0.013355345 ubox
11 90 0.010783168 ubox
12 50 0.013608242 ubox
12 51 0.189447668 ubox
12 54 0.008888899 ubox
12 58 0.008017320 ubox
12 83 0.006527358 ubox
12 84 0.013305535 ubox
12 89 0.010739847 ubox
13 50 0.162013410 ubox
13 51 0.717124802 ubox
13 82 0.005621424 ubox
13 83 0.012849857 ubox
13 88 0.010403436 ubox
14 50 0.717639355 ubox
14 82 0.010938931 ubox
14 87 0.009035708 ubox
15 52 0.012778536 ubox
15 81 0.004199358 ubox
16 49 0.998911772 ubox
16 51 0.004600104 ubox
17 48 0.999668961 ubox
18 47 0.998784519 ubox
20 46 0.999104486 ubox
21 45 0.999983549 ubox
22 44 0.999711204 ubox
23 40 0.004061364 ubox
23 41 0.006969982 ubox
23 42 0.031752900 ubox
23 43 0.999356808 ubox
24 35 0.007194409 ubox
24 40 0.018443948 ubox
24 41 0.257009020 ubox
24 42 0.960437552 ubox
25 34 0.020776931 ubox
25 35 0.005204943 ubox
25 38 0.661012241 ubox
25 40 0.358538172 ubox
25 41 0.624922581 ubox
26 33 0.022772534 ubox
26 37 0.751273663 ubox
26 39 0.438606956 ubox
27 35 0.024433401 ubox
27 36 0.753767683 ubox
27 38 0.429606170 ubox
27 41 0.021034510 ubox
27 42 0.007132850 ubox
28 34 0.030684164 ubox
28 35 0.734756979 ubox
28 36 0.197186841 ubox
28 40 0.025565112 ubox
28 41 0.017084536 ubox
28 42 0.010301743 ubox
29 34 0.612655466 ubox
29 35 0.200494970 ubox
29 36 0.319553185 ubox
29 40 0.018991315 ubox
29 41 0.025238604 ubox
29 42 0.004368926 ubox
30 34 0.155000477 ubox
30 35 0.294760666 ubox
30 36 0.092490513 ubox
30 40 0.030481295 ubox
30 41 0.010441319 ubox
30 42 0.004287417 ubox
30 44 0.003783985 ubox
31 35 0.070838517 ubox
31 40 0.012704922 ubox
31 41 0.012613134 ubox
31 42 0.023318707 ubox
31 43 0.005252247 ubox
32 40 0.013445088 ubox
32 41 0.044612978 ubox
32 42 0.005909982 ubox
33 40 0.053585422 ubox
33 41 0.008433734 ubox
34 39 0.052442800 ubox
61 81 0.948129099 ubox
61 95 0.003211416 ubox
61 100 0.020763498 ubox
62 80 0.973728401 ubox
62 83 0.003522079 ubox
62 99 0.022475928 ubox
63 79 0.996304209 ubox
63 80 0.013504194 ubox
63 84 0.007294763 ubox
63 86 0.003909768 ubox
63 98 0.023865439 ubox
64 78 0.999626418 ubox
64 83 0.008484787 ubox
64 85 0.003940277 ubox
64 97 0.024036500 ubox
65 77 0.999533485 ubox
65 82 0.008674743 ubox
65 84 0.003706079 ubox
65 96 0.024022291 ubox
66 76 0.999654263 ubox
66 81 0.008737258 ubox
66 95 0.023791800 ubox
67 75 0.999624092 ubox
68 74 0.972505397 ubox
68 79 0.009063835 ubox
68 91 0.004729134 ubox
68 92 0.006966123 ubox
68 94 0.004087629 ubox
69 73 0.659834225 ubox
69 78 0.009441746 ubox
69 80 0.004453610 ubox
69 90 0.004918021 ubox
69 91 0.007740101 ubox
69 92 0.019456065 ubox
70 77 0.009292687 ubox
70 79 0.004608449 ubox
70 89 0.004899824 ubox
70 90 0.007786846 ubox
70 91 0.019620177 ubox
71 78 0.004661021 ubox
71 88 0.004474664 ubox
71 89 0.007232998 ubox
71 90 0.018863133 ubox
75 85 0.007968132 ubox
75 86 0.021012576 ubox
76 84 0.007597061 ubox
76 85 0.021308796 ubox
80 93 0.007548551 ubox
80 95 0.006461110 ubox
81 92 0.008726943 ubox
81 94 0.014894860 ubox
82 93 0.018720313 ubox
82 95 0.009837907 ubox
92 100 0.046283874 ubox
93 99 0.056323791 ubox
94 100 0.011959946 ubox
95 99 0.011971704 ubox
3 60 0.9500000 lbox
4 59 0.9500000 lbox
5 58 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
16 49 0.9500000 lbox
17 48 0.9500000 lbox
18 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
61 81 0.9500000 lbox
62 80 0.9500000 lbox
63 79 0.9500000 lbox
64 78 0.9500000 lbox
65 77 0.9500000 lbox
66 76 0.9500000 lbox
67 75 0.9500000 lbox
68 74 0.9500000 lbox
showpage
end
%%EOF
