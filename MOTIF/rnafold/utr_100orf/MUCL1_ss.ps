%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGCCUUGCCUUCUCUUAGGCUUUGAAGCAUUUUUGUCUGUGCUCCCUGAUCUUCAGGUCACCACCAUGAAGUUCUUAGCAGUCCUGGUACUCUUGGGAGUUUCCAUCUUUCUGGUCUCUGCCCAGAAUCCGACAACAGCUGCUCCAGCUGACACGUAUCCAGCUA\
) } def
/len { sequence length } bind def

/coor [
[92.52226257 231.07241821]
[98.56860352 215.23327637]
[98.56860352 200.23327637]
[98.56860352 185.23327637]
[91.41864014 182.96875000]
[86.88959503 197.26867676]
[75.81756592 207.38847351]
[72.58967590 192.73962402]
[77.11872101 178.43971252]
[69.96876526 176.17518616]
[61.33342361 188.44020081]
[52.69808197 200.70523071]
[44.06274033 212.97026062]
[47.01352692 228.49664307]
[38.05229950 241.51477051]
[22.49559402 244.30123901]
[9.57292557 235.20288086]
[6.95108604 219.61758423]
[16.18556595 206.79183960]
[31.79771233 204.33491516]
[40.43305588 192.06988525]
[49.06839752 179.80487061]
[57.70373917 167.53984070]
[51.51420212 160.05271912]
[46.48512650 152.08201599]
[42.64022827 143.79483032]
[39.98028564 135.35670471]
[38.48391342 126.92846680]
[38.10869598 118.66345215]
[23.34198952 121.29868317]
[8.57528496 123.93391418]
[-6.19141960 126.56913757]
[-20.95812416 129.20437622]
[-27.61012840 143.22329712]
[-41.24792480 150.62533569]
[-56.62750626 148.56423950]
[-67.83510590 137.83253479]
[-70.56118011 122.55680084]
[-63.75748444 108.61085510]
[-50.04019165 101.35720062]
[-34.68387604 103.58502197]
[-23.59335327 114.43766785]
[-8.82664776 111.80243683]
[5.94005680 109.16720581]
[20.70676231 106.53198242]
[35.47346497 103.89675140]
[35.61880875 94.17589569]
[37.22030258 84.58676147]
[40.24172974 75.34624481]
[44.61475372 66.66333771]
[50.24046707 58.73443222]
[39.88316727 47.88425446]
[24.75759315 43.24446869]
[21.56632233 28.69575691]
[11.20902348 17.84557915]
[0.85172439 6.99540091]
[-9.50557423 -3.85477710]
[-19.86287308 -14.70495510]
[-30.32057190 -25.45839882]
[-40.87776566 -36.11417770]
[-51.43496323 -46.76995850]
[-67.38928223 -50.56359482]
[-71.82114410 -66.35253143]
[-60.17143631 -77.89447021]
[-44.42436981 -73.31604004]
[-40.77918243 -57.32715225]
[-30.22198677 -46.67137146]
[-19.66479301 -36.01559448]
[-12.69506645 -33.46677399]
[-9.01269531 -25.06225395]
[1.34460342 -14.21207619]
[11.70190239 -3.36189795]
[22.05920029 7.48827982]
[32.41650009 18.33845711]
[46.80125046 22.20216751]
[50.73334503 37.52695847]
[61.09064484 48.37713623]
[72.77082062 41.37039948]
[85.65984344 36.96652985]
[99.18550110 35.36104202]
[112.74731445 36.62520981]
[125.74320984 40.70290756]
[137.59623718 47.41310501]
[147.78016663 56.45790863]
[159.96440125 47.70894241]
[172.14863586 38.95997620]
[175.24493408 33.04443741]
[180.14007568 30.05837250]
[184.95233154 30.12222481]
[197.45335388 21.83219337]
[198.59635925 8.38747692]
[207.15919495 -1.78723264]
[219.83427429 -5.11064148]
[231.92289734 -0.58299303]
[244.57585144 -8.63922024]
[257.22879028 -16.69544792]
[262.81549072 -23.97449684]
[270.19265747 -24.78129005]
[282.99319458 -32.60092926]
[295.79370117 -40.42057037]
[308.52099609 -48.35884476]
[321.17395020 -56.41507339]
[322.24951172 -71.78222656]
[332.05294800 -83.43325043]
[346.66430664 -87.03498840]
[360.42996216 -81.40967560]
[373.08291626 -89.46590424]
[385.73587036 -97.52212524]
[388.91540527 -113.00328064]
[402.15634155 -121.63195038]
[417.60299683 -118.28890228]
[426.09118652 -104.95750427]
[422.58502197 -89.54704285]
[409.16464233 -81.20027161]
[393.79208374 -84.86917877]
[381.13916016 -76.81295013]
[368.48620605 -68.75672150]
[367.75915527 -53.90379333]
[358.31381226 -42.18845749]
[343.60925293 -38.23506927]
[329.23016357 -43.76211929]
[316.57720947 -35.70589447]
[312.60775757 -29.43556023]
[303.61334229 -27.62005234]
[290.81283569 -19.80041313]
[278.01229858 -11.98077297]
[265.28503418 -4.04249620]
[252.63208008 4.01373148]
[239.97912598 12.06995869]
[237.05474854 28.61305046]
[222.80085754 38.12605286]
[205.74337769 34.33320999]
[193.24237061 42.62324142]
[180.89759827 51.14421082]
[168.71336365 59.89317703]
[156.52912903 68.64214325]
[169.59233093 96.93910980]
[168.22911072 130.35070801]
[150.71014404 161.47427368]
[162.02976990 171.31631470]
[173.34939575 181.15837097]
[184.66902161 191.00042725]
[195.98864746 200.84248352]
[207.30827332 210.68453979]
[223.22837830 216.51435852]
[222.03350830 233.42614746]
[205.45185852 236.95962524]
[197.46621704 222.00416565]
[186.14659119 212.16210938]
[174.82696533 202.32005310]
[163.50733948 192.47799683]
[152.18771362 182.63595581]
[140.86808777 172.79389954]
[134.04321289 175.90374756]
[140.26290894 189.55348206]
[146.48260498 203.20321655]
[152.70230103 216.85296631]
[162.83543396 227.91276550]
[155.44808960 240.96754456]
[140.74948120 237.97570801]
[139.05255127 223.07266235]
[132.83285522 209.42291260]
[126.61316681 195.77317810]
[120.39347076 182.12342834]
[113.56860352 185.23327637]
[113.56860352 200.23327637]
[113.56860352 215.23327637]
[119.61494446 231.07241821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[4 165]
[10 23]
[11 22]
[12 21]
[13 20]
[29 46]
[30 45]
[31 44]
[32 43]
[33 42]
[51 77]
[52 76]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 68]
[60 67]
[61 66]
[84 136]
[85 135]
[86 134]
[89 133]
[90 132]
[94 129]
[95 128]
[96 127]
[98 126]
[99 125]
[100 124]
[101 122]
[102 121]
[106 117]
[107 116]
[108 115]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
