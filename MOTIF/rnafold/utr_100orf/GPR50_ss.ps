%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUCAUUUGCUCUCUGACUCUCAGAGAGGGAGGCACGCUUUCCUGGAGCUCCUGGUGACAGAACAGGUGUUUGCUGUCUGGACCUGGCUGCUGAUCCUGAGCCUGCUGGGAGAUCUUAACGAUCCCCAGGAGCAACAUGGGGCCCACCCUAGCGGUUCCCACCCCCUAUGGCUGUAUUGGCUGUAAGCUACCCCAGCCAGAAUACCCACCGGCUCUAAUCAUCUUUAUGUUCUGCG\
) } def
/len { sequence length } bind def

/coor [
[-7.23668909 381.39291382]
[-14.93501377 394.26675415]
[-22.54856110 407.19091797]
[-30.07700157 420.16482544]
[-37.60544205 433.13873291]
[-45.13388443 446.11267090]
[-45.52839661 452.68157959]
[-48.69540787 457.37155151]
[-53.03458786 459.32495117]
[-60.90146637 472.09649658]
[-61.55126953 487.90432739]
[-74.81401062 494.68289185]
[-82.68088531 507.45443726]
[-90.54776764 520.22601318]
[-98.41464233 532.99749756]
[-106.28152466 545.76904297]
[-114.14839935 558.54058838]
[-122.01528168 571.31213379]
[-129.88215637 584.08367920]
[-133.04106140 600.74072266]
[-149.92161560 602.31640625]
[-156.10873413 586.53173828]
[-142.65370178 576.21679688]
[-134.78681946 563.44525146]
[-126.91993713 550.67370605]
[-119.05306244 537.90216064]
[-111.18618774 525.13061523]
[-103.31930542 512.35913086]
[-95.45243073 499.58755493]
[-87.58554840 486.81604004]
[-87.49844360 471.92166138]
[-73.67300415 464.22961426]
[-65.80612946 451.45806885]
[-58.10780334 438.58422852]
[-50.57936096 425.61029053]
[-43.05092239 412.63638306]
[-35.52248001 399.66247559]
[-34.88510513 392.31375122]
[-27.80885506 386.56842041]
[-20.11053085 373.69458008]
[-34.51174545 355.55276489]
[-39.74777222 332.94940186]
[-34.77372742 310.24710083]
[-20.51862717 291.84216309]
[0.28789404 281.31347656]
[23.63823891 280.72644043]
[28.66547203 266.59396362]
[33.69270325 252.46148682]
[38.71993637 238.32901001]
[43.74716949 224.19653320]
[48.77440262 210.06405640]
[53.80163574 195.93156433]
[52.64012527 192.62139893]
[53.01263809 188.58677673]
[55.24121475 184.54953003]
[59.31570435 181.34770203]
[64.89618683 167.42440796]
[70.47666931 153.50111389]
[76.05715942 139.57781982]
[41.37949753 109.40093994]
[44.97105789 52.82439804]
[30.68103790 48.26421356]
[16.39101601 43.70403290]
[2.10099316 39.14384842]
[-7.00628376 39.51741791]
[-12.34618855 34.42867279]
[-26.57503510 29.68104935]
[-40.80388260 24.93342781]
[-54.03469086 33.26887894]
[-69.52091217 31.09839821]
[-79.95042419 19.44682121]
[-80.39873505 3.81566548]
[-70.65415955 -8.41451550]
[-55.31779480 -11.46900368]
[-41.63100052 -3.90556335]
[-36.05625916 10.70458031]
[-21.82741356 15.45220184]
[-7.59856653 20.19982338]
[6.66117573 24.85382652]
[20.95119858 29.41400909]
[35.24121857 33.97419357]
[49.53124237 38.53437424]
[53.99527359 32.50756836]
[39.77273941 27.74106789]
[39.91113281 12.74170685]
[54.21919250 8.23844624]
[62.92333984 20.45395088]
[67.38736725 14.42714310]
[58.86016083 2.08669448]
[50.33294678 -10.25375366]
[41.80573654 -22.59420204]
[26.50398254 -21.27062798]
[12.59728909 -27.78979111]
[3.82649112 -40.39806747]
[2.55088711 -55.70389938]
[9.11360836 -69.59008789]
[21.74931717 -78.32131958]
[37.05907059 -79.54894257]
[50.92461777 -72.94272614]
[59.61620331 -60.27971268]
[60.79582977 -44.96619034]
[54.14618683 -31.12141418]
[62.67339706 -18.78096581]
[71.20060730 -6.44051695]
[79.72782135 5.89993191]
[86.88766479 3.66684890]
[90.17966461 -10.96745110]
[101.20734406 -0.79931688]
[108.36718750 -3.03239965]
[108.36718750 -18.03240013]
[108.36718750 -33.03239822]
[108.36718750 -48.03239822]
[105.24257660 -56.59504318]
[108.46707153 -63.22924042]
[108.66423798 -78.22794342]
[108.86139679 -93.22664642]
[109.05856323 -108.22535706]
[98.93955994 -120.67465973]
[102.50435638 -136.31665039]
[117.01834106 -143.15213013]
[131.34764099 -135.93748474]
[134.50003052 -120.20719910]
[124.05726624 -108.02819061]
[123.86010742 -93.02948761]
[123.66294098 -78.03077698]
[123.46577454 -63.03207397]
[123.36718750 -48.03239822]
[123.36718750 -33.03239822]
[123.36718750 -18.03240013]
[123.36718750 -3.03239965]
[137.46632385 2.08760762]
[147.09133911 -9.41712856]
[156.71636963 -20.92186546]
[166.34138489 -32.42660141]
[175.96640015 -43.93133926]
[171.62841797 -57.00326920]
[174.28996277 -70.40631104]
[183.15202332 -80.66517639]
[195.82214355 -85.17372131]
[208.95956421 -82.85654449]
[218.73497009 -94.23377228]
[228.51037598 -105.61100006]
[238.28579712 -116.98822784]
[248.06120300 -128.36544800]
[250.56401062 -144.57249451]
[265.94696045 -150.25547791]
[278.38543701 -139.56825256]
[275.08377075 -123.50491333]
[259.43844604 -118.59004211]
[249.66302490 -107.21281433]
[239.88760376 -95.83558655]
[230.11219788 -84.45835876]
[220.33679199 -73.08113098]
[224.62974548 -57.22761536]
[218.55999756 -41.78699112]
[204.33810425 -32.92476654]
[187.47114563 -34.30631638]
[177.84611511 -22.80158043]
[168.22109985 -11.29684353]
[158.59608459 0.20789264]
[148.97105408 11.71262932]
[151.53106689 18.76219559]
[165.49346924 13.28032017]
[179.45588684 7.79844522]
[191.68388367 -0.88925898]
[203.98680115 7.69200659]
[200.05793762 22.16832924]
[185.10401917 23.35185814]
[170.87753296 28.10659218]
[156.65106201 32.86132812]
[159.21107483 39.91089249]
[173.97550964 42.55875397]
[188.73995972 45.20661545]
[203.50440979 47.85447693]
[218.26884460 50.50233841]
[233.03329468 53.15019989]
[244.23638916 42.57680130]
[259.34072876 40.65007401]
[272.52737427 47.90101242]
[278.84027100 61.36524200]
[293.60470581 64.01310730]
[308.36917114 66.66096497]
[323.13360596 69.30883026]
[337.89804077 71.95668793]
[354.55578613 68.80128479]
[362.19918823 83.93451691]
[349.77325439 95.46851349]
[335.25018311 86.72113037]
[320.48574829 84.07327271]
[305.72128296 81.42540741]
[290.95684814 78.77754974]
[276.19241333 76.12968445]
[265.59408569 86.56105804]
[250.70950317 88.77768707]
[237.21603394 81.72222137]
[230.38543701 67.91464233]
[215.62098694 65.26678467]
[200.85653687 62.61892319]
[186.09210205 59.97106171]
[171.32765198 57.32320023]
[156.56321716 54.67533875]
[164.58454895 75.13895416]
[165.80989075 96.08823395]
[160.72010803 115.42122650]
[150.40185547 131.37506104]
[136.38806152 142.68652344]
[120.46073151 148.68852234]
[104.43954468 149.33540344]
[89.98045349 145.15829468]
[84.39997101 159.08158875]
[78.81948853 173.00489807]
[73.23900604 186.92819214]
[67.93411255 200.95880127]
[62.90688324 215.09127808]
[57.87965012 229.22375488]
[52.85241699 243.35623169]
[47.82518387 257.48870850]
[42.79795074 271.62118530]
[37.77071762 285.75366211]
[44.31775665 289.85186768]
[50.19891739 294.85327148]
[55.29070282 300.65148926]
[59.48640060 307.12332153]
[62.69830704 314.13156128]
[64.85956573 321.52780151]
[65.92556000 329.15551758]
[65.87484741 336.85351562]
[64.70954895 344.45925903]
[62.45534515 351.81228638]
[59.16083908 358.75765991]
[54.89656830 365.14916992]
[49.75346375 370.85244751]
[43.84091949 375.74780273]
[37.28446579 379.73263550]
[30.22310066 382.72372437]
[22.80635071 384.65890503]
[15.19109726 385.49835205]
[7.53826141 385.22540283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 37]
[4 36]
[5 35]
[6 34]
[9 33]
[10 32]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[46 219]
[47 218]
[48 217]
[49 216]
[50 215]
[51 214]
[52 213]
[56 212]
[57 211]
[58 210]
[59 209]
[61 82]
[62 81]
[63 80]
[64 79]
[66 78]
[67 77]
[68 76]
[88 105]
[89 104]
[90 103]
[91 102]
[109 130]
[110 129]
[111 128]
[112 127]
[114 126]
[115 125]
[116 124]
[117 123]
[131 161]
[132 160]
[133 159]
[134 158]
[135 157]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
[171 201]
[172 200]
[173 199]
[174 198]
[175 197]
[176 196]
[180 192]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
