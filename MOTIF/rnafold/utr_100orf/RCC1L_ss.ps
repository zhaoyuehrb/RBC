%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCCUCCCUGAGCCUUGGGCUGCCGUCAGCGCCUUUGCCUUCAACCAGGAGUAAAAGUGGCCGUAGCCUCUUCCGGCGAGGACUGGUGUUAAGGGUCACGCAAGAUGGCGGCGCCCAGAGGCUGCUGAGGCGCGGAACGGAGGAUGGCGCUGGUGGCGUUGGUGGCUGGGGCUCGGCUGGGGCGGCGGCUGAGCGGGCCGGGGCUGGGGCGAGGGCACUGGACGGCGGCCAGGCGCUCCCGGA\
) } def
/len { sequence length } bind def

/coor [
[55.89571381 822.41516113]
[44.08268356 832.91412354]
[28.31086731 831.90155029]
[17.93739891 819.97814941]
[19.11667633 804.21795654]
[31.14905357 793.97113037]
[32.11010742 779.00195312]
[33.07115936 764.03277588]
[23.07328796 753.05194092]
[23.83469200 737.85736084]
[35.42016220 727.44512939]
[36.38121796 712.47595215]
[37.34226990 697.50677490]
[38.30332184 682.53759766]
[39.16838455 667.56256104]
[39.93741608 652.58227539]
[40.70644760 637.60198975]
[41.47547913 622.62176514]
[42.24451447 607.64147949]
[39.45497513 600.81585693]
[43.12066650 592.47442627]
[44.08171844 577.50524902]
[45.04277039 562.53607178]
[46.00382614 547.56689453]
[46.96487808 532.59771729]
[47.92593384 517.62854004]
[48.88698578 502.65933228]
[49.84803772 487.69015503]
[50.71310043 472.71511841]
[51.48213196 457.73483276]
[44.40752029 444.62762451]
[52.84216309 431.24227905]
[53.61119461 416.26202393]
[54.38022614 401.28173828]
[55.14925766 386.30145264]
[55.91829300 371.32119751]
[56.68732452 356.34091187]
[57.45635605 341.36065674]
[58.22538757 326.38037109]
[58.99442291 311.40008545]
[46.34873581 319.46771240]
[32.11466217 314.73580933]
[26.81601143 300.70285034]
[34.37029266 287.74395752]
[49.19232178 285.44015503]
[60.32324982 295.49395752]
[62.05049133 280.59375000]
[63.77773285 265.69351196]
[65.50497437 250.79328918]
[57.49911880 246.66874695]
[50.90410233 240.50163269]
[46.22838974 232.75000000]
[43.83721542 223.99461365]
[43.92407608 214.89561462]
[46.49514771 206.14260864]
[51.36783600 198.40246582]
[58.18368530 192.26852417]
[66.43475342 188.21505737]
[75.50140381 186.56066895]
[78.36878204 171.83728027]
[81.23616791 157.11389160]
[84.10354614 142.39051819]
[86.97092438 127.66712189]
[74.93780518 117.52464294]
[69.54164124 102.74130249]
[72.21142578 87.23200989]
[82.24015045 75.10392761]
[76.78988647 61.12914276]
[71.33963013 47.15435791]
[65.79988098 33.21480179]
[60.17087555 19.31105042]
[54.54187012 5.40730000]
[48.91286469 -8.49645138]
[43.28385925 -22.40020180]
[37.65485382 -36.30395508]
[32.02584839 -50.20770645]
[23.36539841 -62.45501709]
[12.13283348 -72.39631653]
[0.90026826 -82.33761597]
[-11.98313427 -82.32990265]
[-21.13189888 -90.82241058]
[-22.02135658 -102.87202454]
[-33.12552643 -112.95653534]
[-44.22969818 -123.04105377]
[-55.33386612 -133.12556458]
[-70.20661926 -129.02621460]
[-84.92784119 -133.64024353]
[-94.80003357 -145.49533081]
[-96.67302704 -160.80857849]
[-89.94914246 -174.69357300]
[-76.77396393 -182.71966553]
[-61.35162735 -182.32574463]
[-48.60335541 -173.63752747]
[-42.59706879 -159.42739868]
[-45.24935532 -144.22973633]
[-34.14518356 -134.14521790]
[-23.04101372 -124.06070709]
[-11.93684387 -113.97619629]
[5.39630508 -111.17171478]
[10.84156990 -93.57018280]
[22.07413483 -83.62888336]
[33.30670166 -73.68758392]
[40.16479492 -76.72345734]
[34.09304428 -90.43964386]
[28.02129555 -104.15583801]
[18.00832176 -115.32455444]
[25.53639030 -128.29869080]
[40.20178604 -125.14811707]
[41.73748398 -110.22758484]
[47.80923462 -96.51139832]
[53.88098526 -82.79520416]
[60.73907852 -85.83108521]
[60.93141556 -100.82984924]
[61.12375259 -115.82861328]
[61.31608963 -130.82737732]
[61.50842667 -145.82614136]
[61.60459900 -160.82583618]
[61.60459900 -175.82583618]
[61.60459900 -190.82583618]
[50.25345993 -201.82252502]
[50.08636856 -217.62593079]
[61.20245361 -228.86018372]
[77.00674438 -228.86018372]
[88.12283325 -217.62593079]
[87.95573425 -201.82252502]
[76.60459900 -190.82583618]
[76.60459900 -175.82583618]
[76.60459900 -160.82583618]
[79.74040985 -154.15219116]
[76.50719452 -145.63380432]
[76.31485748 -130.63504028]
[76.12252045 -115.63627625]
[75.93018341 -100.63751221]
[75.73784637 -85.63874054]
[72.97734070 -74.58423615]
[67.73085785 -65.72879791]
[60.85408020 -59.55707550]
[53.27778244 -56.28146362]
[45.92959976 -55.83671188]
[51.55860519 -41.93296051]
[57.18761063 -28.02920723]
[62.81661606 -14.12545681]
[68.44561768 -0.22170508]
[74.07462311 13.68204594]
[79.70362854 27.58579826]
[85.11466980 32.59494781]
[85.31441498 41.70409775]
[90.76467133 55.67888260]
[96.21493530 69.65367126]
[109.07647705 70.79650879]
[120.31993866 77.14553070]
[132.73155212 68.72223663]
[145.14315796 60.29893875]
[157.55476379 51.87564468]
[169.96638489 43.45235062]
[177.04029846 29.30066490]
[191.91627502 28.55578613]
[204.32788086 20.13249016]
[210.98387146 5.14483643]
[227.31788635 3.68457556]
[236.52687073 17.25389862]
[229.13742065 31.89385033]
[212.75117493 32.54410172]
[200.33956909 40.96739578]
[194.15341187 54.51659393]
[178.38967896 55.86396408]
[165.97805786 64.28725433]
[153.56645203 72.71055603]
[141.15484619 81.13385010]
[128.74322510 89.55714417]
[129.20349121 90.92352295]
[129.59884644 92.31007385]
[144.59854126 92.21390533]
[159.59822083 92.11772919]
[174.59791565 92.02156067]
[189.59761047 91.92539215]
[204.59730530 91.82922363]
[219.59700012 91.73304749]
[234.59667969 91.63687897]
[249.59637451 91.54071045]
[260.52008057 80.11930084]
[276.32208252 79.85089111]
[287.62734985 90.89472198]
[287.72866821 106.69868469]
[276.56594849 117.88656616]
[260.76177979 117.82080078]
[249.69255066 106.54039764]
[234.69285583 106.63657379]
[219.69316101 106.73274231]
[204.69346619 106.82891083]
[189.69378662 106.92507935]
[174.69409180 107.02125549]
[159.69439697 107.11742401]
[144.69470215 107.21359253]
[129.69500732 107.30976105]
[119.52356720 123.53841400]
[101.69431305 130.53450012]
[98.82693481 145.25788879]
[95.95954895 159.98127747]
[93.09217072 174.70466614]
[90.22479248 189.42805481]
[105.83544922 204.06748962]
[109.34039307 225.04168701]
[99.46482849 243.72076416]
[80.40519714 252.52053833]
[78.67795563 267.42074585]
[76.95071411 282.32098389]
[75.22347260 297.22119141]
[73.97469330 312.16912842]
[73.20566559 327.14941406]
[72.43663025 342.12966919]
[71.66759491 357.10995483]
[70.89856720 372.09020996]
[70.12953186 387.07049561]
[69.36050415 402.05078125]
[68.59146881 417.03103638]
[67.82243347 432.01132202]
[74.84204102 446.19003296]
[66.46240234 458.50387573]
[65.69337463 473.48413086]
[68.37416840 482.19216919]
[64.81722260 488.65121460]
[63.85616684 503.62039185]
[62.89511490 518.58953857]
[61.93405914 533.55871582]
[60.97300720 548.52795410]
[60.01195145 563.49713135]
[59.05089951 578.46630859]
[58.08984756 593.43548584]
[57.22478485 608.41052246]
[56.45575333 623.39074707]
[55.68672180 638.37103271]
[54.91769028 653.35131836]
[54.14865494 668.33160400]
[56.82945633 677.03961182]
[53.27250290 683.49865723]
[52.31145096 698.46783447]
[51.35039520 713.43701172]
[50.38934326 728.40618896]
[60.54821014 740.21447754]
[59.36032486 755.38165283]
[48.04034042 764.99383545]
[47.07928848 779.96301270]
[46.11823273 794.93218994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 244]
[7 243]
[8 242]
[11 239]
[12 238]
[13 237]
[14 236]
[15 234]
[16 233]
[17 232]
[18 231]
[19 230]
[21 229]
[22 228]
[23 227]
[24 226]
[25 225]
[26 224]
[27 223]
[28 222]
[29 220]
[30 219]
[32 217]
[33 216]
[34 215]
[35 214]
[36 213]
[37 212]
[38 211]
[39 210]
[40 209]
[46 208]
[47 207]
[48 206]
[49 205]
[59 201]
[60 200]
[61 199]
[62 198]
[63 197]
[67 149]
[68 148]
[69 147]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[77 102]
[78 101]
[79 100]
[82 98]
[83 97]
[84 96]
[85 95]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[117 128]
[118 127]
[119 126]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[157 164]
[158 163]
[172 195]
[173 194]
[174 193]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
