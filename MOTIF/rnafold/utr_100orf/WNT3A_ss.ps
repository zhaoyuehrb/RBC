%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGAGGGCCCAGCGACGCCGCCGCGCCAGCUCCCAGGGCCCGGCCCCCCCCGGCGCUCACGCUCUCGGGGCGGACUCCCGGCCCUCCGCGCCCUCUCGCGCGGCGAUGGCCCCACUCGGAUACUUCUUACUCCUCUGCAGCCUGAAGCAGGCUCUGGGCAGCUACCCGAUCUGGUGGUCGCUGGCUGUUGGGCCACAGUAUUCCU\
) } def
/len { sequence length } bind def

/coor [
[149.10079956 444.48037720]
[135.86854553 433.88113403]
[142.39051819 418.23187256]
[142.84356689 403.23870850]
[143.29661560 388.24554443]
[143.74964905 373.25238037]
[144.20269775 358.25924683]
[143.97615051 343.26095581]
[143.07048035 328.28829956]
[142.16479492 313.31567383]
[141.25912476 298.34304810]
[140.35343933 283.37042236]
[139.44776917 268.39776611]
[138.54208374 253.42514038]
[137.63641357 238.45251465]
[136.73072815 223.47987366]
[129.58738708 221.19459534]
[115.30067444 216.62402344]
[108.15732574 214.33874512]
[98.72926331 226.00543213]
[96.71607971 242.28053284]
[81.51138306 248.42459106]
[68.75646973 238.11711121]
[71.57249451 221.96154785]
[87.06256866 216.57736206]
[96.49063873 204.91067505]
[102.12606812 191.00953674]
[103.48355103 176.07109070]
[104.84103394 161.13262939]
[106.19851685 146.19418335]
[107.55599976 131.25573730]
[108.91348267 116.31729126]
[102.46178436 120.34912872]
[94.25861359 121.65364838]
[85.50865936 119.51396942]
[77.68862915 113.75498199]
[72.30413818 104.83660889]
[57.98332596 100.37406158]
[43.66251373 95.91151428]
[29.34169960 91.44897461]
[15.02088737 86.98642731]
[0.70007426 82.52388000]
[-14.77710915 85.80525208]
[-24.62623024 74.63188171]
[-38.94704437 70.16934204]
[-58.39084625 75.48340607]
[-70.87600708 60.72009277]
[-85.32506561 56.69211197]
[-100.69608307 60.43944168]
[-110.87818146 49.56864929]
[-125.32723999 45.54067230]
[-139.77630615 41.51269150]
[-154.22535706 37.48471451]
[-168.67442322 33.45673752]
[-183.12348938 29.42875862]
[-200.84474182 34.42866516]
[-212.63116455 21.42819595]
[-227.13940430 17.61890411]
[-242.80691528 22.46259308]
[-254.64987183 11.11903286]
[-250.48526001 -4.74249506]
[-234.59727478 -8.80500984]
[-223.33010864 3.11065507]
[-208.82186890 6.91994619]
[-198.22039795 1.09146869]
[-186.10105896 4.14804173]
[-179.09550476 14.97969723]
[-164.64645386 19.00767517]
[-150.19738770 23.03565216]
[-135.74832153 27.06363106]
[-121.29926300 31.09160805]
[-106.85019684 35.11958694]
[-92.51268005 31.08415031]
[-81.29708862 42.24304962]
[-66.84802246 46.27103043]
[-58.43276215 40.46974182]
[-47.99424744 40.25485611]
[-38.97563553 45.93880081]
[-34.48449707 55.84852600]
[-20.16368484 60.31107330]
[-5.71082211 56.71051025]
[5.16262007 68.20306396]
[19.48343277 72.66561127]
[33.80424500 77.12815857]
[48.12505722 81.59070587]
[62.44587326 86.05325317]
[76.76668549 90.51579285]
[87.76612854 80.31716156]
[84.39677429 65.70047760]
[81.02741241 51.08379364]
[77.65805054 36.46711349]
[74.28868866 21.85042953]
[70.91933441 7.23374653]
[57.38814545 -0.93219078]
[53.67549896 -16.29421616]
[61.98403931 -29.73830986]
[77.38446045 -33.28833389]
[90.73995972 -24.83811760]
[94.12696075 -9.40102768]
[85.53601074 3.86438656]
[88.90537262 18.48106956]
[92.27473450 33.09775162]
[95.64409637 47.71443558]
[99.01345062 62.33111572]
[102.38281250 76.94779968]
[108.91543579 80.63220978]
[116.28445435 67.56708527]
[129.34947205 74.93630219]
[121.98067474 88.00102997]
[128.51329041 91.68544006]
[142.76507568 87.00711060]
[157.01686096 82.32878113]
[171.26863098 77.65045929]
[185.48468018 72.86463165]
[199.66418457 67.97159576]
[213.84367371 63.07855225]
[225.58770752 48.89689255]
[242.67285156 52.90061951]
[256.77682495 47.79397964]
[270.88079834 42.68733978]
[284.98477173 37.58069992]
[284.34909058 29.48553276]
[285.21365356 21.41909409]
[287.54620361 13.65678883]
[291.26434326 6.46312523]
[296.23855591 0.08271106]
[302.29675293 -5.26807022]
[309.22998047 -9.40839481]
[316.79986572 -12.19910908]
[324.74679565 -13.54740429]
[332.79867554 -13.40990448]
[340.68032837 -11.79404926]
[348.12295532 -8.75775242]
[354.87319946 -4.40732908]
[360.70184326 1.10622656]
[365.41156006 7.59247923]
[368.84359741 14.82812977]
[383.59790039 12.12430477]
[398.35220337 9.42047882]
[413.10647583 6.71665335]
[427.77239990 3.56843710]
[442.33651733 -0.02129797]
[456.90063477 -3.61103296]
[471.46478271 -7.20076799]
[486.02890015 -10.79050255]
[500.59301758 -14.38023758]
[514.52490234 -24.04143524]
[527.66528320 -13.32849121]
[521.00860596 2.26398087]
[504.18276978 0.18388943]
[489.61862183 3.77362442]
[475.05450439 7.36335945]
[460.49038696 10.95309448]
[445.92626953 14.54282951]
[431.36212158 18.13256454]
[429.79803467 20.46155548]
[427.21606445 22.31055450]
[423.79467773 23.28837013]
[419.85073853 23.07567787]
[415.81030273 21.47095299]
[401.05603027 24.17477798]
[386.30172729 26.87860298]
[371.54742432 29.58242798]
[365.96270752 51.42566299]
[350.11920166 67.56030273]
[328.25195312 73.57733154]
[306.25476074 67.78521729]
[290.09143066 51.68467712]
[275.98745728 56.79131699]
[261.88345337 61.89795685]
[247.77949524 67.00460052]
[242.36561584 77.82365417]
[230.65524292 82.19272614]
[218.73672485 77.25804901]
[204.55722046 82.15109253]
[190.37771606 87.04412842]
[185.07897949 92.19886017]
[175.94696045 91.90223694]
[161.69519043 96.58056641]
[147.44340515 101.25888824]
[133.19161987 105.93721771]
[123.85193634 117.67477417]
[122.49444580 132.61322021]
[121.13696289 147.55166626]
[119.77947998 162.49011230]
[118.42199707 177.42857361]
[117.06451416 192.36701965]
[151.70336914 222.57420349]
[152.60903931 237.54682922]
[153.51472473 252.51947021]
[154.42039490 267.49209595]
[155.32608032 282.46472168]
[156.23175049 297.43737793]
[157.13743591 312.41000366]
[158.04310608 327.38262939]
[158.94879150 342.35525513]
[169.69126892 331.88632202]
[184.69117737 331.93984985]
[195.35864258 342.48522949]
[195.58485413 357.48352051]
[185.24024963 368.34582520]
[170.24877930 368.85168457]
[159.19586182 358.71228027]
[158.74281311 373.70544434]
[158.28976440 388.69857788]
[157.83671570 403.69174194]
[157.38368225 418.68490601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 207]
[4 206]
[5 205]
[6 204]
[7 203]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[16 188]
[19 26]
[20 25]
[27 187]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[37 87]
[38 86]
[39 85]
[40 84]
[41 83]
[42 82]
[44 80]
[45 79]
[47 75]
[48 74]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[57 64]
[58 63]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[110 181]
[111 180]
[112 179]
[113 178]
[114 176]
[115 175]
[116 174]
[118 171]
[119 170]
[120 169]
[121 168]
[137 163]
[138 162]
[139 161]
[140 160]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
