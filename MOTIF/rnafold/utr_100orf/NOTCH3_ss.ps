%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGCGGAGGCUGGCCCGGGACGCGCCCGGAGCCCAGGGAAGGAGGGAGGAGGGGAGGGUCGCGGCCGGCCGCCAUGGGGCCGGGGGCCCGUGGCCGCCGCCGCCGCCGUCGCCCGAUGUCGCCGCCACCGCCACCGCCACCCGUGCGGGCGCUGCCCCUGCUGCUGCUGCUAG\
) } def
/len { sequence length } bind def

/coor [
[118.44773102 317.90332031]
[116.85332489 302.98831177]
[115.25892639 288.07327271]
[113.66452026 273.15826416]
[112.07012177 258.24325562]
[110.34341431 243.34295654]
[108.48455048 228.45858765]
[106.62568665 213.57420349]
[104.76682281 198.68983459]
[95.51194000 187.01950073]
[101.47942352 172.36686707]
[99.62055969 157.48249817]
[97.76168823 142.59811401]
[83.76338959 139.44593811]
[71.60226440 131.83045959]
[59.80398941 141.09333801]
[48.00571823 150.35620117]
[36.29011154 159.72340393]
[24.65809631 169.19421387]
[13.02608013 178.66502380]
[1.39406383 188.13583374]
[-10.23795223 197.60664368]
[-13.29623413 213.35549927]
[-27.58213425 220.65567017]
[-42.13673401 213.90710449]
[-45.79498672 198.28671265]
[-35.75059891 185.77711487]
[-19.70875931 185.97462463]
[-8.07674408 176.50381470]
[3.55527163 167.03300476]
[15.18728733 157.56219482]
[26.81930351 148.09140015]
[30.03107262 141.40893555]
[38.74284744 138.55792236]
[50.54112244 129.29505920]
[62.33939362 120.03218842]
[58.80283737 111.06361389]
[57.37055969 101.52993011]
[58.11572266 91.91809845]
[61.00026321 82.71907806]
[65.87684631 74.40273285]
[72.49637604 67.39385986]
[80.52075195 62.05044556]
[89.54008484 58.64543533]
[88.47603607 43.68322372]
[79.77928925 30.46667480]
[86.59426117 17.22260666]
[85.53021240 2.26039386]
[84.33341980 -12.69178677]
[83.00398254 -27.63275719]
[68.38545990 -36.11159134]
[61.75631714 -51.47594070]
[65.54214478 -67.60505676]
[78.06162262 -78.20083618]
[76.46722412 -93.11585999]
[74.87281799 -108.03088379]
[73.14611816 -122.93116760]
[71.28725433 -137.81553650]
[61.89941788 -150.55050659]
[67.99985504 -164.13850403]
[66.14099121 -179.02287292]
[64.28212738 -193.90725708]
[54.89429092 -206.64221191]
[60.99472809 -220.23022461]
[59.13586426 -235.11459351]
[57.27699661 -249.99896240]
[55.41813278 -264.88333130]
[53.55926514 -279.76773071]
[49.37883759 -287.92538452]
[51.80191803 -294.93246460]
[50.20751572 -309.84747314]
[48.61311340 -324.76251221]
[39.45277786 -337.66207886]
[45.79341888 -351.13967896]
[44.19901657 -366.05468750]
[42.60461426 -380.96972656]
[41.01021194 -395.88473511]
[39.41580963 -410.79974365]
[37.82140732 -425.71478271]
[36.22700500 -440.62979126]
[34.63260269 -455.54483032]
[30.59761429 -463.77539062]
[33.14467621 -470.73837280]
[31.81523895 -485.67935181]
[24.38888550 -500.92025757]
[36.97836304 -512.27551270]
[51.37494659 -503.32147217]
[46.75621033 -487.00878906]
[48.08564758 -472.06781006]
[49.54762268 -457.13922119]
[51.14202499 -442.22421265]
[52.73642731 -427.30917358]
[54.33082962 -412.39416504]
[55.92523193 -397.47912598]
[57.51963425 -382.56411743]
[59.11403656 -367.64910889]
[60.70843887 -352.73406982]
[69.75473022 -340.90133667]
[63.52813339 -326.35690308]
[65.12253571 -311.44189453]
[66.71694183 -296.52685547]
[68.44364166 -281.62658691]
[70.30250549 -266.74221802]
[72.16136932 -251.85783386]
[74.02024078 -236.97346497]
[75.87910461 -222.08908081]
[85.13397980 -210.41876221]
[79.16650391 -195.76611328]
[81.02536774 -180.88174438]
[82.88423157 -165.99737549]
[92.13910675 -154.32704163]
[86.17163086 -139.67440796]
[88.03049469 -124.79003143]
[91.99185181 -118.52278900]
[89.78784180 -109.62528229]
[91.38224792 -94.71026611]
[92.97664642 -79.79524231]
[105.13233948 -74.23264313]
[113.00882721 -63.29771423]
[114.45719910 -49.79045868]
[108.99172974 -37.23545837]
[97.94495392 -28.96219254]
[99.27439117 -14.02122307]
[103.01082611 -7.61733723]
[100.49242401 1.19634151]
[101.55647278 16.15855408]
[110.17711639 28.30490303]
[103.43824768 42.61917114]
[104.50230408 57.58138275]
[126.03443146 66.20919800]
[139.86799622 84.82919312]
[141.91229248 107.93531036]
[155.93026733 113.27352905]
[169.94822693 118.61174774]
[183.96620178 123.94996643]
[198.24761963 117.73073578]
[212.38778687 123.34413147]
[218.22886658 136.99761963]
[232.24682617 142.33583069]
[246.26480103 147.67404175]
[261.43286133 142.44816589]
[274.89794922 151.17002869]
[276.33081055 167.14897156]
[264.63226318 178.12730408]
[248.77645874 175.68341064]
[240.92658997 161.69201660]
[226.90861511 156.35380554]
[212.89064026 151.01557922]
[199.44732666 157.32531738]
[185.15507507 152.11129761]
[178.62799072 137.96792603]
[164.61001587 132.62971497]
[150.59204102 127.29149628]
[136.57408142 121.95327759]
[130.21508789 130.11076355]
[122.07965088 136.49792480]
[112.64606476 140.73925781]
[114.50492859 155.62362671]
[116.36380005 170.50801086]
[125.75163269 183.24296570]
[119.65119171 196.83096313]
[121.51006317 211.71534729]
[123.36892700 226.59971619]
[125.22779083 241.48408508]
[129.40821838 249.64173889]
[126.98513794 256.64883423]
[128.57954407 271.56387329]
[130.17395020 286.47888184]
[131.76834106 301.39389038]
[133.36274719 316.30892944]
[146.44242859 324.87957764]
[150.90342712 339.86734009]
[144.63938904 354.19549561]
[130.60800171 361.09869385]
[115.43446350 357.31747437]
[106.28324890 344.63720703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[3 168]
[4 167]
[5 166]
[6 164]
[7 163]
[8 162]
[9 161]
[11 159]
[12 158]
[13 157]
[15 36]
[16 35]
[17 34]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[44 129]
[45 128]
[47 126]
[48 125]
[49 123]
[50 122]
[54 117]
[55 116]
[56 115]
[57 113]
[58 112]
[60 110]
[61 109]
[62 108]
[64 106]
[65 105]
[66 104]
[67 103]
[68 102]
[70 101]
[71 100]
[72 99]
[74 97]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[83 89]
[84 88]
[132 154]
[133 153]
[134 152]
[135 151]
[138 148]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
