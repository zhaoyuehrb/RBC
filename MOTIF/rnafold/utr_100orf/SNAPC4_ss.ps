%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGAGUCAUGGAUGUAGAUGCUGAAAGAGAGAAGAUAACACAGGAGAUCAAGGAGCUGGAAAGGAUUUUGGAUCCCGGCUCCUCGGGCUCCCACGUGGAGAUCUCAG\
) } def
/len { sequence length } bind def

/coor [
[-36.86335373 257.78280640]
[-52.35523224 253.43664551]
[-62.80929565 264.19363403]
[-73.26335907 274.95059204]
[-73.88465881 287.93136597]
[-82.93887329 296.68347168]
[-95.12766266 296.85186768]
[-105.88463593 307.30593872]
[-116.64161682 317.75997925]
[-113.47717285 332.85931396]
[-118.99974060 347.26434326]
[-131.44706726 356.37847900]
[-146.84727478 357.29342651]
[-160.28620911 349.71722412]
[-167.47555542 336.06744385]
[-166.12120056 320.69964600]
[-156.65534973 308.51763916]
[-142.09849548 303.40869141]
[-127.09568024 307.00302124]
[-116.33869934 296.54895020]
[-105.58172607 286.09487915]
[-101.79742432 269.02438354]
[-84.02033234 264.49655151]
[-73.56626892 253.73956299]
[-63.11220932 242.98258972]
[-67.70584106 230.03681946]
[-66.23462677 216.31239319]
[-58.93141556 204.52143860]
[-47.18724442 197.01902771]
[-33.28668594 195.33288574]
[-19.96352959 199.85258484]
[-9.20655346 189.39852905]
[1.55042374 178.94445801]
[12.30740070 168.49040222]
[7.87466431 156.48666382]
[8.36485481 143.65287781]
[13.73957825 131.93664551]
[23.21646690 123.12966919]
[35.38286591 118.59387207]
[48.40634155 119.05078888]
[60.31067276 124.46707916]
[71.64691925 114.64416504]
[82.98316193 104.82125092]
[88.04073334 86.96952057]
[106.25978088 83.45816040]
[117.01676178 73.00409698]
[127.77373505 62.55003357]
[138.53071594 52.09597015]
[143.03483582 36.92944717]
[157.55438232 33.60799789]
[168.31137085 23.15393448]
[172.81549072 7.98741150]
[187.33503723 4.66596174]
[198.09201050 -5.78810167]
[208.84899902 -16.24216461]
[219.60597229 -26.69622803]
[230.36294556 -37.15029144]
[241.11991882 -47.60435486]
[251.87690735 -58.05841827]
[262.63388062 -68.51248169]
[273.39086914 -78.96654510]
[274.47863770 -83.52871704]
[276.79989624 -87.07688904]
[279.85147095 -89.33675385]
[283.09298706 -90.23872375]
[286.02145386 -89.91101074]
[297.89999390 -99.07073212]
[309.77850342 -108.23045349]
[321.65704346 -117.39016724]
[330.50790405 -131.85041809]
[346.85321045 -127.34844208]
[347.05200195 -110.39566040]
[330.81677246 -105.51163483]
[318.93823242 -96.35191345]
[307.05969238 -87.19219971]
[295.18115234 -78.03247833]
[283.84490967 -68.20957184]
[273.08795166 -57.75550461]
[262.33096313 -47.30144119]
[251.57398987 -36.84737778]
[240.81701660 -26.39331627]
[230.06002808 -15.93925190]
[219.30305481 -5.48518848]
[208.54608154 4.96887541]
[197.78910828 15.42293835]
[194.05438232 29.84171677]
[178.76542664 33.91091156]
[168.00845337 44.36497498]
[164.27374268 58.78375244]
[148.98477173 62.85294724]
[138.22779846 73.30701447]
[127.47082520 83.76107788]
[116.71384430 94.21514130]
[117.14762878 104.33316040]
[111.95926666 113.03047943]
[102.84985352 117.45553589]
[92.80606842 116.15750122]
[81.46982574 125.98040771]
[70.13358307 135.80331421]
[73.88842010 152.83947754]
[68.61155701 169.37493896]
[55.81293869 180.96870422]
[39.01005173 184.55360413]
[22.76146507 179.24737549]
[12.00448704 189.70144653]
[1.24751019 200.15550232]
[-9.50946712 210.60957336]
[-5.28859377 226.52276611]
[-9.60168266 242.31445312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 25]
[3 24]
[4 23]
[7 21]
[8 20]
[9 19]
[31 107]
[32 106]
[33 105]
[34 104]
[41 99]
[42 98]
[43 97]
[45 93]
[46 92]
[47 91]
[48 90]
[50 88]
[51 87]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[61 77]
[66 76]
[67 75]
[68 74]
[69 73]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
