%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAAGUGGUUCUCCGCCCCUGCCACUGGGCCAUGGAGACUGUGGCACAGUAGACUGUAGUGUGAGGCUCGCGGGGGCAGUGGCCAUGGAGGCCGUGCUGAACGAGCUGGUGUCUGUGGAGGACCUGCUGAAGUUUGAAAAGAAAUUUCAGUCUGAGAAGGCAGCAGGCUCGGUGUCCAAGAGCA\
) } def
/len { sequence length } bind def

/coor [
[49.99583435 174.65635681]
[35.00644684 175.22044373]
[21.59375381 168.50482178]
[13.06505680 156.16539001]
[11.52335739 141.24482727]
[17.34880638 127.42223358]
[29.10496712 118.10597992]
[43.89301300 115.59325409]
[58.06549072 120.50298309]
[46.56583023 110.87189484]
[35.06616974 101.24081421]
[23.56650734 91.60972595]
[12.06684685 81.97864532]
[0.56718594 72.34755707]
[-10.93247509 62.71647263]
[-22.43213463 53.08538437]
[-36.12847519 46.96899414]
[-50.97579575 44.83427048]
[-65.82312012 42.69954681]
[-80.58396149 48.39412308]
[-92.08055115 38.92429733]
[-106.92787170 36.78957748]
[-121.77519226 34.65485382]
[-136.62251282 32.52013016]
[-151.46983337 30.38540840]
[-166.44390869 31.26689720]
[-180.93821716 35.12889481]
[-195.43252563 38.99089432]
[-209.92683411 42.85289001]
[-221.26966858 53.88242722]
[-235.55996704 49.68281937]
[-250.05427551 53.54481506]
[-264.54858398 57.40681458]
[-279.04290771 61.26881027]
[-293.53720093 65.13080597]
[-308.03152466 68.99280548]
[-322.52581787 72.85480499]
[-336.27423096 82.77535248]
[-349.61303711 72.31050110]
[-343.24969482 56.59603882]
[-326.38781738 58.36049652]
[-311.89352417 54.49849701]
[-297.39920044 50.63650131]
[-282.90490723 46.77450180]
[-268.41058350 42.91250610]
[-253.91627502 39.05050659]
[-239.42196655 35.18851089]
[-229.11585999 24.43520927]
[-213.78883362 28.35858154]
[-199.29452515 24.49658394]
[-184.80021667 20.63458633]
[-170.30590820 16.77258873]
[-168.92779541 9.40029144]
[-180.31887817 -0.35896048]
[-166.17155457 -5.34430552]
[-164.79342651 -12.71660328]
[-176.91384888 -21.55375671]
[-189.03427124 -30.39091110]
[-201.15470886 -39.22806549]
[-213.34893799 -47.96309662]
[-225.61610413 -56.59539032]
[-237.88327026 -65.22768402]
[-253.87182617 -63.90637589]
[-264.76824951 -75.68124390]
[-262.21374512 -91.51961517]
[-248.16790771 -99.27165222]
[-233.40550232 -92.99064636]
[-229.25097656 -77.49485779]
[-216.98381042 -68.86256409]
[-204.71664429 -60.23026657]
[-197.42182922 -58.94947815]
[-192.31755066 -51.34849167]
[-180.19712830 -42.51133728]
[-168.07670593 -33.67418289]
[-155.95626831 -24.83702850]
[-144.15098572 -2.89230371]
[-149.33511353 15.53808594]
[-134.48779297 17.67280960]
[-119.64047241 19.80753136]
[-104.79315186 21.94225311]
[-89.94583130 24.07697678]
[-76.24697113 18.22970963]
[-63.68839645 27.85222626]
[-48.84107590 29.98694801]
[-33.99375153 32.12166977]
[-33.81697083 27.46954536]
[-31.34640884 22.72615814]
[-26.87923622 8.40678787]
[-22.41206360 -5.91258287]
[-17.94489288 -20.23195267]
[-13.47771931 -34.55132294]
[-16.75408745 -50.02956772]
[-5.57754230 -59.87507629]
[-1.11036980 -74.19445038]
[3.35680246 -88.51381683]
[7.82397461 -102.83319092]
[7.39346313 -111.97886658]
[12.48833561 -117.35445404]
[17.19543076 -131.59675598]
[21.90252686 -145.83906555]
[16.00471687 -160.75869751]
[24.11676788 -174.59973145]
[40.01580811 -176.74450684]
[51.50545502 -165.54774475]
[49.77183533 -149.59863281]
[36.14483261 -141.13197327]
[31.43773651 -126.88966370]
[26.73064041 -112.64736176]
[22.14334488 -98.36602020]
[17.67617226 -84.04664612]
[13.20900059 -69.72727203]
[8.74182796 -55.40790558]
[12.33771896 -40.95388031]
[0.84165078 -30.08415222]
[-3.62552142 -15.76478100]
[-8.09269333 -1.44541061]
[-12.55986595 12.87395954]
[-17.02703857 27.19333076]
[-12.80105019 41.58572388]
[-1.30138934 51.21681213]
[10.19827080 60.84789658]
[21.69793129 70.47898102]
[33.19759369 80.11006927]
[44.69725418 89.74114990]
[56.19691467 99.37223816]
[67.69657135 109.00331879]
[82.51368713 71.12363434]
[123.25305939 75.21986389]
[138.25253296 75.34586334]
[153.25199890 75.47186279]
[168.25148010 75.59786224]
[183.25094604 75.72386169]
[198.25041199 75.84986115]
[213.24987793 75.97586060]
[228.24935913 76.10185242]
[243.24882507 76.22785187]
[258.24829102 76.35385132]
[269.33993530 65.09548187]
[285.14419556 65.06114197]
[296.28466797 76.27120209]
[296.15191650 92.07493591]
[284.82470703 103.09626770]
[269.02325439 102.79643250]
[258.12231445 91.35332489]
[243.12283325 91.22732544]
[228.12335205 91.10132599]
[213.12388611 90.97532654]
[198.12442017 90.84932709]
[183.12493896 90.72332764]
[168.12547302 90.59733582]
[153.12600708 90.47133636]
[138.12652588 90.34533691]
[123.12705994 90.21933746]
[118.30049896 104.42160034]
[130.27075195 113.46112061]
[142.24101257 122.50064087]
[157.85714722 120.06922150]
[170.56924438 129.45956421]
[172.83541870 145.10052490]
[163.31120300 157.71263123]
[147.64715576 159.81330872]
[135.13645935 150.15629578]
[133.20149231 134.47090149]
[121.23123932 125.43138123]
[109.26097870 116.39186096]
[103.20076752 120.81044006]
[104.79405975 135.72557068]
[91.08033752 129.64758301]
[85.02012634 134.06616211]
[89.96582031 148.22738647]
[94.91150665 162.38861084]
[99.85720062 176.54981995]
[114.88344574 180.04489136]
[125.61834717 191.12484741]
[128.63644409 206.25411987]
[122.97467041 220.60499573]
[110.43967438 229.59817505]
[95.03132629 230.36398315]
[81.66638184 222.65802002]
[74.60953522 208.93925476]
[76.11260986 193.58529663]
[85.69597626 181.49551392]
[80.75028992 167.33430481]
[75.80459595 153.17308044]
[70.85890961 139.01185608]
[70.44299316 154.00608826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 126]
[10 125]
[11 124]
[12 123]
[13 122]
[14 121]
[15 120]
[16 119]
[17 85]
[18 84]
[19 83]
[21 81]
[22 80]
[23 79]
[24 78]
[25 77]
[26 52]
[27 51]
[28 50]
[29 49]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[56 75]
[57 74]
[58 73]
[59 72]
[60 70]
[61 69]
[62 68]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[93 112]
[94 111]
[95 110]
[96 109]
[98 108]
[99 107]
[100 106]
[128 153]
[129 152]
[130 151]
[131 150]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
[154 165]
[155 164]
[156 163]
[169 185]
[170 184]
[171 183]
[172 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
