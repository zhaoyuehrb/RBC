%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAUUUCUGAUGAAACUGGAUUGGAAUAAUUUUCAUGAUCUUUGUAUAUUUAUAUAUAUAUAUUUUUAAAUUUUGCAUUUGACUUAAAGUGCCAUGAGAAAAUUUGCAUACUGCAAGGUGGUCCUAGCCACCUCCUUGAUUUGGGUACUCUUGGAUAUGUUCCUGCUGCUUUACUUCAGUGAAUGCAACAAAU\
) } def
/len { sequence length } bind def

/coor [
[99.29269409 182.89288330]
[98.32671356 167.92401123]
[91.83390045 166.52471924]
[85.59658051 164.51519775]
[79.67105865 161.93176270]
[74.10899353 158.81582642]
[66.50459290 171.74537659]
[58.90019608 184.67491150]
[51.29579926 197.60446167]
[43.69140244 210.53401184]
[36.08700180 223.46354675]
[28.48260498 236.39309692]
[34.80280304 250.56471252]
[31.55315399 265.73770142]
[19.98321533 276.07772827]
[4.54186535 277.60885620]
[-8.83338261 269.74230957]
[-14.99947262 255.50296021]
[-11.58541775 240.36613464]
[0.09600890 230.15222168]
[15.55306053 228.78869629]
[23.15745735 215.85916138]
[30.76185608 202.92961121]
[38.36625290 190.00006104]
[45.97064972 177.07052612]
[53.57505035 164.14097595]
[61.17944717 151.21142578]
[46.31446457 135.32009888]
[37.60502625 115.37898254]
[36.04975128 93.67452240]
[41.82696915 72.69534302]
[29.08494949 64.78073883]
[16.34293175 56.86613464]
[3.60091233 48.95153046]
[-9.14110661 41.03692627]
[-21.88312531 33.12232208]
[-34.62514496 25.20771980]
[-47.36716461 17.29311562]
[-49.10737228 23.01734161]
[-52.76277542 28.53192139]
[-58.28753281 33.28945160]
[-65.49234772 36.75919724]
[-74.05070496 38.46261215]
[-83.51351929 38.00671005]
[-98.33817291 35.71988297]
[-113.16283417 33.43305588]
[-127.98748779 31.14623070]
[-142.81214905 28.85940361]
[-157.63679504 26.57257843]
[-172.46145630 24.28575134]
[-185.06013489 33.82769775]
[-200.70428467 31.58352661]
[-210.11248779 18.88466644]
[-207.70304871 3.26512241]
[-194.90542603 -6.00830412]
[-179.31222534 -3.43385506]
[-170.17462158 9.46109486]
[-155.34997559 11.74792194]
[-140.52531433 14.03474808]
[-125.70066071 16.32157516]
[-110.87600708 18.60840225]
[-96.05134583 20.89522934]
[-81.22669220 23.18205452]
[-76.67297363 17.22272301]
[-88.59163666 8.11528492]
[-100.51030731 -0.99215275]
[-112.42897034 -10.09959030]
[-124.34763336 -19.20702744]
[-136.26614380 -28.31466293]
[-127.15831757 -40.23302460]
[-115.24019623 -31.12569237]
[-103.32153320 -22.01825523]
[-91.40287018 -12.91081810]
[-79.48419952 -3.80338025]
[-67.56553650 5.30405712]
[-63.01181793 -0.65527529]
[-69.11286926 -14.35845757]
[-75.21391296 -28.06163979]
[-81.31496429 -41.76482010]
[-87.41601562 -55.46800232]
[-93.51706696 -69.17118835]
[-108.35960388 -74.60023499]
[-114.94007111 -88.96940613]
[-109.35440063 -103.75371552]
[-94.91646576 -110.18190002]
[-80.19203949 -104.44022369]
[-73.91686249 -89.93513489]
[-79.81388092 -75.27223206]
[-73.71283722 -61.56905365]
[-67.61178589 -47.86587143]
[-61.51073456 -34.16268921]
[-55.40968323 -20.45950699]
[-49.30863571 -6.75632477]
[-39.45256042 4.55109644]
[-26.71054077 12.46570015]
[-13.96852207 20.38030434]
[-1.22650313 28.29490662]
[11.51551628 36.20951080]
[24.25753403 44.12411499]
[36.99955368 52.03871918]
[49.74157333 59.95332336]
[61.16181946 44.16765213]
[77.59219360 31.82612228]
[97.93552399 24.51635933]
[120.59685516 23.46118927]
[143.60791016 29.36523247]
[149.92892456 15.76211739]
[156.24993896 2.15900230]
[162.57095337 -11.44411278]
[163.76231384 -28.35614967]
[180.34323120 -31.89307022]
[188.33197021 -16.93926430]
[176.17407227 -5.12309647]
[169.85305786 8.48001862]
[163.53204346 22.08313370]
[157.21102905 35.68624878]
[168.98141479 44.98451614]
[180.75181580 35.68624878]
[192.52221680 26.38798332]
[204.29261780 17.08971786]
[216.06301880 7.79145241]
[227.83340454 -1.50681341]
[239.60380554 -10.80507946]
[245.15922546 -26.23457527]
[261.34497070 -28.87149048]
[271.51055908 -16.00319099]
[265.19848633 -0.86748189]
[248.90206909 0.96531808]
[237.13166809 10.26358414]
[225.36128235 19.56184959]
[213.59088135 28.86011505]
[201.82048035 38.15838242]
[190.05007935 47.45664597]
[178.27969360 56.75491333]
[184.49092102 70.40850830]
[199.23420715 67.64527893]
[213.97749329 64.88204956]
[222.69494629 51.69941330]
[238.19709778 48.62395096]
[251.28683472 57.48027802]
[254.19822693 73.01409149]
[245.20399475 86.00945282]
[229.64027405 88.75645447]
[216.74072266 79.62533569]
[201.99743652 82.38856506]
[187.25415039 85.15179443]
[186.41012573 92.60414886]
[201.31484985 94.29219055]
[216.21955872 95.98023987]
[228.28358459 104.89423370]
[214.53150940 110.88494873]
[199.62680054 109.19690704]
[184.72209167 107.50886536]
[183.87806702 114.96121979]
[197.62994385 120.95169067]
[211.38183594 126.94216156]
[226.77850342 122.43418121]
[239.81925964 131.77861023]
[240.50033569 147.80718994]
[228.29928589 158.22418213]
[212.57568359 155.03855896]
[205.39135742 140.69404602]
[191.63948059 134.70356750]
[177.88760376 128.71310425]
[169.60523987 137.87944031]
[160.37915039 145.29129028]
[150.53648376 150.87811279]
[140.40365601 154.62614441]
[148.21536255 167.43150330]
[156.02706909 180.23686218]
[163.94168091 192.97888184]
[171.95866394 205.65673828]
[179.97564697 218.33457947]
[187.99264526 231.01243591]
[196.00962830 243.69029236]
[210.77389526 250.82809448]
[211.70449829 267.20080566]
[197.84410095 275.96560669]
[183.45109558 268.10598755]
[183.33177185 251.70727539]
[175.31478882 239.02941895]
[167.29780579 226.35157776]
[159.28082275 213.67372131]
[151.26382446 200.99586487]
[145.02339172 197.01748657]
[143.22171021 188.04856873]
[135.41000366 175.24320984]
[127.59830475 162.43785095]
[113.29557800 166.95803833]
[114.26155853 181.92691040]
[125.31506348 193.55444336]
[122.97340393 209.42567444]
[109.03289032 217.36555481]
[94.18750000 211.28329468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[31 101]
[32 100]
[33 99]
[34 98]
[35 97]
[36 96]
[37 95]
[38 94]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[106 116]
[107 115]
[108 114]
[109 113]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[135 146]
[136 145]
[137 144]
[154 164]
[155 163]
[156 162]
[168 188]
[169 187]
[170 186]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
