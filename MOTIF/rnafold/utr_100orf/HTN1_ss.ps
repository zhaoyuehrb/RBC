%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGCCAUAUAGAAAAGGACAUCUCUUGAGACUUCACUUCAGCUUCACUGACUUCUUGACUCUCCUCUUGAGUAAAAGGACUCAGCCAACUAUGAAGUUUUUUGUCUUUGCUUUAGUCUUGGCUCUCAUGAUUUCCAUGAUUAGCGCUGAUUCACAUGAAAAGAGACAUCAUGGGUAUAGAAGAAAAUUCC\
) } def
/len { sequence length } bind def

/coor [
[136.30967712 179.02047729]
[150.97563171 182.16845703]
[164.28718567 189.07698059]
[155.66703796 176.80125427]
[147.04690552 164.52554321]
[138.42677307 152.24981689]
[129.80664062 139.97410583]
[121.18650055 127.69838715]
[113.66787720 131.48782349]
[105.58462524 133.31556702]
[97.43159485 133.13510132]
[89.69239807 131.02093506]
[82.81081390 127.16037750]
[77.16529083 121.83884430]
[73.04827881 115.41962433]
[70.65135193 108.31949615]
[70.05695343 100.98194885]
[71.23698425 93.84951782]
[74.05820465 87.33714294]
[62.75078583 77.48106384]
[51.44336319 67.62499237]
[40.13594055 57.76891708]
[28.82851982 47.91284180]
[15.55053997 55.18749619]
[0.61286062 57.47610474]
[-14.17871380 54.52152252]
[-27.04271698 46.69927979]
[-36.43657303 34.96995926]
[-41.24157333 20.76128387]
[-40.89606094 5.79432917]
[-35.46103668 -8.12493134]
[-46.76845932 -17.98100662]
[-58.07588196 -27.83708191]
[-69.38330078 -37.69315720]
[-80.69072723 -47.54923248]
[-98.22211456 -42.96574402]
[-114.85353088 -49.75436020]
[-124.00843048 -65.02716064]
[-122.18907166 -82.58252716]
[-133.80815125 -92.06920624]
[-145.42721558 -101.55588531]
[-157.04629517 -111.04256439]
[-168.66537476 -120.52925110]
[-180.28443909 -130.01593018]
[-194.38955688 -122.31179047]
[-210.33259583 -120.61165619]
[-225.67126465 -125.14623260]
[-238.06724548 -135.19343567]
[-245.64263916 -149.19314575]
[-247.26446533 -164.98947144]
[-242.71397400 -180.16262817]
[-254.48437500 -189.46089172]
[-266.25476074 -198.75917053]
[-278.02517700 -208.05743408]
[-293.65029907 -210.54052734]
[-298.84106445 -224.50137329]
[-310.61148071 -233.79963684]
[-322.38186646 -243.09791565]
[-334.15225220 -252.39617920]
[-345.92266846 -261.69442749]
[-364.19500732 -263.92507935]
[-370.05279541 -280.46154785]
[-381.97146606 -289.56896973]
[-393.89013672 -298.67642212]
[-405.80877686 -307.78384399]
[-421.02832031 -304.19219971]
[-434.97250366 -311.26986694]
[-441.05734253 -325.67504883]
[-436.40975952 -340.60601807]
[-423.22418213 -349.01284790]
[-407.72644043 -346.92608643]
[-397.23413086 -335.33102417]
[-396.70135498 -319.70251465]
[-384.78268433 -310.59509277]
[-372.86401367 -301.48764038]
[-360.94537354 -292.38021851]
[-348.90939331 -293.67050171]
[-338.90316772 -286.16897583]
[-336.62438965 -273.46484375]
[-324.85400391 -264.16656494]
[-313.08358765 -254.86830139]
[-301.31320190 -245.57003784]
[-289.54281616 -236.27177429]
[-274.75958252 -234.45375061]
[-268.72689819 -219.82781982]
[-256.95651245 -210.52955627]
[-245.18611145 -201.23129272]
[-233.41571045 -191.93302917]
[-221.42778015 -199.24191284]
[-207.63529968 -202.02362061]
[-193.69247437 -199.92372131]
[-181.27864075 -193.17449951]
[-171.89599609 -182.56947327]
[-166.68789673 -169.37010193]
[-166.29945374 -155.15582275]
[-170.79776001 -141.63500977]
[-159.17869568 -132.14833069]
[-147.55961609 -122.66164398]
[-135.94053650 -113.17496490]
[-124.32146454 -103.68827820]
[-112.70239258 -94.20159912]
[-101.53766632 -99.00662994]
[-89.31735229 -98.60116577]
[-78.36707306 -93.00087738]
[-70.79689789 -83.21586609]
[-68.09483337 -71.06904602]
[-70.83464813 -58.85665512]
[-59.52722549 -49.00057983]
[-48.21980667 -39.14450455]
[-36.91238403 -29.28842926]
[-25.60496330 -19.43235397]
[-12.55796623 -26.71666336]
[2.22170401 -29.10213280]
[16.95331001 -26.28179550]
[29.85521126 -18.57709503]
[39.36033630 -6.90136433]
[44.30650711 7.34839439]
[44.07852173 22.45865631]
[38.68459702 36.60541916]
[49.99201584 46.46149445]
[61.29943848 56.31756973]
[72.60685730 66.17364502]
[83.91428375 76.02972412]
[111.02313232 70.09728241]
[133.57698059 90.58435822]
[147.84283447 85.94909668]
[162.10868835 81.31384277]
[174.10092163 67.34814453]
[191.10922241 71.64760590]
[205.29853821 66.78312683]
[219.48786926 61.91865540]
[233.67718506 57.05417633]
[247.86651611 52.18970108]
[256.18179321 38.46980286]
[272.11074829 36.55972290]
[283.43402100 47.92471313]
[281.46536255 63.84652328]
[267.71499634 72.11130524]
[252.73098755 66.37902069]
[238.54167175 71.24349976]
[224.35234070 76.10797882]
[210.16302490 80.97245026]
[195.97369385 85.83692932]
[190.37052917 96.56694794]
[178.57826233 100.73107910]
[166.74394226 95.57969666]
[152.47808838 100.21495056]
[138.21224976 104.85020447]
[133.46221924 119.07824707]
[142.08235168 131.35397339]
[150.70249939 143.62968445]
[159.32263184 155.90541077]
[167.94276428 168.18112183]
[176.56289673 180.45684814]
[181.99717712 182.03262329]
[186.10061646 185.24302673]
[188.47433472 189.37402344]
[189.04052734 193.65866089]
[200.81092834 202.95692444]
[212.58131409 212.25518799]
[224.35171509 221.55345154]
[236.12211609 230.85173035]
[250.67829895 225.74082947]
[265.68157959 229.33317566]
[276.34448242 240.48243713]
[279.26449585 255.63093567]
[273.50988770 269.94482422]
[260.91690063 278.85662842]
[245.50390625 279.52258301]
[232.18916321 271.73022461]
[225.22134399 257.96603394]
[226.82385254 242.62211609]
[215.05345154 233.32385254]
[203.28305054 224.02558899]
[191.51264954 214.72732544]
[179.74226379 205.42906189]
[185.89030457 219.11122131]
[188.20608521 233.93138123]
[186.52508545 248.83688354]
[180.96672058 262.76904297]
[171.92579651 274.73822021]
[160.04447937 283.89431763]
[146.16665649 289.58697510]
[131.27807617 291.41183472]
[116.43624115 289.23928833]
[102.69534302 283.22366333]
[91.03138733 273.79223633]
[82.27283478 261.61486816]
[77.04180145 247.55656433]
[75.70983887 232.61581421]
[78.37155151 217.85386658]
[84.83788300 204.31921387]
[94.64954376 192.97323608]
[107.10961151 184.62179565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[19 123]
[20 122]
[21 121]
[22 120]
[23 119]
[31 111]
[32 110]
[33 109]
[34 108]
[35 107]
[39 101]
[40 100]
[41 99]
[42 98]
[43 97]
[44 96]
[51 88]
[52 87]
[53 86]
[54 85]
[56 83]
[57 82]
[58 81]
[59 80]
[60 79]
[62 76]
[63 75]
[64 74]
[65 73]
[125 148]
[126 147]
[127 146]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
