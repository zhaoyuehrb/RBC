%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUUGGCCACCUGCCCAAGAAACUUGUUGGUUGUUGCCCUCAGGUCGCUCCCGGGCGGGGACACGGAACCCGGCCAUGGAAGAUCCGUCGGGGGCUCGCGAGCCCCGGGCCCGGCCGAGAGAGCGGGACCCGGGACGGCGCCCCCACCCAGACCAAGGCCGCACCCACGAUCGAC\
) } def
/len { sequence length } bind def

/coor [
[135.97802734 255.18344116]
[133.60536194 240.37228394]
[131.23269653 225.56112671]
[119.05426788 217.06280518]
[116.43706512 202.07598877]
[125.43344879 189.35974121]
[123.06079102 174.54858398]
[120.68812561 159.73742676]
[118.31546783 144.92626953]
[115.94280243 130.11511230]
[91.96888733 129.79029846]
[76.54765320 114.61386871]
[62.14177322 118.79364777]
[47.73589325 122.97343445]
[33.33001328 127.15321350]
[18.92412949 131.33299255]
[4.51824808 135.51277161]
[-9.88763332 139.69256592]
[-23.13880730 154.85742188]
[-41.70091629 149.50398254]
[-55.95030975 154.18955994]
[-63.12317657 168.01663208]
[-77.64083862 172.56549072]
[-90.77863312 165.64204407]
[-105.02803040 170.32763672]
[-119.27742767 175.01321411]
[-133.52682495 179.69879150]
[-147.77621460 184.38438416]
[-154.94908142 198.21144104]
[-169.46675110 202.76029968]
[-182.60453796 195.83686829]
[-196.85392761 200.52244568]
[-211.10333252 205.20802307]
[-221.62408447 217.78761292]
[-237.72994995 214.69999695]
[-242.85258484 199.12145996]
[-231.72225952 187.07786560]
[-215.78890991 190.95863342]
[-201.53952026 186.27304077]
[-187.29011536 181.58746338]
[-180.82514954 168.21810913]
[-166.44097900 163.26327515]
[-152.46180725 170.13497925]
[-138.21240234 165.44940186]
[-123.96300507 160.76382446]
[-109.71360779 156.07823181]
[-95.46421051 151.39265442]
[-88.99923706 138.02330017]
[-74.61507416 133.06846619]
[-60.63589478 139.94017029]
[-46.38649750 135.25459290]
[-42.60040665 125.72398376]
[-34.00391769 119.73842621]
[-23.31195641 119.48368835]
[-14.06741524 125.28668213]
[0.33846653 121.10689545]
[14.74434853 116.92711639]
[29.15023041 112.74732971]
[43.55611038 108.56755066]
[57.96199417 104.38777161]
[72.36787415 100.20798492]
[73.01427460 94.05455017]
[75.01363373 88.19918823]
[78.26570892 82.93547058]
[82.60744476 78.52730560]
[76.68425751 64.74630737]
[70.76107788 50.96530914]
[64.83789062 37.18431473]
[58.91470718 23.40331650]
[41.07796097 17.08869171]
[33.61965942 0.04630820]
[40.83260727 -16.75519943]
[34.42676163 -30.31857300]
[28.02091408 -43.88194656]
[14.24072838 -52.77230835]
[15.32005310 -69.13590240]
[30.14857101 -76.13925934]
[43.47197723 -66.57793427]
[41.58428955 -50.28779602]
[47.99013519 -36.72441864]
[54.39598083 -23.16104507]
[65.74931335 -21.72169876]
[75.08641052 -14.89888668]
[80.00829315 -4.30178642]
[79.18119049 7.47358656]
[72.69570160 17.48013115]
[78.61888885 31.26112747]
[84.54207611 45.04212570]
[90.46525574 58.82312393]
[96.38844299 72.60411835]
[118.34628296 75.19325256]
[133.60560608 94.36478424]
[146.81095886 87.25009155]
[160.01629639 80.13540649]
[173.22164917 73.02071381]
[186.42700195 65.90602112]
[199.63233948 58.79133606]
[203.45199585 53.33524323]
[208.67494202 51.00049591]
[213.43167114 51.66794586]
[226.87986755 45.02372360]
[228.19142151 31.28541565]
[236.06404114 20.08254242]
[248.34928894 14.28600121]
[261.78558350 15.31622124]
[272.86395264 22.79668427]
[286.42730713 16.39083672]
[299.99069214 9.98499107]
[313.55407715 3.57914400]
[327.11743164 -2.82670259]
[340.68081665 -9.23254871]
[354.18713379 -15.75783730]
[367.63534546 -22.40205956]
[381.08355713 -29.04628181]
[394.53176880 -35.69050217]
[395.44491577 -51.02222443]
[403.91500854 -63.83446121]
[417.66357422 -70.68077850]
[432.99237061 -69.71956635]
[445.77798462 -61.20936584]
[452.58117676 -47.43939590]
[451.57192993 -32.11369705]
[443.02169800 -19.35481453]
[429.23046875 -12.59481716]
[413.90798950 -13.65211296]
[401.17599487 -22.24229431]
[387.72778320 -15.59807205]
[374.27957153 -8.95385075]
[360.83135986 -2.30962873]
[356.21328735 3.48967910]
[347.08666992 4.33082533]
[333.52328491 10.73667240]
[319.95989990 17.14251900]
[306.39654541 23.54836464]
[292.83316040 29.95421219]
[279.26977539 36.36005783]
[276.74328613 52.56626511]
[264.94439697 64.19741058]
[248.37490845 66.53807068]
[233.52409363 58.47193146]
[220.07588196 65.11615753]
[206.74703979 71.99668121]
[193.54168701 79.11137390]
[180.33633423 86.22605896]
[167.13099670 93.34075165]
[153.92564392 100.45544434]
[140.72030640 107.57012939]
[155.72004700 107.65738678]
[170.32608032 104.24218750]
[184.77304077 108.27769470]
[195.49488831 118.76779175]
[199.84504700 133.12313843]
[196.74975586 147.80030823]
[186.97303772 159.17642212]
[172.92816162 164.44343567]
[158.08190918 162.30123901]
[146.09890747 153.27864075]
[139.93702698 139.60295105]
[130.75396729 127.74244690]
[133.12663269 142.55360413]
[135.49928284 157.36476135]
[137.87194824 172.17591858]
[140.24461365 186.98709106]
[152.76301575 196.25677490]
[154.95825195 211.31120300]
[146.04386902 223.18846130]
[148.41651917 237.99961853]
[150.78918457 252.81079102]
[165.16606140 258.21456909]
[174.90251160 270.09301758]
[177.37947083 285.25085449]
[171.93063354 299.61071777]
[160.02174377 309.30987549]
[144.85621643 311.73931885]
[130.51348877 306.24551392]
[120.85169983 294.30627441]
[118.46981812 279.13320923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
[12 61]
[13 60]
[14 59]
[15 58]
[16 57]
[17 56]
[18 55]
[20 51]
[21 50]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[31 40]
[32 39]
[33 38]
[65 90]
[66 89]
[67 88]
[68 87]
[69 86]
[72 81]
[73 80]
[74 79]
[92 147]
[93 146]
[94 145]
[95 144]
[96 143]
[97 142]
[100 141]
[101 140]
[106 136]
[107 135]
[108 134]
[109 133]
[110 132]
[111 131]
[112 129]
[113 128]
[114 127]
[115 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
