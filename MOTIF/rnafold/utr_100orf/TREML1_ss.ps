%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGGCGAAUGCUGCAUCAGUGCCCAGGCAAGCCCAGGAGUUGACAUUUCUCUGCCCAGCCAUGGGCCUCACCCUGCUCUUGCUGCUGCUCCUGGGACUAGAAGGUCAGGGCAUAGUUGGCAGCCUCCCUGAGGUGCUGCAGGCACCCGUGGGAAGCUCCA\
) } def
/len { sequence length } bind def

/coor [
[90.68694305 98.10511780]
[82.68887329 85.41532135]
[74.69081116 72.72552490]
[66.69274139 60.03573227]
[58.69467545 47.34593582]
[51.43480301 41.71964264]
[50.66732025 34.33160782]
[42.91682816 21.48910522]
[30.57733154 17.62516785]
[24.39415169 6.72838211]
[27.21981621 -5.06520176]
[19.71981621 -18.05558205]
[12.21981716 -31.04596329]
[4.71981668 -44.03634644]
[-2.78018332 -57.02672577]
[-19.29045868 -56.84865952]
[-33.56310272 -64.96199799]
[-41.76188278 -79.07744598]
[-41.73791885 -95.30749512]
[-33.59210587 -109.23685455]
[-41.34259415 -122.07935333]
[-49.09308624 -134.92185974]
[-56.84357834 -147.76435852]
[-64.59407043 -160.60687256]
[-72.34455872 -173.44937134]
[-86.09951782 -181.26676941]
[-86.05126953 -196.16128540]
[-93.80176544 -209.00379944]
[-101.55225372 -221.84629822]
[-121.93823242 -231.09011841]
[-121.78599548 -252.71598816]
[-130.50837708 -264.91928101]
[-139.34866333 -277.03741455]
[-148.30604553 -289.06924438]
[-157.26342773 -301.10110474]
[-166.22080994 -313.13296509]
[-175.17819214 -325.16479492]
[-184.13555908 -337.19665527]
[-193.09294128 -349.22848511]
[-202.05032349 -361.26034546]
[-211.00770569 -373.29220581]
[-220.23950195 -368.94042969]
[-230.27870178 -366.54013062]
[-240.71257019 -366.23864746]
[-251.10217285 -368.09600830]
[-261.00076294 -372.08032227]
[-269.97308350 -378.06747437]
[-277.61434937 -385.84414673]
[-283.56851196 -395.11553955]
[-287.54464722 -405.51617432]
[-289.33087158 -416.62435913]
[-288.80517578 -427.97915649]
[-285.94244385 -439.09963989]
[-280.81753540 -449.50524902]
[-291.52648926 -460.00848389]
[-302.23544312 -470.51174927]
[-312.94439697 -481.01501465]
[-323.65332031 -491.51828003]
[-339.66043091 -495.08270264]
[-344.31829834 -510.80642700]
[-332.83532715 -522.51428223]
[-317.02420044 -518.16217041]
[-313.15005493 -502.22723389]
[-302.44113159 -491.72396851]
[-291.73217773 -481.22070312]
[-281.02322388 -470.71743774]
[-270.31427002 -460.21417236]
[-263.48657227 -463.31774902]
[-269.69372559 -476.97320557]
[-275.90087891 -490.62866211]
[-282.10784912 -504.28417969]
[-268.45220947 -510.49093628]
[-262.24545288 -496.83581543]
[-256.03826904 -483.18035889]
[-249.83111572 -469.52493286]
[-243.00340271 -472.62850952]
[-243.87556458 -487.60311890]
[-253.33421326 -500.99963379]
[-246.21708679 -515.77386475]
[-229.84568787 -516.72741699]
[-221.06149292 -502.87930298]
[-228.90093994 -488.47531128]
[-228.02877808 -473.50067139]
[-204.93038940 -463.99749756]
[-188.69683838 -445.88552856]
[-182.13442993 -423.14590454]
[-186.00390625 -400.46044922]
[-198.97584534 -382.24957275]
[-190.01847839 -370.21771240]
[-181.06109619 -358.18588257]
[-172.10371399 -346.15402222]
[-163.14633179 -334.12219238]
[-154.18896484 -322.09033203]
[-145.23158264 -310.05847168]
[-136.27420044 -298.02664185]
[-127.31681824 -285.99478149]
[-120.76780701 -282.49014282]
[-118.30509186 -273.64166260]
[-109.58271027 -261.43838501]
[-101.60691833 -261.83450317]
[-94.04578400 -258.98583984]
[-88.17864227 -253.29415894]
[-85.02993011 -245.64854431]
[-85.19081879 -237.28717041]
[-88.70974731 -229.59678650]
[-80.95925903 -216.75428772]
[-73.20877075 -203.91177368]
[-60.00817490 -197.01296997]
[-59.50205612 -181.19985962]
[-51.75156403 -168.35736084]
[-44.00107193 -155.51484680]
[-36.25058365 -142.67234802]
[-28.50009155 -129.82984924]
[-20.74960136 -116.98734283]
[-7.11565018 -118.14914703]
[5.74678516 -113.29013824]
[15.29882908 -103.30828857]
[19.62873077 -90.11866760]
[17.83429718 -76.28616333]
[10.21019745 -64.52672577]
[17.71019745 -51.53634644]
[25.21019745 -38.54596329]
[32.71019745 -25.55558205]
[40.21019745 -12.56520176]
[55.85057831 -4.65255642]
[55.75933075 13.73861504]
[63.50982285 26.58111763]
[71.38446808 39.34786987]
[79.38253784 52.03766632]
[87.38060760 64.72746277]
[95.37866974 77.41725922]
[103.37673950 90.10705566]
[113.12951660 101.50369263]
[124.43105316 111.36651611]
[135.73258972 121.22933197]
[147.03413391 131.09214783]
[158.33566284 140.95497131]
[169.63720703 150.81779480]
[185.54656982 156.67683411]
[184.32066345 173.58639526]
[167.73255920 177.08943176]
[159.77438354 162.11933899]
[148.47283936 152.25651550]
[137.17131042 142.39369202]
[125.86976624 132.53086853]
[114.56822968 122.66805267]
[103.26669312 112.80522919]
[96.88331604 116.74255371]
[84.11656952 124.61720276]
[77.73319244 128.55453491]
[81.47480774 143.08038330]
[85.21643066 157.60623169]
[88.95804596 172.13208008]
[100.82105255 183.45466614]
[96.68452454 199.32353210]
[80.80374908 203.41415405]
[69.51551819 191.51844788]
[74.43219757 175.87368774]
[70.69057465 161.34783936]
[66.94895935 146.82199097]
[63.20734406 132.29614258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[4 129]
[5 128]
[7 127]
[8 126]
[11 124]
[12 123]
[13 122]
[14 121]
[15 120]
[20 114]
[21 113]
[22 112]
[23 111]
[24 110]
[25 109]
[27 107]
[28 106]
[29 105]
[31 99]
[32 98]
[33 96]
[34 95]
[35 94]
[36 93]
[37 92]
[38 91]
[39 90]
[40 89]
[41 88]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[76 83]
[77 82]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[138 142]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
