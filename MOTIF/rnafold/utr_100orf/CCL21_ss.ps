%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUAAAUAGCAGGCCAAUCCCAGCCCACGCACAGACCCCCAACUUGCAGCUGCCCACCUCACCCUCAGCUCUGGCCUCUUACUCACCCUCUACCACAGACAUGGCUCAGUCACUGGCUCUGAGCCUCCUUAUCCUGGUUCUGGCCUUUGGCAUCCCCAGGACCCAAGGCAGUGAUGGAGGGGCUCAGGACUGUUGCCUCA\
) } def
/len { sequence length } bind def

/coor [
[105.30862427 387.80209351]
[97.60196686 400.90460205]
[85.46481323 410.05654907]
[70.74800110 413.86230469]
[55.69573212 411.74154663]
[42.60337067 404.01763916]
[33.46740341 391.86846924]
[29.68100357 377.14666748]
[31.82156563 362.09719849]
[39.56267166 349.01501465]
[51.72385788 339.89501953]
[66.45063019 336.12799072]
[68.54336548 321.27468872]
[70.63609314 306.42138672]
[72.72882080 291.56811523]
[74.59030914 276.68405151]
[76.22008514 261.77285767]
[69.91143799 248.28025818]
[79.10234833 235.40245056]
[80.73213196 220.49125671]
[82.36191559 205.58006287]
[74.43379211 189.92747498]
[85.43295288 175.16342163]
[86.83064270 160.22868347]
[88.22832489 145.29394531]
[89.62601471 130.35920715]
[91.02370453 115.42446899]
[85.06764221 110.86647034]
[73.15551758 101.75048065]
[67.19945526 97.19248962]
[53.14892197 102.44438171]
[39.09838486 107.69628143]
[32.14949417 113.63650513]
[24.78828621 112.91873932]
[10.65777206 117.95148468]
[6.40704155 132.87498474]
[-5.82443190 142.42332458]
[-21.33339691 142.92495728]
[-34.15633774 134.18701172]
[-39.36257553 119.56939697]
[-34.95020676 104.69287872]
[-22.61586952 95.27779388]
[-7.10237646 94.94443512]
[5.62502193 103.82096863]
[19.75553513 98.78822327]
[33.84648895 93.64574432]
[47.89702225 88.39384460]
[61.94755936 83.14195251]
[61.48106384 68.14920807]
[47.13119507 63.78098297]
[32.78133011 59.41276550]
[18.43146515 55.04454422]
[4.08159924 50.67632294]
[-5.86363792 62.20941162]
[-19.64276123 68.69444275]
[-34.86845016 69.00785828]
[-48.90276718 63.09534073]
[-59.31417847 51.98127747]
[-64.29884338 37.59124756]
[-62.99314499 22.41840744]
[-55.62329865 9.09154701]
[-43.46617126 -0.08037688]
[-28.62806511 -3.50827217]
[-13.67976761 -0.59823549]
[-1.21116400 8.14555168]
[6.61748552 21.20817566]
[8.44982052 36.32645798]
[22.79968643 40.69467926]
[37.14955139 45.06289673]
[51.49941635 49.43111801]
[65.84928131 53.79933929]
[55.35032654 43.08617401]
[44.85137177 32.37300491]
[44.83964157 17.37301064]
[49.32245636 3.05853057]
[57.88798141 -9.25535488]
[69.74929810 -18.43736076]
[83.81668854 -23.64392853]
[98.79779053 -24.39673042]
[113.31626892 -20.62660217]
[126.03829956 -12.67991161]
[135.79510498 -1.28672385]
[141.69032288 12.50625992]
[143.18235779 27.43187141]
[140.13412476 42.11888123]
[132.82566833 55.21798706]
[121.93202209 65.52328491]
[114.19409180 78.37336731]
[106.45616150 91.22344208]
[119.40748596 83.65619659]
[132.35881042 76.08895874]
[145.31013489 68.52171326]
[158.26145935 60.95447159]
[166.27349854 47.31196594]
[181.16583252 47.57183075]
[194.11715698 40.00458527]
[207.06848145 32.43734360]
[205.84980774 23.20739746]
[207.34674072 14.05629539]
[211.41004944 5.76279211]
[217.67300415 -0.97368068]
[225.58444214 -5.59198284]
[234.45718384 -7.71598101]
[243.52775574 -7.18510675]
[249.85528564 -20.78519630]
[256.18280029 -34.38528442]
[262.51034546 -47.98537445]
[268.83786011 -61.58546448]
[275.16537476 -75.18555450]
[281.49291992 -88.78564453]
[273.15750122 -101.76733398]
[273.18658447 -117.19467163]
[281.57089233 -130.14483643]
[295.63500977 -136.48550415]
[310.89114380 -134.19335938]
[322.47109985 -123.99983978]
[326.67977905 -109.15764618]
[322.17419434 -94.40287781]
[310.39205933 -84.44372559]
[295.09298706 -82.45811462]
[288.76547241 -68.85802460]
[282.43795776 -55.25793839]
[276.11041260 -41.65784836]
[269.78289795 -28.05776024]
[263.45538330 -14.45767021]
[257.12783813 -0.85758144]
[262.97775269 5.38784313]
[266.89840698 12.99410629]
[281.83316040 11.59641743]
[296.76791382 10.19872856]
[311.70263672 8.80103970]
[327.59390259 -3.59409761]
[344.80517578 5.20920134]
[359.68920898 3.34772015]
[374.57327271 1.48623872]
[389.45730591 -0.37524253]
[404.34136963 -2.23672390]
[419.22540283 -4.09820509]
[423.98779297 -17.25467873]
[433.90789795 -27.02795792]
[447.00878906 -31.55044937]
[460.71395874 -29.99304962]
[472.35385132 -22.71650887]
[479.68603516 -11.18993855]
[494.59722900 -12.81972122]
[509.50842285 -14.44950294]
[524.59686279 -22.18100357]
[536.20306396 -9.82254219]
[527.54052734 4.75128269]
[511.13821411 0.46169424]
[496.22702026 2.09147644]
[481.31582642 3.72125864]
[475.17050171 18.66247940]
[462.25570679 28.52426338]
[446.03723145 30.54102516]
[430.92788696 24.06865120]
[421.08688354 10.78584290]
[406.20285034 12.64732456]
[391.31878662 14.50880527]
[376.43475342 16.37028694]
[361.55068970 18.23176765]
[346.66665649 20.09325027]
[341.13891602 28.69778824]
[331.58535767 32.92447662]
[321.06674194 31.15492630]
[313.10034180 23.73577881]
[298.16558838 25.13346863]
[283.23086548 26.53115845]
[268.29611206 27.92884636]
[257.28195190 47.64769745]
[235.63534546 54.81493378]
[214.63572693 45.38866806]
[201.68440247 52.95591354]
[188.73307800 60.52315521]
[181.64741516 73.62439728]
[165.82870483 73.90579224]
[152.87738037 81.47303772]
[139.92605591 89.04028320]
[126.97473145 96.60752106]
[114.02340698 104.17476654]
[105.95845032 116.82215881]
[104.56076050 131.75689697]
[103.16307068 146.69163513]
[101.76538086 161.62637329]
[100.36769104 176.56111145]
[107.98462677 186.97589111]
[106.50854492 199.39042664]
[97.27311707 207.20983887]
[95.64333344 222.12104797]
[94.01354980 237.03224182]
[100.20562744 251.59138489]
[91.13128662 263.40264893]
[89.50150299 278.31384277]
[91.81579590 284.51950073]
[90.79648590 290.11965942]
[87.58212280 293.66082764]
[85.48939514 308.51412964]
[83.39665985 323.36743164]
[81.30393219 338.22073364]
[94.41657257 345.91015625]
[103.58446503 358.03524780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 199]
[13 198]
[14 197]
[15 196]
[16 193]
[17 192]
[19 190]
[20 189]
[21 188]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[30 48]
[31 47]
[32 46]
[34 45]
[35 44]
[49 71]
[50 70]
[51 69]
[52 68]
[53 67]
[89 180]
[90 179]
[91 178]
[92 177]
[93 176]
[95 174]
[96 173]
[97 172]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[128 169]
[129 168]
[130 167]
[131 166]
[133 162]
[134 161]
[135 160]
[136 159]
[137 158]
[138 157]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
