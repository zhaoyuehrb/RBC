%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCAGGGCGCCAGGAGGCCGGAGCAGGAGGAGAAGGAGUAGGAGGAAGUGGUCACUAGCGCGGCGGCCGCCGGCCCGCAAUGGUGCUACCCUGGUUGCUGCUCGAGACUGCGCGCAGGGCGGUCCUCGGGUCCGCGGAGGCUGCGCUCUGCGCCAUGAAAAUGACAGAUGAAAAUAGAAAAGUGUGGCUGGUCUGAAGGUUUGACGUCAAUAAAGGGAAACUGCCACAAUUUUUAUACUGCUAUUUCUAAAGA\
UGUCACUUAUAAGG\
) } def
/len { sequence length } bind def

/coor [
[409.65014648 197.90461731]
[395.13891602 194.10668945]
[380.86730957 198.36938477]
[369.47586060 187.39007568]
[354.96463013 183.59214783]
[340.45339966 179.79421997]
[325.94216919 175.99629211]
[311.43093872 172.19836426]
[296.91970825 168.40043640]
[282.40847778 164.60250854]
[267.89724731 160.80458069]
[253.38603210 157.00665283]
[258.78479004 171.00141907]
[251.31269836 184.00787354]
[236.50361633 186.39344788]
[225.32513428 176.39137268]
[226.05604553 161.40917969]
[238.15406799 152.54289246]
[223.88822937 147.90763855]
[209.62237549 143.27238464]
[195.35652161 138.63713074]
[183.43548584 147.52684021]
[168.38771057 147.69432068]
[155.98164368 138.86578369]
[151.09646606 124.25616455]
[136.83061218 119.62091064]
[129.52421570 120.53946686]
[122.42630005 114.84783936]
[108.21535492 110.04691315]
[121.22653961 117.51075745]
[128.83847046 130.43586731]
[129.05589294 145.43429565]
[121.82183075 158.57461548]
[109.03247070 166.41249084]
[94.04018402 166.89343262]
[80.77476501 159.89137268]
[72.71337891 147.24171448]
[71.96907043 132.26019287]
[78.73758698 118.87307739]
[63.76296234 118.00090790]
[48.78833771 117.12873077]
[33.81371689 116.25656128]
[18.83909416 115.38439178]
[2.55820298 124.02251434]
[-11.70512104 113.77294922]
[-26.68887901 113.07507324]
[-41.67263412 112.37718964]
[-47.65924454 115.04527283]
[-53.26187515 114.41062164]
[-56.99572372 111.48472595]
[-71.95918274 110.43837738]
[-86.92264557 109.39202881]
[-101.88610840 108.34568024]
[-110.62917328 110.86238098]
[-117.01725769 107.19911194]
[-131.96752930 105.97872925]
[-146.91780090 104.75835419]
[-161.86807251 103.53797150]
[-176.81835938 102.31758881]
[-188.80093384 112.27025604]
[-203.94525146 110.81964111]
[-213.35975647 99.33474731]
[-228.31002808 98.11436462]
[-243.26029968 96.89398193]
[-258.21057129 95.67360687]
[-264.28665161 98.13113403]
[-269.86370850 97.30133820]
[-273.49319458 94.24691010]
[-288.41101074 92.67898560]
[-303.32882690 91.11105347]
[-319.71322632 95.46863556]
[-328.43615723 80.93086243]
[-316.88125610 68.52436829]
[-301.76089478 76.19322968]
[-286.84307861 77.76115417]
[-271.92526245 79.32907867]
[-256.99020386 80.72332764]
[-242.03991699 81.94371033]
[-227.08964539 83.16409302]
[-212.13937378 84.38446808]
[-200.98690796 74.57843781]
[-185.80783081 75.60310364]
[-175.59797668 87.36731720]
[-160.64770508 88.58769989]
[-145.69743347 89.80808258]
[-130.74714661 91.02845764]
[-115.79688263 92.24884033]
[-100.83975983 93.38222504]
[-85.87629700 94.42856598]
[-70.91284180 95.47491455]
[-55.94937897 96.52126312]
[-40.97475433 97.39343262]
[-25.99099922 98.09131622]
[-11.00724125 98.78919220]
[-1.87776661 90.88726807]
[10.58916283 91.32402802]
[19.71126747 100.40976715]
[34.68589020 101.28193665]
[49.66051102 102.15411377]
[64.63513184 103.02628326]
[79.60975647 103.89846039]
[88.21340179 91.61117554]
[82.27220917 77.83793640]
[76.33100891 64.06468964]
[70.38981628 50.29145050]
[64.44861603 36.51821136]
[58.50741959 22.74496841]
[52.56622314 8.97172642]
[46.54499817 -4.76671743]
[40.44395065 -18.46990013]
[34.34289932 -32.17308044]
[28.24184990 -45.87626266]
[22.14080048 -59.57944489]
[7.06012535 -63.71553802]
[-1.79114497 -76.60697174]
[-0.23371115 -92.16680145]
[10.99705410 -103.04815674]
[26.59832764 -104.11319733]
[39.20366287 -94.85903168]
[42.86120987 -79.65520477]
[35.84398270 -65.68049622]
[41.94503021 -51.97731400]
[48.04608154 -38.27413177]
[54.14713287 -24.57094955]
[60.24818039 -10.86776733]
[65.81973267 -6.05269146]
[66.33946228 3.03053021]
[72.28066254 16.80377197]
[78.22185516 30.57701302]
[84.16305542 44.35025406]
[90.10424805 58.12349701]
[96.04544830 71.89673615]
[101.98664093 85.66998291]
[113.01628113 95.83596039]
[127.22722626 100.63688660]
[141.46586609 105.35505676]
[155.73171997 109.99031067]
[168.27124023 101.04231262]
[183.49723816 101.19197845]
[195.57270813 110.17234802]
[199.99177551 124.37128448]
[214.25762939 129.00653076]
[228.52348328 133.64178467]
[242.78932190 138.27703857]
[257.18395996 142.49542236]
[271.69519043 146.29335022]
[286.20642090 150.09127808]
[300.71765137 153.88920593]
[315.22888184 157.68713379]
[329.74008179 161.48506165]
[344.25131226 165.28298950]
[358.76254272 169.08091736]
[373.27377319 172.87884521]
[388.58331299 168.88780212]
[398.93682861 179.59545898]
[413.44805908 183.39338684]
[417.99365234 181.19146729]
[422.64508057 180.60968018]
[426.88061523 181.49230957]
[430.28521729 183.53024292]
[432.59109497 186.31129456]
[447.57485962 187.00917053]
[462.55862427 187.70704651]
[477.54235840 188.40492249]
[492.52612305 189.10281372]
[506.67132568 182.01594543]
[519.02484131 190.33700562]
[534.00860596 191.03488159]
[548.99237061 191.73277283]
[563.97991943 192.34346008]
[578.97076416 192.86695862]
[593.96166992 193.39044189]
[608.95251465 193.91394043]
[623.94335938 194.43743896]
[638.93426514 194.96092224]
[653.92510986 195.48442078]
[668.91595459 196.00790405]
[658.42993164 185.28210449]
[657.19348145 170.33314514]
[665.77490234 158.03030396]
[680.23077393 154.02688599]
[693.91845703 160.16253662]
[700.54833984 173.61782837]
[697.07385254 188.20986938]
[685.09100342 197.23358154]
[699.98956299 198.97497559]
[714.88812256 200.71636963]
[729.78668213 202.45776367]
[744.68530273 204.19915771]
[759.58386230 205.94055176]
[770.89373779 193.34074402]
[787.32458496 190.01098633]
[802.34625244 197.07203674]
[810.10894775 211.55479431]
[825.02679443 213.12272644]
[839.94464111 214.69064331]
[846.89807129 202.40788269]
[857.97003174 193.72413635]
[871.47265625 189.92140198]
[885.36315918 191.54072571]
[897.55328369 198.30551147]
[906.22283936 209.16801453]
[910.09185791 222.47161865]
[924.99047852 224.21301270]
[939.88903809 225.95440674]
[954.72448730 218.96572876]
[968.03839111 228.54025269]
[966.13458252 244.82852173]
[950.97149658 251.07455444]
[938.14764404 240.85298157]
[923.24908447 239.11158752]
[908.35046387 237.37019348]
[900.04003906 251.03796387]
[886.54736328 259.73782349]
[870.55242920 261.68118286]
[855.25885010 256.42764282]
[843.75195312 244.98326111]
[838.37670898 229.60847473]
[823.45886230 228.04054260]
[808.54107666 226.47262573]
[800.58178711 237.16693115]
[788.28253174 242.58357239]
[774.80462646 241.21365356]
[763.67041016 233.30793762]
[757.84246826 220.83912659]
[742.94390869 219.09773254]
[728.04528809 217.35633850]
[713.14672852 215.61494446]
[698.24816895 213.87355042]
[683.34960938 212.13215637]
[668.39245605 210.99877930]
[653.40161133 210.47528076]
[638.41076660 209.95178223]
[623.41986084 209.42829895]
[608.42901611 208.90480042]
[593.43817139 208.38131714]
[578.44726562 207.85781860]
[563.45642090 207.33432007]
[556.68627930 210.23121643]
[548.29449463 206.71652222]
[533.31072998 206.01864624]
[518.32696533 205.32077026]
[505.25350952 212.45755005]
[491.82824707 204.08656311]
[476.84448242 203.38868713]
[461.86074829 202.69081116]
[446.87698364 201.99291992]
[431.89321899 201.29504395]
[445.25015259 208.12091064]
[456.43936157 218.11099243]
[464.72924805 230.61210632]
[469.57775879 244.80688477]
[470.66793823 259.76721191]
[467.92843628 274.51495361]
[461.53845215 288.08578491]
[451.91571045 299.59243774]
[439.68945312 308.28256226]
[425.65899658 313.58795166]
[410.74179077 315.16171265]
[395.91314697 312.90097046]
[382.14260864 306.95349121]
[370.33053589 297.70822144]
[361.24929810 285.76959229]
[355.49261475 271.91821289]
[353.43688965 257.05975342]
[355.21655273 242.16569519]
[360.71524048 228.20988464]
[369.57339478 216.10479736]
[381.21185303 206.64192200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[11 146]
[12 145]
[18 144]
[19 143]
[20 142]
[21 141]
[25 137]
[26 136]
[28 135]
[29 134]
[39 101]
[40 100]
[41 99]
[42 98]
[43 97]
[45 94]
[46 93]
[47 92]
[50 91]
[51 90]
[52 89]
[53 88]
[55 87]
[56 86]
[57 85]
[58 84]
[59 83]
[62 80]
[63 79]
[64 78]
[65 77]
[68 76]
[69 75]
[70 74]
[102 133]
[103 132]
[104 131]
[105 130]
[106 129]
[107 128]
[108 127]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[161 248]
[162 247]
[163 246]
[164 245]
[165 244]
[167 242]
[168 241]
[169 240]
[170 238]
[171 237]
[172 236]
[173 235]
[174 234]
[175 233]
[176 232]
[177 231]
[185 230]
[186 229]
[187 228]
[188 227]
[189 226]
[190 225]
[194 220]
[195 219]
[196 218]
[203 212]
[204 211]
[205 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
