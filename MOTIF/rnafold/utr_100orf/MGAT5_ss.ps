%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCAGAAUGGAAGUGAGGAAAGGCAACCAGCUGACACAGGAGCCAGAGUGAGACCAGCAGACUCUCACACUCAACCUACACCAUGAAUUUGUGUCUAUCUUCUACGCGUUAAGAGCCAAGGACAGGUGAAGUUGCCAGAGAGCAAUGGCUCUCUUCACUCCGUGGAAGUUGUCCUCUCAGAAGCUGGGCUUUUUCCUGGUGACUUUUGGCUUCAUUUGGGGUAUGAUGCUUCUGCACUUUACCA\
) } def
/len { sequence length } bind def

/coor [
[88.23353577 141.89927673]
[81.74994659 155.42565918]
[75.26635742 168.95205688]
[68.78276825 182.47843933]
[69.25920105 186.74192810]
[68.44860840 190.55772400]
[66.64627075 193.57910156]
[64.22920227 195.58930969]
[61.60714340 196.51702881]
[54.44134521 209.69471741]
[47.27555084 222.87240601]
[51.52803421 237.85752869]
[44.07317352 251.11949158]
[29.76093674 255.08123779]
[22.59514046 268.25891113]
[29.38780212 282.21023560]
[26.64965439 297.48382568]
[15.43357086 308.20666504]
[0.05236570 310.25558472]
[-13.57957458 302.84277344]
[-20.22049141 288.81860352]
[-17.31681633 273.57562256]
[-5.98507166 262.97509766]
[9.41745567 261.09313965]
[16.58325386 247.91545105]
[12.12893677 233.74876404]
[19.20835304 220.28263855]
[34.09786606 215.70660400]
[41.26366425 202.52891541]
[48.42946243 189.35124207]
[55.25638199 175.99484253]
[61.73997116 162.46846008]
[68.22355652 148.94207764]
[74.70714569 135.41569519]
[62.72231293 122.45825958]
[56.86903381 105.80682373]
[58.11007690 88.20025635]
[66.24131775 72.53455353]
[79.92529297 61.38645554]
[96.91123199 56.58964157]
[98.44104767 41.66785812]
[99.97087097 26.74607468]
[101.50068665 11.82429028]
[103.03050995 -3.09749436]
[104.56032562 -18.01927948]
[106.09014893 -32.94106293]
[107.61996460 -47.86284637]
[109.14978790 -62.78463364]
[98.74829865 -73.59245300]
[83.77886963 -72.63530731]
[68.80943298 -71.67815399]
[53.84000397 -70.72100067]
[38.87057495 -69.76384735]
[23.90114403 -68.80669403]
[16.49567032 -55.27294159]
[2.93797016 -47.91139984]
[-12.44574261 -49.07110977]
[-24.74658203 -58.38201141]
[-30.03939438 -72.87303162]
[-26.63526344 -87.92013550]
[-15.62043285 -98.72185516]
[-0.50969762 -101.83139038]
[13.87516308 -96.25650787]
[22.94399261 -83.77613068]
[37.91342163 -84.73327637]
[52.88285446 -85.69042969]
[67.85228729 -86.64758301]
[82.82171631 -87.60473633]
[97.79114532 -88.56188965]
[82.80638123 -89.23782349]
[69.99422455 -97.03837585]
[62.51389313 -110.04009247]
[62.20988083 -125.03701019]
[69.15715027 -138.33119202]
[81.64264679 -146.64457703]
[96.58770752 -147.92724609]
[110.30718231 -141.86291504]
[119.41812134 -129.94692993]
[121.67395782 -115.11752319]
[116.51914215 -101.03233337]
[123.17494202 -114.47482300]
[129.83073425 -127.91730499]
[136.48654175 -141.35978699]
[143.14233398 -154.80227661]
[142.33184814 -170.60270691]
[154.91308594 -178.57525635]
[161.56887817 -192.01773071]
[168.22468567 -205.46022034]
[161.02586365 -215.64767456]
[158.84500122 -227.85658264]
[162.03431702 -239.76704407]
[169.93150330 -249.14216614]
[180.99607849 -254.24816895]
[193.10966492 -254.17488098]
[200.10658264 -267.44299316]
[207.10351562 -280.71112061]
[214.10044861 -293.97924805]
[221.09738159 -307.24737549]
[220.69067383 -323.06335449]
[233.47142029 -330.71197510]
[240.46835327 -343.98010254]
[247.46528625 -357.24822998]
[254.46220398 -370.51632690]
[261.45913696 -383.78445435]
[247.82098389 -377.53939819]
[232.95887756 -379.56857300]
[221.49400330 -389.24102783]
[216.99124146 -403.54925537]
[220.85067749 -418.04425049]
[231.87226868 -428.21896362]
[246.62896729 -430.90966797]
[260.53234863 -425.27972412]
[269.25930786 -413.07974243]
[270.09655762 -398.10424805]
[278.56896973 -410.48239136]
[287.04135132 -422.86056519]
[287.43801880 -428.01922607]
[289.55047607 -432.11096191]
[292.69070435 -434.66314697]
[296.08291626 -435.54202271]
[305.02319336 -447.58657837]
[313.96350098 -459.63113403]
[322.90380859 -471.67568970]
[331.84408569 -483.72021484]
[340.78439331 -495.76477051]
[348.93789673 -508.35525513]
[356.27139282 -521.44036865]
[363.60488892 -534.52545166]
[370.93838501 -547.61053467]
[378.27188110 -560.69561768]
[385.60537720 -573.78076172]
[392.93887329 -586.86584473]
[387.89135742 -603.62677002]
[396.37069702 -618.55267334]
[412.69631958 -622.63464355]
[419.86212158 -635.81231689]
[427.02792358 -648.98999023]
[434.19372559 -662.16766357]
[427.40106201 -676.11901855]
[430.13919067 -691.39257812]
[441.35528564 -702.11541748]
[456.73648071 -704.16436768]
[470.36843872 -696.75152588]
[477.00933838 -682.72735596]
[474.10568237 -667.48437500]
[462.77392578 -656.88385010]
[447.37139893 -655.00189209]
[440.20559692 -641.82421875]
[433.03979492 -628.64654541]
[425.87399292 -615.46887207]
[431.21603394 -603.75793457]
[428.80868530 -590.91534424]
[419.30941772 -581.66271973]
[406.02398682 -579.53234863]
[398.69049072 -566.44726562]
[391.35699463 -553.36212158]
[384.02349854 -540.27703857]
[376.69000244 -527.19195557]
[369.35650635 -514.10687256]
[362.02301025 -501.02175903]
[375.56729126 -507.46786499]
[390.52651978 -506.36285400]
[402.97665405 -497.99658203]
[409.65173340 -484.56365967]
[408.80081177 -469.58782959]
[400.64709473 -456.99749756]
[387.32940674 -450.09533691]
[372.34127808 -450.69192505]
[359.61434937 -458.63076782]
[352.48712158 -471.82934570]
[352.82894897 -486.82446289]
[343.88864136 -474.77993774]
[334.94833374 -462.73538208]
[326.00805664 -450.69082642]
[317.06774902 -438.64630127]
[308.12744141 -426.60174561]
[299.41949463 -414.38815308]
[290.94711304 -402.01000977]
[282.47470093 -389.63186646]
[274.72726440 -376.78753662]
[267.73031616 -363.51940918]
[260.73339844 -350.25128174]
[253.73646545 -336.98318481]
[246.73953247 -323.71505737]
[247.64671326 -308.84808350]
[234.36549377 -300.25042725]
[227.36856079 -286.98229980]
[220.37164307 -273.71420288]
[213.37471008 -260.44607544]
[206.37777710 -247.17796326]
[214.90052795 -231.69004822]
[212.38037109 -214.03341675]
[199.64192200 -201.32571411]
[181.66716003 -198.80442810]
[175.01136780 -185.36193848]
[168.35557556 -171.91944885]
[169.64213562 -157.08052063]
[156.58482361 -148.14646912]
[149.92901611 -134.70399475]
[143.27322388 -121.26150513]
[136.61743164 -107.81902313]
[129.96162415 -94.37654114]
[135.69981384 -87.67804718]
[137.26130676 -78.07734680]
[133.28903198 -68.21076202]
[124.07157135 -61.25481415]
[122.54174805 -46.33302689]
[121.01193237 -31.41124344]
[119.48210907 -16.48945999]
[117.95229340 -1.56767476]
[116.42247009 13.35410976]
[114.89265442 28.27589417]
[113.36283112 43.19767761]
[111.83301544 58.11946487]
[124.96065521 64.34939575]
[135.30563354 74.55374146]
[141.71466064 87.59487915]
[143.47325134 102.01897430]
[140.38534546 116.21798706]
[132.79521179 128.60897827]
[121.54898834 137.81059265]
[126.61923981 151.92768860]
[131.68949890 166.04478455]
[136.75975037 180.16189575]
[151.51222229 184.59706116]
[160.71679688 196.72674561]
[161.01052856 211.77261353]
[152.49031067 223.96046448]
[157.56056213 238.07756042]
[162.63081360 252.19467163]
[175.49105835 262.37045288]
[172.84130859 278.55410767]
[157.40740967 284.09729004]
[145.06643677 273.29763794]
[148.51371765 257.26492310]
[143.44346619 243.14782715]
[138.37319946 229.03071594]
[124.04551697 225.04884338]
[114.69931793 213.25424194]
[114.08312225 198.03997803]
[122.64264679 185.23214722]
[117.57239532 171.11503601]
[112.50214386 156.99794006]
[107.43189240 142.88084412]
[101.00732422 143.50845337]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[9 30]
[10 29]
[11 28]
[14 25]
[15 24]
[40 214]
[41 213]
[42 212]
[43 211]
[44 210]
[45 209]
[46 208]
[47 207]
[48 206]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[80 202]
[81 201]
[82 200]
[83 199]
[84 198]
[86 196]
[87 195]
[88 194]
[94 190]
[95 189]
[96 188]
[97 187]
[98 186]
[100 184]
[101 183]
[102 182]
[103 181]
[104 180]
[114 179]
[115 178]
[116 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 172]
[125 171]
[126 160]
[127 159]
[128 158]
[129 157]
[130 156]
[131 155]
[132 154]
[135 150]
[136 149]
[137 148]
[138 147]
[221 244]
[222 243]
[223 242]
[224 241]
[228 237]
[229 236]
[230 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
