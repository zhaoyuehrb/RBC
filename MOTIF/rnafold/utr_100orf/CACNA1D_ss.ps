%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUAAGGGCAGGGACCGCGGCUCCUACCUCUUGGUGAUCCCCUUCCCCAUUCCGCCCCCGCCUCAACGCCCAGCACAGUGCCCUGCACACAGUAGUCGCUCAAUAAAUGUUCGUGGAUGAUGAUGAUGAUGAUGAUGAAAAAAAUGCAGCAUCAACGGCAGCAGCAAGCGGACCACGCGAACGAGGCAAACUAUGCAAGAGGCACCAGACUUCCUC\
) } def
/len { sequence length } bind def

/coor [
[-87.14787292 322.00921631]
[-100.39627075 322.35623169]
[-113.54193115 320.69268799]
[-126.28153992 317.05773926]
[-138.32130432 311.53594971]
[-149.38366699 304.25549316]
[-159.21371460 295.38494873]
[-167.58509827 285.12963867]
[-180.57548523 292.62963867]
[-193.56585693 300.12963867]
[-206.55624390 307.62963867]
[-212.41906738 314.62634277]
[-219.78720093 315.14251709]
[-232.88381958 322.45541382]
[-245.98045349 329.76828003]
[-248.33406067 340.37991333]
[-255.97941589 347.79412842]
[-266.22702026 349.73883057]
[-275.65173340 345.80950928]
[-288.95275879 352.74371338]
[-302.25378418 359.67788696]
[-315.55480957 366.61206055]
[-314.86651611 373.42095947]
[-315.74380493 380.18972778]
[-318.13235474 386.56402588]
[-321.89901733 392.21212769]
[-326.83911133 396.84213257]
[-332.68762207 400.21704102]
[-339.13333130 402.16680908]
[-345.83544922 402.59704590]
[-352.44155884 401.49346924]
[-358.60623169 398.92214966]
[-364.00900269 395.02581787]
[-368.37109375 390.01574707]
[-382.45416260 395.17971802]
[-396.53726196 400.34371948]
[-406.83016968 412.35897827]
[-421.44311523 409.47619629]
[-435.52621460 414.64019775]
[-441.94290161 429.08325195]
[-456.72274780 434.68069458]
[-471.09713745 428.11169434]
[-476.53802490 413.27346802]
[-469.81738281 398.96932983]
[-454.92248535 393.68563843]
[-440.69018555 400.55712891]
[-426.60711670 395.39312744]
[-417.32153320 383.74722290]
[-401.70123291 386.26062012]
[-387.61816406 381.09664917]
[-373.53506470 375.93264771]
[-366.25631714 353.54565430]
[-344.56527710 343.75549316]
[-322.48898315 353.31103516]
[-309.18795776 346.37686157]
[-295.88693237 339.44268799]
[-282.58590698 332.50851440]
[-273.42031860 315.47879028]
[-253.29333496 316.67166138]
[-240.19671631 309.35876465]
[-227.10008240 302.04589844]
[-214.05624390 294.63925171]
[-201.06585693 287.13925171]
[-188.07548523 279.63925171]
[-175.08509827 272.13925171]
[-180.72386169 256.30426025]
[-183.21821594 239.67716980]
[-182.47375488 222.87635803]
[-178.51660156 206.52699280]
[-171.49243164 191.23773193]
[-161.66114807 177.57810974]
[-149.38722229 166.05725098]
[-135.12625122 157.10498047]
[-119.40797424 151.05569458]
[-102.81662750 148.13595581]
[-85.96923065 148.45597839]
[-69.49263000 152.00543213]
[-54.00019073 158.65382385]
[-40.06895065 168.15524292]
[-28.21813011 180.15748596]
[-15.79863262 171.74583435]
[-3.37913465 163.33416748]
[9.04036236 154.92250061]
[21.45985985 146.51083374]
[33.81870651 138.01031494]
[46.11626053 129.42135620]
[58.35189819 120.74442291]
[70.52498627 111.97994995]
[82.69806671 103.21547699]
[83.71452332 93.33071899]
[89.92333984 85.57235718]
[99.34493256 82.41400909]
[108.97538757 84.86267853]
[121.39488220 76.45101166]
[133.81437683 68.03935242]
[141.47180176 51.28982925]
[159.01414490 50.72268295]
[171.31169128 42.13373184]
[183.60925293 33.54478073]
[178.21475220 19.47406578]
[176.34585571 4.53018713]
[178.10690308 -10.41765308]
[183.39117432 -24.50106621]
[191.88748169 -36.90293121]
[203.09834290 -46.90479660]
[216.36920166 -53.92850876]
[230.92662048 -57.56962967]
[245.92332458 -57.62071991]
[260.48757935 -54.08314514]
[273.77380371 -47.16676712]
[285.01168823 -37.27746964]
[297.30923462 -45.86642075]
[309.60681152 -54.45537186]
[321.90435791 -63.04432297]
[334.20193481 -71.63327789]
[346.49948120 -80.22222900]
[346.58602905 -97.13921356]
[356.64077759 -110.53684998]
[372.54110718 -115.25199890]
[387.96182251 -109.61565399]
[400.13491821 -118.38012695]
[406.81338501 -132.72265625]
[421.66296387 -133.88006592]
[433.83605957 -142.64453125]
[440.51452637 -156.98707581]
[455.36410522 -158.14447021]
[467.53720093 -166.90895081]
[474.21566772 -181.25148010]
[489.06524658 -182.40888977]
[501.23834229 -191.17335510]
[513.41143799 -199.93782043]
[525.58453369 -208.70230103]
[537.75756836 -217.46676636]
[544.43609619 -231.80931091]
[559.28564453 -232.96670532]
[571.45874023 -241.73118591]
[583.56866455 -250.58274841]
[595.61474609 -259.52093506]
[596.36822510 -275.14035034]
[607.02325439 -286.58605957]
[622.54888916 -288.45370483]
[635.61444092 -279.86148071]
[640.05065918 -264.86636353]
[633.76300049 -250.54858398]
[619.72021484 -243.66854858]
[604.55291748 -247.47482300]
[592.50683594 -238.53663635]
[589.01037598 -232.03045654]
[580.22320557 -229.55809021]
[568.05010986 -220.79362488]
[562.24230957 -207.07798767]
[546.52209473 -205.29368591]
[534.34899902 -196.52922058]
[522.17590332 -187.76473999]
[510.00280762 -179.00027466]
[497.82971191 -170.23579407]
[492.02194214 -156.52015686]
[476.30166626 -154.73585510]
[464.12857056 -145.97138977]
[458.32080078 -132.25573730]
[442.60052490 -130.47145081]
[430.42742920 -121.70697784]
[424.61965942 -107.99133301]
[408.89938354 -106.20703888]
[396.72628784 -97.44256592]
[397.90829468 -84.14755249]
[392.32312012 -71.90577698]
[381.33175659 -63.95784378]
[367.74133301 -62.46550751]
[355.08843994 -67.92466736]
[342.79086304 -59.33572006]
[330.49331665 -50.74676895]
[318.19577026 -42.15781403]
[305.89819336 -33.56886292]
[293.60064697 -24.97991180]
[299.01660156 -11.02442169]
[300.93621826 3.83071780]
[299.24356079 18.72255516]
[294.03274536 32.78495789]
[285.60256958 45.19899368]
[274.43951416 55.24061203]
[261.18951416 62.32287598]
[246.62075806 66.03028107]
[231.57904053 66.14311218]
[216.93865967 62.65047073]
[203.55166626 55.75114822]
[192.19821167 45.84233856]
[179.90065002 54.43128967]
[167.60308838 63.02024078]
[165.18205261 74.86824036]
[155.01220703 82.12516022]
[142.22604370 80.45884705]
[129.80654907 88.87051392]
[117.38704681 97.28217316]
[110.07666016 114.42764282]
[91.46253967 115.38856506]
[79.28945923 124.15303802]
[67.11637115 132.91751099]
[61.98447418 140.46670532]
[54.70521545 141.71891785]
[42.40765762 150.30786133]
[37.16799927 157.78266907]
[29.87152290 158.93032837]
[17.45202637 167.34199524]
[5.03252888 175.75366211]
[-7.38696861 184.16532898]
[-19.80646515 192.57699585]
[-14.24164391 204.64004517]
[-10.56900787 217.40451050]
[-8.87260628 230.57557678]
[-9.19085503 243.84918213]
[-11.51566792 256.91897583]
[-15.79266071 269.48352051]
[-21.92242432 281.25299072]
[-29.76283073 291.95617676]
[-39.13233566 301.34643555]
[-49.81417465 309.20764160]
[-61.56138611 315.35888672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 65]
[9 64]
[10 63]
[11 62]
[13 61]
[14 60]
[15 59]
[19 57]
[20 56]
[21 55]
[22 54]
[34 51]
[35 50]
[36 49]
[38 47]
[39 46]
[80 207]
[81 206]
[82 205]
[83 204]
[84 203]
[85 201]
[86 200]
[87 198]
[88 197]
[89 196]
[93 194]
[94 193]
[95 192]
[97 189]
[98 188]
[99 187]
[111 175]
[112 174]
[113 173]
[114 172]
[115 171]
[116 170]
[120 165]
[121 164]
[123 162]
[124 161]
[126 159]
[127 158]
[129 156]
[130 155]
[131 154]
[132 153]
[133 152]
[135 150]
[136 149]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
