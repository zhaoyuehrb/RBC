%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGCGCCGGGGGCGCGCGCGCGCGCGCUGGGCGCUGCUGGGCUGCGGCGGCGGCGGCGGCGGCGGUGGUUACUAUGGCGGAGUCGGCCGGAGCCUCCUCCUUCUUCCCCCUUGUUGUCCUCCUGCUCGCCGGCAGCGGCGGGUCCGGGCCCCGGGGGGUCCAGGCUCUGCUGU\
) } def
/len { sequence length } bind def

/coor [
[77.12226105 130.31611633]
[82.38226318 116.26869965]
[74.88956451 115.93788147]
[64.18978119 126.45046997]
[59.76845551 141.64134216]
[45.26724243 145.04194641]
[34.56745529 155.55453491]
[23.86766815 166.06712341]
[13.16788006 176.57971191]
[2.46809268 187.09230042]
[-8.23169518 197.60488892]
[-12.65301800 212.79576111]
[-27.15423012 216.19636536]
[-37.85401535 226.70895386]
[-42.27534103 241.89982605]
[-56.77655029 245.30043030]
[-67.47634125 255.81303406]
[-78.17612457 266.32562256]
[-88.87591553 276.83819580]
[-99.57569885 287.35079956]
[-103.43595123 303.28912354]
[-119.24327087 307.65499878]
[-130.73643494 295.95718384]
[-126.09226990 280.22937012]
[-110.08829498 276.65100098]
[-99.38850403 266.13842773]
[-88.68871307 255.62582397]
[-77.98892975 245.11323547]
[-67.28913879 234.60064697]
[-63.63314056 220.16171265]
[-48.36660767 216.00917053]
[-37.66682053 205.49658203]
[-34.01081848 191.05764771]
[-18.74428558 186.90510559]
[-8.04449749 176.39251709]
[2.65529037 165.87992859]
[13.35507774 155.36734009]
[24.05486488 144.85475159]
[34.75465393 134.34216309]
[38.41065598 119.90322113]
[53.67718887 115.75067902]
[64.37697601 105.23809052]
[74.30019379 91.53256226]
[87.15674591 87.22985840]
[97.08263397 91.31259155]
[98.93111420 76.42692566]
[100.77958679 61.54125214]
[102.62805939 46.65558624]
[104.47653961 31.76991653]
[106.19358063 16.86851501]
[107.77906036 1.95254147]
[109.36454010 -12.96343136]
[110.95001984 -27.87940598]
[112.40380859 -42.80878830]
[113.72579193 -57.75041962]
[115.04778290 -72.69205475]
[116.36976624 -87.63368225]
[109.87882233 -102.06206512]
[118.70770264 -114.05789948]
[120.02968597 -128.99952698]
[117.66387177 -137.85423279]
[121.50913239 -144.19241333]
[123.09461212 -159.10838318]
[124.68009186 -174.02435303]
[126.26557159 -188.94032288]
[127.85105133 -203.85630798]
[129.43652344 -218.77227783]
[131.02200317 -233.68824768]
[132.60748291 -248.60421753]
[130.39830017 -257.49929810]
[134.35482788 -263.76861572]
[136.20330811 -278.65429688]
[124.58453369 -285.01531982]
[115.84709930 -294.92843628]
[111.01888275 -307.19451904]
[110.65663147 -320.33963013]
[114.78186798 -332.79226685]
[122.88089752 -343.07104492]
[133.96871948 -349.96102905]
[146.70870972 -352.65728760]
[149.08137512 -367.46844482]
[143.62434387 -382.31872559]
[153.27740479 -393.66192627]
[155.65007019 -408.47308350]
[158.02273560 -423.28424072]
[160.39540100 -438.09539795]
[151.39900208 -450.81164551]
[154.01622009 -465.79846191]
[166.19464111 -474.29678345]
[168.56730652 -489.10794067]
[170.93997192 -503.91909790]
[164.58776855 -519.03802490]
[174.71917725 -531.93322754]
[190.91186523 -529.33923340]
[196.50819397 -513.92456055]
[185.75112915 -501.54644775]
[183.37846375 -486.73529053]
[181.00581360 -471.92410278]
[189.92019653 -460.04684448]
[187.72496033 -444.99243164]
[175.20655823 -435.72274780]
[172.83389282 -420.91159058]
[170.46122742 -406.10040283]
[168.08857727 -391.28924561]
[173.71530151 -377.49835205]
[163.89253235 -365.09576416]
[161.51986694 -350.28460693]
[175.64826965 -341.06561279]
[184.36701965 -326.55865479]
[185.88748169 -309.64624023]
[179.85694885 -293.71350098]
[167.43891907 -281.97055054]
[151.08897400 -276.80581665]
[149.24050903 -261.92013550]
[147.52345276 -247.01873779]
[145.93797302 -232.10276794]
[144.35249329 -217.18679810]
[142.76702881 -202.27082825]
[141.18154907 -187.35484314]
[139.59606934 -172.43887329]
[138.01058960 -157.52290344]
[136.42510986 -142.60693359]
[134.97131348 -127.67754364]
[133.64933777 -112.73591614]
[140.23483276 -99.37625885]
[131.31140137 -86.31169891]
[129.98941040 -71.37006378]
[128.66741943 -56.42843246]
[127.34543610 -41.48680115]
[129.89566040 -34.52584839]
[125.86598969 -26.29392624]
[124.28050995 -11.37795353]
[122.69503784 3.53801990]
[121.10955811 18.45399284]
[123.53653717 25.45886803]
[119.36220551 33.61839294]
[117.51373291 48.50405884]
[115.66525269 63.38972855]
[113.81678009 78.27539825]
[111.96829987 93.16106415]
[116.27504730 107.52950287]
[126.00669861 118.94418335]
[135.73835754 130.35887146]
[145.47000122 141.77354431]
[155.20166016 153.18823242]
[165.03366089 164.51658630]
[174.96524048 175.75775146]
[184.89683533 186.99890137]
[199.83241272 192.21798706]
[202.46080017 206.87884521]
[212.39239502 218.11999512]
[222.32397461 229.36114502]
[232.25556946 240.60231018]
[242.18716431 251.84346008]
[252.11874390 263.08462524]
[267.83044434 267.78295898]
[271.35360718 283.79919434]
[259.06393433 294.65716553]
[243.60395813 289.18713379]
[240.87759399 273.01620483]
[230.94599915 261.77505493]
[221.01441956 250.53388977]
[211.08282471 239.29273987]
[201.15124512 228.05158997]
[191.21965027 216.81042480]
[176.99443054 212.39538574]
[173.65567017 196.93048096]
[163.72409058 185.68933105]
[153.79249573 174.44818115]
[146.98687744 171.50843811]
[143.78697205 162.91987610]
[134.05532837 151.50520325]
[124.32366943 140.09051514]
[114.59201813 128.67584229]
[104.86036682 117.26115417]
[97.36766815 116.93033600]
[101.36913300 131.38676453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[13 32]
[14 31]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[50 134]
[51 133]
[52 132]
[53 131]
[54 129]
[55 128]
[56 127]
[57 126]
[59 124]
[60 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[71 114]
[72 113]
[80 107]
[81 106]
[83 104]
[84 103]
[85 102]
[86 101]
[89 98]
[90 97]
[91 96]
[141 175]
[142 174]
[143 173]
[144 172]
[145 171]
[146 169]
[147 168]
[148 167]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
