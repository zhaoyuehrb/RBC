%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGAUCGUGUUUCAUUUCAGGAAGAUAUAUGCGUCAGGAAAAUUUCUAUCUUCUUUUGUAUUAUCAAGGAGAUAUUUGGAGCAGAGUCAACCCUCUCAGUUACAUAAAAUAAAAAAUGGCAUAUUCUUGGCAAACGGAUCCAAAUCCUAAUGAAUCACACGAAAAGCAGUAUGAACACCAAGAAUUUCUCUUUGUAAAUCAACCCCAUUCUUCUA\
) } def
/len { sequence length } bind def

/coor [
[430.49337769 556.12915039]
[431.63040161 545.58642578]
[434.30255127 535.32196045]
[438.45272827 525.55810547]
[443.99188232 516.50640869]
[450.80084229 508.36318970]
[441.19604492 496.84155273]
[431.59124756 485.31991577]
[421.98645020 473.79830933]
[412.38165283 462.27667236]
[402.77685547 450.75503540]
[393.00625610 439.37365723]
[383.07192993 428.13494873]
[373.13760376 416.89620972]
[363.20327759 405.65747070]
[353.26895142 394.41873169]
[343.33462524 383.18002319]
[338.71170044 381.99737549]
[334.78097534 377.90075684]
[333.28112793 371.46911621]
[323.67633057 359.94747925]
[314.07153320 348.42584229]
[304.46673584 336.90423584]
[284.54840088 331.48931885]
[281.25582886 310.31161499]
[271.15985107 299.21789551]
[261.06384277 288.12414551]
[247.04400635 293.25964355]
[232.08557129 292.63458252]
[218.46928406 286.31307983]
[208.28315735 275.23016357]
[203.10234070 261.05368042]
[203.74552917 245.93319702]
[210.14584351 232.17414856]
[200.04985046 221.08041382]
[189.95387268 209.98666382]
[179.85787964 198.89292908]
[169.76188660 187.79919434]
[159.66589355 176.70545959]
[149.56990051 165.61172485]
[139.47390747 154.51799011]
[119.80884552 164.32737732]
[98.03216553 167.27947998]
[76.46525574 163.05963135]
[57.40713882 152.11764526]
[42.88940430 135.61994934]
[34.45962906 115.32518005]
[33.01642990 93.39675903]
[18.34572411 90.27100372]
[3.67501688 87.14524841]
[-10.99569035 84.01949310]
[-25.66639709 80.89373779]
[-40.33710480 77.76797485]
[-55.00781250 74.64221954]
[-69.67852020 71.51646423]
[-84.34922791 68.39070892]
[-94.57209778 79.85319519]
[-109.16162872 84.65332031]
[-124.19330597 81.49987793]
[-135.62368774 71.24113464]
[-140.37805176 56.63662720]
[-137.17752075 41.61490631]
[-126.88298798 30.21673584]
[-112.26365662 25.50816536]
[-97.25203705 28.75577927]
[-85.88619232 39.08598328]
[-81.22347260 53.72000504]
[-66.55276489 56.84576035]
[-51.88205719 59.97151566]
[-37.21134949 63.09727097]
[-22.54064178 66.22303009]
[-7.86993504 69.34878540]
[6.80077219 72.47454071]
[21.47147942 75.60029602]
[36.14218521 78.72605133]
[42.15488434 65.58570099]
[50.83385468 54.03162384]
[61.77905655 44.59638214]
[54.69015884 31.37717247]
[39.82755661 26.71445847]
[32.82671738 13.20731640]
[37.36349869 -0.93316567]
[30.27459908 -14.15237522]
[16.93399620 -22.65760422]
[17.73790550 -37.53049850]
[10.64900684 -50.74971008]
[3.56010723 -63.96891785]
[-11.83119392 -65.94058228]
[-23.10098457 -76.60695648]
[-25.91580200 -91.86658478]
[-19.19329071 -105.85184479]
[-5.51839209 -113.18511200]
[9.85061455 -111.04659271]
[21.00403404 -100.25859833]
[23.65314674 -84.96932983]
[16.77931595 -71.05781555]
[23.86821556 -57.83860779]
[30.95711517 -44.61939621]
[43.79067230 -37.05969620]
[43.49380875 -21.24127388]
[50.58270645 -8.02206516]
[64.87162018 -3.97700071]
[72.24908447 9.32817364]
[67.90937042 24.28827477]
[74.99826813 37.50748444]
[83.54576111 34.73393250]
[92.38655090 33.12372208]
[101.36304474 32.70554733]
[110.31523895 33.48686600]
[119.08357239 35.45374680]
[127.51174927 38.57114029]
[135.44953918 42.78347015]
[142.75546265 48.01565933]
[149.29928589 54.17444229]
[154.96437073 61.15004730]
[159.64974976 68.81813812]
[163.27189636 77.04202271]
[165.76625061 85.67512512]
[167.08834839 94.56356812]
[167.21463013 103.54890442]
[166.14283752 112.47098541]
[163.89208984 121.17078400]
[160.50248718 129.49320984]
[156.03446960 137.28994751]
[150.56764221 144.42199707]
[160.66363525 155.51573181]
[170.75962830 166.60946655]
[180.85562134 177.70320129]
[190.95161438 188.79695129]
[201.04760742 199.89068604]
[211.14358521 210.98442078]
[221.23957825 222.07815552]
[235.53916931 216.99900818]
[250.65319824 217.77944946]
[264.28015137 224.26942444]
[274.35687256 235.45188904]
[279.37097168 249.60192871]
[278.58770752 264.55291748]
[272.15759277 278.02816772]
[282.25357056 289.12191772]
[292.34957886 300.21563721]
[301.73544312 299.40216064]
[310.31701660 302.94348145]
[316.22006226 309.92941284]
[318.21871948 318.71340942]
[315.98837280 327.29943848]
[325.59317017 338.82104492]
[335.19796753 350.34268188]
[344.80276489 361.86431885]
[354.57336426 373.24569702]
[364.50769043 384.48440552]
[374.44201660 395.72314453]
[384.37634277 406.96188354]
[394.31066895 418.20062256]
[404.24499512 429.43933105]
[410.37536621 431.89581299]
[413.82949829 436.40155029]
[414.29849243 441.15023804]
[423.90328979 452.67187500]
[433.50808716 464.19351196]
[443.11288452 475.71511841]
[452.71768188 487.23675537]
[462.32247925 498.75839233]
[480.28128052 490.07925415]
[499.91958618 486.65103149]
[519.73529053 488.72991943]
[538.21447754 496.15115356]
[553.94683838 508.34194946]
[565.73358154 524.36590576]
[572.67852783 542.99468994]
[574.25640869 562.80242920]
[570.35247803 582.27459717]
[561.27099609 599.92401123]
[572.58129883 609.77673340]
[583.89166260 619.62945557]
[601.32104492 618.10913086]
[614.20227051 629.44317627]
[614.88464355 646.24914551]
[626.33642578 655.93713379]
[641.86950684 658.94305420]
[646.58892822 673.07019043]
[658.04071045 682.75811768]
[669.49249268 692.44610596]
[680.94433594 702.13403320]
[696.98699951 702.23834229]
[706.79431152 714.93463135]
[702.84289551 730.48345947]
[688.16387939 736.95703125]
[674.01788330 729.38946533]
[671.25634766 713.58581543]
[659.80456543 703.89788818]
[648.35278320 694.20996094]
[636.90100098 684.52197266]
[622.18707275 682.20898438]
[616.64849854 667.38891602]
[605.19671631 657.70092773]
[592.63494873 660.55841064]
[580.53997803 655.58605957]
[573.41107178 644.39147949]
[574.03894043 630.93981934]
[562.72857666 621.08709717]
[551.41827393 611.23437500]
[543.19128418 617.85485840]
[534.07965088 623.19818115]
[524.28015137 627.14788818]
[514.00463867 629.61785889]
[503.47515869 630.55377197]
[492.91955566 629.93469238]
[482.56634521 627.77313232]
[472.63970947 624.11511230]
[463.35473633 619.03900146]
[454.91275024 612.65399170]
[447.49694824 605.09759521]
[441.26837158 596.53277588]
[436.36245728 587.14440918]
[432.88607788 577.13531494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[12 155]
[13 154]
[14 153]
[15 152]
[16 151]
[17 150]
[20 149]
[21 148]
[22 147]
[23 146]
[25 141]
[26 140]
[27 139]
[34 132]
[35 131]
[36 130]
[37 129]
[38 128]
[39 127]
[40 126]
[41 125]
[48 75]
[49 74]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[78 105]
[79 104]
[82 101]
[83 100]
[85 98]
[86 97]
[87 96]
[173 202]
[174 201]
[175 200]
[178 196]
[179 195]
[181 193]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
