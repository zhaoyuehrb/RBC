%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACUUCAUGUUCAUUAUCUUCUCUUCAUUCUUAAAAAAGGAACACAUUUUAUAAAAGAGUCCUGACUGAUAAUGUGUCCCUUGACCUUGCAUGUCACUGGCCUAAUGAAUGUCUCUGAGCCAAAUUCCAGCUUUGCUUUUGUAAAUGAAUUUAUACUCCAAGGUUUCUCUU\
) } def
/len { sequence length } bind def

/coor [
[35.79991150 166.39813232]
[31.57909393 152.00421143]
[32.18070984 137.01628113]
[37.54162979 123.00698853]
[47.09934998 111.44627380]
[59.85099411 103.54719543]
[74.45857239 100.13857269]
[89.38816071 101.57775879]
[77.23691559 92.78303528]
[65.08566284 83.98830414]
[52.93442154 75.19358063]
[40.78317642 66.39884949]
[28.63192940 57.60412216]
[16.48068428 48.80939484]
[4.32943773 40.01466751]
[-7.82180786 31.21994209]
[-19.97305298 22.42521477]
[-31.93420410 31.63449478]
[-45.99153900 37.09468460]
[-61.00271606 38.37125015]
[-75.75046539 35.36925125]
[-89.04131317 28.34034729]
[-99.80211639 17.86174011]
[-107.16676331 4.78876400]
[-110.54584503 -9.81491947]
[-109.67385101 -24.76386452]
[-104.62997437 -38.84706879]
[-116.78121948 -47.64179611]
[-128.93246460 -56.43652344]
[-141.17121887 -47.56689453]
[-155.53282166 -42.92069626]
[-170.60690308 -42.94097900]
[-184.91723633 -47.61316299]
[-197.06626892 -56.46773529]
[-205.87164307 -68.62735748]
[-210.48118591 -82.89383698]
[-210.45544434 -97.86612701]
[-205.80953979 -112.07797241]
[-217.96078491 -120.87269592]
[-230.11203003 -129.66741943]
[-242.26327515 -138.46215820]
[-257.97906494 -140.28553772]
[-263.75271606 -154.01559448]
[-275.90396118 -162.81031799]
[-288.05520630 -171.60504150]
[-300.20645142 -180.39978027]
[-312.35769653 -189.19450378]
[-324.50894165 -197.98922729]
[-336.66018677 -206.78395081]
[-349.22698975 -198.33999634]
[-363.89700317 -194.71183777]
[-378.89492798 -196.31864929]
[-392.41275024 -202.94728088]
[-402.82739258 -213.78041077]
[-408.89584351 -227.49713135]
[-409.90328979 -242.43414307]
[-405.74740601 -256.78732300]
[-417.89865112 -265.58206177]
[-434.25775146 -266.72747803]
[-441.20114136 -281.58416748]
[-431.58609009 -294.86883545]
[-415.30368042 -292.91534424]
[-409.10391235 -277.73330688]
[-396.95266724 -268.93856812]
[-384.61676025 -277.37127686]
[-370.11288452 -281.08163452]
[-355.18679810 -279.60311890]
[-341.64184570 -273.09497070]
[-331.12121582 -262.32525635]
[-324.90847778 -248.58036804]
[-323.77105713 -233.51124573]
[-327.86544800 -218.93519592]
[-315.71420288 -210.14047241]
[-303.56295776 -201.34574890]
[-291.41171265 -192.55102539]
[-279.26046753 -183.75628662]
[-267.10922241 -174.96156311]
[-254.95799255 -166.16683960]
[-240.11134338 -164.97250366]
[-233.46855164 -150.61340332]
[-221.31730652 -141.81866455]
[-209.16606140 -133.02394104]
[-197.01481628 -124.22921753]
[-184.96629333 -133.08325195]
[-170.75173950 -137.78607178]
[-155.75927734 -137.86517334]
[-141.45709229 -133.30021667]
[-129.24969482 -124.52629089]
[-120.33992004 -112.39241028]
[-115.61046600 -98.07946014]
[-115.53646851 -82.98519135]
[-120.13774109 -68.58776855]
[-107.98649597 -59.79304123]
[-95.83525085 -50.99831390]
[-84.03327942 -60.19019699]
[-70.10533142 -65.68961334]
[-55.17702103 -67.04292297]
[-40.45741272 -64.13194275]
[-27.14107132 -57.18419647]
[-16.31114388 -46.75516891]
[-8.85124111 -33.68389511]
[-5.37335682 -19.02547264]
[-6.16766405 -3.96587849]
[-11.17832661 10.27396870]
[0.97291946 19.06869507]
[13.12416553 27.86342239]
[25.27541161 36.65814972]
[37.42665482 45.45287704]
[49.57790375 54.24760437]
[61.72914886 63.04233170]
[73.88039398 71.83705902]
[86.03163910 80.63179016]
[98.18288422 89.42651367]
[111.54179382 96.24850464]
[125.79071045 100.93553925]
[139.77058411 94.06525421]
[154.15425110 99.02156067]
[160.61785889 112.39157867]
[174.86677551 117.07861328]
[189.11570740 121.76564789]
[204.56437683 113.59495544]
[220.82821655 119.00171661]
[228.02105713 134.18592834]
[242.35273743 138.61344910]
[256.68441772 143.04098511]
[271.01608276 147.46850586]
[285.34777832 151.89602661]
[299.67944336 156.32354736]
[307.40994263 150.81451416]
[316.67477417 149.52096558]
[325.35861206 152.60958862]
[331.53790283 159.26103210]
[333.90670776 167.88243103]
[347.97604370 173.08377075]
[362.04537964 178.28511047]
[376.11471558 183.48645020]
[390.18405151 188.68778992]
[406.24813843 185.38978577]
[416.93252563 197.83067322]
[411.24603271 213.21234131]
[395.03842163 215.71144104]
[384.98269653 202.75711060]
[370.91336060 197.55577087]
[356.84405518 192.35444641]
[342.77471924 187.15310669]
[328.70538330 181.95176697]
[308.77706909 187.24711609]
[295.25192261 170.65522766]
[280.92025757 166.22770691]
[266.58856201 161.80018616]
[252.25688171 157.37266541]
[237.92520142 152.94512939]
[223.59352112 148.51760864]
[213.13298035 156.07678223]
[200.03300476 156.22190857]
[189.08671570 148.67527771]
[184.42866516 136.01457214]
[170.17974854 131.32752991]
[155.93083191 126.64049530]
[142.79232788 133.56259155]
[128.27513123 129.01225281]
[121.10367584 115.18445587]
[106.85475922 110.49742126]
[116.77471161 121.74884796]
[122.57772064 135.58087158]
[123.65489960 150.54214478]
[119.89321136 165.06282043]
[111.68737793 177.61926270]
[99.89839935 186.89395142]
[85.76327515 191.91374207]
[70.76515961 192.15188599]
[56.47778320 187.58341980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 113]
[9 112]
[10 111]
[11 110]
[12 109]
[13 108]
[14 107]
[15 106]
[16 105]
[17 104]
[27 94]
[28 93]
[29 92]
[38 83]
[39 82]
[40 81]
[41 80]
[43 78]
[44 77]
[45 76]
[46 75]
[47 74]
[48 73]
[49 72]
[57 64]
[58 63]
[114 163]
[115 162]
[118 159]
[119 158]
[120 157]
[123 153]
[124 152]
[125 151]
[126 150]
[127 149]
[128 148]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
