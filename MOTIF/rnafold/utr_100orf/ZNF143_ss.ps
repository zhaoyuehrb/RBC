%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGCCUCAGACACACUAUGCGGGUUGCGGGGCCUGGGGGCCGGACGGCUGUUUCCUGUCCUGGUGCAUGGUGGUCGGACGAAGGAAUUGUUGGAAAAUUUUCUCGGAGGUAGAAGAUGUUGUUAGCCCAAAUAAAUCGAGAUUCUCAGGGAAUGACAGAGUUUCCUGGAGGAGGGAUGGAGGCGCAACAUGUUACGCUGUGCUUGACAGAGGCAG\
) } def
/len { sequence length } bind def

/coor [
[101.70541382 176.28419495]
[107.97444153 167.40580750]
[104.57698822 152.79563904]
[101.17953491 138.18545532]
[97.78208160 123.57527924]
[83.86444855 117.33080292]
[76.64301300 103.89410400]
[61.82769012 101.54759216]
[47.01236343 99.20107269]
[32.19704056 96.85455322]
[17.38171387 94.50803375]
[9.01803398 111.48129272]
[-15.32481289 117.71662140]
[-29.83201599 121.52989960]
[-44.33921814 125.34317017]
[-51.83738327 130.54808044]
[-59.08082199 129.10574341]
[-73.64099884 132.71147156]
[-88.20117188 136.31719971]
[-102.76134491 139.92294312]
[-117.32152557 143.52867126]
[-131.88169861 147.13439941]
[-146.44187927 150.74012756]
[-161.00204468 154.34585571]
[-175.56222534 157.95158386]
[-178.46862793 165.76127625]
[-184.15708923 171.72146606]
[-191.65005493 174.91520691]
[-199.70135498 174.89184570]
[-207.00334167 171.72921753]
[-212.39926147 166.00907898]
[-227.14154053 168.77769470]
[-241.88381958 171.54632568]
[-256.62609863 174.31495667]
[-271.36837769 177.08358765]
[-286.11062622 179.85220337]
[-294.01843262 190.03637695]
[-306.34951782 192.04177856]
[-316.40960693 185.33204651]
[-331.18991089 187.88987732]
[-345.97021484 190.44770813]
[-360.69235229 193.32151794]
[-375.34954834 196.51000977]
[-390.00674438 199.69848633]
[-404.66394043 202.88696289]
[-416.42794800 214.31239319]
[-432.12866211 209.57748413]
[-435.61456299 193.55310059]
[-423.29962158 182.72377014]
[-407.85241699 188.22976685]
[-393.19522095 185.04127502]
[-378.53802490 181.85279846]
[-363.88082886 178.66432190]
[-361.67898560 175.91839600]
[-358.04061890 174.09957886]
[-353.41461182 173.87010193]
[-348.52804565 175.66740417]
[-333.74774170 173.10957336]
[-318.96743774 170.55174255]
[-306.10931396 158.60455322]
[-288.87927246 165.10993958]
[-274.13699341 162.34130859]
[-259.39471436 159.57267761]
[-244.65243530 156.80404663]
[-229.91017151 154.03543091]
[-215.16789246 151.26679993]
[-200.19480896 135.63557434]
[-179.16795349 143.39141846]
[-164.60777283 139.78569031]
[-150.04760742 136.17994690]
[-135.48742676 132.57421875]
[-120.92725372 128.96849060]
[-106.36708069 125.36276245]
[-91.80690002 121.75702667]
[-77.24672699 118.15129852]
[-62.68655396 114.54557037]
[-48.15249252 110.83596802]
[-33.64529037 107.02269745]
[-19.13808823 103.20941925]
[-15.82892990 96.47893524]
[-24.17734337 84.01683044]
[-9.21061325 83.01795197]
[-5.90145493 76.28746796]
[-11.74050617 62.47061157]
[-17.57955742 48.65375900]
[-30.07856369 38.95399094]
[-27.90589905 24.21870232]
[-33.74494934 10.40184689]
[-39.58400345 -3.41500807]
[-45.42305374 -17.23186302]
[-51.26210403 -31.04871750]
[-57.10115814 -44.86557388]
[-72.10034943 -49.28803253]
[-80.70458221 -62.34564590]
[-78.85118866 -77.87300873]
[-67.41529083 -88.53857422]
[-51.79656982 -89.30638123]
[-39.36970520 -79.81391144]
[-36.00228500 -64.54320526]
[-43.28430176 -50.70462418]
[-37.44525146 -36.88776779]
[-31.60619926 -23.07091522]
[-25.76714706 -9.25405979]
[-19.92809677 4.56279516]
[-14.08904457 18.37965012]
[-2.00768733 27.09114075]
[-3.76270318 42.81470490]
[2.07634830 56.63156128]
[7.91540003 70.44841766]
[19.72823143 79.69271088]
[34.54355621 82.03923035]
[49.35888290 84.38574982]
[64.17420959 86.73226166]
[78.98953247 89.07878113]
[91.04970551 78.07729340]
[107.36354065 77.49464417]
[120.17782593 87.60773468]
[134.78800964 84.21028137]
[146.47706604 73.54837036]
[160.62605286 78.20190430]
[175.23623657 74.80445099]
[189.84640503 71.40700531]
[204.45658875 68.00955200]
[219.06677246 64.61209869]
[233.67694092 61.21464539]
[248.28712463 57.81719589]
[253.35983276 53.59376907]
[258.96301270 52.69583130]
[263.36291504 54.53765488]
[278.06414795 51.55879974]
[292.76541138 48.57994080]
[295.08361816 38.24204254]
[300.68582153 29.29478836]
[308.91351318 22.74205971]
[318.81530762 19.30908394]
[329.25698853 19.36222076]
[339.05139160 22.87003517]
[347.09338379 29.40975380]
[352.48455811 38.21805954]
[367.33187866 36.08333969]
[382.17919922 33.94861603]
[387.31085205 23.23347664]
[396.87792969 16.39343834]
[408.43896484 15.03196907]
[419.11126709 19.37216568]
[426.28979492 28.22982025]
[441.19201660 26.51994896]
[456.09423828 24.81007767]
[470.99645996 23.10020638]
[485.89871216 21.39033508]
[500.78833008 19.57410622]
[515.66461182 17.65161514]
[530.54089355 15.72912121]
[545.41723633 13.80662823]
[560.29351807 11.88413525]
[575.16979980 9.96164227]
[590.04608154 8.03915024]
[599.49725342 -4.62777662]
[615.14892578 -6.81895351]
[627.71520996 2.76560593]
[629.74078369 18.43955231]
[620.02386475 30.90381050]
[604.32940674 32.76355743]
[591.96856689 22.91543961]
[577.09228516 24.83793259]
[562.21600342 26.76042557]
[547.33972168 28.68291855]
[532.46343994 30.60541153]
[517.58709717 32.52790451]
[502.71081543 34.45039749]
[496.48422241 38.42242813]
[487.60858154 36.29256058]
[472.70632935 38.00243378]
[457.80410767 39.71230316]
[442.90188599 41.42217636]
[427.99966431 43.13204575]
[417.49224854 58.12822342]
[399.04275513 60.71949005]
[384.31390381 48.79593658]
[369.46658325 50.93066025]
[354.61926270 53.06538391]
[346.66552734 70.94382477]
[329.39587402 80.44836426]
[309.75015259 77.56018829]
[295.74426270 63.28118134]
[281.04302979 66.26004028]
[266.34176636 69.23889160]
[251.68457031 72.42737579]
[237.07440186 75.82482910]
[222.46421814 79.22227478]
[207.85403442 82.61972809]
[193.24386597 86.01718140]
[178.63368225 89.41463470]
[164.02349854 92.81208038]
[153.37945557 103.23099518]
[138.18545532 98.82046509]
[123.57527924 102.21791840]
[120.10113525 112.51628113]
[112.39226532 120.17782593]
[115.78971863 134.78800964]
[119.18716431 149.39817810]
[122.58461761 164.00836182]
[137.00482178 178.10073853]
[130.56600952 196.33741760]
[134.37928772 210.84461975]
[138.19255066 225.35182190]
[142.00582886 239.85902405]
[145.81910706 254.36622620]
[158.89384460 263.66305542]
[159.63336182 279.68905640]
[147.47036743 290.15045166]
[131.73526001 287.02218628]
[124.49868011 272.70394897]
[131.31190491 258.17950439]
[127.49862671 243.67230225]
[123.68535614 229.16510010]
[119.87207794 214.65789795]
[116.05880737 200.15069580]
[106.81325531 195.81861877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[7 114]
[8 113]
[9 112]
[10 111]
[11 110]
[13 79]
[14 78]
[15 77]
[17 76]
[18 75]
[19 74]
[20 73]
[21 72]
[22 71]
[23 70]
[24 69]
[25 68]
[31 66]
[32 65]
[33 64]
[34 63]
[35 62]
[36 61]
[39 59]
[40 58]
[41 57]
[42 53]
[43 52]
[44 51]
[45 50]
[83 109]
[84 108]
[85 107]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[117 197]
[118 196]
[120 194]
[121 193]
[122 192]
[123 191]
[124 190]
[125 189]
[126 188]
[129 187]
[130 186]
[131 185]
[139 181]
[140 180]
[141 179]
[146 176]
[147 175]
[148 174]
[149 173]
[150 172]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[204 218]
[205 217]
[206 216]
[207 215]
[208 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
