%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUGGAGGGGAAGCGAGGAGGCGGGGAAGGGGCGGGCCCCAGGAGCAGGCGGGCGGGGCUCCCCGCCCUCCAGCGCGCCCGGAGGCUACCACUCCCUGCAGAUGCGCUGGCCCCAGCCCGGGGCUGCCGCUCGCCUUCCCCCGGAGUCUCCUGGACCCCCGGAGUCUCCUGGACCCCCGGAGCGGGAGGCAGCGGCCGCGC\
) } def
/len { sequence length } bind def

/coor [
[-199.07992554 24.27908707]
[-203.67962646 17.75069046]
[-205.30162048 10.02707672]
[-219.32051086 4.69131088]
[-233.33941650 -0.64445478]
[-247.35832214 -5.98022079]
[-267.08898926 -1.86986279]
[-278.64816284 -17.36595726]
[-292.82550049 -22.26532745]
[-307.00280762 -27.16469955]
[-321.18011475 -32.06407166]
[-339.17044067 -28.14999771]
[-350.14682007 -41.83906174]
[-364.39825439 -46.51845169]
[-378.64968872 -51.19783783]
[-392.90112305 -55.87722397]
[-403.51431274 -44.96293640]
[-417.75573730 -39.76019287]
[-432.78234863 -41.25061798]
[-445.61895752 -49.08529663]
[-453.74743652 -61.66453934]
[-455.60049438 -76.46425629]
[-469.85192871 -81.14364624]
[-484.10336304 -85.82303619]
[-498.35479736 -90.50241852]
[-512.60626221 -95.18180847]
[-526.85766602 -99.86119843]
[-541.10906982 -104.54058075]
[-555.08526611 -97.66279602]
[-569.47161865 -102.61138153]
[-575.94238281 -115.97792816]
[-590.19384766 -120.65731049]
[-599.60797119 -115.19300079]
[-610.25585938 -115.80292511]
[-618.63201904 -122.04423523]
[-622.11187744 -131.66003418]
[-636.21166992 -136.77821350]
[-650.31146240 -141.89639282]
[-664.41125488 -147.01458740]
[-678.55023193 -152.02351379]
[-692.72753906 -156.92288208]
[-708.29803467 -154.11741638]
[-717.80010986 -165.58740234]
[-731.97741699 -170.48677063]
[-747.54785156 -167.68130493]
[-757.04992676 -179.15129089]
[-771.22723389 -184.05065918]
[-790.82122803 -179.33168030]
[-802.85443115 -194.46263123]
[-817.17657471 -198.92091370]
[-832.65277100 -195.63493347]
[-842.50524902 -206.80537415]
[-856.82739258 -211.26365662]
[-871.14953613 -215.72193909]
[-885.47167969 -220.18022156]
[-899.79382324 -224.63850403]
[-914.11596680 -229.09678650]
[-928.43811035 -233.55506897]
[-944.30767822 -229.42129517]
[-955.62817383 -241.28628540]
[-950.75402832 -256.94433594]
[-934.69934082 -260.28781128]
[-923.97979736 -247.87721252]
[-909.65765381 -243.41893005]
[-895.33551025 -238.96064758]
[-881.01336670 -234.50236511]
[-866.69122314 -230.04406738]
[-852.36907959 -225.58578491]
[-838.04693604 -221.12750244]
[-823.59515381 -224.73237610]
[-812.71832275 -213.24304199]
[-798.39617920 -208.78475952]
[-789.80664062 -214.33390808]
[-779.36138916 -214.23356628]
[-770.51550293 -208.27525330]
[-766.32788086 -198.22796631]
[-752.15051270 -193.32859802]
[-737.59411621 -196.48449707]
[-727.07800293 -184.66407776]
[-712.90069580 -179.76470947]
[-698.34429932 -182.92060852]
[-687.82818604 -171.10018921]
[-673.65087891 -166.20082092]
[-666.29736328 -166.98783875]
[-659.29309082 -161.11437988]
[-645.19329834 -155.99620056]
[-631.09350586 -150.87800598]
[-616.99371338 -145.75982666]
[-598.25726318 -150.52328491]
[-585.51446533 -134.90875244]
[-571.26300049 -130.22935486]
[-558.12823486 -137.15850830]
[-543.60858154 -132.61596680]
[-536.42968750 -118.79201508]
[-522.17828369 -114.11263275]
[-507.92684937 -109.43324280]
[-493.67541504 -104.75385284]
[-479.42398071 -100.07446289]
[-465.17254639 -95.39508057]
[-450.92111206 -90.71569061]
[-440.65573120 -101.53636932]
[-426.65258789 -106.84881592]
[-411.67019653 -105.54925537]
[-398.68484497 -97.84208679]
[-390.29940796 -85.20993042]
[-388.22174072 -70.12865448]
[-373.97030640 -65.44927216]
[-359.71887207 -60.76988220]
[-345.46743774 -56.09049606]
[-334.53042603 -61.26786804]
[-322.61627197 -57.48113632]
[-316.28073120 -46.24138260]
[-302.10342407 -41.34201050]
[-287.92611694 -36.44263840]
[-273.74880981 -31.54326820]
[-264.99166870 -36.82393646]
[-254.55450439 -36.40038681]
[-245.89726257 -30.17118835]
[-242.02255249 -19.99912262]
[-228.00364685 -14.66335678]
[-213.98474121 -9.32759094]
[-199.96585083 -3.99182463]
[-179.04673767 -9.53577328]
[-165.10714722 8.00527191]
[-150.78500366 12.46355534]
[-136.33322144 8.85869503]
[-125.45635223 20.34801292]
[-111.13421631 24.80629730]
[-96.81207275 29.26457977]
[-82.48992920 33.72286606]
[-68.16779327 38.18114853]
[-53.84564972 42.63943100]
[-46.52003860 41.62522507]
[-39.33733368 47.27910995]
[-25.08589935 51.95849991]
[-10.83446693 56.63788605]
[3.41696525 61.31727600]
[17.66839790 65.99666595]
[31.91983032 70.67604828]
[46.17126465 75.35543823]
[64.75129700 70.01443481]
[77.97125244 85.22714996]
[92.36067200 89.46325684]
[125.94751740 57.73682404]
[140.78569031 59.93419266]
[155.62387085 62.13156128]
[170.46205139 64.32893372]
[185.24679565 58.69670486]
[196.70332336 68.21497345]
[211.54150391 70.41233826]
[226.37968445 72.60971069]
[241.21786499 74.80707550]
[250.17192078 72.96790314]
[256.26794434 77.15497589]
[271.07034302 79.58171082]
[286.21237183 73.28475952]
[299.07049561 83.46318817]
[296.41741943 99.64630127]
[280.98236084 105.18629456]
[268.64361572 94.38410187]
[253.84121704 91.95737457]
[239.02049255 89.64525604]
[224.18231201 87.44789124]
[209.34413147 85.25051880]
[194.50595093 83.05314636]
[180.78253174 88.84254456]
[168.26467896 79.16710663]
[153.42651367 76.96974182]
[138.58833313 74.77236938]
[123.75014496 72.57500458]
[120.60098267 79.38182068]
[111.15347290 99.80226135]
[122.43425751 109.68881226]
[138.61596680 112.35048676]
[144.14778137 127.78845978]
[133.33905029 140.12147522]
[117.30886078 136.66238403]
[112.54770660 120.96960449]
[101.26692200 111.08305359]
[88.12455750 103.85267639]
[73.73514557 99.61656189]
[64.49463654 105.36959839]
[53.83292007 105.08948517]
[45.26765442 99.11037445]
[41.49187469 89.60687256]
[27.24044228 84.92748260]
[12.98900986 80.24809265]
[-1.26242256 75.56871033]
[-15.51385498 70.88932037]
[-29.76528740 66.20993042]
[-44.01671982 61.53054428]
[-58.30393600 56.96157074]
[-72.62607574 52.50328827]
[-86.94821167 48.04500580]
[-101.27035522 43.58671951]
[-115.59249878 39.12843704]
[-129.91464233 34.67015457]
[-145.39083862 37.95612717]
[-155.24328613 26.78569603]
[-169.56542969 22.32741165]
[-176.11935425 27.52056885]
[-184.10238647 29.67257500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 122]
[4 121]
[5 120]
[6 119]
[8 115]
[9 114]
[10 113]
[11 112]
[13 109]
[14 108]
[15 107]
[16 106]
[22 100]
[23 99]
[24 98]
[25 97]
[26 96]
[27 95]
[28 94]
[31 91]
[32 90]
[36 88]
[37 87]
[38 86]
[39 85]
[40 83]
[41 82]
[43 80]
[44 79]
[46 77]
[47 76]
[49 72]
[50 71]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[124 200]
[125 199]
[127 197]
[128 196]
[129 195]
[130 194]
[131 193]
[132 192]
[134 191]
[135 190]
[136 189]
[137 188]
[138 187]
[139 186]
[140 185]
[142 181]
[143 180]
[144 170]
[145 169]
[146 168]
[147 167]
[149 165]
[150 164]
[151 163]
[152 162]
[154 161]
[155 160]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
