%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:19:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAGGCCUCUGGGGUGGGAUCGCGGGCCGUAAGUGGCUGUGGAGCUGGGGUCACUGCGCGGUGGGACCAUGGCCUCGGAGAAGCCGCUGGCGGCAGUCACUUGUACAGCGCCGGUCAACAUCGCGGUCAUCAAGUACUGGGGCAAGCGCGAUGAAGAGCUGGUUCUGC\
) } def
/len { sequence length } bind def

/coor [
[127.37782288 166.40295410]
[112.98919678 170.64173889]
[99.47261810 164.13772583]
[93.80673218 150.24896240]
[98.91819000 136.14469910]
[90.10140991 148.27995300]
[81.28462982 160.41520691]
[72.46784973 172.55046082]
[63.65107346 184.68571472]
[61.79914474 200.39816284]
[48.05863190 206.14686584]
[39.24185562 218.28211975]
[30.42507553 230.41737366]
[34.38345337 245.54566956]
[27.64478111 259.65682983]
[13.39085197 266.08795166]
[-1.64806163 261.80249023]
[-10.37104607 248.82392883]
[-8.65937519 233.28030396]
[2.67875290 222.51086426]
[18.28982162 221.60060120]
[27.10659981 209.46534729]
[35.92337799 197.33009338]
[37.14467239 182.48564148]
[51.51581955 175.86894226]
[60.33259583 163.73368835]
[69.14937592 151.59843445]
[77.96615601 139.46318054]
[86.78293610 127.32791901]
[74.52647400 107.00159454]
[81.24375153 87.60807037]
[72.20423126 75.63780975]
[63.16471481 63.66755295]
[54.12519455 51.69729233]
[45.08567429 39.72703552]
[36.04615784 27.75677681]
[27.00663757 15.78651714]
[17.96711731 3.81625915]
[8.92759800 -8.15399933]
[-0.11192194 -20.12425804]
[-9.15144157 -32.09451675]
[-20.04187012 -32.98010635]
[-28.46030235 -39.59485626]
[-31.75821686 -49.54899216]
[-29.06961250 -59.45685196]
[-37.66064072 -71.75296021]
[-46.25166702 -84.04906464]
[-54.84269333 -96.34517670]
[-63.43371964 -108.64128113]
[-72.13799286 -120.85748291]
[-80.95477295 -132.99273682]
[-89.77155304 -145.12799072]
[-105.12931824 -147.73121643]
[-113.89791107 -160.16369629]
[-111.32148743 -174.78894043]
[-120.13826752 -186.92419434]
[-134.50941467 -193.54089355]
[-135.73071289 -208.38534546]
[-144.54748535 -220.52059937]
[-158.91862488 -227.13729858]
[-160.13992310 -241.98175049]
[-168.95671082 -254.11700439]
[-177.77348328 -266.25225830]
[-193.16947937 -265.26889038]
[-206.64193726 -272.78527832]
[-213.89186096 -286.40301514]
[-212.60581970 -301.77667236]
[-203.19418335 -314.00061035]
[-188.66017151 -319.17419434]
[-173.64154053 -315.64657593]
[-162.93066406 -304.54339600]
[-159.94535828 -289.40762329]
[-165.63822937 -275.06903076]
[-156.82145691 -262.93377686]
[-148.00466919 -250.79852295]
[-134.26416016 -245.04981995]
[-132.41223145 -229.33737183]
[-123.59545135 -217.20211792]
[-109.85494232 -211.45341492]
[-108.00301361 -195.74096680]
[-99.18623352 -183.60571289]
[-84.48064423 -181.53659058]
[-75.36630249 -169.35531616]
[-77.63629913 -153.94477844]
[-68.81951904 -141.80952454]
[-60.00273895 -129.67427063]
[-53.50165558 -126.09710693]
[-51.13761520 -117.23230743]
[-42.54658508 -104.93620300]
[-33.95555878 -92.64009094]
[-25.36453247 -80.34398651]
[-16.77350426 -68.04788208]
[1.28830850 -61.20848465]
[2.81881690 -41.13403702]
[11.85833645 -29.16377640]
[20.89785576 -17.19351959]
[29.93737602 -5.22326040]
[38.97689438 6.74699783]
[48.01641464 18.71725655]
[57.05593491 30.68751526]
[66.09545135 42.65777206]
[75.13497162 54.62803268]
[84.17449188 66.59828949]
[93.21401215 78.56855011]
[112.07246399 77.98765564]
[126.79277039 92.84796143]
[125.92007446 115.80049896]
[139.90715027 121.21912384]
[153.89424133 126.63774872]
[169.55755615 124.40812683]
[178.63034058 136.22056580]
[192.61743164 141.63919067]
[206.60450745 147.05781555]
[220.59159851 152.47644043]
[234.57867432 157.89506531]
[248.61523438 163.18421936]
[262.70007324 168.34346008]
[276.90109253 161.94282532]
[291.11163330 167.37567139]
[297.12612915 180.95362854]
[311.21096802 186.11286926]
[325.29577637 191.27210999]
[339.38061523 196.43133545]
[353.46542358 201.59057617]
[367.55026245 206.74980164]
[381.63507080 211.90904236]
[395.85748291 216.67590332]
[410.20657349 221.04675293]
[424.55563354 225.41760254]
[433.71707153 224.92655945]
[439.12811279 230.00405884]
[453.39395142 234.63931274]
[467.65979004 239.27456665]
[482.54953003 233.30165100]
[496.43124390 241.34382629]
[498.65612793 257.23187256]
[487.51742554 268.77780151]
[471.55978394 267.12457275]
[463.02453613 253.54042053]
[448.75869751 248.90516663]
[434.49285889 244.26991272]
[420.18478394 239.76666260]
[405.83572388 235.39582825]
[391.48663330 231.02497864]
[388.19201660 232.38159180]
[384.07003784 232.18579102]
[379.86874390 230.06347656]
[376.47586060 225.99386597]
[362.39102173 220.83462524]
[348.30621338 215.67539978]
[334.22137451 210.51615906]
[320.13653564 205.35693359]
[306.05172729 200.19769287]
[291.96688843 195.03846741]
[278.60504150 201.51892090]
[264.24752808 196.48736572]
[257.54083252 182.42828369]
[243.45599365 177.26904297]
[236.06466675 177.92364502]
[229.16004944 171.88215637]
[215.17297363 166.46353149]
[201.18588257 161.04490662]
[187.19880676 155.62628174]
[173.21171570 150.20765686]
[158.54885864 152.82484436]
[148.47561646 140.62483215]
[134.48852539 135.20620728]
[120.50144958 129.78758240]
[132.44102478 138.86759949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[11 23]
[12 22]
[13 21]
[31 104]
[32 103]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[39 96]
[40 95]
[41 94]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[50 86]
[51 85]
[52 84]
[55 81]
[56 80]
[58 78]
[59 77]
[61 75]
[62 74]
[63 73]
[107 168]
[108 167]
[109 166]
[111 164]
[112 163]
[113 162]
[114 161]
[115 160]
[116 158]
[117 157]
[120 154]
[121 153]
[122 152]
[123 151]
[124 150]
[125 149]
[126 148]
[127 144]
[128 143]
[129 142]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
