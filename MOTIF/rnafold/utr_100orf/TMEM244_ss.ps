%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGGUGACAAUUGUGUCUUCUUCCAGAUGUCAUCGCUAUAAGGAGUGGGGCUUUCAUCACCUCCUUGACGUAGGAUGUGUACAUGGCUCUCCAGGUCAGAGUUGCUCCAAGCAAGGUUGUUUUGCAGAAGUUUCUUCUAUGUGUCAUUCUUUUCUACACUGUGUACUAUGUGUCCCUGAGCA\
) } def
/len { sequence length } bind def

/coor [
[58.88464355 340.41479492]
[61.36146164 325.62069702]
[53.86255646 325.49267578]
[44.59627151 337.28826904]
[35.32999039 349.08386230]
[26.06370735 360.87942505]
[16.79742432 372.67501831]
[7.53114033 384.47061157]
[-1.73514271 396.26620483]
[-11.00142574 408.06179810]
[-13.44211006 423.69363403]
[-27.38881302 428.92227173]
[-36.65509796 440.71786499]
[-45.92137909 452.51345825]
[-40.13128281 466.73913574]
[-42.24565506 481.95181274]
[-51.69573975 494.05929565]
[-65.93951416 499.80477905]
[-81.14546967 497.64273071]
[-93.22328186 488.15475464]
[-98.92408752 473.89303589]
[-96.71438599 458.69393921]
[-87.18858337 446.64590454]
[-72.90907288 440.98983765]
[-57.71697235 443.24716187]
[-48.45068741 431.45156860]
[-39.18440628 419.65597534]
[-37.40650940 404.86785889]
[-22.79701805 398.79553223]
[-13.53073502 386.99993896]
[-4.26445198 375.20434570]
[5.00183105 363.40875244]
[14.26811409 351.61315918]
[23.53439713 339.81756592]
[32.80068207 328.02197266]
[42.06696320 316.22637939]
[31.57043076 299.15594482]
[30.25512886 279.98260498]
[37.66673660 263.14389038]
[51.41501617 252.19200134]
[67.87458038 249.04783630]
[70.42324066 234.26594543]
[72.97189331 219.48405457]
[75.52054596 204.70216370]
[78.06920624 189.92027283]
[80.61785889 175.13838196]
[83.16651917 160.35647583]
[85.71517181 145.57458496]
[81.29967499 131.23919678]
[70.87570190 120.45305634]
[60.45173264 109.66691589]
[50.02776337 98.88077545]
[39.60379791 88.09463501]
[25.12522316 92.79912567]
[10.10106373 90.75911713]
[-2.49593544 82.43230438]
[-10.19676971 69.51494598]
[-11.52002716 54.59655380]
[-6.25659943 40.64084625]
[-16.68056870 29.85470390]
[-27.10453796 19.06855965]
[-42.25841522 14.52207661]
[-45.53928757 -0.00669282]
[-55.96325684 -10.79283524]
[-66.38722229 -21.57897758]
[-76.81119537 -32.36511993]
[-92.61547089 -32.38431931]
[-103.71790314 -43.63205338]
[-103.53161621 -59.43524551]
[-92.16712952 -70.41813660]
[-76.36679077 -70.06478119]
[-65.50466156 -58.58480835]
[-66.02504730 -42.78908920]
[-55.60108185 -32.00294876]
[-45.17711258 -21.21680450]
[-34.75314331 -10.43066120]
[-20.34485626 -6.65567541]
[-16.31839371 8.64459133]
[-5.89442539 19.43073463]
[4.52954292 30.21687698]
[18.65681458 25.43298149]
[33.52133179 27.26479912]
[46.16824722 35.40215683]
[54.06012726 48.27609634]
[55.58600616 63.36114502]
[50.38993835 77.67066193]
[60.81390762 88.45680237]
[71.23787689 99.24295044]
[81.66184235 110.02909088]
[92.08581543 120.81523132]
[79.21879578 104.65858459]
[85.35781097 85.90355682]
[103.51332092 80.96865845]
[111.74009705 68.42592621]
[119.96687317 55.88319397]
[128.19364929 43.34046173]
[129.29258728 27.55746841]
[142.74267578 21.15868759]
[150.96945190 8.61595631]
[159.19624329 -3.92677546]
[156.19238281 -19.21123314]
[164.71418762 -31.81415367]
[179.30409241 -34.58367157]
[187.53086853 -47.12640381]
[195.75764465 -59.66913223]
[203.98442078 -72.21186829]
[212.21121216 -84.75460052]
[215.84236145 -101.31512451]
[232.76091003 -102.41027832]
[238.49678040 -86.45609283]
[224.75393677 -76.52781677]
[216.52716064 -63.98508835]
[208.30038452 -51.44235611]
[200.07360840 -38.89962387]
[191.84683228 -26.35689163]
[195.11923218 -11.87148666]
[186.95478821 0.96582067]
[171.73896790 4.30000257]
[163.51219177 16.84273529]
[155.28541565 29.38546562]
[154.77490234 44.27132034]
[140.73638916 51.56724167]
[132.50961304 64.10997009]
[124.28282928 76.65270233]
[116.05605316 89.19543457]
[120.56661987 103.17964935]
[113.85831451 117.43144989]
[128.64019775 114.88279724]
[143.42210388 112.33413696]
[158.20399475 109.78548431]
[172.98588562 107.23682404]
[187.56736755 98.58717346]
[199.91555786 110.20434570]
[192.17070007 125.28591156]
[175.53454590 122.01872253]
[160.75263977 124.56737518]
[145.97074890 127.11603546]
[131.18885803 129.66468811]
[116.40696716 132.21334839]
[131.23577881 134.47309875]
[140.72119141 146.09321594]
[139.96586609 161.07418823]
[129.35978699 171.68130493]
[114.37888336 172.43811035]
[102.75784302 162.95382690]
[100.49706268 148.12324524]
[97.94841003 162.90513611]
[95.39974976 177.68702698]
[92.85109711 192.46891785]
[90.30244446 207.25082397]
[87.75378418 222.03271484]
[85.20513153 236.81460571]
[82.65647125 251.59649658]
[98.42722321 261.00970459]
[107.83374786 278.06799316]
[107.33796692 298.65618896]
[95.96325684 317.14669800]
[104.82142639 329.25177002]
[113.67959595 341.35684204]
[122.53775787 353.46191406]
[137.79808044 351.72457886]
[151.87615967 357.86486816]
[160.98507690 370.23107910]
[162.67456055 385.49676514]
[156.49017334 399.55554199]
[144.09547424 408.62564087]
[128.82456970 410.26727295]
[114.78525543 404.03884888]
[105.75404358 391.61578369]
[104.16027832 376.33981323]
[110.43268585 362.32009888]
[101.57451630 350.21499634]
[92.71634674 338.10992432]
[83.85818481 326.00485229]
[76.35927582 325.87680054]
[78.32956696 340.74685669]
[80.29985809 355.61688232]
[88.64150238 368.08352661]
[86.60543060 382.94467163]
[75.21810913 392.70834351]
[60.22029495 392.45223999]
[49.17293549 382.30554199]
[47.64540863 367.38351440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[6 33]
[7 32]
[8 31]
[9 30]
[10 29]
[12 27]
[13 26]
[14 25]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 90]
[50 89]
[51 88]
[52 87]
[53 86]
[59 80]
[60 79]
[61 78]
[63 76]
[64 75]
[65 74]
[66 73]
[93 125]
[94 124]
[95 123]
[96 122]
[98 120]
[99 119]
[100 118]
[103 115]
[104 114]
[105 113]
[106 112]
[107 111]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
[157 174]
[158 173]
[159 172]
[160 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
