%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGGGGGCCGGGCCGGGGCUGCGGGGCGAACGGCGCGGCUAGGAUCCGGCGGCUCAGCCCGGGGCGGCGAGGCUCGGCACGGAGAUGGCGGCGCGCUCGGCGCAGACAGAGCUGUGAACCAACCCCGCUCACGGCUAACAAGCCCACCCACCAUGGCGAGCCCCACUCUGAGCCCCGACUCCUCAUCCCAGGAGGCCCUGUCGGCCCCCACCUGCUCCCCAACCUCUGACUCCGAGAACCUCAGCCCCGAUG\
) } def
/len { sequence length } bind def

/coor [
[220.51519775 517.23522949]
[219.03919983 502.30804443]
[217.56318665 487.38085938]
[216.08718872 472.45364380]
[214.61117554 457.52645874]
[213.13517761 442.59924316]
[210.01649475 427.92703247]
[205.29345703 413.69000244]
[200.57041931 399.45297241]
[185.22567749 387.66110229]
[189.67581177 367.98135376]
[184.60343933 353.86502075]
[179.53106689 339.74865723]
[174.45869446 325.63232422]
[160.91802979 319.53430176]
[155.57283020 305.29058838]
[162.06082153 291.12924194]
[156.98844910 277.01290894]
[151.91607666 262.89654541]
[146.84368896 248.78021240]
[141.77131653 234.66387939]
[136.69894409 220.54754639]
[131.62657166 206.43119812]
[126.46733856 192.34637451]
[121.22144318 178.29359436]
[115.97554779 164.24082947]
[110.72964478 150.18804932]
[105.48374939 136.13526917]
[100.23785400 122.08248901]
[93.34919739 119.11660767]
[87.41720581 132.89381409]
[73.64009857 126.96158600]
[79.57189178 113.18483734]
[72.68324280 110.21895599]
[58.86965942 116.06574249]
[45.05607605 121.91252899]
[31.35289574 128.01358032]
[17.76479340 134.36680603]
[8.54070663 147.22087097]
[-6.26571321 145.60246277]
[-19.85381508 151.95568848]
[-33.44191742 158.30891418]
[-37.29862595 173.46345520]
[-50.02429581 182.55143738]
[-65.61025238 181.28178406]
[-76.69728088 170.25401306]
[-78.05043030 154.67509460]
[-69.03078461 141.90089417]
[-53.89714050 137.96302795]
[-39.79514313 144.72082520]
[-26.20704269 138.36759949]
[-12.61894131 132.01435852]
[-4.36676550 119.61473083]
[11.41156578 120.77870178]
[24.99966621 114.42547607]
[26.53848839 111.28237152]
[29.66151047 108.71901703]
[34.08414078 107.46540833]
[39.20928955 108.09894562]
[53.02287292 102.25215912]
[66.83645630 96.40537262]
[74.01412964 83.23415375]
[71.43974304 68.45671844]
[68.86535645 53.67928314]
[66.29096985 38.90185165]
[63.71658707 24.12441826]
[61.14220047 9.34698391]
[47.36877823 2.44778275]
[40.38051605 -11.08061600]
[42.67116165 -25.95397949]
[53.15512085 -36.50028610]
[50.58073807 -51.27772141]
[47.64305496 -65.98724365]
[44.34386063 -80.61991882]
[41.04466248 -95.25260162]
[37.74546814 -109.88527679]
[34.44627380 -124.51795959]
[31.14707756 -139.15063477]
[20.56395149 -150.91108704]
[25.31246376 -165.02847290]
[22.01326752 -179.66116333]
[11.43014145 -191.42160034]
[16.17865372 -205.53900146]
[12.87945843 -220.17167664]
[9.37774467 -223.96726990]
[7.81898785 -228.29179382]
[8.08195972 -232.32353210]
[9.73930454 -235.40577698]
[6.98306227 -250.15037537]
[4.22681952 -264.89495850]
[-9.55801582 -279.62841797]
[-2.27532387 -297.55807495]
[-5.39399910 -312.23028564]
[-8.51267433 -326.90249634]
[-14.94948387 -340.45120239]
[-24.35334015 -352.13742065]
[-33.75719833 -363.82360840]
[-43.16105652 -375.50982666]
[-57.80157089 -384.05920410]
[-53.63921356 -400.49426270]
[-36.69419098 -401.04425049]
[-31.47484589 -384.91369629]
[-22.07098961 -373.22747803]
[-12.66713238 -361.54125977]
[-3.26327515 -349.85507202]
[3.73026657 -352.56436157]
[-1.68835843 -366.55145264]
[-7.10675144 -380.53863525]
[6.88051176 -385.95678711]
[12.29872513 -371.97009277]
[17.71735001 -357.98300171]
[24.71089172 -360.69232178]
[23.78747749 -375.66384888]
[22.86406517 -390.63540649]
[21.94065094 -405.60696411]
[21.01723671 -420.57852173]
[20.09382439 -435.55004883]
[19.17041016 -450.52160645]
[18.24699593 -465.49316406]
[4.25648785 -471.69995117]
[-5.23795986 -483.70471191]
[-8.05459213 -498.74880981]
[-3.54616690 -513.37524414]
[7.25131178 -524.22296143]
[21.85666275 -528.79925537]
[36.91368484 -526.05249023]
[48.96237946 -516.61383057]
[55.23405075 -502.65231323]
[54.28751373 -487.37609863]
[46.34027100 -474.29559326]
[33.21854782 -466.41656494]
[34.14196014 -451.44500732]
[35.06537247 -436.47348022]
[35.98878860 -421.50192261]
[36.91220093 -406.53036499]
[37.83561325 -391.55880737]
[38.75902939 -376.58728027]
[39.68244171 -361.61572266]
[37.46993256 -350.96307373]
[32.97457123 -342.09039307]
[26.86084557 -335.43157959]
[19.86235046 -331.21871948]
[12.72644234 -329.47485352]
[6.15953922 -330.02117920]
[9.27821445 -315.34896851]
[12.39688969 -300.67672729]
[21.40438461 -295.92504883]
[26.42830849 -286.81536865]
[25.60733986 -276.22473145]
[18.97141647 -267.65121460]
[21.72765923 -252.90661621]
[24.48390198 -238.16201782]
[27.51213837 -223.47087097]
[30.81133270 -208.83819580]
[41.15847778 -198.12437439]
[36.64594650 -182.96035767]
[39.94514465 -168.32766724]
[50.29228973 -157.61386108]
[45.77975845 -142.44982910]
[49.07895279 -127.81715393]
[52.37814713 -113.18447876]
[55.67734528 -98.55179596]
[58.97653961 -83.91911316]
[62.27573395 -69.28643799]
[64.53991699 -67.67910767]
[66.31305695 -65.09057617]
[67.22284698 -61.70015335]
[66.96749115 -57.81694794]
[65.35816956 -53.85210419]
[67.93255615 -39.07467270]
[81.36521912 -32.69489288]
[88.55047607 -19.47233200]
[86.54863739 -4.37776232]
[75.91963196 6.77259874]
[78.49401855 21.55003166]
[81.06840515 36.32746506]
[83.64279175 51.10490036]
[86.21717834 65.88233185]
[88.79156494 80.65976715]
[106.62799835 77.81921387]
[121.40580750 89.26585388]
[136.37138367 88.25022888]
[151.33695984 87.23461151]
[166.30253601 86.21899414]
[181.26812744 85.20336914]
[191.47100830 73.13372040]
[207.22683716 71.89699554]
[219.18794250 82.22692108]
[220.25802612 97.99494171]
[209.80221558 109.84616852]
[194.02375793 110.74947357]
[182.28373718 100.16895294]
[167.31816101 101.18457031]
[152.35258484 102.20018768]
[137.38700867 103.21581268]
[122.42143250 104.23143005]
[114.29062653 116.83659363]
[119.53652954 130.88937378]
[124.78242493 144.94215393]
[130.02832031 158.99491882]
[135.27421570 173.04769897]
[140.52011108 187.10047913]
[146.43673706 194.02203369]
[145.74291992 201.35882568]
[150.81529236 215.47517395]
[155.88766479 229.59150696]
[160.96003723 243.70783997]
[166.03240967 257.82418823]
[171.10478210 271.94052124]
[176.17715454 286.05685425]
[190.19465637 292.85003662]
[195.13768005 307.23828125]
[188.57502747 320.55996704]
[193.64741516 334.67630005]
[198.71978760 348.79263306]
[203.79216003 362.90896606]
[213.85090637 366.95401001]
[219.91105652 375.67813110]
[220.17912292 386.07785034]
[214.80743408 394.72994995]
[219.53048706 408.96694946]
[224.25352478 423.20397949]
[231.98947144 416.79891968]
[243.08717346 413.94192505]
[256.07043457 415.87496948]
[269.07290649 423.27407837]
[277.12591553 435.92907715]
[285.17889404 448.58407593]
[300.70431519 450.45364380]
[311.35797119 461.90066528]
[312.10952759 477.52017212]
[302.60409546 489.93713379]
[287.32989502 493.28866577]
[273.49890137 485.99221802]
[267.64172363 471.49301147]
[272.52389526 456.63708496]
[264.47088623 443.98208618]
[256.41790771 431.32708740]
[249.32901001 433.77612305]
[235.15126038 438.67419434]
[228.06237793 441.12322998]
[229.53839111 456.05044556]
[231.01438904 470.97763062]
[232.49038696 485.90484619]
[233.96640015 500.83206177]
[235.44239807 515.75927734]
[249.22497559 522.69067383]
[257.05252075 535.98474121]
[256.42730713 551.39941406]
[247.54885864 564.01593018]
[233.25021362 569.80841064]
[218.09405518 566.92846680]
[206.91662598 556.29504395]
[203.28463745 541.30133057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 246]
[2 245]
[3 244]
[4 243]
[5 242]
[6 241]
[7 222]
[8 221]
[9 220]
[11 216]
[12 215]
[13 214]
[14 213]
[17 210]
[18 209]
[19 208]
[20 207]
[21 206]
[22 205]
[23 204]
[24 202]
[25 201]
[26 200]
[27 199]
[28 198]
[29 197]
[34 61]
[35 60]
[36 59]
[37 55]
[38 54]
[40 52]
[41 51]
[42 50]
[62 179]
[63 178]
[64 177]
[65 176]
[66 175]
[67 174]
[71 170]
[72 169]
[73 164]
[74 163]
[75 162]
[76 161]
[77 160]
[78 159]
[80 157]
[81 156]
[83 154]
[84 153]
[88 152]
[89 151]
[90 150]
[92 146]
[93 145]
[94 144]
[95 105]
[96 104]
[97 103]
[98 102]
[112 138]
[113 137]
[114 136]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[181 196]
[182 195]
[183 194]
[184 193]
[185 192]
[226 238]
[227 237]
[228 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
