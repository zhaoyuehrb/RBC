%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAAGGCAGAGAGGAAAGGCGAGGGGUGUUGACGCCAGGAAGGUUCCAUCUUGGUUAAGGGCAGGAGUCCCUUACGGACUUGUCUGAGGAAAGACAGGAAAGCGCCAGCAUCUCCACCUUCCCCGGAAGCCUCCCUUUGCCAGGCAGAAAGGGUUUCCCAUGGGGCCGCCCCUGGCGCCGCGCCCGGCCCACGUACCCGGGGAGGCCGGGCCCCGGAGGACGAGGGAAAGCAGGCCGGGCGCCGUGAGCUUCGC\
GGACG\
) } def
/len { sequence length } bind def

/coor [
[331.50598145 248.70893860]
[326.92089844 234.42689514]
[329.77105713 219.70016479]
[339.35363770 208.16006470]
[353.30581665 202.65214539]
[368.18609619 204.53411865]
[353.51763916 201.39778137]
[338.84918213 198.26144409]
[324.18072510 195.12510681]
[309.51229858 191.98878479]
[294.84384155 188.85244751]
[280.17538452 185.71611023]
[272.99984741 187.38557434]
[265.34976196 182.45274353]
[250.72012329 179.14007568]
[236.09048462 175.82742310]
[231.66825867 177.55487061]
[226.11549377 176.54446411]
[221.15058899 172.25492859]
[206.60491943 168.59106445]
[192.05926514 164.92721558]
[176.90847778 175.24169922]
[158.72442627 171.10417175]
[149.20637512 154.69578552]
[134.57673645 151.38313293]
[119.94709778 148.07046509]
[105.31746674 144.75779724]
[90.42599487 146.55895996]
[77.00802612 153.26403809]
[63.59005737 159.96911621]
[50.17209244 166.67420959]
[47.61415482 183.40904236]
[35.69566345 195.19638062]
[19.26305199 197.52227783]
[4.83376646 189.66476440]
[-8.50252342 196.53086853]
[-21.83881378 203.39697266]
[-35.17510605 210.26307678]
[-48.51139450 217.12918091]
[-61.84768677 223.99526978]
[-75.18397522 230.86137390]
[-77.41361237 246.21743774]
[-88.26757050 257.30667114]
[-103.57228088 259.86505127]
[-117.44277954 252.90884399]
[-124.54556274 239.11282349]
[-122.14948273 223.78186035]
[-111.17586517 212.81101990]
[-95.84429932 210.41880798]
[-82.05007935 217.52508545]
[-68.71379089 210.65898132]
[-55.37749863 203.79287720]
[-42.04120636 196.92678833]
[-28.70491600 190.06068420]
[-15.36862564 183.19458008]
[-2.03233576 176.32847595]
[-1.23710954 163.01870728]
[6.08307648 151.74516296]
[18.10995293 145.50410461]
[31.75825691 146.01676941]
[43.46700668 153.25624084]
[56.88497543 146.55114746]
[70.30294037 139.84606934]
[83.72090912 133.14099121]
[81.83007812 118.25997162]
[79.93942261 103.38027191]
[65.27097321 100.24393463]
[50.60251999 97.10760498]
[35.93407059 93.97126770]
[21.26562309 90.83493805]
[6.59717274 87.69860077]
[-7.59564829 95.17813110]
[-22.23409081 88.61341095]
[-26.08879471 73.04032898]
[-16.20275879 60.40522766]
[-0.15970697 60.40066910]
[9.73350620 73.03015137]
[24.40195656 76.16648865]
[39.07040405 79.30281830]
[53.73885345 82.43915558]
[68.40730286 85.57548523]
[83.07575226 88.71182251]
[88.87850189 74.87967682]
[76.36274719 66.61192322]
[63.84698868 58.34416199]
[51.33123016 50.07640076]
[35.89920425 53.48640823]
[22.62100220 44.91524124]
[19.37434387 29.44802666]
[28.08541489 16.26118660]
[43.58609009 13.17823696]
[56.68009567 22.02824020]
[59.59899139 37.56064606]
[72.11474609 45.82840347]
[84.63050079 54.09616470]
[97.14626312 62.36392212]
[102.49722290 57.10871506]
[118.55010223 41.34308624]
[110.50965118 28.68010139]
[102.46920013 16.01711845]
[85.31642914 12.50687313]
[76.20224762 -2.04448223]
[80.36361694 -18.35377502]
[72.17132568 -30.91906357]
[57.30934906 -37.85113525]
[56.15145493 -54.20935440]
[69.88878632 -63.16578674]
[84.38955688 -55.50682449]
[84.73661804 -39.11134720]
[92.92890167 -26.54606056]
[105.76723480 -25.68553734]
[115.92356873 -17.47256660]
[119.55814362 -4.72462559]
[115.13217926 7.97666740]
[123.17263031 20.63965034]
[131.21308899 33.30263519]
[149.66799927 55.64604950]
[156.42687988 81.00045013]
[152.32450867 104.16143799]
[140.23081970 121.12471771]
[124.23251343 129.77519226]
[108.63012695 130.12815857]
[123.25976562 133.44082642]
[137.88940430 136.75349426]
[152.51904297 140.06614685]
[161.11811829 131.91078186]
[172.46617126 128.93527222]
[183.72840881 131.76379395]
[192.14851379 139.58528137]
[195.72312927 150.38156128]
[210.26878357 154.04541016]
[224.81443787 157.70927429]
[239.40313721 161.19778442]
[254.03277588 164.51043701]
[268.66241455 167.82310486]
[283.31173706 171.04766846]
[297.98016357 174.18399048]
[312.64862061 177.32032776]
[327.31707764 180.45666504]
[341.98553467 183.59300232]
[356.65396118 186.72932434]
[371.32241821 189.86566162]
[380.70336914 174.09481812]
[401.94650269 167.31510925]
[412.26199341 156.42518616]
[422.57748413 145.53524780]
[417.23846436 131.27845764]
[418.61328125 116.17889404]
[426.37591553 103.22660828]
[438.94076538 94.96308136]
[453.78619385 92.98258209]
[467.96063232 97.62483978]
[478.27612305 86.73490906]
[488.59161377 75.84497833]
[498.90710449 64.95503998]
[498.65396118 49.38026810]
[509.27047729 38.48327637]
[524.12017822 38.33791351]
[534.43566895 27.44798279]
[544.75115967 16.55805016]
[551.25415039 0.90084702]
[568.09960938 2.81531167]
[570.92327881 19.53246880]
[555.64111328 26.87354279]
[545.32562256 37.76347351]
[535.01013184 48.65340805]
[535.66894531 63.48922729]
[525.36267090 74.68011475]
[509.79705811 75.27053833]
[499.48153687 86.16046906]
[489.16604614 97.05039978]
[478.85055542 107.94033051]
[484.25341797 121.84266663]
[483.07952881 136.77354431]
[475.50836182 149.76733398]
[462.99533081 158.21981812]
[447.99234009 160.41009521]
[433.46740723 155.85073853]
[423.15191650 166.74067688]
[412.83642578 177.63059998]
[415.97277832 192.29905701]
[429.83956909 198.01844788]
[443.70639038 203.73783875]
[457.57321167 209.45724487]
[471.44003296 215.17663574]
[485.30682373 220.89602661]
[499.17364502 226.61541748]
[513.04046631 232.33480835]
[526.90728760 238.05421448]
[540.77410889 243.77360535]
[550.69744873 231.95898438]
[564.31982422 224.21382141]
[580.02331543 221.65052795]
[595.87475586 224.75427246]
[609.86352539 233.30192566]
[620.15655518 246.36962891]
[625.33795166 262.43029785]
[640.04309082 265.38983154]
[654.74822998 268.34939575]
[669.45336914 271.30892944]
[684.15850830 274.26849365]
[698.26025391 266.61868286]
[712.97662354 273.00671387]
[717.01849365 288.53228760]
[707.28527832 301.28546143]
[691.24346924 301.48312378]
[681.19891357 288.97363281]
[666.49377441 286.01406860]
[651.78863525 283.05453491]
[637.08355713 280.09497070]
[622.37841797 277.13543701]
[616.74255371 291.03640747]
[629.35693359 299.15292358]
[641.97131348 307.26943970]
[654.63427734 315.30987549]
[667.34539795 323.27398682]
[683.24047852 321.09976196]
[694.75079346 332.27520752]
[693.04675293 348.22750854]
[679.43548584 356.71939087]
[664.35833740 351.23663330]
[659.38128662 335.98513794]
[646.67016602 328.02102661]
[639.35638428 327.13562012]
[633.85479736 319.88378906]
[621.24041748 311.76727295]
[608.62603760 303.65078735]
[593.64642334 311.59671021]
[577.07501221 313.77813721]
[561.02166748 310.08782959]
[547.47106934 301.15539551]
[538.03778076 288.24749756]
[533.77404785 273.09048462]
[535.05468750 257.64041138]
[521.18786621 251.92102051]
[507.32107544 246.20162964]
[493.45425415 240.48223877]
[479.58743286 234.76284790]
[465.72064209 229.04344177]
[451.85382080 223.32405090]
[437.98699951 217.60466003]
[424.12017822 211.88526917]
[410.25338745 206.16586304]
[398.99813843 216.08148193]
[402.92398071 230.55862427]
[406.84985352 245.03576660]
[410.77572632 259.51290894]
[414.70159912 273.99005127]
[424.68267822 287.69458008]
[414.27673340 301.07937622]
[398.53436279 294.78540039]
[400.22445679 277.91592407]
[396.29858398 263.43878174]
[392.37271118 248.96162415]
[388.44686890 234.48449707]
[384.52099609 220.00735474]
[387.20571899 234.76513672]
[382.46066284 248.99484253]
[371.45587158 259.18771362]
[356.90487671 262.83038330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 142]
[7 141]
[8 140]
[9 139]
[10 138]
[11 137]
[12 136]
[14 135]
[15 134]
[16 133]
[19 132]
[20 131]
[21 130]
[24 125]
[25 124]
[26 123]
[27 122]
[28 64]
[29 63]
[30 62]
[31 61]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[83 96]
[84 95]
[85 94]
[86 93]
[98 116]
[99 115]
[100 114]
[103 110]
[104 109]
[144 180]
[145 179]
[146 178]
[152 172]
[153 171]
[154 170]
[155 169]
[158 166]
[159 165]
[160 164]
[181 243]
[182 242]
[183 241]
[184 240]
[185 239]
[186 238]
[187 237]
[188 236]
[189 235]
[190 234]
[197 211]
[198 210]
[199 209]
[200 208]
[201 207]
[212 227]
[213 226]
[214 225]
[215 223]
[216 222]
[244 256]
[245 255]
[246 254]
[247 253]
[248 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
