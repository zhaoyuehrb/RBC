%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCGUCCCAGCGCGCCCGCCUCCCCACGGACACAGAGCCUGCUGCCCACGUCUCUUCCCUGAGCUGCCUGCUGGGGUCAUGGAGCUGCCAACAAAGCCUGGCACCUUCGACCUGGGCCUGGCCACAUGGAGCCCUUCCUUCCAGGGGGAAACCCACCGGGCUCAGGCACGCCGCAGGG\
) } def
/len { sequence length } bind def

/coor [
[-79.34638214 259.97463989]
[-92.02245331 267.99444580]
[-104.69851685 276.01425171]
[-117.37458801 284.03408813]
[-129.98057556 292.16357422]
[-142.51554871 300.40219116]
[-155.05050659 308.64080811]
[-158.26937866 325.82238770]
[-172.62858582 335.18716431]
[-188.99243164 331.35900879]
[-201.38252258 339.81393433]
[-213.77259827 348.26885986]
[-226.16268921 356.72378540]
[-238.55278015 365.17871094]
[-245.59059143 379.34838867]
[-260.46459961 380.13119507]
[-272.85470581 388.58612061]
[-270.29232788 404.64089966]
[-274.96487427 420.15225220]
[-285.89001465 432.03485107]
[-300.84704590 437.94824219]
[-316.82818604 436.75772095]
[-330.64337158 428.75180054]
[-342.88485718 437.42050171]
[-355.12634277 446.08917236]
[-361.48266602 461.20635986]
[-377.78436279 462.99148560]
[-387.26162720 449.60815430]
[-380.16506958 434.82400513]
[-363.79501343 433.84768677]
[-351.55355835 425.17901611]
[-339.31207275 416.51031494]
[-342.29400635 402.94692993]
[-339.86862183 389.22903442]
[-332.37017822 377.43725586]
[-320.90493774 369.37286377]
[-307.18798828 366.28271484]
[-293.28683472 368.66641235]
[-281.30963135 376.19604492]
[-268.91952515 367.74111938]
[-262.76794434 354.17617798]
[-247.00770569 352.78863525]
[-234.61761475 344.33370972]
[-222.22752380 335.87878418]
[-209.83743286 327.42385864]
[-197.44734192 318.96893311]
[-196.84765625 306.08200073]
[-188.80847168 295.74432373]
[-176.09359741 291.87561035]
[-163.28910828 296.10583496]
[-150.75415039 287.86721802]
[-138.21917725 279.62863159]
[-134.34600830 273.31030273]
[-125.39439392 271.35800171]
[-112.71833038 263.33819580]
[-100.04225922 255.31838989]
[-87.36619568 247.29858398]
[-80.74752045 233.95532227]
[-64.94861603 233.11558533]
[-52.27254868 225.09577942]
[-39.59648132 217.07595825]
[-26.92041588 209.05615234]
[-14.24434853 201.03634644]
[-6.95797586 185.08413696]
[11.43308163 184.45823669]
[23.96804810 176.21963501]
[36.43104553 167.87254333]
[48.82113266 159.41763306]
[61.21121979 150.96270752]
[73.60131073 142.50778198]
[85.99140167 134.05285645]
[72.22867584 66.23036957]
[74.81915283 51.45574951]
[77.40962982 36.68112564]
[72.17185974 21.75208664]
[81.99088287 10.55226421]
[84.58135986 -4.22235632]
[87.17183685 -18.99697685]
[89.76231384 -33.77159882]
[92.35279083 -48.54621887]
[90.43530273 -54.91904831]
[91.83316040 -60.46252441]
[95.29811096 -63.78487396]
[98.39981079 -78.46068573]
[101.50150299 -93.13649750]
[104.60320282 -107.81230927]
[99.88671875 -122.91414642]
[110.08853912 -133.76643372]
[113.19023132 -148.44224548]
[116.29193115 -163.11805725]
[119.39362335 -177.79386902]
[122.49532318 -192.46968079]
[111.99945831 -203.89843750]
[110.25922394 -219.31762695]
[117.94378662 -232.79824829]
[132.09826660 -239.15673828]
[147.27996826 -235.94812012]
[157.65124512 -224.40617371]
[159.22410583 -208.96902466]
[151.39375305 -195.57255554]
[137.17112732 -189.36799622]
[134.06944275 -174.69216919]
[130.96774292 -160.01635742]
[127.86605072 -145.34054565]
[124.76435089 -130.66473389]
[129.70268250 -116.61261749]
[119.27901459 -104.71061707]
[116.17732239 -90.03480530]
[113.07562256 -75.35899353]
[109.97393036 -60.68317795]
[107.12741089 -45.95574188]
[104.53693390 -31.18112183]
[101.94645691 -16.40649986]
[99.35597992 -1.63187933]
[96.76550293 13.14274216]
[102.18856812 27.01500320]
[92.18425751 39.27160263]
[89.59378052 54.04622650]
[87.00330353 68.82084656]
[98.69643402 78.21715546]
[110.38851166 87.61264801]
[124.25912476 81.90247345]
[133.83648682 68.59059906]
[150.12434387 70.49790192]
[156.36714172 85.66232300]
[146.14282227 98.48399353]
[129.96929932 95.77309418]
[116.09868622 101.48326111]
[115.96851349 108.98213196]
[115.70817566 123.97987366]
[115.57800293 131.47874451]
[129.24208069 137.66688538]
[142.90615845 143.85501099]
[156.57023621 150.04315186]
[170.23431396 156.23127747]
[183.89839172 162.41941833]
[177.25158691 148.97248840]
[178.80667114 134.05331421]
[188.08372498 122.26618958]
[202.21971130 117.24880219]
[216.85202026 120.54959869]
[227.46492004 131.14990234]
[230.78311157 145.77827454]
[225.78251648 159.92021179]
[214.00642395 169.21125793]
[199.08843994 170.78395081]
[211.62339783 179.02256775]
[224.22940063 187.15208435]
[236.90545654 195.17189026]
[249.58152771 203.19169617]
[266.19943237 206.55056763]
[267.57211304 223.44885254]
[251.71421814 229.44580078]
[241.56172180 215.86776733]
[228.88565063 207.84794617]
[216.20957947 199.82814026]
[208.85612488 198.90649414]
[203.38479614 191.55752563]
[190.84983826 183.31892395]
[177.71025085 176.08349609]
[164.04617310 169.89535522]
[150.38209534 163.70722961]
[136.71801758 157.51908875]
[123.05394745 151.33094788]
[109.38986969 145.14282227]
[94.44631958 146.44294739]
[82.05622864 154.89787292]
[69.66614532 163.35279846]
[57.27605438 171.80772400]
[44.88596725 180.26263428]
[39.54300690 187.70545959]
[32.20665359 188.75459290]
[19.67168808 196.99319458]
[16.29181099 209.45892334]
[5.65936184 216.05940247]
[-6.22454023 213.71241760]
[-18.90060806 221.73222351]
[-31.57667351 229.75202942]
[-44.25274277 237.77183533]
[-56.92881012 245.79165649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 57]
[2 56]
[3 55]
[4 54]
[5 52]
[6 51]
[7 50]
[10 46]
[11 45]
[12 44]
[13 43]
[14 42]
[16 40]
[17 39]
[23 32]
[24 31]
[25 30]
[59 180]
[60 179]
[61 178]
[62 177]
[63 176]
[65 173]
[66 172]
[67 170]
[68 169]
[69 168]
[70 167]
[71 166]
[72 119]
[73 118]
[74 117]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[83 110]
[84 109]
[85 108]
[86 107]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[121 128]
[122 127]
[131 165]
[132 164]
[133 163]
[134 162]
[135 161]
[136 160]
[146 159]
[147 158]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
