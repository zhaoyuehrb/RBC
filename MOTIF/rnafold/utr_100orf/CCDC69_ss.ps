%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUUUCAGGGUCUCGCCGGCAGCCCCAGCCGGCGGGCGCGGAGCGGGCAGCGGGGCCCGGAUCGCAGGCUCCUCUGGGGGCCCCGGAGUUGGGAAGCGGCGUCCGGGAGCCCCCGGAGGAGGAUGGGCUGCAGACACAGCAGGCUGAGCAGCUGCAAACCCCCGAAAAAGAAGCGCCAAGAACCAGAACCAGAACAGCCACCCAGACCAGAGCCCCAUGAAU\
) } def
/len { sequence length } bind def

/coor [
[106.66947937 376.69845581]
[90.87918091 376.03369141]
[80.24546814 364.34179688]
[81.07714081 348.55941772]
[92.88078308 338.04992676]
[93.51172638 323.06320190]
[94.14266205 308.07647705]
[94.77359772 293.08975220]
[95.29942322 278.09896851]
[95.72012329 263.10485840]
[96.14081573 248.11076355]
[88.76351166 235.17149353]
[96.88481140 221.59375000]
[97.30550385 206.59965515]
[97.72619629 191.60556030]
[83.71246338 186.25624084]
[74.03488159 197.71679688]
[64.35729980 209.17735291]
[54.67972183 220.63790894]
[45.00214386 232.09848022]
[35.32456589 243.55903625]
[38.17009354 258.93554688]
[30.42112160 272.51815796]
[15.73647785 277.89358521]
[1.04980028 272.52371216]
[-6.70431042 258.94403076]
[-3.86460018 243.56645203]
[8.22810650 233.65179443]
[23.86400414 233.88145447]
[33.54158401 222.42089844]
[43.21916199 210.96034241]
[52.89674377 199.49977112]
[62.57432175 188.03921509]
[72.25189972 176.57865906]
[78.85476685 163.11009216]
[81.98715973 148.44079590]
[85.11955261 133.77151489]
[72.48244476 124.59119415]
[64.77475739 111.00567627]
[49.84698868 112.47592926]
[34.91921616 113.94618988]
[19.99144554 115.41644287]
[9.97978306 127.34977722]
[-5.18004417 128.62817383]
[-16.49495125 119.01004028]
[-31.42272186 120.48030090]
[-46.35049438 121.95055389]
[-61.27826309 123.42081451]
[-76.20603180 124.89106750]
[-86.03717041 137.26541138]
[-101.74810028 138.98071289]
[-114.01780701 129.01928711]
[-115.56690216 113.29110718]
[-105.47632599 101.12739563]
[-89.73263550 99.74468231]
[-77.67629242 109.96329498]
[-62.74851990 108.49304199]
[-47.82075119 107.02278137]
[-32.89297867 105.55252838]
[-17.96520996 104.08226776]
[-8.74411869 92.44152069]
[6.37381983 90.73781586]
[18.52118874 100.48867035]
[33.44895935 99.01841736]
[48.37673187 97.54815674]
[63.30450058 96.07790375]
[62.92483521 87.14895630]
[64.79493713 77.88671875]
[69.03366852 68.87029266]
[75.60942078 60.71193314]
[69.10116577 47.19739914]
[62.59291077 33.68286514]
[56.08465576 20.16833305]
[49.57639694 6.65380049]
[43.06814194 -6.86073256]
[36.55988693 -20.37526512]
[30.05163002 -33.88979721]
[23.54337311 -47.40433121]
[17.03511810 -60.91886520]
[10.52686214 -74.43339539]
[4.01860571 -87.94792938]
[-2.48965049 -101.46246338]
[-9.09251595 -114.93102264]
[-15.78966713 -128.35295105]
[-22.48681831 -141.77488708]
[-29.18396759 -155.19680786]
[-35.88111877 -168.61874390]
[-42.57826996 -182.04066467]
[-49.36937714 -195.41529846]
[-56.25410461 -208.74198914]
[-63.13883209 -222.06867981]
[-70.02355957 -235.39535522]
[-84.81082153 -241.61761475]
[-89.02690887 -257.09677124]
[-79.43760681 -269.95852661]
[-63.39900589 -270.33645630]
[-53.21454620 -257.94064331]
[-56.69687653 -242.28009033]
[-49.81214905 -228.95339966]
[-42.92741776 -215.62672424]
[-36.04269028 -202.30003357]
[-30.18558884 -197.80435181]
[-29.15634155 -188.73782349]
[-22.45919037 -175.31588745]
[-15.76203918 -161.89396667]
[-9.06488895 -148.47203064]
[-2.36773801 -135.05010986]
[4.32941246 -121.62817383]
[10.12288952 -117.05079651]
[11.02488232 -107.97071838]
[17.53313828 -94.45618439]
[24.04139519 -80.94165039]
[30.54965019 -67.42712402]
[37.05790710 -53.91258621]
[43.56616211 -40.39805603]
[50.07442093 -26.88352203]
[56.58267593 -13.36898899]
[63.09093094 0.14554450]
[69.59918976 13.66007710]
[76.10744476 27.17461014]
[82.61569977 40.68914413]
[89.12395477 54.20367813]
[96.59281158 54.88644791]
[93.27553558 40.25785446]
[106.16307068 32.58247757]
[117.44524384 42.46744537]
[111.53052521 56.25198746]
[118.99938202 56.93475723]
[127.85016632 44.82428360]
[136.70094299 32.71380615]
[145.55172729 20.60333061]
[142.87583923 5.02722168]
[152.06576538 -7.83048916]
[167.66929626 -10.34155083]
[180.42913818 -1.01619542]
[182.77508545 14.61300945]
[173.31533813 27.27353477]
[157.66221619 29.45411301]
[148.81143188 41.56459045]
[139.96064758 53.67506409]
[131.10986328 65.78554535]
[137.07197571 81.18347168]
[136.69549561 96.07790375]
[151.62327576 97.54815674]
[166.55104065 99.01841736]
[181.47880554 100.48867035]
[196.40658569 101.95893097]
[206.45486450 97.67165375]
[215.33448792 101.56067657]
[230.18721008 99.46382141]
[238.23814392 95.16918182]
[245.26277161 97.44322205]
[260.14343262 95.55487823]
[275.02410889 93.66653442]
[277.83251953 78.80154419]
[285.09881592 65.53292847]
[296.11108398 55.16060257]
[309.79046631 48.70075226]
[324.79681396 46.78623962]
[339.65991211 49.60463333]
[352.92364502 56.87981415]
[363.28860474 67.89903259]
[369.73928833 81.58274078]
[371.64373779 96.59034729]
[368.81536865 111.45156097]
[361.53131104 124.71042633]
[350.50515747 135.06797791]
[336.81713867 141.50949097]
[321.80825806 143.40390015]
[306.94894409 140.56558228]
[293.69494629 133.27262878]
[283.34478760 122.23953247]
[276.91244507 108.54719543]
[262.03176880 110.43553925]
[247.15112305 112.32389069]
[232.28405762 114.31653595]
[217.43135071 116.41339111]
[231.45339966 121.74089050]
[243.21559143 131.04951477]
[251.62243652 143.47227478]
[255.89091492 157.85212708]
[255.62345886 172.84974670]
[250.84498596 187.06825256]
[242.00054932 199.18338013]
[229.91392517 208.06669617]
[215.71083069 212.89083862]
[200.71415710 213.20649719]
[186.32066345 208.98426819]
[173.87094116 200.61738586]
[164.52456665 188.88516235]
[159.15203857 174.88031006]
[158.25373840 159.90722656]
[161.91336060 145.36050415]
[169.79002380 132.59500122]
[181.15013123 122.79969025]
[194.93632507 116.88670349]
[180.00856018 115.41644287]
[165.08078003 113.94618988]
[150.15301514 112.47592926]
[135.22523499 111.00567627]
[121.77558899 129.79541016]
[99.78884125 136.90390015]
[96.65644836 151.57319641]
[93.52406311 166.24247742]
[100.48513031 152.95552063]
[114.21056366 146.90469360]
[128.71495056 150.72865295]
[137.67320251 162.75985718]
[137.17880249 177.75170898]
[127.44733429 189.16653442]
[112.72029877 192.02624512]
[112.29959869 207.02035522]
[111.87890625 222.01445007]
[119.22612000 236.02619934]
[111.13491058 248.53146362]
[110.71421814 263.52554321]
[110.29352570 278.51965332]
[113.17890930 287.17620850]
[109.76032257 293.72067261]
[109.12938690 308.70739746]
[108.49845123 323.69412231]
[107.86750793 338.68084717]
[118.74605560 350.14526367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 222]
[6 221]
[7 220]
[8 219]
[9 217]
[10 216]
[11 215]
[13 213]
[14 212]
[15 211]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[35 204]
[36 203]
[37 202]
[39 66]
[40 65]
[41 64]
[42 63]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
[77 115]
[78 114]
[79 113]
[80 112]
[81 111]
[82 110]
[83 108]
[84 107]
[85 106]
[86 105]
[87 104]
[88 103]
[89 101]
[90 100]
[91 99]
[92 98]
[128 141]
[129 140]
[130 139]
[131 138]
[143 200]
[144 199]
[145 198]
[146 197]
[147 196]
[149 177]
[150 176]
[152 175]
[153 174]
[154 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
