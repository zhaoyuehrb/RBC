%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUAGCAGGGAGAGGGGCGGAGAGGCAGCGAACCUCUCAAUGUGCAGCAGGCCGCGAGGGCUAUAUAAAGCUCGGGUCUCGGACCUACUGGAACUGGUCAAGAUUGCCCGCGAGCUGGCAGCGGCCUUCCGCCCAGCUCUGCGGCGUCAUGGAGAACGCGGGAGGCGCAGAGGGUACAGAGAGUGGAGCUGCGGCGUGCGCGGCCACCGACGGCCCUACGCGGCGCGCGGGCGCGGACUCCGGAUACG\
) } def
/len { sequence length } bind def

/coor [
[172.99575806 179.83811951]
[163.93869019 191.79510498]
[161.77374268 207.46748352]
[147.92129517 212.94099426]
[138.86422729 224.89797974]
[137.67228699 231.35777283]
[133.96575928 235.62184143]
[129.42929077 237.03640747]
[120.07695007 248.76388550]
[110.72460175 260.49136353]
[112.30091858 275.98822021]
[102.64924622 287.74832153]
[87.86563110 289.15560913]
[78.51329041 300.88308716]
[69.16094208 312.61053467]
[59.80859375 324.33801270]
[50.45624542 336.06549072]
[41.10389709 347.79296875]
[42.68021393 363.28982544]
[33.02854156 375.04992676]
[18.24493027 376.45721436]
[8.89258289 388.18466187]
[13.93641663 402.76422119]
[10.27505684 417.75082397]
[-0.92316836 428.36227417]
[-16.08494759 431.21255493]
[-30.37221146 425.39208984]
[-39.22594452 412.75820923]
[-39.82095718 397.34234619]
[-31.96737862 384.06359863]
[-18.17125893 377.15921021]
[-2.83488941 378.83233643]
[6.51745749 367.10485840]
[4.59978437 352.37875366]
[13.91733170 340.35220337]
[29.37642670 338.44061279]
[38.72877502 326.71313477]
[48.08111954 314.98565674]
[57.43346786 303.25820923]
[66.78581238 291.53073120]
[76.13816071 279.80325317]
[74.22048950 265.07714844]
[83.53803253 253.05059814]
[98.99713135 251.13900757]
[108.34947968 239.41154480]
[117.70182800 227.68406677]
[126.90724945 215.84091187]
[135.96430969 203.88392639]
[137.48144531 189.06678772]
[151.98170471 182.73803711]
[161.03877258 170.78105164]
[164.17984009 164.98175049]
[168.36080933 160.69969177]
[173.08117676 158.07720947]
[164.32502747 145.89813232]
[155.56886292 133.71907043]
[146.81271362 121.53999329]
[138.05654907 109.36092377]
[129.30039978 97.18185425]
[112.72997284 128.89845276]
[74.96201324 122.58692169]
[60.10282898 120.53636932]
[45.24364853 118.48580933]
[30.38446999 116.43525696]
[15.52529049 114.38470459]
[3.08009529 124.12599182]
[-12.59778976 122.13113403]
[-22.20695496 109.58364105]
[-20.04645157 93.92772675]
[-7.39806843 84.45175934]
[8.23413277 86.77766418]
[17.57584381 99.52552795]
[32.43502426 101.57608032]
[47.29420471 103.62663269]
[62.15338516 105.67718506]
[77.01256561 107.72774506]
[83.68878937 94.29539490]
[73.08219147 83.68878937]
[62.47558594 73.08219147]
[51.86898422 62.47558594]
[33.96729279 58.10979080]
[30.11688042 40.97691727]
[19.37887764 30.50336647]
[1.42415130 26.36107826]
[-2.63954496 9.27753639]
[-13.50727940 -1.06133854]
[-24.37501526 -11.40021324]
[-35.24274826 -21.73908806]
[-49.95169067 -17.31838799]
[-64.89666748 -20.86003494]
[-76.05755615 -31.41134834]
[-80.43212891 -46.13407516]
[-76.84365082 -61.06787491]
[-66.25740814 -72.19563293]
[-51.52104187 -76.52404022]
[-36.59856033 -72.88877106]
[-25.50403976 -62.26769638]
[-21.22184944 -47.51783371]
[-24.90387535 -32.60682297]
[-14.03613949 -22.26794815]
[-3.16840482 -11.92907333]
[7.69933033 -1.59019840]
[19.77928543 -1.58286166]
[28.91635895 6.91856289]
[29.85243034 19.76536369]
[40.59043503 30.23891640]
[52.66935730 30.39684486]
[61.69974136 39.01151276]
[62.47558594 51.86898422]
[73.08219147 62.47558594]
[83.68878937 73.08219147]
[94.29539490 83.68878937]
[101.31056213 81.03598022]
[115.34089661 75.73036194]
[122.35607147 73.07754517]
[123.29045868 58.10668182]
[124.22485352 43.13581085]
[125.15924835 28.16494179]
[126.09363556 13.19407368]
[127.02803040 -1.77679491]
[127.96242523 -16.74766350]
[125.38343811 -22.78906250]
[126.11378479 -28.39149094]
[129.11132812 -32.07866287]
[130.41865540 -47.02158356]
[131.72599792 -61.96450424]
[133.03332520 -76.90742493]
[125.61613464 -91.53333282]
[134.79937744 -105.12010193]
[151.13612366 -103.69081879]
[157.82052612 -88.71582031]
[147.97625732 -75.60009003]
[146.66891479 -60.65716934]
[145.36157227 -45.71424866]
[144.05424500 -30.77132797]
[142.93328857 -15.81327152]
[141.99890137 -0.84240246]
[141.06451416 14.12846661]
[140.13011169 29.09933472]
[139.19572449 44.07020187]
[138.26133728 59.04107285]
[137.32693481 74.01194000]
[141.47947693 88.42569733]
[150.23562622 100.60477448]
[158.99177551 112.78384399]
[167.74794006 124.96291351]
[176.50408936 137.14198303]
[185.26023865 149.32104492]
[197.70625305 157.69343567]
[212.28742981 161.21330261]
[226.86860657 164.73315430]
[235.91775513 163.70516968]
[241.60905457 168.38885498]
[256.14520264 172.09020996]
[270.68136597 175.79158020]
[285.21752930 179.49293518]
[299.75369263 183.19429016]
[313.23086548 175.38381958]
[327.91986084 179.34458923]
[335.28289795 192.24114990]
[349.81906128 195.94250488]
[364.35522461 199.64387512]
[378.89138794 203.34523010]
[390.32553101 191.38421631]
[406.14294434 186.85505676]
[421.99282837 190.90487671]
[433.56509399 202.33451843]
[437.76235962 217.95143127]
[452.34353638 221.47128296]
[466.92471313 224.99114990]
[481.50588989 228.51101685]
[498.10708618 217.15077209]
[517.40252686 221.63485718]
[526.99145508 238.61790466]
[541.69403076 241.59008789]
[556.39666748 244.56228638]
[571.09924316 247.53448486]
[585.80181885 250.50666809]
[592.98736572 239.45146179]
[603.47174072 231.50874329]
[615.99847412 227.60325623]
[629.07543945 228.17755127]
[641.15252686 233.14190674]
[650.80572510 241.88752747]
[656.90466309 253.36112976]
[658.74505615 266.19177246]
[673.36895752 269.52960205]
[687.99285889 272.86740112]
[694.37127686 271.29705811]
[699.78240967 272.92181396]
[702.93762207 276.47503662]
[717.47375488 280.17639160]
[732.00994873 283.87774658]
[746.54608154 287.57913208]
[761.08221436 291.28048706]
[775.61840820 294.98184204]
[790.08990479 288.05688477]
[804.46350098 295.18289185]
[807.71295166 310.89343262]
[797.34558105 323.13668823]
[781.31433105 322.52069092]
[771.91705322 309.51800537]
[757.38085938 305.81665039]
[742.84472656 302.11526489]
[728.30853271 298.41390991]
[713.77239990 294.71255493]
[699.23626709 291.01119995]
[684.65509033 287.49133301]
[670.03112793 284.15350342]
[655.40722656 280.81570435]
[645.24017334 294.33755493]
[630.12982178 302.06848145]
[613.10443115 302.40460205]
[597.60003662 295.22949219]
[586.76690674 281.94754028]
[582.82965088 265.20925903]
[568.12701416 262.23706055]
[553.42443848 259.26486206]
[538.72186279 256.29269409]
[524.01928711 253.32049561]
[517.34399414 261.05874634]
[507.99136353 265.37423706]
[497.61068726 265.43252563]
[488.06311035 261.15640259]
[481.08792114 253.25186157]
[477.98602295 243.09217834]
[463.40484619 239.57232666]
[448.82366943 236.05245972]
[434.24249268 232.53259277]
[425.51296997 243.01719666]
[413.06027222 248.75038147]
[399.28631592 248.56367493]
[386.87500000 242.43653870]
[378.26922607 231.51145935]
[375.19003296 217.88139343]
[360.65386963 214.18002319]
[346.11770630 210.47866821]
[331.58154297 206.77731323]
[318.94732666 214.58193970]
[304.15286255 211.03529358]
[296.05233765 197.73045349]
[281.51617432 194.02909851]
[266.98001099 190.32772827]
[252.44384766 186.62637329]
[237.90768433 182.92501831]
[223.34873962 179.31433105]
[208.76756287 175.79446411]
[194.18640137 172.27461243]
[203.59779358 183.95474243]
[199.52662659 198.39169312]
[185.39953613 203.43408203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[4 48]
[5 47]
[8 46]
[9 45]
[10 44]
[13 41]
[14 40]
[15 39]
[16 38]
[17 37]
[18 36]
[21 33]
[22 32]
[54 148]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[77 112]
[78 111]
[79 110]
[80 109]
[82 106]
[83 105]
[85 102]
[86 101]
[87 100]
[88 99]
[115 142]
[116 141]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[124 135]
[125 134]
[126 133]
[127 132]
[149 248]
[150 247]
[151 246]
[153 245]
[154 244]
[155 243]
[156 242]
[157 241]
[160 238]
[161 237]
[162 236]
[163 235]
[168 229]
[169 228]
[170 227]
[171 226]
[174 220]
[175 219]
[176 218]
[177 217]
[178 216]
[186 210]
[187 209]
[188 208]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
