%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGAAUCUCGCGAGAGCUCCCGGGGGCCGUUGGGUAGCGUCUUCGCUGUUGCCCUUAGGGACGGCUGUGGGCCUGCUGGGGGUGGGGGCCCGAAGCGCCAGAGAUGGCUGCUCAGCGAGGGAUGCCCAGCUCCGCCGUGAGGGUCCUGGAAGAGGCGUUGGGCAUGGGUUUGACGGCAGCCGGGGACGCGAGGGACACGGCGG\
) } def
/len { sequence length } bind def

/coor [
[165.05694580 1170.36791992]
[164.59950256 1155.37487793]
[164.14205933 1140.38183594]
[163.68461609 1125.38891602]
[149.82798767 1116.59045410]
[143.88523865 1101.11193848]
[148.38267517 1084.98083496]
[161.73908997 1074.60595703]
[161.05305481 1059.62158203]
[160.36703491 1044.63732910]
[159.68099976 1029.65307617]
[158.99496460 1014.66870117]
[158.30894470 999.68438721]
[157.62290955 984.70013428]
[150.79798889 980.74780273]
[146.03660583 974.34307861]
[144.17475891 966.48602295]
[145.58828735 958.44067383]
[150.11987305 951.53161621]
[157.09274292 946.92614746]
[157.32148743 931.92791748]
[157.55023193 916.92962646]
[157.77899170 901.93139648]
[158.00773621 886.93316650]
[158.23648071 871.93487549]
[147.71418762 861.45550537]
[147.73252869 846.24188232]
[158.79559326 835.27618408]
[159.02433777 820.27795410]
[159.25308228 805.27972412]
[159.48182678 790.28143311]
[159.71057129 775.28320312]
[159.93933105 760.28491211]
[160.16807556 745.28668213]
[160.39682007 730.28845215]
[160.62556458 715.29016113]
[159.93954468 700.30584717]
[158.34127808 685.39123535]
[156.74302673 670.47662354]
[155.14476013 655.56201172]
[153.54650879 640.64739990]
[151.94825745 625.73278809]
[150.34999084 610.81823730]
[148.75173950 595.90362549]
[147.15347290 580.98901367]
[135.43405151 571.86810303]
[133.60072327 556.76531982]
[143.24702454 544.53479004]
[141.64877319 529.62017822]
[140.05050659 514.70556641]
[128.33108521 505.58465576]
[126.49776459 490.48187256]
[136.14405823 478.25131226]
[134.54579163 463.33670044]
[132.94754028 448.42208862]
[131.34928894 433.50747681]
[129.75102234 418.59286499]
[128.15277100 403.67825317]
[126.55451202 388.76367188]
[117.50515747 376.93325806]
[123.72799683 362.38723755]
[122.12973785 347.47262573]
[118.28981781 341.15432739]
[120.62261200 332.31863403]
[119.25199127 317.38137817]
[117.88136292 302.44412231]
[105.00876617 294.99871826]
[98.91661072 281.23828125]
[102.13286591 266.35507202]
[113.62896729 256.10101318]
[112.25834656 241.16377258]
[110.88771820 226.22653198]
[109.51708984 211.28927612]
[108.14646912 196.35203552]
[106.32094574 181.46353149]
[104.04223633 166.63761902]
[101.65054321 151.82952881]
[99.14600372 137.04010010]
[96.64146423 122.25066376]
[94.13693237 107.46123505]
[73.69296265 113.45648956]
[50.43285751 102.02671814]
[43.60262680 88.67201996]
[36.77239609 75.31732941]
[29.94216347 61.96262741]
[15.88856697 53.51108932]
[16.45151329 37.12160873]
[31.05188942 29.65427589]
[44.67008209 38.79084396]
[43.29685974 55.13239670]
[50.12709045 68.48709106]
[56.95732498 81.84178925]
[63.78755569 95.19648743]
[71.12916565 93.66326141]
[85.81238556 90.59681702]
[93.15399170 89.06359863]
[94.06845093 74.09149933]
[94.98291016 59.11939621]
[95.78318024 44.14076233]
[96.46920776 29.15645599]
[97.15524292 14.17215347]
[97.84127045 -0.81215078]
[89.82344818 -15.11762142]
[98.43487549 -29.07381248]
[114.81686401 -28.32379150]
[122.11702728 -13.63911533]
[112.82557678 -0.12611996]
[112.13954926 14.85818386]
[111.45351410 29.84248734]
[110.76748657 44.82678986]
[113.60300446 51.65508652]
[109.95500946 60.03385925]
[109.04055023 75.00595856]
[108.12609100 89.97805786]
[108.92636108 104.95669556]
[111.43090057 119.74612427]
[113.93544006 134.53555298]
[116.43997955 149.32498169]
[120.95996094 157.26736450]
[118.86814117 164.35891724]
[121.14685822 179.18481445]
[123.98921204 182.47915649]
[125.48274994 186.13890076]
[125.67842865 189.69441223]
[124.77475739 192.74098206]
[123.08371735 194.98141479]
[124.45433807 209.91865540]
[125.82496643 224.85591125]
[127.19559479 239.79315186]
[128.56622314 254.73040771]
[141.73645020 262.72109985]
[147.60751343 276.77044678]
[144.12129211 291.40979004]
[132.81861877 301.07348633]
[134.18923950 316.01074219]
[135.55986023 330.94799805]
[137.04434204 345.87435913]
[138.64260864 360.78897095]
[147.80627441 373.68615723]
[141.46911621 387.16540527]
[143.06738281 402.08001709]
[144.66563416 416.99462891]
[146.26388550 431.90924072]
[147.86215210 446.82382202]
[149.46040344 461.73843384]
[151.05867004 476.65304565]
[163.07743835 486.56198120]
[164.48583984 501.71029663]
[154.96511841 513.10729980]
[156.56336975 528.02191162]
[158.16163635 542.93652344]
[170.18040466 552.84545898]
[171.58880615 567.99371338]
[162.06808472 579.39074707]
[163.66635132 594.30535889]
[165.26460266 609.21997070]
[166.86285400 624.13458252]
[168.46112061 639.04919434]
[170.05937195 653.96380615]
[171.65763855 668.87835693]
[173.25588989 683.79296875]
[174.85414124 698.70758057]
[183.49687195 686.44775391]
[197.65664673 681.49792480]
[212.05509949 685.70324707]
[221.32489014 697.49609375]
[222.01051331 712.48040771]
[213.85639954 725.07049561]
[199.90214539 730.57312012]
[185.34950256 726.93701172]
[175.62382507 715.51892090]
[175.39508057 730.51715088]
[175.16633606 745.51544189]
[174.93757629 760.51367188]
[174.70883179 775.51196289]
[174.48008728 790.51019287]
[174.25134277 805.50842285]
[174.02258301 820.50671387]
[173.79383850 835.50494385]
[184.51734924 846.80291748]
[184.07171631 862.01000977]
[173.23474121 872.16363525]
[173.00599670 887.16186523]
[172.77723694 902.16015625]
[172.54849243 917.15838623]
[172.31974792 932.15667725]
[172.09100342 947.15490723]
[184.40803528 965.87237549]
[172.60720825 984.01409912]
[173.29324341 998.99835205]
[173.97927856 1013.98266602]
[174.66529846 1028.96704102]
[175.35133362 1043.95129395]
[176.03736877 1058.93554688]
[176.72340393 1073.91992188]
[188.76763916 1080.62731934]
[195.86766052 1092.31787109]
[196.25987244 1105.88159180]
[189.94871521 1117.77160645]
[178.67764282 1124.93139648]
[179.13508606 1139.92443848]
[179.59252930 1154.91748047]
[180.04997253 1169.91052246]
[186.57652283 1185.55786133]
[173.34738159 1196.16101074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[20 187]
[21 186]
[22 185]
[23 184]
[24 183]
[25 182]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[48 151]
[49 150]
[50 149]
[53 146]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[59 140]
[61 138]
[62 137]
[64 136]
[65 135]
[66 134]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 121]
[76 120]
[77 118]
[78 117]
[79 116]
[80 115]
[82 93]
[83 92]
[84 91]
[85 90]
[96 114]
[97 113]
[98 112]
[99 110]
[100 109]
[101 108]
[102 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
