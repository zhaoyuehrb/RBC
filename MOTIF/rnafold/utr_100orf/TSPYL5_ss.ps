%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUCGGCGGUUGCCGUGGAGAGACCCGCUCGGUCCCGACCGAGAGCUGGCGUCAGGAGCCGCAGGGUCACAGCGUGUCUUUGAAGCUGCCUCCGCCGCCACCAUGAGCGGCCGAAGUCGGGGUCGAAAGUCCUCCCGCGCCAAAAACCGGGGCAAAGGCCGCGCCAAAGCCCGAGUCCGCCCUGCUCCGGACGACGCCCCGC\
) } def
/len { sequence length } bind def

/coor [
[412.68441772 176.79135132]
[398.28323364 172.59544373]
[383.88201904 168.39953613]
[369.49850464 172.26780701]
[358.41357422 160.97909546]
[344.01235962 156.78320312]
[329.61117554 152.58729553]
[315.20999146 148.39138794]
[300.80877686 144.19549561]
[286.20336914 140.77769470]
[271.43569946 138.14781189]
[256.66802979 135.51794434]
[242.78135681 140.90399170]
[230.55148315 130.86701965]
[215.78382874 128.23715210]
[201.89715576 133.62319946]
[189.66728210 123.58623505]
[174.89961243 120.95635986]
[160.13195801 118.32649231]
[145.36430359 115.69661713]
[130.59663391 113.06674194]
[115.82897949 110.43687439]
[99.56420135 118.95507812]
[83.70808411 109.69837189]
[68.83516693 111.64676666]
[53.96224594 113.59516144]
[39.08932495 115.54356384]
[24.21640587 117.49195862]
[17.97876358 135.81166077]
[-5.96702051 143.82411194]
[-19.65457535 149.96014404]
[-33.34212875 156.09617615]
[-47.02968216 162.23220825]
[-60.71723938 168.36824036]
[-74.40479279 174.50425720]
[-83.56626129 188.10571289]
[-99.90527344 186.70259094]
[-106.61365509 171.73831177]
[-96.79039001 158.60684204]
[-80.54082489 160.81671143]
[-66.85326385 154.68067932]
[-53.16571426 148.54464722]
[-39.47815704 142.40861511]
[-25.79060364 136.27259827]
[-12.10305023 130.13656616]
[-14.27923775 115.29458618]
[-16.45521736 100.45392609]
[-31.32813835 98.50553131]
[-40.24843216 100.49430847]
[-46.41337967 96.41162872]
[-61.25469589 94.23554230]
[-76.09600830 92.05946350]
[-87.65811157 102.58808899]
[-103.28486633 103.16985321]
[-115.59780884 93.53006744]
[-118.78314209 78.22033691]
[-111.33684540 64.46945953]
[-96.77483368 58.77016830]
[-81.97284698 63.81349945]
[-73.91992950 77.21814728]
[-59.07861328 79.39422607]
[-44.23729706 81.57031250]
[-29.37974167 83.63261414]
[-14.50682163 85.58100891]
[11.12713718 86.45008850]
[22.26800919 102.61903381]
[37.14093018 100.67063904]
[52.01385117 98.72224426]
[66.88677216 96.77384949]
[81.75968933 94.82545471]
[82.46929932 92.77785492]
[83.40792084 90.82460785]
[74.22339630 78.96524811]
[65.03887939 67.10588074]
[55.85435486 55.24651337]
[40.79561615 57.98384476]
[26.19313622 53.39841843]
[15.40245438 42.54393768]
[10.90319347 27.91467667]
[13.72924900 12.87233639]
[23.23121643 0.87353569]
[37.22560883 -5.32448959]
[52.49662399 -4.29747820]
[65.53508759 3.71856999]
[73.34485626 16.88162613]
[74.13130951 32.16691589]
[67.71372223 46.06199265]
[76.89824677 57.92135620]
[86.08276367 69.78072357]
[95.26728821 81.64009094]
[109.81355286 83.77720642]
[118.45884705 95.66921234]
[133.22651672 98.29908752]
[147.99417114 100.92895508]
[162.76182556 103.55883026]
[177.52949524 106.18870544]
[192.29714966 108.81857300]
[207.24011230 103.62063599]
[218.41369629 113.46949768]
[233.18136597 116.09936523]
[248.12431335 110.90142822]
[259.29791260 120.75028229]
[274.06558228 123.38015747]
[288.83322144 126.01003265]
[280.20806885 113.73784637]
[281.36050415 98.78218079]
[291.76400757 87.97628784]
[306.66519165 86.25738525]
[319.25570679 94.41084290]
[323.78295898 108.71133423]
[318.17840576 122.62496948]
[305.00469971 129.79429626]
[319.40588379 133.99020386]
[333.80706787 138.18609619]
[348.20828247 142.38200378]
[362.60946655 146.57791138]
[378.02307129 143.00976562]
[388.07794189 153.99835205]
[402.47912598 158.19424438]
[416.88031006 162.39015198]
[431.37414551 166.25393677]
[445.95297241 169.78353882]
[460.53176880 173.31315613]
[475.11059570 176.84277344]
[484.19253540 175.82051086]
[489.88491821 180.53979492]
[504.40792847 184.29240417]
[515.15002441 176.16230774]
[528.41967773 175.71157837]
[539.36297607 182.88085938]
[544.10620117 194.86430359]
[558.57000732 198.83901978]
[573.03375244 202.81375122]
[587.49755859 206.78846741]
[597.59686279 197.40390015]
[610.90905762 194.26115417]
[623.93127441 198.07728577]
[633.29107666 207.75248718]
[636.61968994 220.68434143]
[651.02087402 224.88024902]
[665.42205811 229.07615662]
[674.97052002 217.28196716]
[688.27117920 210.06149292]
[703.28240967 208.48764038]
[717.71343994 212.76927185]
[729.37414551 222.22409058]
[736.50714111 235.38713074]
[738.05285645 250.23771667]
[752.45410156 254.43362427]
[766.19024658 247.08821106]
[780.73535156 251.54861450]
[787.65344238 264.68923950]
[802.05462646 268.88513184]
[816.45581055 273.08102417]
[830.85699463 277.27694702]
[843.11639404 267.94885254]
[858.33984375 267.63186646]
[870.68487549 276.23797607]
[875.53698730 290.29479980]
[889.93817139 294.49069214]
[904.33935547 298.68661499]
[921.23754883 297.31228638]
[927.23602295 313.16958618]
[913.65899658 323.32339478]
[900.14349365 313.08779907]
[885.74224854 308.89190674]
[871.34106445 304.69598389]
[859.69805908 313.94683838]
[844.66247559 314.57540894]
[831.99169922 306.13119507]
[826.66107178 291.67813110]
[812.25988770 287.48223877]
[797.85870361 283.28631592]
[783.45751953 279.09042358]
[770.56396484 286.45877075]
[755.89935303 282.40869141]
[748.25817871 268.83480835]
[733.85699463 264.63891602]
[724.57659912 276.33520508]
[711.48968506 283.60702515]
[696.57550049 285.31903076]
[682.10308838 281.17941284]
[670.28637695 271.78903198]
[662.94543457 258.55447388]
[661.22613525 243.47734070]
[646.82495117 239.28144836]
[632.42376709 235.08554077]
[619.77600098 245.54689026]
[603.21917725 246.41857910]
[589.26586914 237.15940857]
[583.52288818 221.25227356]
[569.05908203 217.27755737]
[554.59527588 213.30282593]
[540.13146973 209.32810974]
[525.88464355 218.26092529]
[509.25735474 214.04515076]
[500.65533447 198.81541443]
[486.13232422 195.06280518]
[471.58099365 191.42158508]
[457.00216675 187.89196777]
[442.42333984 184.36236572]
[427.84454346 180.83274841]
[424.65725708 182.35105896]
[420.57528687 182.39817810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 120]
[2 119]
[3 118]
[5 116]
[6 115]
[7 114]
[8 113]
[9 112]
[10 104]
[11 103]
[12 102]
[14 100]
[15 99]
[17 97]
[18 96]
[19 95]
[20 94]
[21 93]
[22 92]
[24 70]
[25 69]
[26 68]
[27 67]
[28 66]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[47 64]
[48 63]
[50 62]
[51 61]
[52 60]
[72 90]
[73 89]
[74 88]
[75 87]
[121 202]
[122 201]
[123 200]
[124 199]
[126 198]
[127 197]
[131 194]
[132 193]
[133 192]
[134 191]
[139 187]
[140 186]
[141 185]
[148 178]
[149 177]
[152 174]
[153 173]
[154 172]
[155 171]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
