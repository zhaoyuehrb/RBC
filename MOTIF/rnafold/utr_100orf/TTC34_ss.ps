%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCGCCAAGGCCUACGUGCCCUGGAACCAGCGGGGGCUGCUGCUGGUGGUGCUGCGGGAGGAGGCCCGUGGGAUGCUGCAGCGAUCUCCACGCGCCGGGCCGUCCAGAGCGCAGGGCCGGAGGGAGGCCGCAGAGACGGGCGGCCCCACCACGCAGGAGGGGGUCGCCUGCG\
) } def
/len { sequence length } bind def

/coor [
[330.07455444 368.13717651]
[336.01589966 350.69805908]
[325.74771118 339.76351929]
[315.47949219 328.82897949]
[305.21130371 317.89447021]
[290.85861206 313.91323853]
[287.05200195 298.55679321]
[276.78378296 287.62225342]
[258.51010132 288.17160034]
[245.38916016 274.98764038]
[246.04804993 256.08016968]
[235.39396667 245.52128601]
[224.73986816 234.96240234]
[214.08576965 224.40350342]
[203.43167114 213.84461975]
[191.31706238 213.57899475]
[182.35316467 204.84011841]
[181.74060059 191.93460083]
[171.27777100 181.18615723]
[160.81492615 170.43771362]
[150.35209656 159.68927002]
[135.93026733 155.96632385]
[131.84860229 140.68069458]
[121.38576508 129.93225098]
[110.92292786 119.18380737]
[100.46009064 108.43536377]
[92.78805542 121.73735809]
[76.07170105 128.68782043]
[61.33739090 131.49853516]
[46.60308456 134.30924988]
[31.86877441 137.11997986]
[17.13446617 139.93069458]
[2.40015769 142.74140930]
[-12.33415127 145.55213928]
[-27.06846046 148.36285400]
[-35.74337769 161.57350159]
[-51.23554993 164.69889832]
[-64.35375214 155.88479614]
[-67.31517792 140.36044312]
[-58.36287308 127.33617401]
[-42.80807877 124.53903961]
[-29.87917900 133.62854004]
[-15.14487076 130.81782532]
[-0.41056198 128.00711060]
[14.32374668 125.19638824]
[29.05805588 122.38566589]
[43.79236603 119.57494354]
[58.52667236 116.76422882]
[73.26097870 113.95350647]
[77.27968597 107.62104797]
[62.29284668 106.99280548]
[55.34359741 93.69964600]
[63.38127518 81.03490448]
[78.36810303 81.66347504]
[85.31708527 94.95613098]
[89.33578491 88.62367249]
[85.60543823 74.09492493]
[81.87509155 59.56617355]
[78.14473724 45.03742599]
[65.98058319 41.99481201]
[56.32880402 34.10435104]
[50.99092102 22.91839409]
[50.92921829 10.59655571]
[56.09384918 -0.51116204]
[65.44407654 -8.31256294]
[62.23765945 -22.96585274]
[59.03124237 -37.61914062]
[48.52283859 -49.44640350]
[53.36070251 -63.53342819]
[50.15428543 -78.18672180]
[46.94786835 -92.84001160]
[43.74145126 -107.49329376]
[40.53503418 -122.14658356]
[37.19721985 -136.77050781]
[33.72827911 -151.36387634]
[30.25933647 -165.95724487]
[26.65954590 -180.51889038]
[22.92919731 -195.04763794]
[11.07497311 -206.37942505]
[15.22381592 -222.24508667]
[31.10775375 -226.32337952]
[42.38675308 -214.41891479]
[37.45794678 -198.77798462]
[41.18829346 -184.24923706]
[45.91313553 -178.53335571]
[44.85270691 -169.42619324]
[48.32164764 -154.83280945]
[51.79058838 -140.23944092]
[56.41206360 -134.43966675]
[55.18832397 -125.35300446]
[58.39474106 -110.69971466]
[61.60115814 -96.04642487]
[64.80757904 -81.39313507]
[68.01399231 -66.73984528]
[78.29305267 -55.96068573]
[73.68453217 -40.82555771]
[76.89094543 -26.17226982]
[80.09736633 -11.51898003]
[96.56633759 -5.21713352]
[106.06058502 9.82796574]
[104.63609314 27.71849060]
[92.67348480 41.30707932]
[96.40383911 55.83582687]
[100.13418579 70.36457062]
[103.86453247 84.89331818]
[111.20853424 97.97252655]
[121.67137146 108.72097015]
[132.13420105 119.46941376]
[142.59704590 130.21786499]
[157.76724243 134.70960999]
[161.10054016 149.22644043]
[171.56336975 159.97488403]
[182.02621460 170.72332764]
[192.48904419 181.47177124]
[210.30995178 186.04641724]
[213.99055481 203.19052124]
[224.64465332 213.74940491]
[235.29875183 224.30830383]
[245.95285034 234.86718750]
[256.60696411 245.42608643]
[268.29745483 243.05572510]
[279.56069946 246.60182190]
[287.61904907 255.06809998]
[290.54428101 266.26028442]
[287.71832275 277.35406494]
[297.98654175 288.28857422]
[313.07363892 293.05191040]
[316.14581299 307.62625122]
[326.41403198 318.56079102]
[336.68222046 329.49530029]
[346.95043945 340.42984009]
[358.25689697 336.19320679]
[370.29525757 336.03228760]
[381.64532471 339.94256592]
[390.97598267 347.44067383]
[397.20138550 357.62387085]
[399.60726929 369.27883911]
[397.93286133 381.02612305]
[392.39889526 391.48342896]
[402.06359863 402.95483398]
[411.72833252 414.42623901]
[421.39303589 425.89767456]
[431.05773926 437.36907959]
[440.72247314 448.84048462]
[450.38717651 460.31188965]
[460.05191040 471.78332520]
[469.71661377 483.25473022]
[479.38131714 494.72613525]
[489.04605103 506.19754028]
[506.49279785 512.03900146]
[508.93389893 529.40295410]
[518.80297852 540.69903564]
[534.64855957 543.20849609]
[542.44049072 557.23223877]
[536.20147705 572.01245117]
[520.71759033 576.21099854]
[507.86666870 566.60711670]
[507.50692749 550.56811523]
[497.63784790 539.27203369]
[485.57351685 538.13793945]
[477.25967407 528.77844238]
[477.57461548 515.86224365]
[467.90991211 504.39083862]
[458.24520874 492.91943359]
[448.58047485 481.44802856]
[438.91577148 469.97662354]
[429.25106812 458.50521851]
[419.58633423 447.03378296]
[409.92163086 435.56237793]
[400.25689697 424.09097290]
[390.59219360 412.61956787]
[380.92749023 401.14813232]
[363.29342651 405.15881348]
[345.97415161 399.66702271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 131]
[3 130]
[4 129]
[5 128]
[7 126]
[8 125]
[11 120]
[12 119]
[13 118]
[14 117]
[15 116]
[18 114]
[19 113]
[20 112]
[21 111]
[23 109]
[24 108]
[25 107]
[26 106]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[56 105]
[57 104]
[58 103]
[59 102]
[65 98]
[66 97]
[67 96]
[69 94]
[70 93]
[71 92]
[72 91]
[73 90]
[74 88]
[75 87]
[76 86]
[77 84]
[78 83]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[149 162]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
