%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCGGGCCUCGGCCCGGUGCGAGCGGCUCCGCGAUGUGGCUGAGCCCGGAGGAGGUGCUGGUGGCCAAUGCGCUGUGGGUGACGGAGCGGGCCAACCCCUUCUUCGUGCUGCAGCGACGCCGGGGCCACGGCA\
) } def
/len { sequence length } bind def

/coor [
[-23.52593803 345.45126343]
[-32.00298309 357.82623291]
[-40.48003006 370.20120239]
[-48.95707703 382.57617188]
[-57.43412399 394.95111084]
[-65.47737885 407.61233521]
[-73.07717896 420.54458618]
[-80.67697906 433.47680664]
[-88.27677917 446.40905762]
[-87.86191559 462.80297852]
[-101.99128723 471.12719727]
[-116.12980652 462.81851196]
[-115.73297882 446.42416382]
[-101.20903015 438.80926514]
[-93.60923004 425.87701416]
[-86.00942230 412.94476318]
[-78.40962219 400.01251221]
[-78.98921967 396.44830322]
[-77.81339264 392.42440796]
[-74.68504333 388.79623413]
[-69.80908203 386.47409058]
[-61.33203888 374.09912109]
[-52.85499191 361.72415161]
[-44.37794495 349.34918213]
[-35.90090179 336.97421265]
[-37.17008209 313.85803223]
[-15.98364735 302.89260864]
[-9.29757214 289.46517944]
[-2.61149693 276.03771973]
[4.07457829 262.61026001]
[10.76065350 249.18281555]
[17.44672966 235.75537109]
[24.13280487 222.32792664]
[19.99730110 212.86428833]
[21.83977509 202.47798157]
[29.28295135 194.69503784]
[40.00743103 192.29437256]
[47.30649948 179.19003296]
[54.60556412 166.08569336]
[54.03923416 151.20185852]
[67.51393890 142.91072083]
[74.81300354 129.80638123]
[82.11207581 116.70204926]
[89.41114044 103.59771729]
[96.55837250 90.40995026]
[103.55280304 77.14051819]
[110.54724121 63.87108612]
[110.13756561 48.05518723]
[122.91687775 40.40414429]
[129.91131592 27.13471222]
[136.90576172 13.86527920]
[143.90019226 0.59584647]
[150.89462280 -12.67358589]
[157.88906860 -25.94301987]
[164.88349915 -39.21245193]
[171.87794495 -52.48188400]
[178.87237549 -65.75131989]
[178.51838684 -70.28613281]
[179.57252502 -74.26927948]
[181.67277527 -77.31405640]
[184.36642456 -79.19793701]
[187.17414856 -79.87807465]
[195.36309814 -92.44554138]
[203.55204773 -105.01300049]
[211.59530640 -117.67420197]
[219.49179077 -130.42745972]
[227.38825989 -143.18072510]
[235.28474426 -155.93397522]
[235.24560547 -160.48242188]
[236.57304382 -164.38301086]
[238.87907410 -167.27503967]
[241.69670105 -168.96788025]
[244.54479980 -169.45198059]
[253.58432007 -181.42224121]
[262.62384033 -193.39248657]
[271.66336060 -205.36274719]
[273.80532837 -221.03828430]
[287.64971924 -226.53210449]
[296.68923950 -238.50236511]
[295.90579224 -254.52627563]
[308.04006958 -265.02099609]
[323.78366089 -261.93585205]
[331.05947876 -247.63752747]
[324.28610229 -233.09445190]
[308.65948486 -229.46284485]
[299.61996460 -217.49258423]
[298.12457275 -202.67324829]
[283.63360596 -196.32322693]
[274.59408569 -184.35296631]
[265.55456543 -172.38272095]
[256.51504517 -160.41246033]
[248.03800964 -148.03749084]
[240.14152527 -135.28424072]
[232.24504089 -122.53098297]
[224.34855652 -109.77772522]
[223.49423218 -102.36835480]
[216.11950684 -96.82405090]
[207.93055725 -84.25659180]
[199.74160767 -71.68912506]
[192.14181519 -58.75688171]
[185.14736938 -45.48744583]
[178.15293884 -32.21801376]
[171.15849304 -18.94858170]
[164.16406250 -5.67914915]
[157.16963196 7.59028387]
[150.17518616 20.85971642]
[143.18075562 34.12915039]
[136.18630981 47.39858246]
[137.09628296 62.26536560]
[123.81667328 70.86552429]
[116.82224274 84.13495636]
[109.82780457 97.40438843]
[109.13953400 105.51405334]
[102.51547241 110.89678192]
[95.21640778 124.00112152]
[87.91734314 137.10545349]
[80.61827087 150.20979309]
[80.66252899 166.03092957]
[67.70989990 173.38476562]
[60.41083527 186.48908997]
[53.11176682 199.59342957]
[54.41766739 219.65008545]
[37.56025314 229.01399231]
[30.87417793 242.44145203]
[24.18810272 255.86889648]
[17.50202751 269.29635620]
[10.81595230 282.72378540]
[4.12987709 296.15124512]
[-2.55619812 309.57870483]
[1.35663950 315.51901245]
[3.17745852 322.34146118]
[2.75122738 329.33776855]
[0.15444914 335.79229736]
[-4.31604052 341.05520630]
[-10.17664051 344.60791016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[5 21]
[6 17]
[7 16]
[8 15]
[9 14]
[27 129]
[28 128]
[29 127]
[30 126]
[31 125]
[32 124]
[33 123]
[37 121]
[38 120]
[39 119]
[41 117]
[42 116]
[43 115]
[44 114]
[45 112]
[46 111]
[47 110]
[49 108]
[50 107]
[51 106]
[52 105]
[53 104]
[54 103]
[55 102]
[56 101]
[57 100]
[62 99]
[63 98]
[64 97]
[65 95]
[66 94]
[67 93]
[68 92]
[73 91]
[74 90]
[75 89]
[76 88]
[78 86]
[79 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
