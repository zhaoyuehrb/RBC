%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGCCUCCUCUAAGUCUUGAGCCCGCAGUUCCUGAGAGAAGAACCCUGAGGAACAGACGUUCCCUCGCGGCCCUGGCACCUCUAACCCCAGACAUGCUGCUGCUGCUGCUGCCCCUGCUCUGGGGGAGGGAGAGGGCGGAAGGACAGACAAGUAAACUGCUGACGAUGCAGAGUUCCGUGACGGUGCAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[108.50766754 250.45257568]
[94.64126587 257.05700684]
[79.33167267 255.82742310]
[66.69708252 247.09457397]
[60.13614273 233.20753479]
[61.41371155 217.90187073]
[70.18612671 205.29472351]
[84.09365845 198.77734375]
[85.29450989 183.82548523]
[86.49536133 168.87362671]
[87.69622040 153.92178345]
[66.12080383 142.55833435]
[51.84948730 123.28668213]
[47.42515564 100.12937927]
[53.37940598 77.73567963]
[68.19503784 60.44835281]
[60.62574005 47.49822998]
[53.05644226 34.54810333]
[45.48714447 21.59798050]
[37.91784668 8.64785576]
[20.92309952 4.52597857]
[12.33123970 -10.31641483]
[17.03214455 -26.45802879]
[9.25625610 -39.28517151]
[1.48036742 -52.11231232]
[-6.29552126 -64.93945312]
[-15.34068108 -64.33368683]
[-23.98933220 -66.73753357]
[-31.27870750 -71.82223511]
[-36.41772842 -78.96416473]
[-51.14111710 -76.09678650]
[-65.86450195 -73.22940063]
[-80.58789062 -70.36202240]
[-95.31127930 -67.49464417]
[-110.03466797 -64.62726593]
[-122.10130310 -54.39462662]
[-136.07292175 -59.55631638]
[-150.79631042 -56.68893814]
[-156.40658569 -42.31784058]
[-168.90924072 -33.27975464]
[-184.31474304 -32.45870209]
[-197.70724487 -40.11667633]
[-204.81323242 -53.81004333]
[-203.36523438 -69.16930389]
[-193.82530212 -81.29337311]
[-179.23756409 -86.31349945]
[-164.25694275 -82.62778473]
[-153.66369629 -71.41232300]
[-138.94030762 -74.27970123]
[-127.92678070 -84.30725098]
[-112.90204620 -79.35065460]
[-98.17865753 -82.21803284]
[-83.45526886 -85.08541107]
[-68.73188782 -87.95278931]
[-54.00849533 -90.82016754]
[-39.28511047 -93.68755341]
[-38.28013611 -98.69438171]
[-36.31718826 -103.40872955]
[-33.47178650 -107.64924622]
[-29.85339165 -111.25279236]
[-25.60120773 -114.08072662]
[-20.87881851 -116.02426910]
[-20.87881851 -131.02427673]
[-20.87881851 -146.02427673]
[-20.87881851 -161.02427673]
[-20.87881851 -176.02427673]
[-20.87881851 -191.02427673]
[-20.87881851 -206.02427673]
[-55.51091385 -231.67271423]
[-60.00875854 -245.98248291]
[-64.50660706 -260.29223633]
[-69.00444794 -274.60202026]
[-73.50229645 -288.91177368]
[-87.23387146 -296.26580811]
[-91.59147644 -310.84201050]
[-84.49591827 -323.88763428]
[-88.99375916 -338.19741821]
[-93.49160767 -352.50717163]
[-97.98945618 -366.81692505]
[-102.48729706 -381.12670898]
[-116.21887207 -388.48074341]
[-120.57647705 -403.05694580]
[-113.48091888 -416.10256958]
[-117.97876740 -430.41235352]
[-122.47660828 -444.72210693]
[-136.60284424 -451.80905151]
[-141.50100708 -466.83517456]
[-134.26509094 -480.88568115]
[-119.18804932 -485.62469482]
[-105.21481323 -478.24063110]
[-100.63546753 -463.11431885]
[-108.16684723 -449.21994019]
[-103.66899872 -434.91018677]
[-99.17115021 -420.60043335]
[-85.88794708 -413.96023560]
[-81.12264252 -399.51217651]
[-88.17753601 -385.62454224]
[-83.67968750 -371.31478882]
[-79.18183899 -357.00503540]
[-74.68399811 -342.69525146]
[-70.18614960 -328.38549805]
[-56.90294266 -321.74530029]
[-52.13763809 -307.29724121]
[-59.19253159 -293.40960693]
[-54.69468689 -279.09985352]
[-50.19683838 -264.79010010]
[-45.69899368 -250.48033142]
[-41.20114517 -236.17056274]
[-33.86337662 -234.61906433]
[-35.44721985 -249.53520203]
[-21.75054550 -255.65084839]
[-11.70173550 -244.51435852]
[-19.18783951 -231.51606750]
[-11.85007095 -229.96456909]
[-1.94482875 -241.22894287]
[7.96041346 -252.49331665]
[17.86565590 -263.75769043]
[16.60308075 -279.51147461]
[26.91337204 -291.48950195]
[42.67961502 -292.58544922]
[54.54798126 -282.14910889]
[55.47717285 -266.37216187]
[44.91592407 -254.61479187]
[29.13003159 -253.85246277]
[19.22479057 -242.58807373]
[9.31954765 -231.32369995]
[-0.58569407 -220.05932617]
[-5.87881947 -206.02427673]
[-5.87881947 -191.02427673]
[-5.87881947 -176.02427673]
[-5.87881947 -161.02427673]
[-5.87881947 -146.02427673]
[-5.87881947 -131.02427673]
[-5.87881947 -116.02426910]
[12.24791241 -98.09108734]
[6.53162050 -72.71533966]
[14.30750847 -59.88820267]
[22.08339691 -47.06105804]
[29.85928535 -34.23391724]
[42.68710327 -32.94441223]
[52.57505417 -24.37110519]
[55.76287079 -11.47753334]
[50.86796951 1.07855737]
[58.43726730 14.02868176]
[66.00656891 26.97880554]
[73.57586670 39.92893219]
[81.14516449 52.87905502]
[90.93320465 50.06322479]
[101.08638000 49.25841904]
[111.19580841 50.49704742]
[120.85436249 53.72923279]
[129.67308044 58.82480621]
[137.29682922 65.57855988]
[143.41856384 73.71852112]
[147.79179382 82.91687012]
[150.24035645 92.80318451]
[150.66569519 102.97931671]
[149.05062866 113.03547668]
[145.46023560 122.56667328]
[157.76281738 131.14842224]
[170.06541443 139.73017883]
[182.36799622 148.31192017]
[197.41735840 144.06332397]
[211.65548706 150.52934265]
[218.35958862 164.65693665]
[214.36418152 179.77549744]
[201.55577087 188.74649048]
[185.98210144 187.33409119]
[174.99658203 176.20518494]
[173.78623962 160.61450195]
[161.48365784 152.03276062]
[149.18107605 143.45100403]
[136.87849426 134.86926270]
[134.29254150 140.45059204]
[130.90849304 145.86508179]
[137.41674805 159.37962341]
[150.37548828 168.45605469]
[148.92657471 183.28001404]
[155.43484497 196.79455566]
[161.94309998 210.30908203]
[174.26300049 221.95623779]
[166.48150635 237.01893616]
[149.85333252 233.71131897]
[148.42855835 216.81733704]
[141.92030334 203.30281067]
[135.41204834 189.78826904]
[122.91882324 181.67848206]
[123.90222168 165.88787842]
[117.39396667 152.37333679]
[102.64807129 155.12263489]
[101.44721985 170.07447815]
[100.24636078 185.02633667]
[99.04550934 199.97819519]
[111.73459625 208.63166809]
[118.38246155 222.47729492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 193]
[9 192]
[10 191]
[11 190]
[16 147]
[17 146]
[18 145]
[19 144]
[20 143]
[23 139]
[24 138]
[25 137]
[26 136]
[30 56]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[37 49]
[38 48]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[83 94]
[84 93]
[85 92]
[114 127]
[115 126]
[116 125]
[117 124]
[159 173]
[160 172]
[161 171]
[162 170]
[175 189]
[176 188]
[178 186]
[179 185]
[180 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
