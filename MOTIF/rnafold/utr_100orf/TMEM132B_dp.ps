%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM132B)
} def

/sequence { (\
UACGGGAAAUGUUUGGUGCAGCAUCCAGAAUGGACACCACUGCUGUCUGCACCGGGGGAGUGACAGAGAGUCGAGGGAUUGUGGAUAGCCUGCAGAAGUUUUCCUCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 12 0.004752020 ubox
3 11 0.005293866 ubox
3 107 0.776107649 ubox
4 10 0.004967025 ubox
4 103 0.003602149 ubox
4 104 0.443721640 ubox
4 105 0.415020464 ubox
4 106 0.779152878 ubox
5 102 0.003470060 ubox
5 103 0.444520916 ubox
5 104 0.888344170 ubox
5 105 0.112137085 ubox
6 101 0.003808386 ubox
6 102 0.444171397 ubox
6 103 0.891084452 ubox
6 104 0.089031288 ubox
7 100 0.004481866 ubox
7 101 0.449157362 ubox
7 102 0.890717853 ubox
8 99 0.005137862 ubox
8 100 0.453256489 ubox
8 101 0.884441426 ubox
8 102 0.042448068 ubox
9 99 0.456498267 ubox
9 100 0.863184652 ubox
9 101 0.047681672 ubox
10 98 0.445397821 ubox
11 64 0.003222378 ubox
11 99 0.099492809 ubox
12 56 0.008992812 ubox
12 63 0.003168010 ubox
12 95 0.024229840 ubox
12 96 0.164945237 ubox
12 97 0.758181217 ubox
12 98 0.263663525 ubox
13 55 0.011719188 ubox
13 94 0.010820621 ubox
13 95 0.175433833 ubox
13 96 0.760818066 ubox
13 97 0.286306556 ubox
13 98 0.199079456 ubox
14 39 0.007742812 ubox
14 54 0.013467213 ubox
14 94 0.086002886 ubox
14 95 0.717146869 ubox
14 96 0.284694625 ubox
14 97 0.225522540 ubox
15 38 0.008901639 ubox
15 53 0.014577130 ubox
15 91 0.006088576 ubox
15 93 0.051615201 ubox
16 37 0.008911252 ubox
16 52 0.014625591 ubox
16 90 0.008475209 ubox
16 93 0.032270324 ubox
17 36 0.008909057 ubox
17 51 0.014623137 ubox
17 92 0.031888310 ubox
17 94 0.962271098 ubox
18 35 0.008901666 ubox
18 50 0.014624836 ubox
18 89 0.020944948 ubox
18 91 0.022059312 ubox
18 93 0.997767251 ubox
19 49 0.014621240 ubox
19 88 0.020987149 ubox
19 92 0.998586132 ubox
20 48 0.014598243 ubox
20 91 0.995683623 ubox
21 47 0.014460345 ubox
21 89 0.671308434 ubox
21 90 0.740279949 ubox
22 45 0.013012290 ubox
22 88 0.945402882 ubox
23 44 0.012634949 ubox
23 46 0.003298769 ubox
23 86 0.988401654 ubox
24 34 0.012566550 ubox
24 85 0.999135061 ubox
25 33 0.013401412 ubox
25 84 0.999791481 ubox
26 32 0.013416214 ubox
26 42 0.014023692 ubox
26 83 0.999784774 ubox
27 31 0.010896490 ubox
27 41 0.014355515 ubox
27 82 0.997200833 ubox
28 40 0.014415715 ubox
28 80 0.012092184 ubox
29 79 0.012181119 ubox
29 80 0.979082655 ubox
30 79 0.983778031 ubox
30 82 0.020748144 ubox
31 39 0.054498877 ubox
31 73 0.003483250 ubox
31 78 0.958222625 ubox
31 81 0.030603696 ubox
32 38 0.109901570 ubox
32 41 0.021252461 ubox
32 72 0.005188432 ubox
32 80 0.029608196 ubox
32 82 0.004665363 ubox
33 37 0.108233279 ubox
33 40 0.022337220 ubox
33 47 0.003175912 ubox
33 72 0.016056835 ubox
33 79 0.040091929 ubox
33 80 0.057103477 ubox
34 46 0.003195436 ubox
34 61 0.004979784 ubox
34 71 0.015931614 ubox
34 79 0.102562053 ubox
34 82 0.029353233 ubox
35 42 0.006450589 ubox
35 45 0.003211618 ubox
35 60 0.005264939 ubox
35 70 0.015652629 ubox
35 81 0.040053226 ubox
36 41 0.005722503 ubox
36 71 0.012584038 ubox
36 80 0.037382672 ubox
37 55 0.003786530 ubox
37 57 0.005375437 ubox
37 58 0.004170469 ubox
37 70 0.012927653 ubox
37 76 0.336123094 ubox
37 77 0.921164675 ubox
37 84 0.004187859 ubox
38 54 0.003794871 ubox
38 56 0.005378386 ubox
38 57 0.004120750 ubox
38 62 0.004171976 ubox
38 75 0.337449287 ubox
38 76 0.920641413 ubox
38 83 0.004207431 ubox
39 61 0.005067333 ubox
39 71 0.070351845 ubox
39 82 0.004206736 ubox
40 55 0.006091059 ubox
40 60 0.005287745 ubox
40 68 0.031368434 ubox
40 70 0.072644917 ubox
40 75 0.731218494 ubox
40 76 0.042956979 ubox
40 77 0.026300592 ubox
40 81 0.004154836 ubox
41 51 0.005705752 ubox
41 54 0.005941687 ubox
41 59 0.005268199 ubox
41 67 0.031423530 ubox
41 69 0.072170017 ubox
41 73 0.407618419 ubox
41 74 0.679854756 ubox
41 75 0.043012681 ubox
41 76 0.025983985 ubox
42 50 0.006160101 ubox
42 53 0.005750400 ubox
42 61 0.008264990 ubox
42 71 0.826098355 ubox
42 72 0.525463482 ubox
42 89 0.006996204 ubox
43 49 0.006173198 ubox
43 57 0.003759708 ubox
43 58 0.003718953 ubox
43 60 0.009034110 ubox
43 66 0.085256318 ubox
43 68 0.006660419 ubox
43 70 0.995605469 ubox
43 88 0.007032305 ubox
44 51 0.005586702 ubox
44 56 0.003288596 ubox
44 57 0.003694400 ubox
44 59 0.009028689 ubox
44 65 0.085406478 ubox
44 67 0.004099911 ubox
44 69 0.992080893 ubox
44 87 0.007041483 ubox
45 50 0.005610408 ubox
45 64 0.085463179 ubox
45 86 0.007042135 ubox
46 55 0.003814576 ubox
46 57 0.008916883 ubox
46 63 0.085439098 ubox
46 67 0.994107769 ubox
46 85 0.007044603 ubox
47 54 0.003994246 ubox
47 55 0.003259122 ubox
47 56 0.008992897 ubox
47 62 0.084921258 ubox
47 66 0.996088215 ubox
47 84 0.007045365 ubox
48 54 0.003346536 ubox
48 55 0.008884041 ubox
48 62 0.008234194 ubox
48 65 0.995844342 ubox
48 83 0.007011888 ubox
49 53 0.003268475 ubox
49 61 0.077579210 ubox
49 64 0.995789515 ubox
49 82 0.007021233 ubox
50 60 0.081896345 ubox
50 62 0.994525468 ubox
50 81 0.007032680 ubox
51 61 0.992972446 ubox
51 80 0.006565889 ubox
52 58 0.155630289 ubox
52 60 0.984195420 ubox
52 77 0.006201644 ubox
53 57 0.171363748 ubox
53 62 0.038134545 ubox
53 76 0.006218914 ubox
54 61 0.035525415 ubox
55 106 0.003182853 ubox
56 105 0.003217241 ubox
57 104 0.003235046 ubox
58 103 0.003236208 ubox
59 102 0.003178942 ubox
61 73 0.010333438 ubox
62 72 0.018115919 ubox
63 71 0.018235796 ubox
64 70 0.018239704 ubox
69 80 0.010954661 ubox
70 79 0.014857454 ubox
70 108 0.003719853 ubox
71 78 0.020202488 ubox
72 76 0.007133253 ubox
72 77 0.043995161 ubox
72 81 0.009517389 ubox
72 107 0.011151896 ubox
73 80 0.009702627 ubox
73 106 0.014568488 ubox
74 79 0.009605021 ubox
74 105 0.014587762 ubox
75 104 0.014589538 ubox
76 103 0.014584425 ubox
77 102 0.014445858 ubox
78 101 0.014293216 ubox
79 95 0.014662101 ubox
80 94 0.015973017 ubox
81 93 0.016346857 ubox
82 92 0.016220591 ubox
83 90 0.006993833 ubox
83 91 0.014787641 ubox
84 89 0.007006796 ubox
84 90 0.014804419 ubox
3 107 0.9500000 lbox
4 106 0.9500000 lbox
5 104 0.9500000 lbox
6 103 0.9500000 lbox
7 102 0.9500000 lbox
8 101 0.9500000 lbox
9 100 0.9500000 lbox
12 97 0.9500000 lbox
13 96 0.9500000 lbox
14 95 0.9500000 lbox
17 94 0.9500000 lbox
18 93 0.9500000 lbox
19 92 0.9500000 lbox
20 91 0.9500000 lbox
21 89 0.9500000 lbox
22 88 0.9500000 lbox
23 86 0.9500000 lbox
24 85 0.9500000 lbox
25 84 0.9500000 lbox
26 83 0.9500000 lbox
27 82 0.9500000 lbox
29 80 0.9500000 lbox
30 79 0.9500000 lbox
31 78 0.9500000 lbox
37 77 0.9500000 lbox
38 76 0.9500000 lbox
40 75 0.9500000 lbox
41 74 0.9500000 lbox
42 71 0.9500000 lbox
43 70 0.9500000 lbox
44 69 0.9500000 lbox
46 67 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
showpage
end
%%EOF
