%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUCUGAAAAAAGAAAGCCAACUUUCCUUUCAAAUACACACCCCAACCCGCCCCGGCAUACACAGAAAUGGGGACUGCGAGCAGAAGCAACAUCGCUCGCCAUCUGCAAACCAAUCUCAUUCUAUUUUGUGUCGGUGCUGUGGGCGCCUGUACUCUCUCUGUCACAC\
) } def
/len { sequence length } bind def

/coor [
[116.88827515 150.66064453]
[103.34481812 157.10848999]
[92.66999054 146.57055664]
[98.94246674 132.94503784]
[102.28881836 118.32306671]
[94.89353180 117.07413483]
[84.94669342 128.30178833]
[74.99985504 139.52944946]
[65.05301666 150.75711060]
[55.10617447 161.98477173]
[56.39119720 172.83683777]
[51.56999207 182.39784241]
[42.46235275 187.59811401]
[32.21718979 186.91928101]
[21.85988998 197.76945496]
[11.50259113 208.61962891]
[1.14529276 219.46980286]
[-9.21200657 230.31999207]
[-12.55935764 246.37387085]
[-28.21859741 251.24421692]
[-40.08084106 239.92082214]
[-35.94322968 224.05223083]
[-20.06218338 219.96269226]
[-9.70488548 209.11250305]
[0.65241367 198.26232910]
[11.00971222 187.41215515]
[21.36701202 176.56198120]
[24.50331879 157.50566101]
[43.87851334 152.03793335]
[53.82535553 140.81027222]
[63.77219391 129.58261108]
[73.71903229 118.35494995]
[83.66587067 107.12728882]
[70.66471100 114.60858917]
[55.91436386 117.33387756]
[41.09828186 114.99213409]
[27.90743065 107.85060120]
[17.84727287 96.72436523]
[12.06597805 82.88323975]
[11.22336197 67.90692902]
[15.41559315 53.50466537]
[24.16421318 41.32017899]
[36.47074127 32.74408722]
[50.93063736 28.75517845]
[65.89359283 29.80870247]
[79.65189362 35.78442383]
[90.63529968 46.00033188]
[97.59027863 59.29048920]
[99.72306061 74.13809204]
[96.78932190 88.85093689]
[104.24903870 75.83738708]
[111.70875549 62.82382965]
[119.16847229 49.81027222]
[126.62818909 36.79671860]
[133.96662903 23.71438980]
[141.18316650 10.56442070]
[148.39968872 -2.58554888]
[155.61622620 -15.73551846]
[162.83274841 -28.88548851]
[170.04927063 -42.03545761]
[177.02012634 -55.31729889]
[183.74288940 -68.72641754]
[190.46563721 -82.13554382]
[197.18840027 -95.54466248]
[203.91114807 -108.95378113]
[210.63391113 -122.36290741]
[217.35667419 -135.77203369]
[224.07942200 -149.18115234]
[223.62092590 -159.68376160]
[229.93809509 -166.55064392]
[232.71044922 -181.29222107]
[227.65705872 -196.28468323]
[237.61337280 -207.36264038]
[240.38574219 -222.10421753]
[243.15809631 -236.84579468]
[234.50891113 -249.80068970]
[237.53048706 -264.71124268]
[249.93429565 -272.87707520]
[252.70666504 -287.61865234]
[255.47903442 -302.36022949]
[258.25140381 -317.10180664]
[261.02374268 -331.84338379]
[263.79611206 -346.58496094]
[262.30416870 -355.63867188]
[266.75946045 -361.57366943]
[269.80535889 -376.26116943]
[259.97555542 -388.42294312]
[260.31463623 -404.05685425]
[270.66247559 -415.78103638]
[286.13314819 -418.05966187]
[299.42187500 -409.81686401]
[304.25415039 -394.94464111]
[298.34826660 -380.46517944]
[284.49285889 -373.21524048]
[281.44696045 -358.52777100]
[278.53768921 -343.81259155]
[275.76531982 -329.07101440]
[272.99298096 -314.32943726]
[270.22061157 -299.58786011]
[267.44824219 -284.84628296]
[264.67587280 -270.10470581]
[273.26577759 -257.99072266]
[270.66421509 -243.00115967]
[257.89965820 -234.07342529]
[255.12730408 -219.33184814]
[252.35494995 -204.59027100]
[257.60662842 -190.65223694]
[247.45202637 -178.51985168]
[244.67965698 -163.77828979]
[254.91749573 -174.74125671]
[268.22152710 -181.66967773]
[283.07336426 -183.77278137]
[297.77795410 -180.81057739]
[310.65710449 -173.12110901]
[320.24087524 -161.58198547]
[325.43548584 -147.51017761]
[325.64810181 -132.51168823]
[320.85443115 -118.29828644]
[311.60156250 -106.49215698]
[298.94555664 -98.44072723]
[284.33084106 -95.06290436]
[269.42535400 -96.74420929]
[255.93029785 -103.29273987]
[245.38583374 -113.96112061]
[238.99540710 -127.53176880]
[237.48854065 -142.45838928]
[230.76579285 -129.04927063]
[224.04302979 -115.64015198]
[217.32028198 -102.23102570]
[210.59751892 -88.82190704]
[203.87475586 -75.41278076]
[197.15200806 -62.00366211]
[190.42924500 -48.59454346]
[191.07269287 -43.82506180]
[188.69844055 -38.60569382]
[183.19924927 -34.81892776]
[175.98271179 -21.66895866]
[168.76618958 -8.51898956]
[161.54965210 4.63098001]
[154.33312988 17.78095055]
[147.11660767 30.93091965]
[146.65339661 38.33760834]
[139.64173889 44.25643539]
[132.18202209 57.26998901]
[124.72231293 70.28354645]
[117.26259613 83.29710388]
[109.80287933 96.31065369]
[120.76358032 97.80048370]
[130.93927002 104.64059448]
[138.34614563 116.36183167]
[144.05418396 130.23332214]
[149.76222229 144.10481262]
[155.59893799 157.92265320]
[161.56382751 171.68565369]
[176.60275269 175.97105408]
[185.32579041 188.94960022]
[183.61416626 204.49322510]
[172.27607727 215.26271057]
[156.66500854 216.17301941]
[144.15203857 206.79434204]
[140.64540100 191.55500793]
[147.80082703 177.65054321]
[141.83593750 163.88755798]
[136.26832581 158.98091125]
[135.89071655 149.81285095]
[130.18269348 135.94136047]
[124.47465515 122.06986237]
[117.07937622 120.82093048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 33]
[7 32]
[8 31]
[9 30]
[10 29]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[50 147]
[51 146]
[52 145]
[53 144]
[54 143]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[66 128]
[67 127]
[68 126]
[70 109]
[71 108]
[73 106]
[74 105]
[75 104]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[85 95]
[86 94]
[150 167]
[151 166]
[152 165]
[153 163]
[154 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
