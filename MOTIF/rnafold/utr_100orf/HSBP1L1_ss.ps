%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCGGCCCCGCCUCCGCCCUGGAACGCAGCGCGCUCCGCCCGAGGCCUCCCGGCGGCCCAUACGGGAAUCGCGGAGCUUAGCUGUCGCCACCUCGCGCCGGGUCCGCGCGGCCCACGGGACCCCCCACUGACGCCCCCGGCCAGCGGUCCACAUGGACGUGCGGGGCCCUGAAGCCCCCGGCGGGCGCGCGCUGCGGGACGCGGCAGAAAAUCUAUUUCAGGAACUUCAGGAACAUUUUCAAGCUCUGACGG\
) } def
/len { sequence length } bind def

/coor [
[210.05731201 407.19833374]
[201.39070129 394.95538330]
[192.64884949 382.76605225]
[183.83206177 370.63079834]
[175.01528931 358.49554443]
[160.28794861 361.34255981]
[156.62924194 375.88952637]
[152.97053528 390.43646240]
[154.97087097 407.27200317]
[139.34703064 413.85470581]
[128.69647217 400.66372681]
[138.42358398 386.77777100]
[142.08229065 372.23080444]
[145.74099731 357.68386841]
[131.75390625 352.26522827]
[124.65750885 365.48040771]
[117.56110382 378.69558716]
[120.79321289 394.40969849]
[110.41234589 406.64151001]
[94.38181305 406.00781250]
[84.99887085 392.99475098]
[89.46130371 377.58480835]
[104.34592438 371.59918213]
[111.44232178 358.38400269]
[118.53872681 345.16882324]
[143.38677979 336.96032715]
[165.98577881 341.92617798]
[160.56715393 327.93908691]
[155.14852905 313.95199585]
[149.72990417 299.96493530]
[144.31127930 285.97784424]
[138.89265442 271.99075317]
[133.47402954 258.00366211]
[128.05540466 244.01658630]
[122.63678741 230.02951050]
[117.21816254 216.04241943]
[111.71347809 202.08898926]
[106.12294769 188.16972351]
[100.53241730 174.25045776]
[94.94188690 160.33119202]
[89.35135651 146.41192627]
[83.76082611 132.49264526]
[72.01691437 123.16095734]
[57.19443130 120.86008453]
[42.37195206 118.55921173]
[27.54946899 116.25833893]
[12.72698593 113.95745850]
[4.06433439 128.37986755]
[-14.24803066 135.18774414]
[-35.46016693 128.40971375]
[-50.37799454 129.97764587]
[-65.29582214 131.54557800]
[-80.21365356 133.11349487]
[-95.13147736 134.68142700]
[-101.30512238 148.74491882]
[-113.69288635 157.82449341]
[-128.96253967 159.47781372]
[-143.00660706 153.26011658]
[-152.04731750 140.84396362]
[-153.65275574 125.56919861]
[-147.39106750 111.54469299]
[-134.94662476 102.54294586]
[-119.66691589 100.98538971]
[-105.66210175 107.29100037]
[-96.69940948 119.76359558]
[-81.78157806 118.19567108]
[-66.86374664 116.62774658]
[-51.94592285 115.05981445]
[-37.02809525 113.49188995]
[-35.78643799 106.09538269]
[-47.35610580 96.54851532]
[-33.30313110 91.30237579]
[-32.06147766 83.90586853]
[-45.64957809 77.55264282]
[-59.23767853 71.19941711]
[-72.82578278 64.84618378]
[-86.45275879 58.57678223]
[-100.11810303 52.39143753]
[-113.78343964 46.20609283]
[-130.70649719 45.18307877]
[-134.40823364 28.63818359]
[-119.53466034 20.50103188]
[-107.59809875 32.54075241]
[-93.93275452 38.72609711]
[-80.26741791 44.91144180]
[-72.89862823 44.80674744]
[-66.47255707 51.25808334]
[-52.88445282 57.61131287]
[-39.29635239 63.96453857]
[-25.70825005 70.31776428]
[-3.71067238 70.79847717]
[11.31133652 82.92617035]
[15.02786064 99.13497925]
[29.85034370 101.43585205]
[44.67282486 103.73672485]
[59.49530792 106.03760529]
[74.31778717 108.33847809]
[65.34395599 87.42840576]
[75.14332581 60.42978287]
[72.75118256 45.62175369]
[70.35904694 30.81372643]
[67.96691132 16.00569916]
[65.57477570 1.19767058]
[63.18264008 -13.61035728]
[54.03843689 -19.43481445]
[49.68452072 -29.12392426]
[51.33196259 -39.39583969]
[58.20199966 -46.91355515]
[56.17541885 -61.77602386]
[54.14884186 -76.63849640]
[52.03075027 -91.48819733]
[49.82122421 -106.32456970]
[47.61169815 -121.16094208]
[40.15592957 -124.77483368]
[34.78388214 -130.95915222]
[32.30586624 -138.66874695]
[33.05121613 -146.63830566]
[36.82644653 -153.58999634]
[42.95823288 -158.43827820]
[41.48222733 -173.36547852]
[40.00622559 -188.29269409]
[30.01446152 -201.29640198]
[36.52933121 -216.34594727]
[52.84889221 -217.95962524]
[62.18497849 -204.47743225]
[54.93342972 -189.76869202]
[56.40943146 -174.84149170]
[57.88543701 -159.91429138]
[72.11991119 -143.59878540]
[62.44807053 -123.37046814]
[64.65760040 -108.53409576]
[66.86712646 -93.69772339]
[70.94937897 -87.56215668]
[69.01130676 -78.66506958]
[71.03788757 -63.80260468]
[73.06446838 -48.94013596]
[85.98118591 -34.52944946]
[77.99066925 -16.00249290]
[80.38280487 -1.19446623]
[82.77494049 13.61356163]
[85.16707611 28.42158890]
[87.55921173 43.22961807]
[89.95134735 58.03764343]
[97.20173645 59.95646667]
[111.70251465 63.79410553]
[118.95290375 65.71292877]
[128.35676575 54.02671814]
[137.76062012 42.34051132]
[147.09231567 30.59659576]
[156.35148621 18.79542160]
[165.61065674 6.99424791]
[174.86982727 -4.80692625]
[176.64855957 -21.10932350]
[191.76325989 -27.47157097]
[204.66520691 -17.34873390]
[202.08198547 -1.15431952]
[186.67100525 4.45224714]
[177.41183472 16.25342178]
[168.15264893 28.05459595]
[158.89347839 39.85577011]
[157.24188232 47.03784180]
[149.44682312 51.74436569]
[140.04296875 63.43057632]
[130.63911438 75.11678314]
[140.04296875 86.80299377]
[153.47041321 80.11692047]
[166.89787292 73.43083954]
[180.32531738 66.74476624]
[193.75276184 60.05869293]
[198.53695679 44.99592209]
[212.60911560 37.80216217]
[227.62045288 42.74534607]
[234.66503906 56.89276505]
[229.56341553 71.85100555]
[215.34231567 78.74562073]
[200.43884277 73.48613739]
[187.01139832 80.17221832]
[173.58393860 86.85829163]
[160.15649414 93.54436493]
[146.72904968 100.23044586]
[124.85601807 127.22618103]
[97.68009186 126.90212250]
[103.27062225 140.82139587]
[108.86115265 154.74066162]
[114.45168304 168.65992737]
[120.04221344 182.57919312]
[125.63274384 196.49845886]
[131.71809387 203.27214050]
[131.20524597 210.62379456]
[136.62387085 224.61088562]
[142.04249573 238.59796143]
[147.46112061 252.58505249]
[152.87974548 266.57214355]
[158.29837036 280.55920410]
[163.71699524 294.54629517]
[169.13562012 308.53338623]
[174.55424500 322.52047729]
[179.97286987 336.50753784]
[187.15054321 349.67877197]
[195.96731567 361.81402588]
[204.78410339 373.94927979]
[212.33784485 379.03408813]
[213.63365173 386.28878784]
[222.30026245 398.53173828]
[231.55943298 410.33291626]
[241.38870239 421.66366577]
[251.21795654 432.99438477]
[268.76623535 438.61721802]
[271.39260864 455.98059082]
[281.36071777 467.18939209]
[291.32882690 478.39816284]
[301.29690552 489.60696411]
[311.26501465 500.81573486]
[321.23312378 512.02453613]
[332.07473755 512.02923584]
[340.94976807 517.86614990]
[345.07452393 527.41668701]
[343.31448364 537.44738770]
[353.00341797 548.89837646]
[362.69235229 560.34936523]
[372.38125610 571.80035400]
[387.20181274 577.33764648]
[389.51608276 592.05133057]
[399.20501709 603.50231934]
[414.81262207 608.53558350]
[417.99249268 624.62347412]
[405.47341919 635.21618652]
[390.13394165 629.41674805]
[387.75402832 613.19122314]
[378.06509399 601.74023438]
[363.93756104 597.02203369]
[360.93029785 581.48925781]
[351.24136353 570.03826904]
[341.55245972 558.58728027]
[331.86352539 547.13635254]
[313.22949219 541.91308594]
[310.02432251 521.99261475]
[300.05624390 510.78384399]
[290.08813477 499.57507324]
[280.12002563 488.36627197]
[270.15191650 477.15747070]
[260.18380737 465.94869995]
[248.14749146 464.93481445]
[239.75085449 455.70272827]
[239.88720703 442.82363892]
[230.05795288 431.49291992]
[220.22869873 420.16217041]
[220.40119934 435.16119385]
[211.80270386 447.45205688]
[197.65341187 452.43179321]
[183.25234985 448.23544312]
[173.99282837 436.43453979]
[173.34259033 421.44863892]
[181.54516602 408.89007568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 201]
[4 200]
[5 199]
[6 14]
[7 13]
[8 12]
[15 25]
[16 24]
[17 23]
[27 198]
[28 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 187]
[38 186]
[39 185]
[40 184]
[41 183]
[42 182]
[43 97]
[44 96]
[45 95]
[46 94]
[47 93]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[73 90]
[74 89]
[75 88]
[76 87]
[77 85]
[78 84]
[79 83]
[99 143]
[100 142]
[101 141]
[102 140]
[103 139]
[104 138]
[108 136]
[109 135]
[110 134]
[111 132]
[112 131]
[113 130]
[119 128]
[120 127]
[121 126]
[146 164]
[147 163]
[148 162]
[149 160]
[150 159]
[151 158]
[152 157]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
[205 247]
[206 246]
[207 245]
[209 242]
[210 241]
[211 240]
[212 239]
[213 238]
[214 237]
[218 235]
[219 234]
[220 233]
[221 232]
[223 230]
[224 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
