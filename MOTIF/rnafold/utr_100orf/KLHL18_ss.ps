%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:07:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGGAGGCCCGUCCGAUUGCUGCUCCGCGCUCCGAGCGGCUGUCGGCGUGCGCUAUCGCCCCGCCCUGGUUAGUGUCUAGCCGGCCGGCGAGGCCUGCGCAGUUGCAGCGGCCGGGGAAGAUGGUGGAGGACGGCGCGGAGGAGCUGGAGGAUCUGGUGCACUUCUCCGUGUCUGAGUUGCCUAGUCGCGGCUACGGCGUCAUGGAGGAGAUCCGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[102.69940948 250.83497620]
[86.31439209 250.15429688]
[78.95214844 235.50065613]
[88.18631744 221.94845581]
[88.80892181 206.96138000]
[89.43152618 191.97430420]
[90.05413055 176.98722839]
[90.67673492 162.00015259]
[91.19561768 147.00914001]
[91.61075592 132.01487732]
[92.02588654 117.02062225]
[82.14824677 105.88243866]
[83.46948242 91.05404663]
[74.22183990 79.24383545]
[64.89270020 67.49789429]
[55.48250198 55.81679153]
[45.91154861 44.26703644]
[36.18167114 32.85084152]
[26.45179367 21.43464470]
[16.72191811 10.01844978]
[1.66155267 12.68915081]
[-12.61923504 7.49724340]
[-22.31937981 -4.06880951]
[-24.91050148 -18.83844185]
[-19.79535103 -32.82775116]
[-29.52522659 -44.24394608]
[-39.25510406 -55.66014481]
[-54.09540176 -61.14431000]
[-56.46235275 -75.84963989]
[-66.19223022 -87.26583862]
[-75.92210388 -98.68202972]
[-85.65198517 -110.09822845]
[-95.38185883 -121.51441956]
[-105.11173248 -132.93061829]
[-114.84161377 -144.34681702]
[-124.57148743 -155.76300049]
[-134.30136108 -167.17919922]
[-174.88311768 -182.23957825]
[-187.00614929 -191.07313538]
[-199.12919617 -199.90670776]
[-207.89688110 -202.42687988]
[-211.35774231 -208.94735718]
[-223.35737610 -217.94784546]
[-239.03981018 -220.03875732]
[-244.57867432 -233.86518860]
[-256.57830811 -242.86567688]
[-268.57794189 -251.86616516]
[-280.57757568 -260.86666870]
[-289.30953979 -263.50793457]
[-292.67984009 -270.07568359]
[-304.55377197 -279.24136353]
[-316.42767334 -288.40707397]
[-328.30160522 -297.57275391]
[-336.99618530 -300.33462524]
[-340.27526855 -306.94839478]
[-352.02120972 -316.27752686]
[-363.76715088 -325.60665894]
[-375.51309204 -334.93582153]
[-387.25903320 -344.26495361]
[-398.56716919 -340.64035034]
[-410.10375977 -342.89602661]
[-419.03005981 -350.35928345]
[-423.20654297 -361.09066772]
[-421.70510864 -372.38699341]
[-433.18835449 -382.03762817]
[-444.67163086 -391.68829346]
[-460.21432495 -394.64370728]
[-464.97970581 -408.75540161]
[-476.46295166 -418.40606689]
[-487.94619751 -428.05670166]
[-499.42944336 -437.70733643]
[-511.04516602 -447.19815063]
[-522.79107666 -456.52728271]
[-534.53704834 -465.85644531]
[-546.28295898 -475.18557739]
[-558.02893066 -484.51473999]
[-569.77484131 -493.84387207]
[-581.52081299 -503.17300415]
[-593.26672363 -512.50213623]
[-609.43023682 -517.61853027]
[-608.98834229 -534.56671143]
[-592.58013916 -538.83380127]
[-583.93762207 -524.24810791]
[-572.19165039 -514.91894531]
[-560.44573975 -505.58981323]
[-548.69976807 -496.26065063]
[-536.95385742 -486.93151855]
[-525.20788574 -477.60238647]
[-513.46197510 -468.27322388]
[-501.71603394 -458.94409180]
[-496.96398926 -458.58648682]
[-492.38314819 -455.24740601]
[-489.77880859 -449.19061279]
[-478.29556274 -439.53994751]
[-466.81231689 -429.88931274]
[-455.32907104 -420.23867798]
[-440.60769653 -417.97354126]
[-435.02096558 -403.17153931]
[-423.53771973 -393.52087402]
[-412.05447388 -383.87023926]
[-393.93569946 -386.54010010]
[-379.37680054 -374.90951538]
[-377.92987061 -356.01089478]
[-366.18392944 -346.68176270]
[-354.43798828 -337.35260010]
[-342.69207764 -328.02346802]
[-330.94613647 -318.69433594]
[-319.13592529 -309.44668579]
[-307.26199341 -300.28097534]
[-295.38806152 -291.11529541]
[-283.51412964 -281.94961548]
[-271.57708740 -272.86630249]
[-259.57745361 -263.86578369]
[-247.57781982 -254.86531067]
[-235.57818604 -245.86480713]
[-220.75404358 -244.41767883]
[-214.35688782 -229.94747925]
[-202.35725403 -220.94699097]
[-190.29562378 -212.02973938]
[-178.17259216 -203.19618225]
[-166.04954529 -194.36260986]
[-158.68006897 -195.75573730]
[-165.08399963 -209.32000732]
[-172.55162048 -222.32904053]
[-166.27902222 -235.95454407]
[-151.54002380 -238.74057007]
[-140.72679138 -228.34471130]
[-142.93051147 -213.50790405]
[-143.94111633 -198.54197693]
[-136.57164001 -199.93510437]
[-128.50970459 -212.58442688]
[-130.56123352 -228.49577332]
[-119.29730988 -239.91957092]
[-103.35863495 -238.09248352]
[-94.97200775 -224.41607666]
[-100.57093048 -209.38172913]
[-115.86038208 -204.52250671]
[-123.92230988 -191.87318420]
[-122.88516998 -176.90907288]
[-113.15528870 -165.49288940]
[-103.42541504 -154.07669067]
[-93.69554138 -142.66049194]
[-83.96566010 -131.24429321]
[-74.23578644 -119.82810211]
[-64.50591278 -108.41191101]
[-54.77603531 -96.99571228]
[-45.04615784 -85.57952118]
[-30.90180397 -80.91191101]
[-27.83890724 -65.39002228]
[-18.10903168 -53.97382355]
[-8.37915516 -42.55762863]
[6.24402332 -45.39104462]
[20.41633606 -40.49191284]
[30.29888916 -29.08132172]
[33.16189575 -14.15818596]
[28.13811302 0.28857377]
[37.86798859 11.70476913]
[47.59786606 23.12096405]
[57.32774353 34.53715897]
[61.92201233 35.80304718]
[65.77420044 39.96167374]
[67.16360474 46.40659332]
[76.57379913 58.08769608]
[83.21009827 61.32092667]
[86.03205872 69.99619293]
[95.27969360 81.80640411]
[112.87051392 86.30189514]
[118.45210266 103.57881927]
[130.81497192 112.07348633]
[143.17785645 120.56815338]
[155.54072571 129.06282043]
[167.90359497 137.55749512]
[180.26646423 146.05215454]
[192.62933350 154.54682922]
[204.99221802 163.04148865]
[217.35508728 171.53616333]
[229.71795654 180.03082275]
[249.87229919 180.71325684]
[257.40957642 198.52706909]
[270.00280762 206.67633057]
[282.59603882 214.82559204]
[295.24536133 222.88751221]
[307.95016479 230.86172485]
[320.65496826 238.83592224]
[333.35977173 246.81011963]
[346.06457520 254.78433228]
[358.76937866 262.75854492]
[374.11785889 258.99026489]
[387.59197998 267.25003052]
[391.19775391 282.63748169]
[382.79598999 296.02352905]
[367.37127686 299.46643066]
[354.07482910 290.92358398]
[350.79516602 275.46334839]
[338.09036255 267.48913574]
[325.38555908 259.51492310]
[312.68075562 251.54072571]
[299.97595215 243.56652832]
[287.27114868 235.59233093]
[279.94329834 234.69975281]
[274.44677734 227.41882324]
[261.85354614 219.26956177]
[249.26029968 211.12030029]
[239.51576233 214.14866638]
[229.50074768 211.25860596]
[222.58232117 203.17088318]
[221.22329712 192.39370728]
[208.86041260 183.89903259]
[196.49754333 175.40437317]
[184.13467407 166.90969849]
[171.77180481 158.41503906]
[159.40892029 149.92036438]
[147.04605103 141.42568970]
[134.68318176 132.93103027]
[122.32031250 124.43636322]
[109.95743561 115.94169617]
[108.52159882 116.75322723]
[107.02014160 117.43576050]
[106.60500336 132.43000793]
[106.18987274 147.42427063]
[109.07801056 156.07772827]
[105.66381073 162.62275696]
[105.04120636 177.60983276]
[104.41860199 192.59690857]
[103.79599762 207.58398438]
[103.17339325 222.57104492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 226]
[5 225]
[6 224]
[7 223]
[8 222]
[9 220]
[10 219]
[11 218]
[13 166]
[14 165]
[15 163]
[16 162]
[17 159]
[18 158]
[19 157]
[20 156]
[25 151]
[26 150]
[27 149]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[34 142]
[35 141]
[36 140]
[37 139]
[38 121]
[39 120]
[40 119]
[42 118]
[43 117]
[45 115]
[46 114]
[47 113]
[48 112]
[50 111]
[51 110]
[52 109]
[53 108]
[55 107]
[56 106]
[57 105]
[58 104]
[59 103]
[64 100]
[65 99]
[66 98]
[68 96]
[69 95]
[70 94]
[71 93]
[72 90]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[130 138]
[131 137]
[168 216]
[169 215]
[170 214]
[171 213]
[172 212]
[173 211]
[174 210]
[175 209]
[176 208]
[177 207]
[179 203]
[180 202]
[181 201]
[182 199]
[183 198]
[184 197]
[185 196]
[186 195]
[187 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
