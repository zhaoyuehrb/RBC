%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUUUCUCCCCCAUCAGGAGCAGUUUCAGUCUCAACUUCAAAAGAACAAACGCGCACUCAAAACAAAGGAAGACCGUCCUCGACUGCAGAGGAAGCAGGAAGCUGUCGGCCCAGCUCUGAGCCCAGCUGCUGGAGCCCCGAGCAGCGGCAUGGAGUCCGUGGCCCUGUACAGCUUUCAGGCUACAGAGAGCGACGAGCUGGCCUUCAACAAGGGAGACACACUCAAGAUCCUGAACAUGGAGGAUGACC\
) } def
/len { sequence length } bind def

/coor [
[90.36391449 904.06726074]
[78.91912079 893.90478516]
[73.51882935 879.58367920]
[75.40398407 864.39465332]
[84.14140320 851.82818604]
[97.72328186 844.77191162]
[97.72328186 829.77191162]
[97.72328186 814.77191162]
[97.72328186 799.77191162]
[97.72328186 784.77191162]
[97.72328186 769.77191162]
[84.75595856 762.44293213]
[77.14756012 749.52130127]
[77.02772522 734.42651367]
[84.52877045 721.21173096]
[97.72328186 713.47534180]
[97.72328186 698.47534180]
[97.72328186 683.47534180]
[97.72328186 668.47534180]
[97.72328186 653.47534180]
[97.72328186 638.47534180]
[82.70909119 634.20965576]
[69.49249268 625.87921143]
[59.14852142 614.15179443]
[52.52127838 599.97204590]
[50.15505981 584.48529053]
[52.24964523 568.94476318]
[58.64347076 554.61047363]
[68.82605743 542.64709473]
[81.97874451 534.02899170]
[97.04054260 529.46118164]
[96.85354614 514.46234131]
[96.66654968 499.46347046]
[96.47955322 484.46466064]
[96.29255676 469.46582031]
[87.86314392 460.81304932]
[87.56919098 448.33612061]
[96.11219025 438.69589233]
[96.11219025 423.69589233]
[96.11219025 408.69589233]
[82.52252197 399.46578979]
[77.06670380 383.79406738]
[82.08612061 367.80270386]
[95.78845215 357.86447144]
[95.60145569 342.86566162]
[95.41445923 327.86682129]
[84.60579681 317.68307495]
[84.20249176 302.47479248]
[94.95741272 291.20672607]
[94.77041626 276.20788574]
[82.23675537 264.97640991]
[81.70664215 247.81671143]
[93.99774933 235.35118103]
[93.62378693 220.35583496]
[93.15636444 205.36312866]
[92.59549713 190.37361145]
[92.03462982 175.38410950]
[83.82685089 162.95503235]
[91.04273224 148.87521362]
[90.48186493 133.88569641]
[89.92099762 118.89618683]
[88.69648743 133.84613037]
[79.28337860 145.52487183]
[64.93457794 149.89659119]
[50.60863495 145.45053101]
[41.25620651 133.72312927]
[40.10923386 118.76704407]
[47.56407166 105.75069427]
[61.04454041 99.17217255]
[75.89247894 101.30497742]
[61.40359116 97.42269135]
[45.71189880 102.18744659]
[33.92620087 90.78440094]
[38.17061234 74.94403839]
[54.07884598 70.96157074]
[65.28587341 82.93380737]
[79.77476501 86.81609344]
[86.02944183 73.18161774]
[92.28358459 59.54835892]
[79.89000702 51.09855652]
[67.49642181 42.64875793]
[55.10284042 34.19895554]
[42.70925903 25.74915504]
[27.70615387 30.15833092]
[13.39973831 23.84481430]
[6.54506397 9.78965759]
[10.37869930 -5.37072706]
[23.09051895 -14.47806835]
[38.67839050 -13.23215771]
[49.78219604 -2.22127700]
[51.15906143 13.35557365]
[63.55264282 21.80537415]
[75.94622040 30.25517464]
[88.33980560 38.70497513]
[100.73339081 47.15477753]
[115.01074982 42.55510712]
[120.14105225 28.45971680]
[125.27135468 14.36432743]
[121.66252136 -3.70518136]
[135.56292725 -14.43550491]
[140.51710510 -28.59375381]
[145.47129822 -42.75200653]
[150.42549133 -56.91025543]
[155.37966919 -71.06850433]
[160.33386230 -85.22675323]
[165.28804016 -99.38500214]
[170.24223328 -113.54325104]
[175.19641113 -127.70150757]
[169.97799683 -148.50294495]
[186.25527954 -161.21441650]
[190.67660522 -175.54800415]
[195.09793091 -189.88159180]
[199.51925659 -204.21517944]
[190.03907776 -220.64129639]
[195.50866699 -238.46633911]
[211.99444580 -246.46827698]
[216.05705261 -260.90765381]
[220.11965942 -275.34701538]
[224.18226624 -289.78637695]
[228.24487305 -304.22573853]
[232.30747986 -318.66510010]
[228.59701538 -334.04504395]
[239.49218750 -344.20104980]
[243.55479431 -358.64041138]
[247.61740112 -373.07977295]
[246.36692810 -379.52850342]
[248.25939941 -384.85195923]
[251.96546936 -387.82611084]
[256.38681030 -402.15969849]
[260.80813599 -416.49328613]
[265.22946167 -430.82687378]
[269.65078735 -445.16046143]
[274.07211304 -459.49404907]
[278.40399170 -473.85494995]
[282.64630127 -488.24252319]
[278.27423096 -504.04812622]
[289.96755981 -515.54589844]
[305.69717407 -510.90786743]
[309.28179932 -494.90530396]
[297.03390503 -484.00024414]
[292.79159546 -469.61264038]
[293.91140747 -462.32745361]
[288.40570068 -455.07272339]
[283.98437500 -440.73913574]
[279.56304932 -426.40554810]
[275.14172363 -412.07196045]
[270.72039795 -397.73837280]
[266.29907227 -383.40478516]
[262.05676270 -369.01718140]
[257.99417114 -354.57781982]
[253.93154907 -340.13845825]
[257.93261719 -325.79129028]
[246.74684143 -314.60247803]
[242.68423462 -300.16311646]
[238.62162781 -285.72375488]
[234.55902100 -271.28439331]
[230.49641418 -256.84503174]
[226.43380737 -242.40567017]
[234.02134705 -233.92677307]
[236.61221313 -222.72463989]
[233.45304871 -211.54487610]
[225.21455383 -203.18486023]
[213.85285950 -199.79385376]
[209.43153381 -185.46026611]
[205.01019287 -171.12667847]
[200.58886719 -156.79307556]
[205.93537903 -149.76217651]
[207.48562622 -140.92703247]
[204.77040100 -132.23379517]
[198.27435303 -125.65612030]
[189.35466003 -122.74732208]
[184.40048218 -108.58906555]
[179.44628906 -94.43081665]
[174.49211121 -80.27256775]
[169.53791809 -66.11431885]
[164.58374023 -51.95606995]
[159.62954712 -37.79781723]
[154.67536926 -23.63956833]
[149.72117615 -9.48131847]
[154.68281555 1.53264904]
[150.69168091 13.35767078]
[139.36674500 19.49462891]
[134.23643494 33.59001923]
[129.10614014 47.68540955]
[144.26141357 77.51514435]
[139.12599182 104.83776093]
[122.03025818 119.16941071]
[104.91050720 118.33531952]
[105.47137451 133.32482910]
[106.03224182 148.31434631]
[114.28013611 161.81555176]
[107.02413940 174.82324219]
[107.58500671 189.81274414]
[108.14587402 204.80226135]
[111.58632660 213.23477173]
[108.61912537 219.98187256]
[108.99308014 234.97721863]
[119.74456787 243.06382751]
[123.82416534 255.67933655]
[119.95833588 268.15856934]
[109.76924896 276.02090454]
[109.95624542 291.01971436]
[120.98873901 302.01617432]
[120.96471405 317.22979736]
[110.41329956 327.67980957]
[110.60028839 342.67864990]
[110.78728485 357.67749023]
[122.58844757 364.77047729]
[129.29658508 376.67056274]
[129.25585938 390.22293091]
[122.58367157 401.89468384]
[111.11219025 408.69589233]
[111.11219025 423.69589233]
[111.11219025 438.69589233]
[120.68351746 454.44140625]
[111.29139709 469.27880859]
[111.47838593 484.27764893]
[111.66538239 499.27648926]
[111.85237885 514.27532959]
[112.03937531 529.27416992]
[126.00437927 532.95404053]
[138.52990723 540.11810303]
[148.76484680 550.27233887]
[156.01564026 562.71984863]
[159.79321289 576.60845947]
[159.84599304 590.98944092]
[156.17665100 604.88201904]
[149.04153442 617.34027100]
[138.93264771 627.51776123]
[126.54388428 634.72479248]
[112.72328186 638.47534180]
[112.72328186 653.47534180]
[112.72328186 668.47534180]
[112.72328186 683.47534180]
[112.72328186 698.47534180]
[112.72328186 713.47534180]
[125.91779327 721.21173096]
[133.41883850 734.42651367]
[133.29899597 749.52130127]
[125.69060516 762.44293213]
[112.72328186 769.77191162]
[112.72328186 784.77191162]
[112.72328186 799.77191162]
[112.72328186 814.77191162]
[112.72328186 829.77191162]
[112.72328186 844.77191162]
[126.30516052 851.82818604]
[135.04257202 864.39465332]
[136.92773438 879.58367920]
[131.52745056 893.90478516]
[120.08264923 904.06726074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 246]
[7 245]
[8 244]
[9 243]
[10 242]
[11 241]
[16 236]
[17 235]
[18 234]
[19 233]
[20 232]
[21 231]
[31 220]
[32 219]
[33 218]
[34 217]
[35 216]
[38 214]
[39 213]
[40 212]
[44 207]
[45 206]
[46 205]
[49 202]
[50 201]
[53 197]
[54 196]
[55 194]
[56 193]
[57 192]
[59 190]
[60 189]
[61 188]
[70 77]
[71 76]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[96 184]
[97 183]
[98 182]
[100 179]
[101 178]
[102 177]
[103 176]
[104 175]
[105 174]
[106 173]
[107 172]
[108 171]
[110 166]
[111 165]
[112 164]
[113 163]
[116 158]
[117 157]
[118 156]
[119 155]
[120 154]
[121 153]
[123 151]
[124 150]
[125 149]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
