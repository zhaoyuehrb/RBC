%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUUAUUGCAGAAGUUUCCAAACUGAAGCAAGCUGUGCCCAGGUCCCUGUAACAGCAGGUGGCUUUCUGACAUCAGCAGAGACUGGUGCUUUUUCCCAGGUACAAAGGACCUCCAGACCAGAGCCAGCCAGCAGCAAAAAGAGCAUGGAGCUGAGGAGUACAGCAGCCCCCAGAGCUGAGGGCUACAGCAACGUGGGCUUCCAGAAUGAAGAAAACUUUCUUGAGAACGAGAACACAUCAGGAA\
) } def
/len { sequence length } bind def

/coor [
[216.85101318 351.48474121]
[211.14215088 347.82876587]
[206.54289246 342.80679321]
[203.37332153 336.74499512]
[201.85992432 330.04269409]
[202.11956787 323.14590454]
[204.15054321 316.51782227]
[207.83164978 310.60751343]
[199.54772949 298.10244751]
[191.26382446 285.59738159]
[182.97990417 273.09231567]
[175.48005676 273.04461670]
[175.38442993 288.04431152]
[160.38473511 287.94845581]
[160.48036194 272.94921875]
[152.98051453 272.90151978]
[144.53822327 285.30023193]
[136.09593201 297.69891357]
[127.65363312 310.09762573]
[119.21134186 322.49630737]
[122.40480804 337.97460938]
[113.64846039 351.13140869]
[98.13727570 354.16107178]
[85.07376862 345.26611328]
[82.20829010 329.72375488]
[91.24086761 316.75503540]
[106.81264496 314.05401611]
[115.25493622 301.65533447]
[123.69722748 289.25662231]
[132.13952637 276.85794067]
[140.58181763 264.45922852]
[147.72787476 242.85119629]
[161.42903137 229.35122681]
[176.98991394 225.28126526]
[168.54762268 212.88256836]
[160.10533142 200.48387146]
[151.66304016 188.08517456]
[143.22074890 175.68647766]
[134.77845764 163.28778076]
[126.33616638 150.88908386]
[117.81519318 138.54432678]
[109.21588898 126.25400543]
[89.94577026 130.01399231]
[70.45231628 119.64435577]
[55.67289352 122.20732117]
[40.89347458 124.77027893]
[26.11405563 127.33323669]
[11.35123348 129.99014282]
[-3.39439249 132.74085999]
[-18.14001846 135.49159241]
[-32.88564682 138.24230957]
[-47.63127136 140.99304199]
[-59.73018646 152.06320190]
[-75.28299713 146.86297607]
[-78.29029846 130.74192810]
[-65.65844727 120.28400421]
[-50.38199997 126.24741364]
[-35.63637161 123.49668884]
[-20.89074516 120.74596405]
[-6.14511919 117.99523926]
[8.60050678 115.24450684]
[14.58525276 110.93856812]
[23.55109596 112.55381775]
[38.33051682 109.99085999]
[53.10993576 107.42790222]
[67.88935089 104.86493683]
[69.12804413 89.91617584]
[54.97204590 84.95555878]
[40.81604767 79.99494171]
[26.66004944 75.03432465]
[12.50405216 70.07370758]
[-0.85035402 78.20966339]
[-16.30225945 75.80702972]
[-26.55574608 64.00025177]
[-26.76943207 48.36413193]
[-16.84242058 36.28156281]
[-1.46194398 33.45756531]
[12.10980797 41.22555161]
[17.46466827 55.91770554]
[31.62066650 60.87832260]
[45.77666473 65.83894348]
[59.93266296 70.79956055]
[74.08866119 75.76017761]
[77.57933807 72.90324402]
[81.37270355 70.53659058]
[75.96454620 56.54545593]
[70.55638885 42.55432129]
[65.14822388 28.56318855]
[59.74006653 14.57205486]
[54.15439987 0.65083790]
[48.39212036 -13.19821167]
[42.62984467 -27.04726028]
[36.86756897 -40.89630890]
[31.10529137 -54.74535751]
[16.22004128 -65.60415649]
[19.18839836 -82.91047668]
[13.25044537 -96.68511963]
[-3.12933302 -102.85908508]
[-9.83300018 -118.66265106]
[-3.15601802 -134.10983276]
[-9.26868534 -147.80783081]
[-15.38135147 -161.50584412]
[-21.49401855 -175.20384216]
[-36.57819366 -179.32714844]
[-45.44039536 -192.21105957]
[-43.89615250 -207.77221680]
[-32.67461777 -218.66308594]
[-17.07425499 -219.74134827]
[-4.46107674 -210.49787903]
[-0.79064065 -195.29716492]
[-7.79601479 -181.31651306]
[-1.68334818 -167.61849976]
[4.42931890 -153.92050171]
[10.54198551 -140.22250366]
[23.08889389 -137.35023499]
[31.82650757 -127.63568878]
[33.40426636 -114.46951294]
[27.02508545 -102.62306976]
[32.96303940 -88.84842682]
[44.07223892 -84.09944916]
[49.13876724 -72.69178772]
[44.95433807 -60.50763702]
[50.71661758 -46.65858841]
[56.47889328 -32.80953598]
[62.24116898 -18.96048737]
[68.00344849 -5.11143923]
[71.97761536 -2.50180745]
[74.36748505 2.62149191]
[73.73120117 9.16389656]
[79.13935852 23.15503120]
[84.54751587 37.14616394]
[89.95568085 51.13729858]
[95.36383820 65.12843323]
[110.31260681 66.36711884]
[117.94986725 53.45696259]
[125.58712769 40.54680252]
[133.22439575 27.63664436]
[124.07102966 15.50056744]
[120.26353455 0.78420109]
[122.38253021 -14.26831722]
[130.10488892 -27.36158562]
[142.25299072 -36.49897766]
[156.97434998 -40.28710938]
[172.02407837 -38.14831161]
[185.10717773 -30.40874290]
[194.22857666 -18.24862671]
[197.99734497 -3.52229452]
[195.83874512 11.52459621]
[188.08197021 24.59750366]
[175.90986633 33.70290375]
[161.17858887 37.45228958]
[146.13455200 35.27390671]
[138.49728394 48.18406677]
[130.86003113 61.09422684]
[123.22276306 74.00438690]
[131.24795532 97.58421326]
[121.50621033 117.65470123]
[130.10551453 129.94502258]
[137.57090759 135.16644287]
[138.73486328 142.44679260]
[147.17715454 154.84548950]
[155.61944580 167.24418640]
[164.06173706 179.64288330]
[172.50402832 192.04158020]
[180.94631958 204.44027710]
[189.38862610 216.83897400]
[203.34507751 222.33599854]
[217.97503662 219.02476501]
[232.60499573 215.71353149]
[247.23495483 212.40228271]
[261.86489868 209.09104919]
[273.61663818 198.49824524]
[287.73794556 203.23513794]
[302.36788940 199.92390442]
[314.03570557 188.40026855]
[329.77557373 193.00338745]
[333.39566040 208.99797058]
[321.17196655 219.93017578]
[305.67913818 214.55386353]
[291.04919434 217.86509705]
[280.34387207 228.22105408]
[265.17614746 223.72100830]
[250.54618835 227.03224182]
[235.91622925 230.34349060]
[221.28627014 233.65472412]
[206.65631104 236.96595764]
[203.86347961 243.92657471]
[213.12680054 255.72448730]
[198.27780151 257.84777832]
[195.48497009 264.80838013]
[203.76889038 277.31347656]
[212.05281067 289.81854248]
[220.33671570 302.32360840]
[246.52441406 308.84545898]
[253.48107910 334.36355591]
[266.34240723 342.08276367]
[280.57049561 336.17785645]
[295.37432861 339.74145508]
[305.12585449 351.20321655]
[306.24493408 366.03176880]
[319.10626221 373.75097656]
[331.96759033 381.47018433]
[344.82891846 389.18939209]
[360.09918213 385.11572266]
[373.73535156 393.10513306]
[377.64733887 408.41760254]
[369.51422119 421.96853638]
[354.16125488 425.71841431]
[340.69705200 417.44250488]
[337.10971069 402.05072021]
[324.24838257 394.33151245]
[311.38705444 386.61230469]
[298.52572632 378.89309692]
[284.91342163 384.88003540]
[270.21203613 381.66549683]
[260.10430908 370.27746582]
[258.62319946 354.94409180]
[245.76187134 347.22488403]
[244.91947937 347.95590210]
[244.04637146 348.64996338]
[249.27615356 362.70874023]
[254.50592041 376.76754761]
[259.73568726 390.82632446]
[264.96545410 404.88510132]
[270.19525146 418.94387817]
[275.42501831 433.00268555]
[290.62655640 433.91549683]
[304.13955688 440.93820190]
[313.62286377 452.85400391]
[317.43341064 467.59851074]
[314.91098022 482.61706543]
[306.49261475 495.30764771]
[293.63684082 503.47155762]
[278.57101440 505.69430542]
[263.90536499 501.59078979]
[252.18080139 491.87200928]
[245.42869568 478.22177124]
[244.81887817 463.00509644]
[250.45700073 448.85830688]
[261.36624146 438.23245239]
[256.13644409 424.17367554]
[250.90667725 410.11486816]
[245.67691040 396.05609131]
[240.44712830 381.99731445]
[235.21736145 367.93850708]
[229.98759460 353.87973022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 193]
[9 192]
[10 191]
[11 190]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[34 166]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 158]
[42 157]
[44 66]
[45 65]
[46 64]
[47 63]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[96 119]
[97 118]
[100 114]
[101 113]
[102 112]
[103 111]
[134 155]
[135 154]
[136 153]
[137 152]
[167 186]
[168 185]
[169 184]
[170 183]
[171 182]
[173 180]
[174 179]
[195 218]
[196 217]
[200 213]
[201 212]
[202 211]
[203 210]
[220 246]
[221 245]
[222 244]
[223 243]
[224 242]
[225 241]
[226 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
