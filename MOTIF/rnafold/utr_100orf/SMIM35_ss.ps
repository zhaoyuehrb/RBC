%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCAACAGGGCUCUCUCUCUUGGAUGUCUCAGCCAUGACAGAGACUUCUCACAUCGGAGCAGUGUCAUGGGAUGAUAUUUACUGUGAAUAGGAAGUCCCACGCCCCCCAGGUUAUAACUCCUCUACAGGAUGGCCGGGAGCUUGAAGAUGUUCUCAAUCACACACUCUGGC\
) } def
/len { sequence length } bind def

/coor [
[96.85182190 238.85188293]
[82.91921997 245.31547546]
[67.62287140 243.93081665]
[55.07741547 235.07038879]
[48.65752792 221.11759949]
[50.09011841 205.82565308]
[58.98983002 193.30804443]
[72.96268463 186.93191528]
[74.31497955 171.99299622]
[75.66727448 157.05407715]
[77.01957703 142.11515808]
[78.37187195 127.17624664]
[70.02301788 139.63806152]
[64.48197174 153.57708740]
[52.48468399 162.58071899]
[37.55257416 164.00619507]
[24.06846046 157.43515015]
[15.99015999 144.79627991]
[15.68879223 129.79931641]
[23.25281334 116.84609985]
[36.46205139 109.73864746]
[51.43846893 110.56278229]
[66.25408936 108.21814728]
[52.12808228 103.17276764]
[38.00207138 98.12739563]
[23.87606049 93.08201599]
[9.75005054 88.03663635]
[-4.37595940 82.99125671]
[-18.50196838 77.94587708]
[-32.62797928 72.90049744]
[-43.41589355 81.51161957]
[-56.94409943 83.64196014]
[-69.65361023 78.83956909]
[-78.25433350 68.46222687]
[-80.57669830 55.29563141]
[-94.60931396 49.99604416]
[-108.64193726 44.69645309]
[-122.67455292 39.39686584]
[-136.70716858 34.09727478]
[-150.73979187 28.79768753]
[-164.77239990 23.49809837]
[-178.80502319 18.19850922]
[-189.74664307 26.61345673]
[-203.31111145 28.49920654]
[-215.93183899 23.46814537]
[-224.34381104 12.93721294]
[-226.42808533 -0.26916382]
[-240.36273193 -5.82123613]
[-254.29739380 -11.37330818]
[-268.23202515 -16.92538071]
[-281.91705322 -9.35874176]
[-297.25415039 -12.40964508]
[-307.00158691 -24.63754845]
[-306.55691528 -40.26881027]
[-296.13012695 -51.92282486]
[-280.64440918 -54.09692383]
[-267.41165161 -45.76456451]
[-262.67996216 -30.86003113]
[-248.74531555 -25.30795860]
[-234.81066895 -19.75588608]
[-220.87600708 -14.20381451]
[-207.30187988 -23.40711021]
[-190.75057983 -22.71157265]
[-177.73825073 -12.19323730]
[-173.50543213 4.16589117]
[-159.47280884 9.46547985]
[-145.44020081 14.76506901]
[-131.40757751 20.06465912]
[-117.37496185 25.36424828]
[-103.34234619 30.66383743]
[-89.30973053 35.96342468]
[-75.27710724 41.26301575]
[-61.87134933 31.81614876]
[-45.31018829 32.21275330]
[-32.11008453 42.49444962]
[-27.58260155 58.77449036]
[-13.45659065 63.81987000]
[0.66941917 68.86524963]
[14.79542923 73.91062927]
[28.92143822 78.95600128]
[43.04744720 84.00138092]
[57.17345810 89.04676056]
[71.29946899 94.09214020]
[95.26416779 75.29836273]
[117.54498291 88.45851135]
[132.19429016 85.23395538]
[146.84359741 82.00939941]
[161.49290466 78.78484344]
[176.14221191 75.56028748]
[185.27519226 60.65962601]
[202.02574158 57.02883148]
[215.94953918 66.43321228]
[230.53823853 62.94470215]
[245.12693787 59.45618820]
[259.71563721 55.96767807]
[271.33798218 45.23305893]
[285.51571655 49.79825592]
[300.10443115 46.30974579]
[314.69311523 42.82123184]
[327.74246216 29.85174561]
[344.35507202 35.46168518]
[358.87841797 31.71035385]
[370.30505371 20.76765633]
[384.56289673 25.07614136]
[399.08624268 21.32481194]
[410.51287842 10.38211346]
[424.77072144 14.69059849]
[439.29406738 10.93926907]
[453.81741333 7.18793869]
[458.83609009 2.79849386]
[464.47177124 1.78200233]
[468.93289185 3.57346272]
[483.58218384 0.34890607]
[498.23150635 -2.87565041]
[512.88079834 -6.10020733]
[527.53009033 -9.32476330]
[530.68127441 -12.42541885]
[534.29638672 -14.16533089]
[537.88366699 -14.56732368]
[541.01068115 -13.81377888]
[543.35174561 -12.21283245]
[558.19555664 -14.37192154]
[573.03936768 -16.53101158]
[587.88317871 -18.69010162]
[600.41491699 -29.26776695]
[615.74743652 -23.45000458]
[618.10791016 -7.22163010]
[605.06811523 2.72299695]
[590.04223633 -3.84630370]
[575.19842529 -1.68721390]
[560.35461426 0.47187579]
[545.51086426 2.63096547]
[530.75469971 5.32454443]
[516.10534668 8.54910088]
[501.45605469 11.77365780]
[486.80676270 14.99821472]
[472.15744019 18.22277069]
[457.56872559 21.71128273]
[443.04537964 25.46261215]
[428.52203369 29.21394348]
[418.13421631 39.88832092]
[402.83755493 35.84815598]
[388.31420898 39.59948730]
[377.92639160 50.27386475]
[362.62973022 46.23369980]
[348.10638428 49.98502731]
[341.67910767 60.25834274]
[329.58343506 63.48824692]
[318.18164062 57.40993881]
[303.59292603 60.89844894]
[289.00424194 64.38696289]
[278.42538452 74.87205505]
[263.20416260 70.55638123]
[248.61546326 74.04489136]
[234.02674866 77.53340149]
[219.43804932 81.02191925]
[214.28584290 92.85415649]
[203.08674622 99.65071106]
[189.82362366 98.73174286]
[179.36677551 90.20959473]
[164.71746826 93.43415070]
[150.06816101 96.65870667]
[135.41885376 99.88326263]
[120.76953888 103.10781860]
[118.18804169 115.30065155]
[108.36080170 125.18350220]
[93.31079102 128.52854919]
[91.95848846 143.46746826]
[90.60619354 158.40638733]
[89.25389862 173.34530640]
[87.90160370 188.28422546]
[100.50235748 197.06582642]
[107.00959015 210.97810364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[23 83]
[24 82]
[25 81]
[26 80]
[27 79]
[28 78]
[29 77]
[30 76]
[35 72]
[36 71]
[37 70]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[47 61]
[48 60]
[49 59]
[50 58]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
[92 156]
[93 155]
[94 154]
[95 153]
[97 151]
[98 150]
[99 149]
[101 146]
[102 145]
[104 143]
[105 142]
[107 140]
[108 139]
[109 138]
[112 137]
[113 136]
[114 135]
[115 134]
[116 133]
[121 132]
[122 131]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
