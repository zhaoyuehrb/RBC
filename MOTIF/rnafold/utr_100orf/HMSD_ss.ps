%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGACCCGGUCUCACUUCGCUCCUGGGCAGCUGCGCGGAGAACUGGGGCUCACCGUCAUGGAUGCUCUAUCAGAAGCAAAUGGCACAUUUGCAUUAAACCUUUUGAAAAAGCUAGGGGAAAACAACUCAAACAACUUAUUUUUUUCCCCAUGAGCAUAUCAUCAGCCUUGGCCAUGGUUUUCAUGGGGGCAAAGGGAAACACUGCAGCUCAGAUGUCUCAGGCACUUUGUUUUAGUAAAAUCGGAGGUG\
) } def
/len { sequence length } bind def

/coor [
[96.67730713 166.63204956]
[95.73544312 151.66165161]
[94.79358673 136.69123840]
[93.85173035 121.72084045]
[79.50105286 117.35530090]
[70.38209534 129.26515198]
[61.26314163 141.17501831]
[52.14418793 153.08486938]
[43.02523041 164.99472046]
[33.90627670 176.90458679]
[24.86233521 188.87149048]
[15.89375973 200.89500427]
[6.92518520 212.91850281]
[10.88711929 224.09530640]
[8.99308205 235.68003845]
[1.82555044 244.82463074]
[-8.75108242 249.33737183]
[-20.07428360 248.20758057]
[-29.34217834 260.00189209]
[-38.61007309 271.79623413]
[-36.92251968 287.28137207]
[-46.48949814 299.11047363]
[-61.26262283 300.62387085]
[-70.53051758 312.41821289]
[-72.32130432 328.71926880]
[-87.44068909 335.07034302]
[-100.33515167 324.93798828]
[-97.73996735 308.74548340]
[-82.32484436 303.15029907]
[-73.05694580 291.35598755]
[-75.08031464 276.64401245]
[-65.84936523 264.55087280]
[-50.40439987 262.52832031]
[-41.13650513 250.73400879]
[-31.86861038 238.93968201]
[-35.12517166 220.90699768]
[-23.95406914 205.97966003]
[-5.09831953 203.94993591]
[3.87025499 191.92642212]
[12.83882999 179.90292358]
[14.31511307 172.68070984]
[21.99642181 167.78562927]
[31.11537552 155.87576294]
[40.23432922 143.96591187]
[49.35328674 132.05606079]
[58.47224045 120.14620209]
[67.59119415 108.23634338]
[68.06235504 93.24375153]
[59.70922089 80.78481293]
[51.35608673 68.32587433]
[43.00295258 55.86693192]
[34.64981842 43.40799332]
[20.95944405 37.27825928]
[6.10252333 39.34511185]
[-4.67850447 51.22572708]
[-20.67918396 50.06046677]
[-29.62516212 36.74322128]
[-24.65385056 21.48984146]
[-9.57881451 16.00141335]
[4.03566885 24.48819160]
[18.89258957 22.42133713]
[20.75776482 15.15696239]
[24.48811340 0.62821543]
[26.35328674 -6.63615847]
[14.32978249 -15.60473347]
[2.30627728 -24.57330704]
[-12.44168091 -20.12314987]
[-26.81416321 -25.15158653]
[-35.36862946 -37.53242111]
[-34.99687576 -52.39848328]
[-47.02038193 -61.36705780]
[-59.04388809 -70.33563232]
[-71.06739044 -79.30420685]
[-83.09089661 -88.27278137]
[-95.11440277 -97.24135590]
[-107.57334137 -105.59449005]
[-120.43624115 -113.31108093]
[-133.29913330 -121.02767944]
[-146.16203308 -128.74426270]
[-159.02493286 -136.46086121]
[-171.88783264 -144.17745972]
[-184.75073242 -151.89404297]
[-201.44369507 -154.85742188]
[-203.21719360 -171.71835327]
[-187.50614929 -178.09011841]
[-177.03414917 -164.75694275]
[-164.17124939 -157.04035950]
[-151.30834961 -149.32376099]
[-138.44544983 -141.60716248]
[-125.58254242 -133.89057922]
[-112.71964264 -126.17398071]
[-99.85674286 -118.45738983]
[-104.65901184 -132.66789246]
[-100.28450775 -147.01583862]
[-88.37089539 -156.12988281]
[-73.37820435 -156.59805298]
[-60.91915512 -148.24508667]
[-55.65797424 -134.19801331]
[-59.56425858 -119.71558380]
[-71.17562866 -110.21948242]
[-86.14582825 -109.26486206]
[-74.12232208 -100.29628754]
[-62.09881592 -91.32771301]
[-50.07530975 -82.35913849]
[-38.05180740 -73.39056396]
[-26.02830124 -64.42198944]
[-11.88481522 -69.01543427]
[2.42067361 -64.34456635]
[11.33697224 -52.00143433]
[11.27485180 -36.59681320]
[23.29835701 -27.62823868]
[35.32186127 -18.65966225]
[42.29518509 -21.42059708]
[56.24183273 -26.94246483]
[63.21515656 -29.70339966]
[65.84049988 -44.47186279]
[68.46585083 -59.24032974]
[71.09119415 -74.00879669]
[73.71653748 -88.77725983]
[76.34188843 -103.54572296]
[78.96723175 -118.31418610]
[81.59257507 -133.08265686]
[68.14375305 -139.98341370]
[57.32761383 -150.54289246]
[50.10593033 -163.82214355]
[47.12084961 -178.64041138]
[48.63780212 -193.68002319]
[54.52189636 -207.60371399]
[64.24993134 -219.17335510]
[76.95689392 -227.36021423]
[91.51288605 -231.43629456]
[106.62359619 -231.03918457]
[120.94540405 -226.20416260]
[133.20480347 -217.36119080]
[142.31172180 -205.29653931]
[147.45635986 -191.08302307]
[148.18125916 -175.98448181]
[144.42198181 -161.34347534]
[136.51277161 -148.46186829]
[125.15692902 -138.48507690]
[111.36421204 -132.30024719]
[96.36104584 -130.45730591]
[93.73569489 -115.68884277]
[91.11035156 -100.92037964]
[88.48500824 -86.15191650]
[85.85965729 -71.38344574]
[83.23431396 -56.61498260]
[80.60897064 -41.84651947]
[77.98361969 -27.07805443]
[74.87181854 18.57351494]
[47.10875702 35.05485916]
[55.46189117 47.51379776]
[63.81502533 59.97273636]
[72.16815948 72.43167877]
[80.52129364 84.89061737]
[72.93218231 71.95208740]
[70.61495972 57.13215256]
[73.89231110 42.49456787]
[82.30784607 30.07769203]
[94.68965149 21.61064911]
[109.31349945 18.27252007]
[124.14293671 20.52815819]
[137.11286926 28.06345558]
[146.41717529 39.82907867]
[150.75996399 54.18448639]
[165.28871155 50.45413971]
[179.81745911 46.72378922]
[194.34620667 42.99344254]
[198.04022217 39.37712860]
[202.32135010 37.69089127]
[206.36242676 37.83737564]
[209.49291992 39.40732574]
[224.15194702 36.22721863]
[238.81095886 33.04711151]
[253.46998596 29.86700630]
[268.12899780 26.68689919]
[277.98446655 14.02793884]
[294.02746582 13.98460674]
[303.95117188 26.59014511]
[300.14297485 42.17466354]
[285.52420044 48.78305054]
[271.30911255 41.34592056]
[256.65008545 44.52602768]
[241.99107361 47.70613480]
[227.33204651 50.88624191]
[212.67301941 54.06634903]
[198.07655334 57.52219009]
[183.54780579 61.25253677]
[169.01905823 64.98288727]
[154.49031067 68.71323395]
[152.53399658 75.95359802]
[167.07260132 79.64536285]
[181.61119080 83.33712769]
[196.19416809 79.82474518]
[206.65379333 90.57631683]
[202.74136353 105.05709839]
[188.29042053 109.07832336]
[177.46035767 98.69947052]
[163.04086304 94.56689453]
[148.62136841 90.43431854]
[146.66505432 97.67468262]
[157.33808899 108.21443176]
[168.01112366 118.75418091]
[178.68415833 129.29393005]
[193.94009399 133.48526001]
[197.55938721 147.93344116]
[208.23242188 158.47319031]
[218.90545654 169.01293945]
[234.48213196 169.08377075]
[245.15596008 179.92460632]
[244.99244690 194.77415466]
[255.66548157 205.31390381]
[263.94802856 209.10388184]
[266.40536499 216.05378723]
[276.94512939 226.72682190]
[287.48486328 237.39985657]
[298.02462769 248.07289124]
[313.45617676 255.09454346]
[310.98080444 271.86682129]
[294.17877197 274.13122559]
[287.35159302 258.61264038]
[276.81182861 247.93960571]
[266.27209473 237.26657104]
[255.73233032 226.59353638]
[245.12573242 215.98693848]
[234.45269775 205.44718933]
[219.60638428 205.79728699]
[208.63226318 195.26052856]
[208.36570740 179.68597412]
[197.69267273 169.14622498]
[187.01963806 158.60647583]
[172.52711487 155.16902161]
[168.14440918 139.96696472]
[157.47137451 129.42721558]
[146.79833984 118.88746643]
[136.12530518 108.34771729]
[129.29951477 111.45553589]
[135.51493835 125.10722351]
[121.86315918 131.32243347]
[115.64792633 117.67116547]
[108.82212830 120.77898407]
[109.76399231 135.74938965]
[110.70584869 150.71978760]
[111.64770508 165.69018555]
[123.66693115 175.95243835]
[124.82599640 191.71415710]
[114.43724823 203.62422180]
[98.66414642 204.61657715]
[86.86459351 194.10249329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 244]
[2 243]
[3 242]
[4 241]
[5 47]
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 40]
[12 39]
[13 38]
[18 35]
[19 34]
[20 33]
[23 30]
[24 29]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 61]
[54 60]
[64 112]
[65 111]
[66 110]
[70 106]
[71 105]
[72 104]
[73 103]
[74 102]
[75 101]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[115 149]
[116 148]
[117 147]
[118 146]
[119 145]
[120 144]
[121 143]
[122 142]
[165 190]
[166 189]
[167 188]
[168 187]
[172 186]
[173 185]
[174 184]
[175 183]
[176 182]
[201 236]
[202 235]
[203 234]
[204 233]
[206 231]
[207 230]
[208 229]
[211 226]
[212 225]
[214 224]
[215 223]
[216 222]
[217 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
