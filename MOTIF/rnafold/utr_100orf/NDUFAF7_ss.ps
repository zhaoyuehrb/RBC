%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGGGGCGUGUCUUCUCCCGGAAAUGGUCUAAGCCCCAGCUCCUGGCGGAGCGAGCUAGCCUGCGAAUUUCAGCAUGAGUGUACUGCUGAGGUCAGGUUUGGGGCCGUUGUGUGCCGUGGCGCGCGCAGCCAUUCCUUUUAUUUGGAGAGGGAAAUACUUCAGCUCCGGGAAUG\
) } def
/len { sequence length } bind def

/coor [
[91.58902740 325.90408325]
[77.03379059 329.52972412]
[63.48802948 323.08673096]
[57.11631775 309.50686646]
[51.87435532 323.56109619]
[46.63239288 337.61535645]
[41.39042664 351.66958618]
[46.72019958 366.80145264]
[38.09087753 380.32604980]
[22.12214279 381.86843872]
[11.06383801 370.24548340]
[13.39895153 354.37326050]
[27.33618355 346.42764282]
[32.57814407 332.37338257]
[37.82010651 318.31915283]
[43.06206894 304.26489258]
[47.41633987 289.91079712]
[50.86592865 275.31283569]
[54.31551743 260.71487427]
[57.76510620 246.11692810]
[61.21469116 231.51896667]
[64.66428375 216.92100525]
[68.11386871 202.32305908]
[60.09205627 189.82560730]
[63.38247681 174.97206116]
[76.54533386 166.64279175]
[79.99492645 152.04483032]
[83.44451141 137.44686890]
[72.61428070 130.43640137]
[64.50310516 120.40398407]
[59.91632080 108.34571075]
[59.30933762 95.45881653]
[62.74242401 83.02279663]
[69.87471771 72.27239990]
[60.88555527 60.26428223]
[51.89638901 48.25616455]
[42.90722275 36.24804688]
[33.91806030 24.23992729]
[24.92889404 12.23180866]
[15.93972874 0.22369035]
[3.28747487 -2.38957047]
[-3.94996524 -12.60334206]
[-2.32809925 -24.61112213]
[-11.10149956 -36.77777481]
[-19.87489891 -48.94442749]
[-28.64829826 -61.11108398]
[-40.24345779 -70.62698364]
[-53.88793564 -76.85820770]
[-67.53241730 -83.08943176]
[-81.17689514 -89.32065582]
[-90.31578827 -90.04499817]
[-95.00776672 -95.78680420]
[-108.53884888 -102.26057434]
[-123.35764313 -96.76703644]
[-137.68557739 -103.43681335]
[-143.02214050 -118.31285858]
[-136.20124817 -132.56947327]
[-121.26960754 -137.74845886]
[-107.08590698 -130.77722168]
[-102.06507874 -115.79166412]
[-88.53399658 -109.31788635]
[-74.94567108 -102.96513367]
[-61.30118942 -96.73390961]
[-47.65671158 -90.50268555]
[-34.01222992 -84.27146149]
[-28.25734711 -89.08096313]
[-16.74757957 -98.69996643]
[-10.99269676 -103.50947571]
[-14.70229435 -118.04353333]
[-18.41189194 -132.57759094]
[-22.12148857 -147.11164856]
[-25.83108711 -161.64570618]
[-29.54068375 -176.17976379]
[-33.25028229 -190.71383667]
[-36.95988083 -205.24789429]
[-40.66947556 -219.78195190]
[-55.33950806 -224.55622864]
[-65.08184052 -236.51826477]
[-66.78774261 -251.85102844]
[-59.91285706 -265.66186523]
[-46.65093613 -273.54382324]
[-31.23381615 -272.98175049]
[-18.58103943 -264.15505981]
[-12.73006153 -249.88026428]
[-15.54790974 -234.71243286]
[-26.13541794 -223.49154663]
[-22.42581940 -208.95748901]
[-18.71622276 -194.42343140]
[-15.00662518 -179.88937378]
[-11.29702759 -165.35530090]
[-7.58743000 -150.82124329]
[-3.87783241 -136.28718567]
[-0.16823485 -121.75312805]
[3.54136276 -107.21907043]
[-16.48164558 -69.88448334]
[-7.70824575 -57.71783066]
[1.06515408 -45.55117416]
[9.83855438 -33.38452148]
[26.20185471 -27.08165550]
[27.94784737 -8.76547432]
[36.93701172 3.24264407]
[45.92617798 15.25076294]
[54.91534042 27.25888062]
[63.90450668 39.26699829]
[72.89366913 51.27511978]
[81.88283539 63.28323746]
[109.77107239 60.23973846]
[133.07197571 75.86295319]
[146.60305786 69.38918304]
[160.13414001 62.91540909]
[173.66522217 56.44163513]
[187.19630432 49.96786118]
[200.72740173 43.49408722]
[214.25848389 37.02031708]
[227.78956604 30.54654312]
[241.32064819 24.07276917]
[246.34147644 9.08721638]
[260.52517700 2.11597610]
[275.45681763 7.29496193]
[282.27770996 21.55157471]
[276.94113159 36.42761612]
[262.61322021 43.09739685]
[247.79441833 37.60385513]
[234.26333618 44.07762909]
[220.73225403 50.55139923]
[207.20117188 57.02517319]
[193.67008972 63.49894714]
[180.13899231 69.97271729]
[166.60791016 76.44649506]
[153.07682800 82.92026520]
[139.54574585 89.39403534]
[140.76522827 96.18582153]
[140.82681274 103.08595276]
[139.72874451 109.89842224]
[153.37322998 116.12964630]
[167.01771545 122.36087036]
[180.66218567 128.59210205]
[194.30667114 134.82331848]
[207.95115662 141.05455017]
[221.59562683 147.28576660]
[235.24011230 153.51699829]
[250.71363831 149.28030396]
[263.58813477 158.85246277]
[263.98742676 174.89054871]
[251.60517883 185.09150696]
[235.94000244 181.63003540]
[229.00888062 167.16146851]
[215.36441040 160.93025208]
[201.71992493 154.69902039]
[188.07543945 148.46780396]
[174.43096924 142.23657227]
[160.78648376 136.00535583]
[147.14199829 129.77412415]
[133.49752808 123.54290009]
[129.78034973 128.09773254]
[125.44915771 132.07324219]
[120.59323883 135.38743591]
[115.31271362 137.97200012]
[109.71646881 139.77363586]
[103.91987610 140.75520325]
[98.04247284 140.89645386]
[94.59288025 155.49441528]
[91.14329529 170.09237671]
[99.18553162 183.43254089]
[95.47920227 198.18780518]
[82.71182251 205.77264404]
[79.26223755 220.37059021]
[75.81265259 234.96855164]
[72.36306000 249.56651306]
[68.91347504 264.16445923]
[65.46388245 278.76242065]
[62.01429749 293.36038208]
[74.85636139 285.60916138]
[89.69882965 287.77734375]
[99.78696442 298.87823486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 16]
[5 15]
[6 14]
[7 13]
[17 172]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[26 163]
[27 162]
[28 161]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 100]
[43 98]
[44 97]
[45 96]
[46 95]
[47 65]
[48 64]
[49 63]
[50 62]
[52 61]
[53 60]
[68 94]
[69 93]
[70 92]
[71 91]
[72 90]
[73 89]
[74 88]
[75 87]
[76 86]
[108 131]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[134 154]
[135 153]
[136 152]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
