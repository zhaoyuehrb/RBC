%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGUGGGGAGUGUUGUUAACCGGAGGGGCAGCCGCAGUCGCGCGGAUUGAGCGGGCUCGCGGCGCUGGGUUCCUGGUCUCCGGGCCAGGGCAAUGUUCCGCACGGCAGUGAUGAUGGCGGCCAGCCUGGCGCUGACCGGGGCUGUGGUGGCUCACGCCUACUACCUCAAACACCAGUUCUACCCCACUGUGG\
) } def
/len { sequence length } bind def

/coor [
[108.74052429 363.25576782]
[120.91668701 353.78240967]
[119.46897888 338.85244751]
[118.02126312 323.92245483]
[116.57355499 308.99249268]
[115.12584686 294.06253052]
[113.67813873 279.13253784]
[112.23043060 264.20257568]
[110.78272247 249.27259827]
[109.33501434 234.34262085]
[96.96903229 219.48760986]
[105.56121826 201.26164246]
[103.63327789 186.38606262]
[101.70533752 171.51048279]
[99.77739716 156.63488770]
[97.84945679 141.75930786]
[81.79340363 137.64285278]
[68.59820557 127.61144257]
[60.33728790 113.24135590]
[58.30870438 96.79061127]
[62.83121490 80.84416962]
[73.19418335 67.90774536]
[65.79907227 54.85737610]
[58.40395355 41.80699921]
[51.00883865 28.75662613]
[34.92662048 19.80024338]
[35.73709488 2.27566385]
[28.13269806 -10.65388107]
[14.46724701 -18.62671089]
[14.68434906 -33.51973343]
[7.07995129 -46.44927979]
[-15.51268482 -49.95868683]
[-26.92433929 -72.46598816]
[-41.92385101 -72.58681488]
[-56.92336655 -72.70764160]
[-71.92288208 -72.82847595]
[-86.92239380 -72.94930267]
[-101.92239380 -72.94930267]
[-116.92190552 -72.82847595]
[-131.92141724 -72.70764160]
[-146.92092896 -72.58681488]
[-155.49037170 -69.38491058]
[-162.16259766 -72.58681488]
[-177.16210938 -72.70764160]
[-192.16162109 -72.82847595]
[-202.17109680 -60.81412888]
[-217.57054138 -58.09547043]
[-231.08880615 -65.95616150]
[-236.34298706 -80.68462372]
[-230.85220337 -95.32653046]
[-217.20906067 -102.96841431]
[-201.85540771 -100.00202179]
[-192.04078674 -87.82798767]
[-177.04127502 -87.70715332]
[-162.04176331 -87.58632660]
[-147.04176331 -87.58632660]
[-132.04225159 -87.70715332]
[-117.04273224 -87.82798767]
[-102.04322052 -87.94881439]
[-95.37100983 -91.15071869]
[-86.80156708 -87.94881439]
[-71.80204773 -87.82798767]
[-56.80253601 -87.70715332]
[-41.80302429 -87.58632660]
[-26.80351067 -87.46549988]
[-16.32584000 -98.19948578]
[-16.80907822 -113.19169617]
[-17.29231644 -128.18391418]
[-17.77555466 -143.17613220]
[-18.25879288 -158.16833496]
[-30.26258850 -155.01992798]
[-44.57209778 -159.33930969]
[-57.14239120 -171.97369385]
[-64.11323547 -185.25553894]
[-71.08408356 -198.53736877]
[-78.05493164 -211.81921387]
[-85.02577972 -225.10105896]
[-91.99662781 -238.38288879]
[-98.96747589 -251.66473389]
[-105.93832397 -264.94656372]
[-120.08036804 -273.24926758]
[-119.69049072 -289.64376831]
[-105.16976166 -297.26483154]
[-91.45587158 -288.27255249]
[-92.65647888 -271.91741943]
[-85.68563843 -258.63558960]
[-78.71479034 -245.35374451]
[-71.74394226 -232.07189941]
[-64.77309418 -218.79006958]
[-57.80224609 -205.50822449]
[-50.83139801 -192.22637939]
[-43.86054993 -178.94453430]
[-36.36273956 -179.12576294]
[-36.72519684 -194.12138367]
[-41.70363617 -208.27113342]
[-29.78474426 -217.37826538]
[-17.44030571 -208.85684204]
[-21.72957420 -194.48384094]
[-21.36711884 -179.48822021]
[-13.86930847 -179.66944885]
[-7.54829216 -193.27256775]
[-1.22727561 -206.87568665]
[5.09374094 -220.47880554]
[5.87463903 -229.59350586]
[11.62772655 -234.24888611]
[18.16707039 -247.74839783]
[17.22001839 -263.54122925]
[29.73187256 -271.62225342]
[36.27121735 -285.12176514]
[34.54433060 -301.42974854]
[47.96141052 -310.85916138]
[62.72011948 -303.70983887]
[63.63795853 -287.33639526]
[49.77073288 -278.58242798]
[43.23139191 -265.08291626]
[44.64617920 -250.25564575]
[31.66658783 -241.20906067]
[25.12724495 -227.70953369]
[18.69685555 -214.15777588]
[12.37584019 -200.55467224]
[6.05482340 -186.95155334]
[-0.26619345 -173.34843445]
[-3.26657891 -158.65158081]
[-2.78334045 -143.65936279]
[-2.30010223 -128.66714478]
[-1.81686389 -113.67493439]
[-1.33362556 -98.68272400]
[15.02173710 -94.36227417]
[25.50563049 -82.09448242]
[27.06032944 -66.81505585]
[20.00949669 -54.05367661]
[27.61389351 -41.12413025]
[40.73542786 -34.07611084]
[41.06224442 -18.25827980]
[48.66664124 -5.32873392]
[60.30059433 -1.98507357]
[66.73932648 8.73594189]
[64.05921173 21.36151123]
[71.45433044 34.41188431]
[78.84944153 47.46225739]
[86.24456024 60.51263428]
[103.03974152 58.29599380]
[119.33597565 62.92461395]
[132.45841980 73.63876343]
[140.25317383 88.67981720]
[141.44079590 105.57896423]
[155.70664978 110.21421814]
[169.97248840 114.84947205]
[184.23834229 119.48472595]
[198.50418091 124.11997986]
[212.80691528 128.64016724]
[227.14558411 133.04499817]
[241.48425293 137.44982910]
[257.33831787 133.25689697]
[268.70300293 145.07957458]
[263.88729858 160.75570679]
[247.84519958 164.15902710]
[237.07942200 151.78849792]
[222.74075317 147.38366699]
[208.40208435 142.97883606]
[201.07514954 144.02125549]
[193.86892700 138.38583374]
[179.60308838 133.75057983]
[165.33723450 129.11532593]
[151.07138062 124.48006439]
[136.80554199 119.84481049]
[133.34069824 125.23612213]
[129.09269714 130.03463745]
[124.16130066 134.12763977]
[118.66236115 137.41899109]
[112.72504425 139.83135986]
[114.65298462 154.70695496]
[116.58092499 169.58253479]
[118.50886536 184.45811462]
[120.43680573 199.33370972]
[129.43515015 205.47409058]
[133.47842407 215.35270691]
[131.45242310 225.60882568]
[124.26499176 232.89491272]
[125.71269989 247.82489014]
[127.16040802 262.75485229]
[128.60810852 277.68484497]
[130.05581665 292.61480713]
[131.50352478 307.54476929]
[132.95124817 322.47476196]
[134.39895630 337.40472412]
[135.84666443 352.33471680]
[149.61605835 359.29220581]
[157.41841125 372.60113525]
[156.76397705 388.01458740]
[147.86161804 400.61425781]
[133.55203247 406.37960815]
[118.40135193 403.47091675]
[107.24411011 392.81637573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 187]
[3 186]
[4 185]
[5 184]
[6 183]
[7 182]
[8 181]
[9 180]
[10 179]
[12 175]
[13 174]
[14 173]
[15 172]
[16 171]
[22 141]
[23 140]
[24 139]
[25 138]
[27 135]
[28 134]
[30 132]
[31 131]
[33 65]
[34 64]
[35 63]
[36 62]
[37 61]
[38 59]
[39 58]
[40 57]
[41 56]
[43 55]
[44 54]
[45 53]
[66 127]
[67 126]
[68 125]
[69 124]
[70 123]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[100 122]
[101 121]
[102 120]
[103 119]
[105 118]
[106 117]
[108 115]
[109 114]
[146 166]
[147 165]
[148 164]
[149 163]
[150 162]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
