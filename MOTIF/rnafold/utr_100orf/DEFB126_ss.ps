%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGACAAUAAAGAUCUGUGUUCAGAGUCAUACUGAAUAGAGACUUCUGGACUCUAUAGAACCCACUGCCUCCUGAUGAAGUCCCUACUGUUCACCCUUGCAGUUUUUAUGCUCCUGGCCCAAUUGGUCUCAGGUAAUUGGUAUGUGAAAAAGUGUCUAAACGACGUUGGAAUUU\
) } def
/len { sequence length } bind def

/coor [
[100.45341492 241.14494324]
[107.73619843 227.92134094]
[118.31742096 217.15379333]
[131.41189575 209.64129639]
[127.72281647 195.10202026]
[124.03374481 180.56272888]
[120.34466553 166.02345276]
[116.65559387 151.48417664]
[101.12262726 150.09442139]
[87.78872681 144.45613098]
[77.68973541 135.70062256]
[71.40513611 125.16950226]
[58.41475677 132.66950989]
[45.42437744 140.16950989]
[39.53408432 147.19287109]
[32.13621140 147.68499756]
[19.01476479 154.95326233]
[5.89331865 162.22151184]
[-2.42944694 175.67671204]
[-17.31191063 175.07540894]
[-30.43335724 182.34367371]
[-43.55480194 189.61193848]
[-56.67625046 196.88020325]
[-69.79769897 204.14846802]
[-82.91914368 211.41673279]
[-96.04058838 218.68499756]
[-98.85112000 234.06793213]
[-110.92500305 244.00550842]
[-126.56130219 243.80551147]
[-138.37704468 233.56236267]
[-140.79319763 218.11256409]
[-132.66893005 204.75103760]
[-117.84026337 199.78669739]
[-103.30885315 205.56355286]
[-90.18740082 198.29528809]
[-77.06595612 191.02702332]
[-63.94451141 183.75875854]
[-50.82306671 176.49049377]
[-37.70161819 169.22222900]
[-24.58017349 161.95396423]
[-17.19594193 149.01864624]
[-1.37494433 149.10006714]
[11.74650192 141.83180237]
[24.86794853 134.56355286]
[37.92437744 127.17912292]
[50.91475677 119.67912292]
[63.90513992 112.17912292]
[62.49099731 93.34831238]
[70.29402924 76.15203094]
[85.39677429 64.81597137]
[82.48674011 50.10095215]
[79.57670593 35.38593674]
[70.17253113 29.84268761]
[65.48397827 20.22866821]
[66.84952545 9.84166145]
[73.57543182 2.09850788]
[71.18948364 -12.71051693]
[68.80352783 -27.51954269]
[66.41757202 -42.32856750]
[64.03162384 -57.13759232]
[61.64567184 -71.94661713]
[59.25971985 -86.75564575]
[55.92057800 -90.84877014]
[54.63567352 -95.36325073]
[55.21789169 -99.43818665]
[57.16283798 -102.41448975]
[55.56843567 -117.32950592]
[53.97403336 -132.24453735]
[52.37963104 -147.15954590]
[50.78522873 -162.07456970]
[35.61161804 -168.60633850]
[25.85095978 -181.81777954]
[24.08580208 -198.05429077]
[30.70298576 -212.88327026]
[43.81386566 -222.30415344]
[41.95499802 -237.18853760]
[40.09613419 -252.07290649]
[28.56977844 -259.07733154]
[23.26875305 -271.26754761]
[25.92703438 -284.09310913]
[35.35197067 -292.90603638]
[33.75756836 -307.82104492]
[32.16316605 -322.73608398]
[22.06853676 -335.66009521]
[28.46378326 -350.76086426]
[44.77002716 -352.50399780]
[54.21279907 -339.09628296]
[47.07818985 -324.33047485]
[48.67259216 -309.41546631]
[50.26699448 -294.50042725]
[63.78913879 -284.52462769]
[65.97042847 -267.52288818]
[54.98051071 -253.93177795]
[56.83937454 -239.04739380]
[58.69823837 -224.16302490]
[71.61814880 -219.68544006]
[81.39062500 -210.02693176]
[86.06427002 -197.03579712]
[84.67131042 -183.23342896]
[77.42733002 -171.32493591]
[65.70024872 -163.66897583]
[67.29465485 -148.75395203]
[68.88905334 -133.83892822]
[70.48345947 -118.92391205]
[72.07785797 -104.00888824]
[74.06874084 -89.14159393]
[76.45469666 -74.33257294]
[78.84064484 -59.52354431]
[81.22660065 -44.71451950]
[83.61255646 -29.90549469]
[85.99850464 -15.09646988]
[88.38446045 -0.28744447]
[101.66894531 13.73785305]
[94.29172516 32.47590256]
[97.20175934 47.19092178]
[100.11179352 61.90593719]
[127.01335907 62.64037704]
[151.33605957 82.89336395]
[165.61827087 78.30877686]
[179.90048218 73.72418976]
[194.18269348 69.13961029]
[202.76609802 55.58583450]
[218.72952271 53.98927689]
[229.82717896 65.57467651]
[227.54591370 81.45470428]
[213.63571167 89.44757080]
[198.76728821 83.42182159]
[184.48507690 88.00640869]
[170.20286560 92.59098816]
[155.92065430 97.17557526]
[156.31996155 112.17025757]
[170.82592773 115.98821259]
[185.33189392 119.80617523]
[200.64694214 115.83626556]
[210.98565674 126.55821228]
[225.49162292 130.37617493]
[239.99760437 134.19412231]
[254.52424622 127.38558960]
[268.84011841 134.62678528]
[271.96331787 150.36289978]
[261.49798584 162.52252197]
[245.47224426 161.77783203]
[236.17964172 148.70010376]
[221.67367554 144.88214111]
[207.16769409 141.06417847]
[192.89022827 145.30717468]
[181.51394653 134.31214905]
[167.00796509 130.49418640]
[152.50199890 126.67623138]
[147.17521667 131.95594788]
[160.50988770 138.82521057]
[158.09727478 153.62991333]
[143.27160645 155.91011047]
[136.52165222 142.51538086]
[131.19487000 147.79508972]
[134.88395691 162.33438110]
[138.57302856 176.87365723]
[142.26210022 191.41294861]
[145.95117188 205.95222473]
[161.04330444 206.31288147]
[175.47813416 210.73307800]
[188.18450928 218.88479614]
[198.21952820 230.16314697]
[204.83853149 243.73117065]
[207.55032349 258.58206177]
[206.15370178 273.61376953]
[200.75228882 287.71081543]
[191.74690247 299.82714844]
[179.80580139 309.06365967]
[165.81509399 314.73489380]
[150.81300354 316.42004395]
[135.91276550 313.99404907]
[122.22008514 307.63690186]
[110.75103760 297.82040405]
[102.35671997 285.27297974]
[97.66003418 270.92572021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 159]
[5 158]
[6 157]
[7 156]
[8 155]
[12 47]
[13 46]
[14 45]
[16 44]
[17 43]
[18 42]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[50 116]
[51 115]
[52 114]
[56 112]
[57 111]
[58 110]
[59 109]
[60 108]
[61 107]
[62 106]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[75 95]
[76 94]
[77 93]
[81 90]
[82 89]
[83 88]
[118 130]
[119 129]
[120 128]
[121 127]
[131 149]
[132 148]
[133 147]
[135 145]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
