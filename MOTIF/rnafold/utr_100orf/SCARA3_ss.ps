%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGUCCCGGCCGGAGCCCCACGGCCGCGGGCGGCGCCUAGGACGGCGAUCCGCGCCCUGGAGGAUCCGCCGGCCGCCCGGCUCCACUACAGCUCCAGCCGCCUGCAGCGGGGCCCUCCUGAGGCCCCAGAGGAAGAGACCAUGAAAGUGAGGUCGGCCGGCGGCGAUGGAGAUGCCUUGUGCGUUACAGAAGAGGACCUGGCGGGUGACGACGAGGACAUGCCGACCUUCCCAUGCACCC\
) } def
/len { sequence length } bind def

/coor [
[53.61812592 340.76660156]
[42.06438828 350.33276367]
[27.35491371 347.39483643]
[20.36229706 334.12414551]
[13.60454178 347.51565552]
[6.84678650 360.90716553]
[0.08903125 374.29870605]
[-6.58165932 387.73379517]
[-13.16500378 401.21191406]
[-19.74834824 414.69003296]
[-26.33169365 428.16815186]
[-32.91503906 441.64624023]
[-39.49838257 455.12435913]
[-32.10279846 468.76565552]
[-34.17116928 484.14425659]
[-44.90816498 495.34680176]
[-60.18518829 498.06564331]
[-74.12791443 491.25537109]
[-81.37508392 477.53463745]
[-79.14000702 462.17938232]
[-68.28211975 451.09399414]
[-52.97649765 448.54101562]
[-46.39315414 435.06289673]
[-39.80980682 421.58480835]
[-33.22646332 408.10668945]
[-26.64311790 394.62857056]
[-20.05977440 381.15045166]
[-19.94845390 373.77633667]
[-13.30248642 367.54095459]
[-6.54473114 354.14941406]
[0.21302383 340.75790405]
[6.97077894 327.36639404]
[13.29043674 313.76263428]
[19.16534233 299.96099854]
[17.03094482 285.22012329]
[29.55508995 275.55282593]
[35.42999649 261.75119019]
[26.24816132 243.47048950]
[33.69239807 224.09945679]
[53.30363464 216.45805359]
[58.45426178 202.37007141]
[63.60489273 188.28210449]
[60.70826340 173.67187500]
[72.71376038 163.36756897]
[77.86438751 149.27958679]
[83.01501465 135.19161987]
[88.16564178 121.10364532]
[79.09872437 109.15412140]
[64.14420319 110.32130432]
[49.18968201 111.48848724]
[34.23516083 112.65566254]
[19.28064156 113.82284546]
[12.73196030 127.71566010]
[0.10508501 136.45967102]
[-15.20341873 137.70275879]
[-29.07563972 131.11056519]
[-37.78002167 118.45634460]
[-38.97512817 103.14402008]
[-32.33948135 89.29252625]
[-19.65803719 80.62785339]
[-4.34204102 79.48075104]
[9.48858070 86.15978241]
[18.11346245 98.86832428]
[33.06798172 97.70114136]
[48.02250290 96.53396606]
[62.97702408 95.36678314]
[77.93154144 94.19960022]
[80.25892639 79.38058472]
[82.58610535 64.56288910]
[68.70935822 58.86764145]
[54.83261108 53.17239380]
[40.95586014 47.47714996]
[27.07911110 41.78190613]
[10.90850735 44.51020813]
[0.67040288 31.69953918]
[6.89688063 16.52841568]
[23.18267441 14.60358810]
[32.77435684 27.90515518]
[46.65110397 33.60039902]
[60.52785492 39.29564667]
[74.40460205 44.99089050]
[88.28135681 50.68613815]
[95.06257629 47.48222351]
[85.61502838 35.83130646]
[72.36570740 28.79885101]
[67.28694153 14.68480968]
[73.01759338 0.82264435]
[86.58009338 -5.58505630]
[100.92755127 -1.20893919]
[108.60523224 11.67722511]
[105.62411499 26.37764359]
[108.62501526 41.07439804]
[115.40623474 37.87048721]
[119.81870270 23.53416443]
[124.23116302 9.19784164]
[128.64363098 -5.13848066]
[133.05609131 -19.47480392]
[137.28208923 -33.86719894]
[141.32089233 -48.31324005]
[145.35968018 -62.75928116]
[149.39848328 -77.20532227]
[153.43728638 -91.65135956]
[157.47607422 -106.09740448]
[153.74026489 -121.47122192]
[164.61868286 -131.64517212]
[168.65747070 -146.09121704]
[158.49568176 -152.66304016]
[152.10942078 -164.69938660]
[152.33499146 -179.85768127]
[160.53263855 -194.40927124]
[159.75408936 -209.38905334]
[158.97552490 -224.36883545]
[158.19697571 -239.34861755]
[157.41841125 -254.32839966]
[156.63986206 -269.30816650]
[144.04708862 -278.57943726]
[140.41017151 -293.78820801]
[147.44635010 -307.75338745]
[161.83335876 -313.88104248]
[176.77809143 -309.27786255]
[185.22409058 -296.11737061]
[183.18342590 -280.61349487]
[171.61964417 -270.08673096]
[172.39819336 -255.10694885]
[173.17675781 -240.12716675]
[173.95530701 -225.14738464]
[174.73387146 -210.16760254]
[175.51242065 -195.18782043]
[182.66612244 -192.93510437]
[187.17153931 -207.24249268]
[191.67697144 -221.54986572]
[191.54084778 -236.54925537]
[205.76411438 -241.31359863]
[214.69035339 -229.25863647]
[205.98435974 -217.04444885]
[201.47892761 -202.73706055]
[196.97349548 -188.42968750]
[204.12718201 -186.17697144]
[213.34846497 -198.00778198]
[222.56973267 -209.83859253]
[231.79101562 -221.66940308]
[225.94676208 -235.87292480]
[228.00315857 -251.09353638]
[237.40704346 -263.23693848]
[251.62882996 -269.03665161]
[266.84292603 -266.93255615]
[278.95678711 -257.49063110]
[284.71188354 -243.25076294]
[282.56011963 -228.04335022]
[273.08029175 -215.95912170]
[258.82241821 -210.24868774]
[243.62182617 -212.44812012]
[234.40054321 -200.61730957]
[225.17927551 -188.78649902]
[215.95799255 -176.95568848]
[206.38339233 -148.57160950]
[183.10351562 -142.05241394]
[179.06472778 -127.60637665]
[183.08941650 -113.26583862]
[171.92211914 -102.05860901]
[167.88331604 -87.61256409]
[163.84452820 -73.16652679]
[159.80572510 -58.72048187]
[155.76692200 -44.27444077]
[151.72813416 -29.82839966]
[153.23808289 -25.31741524]
[151.94493103 -19.81031799]
[147.39242554 -15.06233692]
[142.97994995 -0.72601473]
[138.56748962 13.61030769]
[134.15502930 27.94663048]
[129.74255371 42.28295135]
[121.89174652 106.48825836]
[135.69338989 112.36315918]
[149.49504089 118.23806763]
[163.33453369 124.02326202]
[177.21128845 129.71850586]
[191.08802795 135.41375732]
[204.96478271 141.10900879]
[218.84153748 146.80424500]
[232.71827698 152.49949646]
[241.82427979 152.85969543]
[246.73742676 158.35978699]
[260.53909302 164.23469543]
[274.34072876 170.10960388]
[288.14236450 175.98451233]
[301.94403076 181.85940552]
[315.74566650 187.73431396]
[331.03189087 177.95106506]
[348.97204590 179.30657959]
[362.37780762 191.06787109]
[365.99191284 208.37066650]
[379.94140625 213.88529968]
[395.17419434 208.85118103]
[408.52816772 217.74220276]
[409.75936890 233.73794556]
[397.92327881 244.56784058]
[382.09954834 241.92411804]
[374.42678833 227.83480835]
[360.47726440 222.32019043]
[351.32873535 230.26446533]
[339.60348511 233.59275818]
[327.50320435 231.61647034]
[317.32717896 224.64910889]
[311.03530884 213.95838928]
[309.87075806 201.53596497]
[296.06912231 195.66105652]
[282.26745605 189.78614807]
[268.46582031 183.91125488]
[254.66416931 178.03634644]
[240.86253357 172.16143799]
[227.02304077 166.37623596]
[213.14628601 160.68099976]
[199.26953125 154.98574829]
[185.39279175 149.29051208]
[171.51603699 143.59526062]
[157.63928223 137.90000916]
[150.27346802 138.26724243]
[143.62013245 132.03971863]
[129.81849670 126.16481018]
[116.01683807 120.28990173]
[102.25361633 126.25427246]
[97.10298920 140.34223938]
[91.95236206 154.43022156]
[86.80173492 168.51818848]
[89.32995605 184.13609314]
[77.69286346 193.43272400]
[72.54223633 207.52070618]
[67.39160919 221.60867310]
[73.81963348 228.81315613]
[77.17312622 237.80566406]
[77.03372955 247.34429932]
[73.46242523 256.12786865]
[66.98548889 262.97348022]
[58.51734161 266.97561646]
[49.23164368 267.62609863]
[43.35673904 281.42773438]
[45.07092285 297.15579224]
[32.96699142 305.83590698]
[27.09208488 319.63754272]
[41.74328995 316.42163086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 32]
[5 31]
[6 30]
[7 29]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[33 240]
[34 239]
[36 237]
[37 236]
[40 229]
[41 228]
[42 227]
[44 225]
[45 224]
[46 223]
[47 222]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[93 172]
[94 171]
[95 170]
[96 169]
[97 168]
[98 165]
[99 164]
[100 163]
[101 162]
[102 161]
[103 160]
[105 158]
[106 157]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[138 155]
[139 154]
[140 153]
[141 152]
[173 221]
[174 220]
[175 219]
[176 217]
[177 216]
[178 215]
[179 214]
[180 213]
[181 212]
[183 211]
[184 210]
[185 209]
[186 208]
[187 207]
[188 206]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
