%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCGGCUCCCCCUAUAUAAAUCGGCCAUUUGCUUCGCUCCGCCCCGCAGCGCCGGAGUCAAAGCCGGUUCCCGGCCCAGUCCCGUCCUGCAGCAGUCUGCCUCCUCUUUCAACAUGACAGAUGCCGCUGUGUCCUUCGCCAAGGACUUCCUGGCAGGUGGAGUGGCCGCAGCCAUCUCCAAGACGGCGGUAGCGCCCAUCGAGCGGGUCAAGC\
) } def
/len { sequence length } bind def

/coor [
[0.56885809 484.54211426]
[-1.80982637 499.35232544]
[-4.18851089 514.16253662]
[2.15754151 529.28399658]
[-7.97911024 542.17510986]
[-24.17074776 539.57452393]
[-29.76080322 524.15759277]
[-18.99870491 511.78381348]
[-16.62002182 496.97363281]
[-14.24133682 482.16345215]
[-22.48651314 478.63589478]
[-29.94264793 473.64059448]
[-36.35110855 467.34777832]
[-41.48904800 459.97277832]
[-45.17715836 451.76867676]
[-47.28593063 443.01745605]
[-47.74018478 434.02050781]
[-46.52177048 425.08807373]
[-43.67025757 416.52868652]
[-39.28166580 408.63842773]
[-33.50523376 401.69076538]
[-26.53835106 395.92700195]
[-18.61979294 391.54785156]
[-10.02156353 388.70663452]
[-1.03953135 387.50372314]
[8.01673985 387.98309326]
[12.50718689 373.67098999]
[16.99763298 359.35891724]
[21.48808098 345.04681396]
[20.19176483 341.77236938]
[20.41433716 337.70803833]
[22.50947189 333.57336426]
[26.49671173 330.21844482]
[31.60433388 316.11480713]
[36.71195602 302.01119995]
[41.81957626 287.90756226]
[46.92719650 273.80395508]
[51.41764450 259.49185181]
[55.28244781 244.99829102]
[59.14725113 230.50473022]
[63.01205444 216.01116943]
[66.77184296 201.49002075]
[70.42641449 186.94201660]
[74.08099365 172.39402771]
[77.73557281 157.84603882]
[81.39014435 143.29804993]
[63.00694275 129.19865417]
[53.56342697 108.04314423]
[55.34171295 84.94394684]
[42.07153702 77.95092010]
[28.80135727 70.95789337]
[15.53118134 63.96487045]
[-0.28467679 64.37622833]
[-7.93707848 51.59773254]
[-21.20725632 44.60470963]
[-37.02311325 45.01606750]
[-44.67551422 32.23757172]
[-57.94569397 25.24454498]
[-71.21586609 18.25152016]
[-81.43474579 26.13985443]
[-93.83255005 29.56649780]
[-106.55924988 28.05675697]
[-117.72953796 21.86984825]
[-125.70213318 11.95519733]
[-129.32090759 -0.19308478]
[-128.08244324 -12.76132107]
[-141.14459229 -20.13559532]
[-154.20675659 -27.50987053]
[-167.26892090 -34.88414383]
[-180.33108521 -42.25841904]
[-197.09646606 -44.78001022]
[-199.31454468 -61.58823776]
[-183.77720642 -68.37260437]
[-172.95681763 -55.32058334]
[-159.89465332 -47.94630814]
[-146.83248901 -40.57203293]
[-133.77032471 -33.19775772]
[-120.70816040 -25.82348251]
[-106.20475769 -35.10877228]
[-88.90722656 -35.77014160]
[-73.58017731 -27.53508759]
[-64.49122620 -12.59407330]
[-64.22284698 4.98134375]
[-50.95266724 11.97436810]
[-37.68249130 18.96739388]
[-22.81580353 18.05584526]
[-14.21423054 31.33453178]
[-0.94405359 38.32755661]
[13.92263222 37.41600800]
[22.52420616 50.69469452]
[35.79438400 57.68771744]
[49.06455994 64.68074036]
[62.33473587 71.67376709]
[64.36776733 58.28205490]
[70.66154480 44.70098114]
[66.58732605 30.26489067]
[62.51310349 15.82879829]
[52.39192963 2.22739506]
[62.65996552 -11.26348305]
[78.46608734 -5.13137245]
[76.94919586 11.75457954]
[81.02341461 26.19067001]
[85.09763336 40.62676239]
[92.59449005 40.40962982]
[92.16047668 25.41591263]
[107.15420532 24.98214912]
[107.58820343 39.97537231]
[115.08506012 39.75823975]
[118.31693268 25.11054420]
[121.54879761 10.46284676]
[116.96658325 -4.68026543]
[127.26435089 -15.44155025]
[130.49621582 -30.08924675]
[133.72808838 -44.73694229]
[131.23641968 -61.50679779]
[146.66114807 -68.54344177]
[157.69277954 -55.66946411]
[148.37577820 -41.50507355]
[145.14392090 -26.85737801]
[141.91204834 -12.20968056]
[146.72543335 1.88573003]
[136.19650269 13.69471645]
[132.96463013 28.34241295]
[129.73275757 42.99010849]
[142.22737122 51.28977585]
[154.47647095 42.63185883]
[166.72558594 33.97394180]
[178.97468567 25.31602669]
[191.22378540 16.65810966]
[189.92559814 1.41796708]
[196.38732910 -12.33494949]
[208.78298950 -20.94970703]
[223.72639465 -22.19492722]
[237.19596863 -15.83597946]
[249.44506836 -24.49389648]
[261.69418335 -33.15181351]
[273.94326782 -41.80973053]
[286.19238281 -50.46764755]
[298.44146729 -59.12556458]
[304.81109619 -74.23714447]
[321.11437988 -76.00791168]
[330.57986450 -62.61626053]
[323.47030640 -47.83836746]
[307.09939575 -46.87646103]
[294.85028076 -38.21854401]
[282.60119629 -29.56062889]
[270.35208130 -20.90271187]
[258.10299683 -12.24479485]
[245.85388184 -3.58687830]
[247.35365295 11.23257923]
[241.19328308 24.90393448]
[228.93597412 33.71440887]
[213.81510925 35.21651840]
[199.88169861 28.90721130]
[187.63259888 37.56512833]
[175.38349915 46.22304535]
[163.13439941 54.88096237]
[150.88529968 63.53887939]
[153.37695312 78.77408600]
[151.80783081 92.95055389]
[146.85334778 105.08045197]
[161.31855774 109.05006409]
[175.78375244 113.01968384]
[190.24896240 116.98929596]
[204.71417236 120.95890808]
[219.20773315 124.82371521]
[233.72888184 128.58349609]
[248.25004578 132.34329224]
[262.77120972 136.10307312]
[278.42208862 131.20597839]
[290.30368042 142.50907898]
[286.19317627 158.38471985]
[270.31915283 162.50140381]
[259.01141357 150.62423706]
[244.49024963 146.86444092]
[229.96910095 143.10466003]
[215.44793701 139.34486389]
[208.18804932 140.71072388]
[200.74455261 135.42411804]
[186.27934265 131.45449829]
[171.81414795 127.48488617]
[157.34893799 123.51527405]
[142.88372803 119.54565430]
[136.83610535 129.39640808]
[128.57254028 137.47875977]
[118.59013367 143.30651855]
[107.48940277 146.52908325]
[95.93814087 146.95262146]
[92.28356171 161.50061035]
[88.62898254 176.04859924]
[84.97441101 190.59660339]
[81.31983185 205.14459229]
[82.26411438 214.22544861]
[77.50561523 219.87597656]
[73.64080811 234.36953735]
[69.77600861 248.86309814]
[65.91120911 263.35665894]
[79.38822937 256.77108765]
[93.61763000 261.51702881]
[100.44311523 274.87417603]
[95.95231628 289.18612671]
[82.71936035 296.24935913]
[68.32937622 292.01516724]
[61.03082275 278.91156006]
[55.92319870 293.01519775]
[50.81557846 307.11880493]
[45.70795822 321.22244263]
[40.60033417 335.32604980]
[35.80017090 349.53726196]
[31.30972290 363.84936523]
[26.81927490 378.16143799]
[22.32882881 392.47354126]
[39.08871078 406.20544434]
[48.23267365 425.80114746]
[47.99136353 447.38107300]
[38.44947815 466.69052124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[26 212]
[27 211]
[28 210]
[29 209]
[33 208]
[34 207]
[35 206]
[36 205]
[37 204]
[38 197]
[39 196]
[40 195]
[41 194]
[42 192]
[43 191]
[44 190]
[45 189]
[46 188]
[49 93]
[50 92]
[51 91]
[52 90]
[54 88]
[55 87]
[57 85]
[58 84]
[59 83]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[95 103]
[96 102]
[97 101]
[108 124]
[109 123]
[110 122]
[112 120]
[113 119]
[114 118]
[125 158]
[126 157]
[127 156]
[128 155]
[129 154]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[161 183]
[162 182]
[163 181]
[164 180]
[165 179]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
