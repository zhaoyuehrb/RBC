%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NPIPB8)
} def

/sequence { (\
AUGGUGAAGCUCUCUAUUGUCCUGACCCCACAGUUCCUGUCCCAUGACCAGGGCCAGCUCACCAAGGAGCUGCAGCAGCAUGUAAAGUCAGUGACAUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.656347268 ubox
1 20 0.003170904 ubox
1 97 0.005287994 ubox
2 16 0.769898264 ubox
2 19 0.003951317 ubox
2 64 0.033701538 ubox
2 77 0.152758889 ubox
2 96 0.004025059 ubox
3 11 0.155781766 ubox
3 12 0.088976855 ubox
3 13 0.065122338 ubox
3 14 0.092933001 ubox
3 15 0.798450222 ubox
3 18 0.050225896 ubox
3 22 0.003925697 ubox
3 27 0.014779657 ubox
3 63 0.037411179 ubox
3 76 0.169496898 ubox
3 100 0.244056619 ubox
4 10 0.175679347 ubox
4 11 0.060186664 ubox
4 12 0.073404593 ubox
4 13 0.086043634 ubox
4 14 0.800816605 ubox
4 17 0.086554095 ubox
4 21 0.003969410 ubox
4 26 0.014851692 ubox
4 31 0.003561864 ubox
4 62 0.037418876 ubox
4 73 0.003716373 ubox
4 76 0.018086958 ubox
4 97 0.004613084 ubox
4 99 0.246845014 ubox
5 9 0.164434811 ubox
5 16 0.088412084 ubox
5 25 0.014759001 ubox
5 30 0.003590068 ubox
5 61 0.037411080 ubox
5 72 0.003625606 ubox
5 74 0.169307222 ubox
5 75 0.017134211 ubox
5 96 0.004114755 ubox
5 98 0.242158527 ubox
6 12 0.778973123 ubox
6 14 0.151470543 ubox
6 15 0.072751052 ubox
6 18 0.009070520 ubox
6 29 0.003583094 ubox
6 60 0.037410706 ubox
6 73 0.168682246 ubox
6 95 0.003296710 ubox
6 97 0.194123396 ubox
7 11 0.679570637 ubox
7 13 0.147788196 ubox
7 17 0.010950726 ubox
7 18 0.025137372 ubox
7 59 0.026437688 ubox
8 15 0.069618760 ubox
8 17 0.030835084 ubox
8 18 0.005750520 ubox
8 23 0.003383492 ubox
8 59 0.026373287 ubox
8 71 0.151276389 ubox
9 14 0.070862007 ubox
9 17 0.006968420 ubox
9 20 0.017404906 ubox
9 54 0.004719025 ubox
9 58 0.037361437 ubox
9 70 0.170126020 ubox
9 76 0.013424793 ubox
9 99 0.093514778 ubox
10 19 0.018049356 ubox
10 53 0.004725811 ubox
10 57 0.037346618 ubox
10 69 0.170133125 ubox
10 75 0.013435483 ubox
10 98 0.093301525 ubox
11 52 0.004544917 ubox
11 56 0.035187072 ubox
11 68 0.170078255 ubox
11 74 0.012561700 ubox
12 51 0.004514440 ubox
12 53 0.024524811 ubox
12 66 0.005517203 ubox
12 67 0.169821222 ubox
13 50 0.004335180 ubox
13 52 0.024661046 ubox
13 65 0.007182346 ubox
13 66 0.144128276 ubox
13 67 0.007721573 ubox
14 24 0.003200591 ubox
14 51 0.024706312 ubox
14 53 0.010367161 ubox
14 57 0.015453975 ubox
14 66 0.080913642 ubox
15 50 0.024397827 ubox
15 52 0.009692310 ubox
15 56 0.015362753 ubox
15 65 0.078018193 ubox
15 98 0.146210714 ubox
16 34 0.013967931 ubox
16 97 0.171299100 ubox
17 33 0.014791091 ubox
17 57 0.005937198 ubox
17 65 0.019633590 ubox
17 96 0.123382410 ubox
18 32 0.015641843 ubox
18 50 0.003420096 ubox
18 56 0.007278159 ubox
18 61 0.155239593 ubox
18 64 0.021661077 ubox
18 77 0.005078427 ubox
18 96 0.883686578 ubox
18 98 0.009837846 ubox
19 31 0.015822474 ubox
19 48 0.027012332 ubox
19 54 0.034837603 ubox
19 55 0.005686216 ubox
19 58 0.004814720 ubox
19 60 0.161048509 ubox
19 62 0.019727955 ubox
19 63 0.020647919 ubox
19 76 0.005484998 ubox
19 95 0.983751008 ubox
20 30 0.014654897 ubox
20 47 0.027160325 ubox
20 53 0.035414598 ubox
20 57 0.003667082 ubox
20 61 0.020492949 ubox
20 75 0.005191169 ubox
20 94 0.983910981 ubox
21 46 0.027102082 ubox
21 52 0.035628709 ubox
21 93 0.983921461 ubox
22 33 0.032878706 ubox
22 51 0.035630210 ubox
22 57 0.165584785 ubox
22 91 0.983865121 ubox
23 30 0.006342596 ubox
23 32 0.033215200 ubox
23 44 0.025247884 ubox
23 50 0.035608446 ubox
23 56 0.165686742 ubox
23 61 0.009759527 ubox
23 90 0.983908740 ubox
24 29 0.008160674 ubox
24 31 0.033176520 ubox
24 35 0.007221230 ubox
24 41 0.006285686 ubox
24 43 0.025268025 ubox
24 49 0.035445622 ubox
24 55 0.165400623 ubox
24 60 0.009916917 ubox
24 89 0.984149937 ubox
25 34 0.021223766 ubox
25 40 0.006457954 ubox
25 59 0.009186330 ubox
25 88 0.983889960 ubox
26 33 0.022392020 ubox
26 39 0.006337970 ubox
26 52 0.005447112 ubox
26 53 0.145222301 ubox
26 87 0.981241719 ubox
27 51 0.005413410 ubox
27 52 0.144203284 ubox
27 53 0.056035056 ubox
27 67 0.003743702 ubox
28 51 0.142723473 ubox
28 52 0.057093844 ubox
28 53 0.009012497 ubox
28 66 0.003746216 ubox
28 67 0.003753374 ubox
29 39 0.006996510 ubox
29 46 0.029694789 ubox
29 51 0.057905808 ubox
29 52 0.007980587 ubox
29 66 0.003764951 ubox
29 82 0.046582651 ubox
30 38 0.006703220 ubox
30 40 0.118483985 ubox
30 45 0.020756058 ubox
30 81 0.043529227 ubox
30 83 0.937854446 ubox
31 39 0.124510870 ubox
31 46 0.031026586 ubox
31 72 0.022955242 ubox
31 82 0.962737158 ubox
32 38 0.124778816 ubox
32 45 0.030513446 ubox
32 59 0.006629936 ubox
32 71 0.024463244 ubox
32 81 0.948485825 ubox
33 37 0.122115390 ubox
33 45 0.014071405 ubox
33 48 0.070195952 ubox
33 54 0.130445966 ubox
33 58 0.008147779 ubox
33 62 0.005033665 ubox
33 70 0.026388252 ubox
33 73 0.003575615 ubox
33 76 0.064069753 ubox
33 79 0.901032722 ubox
33 81 0.029802922 ubox
34 44 0.013745808 ubox
34 47 0.064306598 ubox
34 53 0.096226831 ubox
34 57 0.007842912 ubox
34 61 0.004941433 ubox
34 69 0.026382468 ubox
34 75 0.063271165 ubox
34 78 0.894510594 ubox
34 80 0.040280637 ubox
35 46 0.055063424 ubox
35 47 0.038264487 ubox
35 50 0.009499058 ubox
35 52 0.040736352 ubox
35 53 0.209209740 ubox
35 56 0.005223936 ubox
35 68 0.026484186 ubox
35 74 0.050772967 ubox
35 77 0.772173841 ubox
36 46 0.047706337 ubox
36 51 0.041094983 ubox
36 52 0.816273473 ubox
36 53 0.022821477 ubox
36 67 0.026508096 ubox
37 51 0.818274992 ubox
37 52 0.025066518 ubox
37 57 0.026689115 ubox
37 66 0.026165528 ubox
37 75 0.520279024 ubox
37 78 0.146826091 ubox
38 44 0.054488503 ubox
38 50 0.816295233 ubox
38 51 0.022739781 ubox
38 56 0.030569947 ubox
38 65 0.024575650 ubox
38 74 0.519719197 ubox
38 77 0.148246222 ubox
38 80 0.005560579 ubox
39 43 0.054482083 ubox
39 45 0.009380585 ubox
39 48 0.571009615 ubox
39 49 0.591586261 ubox
39 54 0.123723648 ubox
39 55 0.033789673 ubox
39 58 0.005847168 ubox
39 62 0.005970713 ubox
39 63 0.003840848 ubox
39 73 0.506904671 ubox
39 76 0.148225665 ubox
39 79 0.005586762 ubox
40 44 0.009876797 ubox
40 47 0.801190825 ubox
40 53 0.137381534 ubox
40 57 0.005821048 ubox
40 61 0.006079064 ubox
40 72 0.196725966 ubox
40 75 0.142770598 ubox
40 78 0.005383851 ubox
41 46 0.798433314 ubox
41 51 0.004301001 ubox
41 52 0.163687834 ubox
41 53 0.510615900 ubox
42 51 0.163570706 ubox
42 52 0.518359620 ubox
42 53 0.056776556 ubox
43 51 0.518173049 ubox
43 52 0.057404019 ubox
43 82 0.027669462 ubox
44 81 0.027812482 ubox
45 56 0.003388079 ubox
45 74 0.004710406 ubox
45 80 0.027839707 ubox
46 55 0.004683269 ubox
46 73 0.004700221 ubox
46 79 0.027826881 ubox
48 67 0.003186020 ubox
49 66 0.003195479 ubox
51 60 0.003585201 ubox
51 63 0.004247320 ubox
52 59 0.003592255 ubox
52 62 0.004251150 ubox
52 63 0.004344845 ubox
53 58 0.003806152 ubox
53 62 0.004535082 ubox
53 73 0.405565860 ubox
53 76 0.629349665 ubox
53 79 0.082138735 ubox
53 83 0.004345283 ubox
54 67 0.003307037 ubox
54 72 0.289827430 ubox
54 75 0.627832337 ubox
54 78 0.082389631 ubox
54 82 0.004559654 ubox
55 66 0.003377236 ubox
55 72 0.904938637 ubox
56 71 0.979155615 ubox
57 70 0.984251620 ubox
58 66 0.003787004 ubox
58 69 0.984289044 ubox
59 65 0.003781153 ubox
59 67 0.018561328 ubox
59 68 0.983949327 ubox
60 66 0.042691822 ubox
60 67 0.982141049 ubox
69 76 0.027758950 ubox
69 79 0.013356190 ubox
69 83 0.004218310 ubox
70 75 0.027698452 ubox
70 78 0.013521488 ubox
70 82 0.004445991 ubox
71 77 0.013875883 ubox
71 80 0.053606415 ubox
71 84 0.025870466 ubox
72 76 0.014142797 ubox
72 79 0.098116031 ubox
72 83 0.040550023 ubox
72 99 0.003843130 ubox
73 78 0.102091348 ubox
73 82 0.070649324 ubox
73 98 0.003862572 ubox
74 81 0.069808428 ubox
74 97 0.003834870 ubox
75 83 0.108568119 ubox
76 82 0.111031128 ubox
77 81 0.090060455 ubox
78 99 0.176306956 ubox
79 98 0.176729221 ubox
80 97 0.176688492 ubox
81 90 0.004042131 ubox
81 96 0.176682483 ubox
82 89 0.004314195 ubox
82 95 0.176486471 ubox
82 99 0.006363272 ubox
83 93 0.029434845 ubox
83 94 0.169399929 ubox
83 98 0.006364562 ubox
84 92 0.039750512 ubox
84 97 0.006016373 ubox
87 95 0.013734972 ubox
88 94 0.016090546 ubox
89 93 0.017461042 ubox
1 17 0.9500000 lbox
2 16 0.9500000 lbox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
6 12 0.9500000 lbox
7 11 0.9500000 lbox
18 96 0.9500000 lbox
19 95 0.9500000 lbox
20 94 0.9500000 lbox
21 93 0.9500000 lbox
22 91 0.9500000 lbox
23 90 0.9500000 lbox
24 89 0.9500000 lbox
25 88 0.9500000 lbox
26 87 0.9500000 lbox
30 83 0.9500000 lbox
31 82 0.9500000 lbox
32 81 0.9500000 lbox
33 79 0.9500000 lbox
34 78 0.9500000 lbox
35 77 0.9500000 lbox
37 75 0.9500000 lbox
38 74 0.9500000 lbox
39 73 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
55 72 0.9500000 lbox
56 71 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
60 67 0.9500000 lbox
showpage
end
%%EOF
