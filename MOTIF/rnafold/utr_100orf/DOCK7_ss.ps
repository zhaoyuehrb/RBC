%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGAGGCCGCGAGGGAGGGAGCACGAGCGAGGAGGCACGCGCCCGCCGGUCCGCACCCGGCCCGCCGCAGCCGCCGCCGCCGUCGCCGUCGCCGCAGCAGCCAUGGCCGAGCGCCGCGCCUUCGCCCAGAAGAUCAGCAGAACGGUGGCAGCCGAAGUUAGGAAGCAGAUCUCCGGACAAUAUAGUGGUUCUCCCCAACUGC\
) } def
/len { sequence length } bind def

/coor [
[-212.73854065 127.68986511]
[-221.94766235 119.84188080]
[-236.92610168 120.64604950]
[-251.90452576 121.45021820]
[-266.88296509 122.25438690]
[-280.24847412 130.72041321]
[-293.37225342 123.67655945]
[-308.35067749 124.48072815]
[-323.32910156 125.28489685]
[-336.69461060 133.75091553]
[-349.81838989 126.70706177]
[-364.79681396 127.51123047]
[-379.77523804 128.31539917]
[-394.75369263 129.11956787]
[-408.11920166 137.58558655]
[-421.24298096 130.54173279]
[-436.22140503 131.34590149]
[-449.58691406 139.81192017]
[-462.71069336 132.76808167]
[-477.68911743 133.57225037]
[-488.22216797 145.04798889]
[-503.42388916 145.65016174]
[-514.29931641 135.53779602]
[-529.27777100 136.34196472]
[-536.29571533 149.93225098]
[-549.08935547 158.13096619]
[-564.16882324 158.82055664]
[-577.47979736 151.91584778]
[-585.49340820 139.36009216]
[-600.47186279 140.16426086]
[-615.45025635 140.96842957]
[-630.64056396 151.37304688]
[-645.96588135 142.82728577]
[-660.93023682 143.86090088]
[-656.06243896 164.34132385]
[-670.61474609 187.47349548]
[-684.80792236 192.32681274]
[-699.00103760 197.18014526]
[-709.37268066 209.88293457]
[-725.51385498 206.98550415]
[-730.81988525 191.46847534]
[-719.83239746 179.29443359]
[-703.85437012 182.98699951]
[-689.66119385 178.13368225]
[-675.46807861 173.28034973]
[-677.07415771 158.36592102]
[-678.68011475 143.45280457]
[-693.58117676 141.73254395]
[-708.48217773 140.01229858]
[-723.38323975 138.29205322]
[-738.28424072 136.57179260]
[-749.51824951 147.44979858]
[-765.11987305 148.51016235]
[-777.72241211 139.25224304]
[-781.37542725 124.04731750]
[-774.35400391 110.07470703]
[-759.97351074 103.93183899]
[-745.02392578 108.51919556]
[-736.56402588 121.67076874]
[-721.66296387 123.39101410]
[-706.76196289 125.11126709]
[-691.86090088 126.83152008]
[-676.95989990 128.55177307]
[-661.96386719 128.89654541]
[-646.99951172 127.86294556]
[-638.81921387 118.94766998]
[-626.35736084 117.96668243]
[-616.25445557 125.98999786]
[-601.27600098 125.18582916]
[-586.29760742 124.38166046]
[-579.67431641 111.04006958]
[-567.17919922 102.74987030]
[-552.11254883 101.82096100]
[-538.51458740 108.60275269]
[-530.08190918 121.36353302]
[-515.10351562 120.55936432]
[-505.37329102 109.34070587]
[-490.19448853 108.31179047]
[-478.49328613 118.59381866]
[-463.51486206 117.78964996]
[-451.22070312 109.38114929]
[-437.02557373 116.36747742]
[-422.04714966 115.56330872]
[-409.75299072 107.15481567]
[-395.55786133 114.14114380]
[-380.57940674 113.33697510]
[-365.60098267 112.53280640]
[-350.62255859 111.72863770]
[-338.32839966 103.32013702]
[-324.13327026 110.30646515]
[-309.15484619 109.50229645]
[-294.17642212 108.69812775]
[-281.88226318 100.28963470]
[-267.68713379 107.27596283]
[-252.70869446 106.47179413]
[-237.73025513 105.66762543]
[-222.75183105 104.86345673]
[-208.58660889 94.50767517]
[-192.23794556 102.97655487]
[-177.27359009 101.94294739]
[-162.30924988 100.90933990]
[-147.34490967 99.87573242]
[-141.35084534 91.59303284]
[-131.58120728 87.90180206]
[-121.17914581 90.24784851]
[-113.63500977 98.09164429]
[-98.64601898 97.51710510]
[-83.65702057 96.94256592]
[-75.20739746 88.28215790]
[-62.72134399 87.68352509]
[-52.86901474 96.01268005]
[-37.87297821 95.66790009]
[-22.87694168 95.32312012]
[-10.33087540 87.29532623]
[3.64349437 94.71337891]
[18.63953209 94.36859894]
[33.63556671 94.02382660]
[48.63160706 93.67904663]
[63.62764359 93.33426666]
[69.39450073 67.19593048]
[94.10768890 47.57966995]
[130.48988342 47.58656693]
[141.05577087 36.93940735]
[151.62165833 26.29224777]
[162.18754578 15.64508820]
[163.56419373 -0.33879149]
[176.99851990 -9.10797024]
[192.18486023 -3.93548465]
[197.47355652 11.21077728]
[188.80757141 24.71189880]
[172.83470154 26.21097565]
[162.26881409 36.85813522]
[151.70292664 47.50529480]
[141.13703918 58.15245438]
[144.36155701 64.92390442]
[157.90444946 58.47488403]
[171.44735718 52.02586365]
[184.99024963 45.57684708]
[198.53326416 39.12804794]
[204.98182678 52.67116547]
[191.43927002 59.11974335]
[177.89637756 65.56876373]
[164.35346985 72.01778412]
[150.81057739 78.46680450]
[154.03507996 85.23825836]
[168.96072388 83.74655151]
[183.88636780 82.25485229]
[198.81201172 80.76314545]
[211.80522156 70.75771332]
[226.86160278 77.25675201]
[228.49244690 93.57460785]
[215.02008057 102.92486572]
[200.30371094 95.68878937]
[185.37806702 97.18049622]
[170.45242310 98.67219543]
[155.52677917 100.16390228]
[154.09884644 107.52671051]
[151.24298096 122.25233459]
[149.81504822 129.61514282]
[163.10099792 136.57817078]
[176.38694763 143.54118347]
[192.20182800 143.09408569]
[199.88308716 155.85525513]
[213.16903687 162.81826782]
[226.45498657 169.78129578]
[240.30058289 162.77563477]
[255.61431885 165.27940369]
[266.50778198 176.32984924]
[268.79217529 191.67785645]
[261.58914185 205.42178345]
[247.66835022 212.27684021]
[232.38267517 209.60708618]
[221.60974121 198.43911743]
[219.49197388 183.06723022]
[206.20602417 176.10421753]
[192.92007446 169.14120483]
[178.05548096 170.08634949]
[169.42393494 156.82713318]
[156.13798523 149.86412048]
[142.85203552 142.90109253]
[126.47909546 150.76615906]
[109.47130585 153.03800964]
[93.58686829 150.08837891]
[80.29816437 142.80062866]
[70.65526581 132.43257141]
[65.20513916 120.44693756]
[63.97241974 108.33030701]
[48.97638321 108.67507935]
[33.98034668 109.01985931]
[18.98431015 109.36463928]
[3.98827291 109.70941925]
[-9.63041019 117.76187134]
[-22.53216362 110.31916046]
[-37.52819824 110.66393280]
[-52.52423859 111.00871277]
[-68.02622986 120.94293976]
[-83.08248138 111.93155670]
[-98.07147217 112.50609589]
[-113.06047058 113.08064270]
[-129.61189270 124.58228302]
[-146.31129456 114.84008026]
[-161.27563477 115.87368774]
[-176.23999023 116.90729523]
[-191.20433044 117.94090271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 97]
[3 96]
[4 95]
[5 94]
[7 92]
[8 91]
[9 90]
[11 88]
[12 87]
[13 86]
[14 85]
[16 83]
[17 82]
[19 80]
[20 79]
[23 76]
[24 75]
[29 70]
[30 69]
[31 68]
[33 65]
[34 64]
[36 45]
[37 44]
[38 43]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[99 204]
[100 203]
[101 202]
[102 201]
[106 199]
[107 198]
[108 197]
[111 195]
[112 194]
[113 193]
[115 191]
[116 190]
[117 189]
[118 188]
[119 187]
[122 134]
[123 133]
[124 132]
[125 131]
[145 156]
[146 155]
[147 154]
[148 153]
[159 180]
[160 179]
[161 178]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
