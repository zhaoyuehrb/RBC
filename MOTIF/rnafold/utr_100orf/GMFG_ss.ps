%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGGAUGAAACCUUCCUCCUACUGCACAGCCCGCCCCCCUACAGCCCCGGUCCCCACGCCUAGAAGACAGCGGAACUAAGAAAAGAAGAGGCCUGUGGACAGAACAAUCAUGUCUGACUCCCUGGUGGUGUGCGAGGUAGACCCAGAGCUAACAGAAAAGCUGAGGAAAUUCCGCUUCCGAAAAGAGACAGACAAUGCAGCCAUCAUAA\
) } def
/len { sequence length } bind def

/coor [
[351.14410400 530.30969238]
[363.58151245 521.83636475]
[357.71255493 508.03219604]
[351.84359741 494.22802734]
[345.97460938 480.42385864]
[340.10565186 466.61968994]
[324.39495850 467.65090942]
[309.25518799 463.23260498]
[296.52191162 453.88131714]
[287.74563599 440.71289062]
[284.00268555 425.30926514]
[285.76354980 409.52853394]
[292.83352661 395.28070068]
[304.37429810 384.29660034]
[298.30047607 370.58132935]
[292.22662354 356.86608887]
[286.15280151 343.15081787]
[280.07894897 329.43554688]
[274.00512695 315.72027588]
[262.16293335 283.78088379]
[251.99938965 272.74902344]
[241.83584595 261.71713257]
[231.67230225 250.68525696]
[221.50875854 239.65338135]
[211.18208313 228.77404785]
[200.69458008 218.04966736]
[190.20707703 207.32528687]
[179.71958923 196.60090637]
[169.23208618 185.87652588]
[164.55125427 184.92839050]
[160.41636658 181.02972412]
[158.59791565 174.67324829]
[148.43437195 163.64137268]
[138.27082825 152.60948181]
[128.10726929 141.57760620]
[117.94372559 130.54573059]
[97.67360687 135.34977722]
[78.20790100 127.93069458]
[66.27739716 110.85381317]
[66.00739288 90.02394104]
[52.83491516 82.84857178]
[39.66243744 75.67321014]
[26.48996353 68.49784088]
[13.31748772 61.32247543]
[0.14501187 54.14710617]
[-13.08051586 47.07000351]
[-26.35836220 40.09154892]
[-40.37138367 34.74036407]
[-54.92100525 31.09227562]
[-69.47062683 27.44418907]
[-84.07294464 24.01312828]
[-98.72473907 20.79985428]
[-113.37652588 17.58658028]
[-122.37314606 29.87400055]
[-135.59294128 37.43422699]
[-150.74548340 38.95740128]
[-165.20553589 34.17963028]
[-176.46777344 23.92868805]
[-182.58096313 9.98061275]
[-182.48594666 -5.24800730]
[-176.19920349 -19.11872101]
[-164.80993652 -29.22834396]
[-150.29141235 -33.82532120]
[-135.15904236 -32.11320496]
[-122.03460693 -24.38862038]
[-113.19200134 -11.98990345]
[-110.16324615 2.93479252]
[-95.51145935 6.14806652]
[-80.85967255 9.36134052]
[-76.42593384 7.58623743]
[-70.83000946 8.57753849]
[-65.82254028 12.89456844]
[-51.27291870 16.54265594]
[-36.72329712 20.19074249]
[-47.69108582 9.95807171]
[-54.55925369 -3.37715650]
[-56.52092743 -18.24833107]
[-53.34565735 -32.90840149]
[-45.40647125 -45.63511658]
[-33.63605118 -54.93335724]
[-19.41718102 -59.71076965]
[-4.42027426 -59.40611649]
[9.59284401 -54.05517960]
[20.97592926 -44.28659058]
[28.39170456 -31.24794388]
[30.96897697 -16.47101402]
[28.40496635 -1.69177651]
[21.00089264 11.35351753]
[9.62657833 21.13232040]
[-4.38173342 26.49582672]
[-19.37990952 26.81370354]
[-6.10206318 33.79215622]
[1.28125513 34.12139893]
[7.32037830 40.97463226]
[20.49285316 48.14999771]
[33.66532898 55.32536316]
[46.83780670 62.50073242]
[60.01028061 69.67609406]
[73.18275452 76.85146332]
[83.51863861 68.64104462]
[96.14272308 64.78437042]
[97.70324707 49.86576462]
[99.26377106 34.94715881]
[100.82429504 20.02855492]
[98.60465240 11.16790962]
[102.52072144 4.90003777]
[104.30318451 -9.99368000]
[97.35545349 -24.84834290]
[106.96664429 -38.13581848]
[123.24959564 -36.18708801]
[129.45379639 -21.00684357]
[119.19689941 -8.21121407]
[117.41443634 6.68250322]
[115.74289703 21.58907700]
[114.18237305 36.50768280]
[112.62184906 51.42628860]
[111.06132507 66.34489441]
[118.54188538 69.81361389]
[125.01793671 74.91769409]
[130.13864136 81.38059998]
[133.62657166 88.85222626]
[135.29278564 96.92777252]
[135.04701233 105.16976166]
[132.90255737 113.13168335]
[128.97560120 120.38218689]
[139.13914490 131.41406250]
[149.30270386 142.44593811]
[159.46624756 153.47781372]
[169.62979126 164.50968933]
[179.95646667 175.38903809]
[190.44396973 186.11340332]
[200.93145752 196.83778381]
[211.41896057 207.56216431]
[221.90646362 218.28654480]
[228.15959167 220.43362427]
[231.83758545 224.76599121]
[232.54063416 229.48983765]
[242.70417786 240.52171326]
[252.86772156 251.55358887]
[263.03128052 262.58547974]
[273.19482422 273.61734009]
[269.31042480 259.12902832]
[276.14416504 245.77613831]
[290.16781616 240.45278931]
[304.14086914 245.90747070]
[310.84906006 259.32388306]
[306.82888794 273.77511597]
[294.15402222 281.80038452]
[309.10375977 280.57339478]
[324.05349731 279.34643555]
[339.00320435 278.11944580]
[346.95114136 264.79241943]
[361.22781372 258.71322632]
[376.34353638 262.21951294]
[386.48605347 273.96298218]
[387.75534058 289.42803955]
[379.66329956 302.66809082]
[365.32153320 308.59204102]
[350.24472046 304.92199707]
[340.23019409 293.06918335]
[325.28045654 294.29617310]
[310.33071899 295.52313232]
[295.38098145 296.75012207]
[287.72039795 309.64645386]
[293.79421997 323.36172485]
[299.86807251 337.07696533]
[305.94189453 350.79223633]
[312.01571655 364.50750732]
[318.08956909 378.22277832]
[332.35876465 376.92211914]
[346.31118774 380.08709717]
[358.58566284 387.39541626]
[367.98889160 398.12112427]
[373.61148071 411.20687866]
[374.91592407 425.36801147]
[371.78784180 439.21884155]
[364.54602051 451.40805054]
[353.90985107 460.75070190]
[359.77880859 474.55490112]
[365.64776611 488.35906982]
[371.51672363 502.16323853]
[377.38568115 515.96740723]
[392.11706543 512.88970947]
[407.16583252 512.74542236]
[421.95355225 515.54003906]
[435.91180420 521.16619873]
[448.50405884 529.40765381]
[459.24633789 539.94757080]
[467.72570801 552.38079834]
[473.61627197 566.22955322]
[476.69158936 580.96148682]
[476.83343506 596.01025391]
[474.03640747 610.79748535]
[468.40798950 624.75482178]
[460.16455078 637.34576416]
[449.62289429 648.08636475]
[437.18823242 656.56372070]
[423.33853149 662.45202637]
[408.60614014 665.52496338]
[393.55734253 665.66436768]
[378.77053833 662.86492920]
[364.81411743 657.23425293]
[352.22451782 648.98876953]
[341.48565674 638.44537354]
[333.01031494 626.00933838]
[327.12423706 612.15869141]
[324.05368042 597.42584229]
[323.91668701 582.37701416]
[326.71850586 567.59063721]
[332.35144043 553.63513184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[6 178]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[19 164]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[32 129]
[33 128]
[34 127]
[35 126]
[36 125]
[40 99]
[41 98]
[42 97]
[43 96]
[44 95]
[45 94]
[46 92]
[47 91]
[48 74]
[49 73]
[50 72]
[51 69]
[52 68]
[53 67]
[101 117]
[102 116]
[103 115]
[104 114]
[106 113]
[107 112]
[148 163]
[149 162]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
