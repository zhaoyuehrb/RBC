%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGACUGCGCCGCUGCUUUGGGAUUGGUAGCUGAGUUUUGUGUCGCGCCUUUUCUGACGAUGCGAACAACAUGGCGGCGGAAAGUGGUAGCGAUUUUCAGCAGAGACGUAGAAGGCGCCGGGACCCGGAGGAACCGGAAAAAACAGAACUCAGCGAAAGAGAGCUGGCAGUAGCAGUGGCGGUGUCCCAGGAGAACGAUGAGGAGAACGAAGAGCGCUGGGUUGGACCUUUACCUGUGGAGGCAACACUGGCC\
AAGAAGAGGAAAGCAGCCACAUGAAGUUGGAAUUUCGAACUCUU\
) } def
/len { sequence length } bind def

/coor [
[652.83398438 402.96612549]
[632.37878418 397.38027954]
[616.42010498 383.35037231]
[608.22534180 363.69653320]
[609.49542236 342.39566040]
[595.99066162 335.86718750]
[582.48583984 329.33874512]
[568.54797363 334.46435547]
[554.75921631 328.03594971]
[549.47753906 313.38189697]
[535.97271729 306.85342407]
[522.46795654 300.32495117]
[508.96316528 293.79647827]
[495.45840454 287.26800537]
[481.95361328 280.73956299]
[468.44882202 274.21109009]
[454.94406128 267.68261719]
[441.43927002 261.15414429]
[427.93447876 254.62568665]
[414.39569092 248.16801453]
[400.82330322 241.78132629]
[387.25088501 235.39463806]
[372.14321899 244.61216736]
[354.37356567 242.86360168]
[341.11993408 230.66427612]
[337.85092163 212.78945923]
[324.14773560 206.68840027]
[310.55294800 217.31748962]
[293.35494995 219.57975769]
[277.30923462 212.75807190]
[266.89938354 198.65983582]
[265.08404541 181.13922119]
[251.25610352 175.32647705]
[237.42816162 169.51374817]
[223.60020447 163.70101929]
[209.77226257 157.88827515]
[195.94432068 152.07554626]
[182.11636353 146.26281738]
[168.28842163 140.45007324]
[154.46046448 134.63734436]
[140.63252258 128.82461548]
[126.80457306 123.01187897]
[112.97663116 117.19914246]
[76.23693085 118.38731384]
[61.56471252 115.26863861]
[46.89249802 112.14995575]
[32.17311096 109.26213074]
[17.41017532 106.60585785]
[2.64724135 103.94958496]
[-12.11569309 101.29331970]
[-26.87862778 98.63704681]
[-41.64155960 95.98077393]
[-56.40449524 93.32450104]
[-71.16742706 90.66823578]
[-85.93036652 88.01196289]
[-100.88259125 93.18318176]
[-112.03855896 83.31435394]
[-126.80149078 80.65808105]
[-136.75218201 92.27406311]
[-151.08645630 97.31641388]
[-165.92144775 94.52542114]
[-177.29151917 84.74904633]
[-182.20835876 70.68881226]
[-196.97129822 68.03254700]
[-211.73423767 65.37627411]
[-226.51087952 62.79733658]
[-241.30081177 60.29580307]
[-256.09075928 57.79427338]
[-263.61639404 70.93163300]
[-275.16098022 80.68325806]
[-289.31872559 85.88694000]
[-304.37423706 85.93273926]
[-318.51031494 80.83443451]
[-330.02740479 71.22550964]
[-337.54779053 58.28052139]
[-340.18054199 43.57154846]
[-354.97048950 41.07001877]
[-369.86773682 46.39752960]
[-381.12643433 36.64606857]
[-395.91638184 34.14453888]
[-409.77383423 42.22852707]
[-424.68148804 36.30049896]
[-429.20346069 20.90792847]
[-419.87091064 7.85868025]
[-403.84292603 7.16301918]
[-393.41485596 19.35459709]
[-378.62490845 21.85612869]
[-364.78552246 16.34969330]
[-352.46896362 26.28007698]
[-337.67901611 28.78160858]
[-330.35540771 15.75662518]
[-318.99615479 6.00489616]
[-304.95965576 0.71803844]
[-289.93319702 0.55220383]
[-275.73019409 5.54670763]
[-264.07128906 15.11695290]
[-256.37582397 28.12279129]
[-253.58921814 43.00433350]
[-238.79928589 45.50586319]
[-224.00933838 48.00739670]
[-216.92463684 46.03419113]
[-209.07795715 50.61333847]
[-194.31503296 53.26960754]
[-179.55209351 55.92588043]
[-170.04261780 44.46135330]
[-155.97789001 39.26142502]
[-141.10046387 41.81653595]
[-129.42282104 51.53916931]
[-124.14521790 65.89514923]
[-109.38228607 68.55142212]
[-95.48600006 63.19020844]
[-83.27409363 73.24902344]
[-68.51116180 75.90529633]
[-53.74822235 78.56156921]
[-38.98529053 81.21784210]
[-24.22235489 83.87411499]
[-9.45942116 86.53038025]
[5.30351257 89.18665314]
[20.06644630 91.84292603]
[34.82938004 94.49919891]
[37.88774490 92.83740997]
[41.89185715 92.54680634]
[46.20100403 94.05118561]
[50.01117325 97.47774506]
[64.68338776 100.59642029]
[79.35560608 103.71509552]
[89.15691376 92.36016846]
[83.92832947 78.30094147]
[78.69975281 64.24171448]
[73.47116852 50.18247986]
[59.54150772 42.22357941]
[57.22150803 26.34916115]
[68.29087067 14.73672199]
[84.25813293 16.29433060]
[92.87457275 29.82712364]
[87.53040314 44.95389938]
[92.75897980 59.01313019]
[97.98756409 73.07235718]
[103.21614075 87.13159180]
[107.66019440 72.80503082]
[121.23488617 66.42319489]
[135.10235596 72.14101410]
[140.23411560 86.23587799]
[133.28910828 99.53125000]
[118.78936005 103.37119293]
[132.61730957 109.18392944]
[146.44525146 114.99666595]
[160.27320862 120.80939484]
[174.10115051 126.62213135]
[187.92909241 132.43486023]
[201.75704956 138.24760437]
[215.58499146 144.06033325]
[229.41294861 149.87306213]
[243.24089050 155.68580627]
[257.06884766 161.49853516]
[270.89678955 167.31126404]
[280.35208130 158.59341431]
[292.35263062 154.09965515]
[305.11526489 154.46018982]
[316.75769043 159.58671570]
[325.57604980 168.69059753]
[330.29431152 180.40396118]
[330.24877930 192.98522949]
[343.95196533 199.08627319]
[353.81222534 191.49244690]
[365.89108276 188.80809021]
[377.89901733 191.47955322]
[387.58645630 198.94381714]
[393.16500854 209.74592590]
[393.63757324 221.82223511]
[407.20999146 228.20892334]
[420.78237915 234.59561157]
[429.83105469 235.40844727]
[434.46295166 241.12089539]
[447.96774292 247.64936829]
[461.47250366 254.17784119]
[474.97729492 260.70629883]
[488.48208618 267.23477173]
[501.98684692 273.76324463]
[515.49163818 280.29168701]
[528.99639893 286.82015991]
[542.50122070 293.34863281]
[556.00598145 299.87710571]
[570.77099609 294.91400146]
[584.37377930 301.72717285]
[589.01434326 315.83395386]
[602.51910400 322.36242676]
[616.02386475 328.89089966]
[622.02288818 321.92144775]
[629.24914551 316.24697876]
[637.42864990 312.07885742]
[646.25183105 309.57150269]
[655.38549805 308.81646729]
[664.48522949 309.83923340]
[673.20867920 312.59829712]
[681.22796631 316.98690796]
[688.24255371 322.83703613]
[693.98992920 329.92605591]
[698.25598145 337.98501587]
[700.88262939 346.70886230]
[701.77380371 355.76812744]
[700.89880371 364.82119751]
[698.29364014 373.52731323]
[711.12414551 381.29769897]
[723.95458984 389.06811523]
[736.78503418 396.83853149]
[749.61553955 404.60891724]
[764.78204346 401.05737305]
[777.68328857 409.12045288]
[780.97570801 423.60131836]
[793.80615234 431.37173462]
[806.63659668 439.14212036]
[819.46710205 446.91253662]
[832.29754639 454.68295288]
[845.28790283 462.18295288]
[858.43249512 469.40924072]
[871.57714844 476.63555908]
[889.60040283 470.67825317]
[905.94909668 479.67663574]
[910.40222168 497.46850586]
[923.69531250 504.41793823]
[937.02453613 511.29769897]
[950.38964844 518.10754395]
[963.75476074 524.91741943]
[977.11981201 531.72729492]
[990.48492432 538.53710938]
[995.60241699 538.27203369]
[999.89794922 539.81469727]
[1002.82684326 542.56042480]
[1004.15789795 545.77655029]
[1017.30249023 553.00286865]
[1030.44702148 560.22918701]
[1043.59167480 567.45550537]
[1052.57141113 568.83489990]
[1056.83544922 574.82690430]
[1069.90368652 582.19049072]
[1082.97192383 589.55401611]
[1096.26562500 580.13330078]
[1112.28125000 577.47412109]
[1127.79431152 582.06030273]
[1139.70336914 592.92193604]
[1145.65124512 607.84002686]
[1144.49060059 623.79968262]
[1157.63525391 631.02600098]
[1170.77990723 638.25231934]
[1185.29272461 632.42907715]
[1200.13720703 637.34600830]
[1208.30407715 650.68151855]
[1205.93737793 666.13891602]
[1194.15441895 676.41979980]
[1178.51879883 676.66973877]
[1166.41320801 666.77081299]
[1163.55358887 651.39691162]
[1150.40893555 644.17059326]
[1137.26440430 636.94427490]
[1126.39990234 645.53125000]
[1113.04357910 649.34942627]
[1099.19616699 647.79248047]
[1086.94531250 641.06201172]
[1078.15039062 630.14215088]
[1074.16076660 616.65545654]
[1075.60839844 602.62225342]
[1062.54016113 595.25866699]
[1049.47192383 587.89514160]
[1036.36535645 580.60009766]
[1023.22076416 573.37377930]
[1010.07617188 566.14746094]
[996.93157959 558.92114258]
[983.67504883 551.90222168]
[970.30999756 545.09234619]
[956.94488525 538.28253174]
[943.57977295 531.47265625]
[930.21466064 524.66278076]
[922.86407471 524.42706299]
[916.74584961 517.71099854]
[903.45281982 510.76156616]
[893.61669922 516.43035889]
[882.14697266 516.67138672]
[871.86944580 511.31027222]
[865.37139893 501.56698608]
[864.35083008 489.78015137]
[851.20623779 482.55383301]
[838.06158447 475.32754517]
[835.37353516 475.94305420]
[832.28515625 475.55673218]
[829.16760254 474.01303101]
[826.44091797 471.29022217]
[824.52716064 467.51339722]
[811.69665527 459.74301147]
[798.86621094 451.97259521]
[786.03576660 444.20217896]
[773.20526123 436.43179321]
[758.84692383 440.22299194]
[745.72430420 432.52545166]
[741.84509277 417.43939209]
[729.01464844 409.66897583]
[716.18420410 401.89859009]
[703.35369873 394.12817383]
[690.52325439 386.35775757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 188]
[6 187]
[7 186]
[10 183]
[11 182]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[17 176]
[18 175]
[19 174]
[20 172]
[21 171]
[22 170]
[26 164]
[27 163]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[37 151]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 126]
[45 125]
[46 124]
[47 120]
[48 119]
[49 118]
[50 117]
[51 116]
[52 115]
[53 114]
[54 113]
[55 112]
[57 110]
[58 109]
[63 104]
[64 103]
[65 102]
[66 100]
[67 99]
[68 98]
[76 90]
[77 89]
[79 87]
[80 86]
[127 139]
[128 138]
[129 137]
[130 136]
[203 299]
[204 298]
[205 297]
[206 296]
[207 295]
[210 292]
[211 291]
[212 290]
[213 289]
[214 288]
[215 283]
[216 282]
[217 281]
[220 276]
[221 275]
[222 273]
[223 272]
[224 271]
[225 270]
[226 269]
[230 268]
[231 267]
[232 266]
[233 265]
[235 264]
[236 263]
[237 262]
[243 255]
[244 254]
[245 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
