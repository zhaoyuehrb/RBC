%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUGCCGCAGCGACUCAUCCUAUCGAUAAGGUUCAGUUAGCCAAGGUGGAGGAUGGGAAAAGAAUGGAACUGUCCCAGCUACUCAAUGAGAUCAGGGCAAACUAUGAAAAGAUCCUCACCAGAAAUCAGAUAGAGACGGUGCUCUCAACAAGGAUCCAGCUAG\
) } def
/len { sequence length } bind def

/coor [
[114.82092285 233.66011047]
[105.31708527 245.55955505]
[91.79196930 252.55891418]
[76.58888245 253.44551086]
[62.34185028 248.06571960]
[51.51926422 237.35163879]
[45.99620056 223.15954590]
[46.72956085 207.94830322]
[53.59228516 194.35334778]
[65.39537048 184.73008728]
[80.09385681 180.74580383]
[82.35621643 165.91740417]
[84.61858368 151.08898926]
[68.95250702 143.39039612]
[56.60960388 131.04750061]
[48.91100693 115.38141632]
[34.08259583 117.64378357]
[19.25418854 119.90614319]
[4.42577982 122.16851044]
[-10.40262890 124.43087006]
[-25.23103714 126.69323730]
[-40.05944824 128.95559692]
[-54.88785553 131.21797180]
[-62.94118118 135.62350464]
[-70.01802826 133.38008118]
[-84.88659668 135.36141968]
[-99.75515747 137.34275818]
[-105.68093109 151.44355774]
[-117.78913879 160.62442017]
[-132.76747131 162.49949646]
[-146.58085632 156.66458130]
[-155.55848694 144.77896118]
[-170.42704773 146.76029968]
[-185.29562378 148.74165344]
[-200.16418457 150.72299194]
[-211.01338196 162.54138184]
[-227.00709534 161.28408813]
[-235.87631226 147.91560364]
[-230.81732178 132.69107056]
[-215.71096802 127.28946686]
[-202.14552307 135.85443115]
[-187.27696228 133.87309265]
[-172.40840149 131.89173889]
[-157.53982544 129.91040039]
[-151.98789978 116.08861542]
[-140.18449402 106.84007263]
[-125.23781586 104.72742462]
[-111.14799500 110.41719818]
[-101.73650360 122.47419739]
[-86.86793518 120.49285126]
[-71.99937439 118.51150513]
[-57.15021896 116.38955688]
[-42.32181168 114.12719727]
[-27.49340248 111.86483002]
[-12.66499329 109.60246277]
[2.16341543 107.34010315]
[16.99182320 105.07773590]
[31.82023239 102.81536865]
[46.64864349 100.55300903]
[47.86613846 88.65390778]
[51.70383072 77.32505035]
[57.96884155 67.13581085]
[66.34629059 58.59829330]
[76.41514587 52.14158630]
[87.66934967 48.09019089]
[99.54328156 46.64773178]
[101.52462769 31.77916336]
[103.50596619 16.91059685]
[105.48731232 2.04203057]
[96.11292267 -7.66605663]
[94.08519745 -20.81112671]
[99.92481232 -32.54389954]
[111.29148102 -38.66665268]
[113.55384827 -53.49506378]
[115.81620789 -68.32347107]
[118.07857513 -83.15187836]
[120.34093475 -97.98028564]
[109.49967194 -105.08700562]
[102.19081116 -115.73628998]
[99.47750092 -128.31631470]
[101.73056030 -140.93930054]
[108.57826996 -151.72477722]
[118.96712494 -159.07968140]
[131.32382202 -161.93371582]
[134.14569092 -176.66589355]
[136.96755981 -191.39807129]
[134.00891113 -208.09185791]
[149.23127747 -215.55618286]
[160.61785889 -202.99505615]
[151.69973755 -188.57620239]
[148.87786865 -173.84402466]
[146.05599976 -159.11184692]
[159.46319580 -148.36773682]
[165.63858032 -132.23977661]
[162.80682373 -115.11373901]
[151.65516663 -101.69550323]
[135.16934204 -95.71792603]
[132.90698242 -80.88951874]
[130.64462280 -66.06110382]
[128.38224792 -51.23270035]
[126.11988831 -36.40428925]
[136.64987183 -23.31653023]
[134.43373108 -6.32533264]
[120.35588074 4.02337551]
[118.37453461 18.89194107]
[116.39318848 33.76050949]
[114.41184998 48.62907410]
[127.23035431 54.11774445]
[138.18890381 62.74036407]
[146.53900146 73.90797424]
[151.71029663 86.85777283]
[153.34956360 100.70523834]
[151.34483337 114.50453949]
[165.06336975 120.57099152]
[178.78189087 126.63744354]
[192.50042725 132.70388794]
[206.21896362 138.77033997]
[219.93750000 144.83679199]
[234.12232971 149.71435547]
[248.67063904 153.36766052]
[263.21896362 157.02096558]
[277.76727295 160.67427063]
[286.25396729 151.42741394]
[297.80667114 146.71011353]
[310.19564819 147.36619568]
[321.05807495 153.20872498]
[328.34857178 163.06755066]
[330.72439575 175.02307129]
[345.12405396 179.22430420]
[359.82611084 172.80331421]
[373.94497681 180.42152405]
[376.64984131 196.23490906]
[365.86578369 208.11279297]
[349.86541748 206.94346619]
[340.92282104 193.62394714]
[326.52319336 189.42271423]
[313.11489868 200.86216736]
[295.36999512 202.00633240]
[280.34106445 192.21247864]
[274.11395264 175.22257996]
[259.56564331 171.56927490]
[245.01733398 167.91596985]
[230.46902466 164.26266479]
[239.28088379 176.40148926]
[240.26594543 191.36911011]
[233.12097168 204.55809021]
[220.04537964 211.90852356]
[205.06417847 211.15774536]
[192.78898621 202.53686523]
[186.99841309 188.69961548]
[189.47497559 173.90548706]
[199.45631409 162.70846558]
[213.87104797 158.55532837]
[200.15251160 152.48887634]
[186.43397522 146.42242432]
[172.71543884 140.35597229]
[158.99691772 134.28952026]
[145.27838135 128.22306824]
[133.22195435 141.74894714]
[117.33403778 150.45993042]
[99.44699097 153.35136414]
[97.18463135 168.17976379]
[94.92226410 183.00817871]
[107.76392365 191.19424438]
[116.16038513 203.89933777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 163]
[12 162]
[13 161]
[16 59]
[17 58]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[25 51]
[26 50]
[27 49]
[32 44]
[33 43]
[34 42]
[35 41]
[66 107]
[67 106]
[68 105]
[69 104]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[84 92]
[85 91]
[86 90]
[113 158]
[114 157]
[115 156]
[116 155]
[117 154]
[118 153]
[119 143]
[120 142]
[121 141]
[122 140]
[128 136]
[129 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
