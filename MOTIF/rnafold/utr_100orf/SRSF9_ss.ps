%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGACCCCUUCGCUUCCGCUCCGCGUUCCCACAAUGCAGUGCGGCUGAGCGCCUCGGAGCCCGCGGGGACGCUGCGGGGGGACCCGUGCUGAGGCGGCGGCGGCGACGUGGGCUGCGGCGGGCCCGCGGCGUCGGGCGGUGCGGAUGUCGGGCUGGGCGGACGAGCGCGGCGGCGAGGGCGACGGGCGCAUCUACGUGGGGAACCUUCCGACCGACGUGCGCGAGAAGGACUUGGAGGACCUGU\
) } def
/len { sequence length } bind def

/coor [
[607.79571533 945.44427490]
[616.24920654 932.73596191]
[629.38378906 924.96130371]
[628.05004883 910.02075195]
[626.71630859 895.08013916]
[625.38256836 880.13952637]
[613.82659912 870.81243896]
[612.26116943 855.67956543]
[622.12268066 843.62182617]
[620.78894043 828.68121338]
[619.45520020 813.74066162]
[618.12152100 798.80004883]
[616.78778076 783.85949707]
[611.37963867 769.86834717]
[602.31768799 757.91503906]
[593.25579834 745.96166992]
[584.19390869 734.00836182]
[570.33929443 728.54046631]
[568.16802979 712.86895752]
[559.10614014 700.91558838]
[550.04418945 688.96228027]
[540.98229980 677.00897217]
[531.84460449 665.11346436]
[522.63140869 653.27636719]
[513.41821289 641.43927002]
[504.20501709 629.60217285]
[494.99182129 617.76507568]
[485.77865601 605.92797852]
[476.56546021 594.09082031]
[467.35226440 582.25372314]
[454.03021240 587.00769043]
[439.86993408 587.41900635]
[426.25326538 583.43426514]
[414.51321411 575.42980957]
[405.80328369 564.17602539]
[400.98419189 550.76348877]
[400.53881836 536.49700928]
[404.52383423 522.76879883]
[412.56295776 510.92269897]
[403.50106812 498.96936035]
[394.43917847 487.01605225]
[385.37728882 475.06271362]
[371.52264404 469.59478760]
[369.35137939 453.92330933]
[360.28945923 441.96997070]
[351.22756958 430.01663208]
[342.16567993 418.06329346]
[325.76135254 418.91833496]
[311.94616699 409.72775269]
[306.28323364 393.95419312]
[311.19458008 377.75677490]
[301.98138428 365.91964722]
[292.76818848 354.08255005]
[283.55502319 342.24545288]
[274.34182739 330.40832520]
[265.05352783 318.63006592]
[255.69053650 306.91110229]
[241.70129395 301.79733276]
[239.13211060 286.18612671]
[229.76911926 274.46716309]
[214.98423767 273.07333374]
[205.32188416 261.32199097]
[206.88410950 245.82369995]
[197.52111816 234.10473633]
[188.15812683 222.38575745]
[178.79512024 210.66679382]
[169.43212891 198.94781494]
[160.06912231 187.22885132]
[150.70613098 175.50987244]
[135.92124939 174.11602783]
[126.25889587 162.36471558]
[127.82112885 146.86640930]
[118.45812988 135.14744568]
[109.09513092 123.42847443]
[99.73213196 111.70950317]
[88.37887573 101.90626526]
[75.42040253 94.35125732]
[62.46193695 86.79624939]
[49.50347137 79.24124146]
[36.54500580 71.68624115]
[20.15263939 72.15782928]
[11.77955914 58.05734634]
[20.03927040 43.89015961]
[36.43489075 44.23025513]
[44.10001373 58.72777176]
[57.05847931 66.28277588]
[70.01694489 73.83778381]
[82.97541046 81.39279175]
[95.93387604 88.94779968]
[105.44516754 77.34886169]
[95.49832916 66.12120056]
[85.55149078 54.89353943]
[75.60465240 43.66587830]
[60.57561111 35.81958389]
[63.95481873 19.20581436]
[80.85477448 17.85381317]
[86.83231354 33.71903992]
[96.77915192 44.94670105]
[106.72599030 56.17436218]
[116.67282867 67.40202332]
[123.12790680 63.58338928]
[142.49314880 52.12749481]
[137.44261169 38.00333023]
[132.39205933 23.87916565]
[127.34152222 9.75500011]
[122.29098511 -4.36916494]
[107.56507111 -9.63048267]
[99.71093750 -23.15256119]
[102.43706512 -38.55068588]
[114.45625305 -48.55433273]
[130.09342957 -48.44009018]
[141.96516418 -38.26189423]
[144.46601868 -22.82558250]
[136.41514587 -9.41970539]
[141.46569824 4.70445919]
[146.51623535 18.82862473]
[151.56677246 32.95278931]
[156.61730957 47.07695389]
[111.45110321 102.34650421]
[120.81410217 114.06547546]
[130.17710876 125.78444672]
[139.54010010 137.50341797]
[155.00093079 139.40095520]
[164.32939148 151.41903687]
[162.42509460 166.14688110]
[171.78810120 177.86584473]
[181.15109253 189.58482361]
[190.51409912 201.30378723]
[199.87709045 213.02276611]
[209.24008179 224.74172974]
[218.60308838 236.46070862]
[234.06390381 238.35824585]
[243.39237976 250.37632751]
[241.48808289 265.10415649]
[250.85108948 276.82312012]
[265.51004028 282.77508545]
[267.40951538 297.54809570]
[276.77252197 309.26705933]
[284.55465698 314.00347900]
[286.17892456 321.19515991]
[295.39212036 333.03225708]
[304.60531616 344.86935425]
[313.81851196 356.70648193]
[323.03167725 368.54357910]
[336.72216797 367.06317139]
[349.25936890 372.49200439]
[357.41656494 383.31649780]
[359.15200806 396.64984131]
[354.11901855 409.00140381]
[363.18090820 420.95474243]
[372.24279785 432.90808105]
[381.30468750 444.86138916]
[395.80749512 451.18429565]
[397.33062744 466.00082397]
[406.39251709 477.95416260]
[415.45440674 489.90747070]
[424.51629639 501.86080933]
[439.72509766 497.07720947]
[455.62545776 497.79370117]
[470.29284668 503.90509033]
[481.95819092 514.65435791]
[489.22146606 528.72637939]
[491.21948242 544.40869141]
[487.72854614 559.79992676]
[479.18936157 573.04052734]
[488.40255737 584.87762451]
[497.61575317 596.71478271]
[506.82894897 608.55187988]
[516.04211426 620.38897705]
[525.25531006 632.22607422]
[534.46850586 644.06317139]
[543.68170166 655.90026855]
[551.40295410 660.73529053]
[552.93566895 667.94708252]
[561.99755859 679.90039062]
[571.05944824 691.85369873]
[580.12133789 703.80706787]
[594.62414551 710.12994385]
[596.14727783 724.94647217]
[605.20916748 736.89978027]
[614.27105713 748.85314941]
[623.33294678 760.80645752]
[636.18853760 748.45605469]
[652.49902344 751.83941650]
[658.46929932 766.13134766]
[671.61572266 773.35430908]
[687.43634033 773.21832275]
[694.86517334 786.12811279]
[708.01159668 793.35107422]
[721.15802002 800.57403564]
[734.30444336 807.79699707]
[750.12506104 807.66101074]
[757.55389404 820.57080078]
[770.70031738 827.79376221]
[780.92272949 824.16564941]
[791.24462891 826.69714355]
[798.32971191 834.32214355]
[800.02441406 844.36950684]
[812.98284912 851.92456055]
[828.80181885 852.19097900]
[835.89990234 865.28552246]
[848.85833740 872.84057617]
[861.81683350 880.39556885]
[874.77526855 887.95056152]
[891.50402832 890.70477295]
[893.48840332 907.54223633]
[877.85833740 914.11010742]
[867.22027588 900.90905762]
[854.26177979 893.35400391]
[841.30334473 885.79901123]
[828.34484863 878.24401855]
[813.45275879 878.51794434]
[805.42785645 864.88299561]
[792.46942139 857.32800293]
[773.16394043 858.63629150]
[763.47735596 840.94018555]
[750.33093262 833.71722412]
[735.45062256 834.36981201]
[727.08148193 820.94342041]
[713.93505859 813.72045898]
[700.78863525 806.49749756]
[687.64221191 799.27453613]
[672.76190186 799.92718506]
[664.39276123 786.50079346]
[651.24633789 779.27783203]
[642.53106689 783.79577637]
[631.72833252 782.52575684]
[633.06207275 797.46630859]
[634.39581299 812.40692139]
[635.72955322 827.34753418]
[637.06329346 842.28808594]
[648.90460205 852.40844727]
[650.04437256 867.57928467]
[640.32318115 878.80584717]
[641.65692139 893.74639893]
[642.99066162 908.68701172]
[644.32440186 923.62756348]
[658.62841797 928.95281982]
[669.19915771 939.96289062]
[673.93780518 954.47174072]
[671.90356445 969.59869385]
[663.50018311 982.34020996]
[650.39630127 990.16650391]
[635.19366455 991.52368164]
[620.91070557 986.14215088]
[610.38342285 975.09051514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 237]
[4 236]
[5 235]
[6 234]
[9 231]
[10 230]
[11 229]
[12 228]
[13 227]
[14 182]
[15 181]
[16 180]
[17 179]
[19 177]
[20 176]
[21 175]
[22 174]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[39 157]
[40 156]
[41 155]
[42 154]
[44 152]
[45 151]
[46 150]
[47 149]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 138]
[57 137]
[59 135]
[60 134]
[63 131]
[64 130]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[72 122]
[73 121]
[74 120]
[75 119]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[90 100]
[91 99]
[92 98]
[93 97]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[185 225]
[186 224]
[188 222]
[189 221]
[190 220]
[191 219]
[193 217]
[194 216]
[198 214]
[199 213]
[201 211]
[202 210]
[203 209]
[204 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
