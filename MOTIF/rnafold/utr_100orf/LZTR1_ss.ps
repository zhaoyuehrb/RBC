%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGUCAGCGCAGGGCUCGCCGGGAAAUGUGGUUUCUCCAGCCGGCCCGGGGCGGUGGCCGCAAGUUGGGCUUACAGCGCGGCCGAUCCGGCGUGGACCCGGGAUGGCUGGACCGGGCAGCACGGGGGGGCAGAUCGGGGCUGCGGCCCUGGCAGGCGGCGCGCGGUCCAAGGUAGCCCCGAGCGUGGACUUCGACCAUAGCU\
) } def
/len { sequence length } bind def

/coor [
[83.79172516 269.94384766]
[90.04589844 256.15386963]
[100.44062805 245.14349365]
[113.84835815 238.10705566]
[111.54748535 223.28457642]
[109.24661255 208.46209717]
[99.64862061 197.07228088]
[105.17752075 182.24858093]
[102.87664795 167.42610168]
[100.57576752 152.60362244]
[98.27489471 137.78114319]
[81.60581207 133.04609680]
[68.79817963 121.37374115]
[62.54068756 105.21444702]
[64.14695740 87.96048737]
[51.15657425 80.46048737]
[38.16619492 72.96048737]
[23.07734871 76.82888794]
[10.01009560 69.03776550]
[6.41515779 54.62902069]
[-6.57522345 47.12902069]
[-19.56560516 39.62902069]
[-32.55598450 32.12902069]
[-47.52753448 33.05243301]
[-59.49779510 42.09195328]
[-71.46805573 51.13147354]
[-83.43830872 60.17099380]
[-95.40856934 69.21051025]
[-104.40473938 83.58080292]
[-120.70381927 78.91430664]
[-120.73171997 61.96038055]
[-104.44808960 57.24025345]
[-92.47782898 48.20073318]
[-80.50756836 39.16121292]
[-68.53731537 30.12169456]
[-56.56705475 21.08217621]
[-55.98970032 6.09329081]
[-67.22913361 -3.84024167]
[-78.46857452 -13.77377415]
[-89.70800781 -23.70730591]
[-100.94744110 -33.64083862]
[-112.18688202 -43.57437134]
[-123.42631531 -53.50790405]
[-134.66575623 -63.44143677]
[-150.13008118 -66.78287506]
[-154.54266357 -81.00885010]
[-165.78208923 -90.94238281]
[-177.02153015 -100.87591553]
[-188.26097107 -110.80944824]
[-199.50039673 -120.74298096]
[-210.73983765 -130.67651367]
[-222.35328674 -140.17007446]
[-234.32354736 -149.20959473]
[-246.36305237 -158.15667725]
[-258.47109985 -167.01078796]
[-270.71405029 -175.67739868]
[-283.08901978 -184.15444946]
[-295.46398926 -192.63148499]
[-307.83892822 -201.10853577]
[-320.21389771 -209.58558655]
[-332.58886719 -218.06262207]
[-344.96383667 -226.53967285]
[-351.52426147 -227.42926025]
[-355.97866821 -230.96977234]
[-357.58383179 -235.47320557]
[-369.69189453 -244.32731628]
[-381.79992676 -253.18142700]
[-393.90795898 -262.03555298]
[-409.48480225 -259.36392212]
[-422.33999634 -268.55740356]
[-424.84677124 -284.16162109]
[-415.51791382 -296.91888428]
[-399.88806152 -299.26052856]
[-387.23013306 -289.79733276]
[-385.05386353 -274.14358521]
[-372.94583130 -265.28945923]
[-360.83776855 -256.43536377]
[-348.72973633 -247.58123779]
[-336.48678589 -238.91464233]
[-324.11181641 -230.43759155]
[-311.73684692 -221.96054077]
[-299.36190796 -213.48350525]
[-286.98693848 -205.00645447]
[-274.61196899 -196.52940369]
[-262.23699951 -188.05235291]
[-257.45608521 -188.03517151]
[-252.63639832 -185.01068115]
[-249.61698914 -179.11883545]
[-237.50894165 -170.26472473]
[-230.25003052 -168.85324097]
[-225.28402710 -161.17985535]
[-213.31376648 -152.14033508]
[-212.73696899 -167.12924194]
[-200.75297546 -176.15054321]
[-186.18927002 -172.55909729]
[-179.77355957 -159.00038147]
[-186.23168945 -145.46182251]
[-200.80630493 -141.91595459]
[-189.56686401 -131.98242188]
[-178.32743835 -122.04888916]
[-167.08799744 -112.11535645]
[-155.84855652 -102.18182373]
[-144.60913086 -92.24829102]
[-129.94871521 -89.61736298]
[-124.73222351 -74.68087006]
[-113.49278259 -64.74733734]
[-102.25334930 -54.81380844]
[-91.01391602 -44.88027573]
[-79.77447510 -34.94674301]
[-68.53504181 -25.01321030]
[-57.29560471 -15.07967854]
[-46.05616760 -5.14614582]
[-25.05598450 19.13863945]
[-12.06560421 26.63863945]
[0.92477673 34.13863754]
[13.91515827 41.63863754]
[28.19096756 37.54757309]
[41.47190094 44.96858597]
[45.66619492 59.97010803]
[58.65657425 67.47010803]
[71.64695740 74.97010803]
[82.69606781 66.37018585]
[96.11676025 62.37938309]
[110.06967163 63.54465485]
[122.64247894 69.70629883]
[132.11204529 80.01982880]
[137.18049622 93.07173157]
[152.17872620 93.30272675]
[167.17694092 93.53371429]
[182.17517090 93.76470184]
[197.17338562 93.99569702]
[206.96270752 85.59176636]
[219.45346069 86.09611511]
[227.96836853 94.69306946]
[242.96125793 95.15499115]
[257.95413208 95.61692047]
[273.96728516 86.53034210]
[288.51754761 96.33717346]
[303.51574707 96.56816864]
[318.51397705 96.79915619]
[333.51220703 97.03014374]
[348.51040649 97.26113892]
[363.50863647 97.49212646]
[378.50686646 97.72311401]
[393.50509644 97.95410919]
[408.50463867 98.06960297]
[423.50463867 98.06960297]
[438.50463867 98.06960297]
[453.50418091 97.95410919]
[468.50241089 97.72311401]
[482.29113770 88.84602356]
[496.74752808 96.58845520]
[497.00006104 112.98565674]
[482.78897095 121.16959381]
[468.73339844 112.72133636]
[453.73519897 112.95233154]
[447.09185791 116.20041656]
[438.50463867 113.06960297]
[423.50463867 113.06960297]
[408.50463867 113.06960297]
[401.81207275 116.21501160]
[393.27407837 112.95233154]
[378.27587891 112.72133636]
[363.27764893 112.49034882]
[348.27941895 112.25935364]
[333.28121948 112.02836609]
[318.28298950 111.79737854]
[303.28475952 111.56638336]
[288.28652954 111.33539581]
[279.38369751 119.52992249]
[266.88296509 119.45687103]
[257.49221802 110.60980225]
[242.49932861 110.14788055]
[227.50643921 109.68595123]
[212.51879883 118.81034088]
[196.94239807 108.99391937]
[181.94416809 108.76292419]
[166.94595337 108.53193665]
[151.94773865 108.30094910]
[136.94950867 108.06995392]
[132.26118469 119.73846436]
[124.00626373 129.22480774]
[113.09738159 135.48027039]
[115.39825439 150.30274963]
[117.69912720 165.12522888]
[120.00000000 179.94770813]
[129.76257324 192.39772034]
[124.06909180 206.16120911]
[126.36996460 220.98370361]
[128.67083740 235.80618286]
[143.58074951 238.44689941]
[156.82414246 245.78796387]
[166.96447754 257.03305054]
[172.90182495 270.96240234]
[173.99212646 286.06506348]
[170.11711121 300.70278931]
[161.69712830 313.28778076]
[149.64549255 322.45495605]
[135.26950073 327.20989990]
[120.12854004 327.03683472]
[105.86498260 321.95452881]
[94.02604675 312.51431274]
[85.89591980 299.74011230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[8 186]
[9 185]
[10 184]
[11 183]
[15 121]
[16 120]
[17 119]
[20 116]
[21 115]
[22 114]
[23 113]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[37 112]
[38 111]
[39 110]
[40 109]
[41 108]
[42 107]
[43 106]
[44 105]
[46 103]
[47 102]
[48 101]
[49 100]
[50 99]
[51 98]
[52 92]
[53 91]
[54 89]
[55 88]
[56 85]
[57 84]
[58 83]
[59 82]
[60 81]
[61 80]
[62 79]
[65 78]
[66 77]
[67 76]
[68 75]
[127 180]
[128 179]
[129 178]
[130 177]
[131 176]
[134 174]
[135 173]
[136 172]
[138 169]
[139 168]
[140 167]
[141 166]
[142 165]
[143 164]
[144 163]
[145 162]
[146 160]
[147 159]
[148 158]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
