%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCACUGCUGUGCAGGGCAGGAAAGCUCCACACACACAGCCCAGCAAACAGCAGCACGCUGCUGAAAAAAAGACUCAGAGGAGAGAGAUAAGGAAGGAAAGUAGUGAUGGAUCUCAUCCCAAACUUGGCCGUGGAAACCUGGCUUCUCCUGGCUGUCAGCCUGAUACUCCUCUAUCUAUAUGGAACCCGUACACAUGGACUUUUUA\
) } def
/len { sequence length } bind def

/coor [
[409.43151855 609.78295898]
[416.43304443 600.33770752]
[407.91204834 587.99298096]
[399.39108276 575.64819336]
[390.87011719 563.30346680]
[379.03088379 560.81457520]
[371.83117676 550.59765625]
[373.57733154 537.81665039]
[365.24377441 525.34460449]
[356.91021729 512.87255859]
[348.57666016 500.40054321]
[342.24530029 496.58456421]
[340.21310425 487.67660522]
[332.06884766 475.08010864]
[323.92462158 462.48364258]
[315.78039551 449.88714600]
[304.02172852 447.04183960]
[297.13388062 436.61212158]
[299.26525879 423.88970947]
[291.31219482 411.17166138]
[283.35913086 398.45361328]
[275.40606689 385.73556519]
[267.45303345 373.01751709]
[259.40414429 360.35989380]
[251.25991821 347.76339722]
[243.11567688 335.16690063]
[234.97143555 322.57043457]
[226.82720947 309.97393799]
[212.27551270 313.37005615]
[197.41206360 311.57931519]
[184.03306580 304.79867554]
[173.76203918 293.82928467]
[167.85267639 279.98193359]
[167.03599548 264.92025757]
[171.42980957 250.46115112]
[180.52229309 238.35527039]
[172.37805176 225.75878906]
[164.23381042 213.16229248]
[150.82603455 206.67533875]
[149.83076477 190.88546753]
[141.68653870 178.28897095]
[133.54229736 165.69248962]
[120.13452148 159.20552063]
[119.13925171 143.41564941]
[110.99501801 130.81916809]
[97.67646790 134.56838989]
[83.21249390 132.49031067]
[70.16595459 124.32792664]
[61.09062958 110.94831848]
[58.04319000 94.27937317]
[43.24973679 91.79869843]
[28.45628357 89.31801605]
[13.66283226 86.83734131]
[-1.13062000 84.35665894]
[-15.92407227 81.87597656]
[-31.08893776 88.11768341]
[-43.90987778 77.89244843]
[-41.19781113 61.71911240]
[-25.74267578 56.23542404]
[-13.44339275 67.08252716]
[1.35005951 69.56320953]
[16.14351082 72.04388428]
[30.93696404 74.52456665]
[45.73041534 77.00524139]
[60.52386856 79.48592377]
[66.02359009 74.38660431]
[54.23041534 65.11724854]
[42.43724060 55.84788513]
[30.64406776 46.57852554]
[15.95591068 43.53582382]
[5.83157730 32.46794891]
[4.10624981 17.56750298]
[11.43349648 4.47890377]
[25.03769493 -1.83978069]
[39.76546097 1.00502133]
[50.03779602 11.93567467]
[51.96350479 26.81124115]
[60.31668472 39.27014923]
[68.66986084 51.72906113]
[77.02304077 64.18797302]
[82.52275848 59.08865356]
[81.16527557 44.15020370]
[77.27127838 35.88470459]
[79.90184784 28.97615623]
[78.77014160 14.01890945]
[77.52550507 -0.92936450]
[76.16802216 -15.86781311]
[74.81053925 -30.80626106]
[73.45305634 -45.74470901]
[72.09557343 -60.68315887]
[57.24780655 -63.41196060]
[43.68736267 -70.04649353]
[32.42052078 -80.09441376]
[24.28335190 -92.81011963]
[19.87968826 -107.25000763]
[19.53631401 -122.34254456]
[23.27870560 -136.96775818]
[30.82915688 -150.04037476]
[41.62736893 -160.59031677]
[54.87205124 -167.83470154]
[69.58035278 -171.23594666]
[84.66082001 -170.54165649]
[98.99438477 -165.80335999]
[111.51740265 -157.37266541]
[121.30058289 -145.87518311]
[127.61794281 -132.16410828]
[130.00070190 -117.25689697]
[128.27203369 -102.25975037]
[122.56021881 -88.28556824]
[113.28911591 -76.37132263]
[101.14669800 -67.40113068]
[87.03401947 -62.04064178]
[88.39150238 -47.10219193]
[89.74898529 -32.16374588]
[91.10646820 -17.22529602]
[92.46395874 -2.28684759]
[96.20082855 4.09153175]
[93.72738647 12.88720036]
[94.85909271 27.84444618]
[96.10372925 42.79272079]
[97.46121216 57.73117065]
[120.50345612 65.72541809]
[134.07577515 84.26483154]
[134.64178467 105.82160950]
[123.59149933 122.67493439]
[131.73573303 135.27142334]
[145.72604370 142.65937805]
[146.13877869 157.54826355]
[154.28302002 170.14474487]
[162.42726135 182.74122620]
[176.41755676 190.12918091]
[176.83030701 205.01806641]
[184.97453308 217.61454773]
[193.11877441 230.21102905]
[207.88978577 226.88801575]
[222.87834167 228.81550598]
[236.27787781 235.74172974]
[246.48001099 246.81361389]
[252.26762390 260.68173218]
[252.95999146 275.66491699]
[248.49281311 289.95382690]
[239.42369080 301.82971191]
[247.56793213 314.42617798]
[255.71215820 327.02267456]
[263.85638428 339.61917114]
[272.00064087 352.21563721]
[279.28976440 357.72476196]
[280.17108154 365.06445312]
[288.12414551 377.78250122]
[296.07717896 390.50054932]
[304.03024292 403.21859741]
[311.98330688 415.93667603]
[328.44055176 424.19503784]
[328.37686157 441.74291992]
[336.52111816 454.33938599]
[344.66534424 466.93588257]
[352.80957031 479.53237915]
[361.04870605 492.06698608]
[369.38226318 504.53903198]
[377.71582031 517.01110840]
[386.04937744 529.48309326]
[402.74853516 537.24066162]
[403.21487427 554.78247070]
[411.73583984 567.12719727]
[420.25680542 579.47198486]
[428.77780151 591.81671143]
[447.09292603 588.28063965]
[465.06091309 593.09753418]
[479.07427979 605.25402832]
[486.33984375 622.26812744]
[485.43521118 640.69549561]
[476.58712769 656.82678223]
[485.83792114 668.63458252]
[495.08868408 680.44232178]
[504.33947754 692.25006104]
[513.59027100 704.05780029]
[528.98907471 703.63092041]
[541.53991699 712.25244141]
[546.54821777 726.44329834]
[542.29101562 740.69158936]
[551.54174805 752.49932861]
[560.79254150 764.30706787]
[570.04333496 776.11486816]
[579.29412842 787.92260742]
[593.82196045 796.66198730]
[589.44586182 813.04144287]
[572.49505615 813.37060547]
[567.48638916 797.17340088]
[558.23559570 785.36560059]
[548.98480225 773.55786133]
[539.73400879 761.75012207]
[530.48321533 749.94238281]
[515.63012695 750.66607666]
[503.05020142 742.40716553]
[497.68283081 728.15777588]
[501.78250122 713.30859375]
[492.53170776 701.50085449]
[483.28094482 689.69311523]
[474.03015137 677.88531494]
[464.77935791 666.07757568]
[453.87536621 669.98791504]
[442.29351807 670.69128418]
[430.95886230 668.12078857]
[420.77978516 662.47131348]
[412.57516479 654.18505859]
[407.00836182 643.91668701]
[404.53390503 632.48187256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 166]
[3 165]
[4 164]
[5 163]
[8 161]
[9 160]
[10 159]
[11 158]
[13 157]
[14 156]
[15 155]
[16 154]
[19 152]
[20 151]
[21 150]
[22 149]
[23 148]
[24 146]
[25 145]
[26 144]
[27 143]
[28 142]
[36 134]
[37 133]
[38 132]
[40 130]
[41 129]
[42 128]
[44 126]
[45 125]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[81 121]
[82 120]
[84 119]
[85 118]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[172 200]
[173 199]
[174 198]
[175 197]
[176 196]
[180 192]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
