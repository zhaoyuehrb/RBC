%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCCAGACAGCGCACGGCGGGAGGCUGUCGUUGGGCGUGCGCAGCUGCAGCGGCGGUUGAGGUCAAGUAGUAGCGUUGGGCUGCGGCAGCGGAGGAGCUCAACAUGCGUGAGUGUAUCUCUAUCCACGUGGGGCAGGCAGGAGUCCAGAUCGGCAAUGCCUGCUGGGAACUGUACUGCCUGGAACAUGGAAUUCAGCCCGAUG\
) } def
/len { sequence length } bind def

/coor [
[91.09452057 221.36666870]
[95.80937195 235.60639954]
[92.18281555 250.16140747]
[81.33792877 260.52423096]
[66.63318634 263.48571777]
[52.62237930 258.12875366]
[43.64441299 246.11224365]
[42.47942734 231.15841675]
[34.07468414 243.58259583]
[25.66994286 256.00677490]
[17.26519775 268.43096924]
[8.86045551 280.85513306]
[0.45571163 293.27932739]
[8.17969513 306.44375610]
[9.41836452 321.65655518]
[3.92577958 335.89712524]
[-7.20750237 346.33804321]
[-21.77095985 350.90625000]
[-36.87300873 348.69470215]
[-49.51512527 340.14254761]
[-57.18720627 326.94778442]
[-58.36595917 311.73022461]
[-52.81733704 297.51138306]
[-41.64302444 287.11441040]
[-27.06169128 282.60357666]
[-11.96846962 284.87457275]
[-3.56372643 272.45037842]
[4.84101677 260.02621460]
[13.24575996 247.60203552]
[21.65050316 235.17784119]
[30.05524635 222.75366211]
[37.58824158 209.78239441]
[44.21401978 196.32508850]
[50.83980179 182.86778259]
[57.46558380 169.41047668]
[64.09136200 155.95317078]
[70.71714020 142.49586487]
[77.34292603 129.03855896]
[67.10894012 119.16947174]
[61.11754227 105.76353455]
[60.55405045 90.62353516]
[65.84651947 75.93047333]
[52.59753418 68.89737701]
[39.34855270 61.86428452]
[23.53152275 62.22784424]
[15.91777229 49.42628098]
[2.66878867 42.39318466]
[-10.58019543 35.36009216]
[-23.82917976 28.32699585]
[-37.07816315 21.29390144]
[-50.32714844 14.26080608]
[-63.57612991 7.22771120]
[-76.82511139 0.19461608]
[-90.17980957 -6.63561583]
[-103.63711548 -13.26139641]
[-117.09442139 -19.88717651]
[-130.55172729 -26.51295662]
[-141.08789062 -15.65734863]
[-154.46391296 -8.59070015]
[-169.36930847 -6.00533009]
[-184.34382629 -8.15452671]
[-197.92041016 -14.82773399]
[-208.76895142 -25.37117958]
[-215.82662964 -38.75192261]
[-218.40202332 -53.65905380]
[-216.24278259 -68.63212585]
[-209.56048584 -82.20423126]
[-199.00978088 -93.04570770]
[-185.62429810 -100.09442902]
[-170.71545410 -102.65982056]
[-155.74382019 -100.49055481]
[-142.17620850 -93.79916382]
[-131.34179688 -83.24118805]
[-124.30204773 -69.85099792]
[-121.74665070 -54.94042587]
[-123.92594147 -39.97026062]
[-110.46864319 -33.34448242]
[-97.01133728 -26.71870041]
[-83.55403137 -20.09292030]
[-78.82093048 -20.75703812]
[-73.62083435 -18.45214462]
[-69.79202271 -13.05436802]
[-56.54303741 -6.02127314]
[-43.29405212 1.01182199]
[-30.04506874 8.04491711]
[-16.79608345 15.07801151]
[-3.54710031 22.11110687]
[9.70188332 29.14420128]
[22.95086670 36.17729568]
[37.82024002 35.31068039]
[46.38164520 48.61529922]
[59.63063049 55.64839554]
[72.87961578 62.68148804]
[86.28600311 55.95328522]
[88.56471252 41.12738037]
[90.84342194 26.30147552]
[93.12213898 11.47556973]
[84.96893311 -6.95766211]
[97.70336151 -21.50528717]
[99.52887726 -36.39378738]
[101.35439301 -51.28229141]
[103.17990875 -66.17079163]
[105.00543213 -81.05929565]
[94.20709229 -92.36991119]
[93.25701141 -107.97859955]
[102.60377502 -120.51542664]
[117.83412933 -124.06088257]
[131.75677490 -116.94090271]
[137.79785156 -102.51733398]
[133.10496521 -87.60054016]
[119.89392853 -79.23377991]
[118.06841278 -64.34527588]
[116.24289703 -49.45677185]
[114.41738129 -34.56827164]
[112.59186554 -19.67976952]
[119.58570099 -12.22337723]
[121.35589600 -1.93180454]
[117.07948303 7.83535719]
[107.94804382 13.75428009]
[105.66933441 28.58018684]
[103.39061737 43.40609360]
[101.11190796 58.23199844]
[119.71966553 65.04646301]
[132.39607239 79.23057556]
[136.70481873 96.94430542]
[151.59332275 98.76982117]
[166.48182678 100.59533691]
[181.37033081 102.42086029]
[196.00956726 96.42057037]
[207.70059204 105.64927673]
[222.58909607 107.47479248]
[240.76510620 98.76324463]
[255.69432068 111.04809570]
[270.63156128 112.41872406]
[285.56881714 113.78935242]
[300.50607300 115.15998077]
[315.44329834 116.53060150]
[330.38055420 117.90122986]
[345.32781982 119.15791321]
[360.28424072 120.30059052]
[375.24066162 121.44326782]
[390.19705200 122.58594513]
[399.34329224 112.69530487]
[412.32675171 109.92000580]
[424.35925293 115.05438232]
[431.13452148 126.01724243]
[446.07177734 127.38787079]
[461.00900269 128.75849915]
[475.94625854 130.12911987]
[490.88351440 131.49974060]
[500.17950439 121.74974060]
[513.20379639 119.17276001]
[525.15655518 124.49002838]
[531.76385498 135.55493164]
[546.67846680 137.15319824]
[561.59307861 138.75144958]
[577.98632812 134.42720032]
[586.67962646 148.98268127]
[575.09954834 161.36564636]
[559.99481201 153.66606140]
[545.08026123 152.06781006]
[530.16564941 150.46954346]
[517.53942871 161.57618713]
[500.45037842 160.08706665]
[489.51287842 146.43699646]
[474.57565308 145.06637573]
[459.63839722 143.69573975]
[444.70114136 142.32511902]
[429.76388550 140.95448303]
[417.30850220 152.25238037]
[400.19876099 151.02404785]
[389.05438232 137.54235840]
[374.09796143 136.39967346]
[359.14157104 135.25700378]
[344.18515015 134.11433411]
[337.27355957 136.74029541]
[329.00994873 132.83847046]
[314.07269287 131.46784973]
[299.13543701 130.09722900]
[284.19818115 128.72659302]
[269.26095581 127.35597229]
[254.32369995 125.98534393]
[247.08406067 133.20332336]
[236.85125732 135.28654480]
[226.95822144 131.30998230]
[220.76358032 122.36329651]
[205.87507629 120.53778076]
[192.30076599 126.66864777]
[179.54481506 117.30935669]
[164.65631104 115.48384094]
[149.76780701 113.65832520]
[134.87930298 111.83280945]
[130.88029480 120.07458496]
[124.97100830 127.07453156]
[117.51699829 132.39962769]
[108.97937775 135.72047424]
[99.88628387 136.83161926]
[90.80022430 135.66435242]
[84.17444611 149.12165833]
[77.54866791 162.57894897]
[70.92288971 176.03625488]
[64.29710388 189.49356079]
[57.67132568 202.95086670]
[51.04554367 216.40817261]
[64.61202240 210.00889587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[32 204]
[33 203]
[34 202]
[35 201]
[36 200]
[37 199]
[38 198]
[42 93]
[43 92]
[44 91]
[46 89]
[47 88]
[48 87]
[49 86]
[50 85]
[51 84]
[52 83]
[53 82]
[54 79]
[55 78]
[56 77]
[57 76]
[94 122]
[95 121]
[96 120]
[97 119]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
[125 192]
[126 191]
[127 190]
[128 189]
[130 187]
[131 186]
[133 182]
[134 181]
[135 180]
[136 179]
[137 178]
[138 177]
[139 175]
[140 174]
[141 173]
[142 172]
[146 169]
[147 168]
[148 167]
[149 166]
[150 165]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
