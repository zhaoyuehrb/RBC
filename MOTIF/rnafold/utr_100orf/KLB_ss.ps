%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUCAGUCUCCCAGUUCAAGCUAAUCAUUGACAGAGCUUUACAAUCACAAGCUUUUACUGAAGCUUUGAUAAGACAGUCCAGCAGUUGGUGGCAAAUGAAGCCAGGCUGUGCGGCAGGAUCUCCAGGGAAUGAAUGGAUUUUCUUCAGCACUGAUGAAAUAACCACACGCUAUAGGAAUACAAUGUCCAACGGGG\
) } def
/len { sequence length } bind def

/coor [
[187.15037537 283.86267090]
[173.93431091 273.24325562]
[180.48014832 257.60394287]
[180.95606995 242.61149597]
[181.43199158 227.61904907]
[181.90791321 212.62658691]
[168.34591675 206.95741272]
[157.70881653 196.73835754]
[151.45739746 183.32151794]
[150.46867371 168.50144958]
[154.91296387 154.27520752]
[143.27076721 144.81692505]
[131.62857056 135.35862732]
[119.98636627 125.90033722]
[98.96201324 132.69869995]
[78.41117096 124.58058167]
[66.19252777 133.28143311]
[63.28495026 145.85478210]
[52.91996002 152.84918213]
[40.96441650 150.96409607]
[28.60926628 159.47000122]
[16.25411797 167.97589111]
[3.89896965 176.48179626]
[-8.45617867 184.98768616]
[-6.06203842 200.06187439]
[-10.45365715 214.67955017]
[-20.75907516 225.93836975]
[-34.93214798 231.60289001]
[-50.15879440 230.54841614]
[-63.41576004 222.98431396]
[-72.07086182 210.41244507]
[-74.40562439 195.32896423]
[-69.95647430 180.72868347]
[-59.60680008 169.51054382]
[-45.41152954 163.90187073]
[-30.18915176 165.01629639]
[-16.96207619 172.63253784]
[-4.60692835 164.12664795]
[7.74822044 155.62074280]
[20.10336876 147.11485291]
[32.45851898 138.60894775]
[39.12979889 122.38238525]
[57.49167633 121.06279755]
[69.71031952 112.36193848]
[62.48582458 103.02963257]
[58.52782059 90.45038605]
[44.20428467 85.99658203]
[29.88075256 81.54277802]
[15.55721951 77.08896637]
[6.42243052 77.52858734]
[1.04277349 72.44920349]
[-13.20829296 67.76869965]
[-27.45936012 63.08819962]
[-41.71042633 58.40769958]
[-55.96149445 53.72719955]
[-70.21256256 49.04669571]
[-84.46363068 44.36619568]
[-100.39559174 48.25263596]
[-111.53020477 36.21301270]
[-106.41312408 20.63265610]
[-90.30836487 17.53930092]
[-79.78312683 30.11512756]
[-65.53205872 34.79562759]
[-51.28099060 39.47613144]
[-37.02992630 44.15663147]
[-22.77885818 48.83713531]
[-8.52779198 53.51763535]
[5.72327518 58.19813919]
[20.01102448 62.76543427]
[34.33456039 67.21923828]
[48.65809250 71.67304993]
[62.98162460 76.12685394]
[68.94983673 71.58477783]
[55.11449051 65.78968811]
[53.21541977 50.91038895]
[65.15167999 41.82602310]
[78.98713684 47.62086105]
[80.88626862 62.50063324]
[86.85448456 57.95856094]
[86.37856293 42.96611404]
[85.90264130 27.97366524]
[74.66034698 17.19180679]
[74.39126587 1.98055315]
[84.73940277 -8.67081642]
[84.26348114 -23.66326332]
[83.78756714 -38.65571213]
[83.31164551 -53.64815903]
[82.83572388 -68.64060974]
[82.35980988 -83.63305664]
[79.19604492 -89.45804596]
[79.42292023 -95.15000916]
[82.11426544 -99.10708618]
[82.11426544 -114.10708618]
[82.11426544 -129.10708618]
[82.11426544 -144.10708618]
[70.01968384 -154.01945496]
[67.17706299 -169.39649963]
[74.92860413 -182.97764587]
[89.61426544 -188.35029602]
[104.29992676 -182.97764587]
[112.05146790 -169.39649963]
[109.20884705 -154.01945496]
[97.11426544 -144.10708618]
[97.11426544 -129.10708618]
[97.11426544 -114.10708618]
[97.11426544 -99.10708618]
[97.35225677 -84.10897827]
[97.82817841 -69.11652374]
[98.30409241 -54.12408066]
[98.78001404 -39.13162994]
[99.25593567 -24.13918304]
[99.73184967 -9.14673519]
[110.73470306 0.82687014]
[111.43093109 16.02456474]
[100.89508820 27.49774551]
[101.37100983 42.49019623]
[101.84693146 57.48264313]
[110.36184692 63.81818008]
[116.09693146 71.51892853]
[126.27457428 60.50005722]
[129.35772705 44.39334106]
[144.93482971 39.26638794]
[156.98150635 50.39336395]
[153.10516357 66.32778931]
[137.29344177 70.67769623]
[127.11580658 81.69657135]
[132.63182068 97.66613007]
[129.44465637 114.25814056]
[141.08685303 123.71643066]
[152.72904968 133.17472839]
[164.37124634 142.63301086]
[179.70158386 134.61956787]
[196.92694092 133.71998596]
[212.91644287 140.05642700]
[224.78103638 152.43962097]
[230.39550781 168.59176636]
[228.77906799 185.56552124]
[242.00086975 192.64958191]
[255.22267151 199.73364258]
[268.44448853 206.81771851]
[281.66625977 213.90177917]
[295.21017456 220.34870911]
[309.04550171 226.14387512]
[322.88079834 231.93905640]
[336.71612549 237.73423767]
[350.55142212 243.52940369]
[365.02917480 237.78199768]
[378.97760010 243.85621643]
[384.36764526 257.69396973]
[398.20297241 263.48913574]
[412.03826904 269.28430176]
[424.25512695 265.12597656]
[435.66311646 270.24572754]
[440.36459351 281.39852905]
[454.10623169 287.41247559]
[463.23345947 287.98806763]
[468.01696777 293.63241577]
[481.66146851 299.86364746]
[495.70233154 292.97976685]
[510.87066650 296.78189087]
[520.00439453 309.47476196]
[518.79089355 325.06518555]
[507.80310059 336.19186401]
[492.22915649 337.60107422]
[479.42257690 328.62750244]
[475.43023682 313.50811768]
[461.78573608 307.27688599]
[448.09225464 301.15411377]
[434.35064697 295.14016724]
[417.04522705 298.02645874]
[406.24310303 283.11962891]
[392.40777588 277.32446289]
[378.57247925 271.52926636]
[364.92941284 277.39462280]
[350.81588745 271.71459961]
[344.75625610 257.36471558]
[330.92092896 251.56954956]
[317.08563232 245.77436829]
[303.25030518 239.97918701]
[289.41500854 234.18402100]
[294.01559448 248.46107483]
[287.30438232 261.87597656]
[273.12017822 266.75537109]
[259.57638550 260.30825806]
[254.42005920 246.22236633]
[260.60061646 232.55487061]
[274.58221436 227.12358093]
[261.36041260 220.03952026]
[248.13861084 212.95544434]
[234.91680908 205.87138367]
[221.69500732 198.78730774]
[214.69116211 205.55046082]
[206.25933838 210.41857910]
[196.90036011 213.10250854]
[196.42443848 228.09495544]
[195.94851685 243.08740234]
[195.47259521 258.07986450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[6 194]
[11 131]
[12 130]
[13 129]
[14 128]
[16 44]
[17 43]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[46 72]
[47 71]
[48 70]
[49 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[79 117]
[80 116]
[81 115]
[84 112]
[85 111]
[86 110]
[87 109]
[88 108]
[89 107]
[92 106]
[93 105]
[94 104]
[95 103]
[119 126]
[120 125]
[137 191]
[138 190]
[139 189]
[140 188]
[141 187]
[142 180]
[143 179]
[144 178]
[145 177]
[146 176]
[149 173]
[150 172]
[151 171]
[154 169]
[155 168]
[157 167]
[158 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
