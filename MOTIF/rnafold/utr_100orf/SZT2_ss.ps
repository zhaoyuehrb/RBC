%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUGCUGGGUGCCGAGGUAGCGAGGUCAGGGGUCAAGAGUGGAACACCCUCACUGGCCCGGGCCGGCGCGGGAGGGCUGUGUGAUGGCCUCGGAGCGCCCGGAGCCGGAGGUGGAAGAAGCUGGGCAGGUGUUCCUGUUAAUGAAAAAGGAUUAUCGAAUCUCCCGAAAUGUUCGCCUGGCUU\
) } def
/len { sequence length } bind def

/coor [
[336.38665771 209.38558960]
[321.50094604 211.23370361]
[308.83267212 203.20159912]
[304.15499878 188.94960022]
[309.59957886 174.97261047]
[322.68469238 167.64025879]
[308.26968384 163.49209595]
[293.85464478 159.34393311]
[279.43963623 155.19577026]
[265.02462769 151.04760742]
[250.60960388 146.89944458]
[236.19458008 142.75128174]
[221.77955627 138.60311890]
[207.29618835 134.70033264]
[192.74862671 131.04405212]
[178.20106506 127.38776398]
[163.65348816 123.73148346]
[149.10592651 120.07520294]
[134.55836487 116.41891479]
[125.15763092 128.82629395]
[111.59248352 136.46197510]
[96.10840607 138.06201172]
[81.26850891 133.36154175]
[69.52928925 123.13865662]
[62.83396530 109.08555603]
[47.84748077 109.72217560]
[32.86099625 110.35879517]
[17.87450981 110.99541473]
[8.57774639 119.95748138]
[-3.93248367 120.16695404]
[-12.92750168 112.05751801]
[-27.92263603 112.43955994]
[-42.91777039 112.82160187]
[-57.91290283 113.20365143]
[-72.90803528 113.58569336]
[-87.90317535 113.96773529]
[-103.36919403 123.94244385]
[-118.45166779 114.99008942]
[-133.43815613 115.62670898]
[-148.42463684 116.26332855]
[-156.88827515 119.76084900]
[-163.67056274 116.78132629]
[-178.66569519 117.16336823]
[-192.36431885 126.17889404]
[-206.89794922 118.58247375]
[-207.31562805 102.18864441]
[-193.18768311 93.86197662]
[-179.04774475 102.16823578]
[-164.05259705 101.78619385]
[-149.06124878 101.27684021]
[-134.07476807 100.64022827]
[-119.08828735 100.00360870]
[-110.66442871 91.30234528]
[-98.16883087 90.66220856]
[-88.28521729 98.97260284]
[-73.29008484 98.59056091]
[-58.29494858 98.20851898]
[-43.29981232 97.82646942]
[-28.30467987 97.44442749]
[-13.30954647 97.06238556]
[1.13051248 87.10696411]
[17.23789215 96.00892639]
[32.22437668 95.37230682]
[47.21086121 94.73569489]
[62.19734573 94.09907532]
[65.83625793 82.77500153]
[72.77696228 73.11566162]
[64.37733459 60.68801498]
[55.97771454 48.26037216]
[47.57809448 35.83272552]
[39.17847061 23.40508270]
[30.77885056 10.97743702]
[15.36408997 6.53168583]
[9.36235523 -8.34644413]
[17.37766457 -22.24372292]
[33.26135635 -24.49934959]
[44.82882309 -13.38299942]
[43.20649338 2.57781553]
[51.60611725 15.00546074]
[60.00573730 27.43310547]
[68.40535736 39.86074829]
[76.80498505 52.28839493]
[85.20460510 64.71604156]
[100.24115753 61.74031448]
[115.23900604 64.90534973]
[127.79095459 73.70314789]
[135.88240051 86.72164917]
[138.21464539 101.87135315]
[152.76222229 105.52763367]
[167.30978394 109.18392181]
[181.85734558 112.84020233]
[196.40490723 116.49649048]
[210.95246887 120.15277100]
[217.44122314 118.70447540]
[222.86451721 120.49692535]
[225.92771912 124.18810272]
[240.34274292 128.33625793]
[254.75776672 132.48442078]
[269.17279053 136.63258362]
[283.58779907 140.78074646]
[298.00280762 144.92890930]
[312.41784668 149.07707214]
[326.83285522 153.22523499]
[341.46881104 156.50981140]
[356.27404785 158.91920471]
[371.07928467 161.32859802]
[385.88452148 163.73799133]
[392.22705078 161.74462891]
[397.78283691 163.07067871]
[401.14804077 166.48878479]
[415.86291504 169.39953613]
[430.57778931 172.31027222]
[445.29266357 175.22100830]
[460.00753784 178.13174438]
[474.72241211 181.04248047]
[489.43728638 183.95321655]
[497.49444580 172.32695007]
[509.34072876 164.67651367]
[523.16687012 162.13093567]
[536.87628174 165.04264832]
[548.40283203 172.93901062]
[556.02215576 184.59873962]
[558.60992432 198.24064636]
[573.27325439 201.40083313]
[587.93658447 204.56101990]
[602.59991455 207.72120667]
[619.45172119 195.18038940]
[639.80041504 199.05043030]
[650.56341553 216.40460205]
[665.40740967 218.56224060]
[680.25140381 220.71987915]
[695.09539795 222.87753296]
[709.86505127 217.20574951]
[721.34698486 226.69331360]
[736.19097900 228.85095215]
[751.03503418 231.00859070]
[765.87902832 233.16622925]
[774.81555176 220.74058533]
[788.50817871 213.90164185]
[803.81036377 214.22090149]
[817.20581055 221.62503052]
[825.61627197 234.41259766]
[827.10919189 249.64512634]
[821.34149170 263.82226562]
[809.63848877 273.68624878]
[794.68945312 276.97039795]
[779.92962646 272.92001343]
[768.75061035 262.46588135]
[763.72137451 248.01023865]
[748.87738037 245.85260010]
[734.03338623 243.69496155]
[719.18933105 241.53730774]
[705.48150635 247.36343384]
[692.93780518 237.72154236]
[678.09375000 235.56388855]
[663.24975586 233.40625000]
[648.40576172 231.24861145]
[642.96282959 238.91918945]
[635.04455566 244.10162354]
[625.72320557 246.04342651]
[616.27978516 244.43444824]
[608.02807617 239.45552063]
[602.13153076 231.75920105]
[599.43969727 222.38453674]
[584.77636719 219.22434998]
[570.11303711 216.06416321]
[555.44970703 212.90397644]
[545.89099121 225.69635010]
[531.66119385 233.07125854]
[515.58172607 233.50939941]
[500.86544800 226.87257385]
[490.47509766 214.44128418]
[486.52655029 198.66810608]
[471.81167603 195.75735474]
[457.09680176 192.84661865]
[442.38192749 189.93588257]
[427.66705322 187.02514648]
[412.95217896 184.11441040]
[398.23730469 181.20367432]
[383.47512817 178.54321289]
[368.66989136 176.13381958]
[353.86465454 173.72442627]
[339.05941772 171.31503296]
[347.75665283 183.53627014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 103]
[7 102]
[8 101]
[9 100]
[10 99]
[11 98]
[12 97]
[13 96]
[14 93]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[25 65]
[26 64]
[27 63]
[28 62]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[38 52]
[39 51]
[40 50]
[42 49]
[43 48]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[104 183]
[105 182]
[106 181]
[107 180]
[110 179]
[111 178]
[112 177]
[113 176]
[114 175]
[115 174]
[116 173]
[123 167]
[124 166]
[125 165]
[126 164]
[129 157]
[130 156]
[131 155]
[132 154]
[134 152]
[135 151]
[136 150]
[137 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
