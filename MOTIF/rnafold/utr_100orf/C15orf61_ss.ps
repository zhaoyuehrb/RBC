%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGGGGGCGCGCUUGCGCGCCAGCGGCUGCGGACACCAGCCUGCGUCCCCGGCGCGGCGGGCCAUGGAGGCCCUGAGGAGGGCCCACGAGGUCGCGCUCCGCCUGCUGCUGUGUAGGCCGUGGGCCUCGCGCGCCGCCGCCCGCCCCAAGCCCAGCGCCUCGG\
) } def
/len { sequence length } bind def

/coor [
[93.32038116 335.76870728]
[80.16952515 325.06863403]
[86.81091309 309.46963501]
[87.37853241 294.48037720]
[87.94615936 279.49111938]
[88.51377869 264.50189209]
[89.08139801 249.51261902]
[89.64902496 234.52336121]
[86.74697113 227.69015503]
[90.37187958 219.25659180]
[91.22306061 204.28076172]
[92.07424164 189.30493164]
[92.50000000 174.31097412]
[92.50000000 159.31097412]
[92.50000000 144.31097412]
[92.50000000 129.31097412]
[92.50000000 114.31097412]
[82.66400146 105.97614288]
[81.30083466 91.55640411]
[66.43226624 93.53775024]
[51.56370163 95.51909637]
[36.69513321 97.50044250]
[21.82656860 99.48178101]
[14.91206646 111.07125092]
[2.75668764 116.47045135]
[-10.09585094 113.90701294]
[-18.98147774 104.54031372]
[-33.88487625 106.23992920]
[-46.71948242 115.49106598]
[-60.24148560 109.24569702]
[-75.14488220 110.94531250]
[-90.04827881 112.64492035]
[-104.95168304 114.34453583]
[-119.85507965 116.04415131]
[-127.37713623 129.61611938]
[-141.45420837 136.14419556]
[-156.67337036 133.11820984]
[-167.18254089 121.70169067]
[-168.94075012 106.28454590]
[-161.27191162 92.79497528]
[-147.12484741 86.41999054]
[-131.93940735 89.61090851]
[-121.55469513 101.14075470]
[-106.65129852 99.44113922]
[-91.74789429 97.74152374]
[-76.84449768 96.04190826]
[-61.94109726 94.34229279]
[-50.17248535 85.21272278]
[-35.58449173 91.33653259]
[-20.68109322 89.63691711]
[-10.80746746 76.04715729]
[6.17114735 73.73657990]
[19.84522247 84.61322021]
[34.71379089 82.63187408]
[49.58235550 80.65052795]
[64.45092010 78.66918182]
[79.31948853 76.68783569]
[92.60639954 69.72666168]
[102.69948578 58.63028336]
[112.79257965 47.53390884]
[122.88566589 36.43753052]
[132.97874451 25.34115410]
[143.07183838 14.24477768]
[153.16493225 3.14840078]
[152.59677124 -12.41806793]
[162.99066162 -23.52759171]
[177.83441162 -23.97331810]
[187.92750549 -35.06969452]
[198.02058411 -46.16607285]
[195.20994568 -68.95150757]
[210.08995056 -85.88727570]
[207.54737854 -100.67021179]
[205.00480652 -115.45315552]
[202.46223450 -130.23609924]
[199.91966248 -145.01902771]
[197.37707520 -159.80197144]
[186.47859192 -172.05575562]
[191.89755249 -187.53370667]
[208.05938721 -190.31343079]
[218.33819580 -177.53540039]
[212.16001892 -162.34454346]
[214.70259094 -147.56161499]
[217.24516296 -132.77867126]
[219.78775024 -117.99572754]
[222.33032227 -103.21279144]
[224.87289429 -88.42984772]
[230.50926208 -87.20475006]
[235.76216125 -84.82219696]
[240.39685059 -81.38865662]
[253.19386292 -89.21402740]
[265.99087524 -97.03939819]
[278.78787231 -104.86477661]
[291.58489990 -112.69014740]
[304.38189697 -120.51551819]
[317.17892456 -128.34089661]
[322.89938354 -135.52009583]
[330.29299927 -136.19061279]
[343.23580933 -143.77241516]
[356.17861938 -151.35421753]
[358.32995605 -162.07295227]
[365.88790894 -169.66452026]
[376.16580200 -171.77452087]
[385.69488525 -167.93882751]
[398.91534424 -175.02542114]
[412.13580322 -182.11201477]
[425.35623169 -189.19860840]
[438.57669067 -196.28520203]
[451.79711914 -203.37179565]
[456.12646484 -218.57154846]
[469.97607422 -226.18496704]
[485.12921143 -221.69515991]
[492.59576416 -207.76583862]
[487.94601440 -192.66102600]
[473.93853760 -185.34214783]
[458.88372803 -190.15135193]
[445.66326904 -183.06475830]
[432.44284058 -175.97816467]
[419.22238159 -168.89157104]
[406.00192261 -161.80497742]
[392.78149414 -154.71838379]
[383.87295532 -137.58554077]
[363.76040649 -138.41140747]
[350.81759644 -130.82960510]
[337.87478638 -123.24781036]
[325.00430298 -115.54387665]
[312.20727539 -107.71850586]
[299.41027832 -99.89313507]
[286.61325073 -92.06776428]
[273.81625366 -84.24238586]
[261.01922607 -76.41701508]
[248.22221375 -68.59164429]
[248.91166687 -56.06339264]
[243.90412903 -44.45770264]
[234.17504883 -36.24401093]
[221.71376038 -33.20999146]
[209.11695862 -36.07298279]
[199.02388000 -24.97660828]
[188.93078613 -13.88023090]
[189.88957214 0.93922704]
[179.81181335 12.33631134]
[164.26130676 13.24148846]
[154.16821289 24.33786583]
[144.07513428 35.43424225]
[133.98204041 46.53062057]
[123.88895416 57.62699509]
[113.79586792 68.72337341]
[103.70277405 79.81974792]
[118.12952423 97.24836731]
[107.50000000 114.31097412]
[107.50000000 129.31097412]
[107.50000000 144.31097412]
[107.50000000 159.31097412]
[107.50000000 174.31097412]
[110.15969086 178.90481567]
[110.70585632 183.58802795]
[109.46528625 187.53034973]
[107.05007172 190.15611267]
[106.19889069 205.13194275]
[105.34770966 220.10777283]
[104.63827515 235.09098816]
[104.07065582 250.08024597]
[103.50303650 265.06948853]
[102.93540955 280.05874634]
[102.36779022 295.04800415]
[101.80017090 310.03726196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[10 159]
[11 158]
[12 157]
[13 153]
[14 152]
[15 151]
[16 150]
[17 149]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[27 50]
[28 49]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[67 138]
[68 137]
[69 136]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[97 124]
[98 123]
[99 122]
[103 120]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
