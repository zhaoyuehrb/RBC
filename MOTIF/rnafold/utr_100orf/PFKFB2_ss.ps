%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCCGGCCACAAGCUGUCGGCUCGGUUCGGUCGCGUUACAGGGCAGGCGCCGGGGCCAAGGCAGGGAGGGAUCUUAGGAGAGAUCGUAGGACAUCUGAAGAGCUGCCAUGUCUGGGGCAUCUUCCUCAGAACAGAACAACAACAGCUAUGAAACCAAAACCCCAAAUCUUCGAAUGUCAGAGAAGAAAUGUUCAUGGGCCUCCUACA\
) } def
/len { sequence length } bind def

/coor [
[-47.59294128 200.09376526]
[-59.32041550 209.44610596]
[-71.04788971 218.79846191]
[-82.77536011 228.15080261]
[-94.50283051 237.50315857]
[-106.23030090 246.85549927]
[-117.95777893 256.20785522]
[-129.68524170 265.56018066]
[-141.41271973 274.91253662]
[-126.42847443 275.59991455]
[-114.63807678 284.87280273]
[-110.43860626 299.27297974]
[-115.39622498 313.43002319]
[-127.66204071 322.06423950]
[-142.66165161 321.95559692]
[-154.80110168 313.14459229]
[-159.55314636 298.91723633]
[-155.14559937 284.57952881]
[-167.90580750 292.46478271]
[-180.66600037 300.35003662]
[-188.33816528 314.18652344]
[-203.23237610 314.29507446]
[-215.99256897 322.18032837]
[-228.75277710 330.06558228]
[-241.51296997 337.95086670]
[-249.18513489 351.78735352]
[-264.07934570 351.89590454]
[-276.83953857 359.78115845]
[-285.18630981 376.19454956]
[-302.73425293 376.03570557]
[-315.37506104 384.11096191]
[-322.44485474 398.90792847]
[-338.81311035 399.91387939]
[-347.64160156 386.09396362]
[-339.84832764 371.66494751]
[-323.45034790 371.47012329]
[-310.80950928 363.39486694]
[-307.90048218 351.65283203]
[-297.43463135 344.82186890]
[-284.72479248 347.02096558]
[-271.96459961 339.13571167]
[-265.20513916 325.86322021]
[-249.39822388 325.19064331]
[-236.63803101 317.30538940]
[-223.87782288 309.42013550]
[-211.11763000 301.53488159]
[-204.35816956 288.26239014]
[-188.55125427 287.58984375]
[-175.79106140 279.70458984]
[-163.03085327 271.81933594]
[-150.76506042 263.18505859]
[-139.03759766 253.83271790]
[-127.31011963 244.48037720]
[-115.58264923 235.12802124]
[-103.85517883 225.77568054]
[-92.12770844 216.42332458]
[-80.40023041 207.07098389]
[-68.67276001 197.71864319]
[-56.94528961 188.36628723]
[-60.16191864 176.14775085]
[-58.51214218 163.57394409]
[-52.20603180 152.51760864]
[-42.14981461 144.63894653]
[-29.81578064 141.13630676]
[-17.02678490 142.56410217]
[-5.68684244 148.74531555]
[6.31516075 139.74798584]
[18.31716347 130.75065613]
[30.31916809 121.75333405]
[42.32117081 112.75600433]
[54.32317352 103.75867462]
[55.55597687 88.80941772]
[45.19004059 77.96749878]
[34.82410049 67.12557220]
[24.45816040 56.28365326]
[14.09221935 45.44173050]
[3.72627997 34.59980774]
[-12.15802002 30.52291298]
[-16.30827141 14.65762329]
[-4.45505238 3.32478499]
[11.20806217 8.18265152]
[14.56820297 24.23386574]
[24.93414307 35.07579041]
[35.30008316 45.91771317]
[45.66602325 56.75963593]
[56.03196335 67.60155487]
[66.39790344 78.44348145]
[76.16598511 69.14316559]
[88.21021271 63.81485748]
[101.02985382 62.88934326]
[113.10327911 66.26274872]
[123.06850433 73.33320618]
[135.07051086 64.33588409]
[147.07250977 55.33855057]
[159.07450867 46.34122467]
[171.07652283 37.34389496]
[177.47749329 22.87537575]
[192.30201721 21.43215370]
[204.30401611 12.43482494]
[216.30601501 3.43749666]
[228.30802917 -5.55983162]
[240.31002808 -14.55716038]
[252.31202698 -23.55448914]
[262.83898926 -34.24013138]
[271.65579224 -46.37538528]
[280.47256470 -58.51063919]
[289.28933716 -70.64589691]
[281.28933716 -90.46607971]
[286.86077881 -110.96105194]
[303.58026123 -123.83839417]
[324.54837036 -123.99024200]
[332.24188232 -136.86697388]
[339.93536377 -149.74371338]
[347.53231812 -162.67762756]
[355.03231812 -175.66799927]
[362.53231812 -188.65838623]
[370.03231812 -201.64877319]
[377.53231812 -214.63914490]
[385.03231812 -227.62953186]
[380.70028687 -242.82850647]
[388.45727539 -256.59820557]
[403.70123291 -260.76931763]
[417.38812256 -252.86715698]
[421.39782715 -237.57997131]
[413.35140991 -223.97737122]
[398.02270508 -220.12953186]
[390.52270508 -207.13914490]
[383.02270508 -194.14877319]
[375.52270508 -181.15838623]
[368.02270508 -168.16799927]
[360.52270508 -155.17762756]
[359.90060425 -147.81260681]
[352.81210327 -142.05021667]
[345.11859131 -129.17347717]
[337.42510986 -116.29675293]
[343.07662964 -109.19001770]
[346.57339478 -100.78501892]
[347.63586426 -91.72025299]
[346.16995239 -82.68819427]
[342.27517700 -74.38233948]
[336.23806763 -67.44399261]
[328.51113892 -62.41275787]
[319.67889404 -59.68455887]
[310.41372681 -59.48052597]
[301.42459106 -61.82911682]
[292.60781860 -49.69386292]
[283.79104614 -37.55860519]
[274.97424316 -25.42335129]
[288.35644531 -32.19958115]
[303.09497070 -34.98800659]
[318.02767944 -33.56874084]
[331.97702026 -28.05370522]
[343.84304810 -18.87778282]
[352.69006348 -6.76454210]
[357.82040405 7.33083057]
[358.82955933 22.29684639]
[355.63790894 36.95336151]
[348.49716187 50.14464188]
[337.97042847 60.83049011]
[324.88772583 68.16827393]
[310.28073120 71.57937622]
[295.30123901 70.79480743]
[281.13052368 65.87644958]
[268.88595581 57.21212387]
[259.53308105 45.48506165]
[253.80944824 31.61999702]
[252.16638184 16.71025848]
[254.73342896 1.93154931]
[261.30935669 -11.55248547]
[249.30735779 -2.55515695]
[237.30535889 6.44217157]
[225.30334473 15.43949986]
[213.30134583 24.43682861]
[201.29934692 33.43415833]
[195.75683594 47.25912476]
[180.07385254 49.34589767]
[168.07183838 58.34322739]
[156.06983948 67.34055328]
[144.06784058 76.33788300]
[132.06582642 85.33521271]
[134.93484497 95.22190857]
[134.82597351 105.51589203]
[131.74850464 115.33969879]
[125.96475220 123.85592651]
[134.59901428 136.12171936]
[143.23326111 148.38751221]
[158.84518433 150.84580994]
[168.07853699 163.67237854]
[165.45532227 179.25744629]
[152.53184509 188.35466003]
[136.97538757 185.56681824]
[128.01530457 172.54788208]
[130.96746826 157.02177429]
[122.33321381 144.75598145]
[113.69895935 132.49018860]
[104.96994781 135.69276428]
[95.50846863 136.53910828]
[85.95292664 134.86796570]
[76.97492981 130.69142151]
[69.23216248 124.20097351]
[63.32050323 115.76068115]
[51.31850052 124.75800323]
[39.31649399 133.75534058]
[27.31449318 142.75267029]
[15.31248951 151.74998474]
[3.31048608 160.74731445]
[5.81707954 178.14062500]
[-0.79670668 194.32536316]
[-14.62553120 204.87738037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 59]
[2 58]
[3 57]
[4 56]
[5 55]
[6 54]
[7 53]
[8 52]
[9 51]
[18 50]
[19 49]
[20 48]
[22 46]
[23 45]
[24 44]
[25 43]
[27 41]
[28 40]
[30 37]
[31 36]
[66 206]
[67 205]
[68 204]
[69 203]
[70 202]
[71 201]
[72 87]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
[92 180]
[93 179]
[94 178]
[95 177]
[96 176]
[98 174]
[99 173]
[100 172]
[101 171]
[102 170]
[103 169]
[104 148]
[105 147]
[106 146]
[107 145]
[111 135]
[112 134]
[113 133]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[184 195]
[185 194]
[186 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
