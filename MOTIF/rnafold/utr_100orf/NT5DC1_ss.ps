%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCGUCCGGCCCGGUCCUGUCCCGCAGCGUCCCGCCAGCCAGCUCCUUGCACCCUUCGCGGCCGAGGCGCUCCCUGGUGCUCCCCGCGCAGCCAUGGCUCAGCACUUCUCCCUGGCCGCCUGCGACGUGGUCGGAUUCGACCUGGACCACACUCUGUGUCGCUACAACCUGCCCGAGAGCGCCCCGCUCAUUU\
) } def
/len { sequence length } bind def

/coor [
[80.10398102 194.87648010]
[77.00098419 209.55201721]
[73.89798737 224.22755432]
[70.79499817 238.90309143]
[76.39093018 254.31794739]
[65.63355255 266.69577026]
[49.58913040 263.30334473]
[44.76279068 247.63049316]
[56.11945724 235.80009460]
[59.22245407 221.12455750]
[62.32544708 206.44902039]
[65.42844391 191.77348328]
[68.05644226 166.52708435]
[84.71217346 156.46386719]
[83.51131439 141.51202393]
[82.31046295 126.56016541]
[75.25141907 124.02642059]
[61.13332748 118.95892334]
[54.07427979 116.42517853]
[43.63904190 127.20041656]
[33.20380402 137.97566223]
[22.76856613 148.75090027]
[16.09294128 164.33526611]
[-0.73037553 162.23471069]
[-3.36906695 145.48735046]
[11.99332523 138.31565857]
[22.42856407 127.54042053]
[32.86380005 116.76518250]
[43.29904175 105.98993683]
[68.11701202 61.46302795]
[112.45175171 58.82563400]
[108.64693451 44.31620789]
[104.84211731 29.80678749]
[101.03730011 15.29736328]
[90.60205841 4.52212334]
[76.22204590 0.25420967]
[61.84202576 -4.01370430]
[47.46200562 -8.28161812]
[33.08198929 -12.54953194]
[18.70197105 -16.81744576]
[4.92920208 -9.54086876]
[-9.59338284 -14.07398891]
[-16.44561005 -27.24906349]
[-30.82562828 -31.51697731]
[-45.20564651 -35.78488922]
[-60.63690186 -32.29391861]
[-70.63665009 -43.33267975]
[-85.01667023 -47.60059357]
[-99.39669037 -51.86850739]
[-113.77670288 -56.13642120]
[-128.15672302 -60.40433502]
[-139.85447693 -54.95131683]
[-151.74925232 -58.81104279]
[-157.62619019 -69.39295959]
[-171.93595886 -73.89080048]
[-185.83033752 -66.35942078]
[-200.95663452 -70.93877411]
[-208.34069824 -84.91200256]
[-203.60168457 -99.98905182]
[-189.55116272 -107.22496033]
[-174.52507019 -102.32680511]
[-167.43811035 -88.20056915]
[-153.12834167 -83.70272064]
[-136.23579407 -88.43799591]
[-123.88880920 -74.78435516]
[-109.50879669 -70.51644135]
[-95.12877655 -66.24852753]
[-80.74875641 -61.98061371]
[-66.36873627 -57.71269989]
[-51.96603775 -61.50893784]
[-40.93773270 -50.16490936]
[-26.55771446 -45.89699554]
[-12.17769623 -41.62908173]
[0.75253665 -48.93282318]
[15.39671803 -44.80940247]
[22.96988487 -31.19746399]
[37.34990311 -26.92955017]
[51.72991943 -22.66163635]
[66.10993958 -18.39372253]
[80.48995972 -14.12580776]
[94.86997223 -9.85789394]
[82.35919189 -18.13317299]
[80.03063965 -32.95133209]
[89.40034485 -44.66494370]
[104.36811066 -45.64780426]
[115.18910217 -35.26001740]
[114.81845856 -20.26500511]
[119.54508209 -34.50084305]
[124.15746307 -48.77410126]
[128.65530396 -63.08386612]
[133.15315247 -77.39363098]
[137.65100098 -91.70339966]
[142.14884949 -106.01316071]
[136.56193542 -115.36389923]
[137.04075623 -126.02607727]
[143.18530273 -134.48266602]
[152.76660156 -138.07745361]
[157.72079468 -152.23570251]
[162.67497253 -166.39395142]
[167.62916565 -180.55220032]
[167.51084900 -189.69860840]
[172.77787781 -194.89659119]
[177.95835876 -208.97361755]
[183.13883972 -223.05064392]
[173.75781250 -235.29809570]
[172.51025391 -250.67492676]
[179.79423523 -264.27444458]
[193.28546143 -271.75711060]
[208.67893982 -270.73522949]
[221.06266785 -261.53485107]
[226.48504639 -247.09181213]
[223.21580505 -232.01481628]
[212.29814148 -221.11489868]
[197.21586609 -217.87016296]
[192.03538513 -203.79313660]
[186.85490417 -189.71611023]
[181.78741455 -175.59802246]
[176.83322144 -161.43977356]
[171.87904358 -147.28152466]
[166.92485046 -133.12327576]
[171.91078186 -114.44843292]
[156.45861816 -101.51531219]
[151.96076965 -87.20555115]
[147.46292114 -72.89578247]
[142.96507263 -58.58602142]
[138.46722412 -44.27625656]
[139.46192932 -36.94337463]
[133.78091431 -29.77421951]
[129.05429077 -15.53838253]
[145.20661926 -15.24583530]
[156.18875122 -5.76114798]
[170.49851990 -10.25899410]
[184.80827332 -14.75684071]
[199.11804199 -19.25468636]
[213.42781067 -23.75253296]
[224.11303711 -36.19271088]
[240.17691040 -32.89363098]
[245.09429932 -17.24909973]
[233.80661011 -5.35287333]
[217.92565918 -9.44276810]
[203.61589050 -4.94492197]
[189.30612183 -0.44707564]
[174.99635315 4.05077076]
[160.68659973 8.54861736]
[141.61987305 29.81178856]
[115.54672241 11.49254513]
[119.35153961 26.00196838]
[123.15635681 40.51139069]
[126.96118164 55.02081299]
[137.56777954 65.62741852]
[152.07720947 69.43223572]
[166.58662415 73.23705292]
[181.09605408 77.04187012]
[197.95083618 75.21094513]
[204.37608337 90.90019989]
[191.07865906 101.41755676]
[177.29122925 91.55129242]
[162.78181458 87.74647522]
[148.27238464 83.94165802]
[133.76295471 80.13684082]
[130.34732056 86.81391907]
[123.51605225 100.16808319]
[120.10041809 106.84516907]
[131.67648315 116.38428497]
[146.66430664 112.36621857]
[161.13937378 117.95657349]
[169.53572083 131.00575256]
[168.62480164 146.49606323]
[158.75685120 158.47117615]
[143.72633362 162.32641602]
[129.31275940 156.57936096]
[121.05845642 143.43986511]
[122.13737488 127.96035004]
[110.56130981 118.42123413]
[97.26232147 125.35931396]
[98.46317291 140.31117249]
[99.66402435 155.26301575]
[117.79342651 162.73300171]
[124.10300446 187.53402710]
[129.28347778 201.61105347]
[134.46395874 215.68807983]
[139.64442444 229.76510620]
[144.82490540 243.84213257]
[155.96948242 256.61846924]
[146.77758789 270.86434937]
[130.54386902 265.97534180]
[130.74787903 249.02261353]
[125.56740570 234.94558716]
[120.38693237 220.86856079]
[115.20645142 206.79153442]
[110.02597809 192.71450806]
[102.54547882 193.25500488]
[103.62646484 208.21600342]
[97.08216095 221.71310425]
[88.66546631 209.29698181]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[14 177]
[15 176]
[16 175]
[19 29]
[20 28]
[21 27]
[22 26]
[31 149]
[32 148]
[33 147]
[34 146]
[35 81]
[36 80]
[37 79]
[38 78]
[39 77]
[40 76]
[43 73]
[44 72]
[45 71]
[47 69]
[48 68]
[49 67]
[50 66]
[51 65]
[54 63]
[55 62]
[87 129]
[88 128]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[97 120]
[98 119]
[99 118]
[100 117]
[102 116]
[103 115]
[104 114]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[150 160]
[151 159]
[152 158]
[153 157]
[163 174]
[164 173]
[179 191]
[180 190]
[181 189]
[182 188]
[183 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
