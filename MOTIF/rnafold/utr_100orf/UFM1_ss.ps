%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGUUGGAUAGCAACAACUUCGGAGGUCCCCAGAUUGCAGAGGGAGACGUGGACGUGAGUGGAGCGGGGCGGUCCCCAGCACACUAGAGGAAGUCGUGCUACCCCCGCGGAGUUGUCGUGUGUUCUGGAUUCAUUCCGGCACCACCAUGUCGAAGGUUUCCUUUAAGAUCACGCUGACGUCGGACCCACGGCUGCCGUACAAAGUACUCAGUGUUCCUGAAAGUACACCUUUCACAGCAGUCUUAA\
) } def
/len { sequence length } bind def

/coor [
[90.37896729 251.51852417]
[86.10367584 265.89633179]
[81.82839203 280.27416992]
[87.26956177 291.95016479]
[83.43085480 303.82626343]
[72.88378143 309.71704102]
[68.42815399 324.04000854]
[63.97253418 338.36297607]
[59.51691055 352.68594360]
[65.67647552 367.49942017]
[57.80935669 381.48110962]
[41.95053864 383.90548706]
[30.26555061 372.91271973]
[31.71811104 356.93557739]
[45.19394302 348.23031616]
[49.64956665 333.90734863]
[54.10519028 319.58438110]
[58.56081390 305.26141357]
[53.78852844 288.36257935]
[67.45056152 275.99887085]
[71.72585297 261.62106323]
[76.00114441 247.24322510]
[69.47476196 243.54777527]
[56.42200470 236.15686035]
[49.89562988 232.46141052]
[39.76563644 243.52410889]
[40.71082306 259.30010986]
[30.16149902 271.06817627]
[14.37638760 271.84649658]
[2.72051740 261.17333984]
[2.10910892 245.38088989]
[12.90490055 233.83851624]
[28.70293999 233.39411926]
[38.83293152 222.33142090]
[46.87033463 209.66650391]
[52.56702042 195.79034424]
[58.26370621 181.91418457]
[63.96039200 168.03802490]
[69.65708160 154.16186523]
[75.35376740 140.28570557]
[81.05045319 126.40954590]
[67.54734802 101.83711243]
[78.19103241 75.89775085]
[70.96472168 62.75315094]
[63.73841858 49.60855103]
[56.51211166 36.46395111]
[49.28580856 23.31934929]
[42.05950165 10.17474937]
[34.83319855 -2.96985078]
[27.60689354 -16.11445045]
[20.38058853 -29.25905037]
[3.56087923 -31.15702438]
[-8.68521881 -42.59964752]
[-11.65882301 -58.92476273]
[-4.38125992 -73.65213013]
[-11.77217007 -86.70487976]
[-19.16308022 -99.75763702]
[-26.55399132 -112.81039429]
[-33.94490051 -125.86315155]
[-41.33581161 -138.91590881]
[-48.26935577 -144.82270813]
[-48.73640823 -152.17944336]
[-55.96271133 -165.32405090]
[-63.18901825 -178.46865845]
[-70.41532135 -191.61325073]
[-83.84385681 -199.97895813]
[-83.19501495 -214.85942078]
[-90.42131805 -228.00402832]
[-103.84985352 -236.36973572]
[-103.20101166 -251.25019836]
[-110.42732239 -264.39480591]
[-117.65362549 -277.53939819]
[-135.35237122 -287.22344971]
[-134.04478455 -306.52993774]
[-141.59913635 -319.48876953]
[-149.15347290 -332.44763184]
[-156.70782471 -345.40649414]
[-164.26217651 -358.36532593]
[-179.28112793 -362.49676514]
[-186.75772095 -375.74649048]
[-182.72648621 -390.03930664]
[-190.28083801 -402.99816895]
[-197.83517456 -415.95700073]
[-205.38952637 -428.91586304]
[-212.94387817 -441.87472534]
[-220.49822998 -454.83355713]
[-228.05256653 -467.79241943]
[-233.55865479 -471.37789917]
[-236.06933594 -476.44076538]
[-235.62922668 -481.17321777]
[-242.85552979 -494.31781006]
[-256.28405762 -502.68353271]
[-255.63522339 -517.56396484]
[-262.86154175 -530.70861816]
[-277.77194214 -535.21612549]
[-284.91317749 -548.64953613]
[-280.52404785 -562.83654785]
[-287.75033569 -575.98114014]
[-294.97665405 -589.12579346]
[-302.20294189 -602.27038574]
[-309.42926025 -615.41497803]
[-324.80313110 -618.27465820]
[-334.70208740 -630.38018799]
[-334.45214844 -646.01580811]
[-324.17129517 -657.79876709]
[-308.71386719 -660.16552734]
[-295.37835693 -651.99859619]
[-290.46142578 -637.15417480]
[-296.28466797 -622.64129639]
[-289.05834961 -609.49670410]
[-281.83206177 -596.35205078]
[-274.60574341 -583.20745850]
[-267.37942505 -570.06286621]
[-253.04913330 -566.16699219]
[-245.53338623 -552.93939209]
[-249.71693420 -537.93487549]
[-242.49063110 -524.79028320]
[-229.57896423 -517.36474609]
[-229.71093750 -501.54412842]
[-222.48463440 -488.39950562]
[-215.09371948 -475.34677124]
[-207.53936768 -462.38790894]
[-199.98503113 -449.42904663]
[-192.43067932 -436.47021484]
[-184.87632751 -423.51135254]
[-177.32197571 -410.55249023]
[-169.76763916 -397.59365845]
[-155.34394836 -394.05911255]
[-147.49816895 -381.02459717]
[-151.30332947 -365.91967773]
[-143.74897766 -352.96081543]
[-136.19462585 -340.00198364]
[-128.64027405 -327.04312134]
[-121.08592987 -314.08428955]
[-111.04059601 -312.38967896]
[-103.41666412 -305.30651855]
[-100.88410950 -294.98696899]
[-104.50902557 -284.76571655]
[-97.28272247 -271.62112427]
[-90.05641174 -258.47650146]
[-77.14475250 -251.05099487]
[-77.27671814 -235.23033142]
[-70.05041504 -222.08573914]
[-57.13875580 -214.66021729]
[-57.27072144 -198.83955383]
[-50.04441833 -185.69496155]
[-42.81811142 -172.55035400]
[-35.59180450 -159.40576172]
[-28.28305435 -146.30682373]
[-20.89214325 -133.25405884]
[-13.50123405 -120.20130920]
[-6.11032391 -107.14855194]
[1.28058612 -94.09579468]
[8.67149639 -81.04303741]
[22.00554466 -80.77690125]
[33.56288910 -73.90724182]
[40.27564240 -62.13339996]
[40.30086136 -48.47223282]
[33.52518845 -36.48535538]
[40.75149155 -23.34075546]
[47.97779846 -10.19615555]
[55.20410156 2.94844437]
[62.43040848 16.09304428]
[69.65671539 29.23764420]
[76.88301849 42.38224411]
[84.10932159 55.52684402]
[91.33563232 68.67144775]
[99.27400970 65.95302582]
[108.01931763 65.31002808]
[117.01486969 66.96996307]
[125.64295197 71.00829315]
[133.26679993 77.33290863]
[139.27622986 85.68021393]
[143.13391113 95.62362671]
[157.83174133 98.61927795]
[172.52957153 101.61492920]
[187.22738647 104.61057281]
[201.92521667 107.60622406]
[216.62304688 110.60187531]
[231.32086182 113.59752655]
[233.37905884 92.24047089]
[256.23699951 75.25952148]
[271.23223877 75.63647461]
[286.22750854 76.01342773]
[301.22277832 76.39038086]
[312.50125122 65.31917572]
[328.30386353 65.54927826]
[339.25521851 76.94416809]
[338.85803223 92.74346924]
[327.34799194 103.57372284]
[311.55377197 103.00954437]
[300.84582520 91.38564301]
[285.85055542 91.00868988]
[270.85528564 90.63173676]
[255.86003113 90.25479126]
[254.13211060 97.55302429]
[268.72854614 101.00910950]
[265.27221680 115.60547638]
[250.67626953 112.14950562]
[248.94834900 119.44774628]
[262.52075195 125.83443451]
[276.09317017 132.22111511]
[289.66555786 138.60781860]
[306.57165527 139.88088989]
[310.02838135 156.47869873]
[295.03616333 164.39508057]
[283.27886963 152.18022156]
[269.70648193 145.79353333]
[256.13406372 139.40684509]
[242.56166077 133.02014160]
[228.32522583 128.29534912]
[213.62739563 125.29969788]
[198.92956543 122.30405426]
[184.23173523 119.30840302]
[169.53392029 116.31275177]
[154.83609009 113.31710052]
[140.13825989 110.32145691]
[135.76808167 116.41665649]
[141.95539856 130.08111572]
[127.02772522 128.60707092]
[122.65754700 134.70227051]
[130.21189880 147.66113281]
[137.76625061 160.61997986]
[145.32058716 173.57882690]
[152.87493896 186.53768921]
[160.42929077 199.49653625]
[175.51419067 204.95780945]
[180.51295471 220.20220947]
[171.59097290 233.53553772]
[155.59240723 234.72961426]
[144.79000854 222.86843872]
[147.47044373 207.05088806]
[139.91609192 194.09202576]
[132.36174011 181.13317871]
[124.80739594 168.17433167]
[117.25304413 155.21548462]
[109.69869995 142.25662231]
[103.89472961 139.54711914]
[98.94258118 136.10604858]
[94.92661285 132.10623169]
[89.22992706 145.98239136]
[83.53323364 159.85855103]
[77.83654785 173.73471069]
[72.13986206 187.61087036]
[66.44317627 201.48703003]
[60.74649048 215.36318970]
[68.86668396 215.95182800]
[77.13455200 220.05255127]
[84.27964783 227.68077087]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[6 18]
[7 17]
[8 16]
[9 15]
[25 34]
[26 33]
[35 246]
[36 245]
[37 244]
[38 243]
[39 242]
[40 241]
[41 240]
[43 167]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[55 154]
[56 153]
[57 152]
[58 151]
[59 150]
[60 149]
[62 148]
[63 147]
[64 146]
[65 145]
[67 143]
[68 142]
[70 140]
[71 139]
[72 138]
[74 134]
[75 133]
[76 132]
[77 131]
[78 130]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[90 120]
[91 119]
[93 117]
[94 116]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[174 217]
[175 216]
[176 215]
[177 214]
[178 213]
[179 212]
[180 211]
[182 195]
[183 194]
[184 193]
[185 192]
[200 210]
[201 209]
[202 208]
[203 207]
[221 237]
[222 236]
[223 235]
[224 234]
[225 233]
[226 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
