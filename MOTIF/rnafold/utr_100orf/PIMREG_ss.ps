%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGAGUUUCAAAUCGGCUGCGGUGGGCGAGGAGCAGCUGUGCUGCGGCUGUGCUCGGCCUUAGUGGUGUCGGGGUCUAGUGGACAGAGAAGACUCUUGGCCAGGCAGAUGGCUUCUCGGUGGCAGAACAUGGGGACCUCCGUGCGCCGGAGAUCUCUCCAGCACCAGGAGCAGCUGGAGGACAGCAAGGAGCUGCAGCCUGUGGUCA\
) } def
/len { sequence length } bind def

/coor [
[36.51166916 484.34201050]
[35.61460495 469.36886597]
[34.71754456 454.39572144]
[33.82048035 439.42254639]
[18.94158936 437.52029419]
[14.30633545 451.78616333]
[23.53564644 464.26010132]
[23.63664627 479.77685547]
[14.57049751 492.36987305]
[-0.17667957 497.19692993]
[-14.93429470 492.40188599]
[-24.02774429 479.82855225]
[-23.96041107 464.31161499]
[-14.75818634 451.81768799]
[0.04048752 447.15090942]
[4.67574263 432.88504028]
[7.90407753 418.23657227]
[9.69499111 403.34387207]
[11.48590374 388.45117188]
[13.27681732 373.55847168]
[15.06773090 358.66574097]
[16.85864449 343.77304077]
[18.64955711 328.88034058]
[20.44047165 313.98764038]
[22.23138428 299.09494019]
[10.86180878 289.31063843]
[-3.59763432 293.30117798]
[-14.84208107 304.43099976]
[-29.16910553 300.35845947]
[-43.62854767 304.34899902]
[-58.08798981 308.33956909]
[-72.54743195 312.33010864]
[-79.58026123 323.14285278]
[-91.70630646 326.16860962]
[-102.29248810 320.31448364]
[-116.81000519 324.08828735]
[-131.32752991 327.86209106]
[-145.84504700 331.63586426]
[-160.36256409 335.40966797]
[-174.88009644 339.18347168]
[-189.39761353 342.95727539]
[-203.91513062 346.73107910]
[-217.72361755 356.56787109]
[-230.99853516 346.02209473]
[-224.53977966 330.34661865]
[-207.68893433 332.21356201]
[-193.17141724 328.43975830]
[-178.65388489 324.66595459]
[-164.13636780 320.89215088]
[-149.61885071 317.11834717]
[-135.10133362 313.34454346]
[-120.58380890 309.57073975]
[-106.06628418 305.79696655]
[-94.24710846 292.82534790]
[-76.53798676 297.87066650]
[-62.07854462 293.88012695]
[-47.61910248 289.88955688]
[-33.15965652 285.89901733]
[-22.94944763 275.05462646]
[-7.58818722 278.84173584]
[6.87125587 274.85119629]
[6.63163757 257.94079590]
[13.74851418 243.08859253]
[26.38143158 233.22656250]
[41.64953613 230.10545349]
[56.28317261 233.99288940]
[65.45903778 222.12681580]
[67.12386322 207.32554626]
[81.68652344 201.14172363]
[90.86238861 189.27566528]
[100.03825378 177.40959167]
[109.21411133 165.54353333]
[35.57260895 88.74153900]
[27.30915451 76.22293854]
[19.04570007 63.70434189]
[10.78224468 51.18574524]
[2.51879048 38.66714478]
[-5.74466419 26.14854622]
[-14.00811863 13.62994862]
[-29.12610054 15.72980785]
[-43.65539551 11.05409527]
[-54.71120834 0.53117645]
[-60.09839249 -13.74961472]
[-58.74732208 -28.95281792]
[-50.92625046 -42.05982208]
[-38.18806076 -50.46822739]
[-23.06192970 -52.50853729]
[-8.55115795 -47.77564621]
[2.46312785 -37.20927048]
[7.79403353 -22.90737724]
[6.38310385 -7.70961237]
[-1.48952019 5.36649370]
[6.77393436 17.88509178]
[15.03738880 30.40369034]
[23.30084419 42.92229080]
[31.56429863 55.44088745]
[39.82775497 67.95948792]
[48.09120941 80.47808838]
[55.34996796 78.59118652]
[77.12625122 72.93048096]
[78.24720001 57.97242737]
[79.36815643 43.01436996]
[80.48910522 28.05631256]
[81.61005402 13.09825516]
[71.11244202 1.28404260]
[72.12680817 -14.48766041]
[84.05134583 -24.85978127]
[99.81143951 -23.67872620]
[110.05690765 -11.64519215]
[108.70929718 4.10153723]
[96.56811523 14.21920681]
[95.44715881 29.17726326]
[94.32621002 44.13532257]
[93.20526123 59.09337616]
[92.08430481 74.05143738]
[106.12783051 79.32205963]
[115.12516022 67.32005310]
[124.12248993 55.31805038]
[133.11981201 43.31604767]
[135.20658875 27.63306427]
[149.03155518 22.09054947]
[158.02888489 10.08854580]
[167.02621460 -1.91345704]
[164.53984070 -17.52093887]
[173.88537598 -30.26600075]
[189.51828003 -32.58721924]
[202.16381836 -23.10746193]
[204.31962585 -7.45089722]
[194.70669556 5.09371233]
[179.02821350 7.08387136]
[170.03088379 19.08587456]
[161.03355408 31.08787727]
[159.59033203 45.91239548]
[145.12182617 52.31337738]
[136.12449646 64.31537628]
[127.12715912 76.31738281]
[118.12983704 88.31938934]
[122.58348846 94.35386658]
[135.94444275 112.45732117]
[150.06523132 107.39736938]
[164.18603516 102.33741760]
[178.30682373 97.27746582]
[192.42762756 92.21752167]
[200.55265808 78.38410950]
[216.45370483 76.25424957]
[227.93284607 87.46179199]
[226.18424988 103.40927124]
[212.54931641 111.86314392]
[197.48757935 106.33831787]
[183.36677551 111.39826965]
[169.24598694 116.45821381]
[155.12518311 121.51816559]
[141.00439453 126.57811737]
[140.94828796 134.07791138]
[155.94787598 134.19033813]
[155.83520508 149.18991089]
[140.83609009 149.07748413]
[140.77999878 156.57727051]
[154.82351685 161.84790039]
[168.86703491 167.11851501]
[182.91056824 172.38914490]
[196.95408630 177.65975952]
[210.99760437 182.93038940]
[225.04113770 188.20100403]
[236.85346985 178.38449097]
[251.99423218 175.80513000]
[266.39059448 181.15675354]
[276.17004395 192.99981689]
[278.70193481 208.14859009]
[273.30520630 222.52810669]
[261.43154907 232.27038574]
[246.27493286 234.75477600]
[231.91238403 229.31300354]
[222.20738220 217.40887451]
[219.77050781 202.24453735]
[205.72698975 196.97390747]
[191.68345642 191.70329285]
[177.63993835 186.43266296]
[163.59642029 181.16204834]
[149.55288696 175.89141846]
[135.50936890 170.62080383]
[121.08017731 174.71939087]
[111.90431213 186.58546448]
[102.72845459 198.45152283]
[93.55258942 210.31759644]
[91.23143768 225.96760559]
[77.32510376 231.30268860]
[68.14923859 243.16874695]
[75.74097443 257.04306030]
[76.04237366 273.31832886]
[68.55722809 288.29235840]
[54.60874557 298.36172485]
[37.12408829 300.88586426]
[35.33317566 315.77856445]
[33.54226303 330.67126465]
[31.75134850 345.56396484]
[29.96043396 360.45666504]
[28.16952133 375.34936523]
[26.37860870 390.24206543]
[24.58769417 405.13476562]
[22.79678154 420.02749634]
[48.79363251 438.52551270]
[49.69069672 453.49865723]
[50.58775711 468.47180176]
[51.48482132 483.44494629]
[62.48468781 495.12322998]
[60.06999588 510.98352051]
[46.09308624 518.85919189]
[31.27585220 512.70861816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[5 16]
[6 15]
[17 201]
[18 200]
[19 199]
[20 198]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[26 61]
[27 60]
[29 58]
[30 57]
[31 56]
[32 55]
[35 53]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[42 46]
[66 188]
[67 187]
[69 185]
[70 184]
[71 183]
[72 182]
[73 98]
[74 97]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[116 137]
[117 136]
[118 135]
[119 134]
[121 132]
[122 131]
[123 130]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[158 181]
[159 180]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
