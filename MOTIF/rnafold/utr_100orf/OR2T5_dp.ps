%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2T5)
} def

/sequence { (\
AUGGCCAACAUCACCAGGAUGGCCAACCACACUGGAAAGUUGGAUUUCAUCCUCAUGGGACUCUUCAGACGAUCCAAACAUCCAGCUCUACUUAGUGUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 25 0.900678278 ubox
3 24 0.999770764 ubox
4 23 0.999972701 ubox
5 22 0.999937711 ubox
6 21 0.976688041 ubox
7 20 0.875096520 ubox
9 21 0.213907029 ubox
10 20 0.433496447 ubox
11 18 0.488643924 ubox
11 19 0.716407733 ubox
12 17 0.502277017 ubox
12 18 0.717815704 ubox
13 20 0.004256356 ubox
27 100 0.988147531 ubox
28 99 0.999898578 ubox
29 98 0.999757141 ubox
30 97 0.999947934 ubox
31 96 0.999736721 ubox
32 85 0.034860853 ubox
32 95 0.999335605 ubox
33 76 0.005065680 ubox
33 84 0.049745672 ubox
33 90 0.081285115 ubox
33 94 0.988261649 ubox
34 75 0.007316462 ubox
34 83 0.061966215 ubox
34 88 0.013432841 ubox
34 89 0.155856023 ubox
34 92 0.369632212 ubox
34 93 0.896920657 ubox
35 74 0.007359732 ubox
35 82 0.062224741 ubox
35 87 0.007611782 ubox
35 88 0.176054345 ubox
35 91 0.512977421 ubox
35 92 0.726810905 ubox
35 93 0.044437806 ubox
36 73 0.007285821 ubox
36 81 0.061045390 ubox
36 87 0.134990974 ubox
36 92 0.058270698 ubox
36 93 0.021480553 ubox
37 92 0.032145670 ubox
37 93 0.008232860 ubox
38 87 0.953195382 ubox
38 89 0.048109844 ubox
38 92 0.009662561 ubox
39 70 0.007382550 ubox
39 79 0.020099064 ubox
39 86 0.997131196 ubox
39 88 0.033871523 ubox
39 91 0.009141212 ubox
40 69 0.007151794 ubox
40 77 0.059259361 ubox
40 78 0.016436239 ubox
40 85 0.997225907 ubox
40 90 0.008359113 ubox
41 68 0.006245552 ubox
41 76 0.061679476 ubox
41 77 0.011576763 ubox
41 84 0.997071418 ubox
42 75 0.062927938 ubox
42 83 0.997970369 ubox
43 51 0.003361295 ubox
43 66 0.006376468 ubox
43 74 0.062942814 ubox
43 82 0.997952780 ubox
44 50 0.003893054 ubox
44 62 0.003217184 ubox
44 65 0.006496014 ubox
44 73 0.062571176 ubox
44 81 0.993178556 ubox
45 49 0.004052883 ubox
45 60 0.038674126 ubox
45 69 0.004923401 ubox
45 72 0.060533405 ubox
45 77 0.158104171 ubox
45 78 0.241838727 ubox
45 80 0.906908224 ubox
46 57 0.004361151 ubox
46 59 0.053931809 ubox
46 60 0.010958935 ubox
46 67 0.003706623 ubox
46 68 0.006406607 ubox
46 69 0.005076762 ubox
46 71 0.057849664 ubox
46 72 0.007061657 ubox
46 76 0.235243515 ubox
46 77 0.380375716 ubox
46 78 0.534550763 ubox
47 58 0.059983963 ubox
47 59 0.010052878 ubox
47 60 0.020230449 ubox
47 67 0.006091267 ubox
47 68 0.005156228 ubox
47 69 0.043515908 ubox
47 71 0.006466003 ubox
47 72 0.027118918 ubox
47 76 0.380164799 ubox
47 77 0.535649928 ubox
48 57 0.176736973 ubox
48 58 0.008240976 ubox
48 59 0.020855264 ubox
48 68 0.044081287 ubox
48 71 0.028265694 ubox
49 56 0.172748298 ubox
49 73 0.892767988 ubox
50 55 0.155752678 ubox
50 58 0.004665773 ubox
50 59 0.066409802 ubox
50 60 0.142951398 ubox
50 69 0.026800610 ubox
50 72 0.930586276 ubox
50 80 0.005584572 ubox
51 57 0.018394903 ubox
51 58 0.109464690 ubox
51 59 0.153026360 ubox
51 68 0.026518104 ubox
51 71 0.930361079 ubox
52 57 0.122863099 ubox
52 58 0.152879549 ubox
52 59 0.006657047 ubox
52 68 0.023089282 ubox
53 57 0.137771856 ubox
53 58 0.006185194 ubox
53 60 0.008406156 ubox
53 67 0.021656770 ubox
53 69 0.906403660 ubox
53 72 0.104548519 ubox
54 59 0.008865457 ubox
54 68 0.912119700 ubox
54 71 0.106941745 ubox
55 81 0.010721438 ubox
56 67 0.913773352 ubox
56 71 0.008861448 ubox
56 76 0.097454784 ubox
56 80 0.023091688 ubox
57 63 0.033655986 ubox
57 64 0.107042845 ubox
57 65 0.123279722 ubox
57 66 0.918369449 ubox
57 70 0.012320690 ubox
57 74 0.003245572 ubox
57 75 0.099871832 ubox
57 79 0.026866195 ubox
58 62 0.022148094 ubox
58 63 0.114010890 ubox
58 64 0.158477292 ubox
58 65 0.852794316 ubox
58 66 0.107781523 ubox
58 73 0.003361337 ubox
58 74 0.098729535 ubox
58 75 0.227520660 ubox
59 63 0.179342571 ubox
59 64 0.669033407 ubox
59 65 0.110195560 ubox
59 66 0.082566730 ubox
59 73 0.085139925 ubox
59 74 0.231971039 ubox
60 64 0.099057224 ubox
60 65 0.074956139 ubox
60 73 0.230370913 ubox
61 68 0.059607566 ubox
62 67 0.054814568 ubox
62 69 0.118108129 ubox
62 72 0.215052564 ubox
63 68 0.121244348 ubox
63 71 0.217875153 ubox
64 72 0.018288551 ubox
64 77 0.008322945 ubox
64 78 0.014790680 ubox
65 71 0.017261571 ubox
65 72 0.118358078 ubox
65 76 0.008168415 ubox
65 77 0.016935596 ubox
66 71 0.123872312 ubox
68 74 0.049760378 ubox
69 73 0.043417024 ubox
71 82 0.003772232 ubox
72 81 0.004588074 ubox
73 80 0.005135181 ubox
84 92 0.009115421 ubox
85 91 0.010044189 ubox
86 95 0.006901290 ubox
87 94 0.006562826 ubox
88 95 0.005338585 ubox
88 100 0.007031564 ubox
89 94 0.005173788 ubox
89 99 0.007248400 ubox
90 98 0.007306138 ubox
91 97 0.007312457 ubox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
27 100 0.9500000 lbox
28 99 0.9500000 lbox
29 98 0.9500000 lbox
30 97 0.9500000 lbox
31 96 0.9500000 lbox
32 95 0.9500000 lbox
33 94 0.9500000 lbox
34 93 0.9500000 lbox
35 92 0.9500000 lbox
38 87 0.9500000 lbox
39 86 0.9500000 lbox
40 85 0.9500000 lbox
41 84 0.9500000 lbox
42 83 0.9500000 lbox
43 82 0.9500000 lbox
44 81 0.9500000 lbox
45 80 0.9500000 lbox
49 73 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
53 69 0.9500000 lbox
54 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
59 64 0.9500000 lbox
showpage
end
%%EOF
