%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGCGCAUGCGCGGCCGAUUUGCACAUGCGCAAUACUCGCGCUGCCUCCGUGGUCCCUGCCUGGCUGAGGUGGCAGCAGGGGGCGGGACGCGCAGCGCUAUGGCAGAGGGCAGCGGGGAAGUGGUCGCAGUGUCUGCGACCGGGGCUGCCAACGGCCUCAACAAUGGGGCAGGCGGGACCUCGGCGACGACCUGCAACC\
) } def
/len { sequence length } bind def

/coor [
[112.84607697 137.72222900]
[99.10126495 139.83943176]
[85.46591187 137.10455322]
[77.46417236 149.79203796]
[69.46243286 162.47952271]
[61.46069336 175.16700745]
[53.45895386 187.85447693]
[45.45721436 200.54196167]
[37.45547485 213.22944641]
[29.45373535 225.91693115]
[28.63649940 241.71701050]
[15.30268955 248.35469055]
[7.30095053 261.04217529]
[-0.70078856 273.72964478]
[-8.70252800 286.41714478]
[-6.57542562 302.31854248]
[-17.78495789 313.79574585]
[-33.73213196 312.04437256]
[-42.18363953 298.40798950]
[-36.65620804 283.34719849]
[-21.39000893 278.41540527]
[-13.38826942 265.72790527]
[-5.38653040 253.04043579]
[2.61520886 240.35295105]
[2.86010599 225.46035767]
[16.76625443 217.91519165]
[24.76799393 205.22770691]
[32.76973343 192.54022217]
[40.77147293 179.85273743]
[48.77321243 167.16526794]
[56.77495193 154.47778320]
[64.77668762 141.79029846]
[72.77842712 129.10281372]
[65.34434509 119.67165375]
[61.05750656 108.45401001]
[60.30721283 96.46862030]
[63.16160202 84.80393219]
[69.36145020 74.51927185]
[59.83988953 62.92876434]
[45.10132980 57.17677689]
[43.00104523 42.43099594]
[33.47948456 30.84048843]
[23.95792198 19.24998093]
[14.43636036 7.65947247]
[4.91479826 -3.93103480]
[-4.60676336 -15.52154255]
[-14.12832451 -27.11204910]
[-23.64988708 -38.70255661]
[-44.44057465 -38.81648254]
[-58.74590683 -53.52520752]
[-58.29384995 -73.76519012]
[-69.80959320 -83.37704468]
[-81.32534027 -92.98889160]
[-92.91584778 -102.51045227]
[-104.58040619 -111.94114685]
[-116.24497223 -121.37184143]
[-127.90953827 -130.80253601]
[-139.57409668 -140.23323059]
[-148.22256470 -143.19856262]
[-151.34576416 -149.90361023]
[-162.86151123 -159.51545715]
[-174.37724304 -169.12730408]
[-185.89299011 -178.73915100]
[-205.88543701 -181.27923584]
[-211.76922607 -199.69355774]
[-223.57975769 -208.94079590]
[-235.39028931 -218.18801880]
[-247.20082092 -227.43525696]
[-262.85705566 -225.27699280]
[-275.40316772 -234.88793945]
[-277.39578247 -250.56611633]
[-267.65270996 -263.00991821]
[-251.95436096 -264.83666992]
[-239.61425781 -254.96258545]
[-237.95358276 -239.24578857]
[-226.14305115 -229.99855042]
[-214.33251953 -220.75132751]
[-202.52198792 -211.50408936]
[-192.52082825 -213.64692688]
[-182.78842163 -209.84729004]
[-176.63076782 -201.13644409]
[-176.28114319 -190.25489807]
[-164.76539612 -180.64305115]
[-153.24966431 -171.03120422]
[-141.73391724 -161.41934204]
[-130.14340210 -151.89778137]
[-118.47884369 -142.46708679]
[-106.81427765 -133.03640747]
[-95.14971924 -123.60570526]
[-83.48515320 -114.17501831]
[-76.30135345 -112.41290283]
[-71.71349335 -104.50463104]
[-60.19774628 -94.89278412]
[-48.68200302 -85.28093719]
[-45.39004898 -87.12322998]
[-41.86624146 -88.46999359]
[-41.86624146 -103.46999359]
[-53.21738052 -114.46668243]
[-53.38447189 -130.27009583]
[-42.26838303 -141.50433350]
[-26.46409607 -141.50433350]
[-15.34800911 -130.27009583]
[-15.51510143 -114.46668243]
[-26.86623955 -103.46999359]
[-26.86623955 -88.46999359]
[-16.21310806 -82.56107330]
[-9.32599354 -72.36335754]
[-7.79347944 -60.02928925]
[-12.05937862 -48.22411728]
[-2.53781724 -36.63360977]
[6.98374414 -25.04310417]
[16.50530624 -13.45259666]
[26.02686691 -1.86208892]
[35.54842758 9.72841835]
[45.06999207 21.31892586]
[54.59155273 32.90943527]
[68.64907074 37.83238983]
[71.43039703 53.40720367]
[80.95195770 64.99771118]
[97.92581940 60.20444870]
[115.30600739 63.20714569]
[129.68774414 73.41757202]
[138.25364685 88.83550262]
[139.32565308 106.44055939]
[153.40763855 111.60755920]
[167.48960876 116.77455902]
[183.11044312 114.26449585]
[192.39353943 125.91238403]
[206.47550964 131.07939148]
[220.55749512 136.24639893]
[234.63946533 141.41339111]
[243.78216553 141.43246460]
[248.90010071 146.77276611]
[262.89959717 152.15922546]
[276.89910889 157.54568481]
[291.20184326 151.37567139]
[305.32260132 157.03775024]
[311.11660767 170.71125793]
[325.11611938 176.09771729]
[334.25738525 176.25968933]
[339.29122925 181.67930603]
[353.20486450 187.28392029]
[367.11846924 192.88851929]
[381.03207397 198.49311829]
[394.94567871 204.09773254]
[408.85928345 209.70233154]
[422.85876465 215.08879089]
[436.94073486 220.25579834]
[451.02273560 225.42280579]
[465.10470581 230.58979797]
[479.18667603 235.75680542]
[487.15139771 230.68312073]
[496.42071533 229.86013794]
[504.90005493 233.34663391]
[510.73162842 240.24177551]
[512.70123291 248.91377258]
[526.52557373 254.73515320]
[540.34985352 260.55651855]
[554.17419434 266.37789917]
[567.99847412 272.19927979]
[581.82281494 278.02066040]
[598.01757812 275.43972778]
[608.13861084 288.34310913]
[601.77423096 303.45687866]
[585.47161865 305.23333740]
[576.00146484 291.84497070]
[562.17712402 286.02359009]
[548.35284424 280.20220947]
[534.52850342 274.38082886]
[520.70422363 268.55944824]
[506.87988281 262.73806763]
[486.71130371 267.09893799]
[474.01968384 249.83877563]
[459.93771362 244.67178345]
[445.85571289 239.50477600]
[431.77374268 234.33776855]
[417.69177246 229.17077637]
[413.05191040 230.33312988]
[407.63293457 228.58737183]
[403.25466919 223.61593628]
[389.34106445 218.01133728]
[375.42745972 212.40673828]
[361.51385498 206.80212402]
[347.60025024 201.19752502]
[333.68664551 195.59291077]
[319.72967529 190.09721375]
[305.73016357 184.71075439]
[292.26519775 190.97416687]
[277.99096680 185.71095276]
[271.51263428 171.54519653]
[257.51312256 166.15872192]
[243.51362610 160.77226257]
[229.47245789 155.49537659]
[215.39048767 150.32836914]
[201.30851746 145.16136169]
[187.22653198 139.99436951]
[172.61294556 142.87400818]
[162.32260132 130.85653687]
[148.24063110 125.68953705]
[134.15866089 120.52253723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 33]
[4 32]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[12 24]
[13 23]
[14 22]
[15 21]
[38 119]
[39 118]
[41 116]
[42 115]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[48 109]
[51 94]
[52 93]
[53 92]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[60 85]
[61 84]
[62 83]
[63 82]
[65 78]
[66 77]
[67 76]
[68 75]
[96 105]
[97 104]
[124 200]
[125 199]
[126 198]
[128 196]
[129 195]
[130 194]
[131 193]
[133 192]
[134 191]
[135 190]
[138 187]
[139 186]
[141 185]
[142 184]
[143 183]
[144 182]
[145 181]
[146 180]
[147 177]
[148 176]
[149 175]
[150 174]
[151 173]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
