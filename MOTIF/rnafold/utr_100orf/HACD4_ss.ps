%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGCGCCCAGCCGCGGGGCCGCCCCUGCCUCCUCCCCGGUACUCCUUCCUGGACCGCGCUGGAAGCCCUGGCGGCGGCGGCCCAUGGGGCCCUUGGCGCUGCCCGCCUGGCUGCAGCCCAGGUAUAGGAAGAAUGCGUAUCUUUUCAUCUAUUACUUAAUCCAGUUCUGUGGCCACUCUUGGA\
) } def
/len { sequence length } bind def

/coor [
[207.96749878 153.85510254]
[196.81806946 151.74906921]
[187.22229004 145.59803772]
[180.59382629 136.26252747]
[177.92617798 125.07543182]
[163.28631592 121.80822754]
[148.64646912 118.54102325]
[134.00660706 115.27381897]
[119.36675262 112.00661469]
[104.60485840 122.31648254]
[86.96769714 118.69194794]
[77.46788788 103.39617920]
[62.72603989 100.62528992]
[47.98418808 97.85440063]
[32.99223709 102.90928650]
[21.91328049 92.95408630]
[7.17143059 90.18319702]
[-7.59329510 87.53690338]
[-22.37984276 85.01538849]
[-37.16638947 82.49387360]
[-51.95293427 79.97235870]
[-66.73947906 77.45085144]
[-81.52603149 74.92933655]
[-96.31257629 72.40782166]
[-111.09912109 69.88630676]
[-126.00356293 75.19367981]
[-137.24906921 65.42701721]
[-152.03562927 62.90550613]
[-166.82217407 60.38399506]
[-181.60871887 57.86248016]
[-196.39526367 55.34096527]
[-204.86241150 68.99700165]
[-217.88784790 78.33946991]
[-233.46264648 81.96385193]
[-249.19862366 79.34469604]
[-262.69442749 70.91162872]
[-271.90209961 57.97919846]
[-275.43777466 42.54200363]
[-290.26480103 40.27058792]
[-305.09182739 37.99917221]
[-319.91885376 35.72775650]
[-334.74588013 33.45633698]
[-349.55493164 45.24454117]
[-367.96563721 42.53400040]
[-378.38546753 27.50186920]
[-393.28073120 25.73251724]
[-408.17602539 23.96316719]
[-421.61807251 32.72049332]
[-436.79983521 27.53461456]
[-442.07516479 12.38369370]
[-433.39727783 -1.10977888]
[-417.42312622 -2.59476686]
[-406.40667725 9.06788635]
[-391.51138306 10.83723736]
[-376.61611938 12.60658741]
[-369.37774658 3.75476670]
[-358.65057373 -0.53884763]
[-347.06549072 0.90372247]
[-337.52465820 7.83799314]
[-332.47445679 18.62931442]
[-317.64743042 20.90073013]
[-302.82040405 23.17214775]
[-287.99340820 25.44356346]
[-273.16638184 27.71498108]
[-266.34997559 15.43535900]
[-255.72657776 6.20304966]
[-242.56065369 1.14405465]
[-228.42871094 0.88599885]
[-215.03033447 5.48033857]
[-203.98388672 14.39371490]
[-196.63104248 26.56979370]
[-193.87374878 40.55442047]
[-179.08720398 43.07593155]
[-164.30065918 45.59744644]
[-149.51411438 48.11896133]
[-134.72756958 50.64047241]
[-120.88075256 45.15274048]
[-108.57761383 55.09976196]
[-93.79106140 57.62127304]
[-79.00451660 60.14278793]
[-64.21797180 62.66429901]
[-49.43142319 65.18581390]
[-34.64487457 67.70732880]
[-19.85832787 70.22884369]
[-5.07178164 72.75035095]
[2.06602621 70.77110291]
[9.94232082 75.44134521]
[24.68417168 78.21223450]
[38.62168884 72.95915222]
[50.75508118 83.11254883]
[65.49693298 85.88343811]
[80.23878479 88.65432739]
[88.11513519 80.55829620]
[98.91177368 77.23937988]
[109.97581482 79.51309967]
[118.58863831 86.82076263]
[122.63395691 97.36676025]
[137.27381897 100.63396454]
[151.91366577 103.90116882]
[166.55352783 107.16837311]
[181.19337463 110.43556976]
[194.96658325 97.17861938]
[213.79534912 94.89312744]
[230.08100891 104.31999969]
[237.36016846 121.50981140]
[252.14672852 124.03132629]
[266.93325806 126.55284119]
[281.93930054 115.01643372]
[300.30160522 118.03753662]
[310.46603394 133.24351501]
[325.32931519 135.26417542]
[340.19259644 137.28485107]
[355.05587769 139.30552673]
[369.91912842 141.32620239]
[384.78240967 143.34686279]
[399.64569092 145.36753845]
[414.50897217 147.38821411]
[429.37222290 149.40888977]
[442.99523926 132.97213745]
[463.63983154 128.08927917]
[482.93710327 136.57362366]
[493.16400146 154.85311890]
[508.15545654 155.35972595]
[523.14691162 155.86633301]
[538.13830566 156.37295532]
[553.12976074 156.87956238]
[564.62451172 146.36723328]
[579.82073975 147.09457397]
[589.77178955 158.11781311]
[604.76324463 158.62443542]
[619.75469971 159.13104248]
[633.80828857 151.86424255]
[646.26696777 160.02699280]
[661.25842285 160.53359985]
[676.24987793 161.04020691]
[684.30596924 147.96371460]
[697.82861328 140.68130493]
[713.18029785 141.15191650]
[726.23150635 149.24896240]
[733.47149658 162.79437256]
[732.95275879 178.14450073]
[724.81481934 191.17024231]
[711.24676514 198.36773682]
[695.89837646 197.80088806]
[682.89819336 189.62219238]
[675.74328613 176.03164673]
[660.75183105 175.52503967]
[645.76037598 175.01843262]
[632.77905273 182.32145691]
[619.24804688 174.12248230]
[604.25665283 173.61587524]
[589.26519775 173.10926819]
[578.59265137 183.43557739]
[563.38195801 183.13534546]
[552.62316895 171.87100220]
[537.63171387 171.36439514]
[522.64025879 170.85777283]
[507.64883423 170.35116577]
[492.65740967 169.84455872]
[489.14370728 178.28970337]
[483.42651367 185.45980835]
[475.93740845 190.79284668]
[467.24752808 193.86624146]
[458.02389526 194.43038940]
[448.97836304 192.42877197]
[440.81256104 188.00341797]
[434.16357422 181.48487854]
[429.55410767 173.36753845]
[427.35156250 164.27215576]
[412.48828125 162.25148010]
[397.62500000 160.23081970]
[382.76174927 158.21014404]
[367.89846802 156.18946838]
[353.03518677 154.16879272]
[338.17193604 152.14813232]
[323.30865479 150.12745667]
[308.44537354 148.10678101]
[301.05853271 156.83508301]
[290.26037598 160.94691467]
[278.70132446 159.30888367]
[269.27896118 152.21446228]
[264.41174316 141.33938599]
[249.62521362 138.81787109]
[234.83866882 136.29635620]
[228.45013428 145.48643494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 101]
[6 100]
[7 99]
[8 98]
[9 97]
[12 92]
[13 91]
[14 90]
[16 88]
[17 87]
[18 85]
[19 84]
[20 83]
[21 82]
[22 81]
[23 80]
[24 79]
[25 78]
[27 76]
[28 75]
[29 74]
[30 73]
[31 72]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[45 55]
[46 54]
[47 53]
[105 184]
[106 183]
[107 182]
[110 177]
[111 176]
[112 175]
[113 174]
[114 173]
[115 172]
[116 171]
[117 170]
[118 169]
[122 159]
[123 158]
[124 157]
[125 156]
[126 155]
[129 152]
[130 151]
[131 150]
[133 148]
[134 147]
[135 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
