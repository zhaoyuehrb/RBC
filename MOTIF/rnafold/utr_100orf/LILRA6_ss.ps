%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGACGCCAUGACGCCCGCCCUCACAGCCCUGCUCUGCCUAGGGCUGAGUCUGGGCCCCAGGACCCGCGUGCAGGCAGGGCCCUUCCCCAAACCCACCCUCUGGGCUG\
) } def
/len { sequence length } bind def

/coor [
[74.37348938 126.74018860]
[70.28514099 120.48969269]
[67.63278198 113.71080780]
[66.45779419 106.71897125]
[66.73482513 99.82400513]
[68.37580109 93.31642151]
[71.23675537 87.45524597]
[75.12682343 82.45765686]
[65.37703705 71.05846405]
[55.62725067 59.65927124]
[47.54786682 55.08430481]
[45.76840210 47.79676437]
[36.34510040 36.12622833]
[26.75759697 24.59020615]
[17.00780869 13.19101238]
[7.25802040 1.79181886]
[-2.49176860 -9.60737514]
[-17.54744911 -6.91038990]
[-31.83727837 -12.07736111]
[-41.55759811 -23.62646484]
[-44.17449570 -38.39155197]
[-39.08377075 -52.38977051]
[-48.83356094 -63.78896332]
[-58.58334732 -75.18815613]
[-72.28849792 -73.07959747]
[-85.13038635 -78.01513672]
[-93.75816345 -88.59129333]
[-95.97820282 -101.94826508]
[-91.31101227 -114.54279327]
[-100.73430634 -126.21332550]
[-110.15760803 -137.88386536]
[-119.58090973 -149.55439758]
[-136.86857605 -155.69534302]
[-139.06811523 -173.04260254]
[-148.81790161 -184.44180298]
[-158.56768799 -195.84098816]
[-168.31748962 -207.24018860]
[-183.16732788 -212.69844055]
[-185.55995178 -227.39962769]
[-195.30973816 -238.79881287]
[-205.05952454 -250.19801331]
[-219.94963074 -258.30487061]
[-216.28158569 -274.85726929]
[-199.36065674 -275.91473389]
[-193.66032410 -259.94778442]
[-183.91053772 -248.54859924]
[-174.16075134 -237.14941406]
[-160.00827026 -232.50650024]
[-156.91828918 -216.98997498]
[-147.16850281 -205.59078979]
[-137.41871643 -194.19158936]
[-127.66892242 -182.79240417]
[-115.54898834 -181.50424194]
[-107.33808136 -171.95889282]
[-107.91036987 -158.97770691]
[-98.48707581 -147.30715942]
[-89.06377411 -135.63662720]
[-79.64047241 -123.96609497]
[-63.35102844 -125.35242462]
[-49.27651596 -116.71490479]
[-43.01208496 -101.25719452]
[-47.18415451 -84.93795013]
[-37.43436432 -73.53874969]
[-27.68457794 -62.13956070]
[-13.06636715 -64.99849701]
[1.11447668 -60.12410736]
[11.01693153 -48.73078537]
[13.90598106 -33.81267166]
[8.90742493 -19.35716438]
[18.65721321 -7.95797014]
[28.40700340 3.44122386]
[38.15679169 14.84041786]
[44.99584198 17.92297173]
[48.01564026 26.70292664]
[57.43893814 38.37346268]
[67.02644348 49.90948105]
[76.77622986 61.30867767]
[86.52602386 72.70787048]
[116.09384918 67.69229126]
[141.01692200 92.20157623]
[155.89543152 94.10684204]
[170.77394104 96.01210785]
[183.12335205 86.14968872]
[198.81999207 87.99126434]
[208.55130005 100.44425964]
[206.54386902 116.12054443]
[193.98867798 125.71964264]
[178.33450317 123.54659271]
[168.86866760 110.89061737]
[153.99015808 108.98535156]
[139.11166382 107.08008575]
[135.08937073 113.41027069]
[142.03157043 126.70710754]
[127.04480743 126.07063293]
[123.02252197 132.40081787]
[131.06709290 145.06118774]
[139.11166382 157.72155762]
[147.15623474 170.38191223]
[162.43901062 175.26211548]
[168.01730347 190.30412292]
[159.61192322 203.96900940]
[143.67076111 205.77424622]
[132.42250061 194.33500671]
[134.49586487 178.42648315]
[126.45129395 165.76612854]
[118.40672302 153.10575867]
[110.36215210 140.44538879]
[101.95066071 140.76214600]
[93.83880615 139.38691711]
[86.35554504 136.45310974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 78]
[9 77]
[10 76]
[12 75]
[13 74]
[14 72]
[15 71]
[16 70]
[17 69]
[22 64]
[23 63]
[24 62]
[29 58]
[30 57]
[31 56]
[32 55]
[34 52]
[35 51]
[36 50]
[37 49]
[39 47]
[40 46]
[41 45]
[80 91]
[81 90]
[82 89]
[95 107]
[96 106]
[97 105]
[98 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
