%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUAAGCUUCGACGCAGGAGGCGGGGCUGCUCAGUCCUCCAGGCGUCGGUACUCAGCGGUGUUGGAACUUCGUUGCUUGCUUGCCUGUGCGCGCGUGCGCGGACAUGGCCUCAAACGAUUAUACCCAACAAGCAACCCAAAGCUAUGGGGCCUACCCCACCCAGCCCGGGCAGGGCUAUUCCCAGCAGAGCAGUCAGCCCUACG\
) } def
/len { sequence length } bind def

/coor [
[78.20167542 179.77656555]
[64.58315277 173.48880005]
[55.81992340 161.31481934]
[54.17958450 146.40478516]
[60.08658981 132.61685181]
[72.01258850 123.51873779]
[79.08889771 110.29278564]
[66.53799438 118.50708771]
[53.98708344 126.72138977]
[41.75839996 135.40811157]
[29.86971664 144.55465698]
[17.98102951 153.70118713]
[6.09234476 162.84773254]
[-5.79634094 171.99426270]
[-17.68502617 181.14080811]
[-29.57371140 190.28733826]
[-36.19974136 207.46611023]
[-53.67056274 209.10270691]
[-65.41838074 218.42947388]
[-77.16620636 227.75625610]
[-88.91402435 237.08303833]
[-100.66184235 246.40980530]
[-107.20906067 265.47265625]
[-126.43749237 267.48919678]
[-137.89541626 277.16989136]
[-149.35334778 286.85058594]
[-154.39782715 302.45458984]
[-170.48800659 305.62292480]
[-181.07168579 293.09622192]
[-175.26129150 277.76092529]
[-159.03404236 275.39266968]
[-147.57612610 265.71197510]
[-136.11819458 256.03125000]
[-136.18083191 245.80836487]
[-130.48478699 237.05592346]
[-120.70968628 232.79769897]
[-109.98861694 234.66198730]
[-98.24079895 225.33520508]
[-86.49298096 216.00843811]
[-74.74515533 206.68165588]
[-62.99733734 197.35488892]
[-61.30468750 185.37484741]
[-51.59026718 177.50865173]
[-38.72024918 178.39866638]
[-26.83156395 169.25212097]
[-14.94287872 160.10559082]
[-3.05419326 150.95904541]
[8.83449268 141.81251526]
[20.72317886 132.66596985]
[32.61186218 123.51943207]
[18.30889702 119.00001526]
[12.77852440 105.05673981]
[20.09521675 91.96223450]
[34.86844254 89.36380768]
[46.21410751 99.17582703]
[45.77278519 114.17047882]
[58.32369232 105.95617676]
[70.87460327 97.74188232]
[96.64154053 85.72418213]
[101.36373901 71.48687744]
[101.09535217 62.35234451]
[106.26802063 57.06941986]
[111.20677948 42.90578079]
[116.14553833 28.74214363]
[121.08430481 14.57850647]
[126.02306366 0.41486791]
[116.49813843 -7.06330061]
[110.22654724 -17.96670151]
[108.41831970 -30.88803482]
[111.67919922 -44.00498199]
[119.87487793 -55.33720016]
[132.10325623 -63.04430389]
[146.78524780 -65.72013092]
[147.69970703 -80.69223022]
[148.61416626 -95.66432953]
[149.52862549 -110.63642883]
[150.44308472 -125.60852814]
[151.35754395 -140.58062744]
[152.27200317 -155.55273438]
[153.18646240 -170.52482605]
[133.25627136 -183.47901917]
[124.73474884 -205.54823303]
[130.72964478 -228.31655884]
[148.83982849 -243.18431091]
[146.11004639 -257.93383789]
[143.38026428 -272.68334961]
[140.53810120 -287.41162109]
[137.58369446 -302.11779785]
[134.62930298 -316.82397461]
[124.32548523 -328.82986450]
[129.40446472 -342.83178711]
[126.45007324 -357.53796387]
[123.49568176 -372.24414062]
[120.54128265 -386.95028687]
[109.30486298 -398.89495850]
[114.28948212 -414.51818848]
[130.36740112 -417.74816895]
[140.99902344 -405.26214600]
[135.24745178 -389.90469360]
[138.20185852 -375.19851685]
[141.15625000 -360.49234009]
[144.11064148 -345.78616333]
[154.20314026 -334.83215332]
[149.33547974 -319.77835083]
[152.28987122 -305.07217407]
[155.24426270 -290.36599731]
[159.64546204 -284.42501831]
[158.12979126 -275.41311646]
[160.85957336 -260.66360474]
[163.58935547 -245.91409302]
[166.74359131 -245.73251343]
[169.87181091 -245.28927612]
[175.45318604 -259.21221924]
[172.59249878 -275.35992432]
[185.31886292 -285.70263672]
[200.54048157 -279.60064697]
[202.59866333 -263.33117676]
[189.37612915 -253.63084412]
[183.79475403 -239.70790100]
[190.28767395 -234.42985535]
[195.47685242 -227.84698486]
[199.10554504 -220.27459717]
[200.99195862 -212.07723999]
[201.03828430 -203.65106201]
[199.23588562 -195.40473938]
[195.66587830 -187.73963928]
[190.49560547 -181.03027344]
[183.97076416 -175.60600281]
[176.40370178 -171.73486328]
[168.15856934 -169.61036682]
[167.24411011 -154.63827515]
[166.32965088 -139.66616821]
[165.41519165 -124.69406891]
[164.50073242 -109.72196960]
[163.58627319 -94.74987030]
[162.67181396 -79.77777100]
[161.75733948 -64.80567169]
[166.97915649 -59.42211533]
[174.95967102 -72.12295532]
[179.20262146 -86.51036072]
[192.70826721 -93.03704071]
[206.61758423 -87.42181396]
[211.80676270 -73.34799957]
[204.87196350 -60.04730225]
[190.36108398 -56.24448013]
[177.42277527 -48.65499878]
[182.64459229 -43.27143860]
[197.63760376 -43.72888184]
[212.63063049 -44.18632507]
[227.62365723 -44.64376450]
[242.61668396 -45.10120773]
[256.26980591 -54.18550491]
[270.84143066 -46.66225433]
[271.34155273 -30.27073479]
[257.25564575 -21.87313461]
[243.07412720 -30.10818481]
[228.08110046 -29.65074348]
[213.08807373 -29.19330025]
[198.09504700 -28.73585701]
[183.10202026 -28.27841568]
[167.93989563 -0.18509257]
[140.18670654 5.35362816]
[135.24794006 19.51726723]
[130.30917358 33.68090439]
[125.37042236 47.84454346]
[120.43165588 62.00818253]
[115.60104370 76.20906830]
[110.87885284 90.44637299]
[113.27054596 105.25447083]
[122.23471832 117.28125763]
[131.19888306 129.30804443]
[140.16307068 141.33483887]
[152.79246521 143.96687317]
[160.01084900 154.17185974]
[158.39265442 166.16218567]
[167.17237854 178.32427979]
[175.95210266 190.48637390]
[184.73182678 202.64845276]
[199.08271790 209.30895996]
[200.25874329 224.15707397]
[209.03846741 236.31915283]
[217.81819153 248.48124695]
[233.45828247 250.75344849]
[242.84373474 263.46914673]
[240.40631104 279.08435059]
[227.59210205 288.33483887]
[212.00354004 285.73245239]
[202.88905334 272.82113647]
[205.65609741 257.26098633]
[196.87637329 245.09887695]
[188.09664917 232.93679810]
[174.37373352 227.14620972]
[172.56973267 211.42817688]
[163.79000854 199.26609802]
[155.01028442 187.10400391]
[146.23056030 174.94190979]
[129.85751343 168.63072205]
[128.13627625 150.29901123]
[119.17210388 138.27221680]
[110.20793152 126.24542999]
[101.24375916 114.21864319]
[103.34461212 129.07080078]
[111.41818237 141.71269226]
[112.22790527 156.69081116]
[105.56425476 170.12940979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 58]
[8 57]
[9 56]
[10 50]
[11 49]
[12 48]
[13 47]
[14 46]
[15 45]
[16 44]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[24 33]
[25 32]
[26 31]
[59 168]
[60 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[84 110]
[85 109]
[86 108]
[87 106]
[88 105]
[89 104]
[91 102]
[92 101]
[93 100]
[94 99]
[112 119]
[113 118]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
[169 201]
[170 200]
[171 199]
[172 198]
[175 196]
[176 195]
[177 194]
[178 193]
[180 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
