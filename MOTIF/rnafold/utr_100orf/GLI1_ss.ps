%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGACUCCAGCCCUGGACCGCGCAUCCCGAGCCCAGCGCCCAGACAGAGUGUCCCCACACCCUCCUCUGAGACGCCAUGUUCAACUCGAUGACCCCACCACCAAUCAGUAGCUAUGGCGAGCCCUGCUGUCUCCGGCCCCUCCCCAGUCAGGGGGCCCCCAGUGUGGGGACAGAAG\
) } def
/len { sequence length } bind def

/coor [
[-3.91359496 282.81542969]
[-18.88220406 281.84552002]
[-31.74178123 274.12338257]
[-39.63233948 261.36648560]
[-40.79901123 246.41191101]
[-34.98116684 232.58406067]
[-47.74663544 240.46078491]
[-60.51210785 248.33750916]
[-73.27758026 256.21423340]
[-72.57023621 268.72817993]
[-77.23439789 280.28402710]
[-86.32411194 288.70260620]
[-98.06527710 292.42477417]
[-110.20173645 290.79989624]
[-120.42878723 284.19866943]
[-133.46281433 291.62252808]
[-146.49685669 299.04641724]
[-159.53088379 306.47027588]
[-162.19244385 311.02810669]
[-165.96690369 313.81225586]
[-169.98428345 314.69641113]
[-173.45207214 313.92114258]
[-186.85874939 320.64877319]
[-200.26542664 327.37640381]
[-213.67210388 334.10403442]
[-213.37185669 349.36419678]
[-219.73028564 363.23980713]
[-231.48492432 372.97589111]
[-246.30187988 376.63931274]
[-261.23922729 373.50271606]
[-273.33114624 364.18884277]
[-280.17678833 350.54699707]
[-280.41696167 335.28576660]
[-274.00393677 321.43527222]
[-262.21102905 311.74557495]
[-247.37977600 308.14053345]
[-232.45489502 311.33593750]
[-220.39973450 320.69735718]
[-206.99305725 313.96972656]
[-193.58638000 307.24209595]
[-180.17970276 300.51446533]
[-166.95477295 293.43624878]
[-153.92073059 286.01235962]
[-140.88668823 278.58850098]
[-127.85266113 271.16461182]
[-126.73775482 253.56292725]
[-115.19533539 240.02062988]
[-97.68660736 236.06172180]
[-81.15429688 243.44876099]
[-68.38883209 235.57203674]
[-55.62335968 227.69531250]
[-42.85789108 219.81858826]
[-30.91100121 210.74821472]
[-19.89393044 200.56861877]
[-8.87685966 190.38902283]
[2.14021158 180.20942688]
[13.15728283 170.02983093]
[24.17435455 159.85023499]
[35.19142532 149.67063904]
[46.20849609 139.49104309]
[57.22556686 129.31144714]
[68.24263763 119.13185883]
[62.96065140 98.37377930]
[70.04158020 78.15850067]
[59.95905685 67.05252075]
[49.87653351 55.94654846]
[34.10280228 51.46084976]
[30.36360550 35.49368286]
[42.50550842 24.47069740]
[58.03796005 29.73139381]
[60.98250961 45.86402130]
[71.06503296 56.96999741]
[81.14756012 68.07597351]
[99.66917419 55.07677841]
[126.16303253 54.16797256]
[130.57237244 39.83069229]
[134.98171997 25.49340820]
[139.39106750 11.15612602]
[143.80041504 -3.18115592]
[148.20976257 -17.51843834]
[152.49313354 -31.89386177]
[156.65017700 -46.30632019]
[160.80723572 -60.71877670]
[159.58224487 -67.26361084]
[161.56768799 -72.62763977]
[165.37133789 -75.55929565]
[170.03163147 -89.81698608]
[174.69190979 -104.07467651]
[174.38562012 -113.23375702]
[179.56111145 -118.54042816]
[184.47090149 -132.71412659]
[189.38069153 -146.88783264]
[178.23342896 -157.26370239]
[172.27612305 -171.27906799]
[172.54090881 -186.50567627]
[178.98190308 -200.30543518]
[190.48316956 -210.28746033]
[205.05204773 -214.72229004]
[220.16438293 -212.84158325]
[233.20187378 -204.97116089]
[241.90571594 -192.47463989]
[244.76788330 -177.51710510]
[241.29251099 -162.69003296]
[232.08172607 -150.56233215]
[218.73133850 -143.23518372]
[203.55439758 -141.97805786]
[198.64460754 -127.80434418]
[193.73481750 -113.63063812]
[188.94960022 -99.41439056]
[184.28932190 -85.15670013]
[179.62902832 -70.89900970]
[175.21968079 -56.56172562]
[171.06263733 -42.14926910]
[166.90557861 -27.73681259]
[168.07635498 -20.41726494]
[162.54704285 -13.10909176]
[158.13769531 1.22819090]
[153.72834778 15.56547356]
[149.31900024 29.90275574]
[144.90966797 44.24003601]
[140.50032043 58.57732010]
[151.06027222 69.23035431]
[165.43569946 64.94699097]
[179.81112671 60.66363144]
[193.26416016 50.34606934]
[206.90267944 60.41717148]
[201.00067139 76.31065369]
[184.09448242 75.03905487]
[169.71905518 79.32241821]
[155.34364319 83.60578156]
[154.62078857 91.07086945]
[169.55096436 92.51655579]
[184.48110962 93.96248627]
[183.03495789 108.89260864]
[168.10527039 107.44673157]
[153.17509460 106.00103760]
[152.45225525 113.46611786]
[165.73880005 120.42800140]
[179.02534485 127.38988495]
[192.31187439 134.35176086]
[205.59841919 141.31364441]
[218.88496399 148.27552795]
[232.17150879 155.23739624]
[245.53186035 147.52348328]
[260.94067383 148.28010559]
[273.48101807 157.26582336]
[279.15133667 171.61334229]
[276.14224243 186.74440002]
[265.41394043 197.83073425]
[250.38978577 201.33476257]
[235.86392212 196.13833618]
[226.47151184 183.89961243]
[225.20962524 168.52394104]
[211.92308044 161.56207275]
[198.63653564 154.60018921]
[185.35000610 147.63830566]
[172.06346130 140.67642212]
[158.77691650 133.71453857]
[145.49037170 126.75266266]
[132.24400330 137.73416138]
[117.03089905 143.26280212]
[101.86180878 143.31455994]
[88.53455353 138.54573059]
[78.42223358 130.14892578]
[67.40515900 140.32852173]
[56.38809204 150.50811768]
[45.37102127 160.68771362]
[34.35394669 170.86730957]
[23.33687782 181.04690552]
[12.31980610 191.22650146]
[1.30273485 201.40609741]
[-9.71433640 211.58569336]
[-20.73140717 221.76527405]
[-5.85078192 219.87663269]
[8.24066830 225.01774597]
[18.40898514 236.04522705]
[22.39272308 250.50654602]
[19.30589104 265.18548584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 52]
[7 51]
[8 50]
[9 49]
[15 45]
[16 44]
[17 43]
[18 42]
[22 41]
[23 40]
[24 39]
[25 38]
[53 173]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[61 165]
[62 164]
[64 73]
[65 72]
[66 71]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 114]
[82 113]
[83 112]
[86 111]
[87 110]
[88 109]
[90 108]
[91 107]
[92 106]
[122 130]
[123 129]
[124 128]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[143 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
