%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGCAGGCUUCAGGAUUUGAAGUUUGAGCCCAUCCCUGAGGUAGAGCCGGAAUUUACCUUUGUACUUCACACGGUCAGGGUUGGUGGUGACUACGUGGGUCUGGAGCUGACUGCCGUCCUGACACGUCCUAGAGCUGCAAGCAGGUCCUGCCAGAGAGCCACCAUGACCUCUCAGCCUCUCAGGCUAGCAGAAGAGUAUGGCCCAAGUCCUGGGGAGUCUGAACUGGCUGUGAACCCCUUUGAUGGGCUUCCC\
UUCUCUUCCC\
) } def
/len { sequence length } bind def

/coor [
[59.70572662 434.53216553]
[45.93627548 428.58218384]
[34.37162399 419.02923584]
[25.92885590 406.63085938]
[21.27748489 392.37026978]
[20.78668404 377.37539673]
[14.92390537 391.18218994]
[9.06112671 404.98901367]
[3.19834781 418.79580688]
[-2.66443110 432.60260010]
[-8.52721024 446.40942383]
[-14.38998890 460.21621704]
[-20.25276756 474.02301025]
[-26.11554718 487.82983398]
[-21.46508408 503.18408203]
[-30.68826675 516.31085205]
[-46.70985794 517.14044189]
[-57.23946381 505.03643799]
[-54.19966888 489.28399658]
[-39.92234802 481.96704102]
[-34.05957031 468.16024780]
[-28.19679260 454.35345459]
[-22.33401299 440.54663086]
[-16.47123528 426.73983765]
[-10.60845566 412.93304443]
[-4.74567699 399.12622070]
[1.11710191 385.31942749]
[6.97988081 371.51263428]
[11.17495346 357.11117554]
[13.64387226 342.31576538]
[16.11279106 327.52035522]
[18.58171082 312.72491455]
[21.05062866 297.92950439]
[23.51954842 283.13409424]
[25.98846626 268.33865356]
[28.45738602 253.54324341]
[22.87985039 248.52915955]
[11.72477818 238.50097656]
[6.14724207 233.48689270]
[-8.30273438 237.51158142]
[-22.75271034 241.53628540]
[-37.20268631 245.56097412]
[-51.65266418 249.58567810]
[-66.10263824 253.61036682]
[-80.55261993 257.63507080]
[-91.77074432 268.79141235]
[-106.10734558 264.75271606]
[-120.55731964 268.77743530]
[-127.54849243 279.59033203]
[-139.64137268 282.65756226]
[-150.23783875 276.86688232]
[-164.73434448 280.72064209]
[-172.44560242 294.51599121]
[-187.67561340 298.73764038]
[-201.38867188 290.88095093]
[-205.44906616 275.60717773]
[-197.44783020 261.97793579]
[-182.13197327 258.07925415]
[-168.58810425 266.22415161]
[-154.09159851 262.37039185]
[-142.32226562 249.33387756]
[-124.58201599 254.32743835]
[-110.13204193 250.30274963]
[-99.94747925 239.43426514]
[-84.57731628 243.18508911]
[-70.12733459 239.16040039]
[-55.67736053 235.13569641]
[-41.22738266 231.11100769]
[-26.77740669 227.08630371]
[-12.32743073 223.06161499]
[2.12254596 219.03691101]
[13.73874664 209.54670715]
[20.56438446 196.18966675]
[27.39002228 182.83262634]
[34.21566010 169.47557068]
[41.04129791 156.11853027]
[47.86693573 142.76148987]
[54.69257355 129.40443420]
[61.51821136 116.04739380]
[68.34384918 102.69034576]
[70.63785553 87.86679840]
[68.16893768 73.07138062]
[65.70001984 58.27596283]
[63.05653381 43.51073456]
[60.23885727 28.77775383]
[57.42117691 14.04477406]
[54.60349655 -0.68820494]
[51.78581619 -15.42118454]
[48.96813583 -30.15416336]
[46.15045547 -44.88714218]
[35.95179367 -52.74736023]
[33.89368057 -65.05223083]
[40.53961945 -75.13430786]
[37.89613724 -89.89953613]
[27.95119476 -93.59731293]
[20.48270416 -101.01983643]
[16.78071022 -110.79107666]
[17.44565201 -121.13818359]
[22.29200935 -130.21304321]
[30.39340591 -136.42243958]
[28.27462578 -151.27204895]
[26.15584564 -166.12164307]
[16.33975983 -174.45472717]
[14.86503220 -186.84306335]
[21.97967529 -196.60003662]
[20.03642082 -211.47363281]
[18.09316635 -226.34721375]
[8.63325214 -239.02873230]
[14.65652657 -252.65110779]
[12.71327114 -267.52471924]
[10.77001572 -282.39828491]
[-1.47502720 -292.02621460]
[-3.23388433 -307.13781738]
[6.02031946 -318.75225830]
[4.07706451 -333.62585449]
[2.13380933 -348.49945068]
[-7.32610464 -361.18096924]
[-1.30283010 -374.80334473]
[-3.24608517 -389.67694092]
[-12.70599937 -402.35845947]
[-6.68272448 -415.98083496]
[-8.62597942 -430.85443115]
[-10.56923485 -445.72802734]
[-24.26247215 -453.02697754]
[-31.02001953 -466.99536133]
[-28.24346352 -482.26199341]
[-17.00044441 -492.95657349]
[-1.61413407 -494.96682739]
[11.99911785 -487.51974487]
[18.60473824 -473.47888184]
[15.66273117 -458.24325562]
[4.30435801 -447.67126465]
[6.24761295 -432.79769897]
[8.19086838 -417.92410278]
[17.51178741 -406.30645752]
[11.62750721 -391.62020874]
[13.57076263 -376.74661255]
[22.89168167 -365.12896729]
[17.00740242 -350.44271851]
[18.95065689 -335.56912231]
[20.89391136 -320.69552612]
[32.82143402 -311.84851074]
[35.00405121 -296.79223633]
[25.64360809 -284.34155273]
[27.58686447 -269.46795654]
[29.53011894 -254.59436035]
[38.85103989 -242.97671509]
[32.96675873 -228.29048157]
[34.91001511 -213.41688538]
[36.85326767 -198.54328918]
[48.25519562 -185.18426514]
[41.00545120 -168.24043274]
[43.12422943 -153.39082336]
[45.24301147 -138.54121399]
[61.64500427 -127.97822571]
[64.98976898 -108.44675446]
[52.66136551 -92.54302216]
[55.30484772 -77.77779388]
[67.32492828 -64.97211456]
[60.88343430 -47.70482254]
[63.70111465 -32.97184372]
[66.51879120 -18.23886490]
[69.33647156 -3.50588512]
[72.15415192 11.22709370]
[74.97183228 25.96007347]
[77.78951263 40.69305420]
[81.14007568 44.05350494]
[82.43606567 49.54346848]
[80.49543762 55.80704498]
[82.96435547 70.60246277]
[85.43327332 85.39788055]
[96.94335938 80.95050049]
[108.06980896 83.95411682]
[114.75147247 92.32524872]
[129.75042725 92.14809418]
[144.74938965 91.97093964]
[159.74833679 91.79378510]
[173.45616150 83.89404297]
[186.27392578 91.48049164]
[201.27288818 91.30333710]
[216.27183533 91.12618256]
[231.27079773 90.94902802]
[246.26974487 90.77188110]
[261.26739502 90.50615692]
[276.26321411 90.15187073]
[291.25903320 89.79759216]
[306.25247192 89.35475922]
[321.24307251 88.82340240]
[337.86996460 77.38717651]
[354.51190186 87.27040863]
[369.48577881 86.38513184]
[375.72817993 72.41048431]
[387.75708008 62.94664383]
[402.80831909 60.16834641]
[417.42321777 64.71401215]
[428.24337769 75.53909302]
[432.78244019 90.15605164]
[429.99734497 105.20602417]
[420.52804565 117.23064423]
[406.55059814 123.46672821]
[391.27682495 122.48127747]
[378.21661377 114.50074005]
[370.37103271 101.35898590]
[355.39718628 102.24426270]
[349.35440063 110.43327332]
[339.60269165 114.03703308]
[329.25973511 111.64718628]
[321.77444458 103.81398773]
[306.78384399 104.34534454]
[300.23275757 107.71157837]
[291.61331177 104.79340363]
[276.61749268 105.14768982]
[261.62167358 105.50196838]
[255.03128052 108.79059601]
[246.44689941 105.77082825]
[231.44795227 105.94798279]
[216.44898987 106.12513733]
[201.45004272 106.30229187]
[186.45108032 106.47944641]
[173.81608582 114.36651611]
[159.92549133 106.79273987]
[144.92654419 106.96989441]
[129.92758179 107.14704895]
[114.92862701 107.32420349]
[100.21818542 118.62573242]
[81.70089722 109.51598358]
[74.87525940 122.87303162]
[68.04962158 136.23007202]
[61.22397995 149.58712769]
[54.39834213 162.94416809]
[47.57270432 176.30120850]
[40.74706650 189.65826416]
[33.92142868 203.01530457]
[27.09579277 216.37234497]
[35.52981949 203.96803284]
[48.73481750 196.85269165]
[63.73317719 196.63079834]
[77.14289093 203.35238647]
[85.94017792 215.50177002]
[88.14132690 230.33938599]
[83.25000000 244.51947021]
[72.36914825 254.84454346]
[57.95230484 258.98635864]
[43.25280380 256.01217651]
[40.78388596 270.80758667]
[38.31496811 285.60299683]
[35.84605026 300.39843750]
[33.37712860 315.19384766]
[30.90821075 329.98925781]
[28.43929291 344.78466797]
[25.97037315 359.58010864]
[34.43500900 347.19665527]
[46.01649857 337.66412354]
[59.79643250 331.73846436]
[74.68204498 329.88955688]
[89.49291229 332.26406860]
[103.05452728 338.67364502]
[114.29143524 348.61001587]
[122.31256104 361.28524780]
[126.48181915 375.69418335]
[126.46858215 390.69418335]
[122.27390289 405.09573364]
[114.23042297 417.75680542]
[102.97599030 427.67333984]
[89.40309143 434.05899048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[14 20]
[29 251]
[30 250]
[31 249]
[32 248]
[33 247]
[34 246]
[35 245]
[36 244]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[47 63]
[48 62]
[51 60]
[52 59]
[72 234]
[73 233]
[74 232]
[75 231]
[76 230]
[77 229]
[78 228]
[79 227]
[80 226]
[81 171]
[82 170]
[83 169]
[84 166]
[85 165]
[86 164]
[87 163]
[88 162]
[89 161]
[90 160]
[93 158]
[94 157]
[100 154]
[101 153]
[102 152]
[105 150]
[106 149]
[107 148]
[109 146]
[110 145]
[111 144]
[114 141]
[115 140]
[116 139]
[118 137]
[119 136]
[121 134]
[122 133]
[123 132]
[174 224]
[175 223]
[176 222]
[177 221]
[179 219]
[180 218]
[181 217]
[182 216]
[183 215]
[184 213]
[185 212]
[186 211]
[187 209]
[188 208]
[190 204]
[191 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
