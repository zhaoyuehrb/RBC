%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCUUGCGCAGAAGAGACUCCCGGGCUCUUAACGUCGGGUAUCAGGAGUUUCUUCCCGGAGCAAGGACCCCCAAGACGGAAGAGGAUGGCCGCGGCGGCUCUGAGGAGAUUUUGGUCCCGGCGCCGCGCAGAGGCGGGCGACGCGGUAGUGGCGAAGCCGGGAGUGUGGGCGCGGCUGGGGUCCU\
) } def
/len { sequence length } bind def

/coor [
[-109.44342804 197.74287415]
[-117.73897552 201.69509888]
[-126.78463745 201.37997437]
[-134.54508972 196.99546814]
[-148.15144348 203.30949402]
[-161.75781250 209.62350464]
[-175.36416626 215.93753052]
[-181.84713745 222.40139771]
[-189.25105286 222.24125671]
[-202.96102905 228.32704163]
[-208.32435608 240.07153320]
[-219.88464355 244.85296631]
[-231.22538757 240.60847473]
[-245.03514099 246.46430969]
[-258.84487915 252.32014465]
[-272.65463257 258.17599487]
[-286.46438599 264.03182983]
[-300.27413940 269.88766479]
[-314.08389282 275.74349976]
[-327.89364624 281.59933472]
[-341.70336914 287.45516968]
[-355.51312256 293.31103516]
[-369.32287598 299.16687012]
[-379.00744629 311.67764282]
[-393.74536133 309.52288818]
[-407.55511475 315.37872314]
[-421.31546021 321.34976196]
[-435.02542114 327.43551636]
[-448.73538208 333.52130127]
[-462.44537354 339.60708618]
[-465.55664062 354.80905151]
[-477.03189087 365.25405884]
[-492.45864868 366.92581177]
[-505.90499878 359.18145752]
[-512.20056152 344.99887085]
[-508.92459106 329.83157349]
[-497.33670044 319.51165771]
[-481.89270020 318.00735474]
[-468.53115845 325.89712524]
[-454.82116699 319.81134033]
[-441.11120605 313.72555542]
[-427.40124512 307.63977051]
[-422.55355835 302.04119873]
[-413.41094971 301.56896973]
[-399.60119629 295.71313477]
[-390.90438843 283.62121582]
[-375.17871094 285.35711670]
[-361.36895752 279.50128174]
[-347.55923462 273.64544678]
[-333.74948120 267.78958130]
[-319.93972778 261.93374634]
[-306.12997437 256.07791138]
[-292.32022095 250.22207642]
[-278.51046753 244.36624146]
[-264.70074463 238.51040649]
[-250.89097595 232.65455627]
[-237.08123779 226.79872131]
[-227.29765320 212.24017334]
[-209.04681396 214.61706543]
[-195.33683777 208.53128052]
[-181.67819214 202.33116150]
[-168.07183838 196.01715088]
[-154.46546936 189.70312500]
[-140.85910034 183.38909912]
[-130.54089355 165.52673340]
[-109.23448181 167.69470215]
[-95.96161652 160.70678711]
[-82.68874359 153.71887207]
[-69.41587830 146.73095703]
[-56.14300919 139.74304199]
[-42.87014008 132.75512695]
[-29.59727097 125.76721954]
[-16.32440186 118.77930450]
[-31.31271744 118.18738556]
[-45.22387314 112.57670593]
[-56.42882538 102.60428619]
[-63.61543655 89.43794250]
[-65.94213104 74.61949158]
[-63.13644409 59.88422394]
[-55.52693558 46.95768738]
[-44.00469589 37.35362625]
[-29.91902542 32.19670105]
[-14.91939926 32.09080887]
[-0.76232457 37.04835129]
[10.89435863 46.48878479]
[18.68561363 59.30659866]
[21.69905853 74.00078583]
[19.58181000 88.85060883]
[12.58180237 102.11710358]
[1.51635492 112.24826050]
[16.16380310 109.01526642]
[30.81125069 105.78226471]
[45.45869827 102.54927063]
[60.10614777 99.31626892]
[74.75359344 96.08327484]
[89.40103912 92.85027313]
[101.97654724 84.67368317]
[110.87424469 72.59763336]
[119.77194214 60.52158356]
[128.66963196 48.44553375]
[137.56733704 36.36948395]
[139.52424622 20.66976738]
[153.30287170 15.01303101]
[162.20057678 2.93698049]
[171.09826660 -9.13907051]
[173.67707825 -17.92315483]
[180.24691772 -21.34090424]
[189.34515381 -33.26659012]
[198.44340515 -45.19227600]
[193.86604309 -60.01885605]
[198.90959167 -74.69340515]
[211.63467407 -83.57325745]
[227.14825439 -83.24392700]
[239.48504639 -73.83205414]
[243.90129089 -58.95668793]
[238.69885254 -44.33771896]
[225.87817383 -35.59643173]
[210.36907959 -36.09403229]
[201.27084351 -24.16834641]
[192.17260742 -12.24266148]
[183.17431641 -0.24137424]
[174.27662659 11.83467674]
[165.37892151 23.91072655]
[164.05844116 38.74668121]
[149.64338684 45.26717758]
[140.74568176 57.34322739]
[131.84799194 69.41928101]
[122.95029449 81.49533081]
[114.05259705 93.57138062]
[122.43818665 106.00849915]
[136.96942139 102.28786469]
[148.30912781 90.44121552]
[164.17201233 94.60066223]
[168.23970032 110.48732758]
[156.32769775 121.75836182]
[140.69006348 116.81910706]
[126.15882111 120.53974152]
[125.97084808 128.03738403]
[125.40692139 150.53031921]
[139.73345947 154.97445679]
[154.05999756 159.41857910]
[167.92106628 152.31164551]
[182.38690186 157.02270508]
[189.07685852 170.28091431]
[203.40339661 174.72505188]
[217.72993469 179.16918945]
[230.78059387 170.55441284]
[246.30944824 172.39526367]
[256.98425293 183.82254028]
[257.76467896 199.44064331]
[248.28224182 211.87516785]
[233.01425171 215.25491333]
[219.16979980 207.98408508]
[213.28579712 193.49572754]
[198.95925903 189.05158997]
[184.63272095 184.60745239]
[171.61380005 191.75190735]
[157.02134705 187.44900513]
[149.61585999 173.74511719]
[135.28932190 169.30097961]
[120.96278381 164.85685730]
[131.40487671 175.62545776]
[121.23635101 186.65274048]
[107.73654938 193.19149780]
[92.78009796 194.33372498]
[78.44391632 189.92080688]
[66.71877289 180.56555176]
[59.23285675 167.56704712]
[57.02570343 152.73031616]
[60.40380096 138.11564636]
[68.89804840 125.75249481]
[81.32967377 117.35730743]
[92.63404083 107.49772644]
[77.98659515 110.73072052]
[63.33914185 113.96372223]
[48.69169617 117.19671631]
[34.04424667 120.42971802]
[19.39680099 123.66271210]
[4.74935246 126.89570618]
[-9.33648682 132.05216980]
[-22.60935593 139.04008484]
[-35.88222504 146.02799988]
[-49.15509415 153.01591492]
[-62.42796326 160.00382996]
[-75.70082855 166.99174500]
[-88.97370148 173.97966003]
[-102.24656677 180.96757507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 64]
[5 63]
[6 62]
[7 61]
[9 60]
[10 59]
[13 57]
[14 56]
[15 55]
[16 54]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[25 45]
[26 44]
[27 42]
[28 41]
[29 40]
[30 39]
[66 187]
[67 186]
[68 185]
[69 184]
[70 183]
[71 182]
[72 181]
[73 180]
[90 179]
[91 178]
[92 177]
[93 176]
[94 175]
[95 174]
[96 173]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[103 123]
[104 122]
[105 121]
[107 120]
[108 119]
[109 118]
[130 137]
[131 136]
[139 161]
[140 160]
[141 159]
[144 156]
[145 155]
[146 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
