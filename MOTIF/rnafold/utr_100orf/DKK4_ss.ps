%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACGACGUGCUGAGCUGCCAGCUUAGUGGAAGCUCUGCUCUGGGUGGAGAGCAGCCUCGCUUUGGUGACGCACAGUGCUGGGACCCUCCAGGAGCCCCGGGAUUGAAGGAUGGUGGCGGCCGUCCUGCUGGGGCUGAGCUGGCUCUGCUCUCCCCUGGGAGCUCUGGUCCUGGACUUCAACAACAUCAGGAGCUCUGCUGACCUGCAUG\
) } def
/len { sequence length } bind def

/coor [
[64.72801208 169.80221558]
[61.04486847 184.34300232]
[61.77733612 199.32510376]
[47.80284119 204.77610779]
[38.19729233 193.25509644]
[46.07204056 180.48916626]
[49.86676025 165.97709656]
[53.66147995 151.46502686]
[57.45619583 136.95295715]
[61.25091553 122.44089508]
[53.98764801 120.57141113]
[43.70001602 131.48767090]
[39.86609268 146.83731079]
[25.50637054 150.79301453]
[15.21873569 161.70927429]
[4.93110085 172.62551880]
[-5.35653353 183.54177856]
[-15.64416885 194.45802307]
[-19.47808838 209.80767822]
[-33.83781052 213.76338196]
[-44.12544632 224.67962646]
[-54.41308212 235.59588623]
[-53.69428253 251.38381958]
[-64.41132355 262.99935913]
[-80.20597839 263.55117798]
[-91.70755005 252.71194458]
[-92.09236908 236.91233826]
[-81.13212585 225.52600098]
[-65.32933807 225.30825806]
[-55.04169846 214.39199829]
[-44.75406647 203.47575378]
[-41.65598679 188.90690613]
[-26.56042099 184.17039490]
[-16.27278709 173.25413513]
[-5.98515177 162.33789062]
[4.30248308 151.42163086]
[14.59011841 140.50538635]
[17.68819809 125.93653870]
[32.78376007 121.20003510]
[43.07139587 110.28377533]
[69.53981781 86.71378326]
[95.35575867 92.74589539]
[93.14105988 77.91029358]
[90.92636108 63.07468796]
[88.71166229 48.23908615]
[86.49696350 33.40348434]
[82.13510895 25.37866783]
[84.36106110 18.33179665]
[82.36644745 3.46500468]
[80.37182617 -11.40178680]
[78.37721252 -26.26857948]
[76.38259125 -41.13537216]
[74.38797760 -56.00216293]
[72.39335632 -70.86895752]
[70.39874268 -85.73574829]
[68.18404388 -100.57135010]
[65.74974823 -115.37250519]
[63.31545639 -130.17366028]
[53.31036377 -138.31294250]
[51.58720016 -150.69042969]
[58.52949142 -160.59596252]
[56.31479263 -175.43156433]
[54.10009384 -190.26716614]
[51.88539505 -205.10276794]
[36.19767761 -187.59141541]
[12.06950378 -178.14250183]
[-17.14615822 -179.65820312]
[-30.06181335 -187.28616333]
[-42.97746658 -194.91413879]
[-59.69040298 -197.76266479]
[-61.57979584 -214.61100769]
[-45.91293335 -221.09063721]
[-35.34949875 -207.82978821]
[-22.43384552 -200.20181274]
[-9.51819229 -192.57385254]
[-4.33407450 -197.99371338]
[-15.17363071 -208.36213684]
[-4.80503607 -219.20152283]
[6.03416014 -208.83345032]
[11.21827793 -214.25331116]
[3.02385187 -226.81719971]
[-5.17057419 -239.38108826]
[-13.36499977 -251.94499207]
[-21.55942535 -264.50888062]
[-36.42258453 -271.43841553]
[-37.58326721 -287.79644775]
[-23.84745789 -296.75521851]
[-9.34538364 -289.09872437]
[-8.99553394 -272.70330811]
[-0.80110765 -260.13940430]
[7.39331818 -247.57551575]
[15.58774376 -235.01162720]
[23.78216934 -222.44773865]
[38.63443375 -224.55255127]
[53.48537827 -226.65716553]
[57.86623001 -241.00317383]
[62.24708176 -255.34919739]
[66.62793732 -269.69522095]
[71.00878906 -284.04122925]
[75.38964081 -298.38723755]
[79.77049255 -312.73324585]
[84.15134430 -327.07928467]
[79.22898102 -332.75088501]
[76.60108185 -339.71316528]
[76.54919434 -347.08660889]
[79.03260803 -353.95715332]
[83.69921112 -359.48925781]
[89.93459320 -363.02774048]
[96.94268036 -364.17504883]
[102.37349701 -378.15740967]
[107.80431366 -392.13973999]
[113.23513031 -406.12210083]
[118.66594696 -420.10446167]
[124.09675598 -434.08682251]
[129.52757263 -448.06918335]
[134.95838928 -462.05151367]
[131.92362976 -478.16741943]
[144.53765869 -488.64685059]
[159.82423401 -482.70947266]
[162.05784607 -466.46313477]
[148.94075012 -456.62069702]
[143.50993347 -442.63836670]
[138.07911682 -428.65600586]
[132.64830017 -414.67364502]
[127.21748352 -400.69128418]
[121.78666687 -386.70892334]
[116.35585022 -372.72659302]
[110.92503357 -358.74423218]
[116.71752930 -337.05313110]
[98.49735260 -322.69842529]
[94.11650085 -308.35241699]
[89.73564911 -294.00637817]
[85.35479736 -279.66036987]
[80.97394562 -265.31436157]
[76.59310150 -250.96833801]
[72.21224976 -236.62232971]
[67.83139801 -222.27632141]
[66.72100067 -207.31747437]
[68.93569946 -192.48187256]
[71.15039825 -177.64627075]
[73.36509705 -162.81066895]
[85.01157379 -149.68290710]
[78.11661530 -132.60795593]
[80.55090332 -117.80680084]
[82.98519897 -103.00564575]
[86.27381134 -99.54335785]
[87.42282867 -93.97866058]
[85.26553345 -87.73036194]
[87.26014709 -72.86357117]
[89.25476837 -57.99678040]
[91.24938202 -43.12998962]
[93.24400330 -28.26319695]
[95.23861694 -13.39640427]
[97.23323822 1.47038770]
[99.22785187 16.33717918]
[101.33256531 31.18878555]
[103.54726410 46.02438736]
[105.76196289 60.85998917]
[107.97666168 75.69559479]
[110.19136047 90.53119659]
[118.19871521 103.21513367]
[130.63980103 111.59484100]
[143.08088684 119.97454071]
[155.52197266 128.35424805]
[167.96305847 136.73394775]
[180.40414429 145.11364746]
[192.90696716 153.40093994]
[205.47087097 161.59536743]
[218.03475952 169.78977966]
[230.59864807 177.98420715]
[245.87532043 174.94097900]
[258.50015259 183.43026733]
[261.30725098 198.01300049]
[273.87115479 206.20741272]
[288.32000732 200.54962158]
[303.32638550 204.49775696]
[313.12008667 216.53367615]
[313.93518066 232.02932739]
[305.45828247 245.02632141]
[290.94891357 250.52703857]
[275.98623657 246.41635132]
[266.32369995 234.27490234]
[265.67672729 218.77131653]
[253.11283875 210.57688904]
[238.63591003 213.88661194]
[225.77760315 205.75527954]
[222.40422058 190.54811096]
[209.84033203 182.35368347]
[197.27644348 174.15925598]
[184.71253967 165.96482849]
[177.39334106 164.94380188]
[172.02444458 157.55473328]
[159.58335876 149.17503357]
[147.14227295 140.79531860]
[134.70118713 132.41561890]
[122.26009369 124.03591919]
[109.81900787 115.65621948]
[97.56725311 124.31037140]
[101.30621338 138.83691406]
[105.04516602 153.36343384]
[118.77909851 161.18359375]
[122.88013458 176.44653320]
[114.91520691 190.09700012]
[99.60977173 194.03643799]
[86.04426575 185.92764282]
[82.26686859 170.58142090]
[90.51863861 157.10240173]
[86.77967834 142.57586670]
[83.04071808 128.04933167]
[75.77745056 126.17985535]
[72.09430695 140.72064209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 40]
[12 39]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[20 31]
[21 30]
[22 29]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[55 148]
[56 145]
[57 144]
[58 143]
[61 141]
[62 140]
[63 139]
[64 138]
[67 75]
[68 74]
[69 73]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
[101 131]
[102 130]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[161 197]
[162 196]
[163 195]
[164 194]
[165 193]
[166 192]
[167 190]
[168 189]
[169 188]
[170 187]
[173 184]
[174 183]
[198 209]
[199 208]
[200 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
