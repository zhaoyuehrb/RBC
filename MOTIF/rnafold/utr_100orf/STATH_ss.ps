%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUUAAAUACAUUGGCCCUCUAGGGUAGCACAUCAUCUCUUGAAGCUUCACUUCAACUUCACUACUUCUGUAGUCUCAUCUUGAGUAAAAGAGAACCCAGCCAACUAUGAAGUUCCUUGUCUUUGCCUUCAUCUUGGCUCUCAUGGUUUCCAUGAUUGGAGCUGAUUCAUCUGAAGAGAAAUUUUUGCGUAGAAUUGGAAGAUUCG\
) } def
/len { sequence length } bind def

/coor [
[53.68753052 525.01690674]
[46.18836212 524.90527344]
[42.00135040 539.30902100]
[37.81434250 553.71282959]
[33.62733078 568.11657715]
[29.44031906 582.52038574]
[37.27072144 596.24847412]
[33.01990509 611.47033691]
[19.20979881 619.15515137]
[4.03369665 614.74365234]
[-3.50468969 600.85308838]
[1.06703019 585.72448730]
[15.03653622 578.33337402]
[19.22354698 563.92956543]
[23.41055870 549.52581787]
[27.59757042 535.12200928]
[31.78458214 520.71826172]
[25.22523499 517.08160400]
[5.54719353 506.17178345]
[-4.45097876 517.35375977]
[-14.44915104 528.53570557]
[-24.44732285 539.71771240]
[-27.26967430 555.87213135]
[-42.76186371 561.25024414]
[-54.98685455 550.31951904]
[-51.36862183 534.32446289]
[-35.62929916 529.71954346]
[-25.63112450 518.53753662]
[-15.63295364 507.35559082]
[-5.63478136 496.17361450]
[16.25947380 461.72064209]
[45.94712830 460.54891968]
[48.83240128 445.82904053]
[51.71767426 431.10913086]
[38.74196243 421.78274536]
[31.10465431 407.68008423]
[30.37938690 391.60034180]
[36.76205826 376.76049805]
[49.02146530 366.15148926]
[64.73645782 361.93569946]
[67.40225220 347.17449951]
[70.06804657 332.41326904]
[72.73384857 317.65206909]
[75.39964294 302.89083862]
[78.06543732 288.12960815]
[62.83277512 270.81011963]
[65.41499329 247.62579346]
[84.51017761 233.77384949]
[85.40299225 218.80044556]
[86.29580688 203.82704163]
[87.18862152 188.85363770]
[88.08143616 173.88021851]
[88.97425842 158.90681458]
[89.86707306 143.93341064]
[83.09078217 141.79592896]
[76.73444366 138.62039185]
[70.95593262 134.48570251]
[65.89875031 129.49450684]
[61.68851089 123.77079773]
[58.42976761 117.45671844]
[56.20346451 110.70909119]
[55.06488419 103.69548798]
[55.04231262 96.59010315]
[56.13630295 89.56940460]
[58.31969070 82.80776215]
[45.59765625 74.86107635]
[32.87561798 66.91439056]
[20.15358162 58.96770859]
[7.43154621 51.02102661]
[-8.96757698 50.99248505]
[-16.90674400 36.64320755]
[-8.21881962 22.73450661]
[8.15880299 23.57445526]
[15.37823009 38.29898834]
[28.10026741 46.24567413]
[40.82230377 54.19235992]
[53.54433823 62.13904190]
[66.26637268 70.08572388]
[69.20452881 67.06886292]
[72.41133118 64.33928680]
[65.33422852 51.11375427]
[58.52614212 45.02378082]
[58.25187683 37.63821793]
[51.37246323 24.30878830]
[44.49304962 10.97935867]
[37.61363602 -2.35007095]
[22.48330688 -6.91610003]
[15.08694649 -20.88282585]
[19.81268883 -35.96403503]
[33.85683060 -43.21231842]
[48.88723755 -38.32739258]
[55.98662949 -24.20740128]
[50.94306564 -9.22948360]
[57.82247925 4.09994555]
[64.70188904 17.42937469]
[71.58130646 30.75880432]
[78.55975342 44.03665161]
[85.63686371 57.26217651]
[91.54808807 55.71245956]
[97.61457825 54.97632980]
[103.72489166 55.06731415]
[109.76676941 55.98373795]
[115.62923431 57.70877075]
[123.09697723 44.69981766]
[130.56471252 31.69086456]
[138.03245544 18.68191147]
[145.50019836 5.67295980]
[152.96794128 -7.33599234]
[150.35824585 -19.96739578]
[156.84596252 -30.64884186]
[168.48695374 -33.93730927]
[176.14755249 -46.83363342]
[183.80815125 -59.72996140]
[191.46875000 -72.62628937]
[199.12934875 -85.52261353]
[206.78993225 -98.41894531]
[197.65853882 -110.57154846]
[193.87767029 -125.29477692]
[196.02388000 -140.34344482]
[203.76989746 -153.42272949]
[215.93450928 -162.53813171]
[230.66268921 -166.29963684]
[245.70852661 -164.13362122]
[258.77758789 -156.37040710]
[267.87701416 -144.19381714]
[271.61911011 -129.46069336]
[269.43331909 -114.41773224]
[261.65292358 -101.35887146]
[249.46437073 -92.27549744]
[234.72633362 -88.55275726]
[219.68626404 -90.75834656]
[212.02566528 -77.86201477]
[204.36506653 -64.96569061]
[196.70446777 -52.06936646]
[189.04386902 -39.17303848]
[181.38328552 -26.27671051]
[182.11143494 -8.74283695]
[165.97689819 0.13174868]
[158.50915527 13.14070129]
[151.04141235 26.14965248]
[143.57366943 39.15860748]
[136.10592651 52.16755676]
[128.63818359 65.17651367]
[136.75022888 73.88023376]
[142.30307007 84.40285492]
[157.04403687 81.62725067]
[171.78500366 78.85163879]
[186.52597046 76.07602692]
[201.26692200 73.30041504]
[216.00788879 70.52480316]
[230.45468140 61.65199280]
[242.97999573 73.07795715]
[235.46792603 88.27680969]
[218.78350830 85.26576996]
[204.04254150 88.04137421]
[189.30157471 90.81698608]
[174.56060791 93.59259796]
[159.81965637 96.36820984]
[145.07868958 99.14382172]
[133.83343506 129.80134583]
[104.84047699 144.82623291]
[103.94766235 159.79963684]
[103.05484772 174.77304077]
[102.16203308 189.74644470]
[101.26921082 204.71984863]
[100.37639618 219.69325256]
[99.48358154 234.66667175]
[106.01197815 237.85594177]
[111.53800201 242.53950500]
[115.72875214 248.42103577]
[118.33527374 255.13252258]
[119.20733643 262.25723267]
[118.30201721 269.35568237]
[115.68574524 275.99255371]
[111.52947998 281.76367188]
[106.09764099 286.32037354]
[99.73127747 289.39065552]
[92.82665253 290.79541016]
[90.16085815 305.55664062]
[87.49506378 320.31784058]
[84.82926941 335.07907104]
[82.16347504 349.84027100]
[79.49767303 364.60150146]
[91.24720764 372.45614624]
[99.09181213 384.16024780]
[101.87455750 397.92840576]
[99.20765686 411.67532349]
[91.52617645 423.33184814]
[80.01743317 431.15621948]
[66.43756104 433.99441528]
[63.55229187 448.71429443]
[60.66701889 463.43420410]
[75.14474487 466.33938599]
[88.27095032 478.26104736]
[94.84283447 498.00384521]
[90.70709991 521.59558105]
[94.46340179 536.11767578]
[98.21969604 550.63970947]
[101.97599792 565.16180420]
[105.73229980 579.68383789]
[117.60675049 590.99444580]
[113.48625946 606.86749268]
[97.60963440 610.97412109]
[86.30938721 599.08984375]
[91.21024323 583.44012451]
[87.45394135 568.91809082]
[83.69763947 554.39599609]
[79.94133759 539.87396240]
[76.18503571 525.35192871]
[68.68586731 525.24023438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[19 30]
[20 29]
[21 28]
[22 27]
[32 192]
[33 191]
[34 190]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[45 178]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[80 98]
[81 97]
[83 96]
[84 95]
[85 94]
[86 93]
[103 143]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[111 136]
[112 135]
[113 134]
[114 133]
[115 132]
[116 131]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
[196 209]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
