%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCUUUCAUUUCCGCUUCCGGUGCGGGCCGCGCGCGAGCGCAGCGGUGGGAGGCGGCGACCAGCCGGUUGAGGCCCCAGGCUUGGCCUCACCACAAUGUGGCACGAGGCUCGGAAGCAUGAGCGGAAGCUUCGAGGCAUGAUGGUCGACUACAAGAAGAGGGCGGAGCGGAGACGGGAGUAUUAUGAAAAGAUCA\
) } def
/len { sequence length } bind def

/coor [
[114.70977020 407.23852539]
[116.04476929 392.20919800]
[121.22506714 378.03787231]
[129.89746094 365.69070435]
[141.47064209 356.00961304]
[155.15553284 349.65460205]
[152.56378174 334.88021851]
[149.97201538 320.10583496]
[147.38024902 305.33142090]
[144.78848267 290.55703735]
[134.96847534 279.35806274]
[140.20495605 264.42855835]
[137.61318970 249.65417480]
[135.02142334 234.87977600]
[132.42965698 220.10539246]
[129.83789062 205.33099365]
[127.24611664 190.55659485]
[124.65435791 175.78219604]
[122.06259155 161.00781250]
[119.47082520 146.23341370]
[116.87905884 131.45901489]
[85.01428986 125.80411530]
[76.02935028 100.62474823]
[61.66455078 96.30590057]
[47.29974747 91.98704529]
[32.93494415 87.66819763]
[23.80559158 88.19377899]
[18.37845230 83.16613007]
[4.08361959 78.62104797]
[-10.21121407 74.07597351]
[-24.50604820 69.53089905]
[-38.80088043 64.98581696]
[-53.79667664 65.34098816]
[-67.86030579 70.55773163]
[-81.92392731 75.77447510]
[-95.98755646 80.99121094]
[-106.02908325 93.95654297]
[-122.23941803 91.47518921]
[-127.94275665 76.09976196]
[-117.27199554 63.64717484]
[-101.20429993 66.92758942]
[-87.14067078 61.71084595]
[-73.07704163 56.49410248]
[-59.01341629 51.27736282]
[-58.06683350 36.30725861]
[-71.36135101 29.36061668]
[-84.65586853 22.41397476]
[-95.10102081 28.11604309]
[-106.88117218 28.06389999]
[-117.06591034 22.38633728]
[-123.17758942 12.59713459]
[-123.79380035 1.19328880]
[-136.86239624 -6.16957998]
[-145.88490295 -7.65813446]
[-150.07785034 -13.75323486]
[-163.02857971 -21.32148933]
[-175.97932434 -28.88974571]
[-191.08831787 -25.10080338]
[-204.11437988 -32.96057892]
[-207.63345337 -47.38804245]
[-220.58418274 -54.95629883]
[-233.53492737 -62.52455521]
[-246.48565674 -70.09281158]
[-259.43640137 -77.66106415]
[-275.82922363 -77.20623779]
[-284.18789673 -91.31526947]
[-275.91369629 -105.47400665]
[-259.51843262 -105.11714172]
[-251.86813354 -90.61180115]
[-238.91740417 -83.04354095]
[-225.96665955 -75.47528839]
[-213.01593018 -67.90703583]
[-200.06520081 -60.33877945]
[-185.76805115 -64.35466766]
[-172.52635193 -56.86386490]
[-168.41107178 -41.84048080]
[-155.46032715 -34.27222443]
[-142.50959778 -26.70396805]
[-129.49952698 -19.23817444]
[-116.43093109 -11.87530613]
[-99.13658905 -17.85545731]
[-82.67633820 -9.15492535]
[-77.70922089 9.11945915]
[-64.41470337 16.06610107]
[-51.12018967 23.01274300]
[-35.56697083 35.35712051]
[-34.25580215 50.69098282]
[-19.96096992 55.23606110]
[-5.66613626 59.78113937]
[8.62869740 64.32621765]
[22.92353058 68.87129211]
[37.25379562 73.30339813]
[51.61859894 77.62224579]
[65.98339844 81.94109344]
[80.34819794 86.25994873]
[100.29541016 70.16149139]
[129.65814209 80.12622833]
[139.25958252 68.60180664]
[142.14849854 53.04659271]
[156.23970032 48.22091293]
[165.84115601 36.69649124]
[175.44259644 25.17206955]
[185.04403687 13.64764786]
[181.39245605 -1.31805110]
[187.18562317 -15.39969444]
[200.00805664 -23.27680397]
[214.83270264 -22.10709000]
[224.43414307 -33.63151169]
[234.03558350 -45.15593338]
[243.63702393 -56.68035507]
[253.23846436 -68.20477295]
[262.83990479 -79.72919464]
[272.44134521 -91.25361633]
[267.80075073 -102.87312317]
[268.54040527 -115.29080963]
[274.45837402 -126.15046692]
[284.37609863 -133.41769409]
[296.37243652 -135.76097107]
[308.15579224 -132.79525757]
[318.11624146 -144.01083374]
[320.88418579 -160.17469788]
[336.35818481 -165.60494995]
[348.61990356 -154.71540833]
[345.05554199 -138.70829773]
[329.33181763 -134.05036926]
[319.37133789 -122.83480072]
[323.96160889 -105.78988647]
[317.34991455 -89.25334930]
[302.00524902 -79.90807343]
[283.96578979 -81.65217590]
[274.36434937 -70.12775421]
[264.76287842 -58.60333252]
[255.16145325 -47.07891083]
[245.56001282 -35.55448914]
[235.95855713 -24.03006744]
[226.35711670 -12.50564671]
[230.18424988 1.86415017]
[224.75173950 15.89810276]
[211.94750977 24.13854599]
[196.56845093 23.24909210]
[186.96701050 34.77351379]
[177.36557007 46.29793549]
[167.76412964 57.82235336]
[165.56198120 72.55326843]
[150.78401184 78.20325470]
[141.18257141 89.72767639]
[145.95274353 103.94897461]
[160.56144714 107.35271454]
[175.17016602 110.75646210]
[188.48503113 102.67238617]
[203.25186157 106.33236694]
[210.87672424 119.07586670]
[225.48544312 122.47961426]
[238.77104187 113.91989899]
[254.20011902 117.34321594]
[262.61889648 130.71856689]
[259.03262329 146.11058044]
[245.56903076 154.38746643]
[230.21577454 150.63868713]
[222.08171082 137.08833313]
[207.47299194 133.68458557]
[195.00079346 141.74559021]
[180.13699341 138.50181580]
[171.76643372 125.36517334]
[157.15771484 121.96143341]
[142.54899597 118.55769348]
[131.65345764 128.86724854]
[134.24522400 143.64164734]
[136.83699036 158.41604614]
[139.42875671 173.19042969]
[142.02050781 187.96482849]
[144.61227417 202.73922729]
[147.20404053 217.51362610]
[149.79580688 232.28802490]
[152.38757324 247.06240845]
[154.97933960 261.83682251]
[164.98472595 274.09252930]
[159.56286621 287.96527100]
[162.15463257 302.73965454]
[164.74639893 317.51406860]
[167.33816528 332.28845215]
[169.92993164 347.06283569]
[184.96078491 348.38043213]
[199.13812256 353.54431152]
[211.49530029 362.20239258]
[221.18980408 373.76437378]
[227.56063843 387.44189453]
[230.17343140 402.30242920]
[228.85003662 417.33276367]
[223.68069458 431.50811768]
[215.01783752 443.86196899]
[203.45213318 453.55200195]
[189.77214050 459.91754150]
[174.91058350 462.52459717]
[159.88076782 461.19540405]
[145.70742798 456.02056885]
[133.35693359 447.35296631]
[123.67135620 435.78350830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 182]
[7 181]
[8 180]
[9 179]
[10 178]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 168]
[21 167]
[23 95]
[24 94]
[25 93]
[26 92]
[28 91]
[29 90]
[30 89]
[31 88]
[32 87]
[33 44]
[34 43]
[35 42]
[36 41]
[45 85]
[46 84]
[47 83]
[52 80]
[53 79]
[55 78]
[56 77]
[57 76]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[97 146]
[98 145]
[100 143]
[101 142]
[102 141]
[103 140]
[107 136]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[119 126]
[120 125]
[147 166]
[148 165]
[149 164]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
