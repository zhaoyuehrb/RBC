%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCACUUCCGGGCGAAGAGGUUAGCGAGAAGGAACCCCUCCACGCAGCGACGACGGGACCUGACGUCACUUCCGCGCGCCGCCGCAAACGUCAGUGUCGGGCGCAGACGGCGGCAGUGCGGCUUGCUCUUGGAAGUUCAGGCUCGGUUGUCUUUUGGGAGCCAUGGAGAGUGACUUUUAUCUGCGUUACUACGUGGGGCACAAGGGCAAGUUCGGCCACGAGUUCCUGGAGUUUGAGUUUCGACCGGACGGGAAG\
UUAAGAU\
) } def
/len { sequence length } bind def

/coor [
[126.48406982 338.40408325]
[139.47282410 330.38815308]
[137.86331177 315.47473145]
[126.80890656 308.89080811]
[121.47628021 296.96804810]
[124.01164246 283.95742798]
[133.71112061 274.63992310]
[132.27987671 259.70837402]
[130.84863281 244.77680969]
[129.41738892 229.84524536]
[127.98613739 214.91368103]
[119.06974792 202.98274231]
[125.45498657 188.50726318]
[124.02373505 173.57569885]
[122.59249115 158.64414978]
[121.16124725 143.71258545]
[119.73000336 128.78102112]
[112.70644379 126.15050507]
[98.65932465 120.88946533]
[91.63576508 118.25894928]
[80.74795532 128.57669067]
[69.86015320 138.89442444]
[65.80139160 147.04086304]
[58.78012466 149.26940918]
[47.76984787 159.45635986]
[36.75957489 169.64329529]
[38.44645309 184.95539856]
[30.88204193 198.17028809]
[17.14913177 204.32423401]
[2.59998202 201.24848938]
[-8.41029358 211.43542480]
[-19.42056847 221.62237549]
[-23.75712013 237.43775940]
[-39.68826675 241.32756042]
[-50.82541275 229.29028320]
[-45.71161652 213.70884705]
[-29.60751343 210.61210632]
[-18.59723854 200.42515564]
[-7.58696222 190.23820496]
[-9.52493095 175.49432373]
[-2.32431054 162.28012085]
[11.43749809 155.76353455]
[26.57262802 158.63302612]
[37.58290482 148.44607544]
[48.59318161 138.25914001]
[59.54241562 128.00660706]
[70.43022156 117.68888092]
[81.31803131 107.37113953]
[74.50019073 94.01011658]
[59.75656509 96.77153778]
[45.01293945 99.53295898]
[30.26931190 102.29438019]
[18.12940216 112.43997955]
[4.19526148 107.17794800]
[-10.54836559 109.93936920]
[-25.29199219 112.70079803]
[-39.74731064 121.55969238]
[-52.26163101 110.12168884]
[-44.73493195 94.93006897]
[-28.05341530 97.95716858]
[-13.30978870 95.19574738]
[1.43383884 92.43431854]
[12.51918507 82.48623657]
[27.50788879 87.55075836]
[42.25151443 84.78932953]
[56.99514389 82.02790833]
[71.73876953 79.26648712]
[73.77349854 72.04776764]
[59.33612823 67.97808075]
[63.40605927 53.54077911]
[77.84294891 57.61033249]
[79.87767029 50.39161301]
[68.74649811 40.33691406]
[57.61532593 30.28221321]
[46.48415375 20.22751427]
[35.35298157 10.17281342]
[24.22181129 0.11811254]
[13.03078461 -9.86992645]
[1.78030312 -19.79094887]
[-9.47017765 -29.71197128]
[-20.72065926 -39.63299179]
[-31.97113991 -49.55401611]
[-43.22162247 -59.47503662]
[-54.47210312 -69.39605713]
[-69.00153351 -64.61663055]
[-83.87425995 -67.73090363]
[-95.11656189 -77.80448151]
[-99.77598572 -92.05740356]
[-96.69636536 -106.63071442]
[-107.94684601 -116.55174255]
[-119.19732666 -126.47276306]
[-130.44779968 -136.39378357]
[-145.88177490 -133.87850952]
[-159.29516602 -141.91685486]
[-164.35458374 -156.71334839]
[-158.67112732 -171.28155518]
[-144.92834473 -178.74278259]
[-129.61517334 -175.57409668]
[-119.96200562 -163.27165222]
[-120.52678680 -147.64425659]
[-109.27630615 -137.72323608]
[-98.02582550 -127.80222321]
[-86.77533722 -117.88119507]
[-72.70175171 -122.75969696]
[-57.97792053 -119.91986084]
[-46.57710266 -110.02603912]
[-41.62677383 -95.65972137]
[-44.55107880 -80.64653778]
[-33.30059814 -70.72551727]
[-22.05011749 -60.80449677]
[-10.79963684 -50.88347244]
[0.45084405 -40.96245193]
[11.70132542 -31.04142952]
[22.95180702 -21.12040710]
[30.02430534 -19.06021500]
[34.27651215 -11.01305962]
[45.40768433 -0.95835948]
[56.53885651 9.09634113]
[67.67002869 19.15104103]
[78.80120087 29.20574188]
[89.93237305 39.26044083]
[136.01551819 100.70293427]
[149.68693542 94.53103638]
[163.35835266 88.35913849]
[176.95506287 82.02437592]
[190.47514343 75.52764893]
[203.99522400 69.03092957]
[217.51530457 62.53420639]
[231.03538513 56.03748322]
[240.12287903 43.08649445]
[254.94560242 44.54805374]
[268.46569824 38.05133057]
[281.98577881 31.55460739]
[295.50585938 25.05788422]
[304.59335327 12.10689640]
[319.41604614 13.56845474]
[332.93615723 7.07173157]
[338.25225830 -7.56987286]
[352.05609131 -13.96587467]
[365.98187256 -8.80753231]
[379.50195312 -15.30425453]
[393.02203369 -21.80097771]
[399.37622070 -28.31728554]
[406.74264526 -28.29347229]
[420.33935547 -34.62823486]
[433.93606567 -40.96299744]
[447.45614624 -47.45972061]
[460.89767456 -54.11747742]
[474.33917236 -60.77523422]
[487.78070068 -67.43299103]
[501.22219849 -74.09074402]
[514.66369629 -80.74849701]
[528.10522461 -87.40625763]
[541.54675293 -94.06401062]
[554.94824219 -100.80192566]
[568.30926514 -107.61976624]
[569.69671631 -119.38840485]
[576.51062012 -128.93696594]
[586.97283936 -133.97204590]
[598.44732666 -133.35282898]
[608.10375977 -127.34741974]
[621.62384033 -133.84414673]
[635.14392090 -140.34086609]
[648.66400146 -146.83758545]
[662.18408203 -153.33430481]
[665.17175293 -163.75076294]
[673.22100830 -170.67439270]
[683.53247070 -172.01434326]
[692.68945312 -167.56903076]
[706.36090088 -173.74092102]
[720.03228760 -179.91282654]
[733.70373535 -186.08471680]
[747.37512207 -192.25662231]
[761.04656982 -198.42851257]
[762.49304199 -213.71914673]
[771.40411377 -226.22866821]
[785.38275146 -232.59208679]
[800.66876221 -231.09767151]
[813.15032959 -222.14741516]
[819.46990967 -208.14889526]
[817.92755127 -192.86763000]
[808.93823242 -180.41421509]
[794.91998291 -174.13856506]
[779.64361572 -175.72877502]
[767.21844482 -184.75709534]
[753.54699707 -178.58520508]
[739.87561035 -172.41329956]
[726.20416260 -166.24140930]
[712.53277588 -160.06950378]
[698.86132812 -153.89761353]
[688.71685791 -137.41461182]
[668.68078613 -139.81422424]
[655.16070557 -133.31750488]
[641.64062500 -126.82078552]
[628.12054443 -120.32405853]
[614.60046387 -113.82733917]
[609.56292725 -96.20393372]
[592.94299316 -87.74317932]
[575.12713623 -94.25873566]
[561.76611328 -87.44090271]
[557.25122070 -81.62022400]
[548.20452881 -80.62249756]
[534.76300049 -73.96474457]
[521.32147217 -67.30698395]
[507.87997437 -60.64923096]
[494.43844604 -53.99147415]
[480.99694824 -47.33371735]
[467.55541992 -40.67596436]
[454.11392212 -34.01820755]
[451.77236938 -29.88919830]
[446.82760620 -27.17086029]
[440.27084351 -27.36627960]
[426.67410278 -21.03151512]
[413.07739258 -14.69675350]
[399.51876831 -8.28089619]
[385.99868774 -1.78417349]
[372.47860718 4.71254921]
[367.80490112 18.80837440]
[354.18618774 25.58957481]
[339.43286133 20.59181213]
[325.91278076 27.08853531]
[317.79232788 39.57483292]
[302.00256348 38.57796478]
[288.48248291 45.07468796]
[274.96240234 51.57141113]
[261.44232178 58.06813431]
[253.32188416 70.55443573]
[237.53211975 69.55756378]
[224.01203918 76.05428314]
[210.49195862 82.55101013]
[196.97187805 89.04772949]
[183.45178223 95.54445648]
[181.06109619 99.64520264]
[176.08421326 102.30427551]
[169.53024292 102.03055573]
[155.85882568 108.20245361]
[142.18740845 114.37435150]
[134.66156006 127.34977722]
[136.09280396 142.28134155]
[137.52404785 157.21290588]
[138.95530701 172.14445496]
[140.38655090 187.07601929]
[149.40530396 200.07496643]
[142.91769409 213.48243713]
[144.34893799 228.41400146]
[145.78018188 243.34555054]
[147.21144104 258.27713013]
[148.64268494 273.20867920]
[162.34419250 284.10934448]
[163.87643433 301.21133423]
[152.77671814 313.86523438]
[154.38621521 328.77865601]
[168.78616333 333.83871460]
[179.55851746 344.65164185]
[184.56439209 359.07049561]
[182.80990601 374.23245239]
[174.64337158 387.12704468]
[161.68629456 395.19406128]
[146.51129150 396.83178711]
[132.13139343 391.71505737]
[121.40171051 380.85980225]
[116.45264435 366.42132568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 252]
[3 251]
[7 248]
[8 247]
[9 246]
[10 245]
[11 244]
[13 242]
[14 241]
[15 240]
[16 239]
[17 238]
[20 48]
[21 47]
[22 46]
[24 45]
[25 44]
[26 43]
[30 39]
[31 38]
[32 37]
[49 67]
[50 66]
[51 65]
[52 64]
[54 62]
[55 61]
[56 60]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[77 116]
[78 114]
[79 113]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[89 103]
[90 102]
[91 101]
[92 100]
[122 237]
[123 236]
[124 235]
[125 232]
[126 231]
[127 230]
[128 229]
[129 228]
[131 226]
[132 225]
[133 224]
[134 223]
[136 221]
[137 220]
[140 217]
[141 216]
[142 215]
[144 214]
[145 213]
[146 212]
[147 209]
[148 208]
[149 207]
[150 206]
[151 205]
[152 204]
[153 203]
[154 202]
[155 200]
[156 199]
[161 196]
[162 195]
[163 194]
[164 193]
[165 192]
[169 190]
[170 189]
[171 188]
[172 187]
[173 186]
[174 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
