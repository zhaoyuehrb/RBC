%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCCCUAAAAUCUCCUAGAACCGAUCCCGCGGCCCCGCCCCUCCCGCGGCCCCGCCCCUCCCGCGGCCCGUCAGCCUCUGCCGCGGAGCUGCGUCCGCCACUCAUGUUUCUCCGAGCAGGCCUGGCCGCGCUCUCCCCGCUUCUUCGCAGUCUUCGGCCCUCUCCUGUCGCCGCCAUGAGCACUGGCACCUUCGUCGUGUCGC\
) } def
/len { sequence length } bind def

/coor [
[114.13479614 285.08120728]
[112.63521576 300.07614136]
[107.71740723 314.32086182]
[99.64659882 327.04714966]
[88.85803223 337.56872559]
[75.93351746 345.31814575]
[61.57006073 349.87753296]
[46.54226303 351.00094604]
[31.66056061 348.62783813]
[17.72749901 342.88619995]
[5.49447203 334.08566284]
[-4.37880754 322.70077515]
[-11.35988712 309.34558105]
[-15.07228565 294.74029541]
[-15.31579781 279.67251587]
[-12.07729244 264.95489502]
[-5.53141594 251.38108826]
[3.96881890 239.68313599]
[15.91107750 230.49186707]
[29.65132713 224.30299377]
[44.44857788 221.45024109]
[59.50482559 222.08747864]
[63.57092667 207.64910889]
[67.52681732 193.18014526]
[71.37226105 178.68142700]
[75.21771240 164.18272400]
[79.06315613 149.68400574]
[69.56904602 144.50628662]
[61.29922104 137.53800964]
[54.58638382 129.05952454]
[49.70060349 119.41193390]
[35.09136581 122.81343842]
[20.48213005 126.21493530]
[5.87289381 129.61643982]
[-2.49967957 142.75180054]
[-17.36397743 145.99330139]
[-29.83494186 137.93037415]
[-44.44417953 141.33187866]
[-59.05341339 144.73338318]
[-73.66265106 148.13488770]
[-80.57414246 162.16218567]
[-94.90599060 168.41777039]
[-109.89113617 163.94790649]
[-118.45404053 150.86315918]
[-116.55157471 135.34173584]
[-105.08201599 124.71237946]
[-89.46094513 123.99394226]
[-77.06415558 133.52565002]
[-62.45491791 130.12414551]
[-47.84568024 126.72264862]
[-33.23644638 123.32114410]
[-25.60961533 110.57881165]
[-10.84222889 106.92108917]
[2.47139120 115.00720215]
[17.08062744 111.60570526]
[31.68986320 108.20420074]
[46.29909897 104.80269623]
[46.10244751 98.61927795]
[46.61544418 92.45403290]
[47.83133316 86.38814545]
[49.73410416 80.50147247]
[52.29870987 74.87153625]
[55.49137878 69.57245636]
[59.27007675 64.67400360]
[49.41577148 53.36503983]
[39.56146240 42.05607605]
[29.70715714 30.74711418]
[19.85285187 19.43815231]
[9.99854469 8.12918854]
[0.05829245 -3.10430479]
[-9.96732807 -14.26167583]
[-19.99294853 -25.41904640]
[-30.01856995 -36.57641983]
[-42.83563995 -38.04343033]
[-50.95630646 -47.54615402]
[-50.44049835 -59.63417816]
[-60.29480743 -70.94314575]
[-75.97393036 -75.74907684]
[-79.38724518 -91.78907013]
[-67.02342224 -102.56254578]
[-51.60130310 -96.98668671]
[-48.98584366 -80.79744720]
[-39.13153458 -69.48848724]
[-22.25029182 -64.69978333]
[-18.86119843 -46.60203934]
[-8.83557796 -35.44466782]
[1.19004297 -24.28729630]
[11.21566391 -13.12992573]
[18.02728462 -10.25458336]
[21.30750847 -1.72511756]
[31.16181374 9.58384514]
[41.01612091 20.89280891]
[50.87042618 32.20177078]
[60.72473526 43.51073456]
[70.57904053 54.81969833]
[91.66781616 46.73249435]
[114.21884918 47.99349213]
[134.27453613 58.38138962]
[148.31520081 76.07316589]
[162.55250549 71.35097504]
[176.78982544 66.62877655]
[191.02713013 61.90658569]
[205.15269470 56.85997009]
[219.15913391 51.49156952]
[233.16557312 46.12317276]
[247.17201233 40.75477219]
[261.17843628 35.38637161]
[275.18487549 30.01797104]
[275.99145508 17.12449837]
[281.59539795 5.53645277]
[291.13195801 -3.03912735]
[303.15994263 -7.35386753]
[315.87966919 -6.79970551]
[327.40194702 -1.49432933]
[336.02896118 7.74156332]
[350.19259644 2.80280328]
[364.35623169 -2.13595676]
[371.43240356 -7.91862535]
[378.77368164 -7.04024172]
[393.01098633 -11.76243401]
[407.24829102 -16.48462677]
[421.48559570 -21.20681953]
[426.39312744 -37.39164734]
[439.84613037 -47.36439514]
[456.42626953 -47.35493851]
[469.60110474 -37.56503677]
[483.76473999 -42.50379944]
[497.92837524 -47.44255829]
[512.09204102 -52.38131714]
[526.25567627 -57.32007980]
[538.71429443 -73.16436768]
[557.53454590 -68.73747253]
[571.54095459 -74.10587311]
[585.54736328 -79.47427368]
[572.33654785 -86.57871246]
[567.88360596 -100.90251160]
[574.73797607 -114.24481201]
[588.97540283 -118.96669006]
[602.44439697 -112.36471558]
[607.43353271 -98.21874237]
[601.08697510 -84.62841034]
[615.52539062 -88.69451141]
[623.03332520 -102.60156250]
[638.19976807 -107.04627991]
[652.02667236 -99.39170074]
[656.31079102 -84.17914581]
[648.51043701 -70.43395233]
[633.25341797 -66.31090546]
[619.59149170 -74.25613403]
[605.15307617 -70.19002533]
[590.91577148 -65.46783447]
[576.90936279 -60.09943771]
[562.90289307 -54.73103714]
[559.59619141 -45.05751801]
[551.33599854 -38.66852570]
[540.70385742 -37.86617661]
[531.19439697 -43.15644073]
[517.03076172 -38.21768188]
[502.86712646 -33.27891922]
[488.70349121 -28.34016037]
[474.53985596 -23.40139961]
[471.88812256 -10.31443501]
[463.04437256 -0.16595508]
[450.23867798 4.32219601]
[436.78143311 1.87642193]
[426.20779419 -6.96951246]
[411.97048950 -2.24731994]
[397.73318481 2.47487235]
[383.49588013 7.19706488]
[369.29498291 12.02768135]
[355.13134766 16.96644211]
[340.96771240 21.90520096]
[338.36651611 38.92168427]
[327.45089722 52.34737396]
[311.15649414 58.42864609]
[293.93844604 55.40654755]
[280.55328369 44.02441025]
[266.54684448 49.39280701]
[252.54040527 54.76120758]
[238.53396606 60.12960815]
[224.52752686 65.49800873]
[210.52108765 70.86640930]
[208.75874329 73.92462921]
[205.42556763 76.27968597]
[200.86892700 77.20171356]
[195.74931335 76.14389038]
[181.51200867 80.86608887]
[167.27470398 85.58827972]
[153.03739929 90.31047058]
[153.71313477 104.66396332]
[150.57350159 118.68617249]
[143.84155273 131.38105774]
[133.99545288 141.84689331]
[121.73457336 149.34025574]
[107.92985535 153.32888794]
[93.56186676 153.52946472]
[89.71641541 168.02816772]
[85.87097168 182.52687073]
[82.02552795 197.02558899]
[82.85028839 206.12675476]
[78.00930786 211.71520996]
[73.94320679 226.15357971]
[87.11930084 233.46707153]
[98.25322723 243.62249756]
[106.74452972 256.07217407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 202]
[23 201]
[24 199]
[25 198]
[26 197]
[27 196]
[31 57]
[32 56]
[33 55]
[34 54]
[37 51]
[38 50]
[39 49]
[40 48]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 88]
[71 87]
[72 86]
[73 85]
[76 83]
[77 82]
[99 189]
[100 188]
[101 187]
[102 186]
[103 182]
[104 181]
[105 180]
[106 179]
[107 178]
[108 177]
[115 172]
[116 171]
[117 170]
[119 169]
[120 168]
[121 167]
[122 166]
[126 161]
[127 160]
[128 159]
[129 158]
[130 157]
[132 153]
[133 152]
[134 151]
[141 150]
[142 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
