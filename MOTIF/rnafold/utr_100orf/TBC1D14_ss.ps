%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGGGCGGGGCGAAGCGAGGGUGCGCGCCGCUGUUCGCCGCGGGCUGCUCGCGCGCACCUGCGGGUCGGACCCGCUGCCUACCGCGUGCCCGGCGUCCUCGUCGCGCGAGUUGCCGGUCCCGCGGGGCCUGGGCUGCGGGCCCACGGGUCCCGGGGAUGGCGUCGGAGCCGCGCUAACUCCGUUUCUCCUUGGACCAAGAUGACUGAUGGAAAACUCUCCACCUCUACAAAUGGCGUAGCCUUCAUGGGUAUU\
CUGGAUGGUCGACCAGGAAACCCCCUUCAGAACCUGCAACACGUCA\
) } def
/len { sequence length } bind def

/coor [
[74.60868073 122.39218903]
[61.44009399 129.57469177]
[48.27151108 136.75720215]
[35.10292816 143.93971252]
[21.93434715 151.12222290]
[13.52398205 164.52282715]
[-1.35424197 163.82446289]
[-14.52282429 171.00697327]
[-22.93318939 184.40757751]
[-37.81141281 183.70921326]
[-50.97999573 190.89172363]
[-64.14858246 198.07423401]
[-77.31716156 205.25674438]
[-90.48574066 212.43925476]
[-94.85041809 224.54238892]
[-105.92626190 230.26301575]
[-117.55086517 227.03001404]
[-130.79345703 234.07514954]
[-144.03604126 241.12028503]
[-150.61172485 267.58517456]
[-180.83270264 274.80999756]
[-192.23371887 284.55764771]
[-203.63473511 294.30532837]
[-215.03575134 304.05297852]
[-226.43678284 313.80062866]
[-237.83779907 323.54827881]
[-249.23881531 333.29592896]
[-260.63983154 343.04357910]
[-272.04086304 352.79122925]
[-283.44189453 362.53887939]
[-289.20208740 380.05267334]
[-306.59603882 382.53201294]
[-317.89505005 392.39773560]
[-323.20132446 407.30258179]
[-337.87728882 409.84524536]
[-349.17630005 419.71096802]
[-360.47528076 429.57669067]
[-371.77429199 439.44241333]
[-383.07330322 449.30813599]
[-391.02761841 464.28027344]
[-407.61663818 460.78149414]
[-408.84689331 443.87225342]
[-392.93902588 438.00912476]
[-381.64001465 428.14340210]
[-370.34100342 418.27767944]
[-359.04202271 408.41195679]
[-347.74301147 398.54623413]
[-343.24490356 384.34704590]
[-327.76077271 381.09872437]
[-316.46176147 371.23300171]
[-315.34329224 359.21914673]
[-306.05355835 350.90646362]
[-293.18954468 351.13784790]
[-281.78851318 341.39019775]
[-270.38748169 331.64254761]
[-258.98648071 321.89489746]
[-247.58544922 312.14724731]
[-236.18443298 302.39959717]
[-224.78341675 292.65194702]
[-213.38238525 282.90429688]
[-201.98136902 273.15664673]
[-190.58035278 263.40899658]
[-196.57191467 249.65757751]
[-211.47381592 251.37026978]
[-226.37571716 253.08296204]
[-241.27761841 254.79565430]
[-256.17953491 256.50833130]
[-271.08142090 258.22103882]
[-286.12661743 266.03634644]
[-297.80139160 253.74261475]
[-289.22003174 239.12083435]
[-272.79412842 243.31913757]
[-257.89221191 241.60644531]
[-242.99031067 239.89375305]
[-228.08840942 238.18106079]
[-213.18650818 236.46836853]
[-198.28460693 234.75567627]
[-193.92576599 228.15481567]
[-188.22178650 223.01296997]
[-181.61407471 219.57438660]
[-174.57893372 217.95831299]
[-167.59376526 218.15740967]
[-161.10494995 220.04492188]
[-155.49932861 223.38972473]
[-151.08117676 227.87770081]
[-137.83859253 220.83256531]
[-124.59600067 213.78742981]
[-116.08518219 198.41661072]
[-97.66825104 199.27066040]
[-84.49967194 192.08816528]
[-71.33108521 184.90565491]
[-58.16250610 177.72314453]
[-44.99392319 170.54063416]
[-37.52546310 157.65376282]
[-21.70533371 157.83839417]
[-8.53675079 150.65588379]
[-1.06829071 137.76901245]
[14.75183868 137.95364380]
[27.92042160 130.77113342]
[41.08900452 123.58862305]
[54.25758743 116.40611267]
[67.42617035 109.22360992]
[66.24810028 97.36586761]
[69.25154877 85.83446503]
[76.06443024 76.05803680]
[85.84267426 69.24777222]
[82.74435425 54.57124329]
[79.64603424 39.89471817]
[76.54771423 25.21819305]
[73.44939423 10.54166794]
[68.63706207 2.83671856]
[70.39601135 -4.30361366]
[67.45053101 -19.01157570]
[64.12358093 -33.63796997]
[60.41741943 -48.17290497]
[56.71125793 -62.70784378]
[53.00510025 -77.24277496]
[49.29893875 -91.77771759]
[44.17025757 -99.27581024]
[45.63066101 -106.48313141]
[42.07589722 -121.05583191]
[38.52113724 -135.62854004]
[34.96637344 -150.20123291]
[29.91596985 -157.75227356]
[31.45126724 -164.94401550]
[28.04829025 -179.55291748]
[24.64531136 -194.16180420]
[21.24233437 -208.77069092]
[17.83935547 -223.37959290]
[14.43637753 -237.98847961]
[11.03339958 -252.59736633]
[7.63042164 -267.20626831]
[4.07565975 -281.77896118]
[0.36949861 -296.31390381]
[-3.33666253 -310.84884644]
[-7.04282379 -325.38378906]
[-10.74898529 -339.91870117]
[-20.52135468 -353.77285767]
[-9.91390228 -366.99850464]
[5.73133659 -360.46682739]
[3.78595114 -343.62487793]
[7.49211216 -329.08993530]
[11.19827366 -314.55499268]
[14.90443516 -300.02008057]
[18.61059570 -285.48513794]
[22.14592361 -282.34051514]
[23.77263641 -276.95938110]
[22.23931503 -270.60925293]
[25.64229202 -256.00036621]
[29.04527092 -241.39146423]
[32.44824982 -226.78256226]
[35.85122681 -212.17367554]
[39.25420380 -197.56477356]
[42.65718079 -182.95588684]
[46.06016159 -168.34700012]
[49.53907776 -153.75599670]
[53.09383774 -139.18330383]
[56.64860153 -124.61059570]
[60.20336151 -110.03789520]
[63.83387375 -95.48387909]
[67.54003143 -80.94893646]
[71.24619293 -66.41400146]
[74.95235443 -51.87906647]
[78.65851593 -37.34413147]
[88.22719574 -48.89577103]
[103.22621155 -48.72389603]
[112.52766418 -36.95602036]
[109.23073578 -22.32283211]
[95.78143311 -15.68081665]
[82.15849304 -21.95705795]
[85.10397339 -7.24909639]
[88.12591553 7.44334602]
[91.22423553 22.11987114]
[94.32256317 36.79639816]
[97.42088318 51.47292328]
[100.51920319 66.14944458]
[107.73696899 65.21152496]
[115.33928680 65.86586761]
[122.96623993 68.22449493]
[130.22978210 72.31688690]
[136.73269653 78.08353424]
[148.99505615 69.44441986]
[161.25743103 60.80530167]
[173.51979065 52.16618347]
[185.78216553 43.52706909]
[198.04452515 34.88795090]
[210.21636963 26.12174416]
[222.29635620 17.22939491]
[224.80368042 1.85568082]
[237.18118286 -6.99034214]
[251.82221985 -4.50524998]
[263.90219116 -13.39760017]
[275.98217773 -22.28994942]
[288.06216431 -31.18229866]
[297.23355103 -45.44142151]
[313.47430420 -40.57580185]
[313.29470825 -23.62280273]
[296.95452881 -19.10231018]
[284.87454224 -10.20996094]
[272.79455566 -1.31761146]
[260.71456909 7.57473803]
[258.73727417 22.29295540]
[246.61311340 31.48314667]
[231.18870544 29.30938339]
[219.10871887 38.20173264]
[217.52154541 42.65909958]
[213.14489746 46.18721390]
[206.68363953 47.15031815]
[194.42127991 55.78943634]
[182.15890503 64.42855072]
[169.89654541 73.06766510]
[157.63417053 81.70678711]
[145.37181091 90.34590149]
[144.47671509 97.79229736]
[159.37977600 96.08965302]
[174.28282166 94.38700867]
[189.18588257 92.68436432]
[204.08892822 90.98171234]
[216.92282104 83.21697235]
[231.85203552 81.76136780]
[245.94409180 86.90081787]
[256.43096924 97.62580109]
[261.25280762 111.82967377]
[259.46243286 126.72244263]
[251.41156006 139.37879944]
[238.68157959 147.31274414]
[223.77293396 148.96582031]
[209.61408997 144.01335144]
[198.98661804 133.42880249]
[184.91159058 128.24287415]
[170.83657837 123.05694580]
[156.76156616 117.87101746]
[142.68653870 112.68508911]
[141.79145813 120.13148499]
[151.65718079 131.43049622]
[161.52290344 142.72949219]
[171.38862610 154.02850342]
[181.25434875 165.32749939]
[191.12007141 176.62651062]
[210.48597717 182.33631897]
[213.27397156 201.49870300]
[223.37261963 212.59001160]
[242.85313416 217.89569092]
[246.03916931 236.99592590]
[256.36639404 247.87475586]
[266.69357300 258.75357056]
[287.75372314 258.01187134]
[302.22671509 272.91787720]
[300.90289307 293.35458374]
[311.67370605 303.79440308]
[322.44451904 314.23422241]
[333.21533203 324.67401123]
[348.50964355 328.72296143]
[352.26345825 343.13677979]
[363.03427124 353.57659912]
[373.80508423 364.01641846]
[384.57586670 374.45623779]
[395.34667969 384.89605713]
[406.11749268 395.33584595]
[421.38006592 392.53704834]
[435.35827637 399.27423096]
[442.67718506 412.95681763]
[440.52255249 428.32357788]
[429.72286987 439.46566772]
[414.43081665 442.09872437]
[400.52651978 435.21032715]
[393.35647583 421.44912720]
[395.67767334 406.10665894]
[384.90689087 395.66683960]
[374.13607788 385.22705078]
[363.36526489 374.78723145]
[352.59445190 364.34741211]
[341.82363892 353.90759277]
[327.29971313 350.60537720]
[322.77551270 335.44482422]
[312.00469971 325.00503540]
[301.23388672 314.56521606]
[290.46307373 304.12539673]
[281.71270752 307.11181641]
[272.41690063 306.73040771]
[263.83483887 302.99118042]
[257.14404297 296.36169434]
[253.27891541 287.70910645]
[252.80036926 278.18679810]
[255.81475830 269.08078003]
[245.48754883 258.20196533]
[235.16035461 247.32313538]
[225.02333069 247.98167419]
[215.99412537 242.86676025]
[211.14680481 233.44421387]
[212.28131104 222.68865967]
[202.18266296 211.59735107]
[192.03413391 212.04486084]
[183.11329651 206.74320984]
[178.46305847 197.22186279]
[179.82106018 186.49223328]
[169.95533752 175.19322205]
[160.08961487 163.89422607]
[150.22389221 152.59521484]
[140.35816956 141.29621887]
[130.49244690 129.99720764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[3 100]
[4 99]
[5 98]
[7 96]
[8 95]
[10 93]
[11 92]
[12 91]
[13 90]
[14 89]
[17 87]
[18 86]
[19 85]
[21 62]
[22 61]
[23 60]
[24 59]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[32 50]
[33 49]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[106 176]
[107 175]
[108 174]
[109 173]
[110 172]
[112 171]
[113 170]
[114 164]
[115 163]
[116 162]
[117 161]
[118 160]
[120 159]
[121 158]
[122 157]
[123 156]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 145]
[134 144]
[135 143]
[136 142]
[137 141]
[181 213]
[182 212]
[183 211]
[184 210]
[185 209]
[186 208]
[187 205]
[188 204]
[191 201]
[192 200]
[193 199]
[194 198]
[234 301]
[235 300]
[236 299]
[237 298]
[238 297]
[239 296]
[241 292]
[242 291]
[244 287]
[245 286]
[246 285]
[249 278]
[250 277]
[251 276]
[252 275]
[254 273]
[255 272]
[256 271]
[257 270]
[258 269]
[259 268]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
