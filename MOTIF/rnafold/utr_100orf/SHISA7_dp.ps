%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SHISA7)
} def

/sequence { (\
AUGCCGGCCCUCCUGCUCCUCGUACUCCUGGCCUCUAGCGCCGGCCAGGCCAGGGCGCGCCCGUCCAACGCCACGAGCGCCGAGCCCGCGGGCCCGCUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 96 0.012830814 ubox
2 99 0.058766064 ubox
3 93 0.003235858 ubox
3 95 0.017509744 ubox
3 97 0.988059762 ubox
3 98 0.017589158 ubox
3 100 0.063883336 ubox
4 92 0.003246412 ubox
4 96 0.988524064 ubox
4 99 0.055040104 ubox
5 91 0.003244211 ubox
5 96 0.063770304 ubox
5 99 0.086594339 ubox
6 94 0.992935259 ubox
6 95 0.062486155 ubox
6 98 0.094576003 ubox
7 89 0.003234897 ubox
7 93 0.994400051 ubox
7 94 0.045756292 ubox
7 97 0.095051243 ubox
8 88 0.003233052 ubox
8 92 0.995094097 ubox
8 96 0.094935845 ubox
9 91 0.994806602 ubox
9 92 0.011663407 ubox
10 90 0.992467555 ubox
10 91 0.014420448 ubox
11 83 0.004192605 ubox
11 90 0.015467973 ubox
11 92 0.003214817 ubox
12 82 0.004194415 ubox
12 90 0.006485714 ubox
12 91 0.008980928 ubox
12 92 0.097828137 ubox
13 90 0.012026733 ubox
13 91 0.100059711 ubox
14 22 0.005322700 ubox
14 24 0.054791592 ubox
14 52 0.003522092 ubox
14 88 0.089685082 ubox
14 90 0.106260704 ubox
15 21 0.006868729 ubox
15 23 0.060814424 ubox
15 51 0.003550574 ubox
15 56 0.007753765 ubox
15 85 0.952227749 ubox
15 87 0.083445364 ubox
15 89 0.272523210 ubox
16 22 0.061153728 ubox
16 55 0.007709040 ubox
16 84 0.953266665 ubox
16 88 0.272186291 ubox
17 83 0.951317590 ubox
18 54 0.007652111 ubox
18 82 0.947799438 ubox
19 53 0.013700545 ubox
19 55 0.022196790 ubox
19 77 0.127081842 ubox
19 84 0.288652451 ubox
20 52 0.013532098 ubox
20 54 0.021335316 ubox
20 55 0.005396161 ubox
20 76 0.127249270 ubox
20 83 0.294702372 ubox
21 53 0.023829057 ubox
21 54 0.005488911 ubox
21 57 0.046412180 ubox
21 59 0.015244081 ubox
21 75 0.127268971 ubox
21 79 0.037382510 ubox
21 82 0.297757531 ubox
22 50 0.013046746 ubox
22 56 0.235999770 ubox
22 58 0.024233226 ubox
22 74 0.127007509 ubox
22 78 0.036139254 ubox
22 80 0.030171848 ubox
22 81 0.296716886 ubox
22 87 0.003247479 ubox
23 49 0.004402744 ubox
23 55 0.211558875 ubox
23 57 0.024206585 ubox
23 73 0.120937135 ubox
23 77 0.032477124 ubox
23 79 0.028573749 ubox
25 53 0.044990363 ubox
25 54 0.011050305 ubox
25 55 0.284126998 ubox
25 77 0.031353399 ubox
25 84 0.003901498 ubox
26 52 0.041996997 ubox
26 53 0.008662969 ubox
26 54 0.035555870 ubox
26 55 0.686559966 ubox
26 76 0.032610544 ubox
26 83 0.003915987 ubox
27 49 0.097972477 ubox
27 53 0.026839916 ubox
27 54 0.972994121 ubox
27 55 0.018127238 ubox
27 75 0.032509945 ubox
27 82 0.003824938 ubox
28 44 0.003866252 ubox
28 48 0.100668822 ubox
28 53 0.993459442 ubox
28 54 0.013890040 ubox
29 43 0.003917432 ubox
29 47 0.101544246 ubox
29 52 0.994265625 ubox
29 53 0.006857176 ubox
29 67 0.006422507 ubox
29 73 0.016325907 ubox
30 42 0.004100582 ubox
30 46 0.101717707 ubox
30 51 0.994629446 ubox
30 66 0.006642842 ubox
30 72 0.016425418 ubox
31 41 0.004100963 ubox
31 45 0.101718787 ubox
31 50 0.994637146 ubox
31 65 0.006624776 ubox
31 71 0.016420397 ubox
32 40 0.004096671 ubox
32 44 0.101709589 ubox
32 49 0.994578657 ubox
32 63 0.003531792 ubox
32 70 0.016344569 ubox
33 43 0.101606030 ubox
33 48 0.994057043 ubox
33 49 0.009440560 ubox
34 44 0.006957856 ubox
34 47 0.980616676 ubox
34 48 0.003710021 ubox
34 49 0.004743803 ubox
35 43 0.013411522 ubox
35 44 0.064370254 ubox
35 48 0.032285355 ubox
36 43 0.062188115 ubox
36 47 0.061689639 ubox
38 45 0.990844148 ubox
38 58 0.015231082 ubox
38 60 0.004513399 ubox
39 44 0.990990675 ubox
39 57 0.015238232 ubox
39 59 0.004521095 ubox
40 50 0.006821872 ubox
40 56 0.015240510 ubox
40 58 0.004518372 ubox
41 49 0.006837255 ubox
41 55 0.015094368 ubox
41 57 0.003341422 ubox
42 48 0.006838155 ubox
42 54 0.014868798 ubox
42 57 0.003676487 ubox
43 51 0.015210352 ubox
43 56 0.004758074 ubox
44 50 0.015287761 ubox
45 49 0.015176909 ubox
45 54 0.004766011 ubox
46 53 0.004768468 ubox
48 72 0.014826093 ubox
49 56 0.003546392 ubox
49 71 0.016638776 ubox
49 89 0.016461766 ubox
50 55 0.003659804 ubox
50 70 0.016899421 ubox
50 88 0.016989112 ubox
53 62 0.004834398 ubox
53 66 0.044836689 ubox
53 87 0.070606063 ubox
54 61 0.005232377 ubox
54 65 0.045865212 ubox
54 66 0.006184320 ubox
54 72 0.068503042 ubox
54 81 0.189798139 ubox
54 86 0.072542443 ubox
55 60 0.005499390 ubox
55 64 0.049766554 ubox
55 65 0.007251025 ubox
55 71 0.081472906 ubox
55 78 0.009171063 ubox
55 80 0.223330856 ubox
55 85 0.074278187 ubox
55 89 0.015173657 ubox
56 63 0.050940482 ubox
56 70 0.081613949 ubox
56 75 0.006589411 ubox
56 77 0.009236651 ubox
56 79 0.223624150 ubox
56 82 0.036570406 ubox
56 84 0.074197594 ubox
56 88 0.015202466 ubox
57 62 0.048539851 ubox
57 64 0.010648791 ubox
57 69 0.080186785 ubox
57 71 0.089963848 ubox
57 74 0.006406828 ubox
57 78 0.223148421 ubox
57 80 0.959379375 ubox
57 81 0.063426031 ubox
57 87 0.013230054 ubox
58 63 0.014562111 ubox
58 70 0.090138863 ubox
58 75 0.011884571 ubox
58 77 0.222889878 ubox
58 79 0.964511088 ubox
59 69 0.088885012 ubox
59 71 0.026593764 ubox
59 74 0.017086417 ubox
59 78 0.964946510 ubox
59 80 0.003748597 ubox
59 85 0.012829876 ubox
60 70 0.026185371 ubox
60 77 0.964259013 ubox
60 79 0.003834865 ubox
60 84 0.012833363 ubox
62 70 0.075283652 ubox
62 75 0.983411105 ubox
62 82 0.012318308 ubox
63 69 0.076825325 ubox
63 71 0.042448038 ubox
63 74 0.984764476 ubox
63 81 0.012230418 ubox
64 68 0.069324345 ubox
64 70 0.041996062 ubox
64 73 0.971201257 ubox
64 76 0.012610471 ubox
64 83 0.003635691 ubox
65 75 0.012700559 ubox
65 82 0.003690795 ubox
69 75 0.006662467 ubox
69 79 0.023214208 ubox
70 74 0.006462126 ubox
70 78 0.023699098 ubox
71 77 0.023668851 ubox
81 88 0.020575120 ubox
82 87 0.021351885 ubox
82 89 0.005978971 ubox
3 97 0.9500000 lbox
4 96 0.9500000 lbox
6 94 0.9500000 lbox
7 93 0.9500000 lbox
8 92 0.9500000 lbox
9 91 0.9500000 lbox
10 90 0.9500000 lbox
15 85 0.9500000 lbox
16 84 0.9500000 lbox
17 83 0.9500000 lbox
18 82 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
34 47 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
57 80 0.9500000 lbox
58 79 0.9500000 lbox
59 78 0.9500000 lbox
60 77 0.9500000 lbox
62 75 0.9500000 lbox
63 74 0.9500000 lbox
64 73 0.9500000 lbox
showpage
end
%%EOF
