%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGGGCGGGAGCUCUGGCUCAGGUAAAAACUCUUUCUUCGGCUCGCGAGCUGAGAGGAGCAGGUAGAGGGGCAGAGGCGGGACUGUCGUCUGGGGGAGCCGCCCAGGAGGCUCCUCAGGCCGACCCCAGACCCUGGCUGGCCAGGAUGAAGUAUCUCCGGCACCGGCGGCCCAAUGCCACCCUCAUUCUGGCCAUCGGCGCUUUCACCCUCCUCCUCUUCAGUCUGCUAGUGUCACCACCCACCU\
) } def
/len { sequence length } bind def

/coor [
[121.24547577 391.06979370]
[121.24547577 376.06979370]
[110.56460571 365.75210571]
[110.35092163 350.53997803]
[121.24547577 339.40686035]
[121.24547577 324.40686035]
[121.24547577 309.40686035]
[113.50817108 296.67959595]
[121.24547577 282.87942505]
[121.24547577 267.87942505]
[110.56460571 257.56173706]
[110.35092163 242.34960938]
[121.24547577 231.21647644]
[121.24547577 216.21647644]
[113.50817108 203.48921204]
[121.24547577 189.68904114]
[121.24547577 174.68904114]
[121.24547577 159.68904114]
[121.24547577 144.68904114]
[121.24547577 129.68904114]
[114.22897339 127.03974915]
[102.62397766 136.54364014]
[100.19596863 121.74118042]
[93.17946625 119.09189606]
[83.26549530 130.34858704]
[73.35151672 141.60528564]
[70.65047455 157.78045654]
[55.19908524 163.27468872]
[42.89240646 152.43597412]
[46.39050293 136.41426086]
[62.09482574 131.69129944]
[72.00880432 120.43461609]
[81.92277527 109.17792511]
[77.59936523 103.04946136]
[62.66113663 104.40940094]
[68.95252991 90.79252625]
[64.62911987 84.66406250]
[50.69932175 90.22830963]
[36.76952744 95.79254913]
[29.98121262 101.86739349]
[22.62786865 101.33782196]
[8.62870693 106.72516632]
[-5.37045431 112.11251068]
[-19.36961555 117.49985504]
[-33.36877823 122.88719940]
[-43.25192642 135.97366333]
[-59.49123001 133.68957520]
[-65.38108826 118.38462067]
[-54.86251450 105.80321503]
[-38.75612259 108.88803864]
[-24.75695992 103.50069427]
[-10.75779819 98.11334991]
[3.24136353 92.72600555]
[17.24052429 87.33866119]
[31.20528412 81.86275482]
[45.13507843 76.29851532]
[59.06487274 70.73426819]
[69.80498505 60.26287460]
[75.72032166 46.47850800]
[81.63565826 32.69414139]
[87.55099487 18.90977478]
[88.05549622 9.81414890]
[93.62956238 4.98901320]
[99.71903229 -8.71931648]
[105.80850983 -22.42764664]
[100.37175751 -37.02489090]
[106.74263763 -50.84033585]
[120.69238281 -55.93349075]
[126.78185272 -69.64181519]
[132.87132263 -83.35015106]
[138.96080017 -97.05847931]
[145.05027771 -110.76680756]
[138.80221558 -122.68254089]
[140.52476501 -135.83021545]
[149.36843872 -145.44787598]
[161.94580078 -148.18211365]
[168.20843506 -161.81221008]
[174.47106934 -175.44229126]
[180.73371887 -189.07238770]
[186.99635315 -202.70248413]
[186.61634827 -217.69766235]
[179.67140198 -230.99307251]
[172.72645569 -244.28846741]
[168.36117554 -247.06166077]
[165.74263000 -250.84730530]
[164.96461487 -254.81692505]
[165.78111267 -258.22357178]
[159.34632874 -271.77325439]
[152.91152954 -285.32290649]
[146.47674561 -298.87258911]
[139.95625305 -312.38122559]
[133.35034180 -325.84829712]
[126.74443817 -339.31536865]
[120.13852692 -352.78244019]
[113.53260803 -366.24951172]
[106.92669678 -379.71655273]
[100.32078552 -393.18362427]
[93.74802399 -399.49105835]
[93.71770477 -406.86340332]
[87.28291321 -420.41305542]
[80.84812927 -433.96273804]
[74.41333771 -447.51239014]
[59.13670349 -450.23345947]
[48.40132523 -461.43753052]
[46.33517456 -476.81643677]
[53.73273087 -490.45666504]
[67.74947357 -497.11325073]
[82.99568939 -494.22665405]
[93.60889435 -482.90676880]
[95.50809479 -467.50634766]
[87.96300507 -453.94717407]
[94.39779663 -440.39752197]
[100.83258057 -426.84783936]
[107.26737213 -413.29818726]
[113.78785706 -399.78955078]
[120.39376831 -386.32247925]
[126.99967957 -372.85540771]
[133.60559082 -359.38833618]
[140.21150208 -345.92126465]
[146.81741333 -332.45419312]
[153.42332458 -318.98715210]
[159.17669678 -314.37725830]
[160.02641296 -305.30737305]
[166.46119690 -291.75772095]
[172.89599609 -278.20803833]
[179.33078003 -264.65838623]
[186.02185059 -251.23341370]
[192.96681213 -237.93801880]
[199.91175842 -224.64262390]
[197.00234985 -239.35775757]
[205.90420532 -251.43074036]
[220.82174683 -253.00137329]
[232.04283142 -243.04711914]
[232.26191711 -228.04872131]
[221.33679199 -217.77110291]
[234.71910095 -224.54707336]
[248.10140991 -231.32305908]
[261.48373413 -238.09902954]
[267.70739746 -244.75115967]
[275.07873535 -244.87486267]
[288.54580688 -251.48077393]
[302.01287842 -258.08670044]
[315.47994995 -264.69259644]
[328.94702148 -271.29852295]
[342.41409302 -277.90441895]
[355.88113403 -284.51034546]
[369.34820557 -291.11624146]
[382.81527710 -297.72216797]
[396.28234863 -304.32806396]
[409.74942017 -310.93399048]
[423.21649170 -317.53991699]
[433.13638306 -333.06695557]
[450.59304810 -331.17156982]
[463.97537231 -337.94754028]
[450.03536987 -343.48620605]
[443.98706055 -357.21276855]
[449.30670166 -371.23779297]
[462.93679810 -377.50039673]
[477.04345703 -372.40109253]
[483.51879883 -358.87075806]
[478.64117432 -344.68606567]
[492.49935913 -350.42630005]
[506.35757446 -356.16656494]
[520.21575928 -361.90682983]
[526.33227539 -376.23254395]
[540.46820068 -381.85653687]
[554.08789062 -375.93710327]
[567.94610596 -381.67736816]
[577.49456787 -395.00997925]
[593.78649902 -393.13803101]
[600.06219482 -377.98718262]
[589.86572266 -365.14337158]
[573.68634033 -367.81918335]
[559.82812500 -362.07891846]
[554.38323975 -348.26266479]
[540.41082764 -342.24383545]
[525.95599365 -348.04861450]
[512.09783936 -342.30838013]
[498.23962402 -336.56811523]
[484.38143921 -330.82788086]
[470.75134277 -324.56524658]
[457.36901855 -317.78924561]
[453.31427002 -306.40869141]
[442.24118042 -300.64828491]
[429.82238770 -304.07284546]
[416.35534668 -297.46691895]
[402.88827515 -290.86102295]
[389.42120361 -284.25509644]
[375.95413208 -277.64920044]
[362.48706055 -271.04327393]
[349.01998901 -264.43734741]
[335.55291748 -257.83145142]
[322.08584595 -251.22554016]
[308.61877441 -244.61962891]
[295.15173340 -238.01371765]
[281.68466187 -231.40780640]
[268.25970459 -224.71672058]
[254.87738037 -217.94075012]
[241.49507141 -211.16477966]
[228.11277771 -204.38879395]
[214.20451355 -195.13371277]
[200.62643433 -196.43984985]
[194.36380005 -182.80975342]
[188.10116577 -169.17965698]
[181.83853149 -155.54957581]
[175.57589722 -141.91947937]
[182.08288574 -126.39965820]
[175.20565796 -110.67055511]
[158.75860596 -104.67733002]
[152.66912842 -90.96900177]
[146.57966614 -77.26067352]
[140.49018860 -63.55234528]
[134.40071106 -49.84401321]
[139.97322083 -36.07874298]
[133.99290466 -22.08979988]
[119.51683807 -16.33817101]
[113.42736816 -2.62984133]
[107.33789062 11.07848835]
[101.33536530 24.82511139]
[95.42002869 38.60947800]
[89.50468445 52.39384460]
[83.58934784 66.17821503]
[99.98927307 60.86384201]
[117.73799896 63.39150238]
[133.14413452 73.84224701]
[142.74288940 90.59178162]
[144.06597900 110.54177856]
[136.24546814 129.68904114]
[136.24546814 144.68904114]
[136.24546814 159.68904114]
[136.24546814 174.68904114]
[136.24546814 189.68904114]
[143.98277283 203.48921204]
[136.24546814 216.21647644]
[136.24546814 231.21647644]
[147.14002991 242.34960938]
[146.92634583 257.56173706]
[136.24546814 267.87942505]
[136.24546814 282.87942505]
[143.98277283 296.67959595]
[136.24546814 309.40686035]
[136.24546814 324.40686035]
[136.24546814 339.40686035]
[147.14002991 350.53997803]
[146.92634583 365.75210571]
[136.24546814 376.06979370]
[136.24546814 391.06979370]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 247]
[2 246]
[5 243]
[6 242]
[7 241]
[9 239]
[10 238]
[13 235]
[14 234]
[16 232]
[17 231]
[18 230]
[19 229]
[20 228]
[24 33]
[25 32]
[26 31]
[37 57]
[38 56]
[39 55]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[58 222]
[59 221]
[60 220]
[61 219]
[63 218]
[64 217]
[65 216]
[68 213]
[69 212]
[70 211]
[71 210]
[72 209]
[76 206]
[77 205]
[78 204]
[79 203]
[80 202]
[81 129]
[82 128]
[83 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[99 114]
[100 113]
[101 112]
[102 111]
[135 200]
[136 199]
[137 198]
[138 197]
[140 196]
[141 195]
[142 194]
[143 193]
[144 192]
[145 191]
[146 190]
[147 189]
[148 188]
[149 187]
[150 186]
[151 185]
[153 182]
[154 181]
[161 180]
[162 179]
[163 178]
[164 177]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
