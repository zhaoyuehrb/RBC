%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAACGCCGGCUCCCGGCAUGCCGCGCGCUGACAGCCUUAUAAAUAGUCGCCUUUGCCGGCCGCCGCGAGGACGGGCAGGGCACGCACUGGCCCCGGCGCCCACCCGCACCCCUCCCCAGAGCACUGACACGGCUCCCGGGACCUCGGCAGGAUGGAAGAGAAGCUGAAGAAAACCAAGAUCAUCUUUGUGGUGGGUGGGCCUGGCUCAGGGAAGGGCACCCAGUGUGAGAAGAUCGUGCAGAAGUAUGGCU\
) } def
/len { sequence length } bind def

/coor [
[71.46886444 532.40795898]
[63.97115707 532.22247314]
[59.23016357 546.45355225]
[68.08486176 559.05908203]
[67.82220459 574.28356934]
[58.75247574 586.29205322]
[44.52113724 590.60565186]
[39.78014374 604.83673096]
[35.03915024 619.06774902]
[30.29815483 633.29882812]
[25.55716133 647.52990723]
[26.28733253 664.46807861]
[10.21319866 669.85870361]
[0.58350170 655.90502930]
[11.32610416 642.78887939]
[16.06709862 628.55786133]
[20.80809212 614.32678223]
[25.54908752 600.09570312]
[30.29008102 585.86468506]
[21.48908424 573.87799072]
[21.43327332 558.82934570]
[30.35363007 546.48919678]
[44.99910736 541.71252441]
[49.74010086 527.48150635]
[51.91777420 498.00402832]
[72.35401917 486.16583252]
[72.53954315 471.16699219]
[72.72505951 456.16812134]
[72.91058350 441.16928101]
[73.09610748 426.17041016]
[73.28163147 411.17156982]
[73.46715546 396.17272949]
[61.43591309 387.43273926]
[56.80333328 373.11480713]
[61.54541016 358.64532471]
[74.04273987 349.63848877]
[74.22826385 334.63964844]
[74.41378784 319.64077759]
[74.59930420 304.64193726]
[74.78482819 289.64306641]
[64.94235992 300.96234131]
[50.34819794 304.42794800]
[36.46760559 298.74206543]
[28.49863243 286.03399658]
[29.42552376 271.06265259]
[38.90117264 259.43457031]
[53.37711334 255.50428772]
[67.43234253 260.74359131]
[75.80356598 273.19097900]
[77.46986389 258.28381348]
[75.09612274 251.30662537]
[79.25006866 243.20300293]
[81.10060883 228.31758118]
[82.95115662 213.43217468]
[73.62476349 201.87561035]
[75.28943634 186.75332642]
[87.47425079 177.04931641]
[89.32479095 162.16389465]
[91.17533875 147.27848816]
[93.02588654 132.39308167]
[94.87642670 117.50765991]
[85.73274231 105.61678314]
[70.87136078 103.58227539]
[56.00997543 101.54776764]
[41.13629150 99.60520172]
[26.25087929 97.75465393]
[11.36460590 104.63439941]
[-1.87878561 94.96255493]
[0.14437127 78.68868256]
[15.35282612 72.55395508]
[28.10142517 82.86924744]
[42.98683548 84.71978760]
[49.99285126 82.43252563]
[58.04448318 86.68637848]
[72.90586853 88.72088623]
[87.76725006 90.75539398]
[93.20622253 76.77621460]
[80.87770081 68.23176575]
[62.48388672 67.12886047]
[55.63996124 50.95673752]
[43.20670319 42.56542587]
[30.77344513 34.17411423]
[18.34018707 25.78280258]
[3.80402112 31.21230507]
[-11.13832283 27.02828979]
[-20.74120712 14.83959675]
[-21.31212807 -0.66697186]
[-12.63155556 -13.52882481]
[1.96265578 -18.80031776]
[16.85873222 -14.45445251]
[26.32882881 -2.16230440]
[26.73149872 13.34954548]
[39.16475677 21.74085617]
[51.59801483 30.13216782]
[64.03127289 38.52347946]
[75.94413757 36.52529526]
[86.36550140 43.39103699]
[89.42214966 55.90324402]
[101.75067139 64.44769287]
[116.49325562 61.68072128]
[124.88456726 49.24746323]
[133.27587891 36.81420517]
[141.66719055 24.38094711]
[150.05850220 11.94769001]
[158.44981384 -0.48556733]
[166.84112549 -12.91882515]
[175.23243713 -25.35208321]
[183.62374878 -37.78533936]
[192.01506042 -50.21859741]
[182.63800049 -57.26415634]
[175.79808044 -68.40138245]
[173.18136597 -82.58908081]
[176.01731873 -98.12847137]
[184.83570862 -112.86589050]
[199.31188965 -124.48042297]
[200.05369568 -139.46206665]
[200.79550171 -154.44371033]
[201.53730774 -169.42536926]
[191.20664978 -181.08364868]
[192.17236328 -196.26658630]
[203.35041809 -206.04344177]
[204.09222412 -221.02508545]
[204.83403015 -236.00672913]
[205.57583618 -250.98838806]
[192.96633911 -259.87680054]
[187.18519592 -274.18002319]
[190.07713318 -289.33392334]
[200.71934509 -300.50292969]
[215.71595764 -304.12307739]
[230.28158569 -299.03915405]
[239.76840210 -286.87347412]
[241.14918518 -271.50802612]
[233.98335266 -257.84588623]
[220.55747986 -250.24658203]
[219.81567383 -235.26492310]
[219.07386780 -220.28327942]
[218.33206177 -205.30163574]
[228.48962402 -194.46836853]
[227.95074463 -179.26428223]
[216.51895142 -168.68356323]
[215.77714539 -153.70190430]
[215.03533936 -138.72026062]
[214.29353333 -123.73861694]
[221.19570923 -120.80433655]
[235.00006104 -114.93578339]
[241.90222168 -112.00150299]
[252.17584229 -122.93095398]
[262.44946289 -133.86039734]
[272.72308350 -144.78985596]
[282.99667358 -155.71929932]
[276.71624756 -169.56214905]
[276.21630859 -184.75486755]
[281.57312012 -198.98065186]
[291.96978760 -210.07019043]
[305.82089233 -216.33241272]
[321.01425171 -216.81236267]
[335.23297119 -211.43685913]
[346.30883789 -201.02561951]
[352.55282593 -187.16629028]
[353.01278687 -171.97232056]
[347.61856079 -157.76066589]
[337.19277954 -146.69851685]
[323.32525635 -140.47276306]
[308.13067627 -140.03279114]
[293.92614746 -145.44567871]
[283.65252686 -134.51623535]
[273.37890625 -123.58678436]
[263.10528564 -112.65734100]
[252.83168030 -101.72789001]
[256.43344116 -95.14934540]
[266.72070312 -106.06594849]
[280.28186035 -99.65542603]
[278.37554932 -84.77705383]
[263.63696289 -81.99224854]
[267.23873901 -75.41370392]
[281.98132324 -78.18067169]
[294.11743164 -88.33084106]
[308.05352783 -83.07405090]
[322.79614258 -85.84101868]
[337.53872681 -88.60798645]
[352.28131104 -91.37495422]
[366.73327637 -100.23929596]
[379.25192261 -88.80599213]
[371.73092651 -73.61154938]
[355.04827881 -76.63237000]
[340.30569458 -73.86540222]
[325.56311035 -71.09843445]
[310.82049561 -68.33145905]
[299.73892212 -58.37920761]
[284.74829102 -63.43808746]
[270.00570679 -60.67111588]
[236.47132874 -33.06533051]
[204.44831848 -41.82728577]
[196.05700684 -29.39402962]
[187.66569519 -16.96077156]
[179.27438354 -4.52751398]
[170.88307190 7.90574408]
[162.49176025 20.33900070]
[154.10044861 32.77225876]
[145.70913696 45.20551682]
[137.31782532 57.63877487]
[128.92651367 70.07202911]
[109.76184082 119.35820770]
[107.91129303 134.24362183]
[106.06075287 149.12902832]
[104.21020508 164.01445007]
[102.35966492 178.89985657]
[111.79750061 191.29199219]
[109.70873260 206.36155701]
[97.83657074 215.28271484]
[95.98602295 230.16813660]
[94.13547516 245.05354309]
[92.37702179 259.95010376]
[90.71072388 274.85726929]
[89.78368378 289.82861328]
[89.59815979 304.82745361]
[89.41263580 319.82629395]
[89.22711182 334.82516479]
[89.04159546 349.82400513]
[101.31231689 359.13720703]
[105.69505310 373.71954346]
[100.70973969 387.91851807]
[88.46600342 396.35824585]
[88.28047943 411.35708618]
[88.09496307 426.35595703]
[87.90943909 441.35479736]
[87.72391510 456.35363770]
[87.53839111 471.35250854]
[87.35286713 486.35134888]
[98.41883850 489.69967651]
[107.59358978 499.03707886]
[111.68863678 513.08496094]
[108.41008759 528.93310547]
[112.44149780 543.38122559]
[117.74811554 550.78143311]
[116.43224335 558.03295898]
[120.28465271 572.52984619]
[124.13706207 587.02667236]
[127.98947144 601.52355957]
[131.84188843 616.02038574]
[135.69429016 630.51727295]
[147.64340210 641.74896240]
[143.62814331 657.64892578]
[127.77906799 661.86065674]
[116.40034485 650.05151367]
[121.19743347 634.36968994]
[117.34502411 619.87280273]
[113.49261475 605.37597656]
[109.64020538 590.87908936]
[105.78779602 576.38220215]
[101.93538666 561.88537598]
[97.99339294 547.41259766]
[93.96198273 532.96453857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[26 229]
[27 228]
[28 227]
[29 226]
[30 225]
[31 224]
[32 223]
[36 219]
[37 218]
[38 217]
[39 216]
[40 215]
[49 214]
[50 213]
[52 212]
[53 211]
[54 210]
[57 207]
[58 206]
[59 205]
[60 204]
[61 203]
[62 76]
[63 75]
[64 74]
[65 72]
[66 71]
[77 99]
[78 98]
[80 95]
[81 94]
[82 93]
[83 92]
[100 202]
[101 201]
[102 200]
[103 199]
[104 198]
[105 197]
[106 196]
[107 195]
[108 194]
[109 193]
[115 143]
[116 142]
[117 141]
[118 140]
[121 137]
[122 136]
[123 135]
[124 134]
[146 169]
[147 168]
[148 167]
[149 166]
[150 165]
[175 191]
[176 190]
[178 188]
[179 187]
[180 186]
[181 185]
[233 253]
[234 252]
[236 251]
[237 250]
[238 249]
[239 248]
[240 247]
[241 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
