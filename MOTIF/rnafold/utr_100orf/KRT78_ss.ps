%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAACUCACACACCUUGACAAUCUGUCUGUCCGUCUGCAGCUGCGUGACUGUCUGUCUCUGCCAUGUCUCUCUCCCCAUGCCGGGCCCAGAGGGGCUUCAGCGCUCGCUCAGCCUGUUCUGCUCGCUCAAGGGGCCGCAGCAGGGGAGGCUUCAGCAGCAGGG\
) } def
/len { sequence length } bind def

/coor [
[-113.42032623 243.50302124]
[-101.51710510 252.63063049]
[-92.92121124 264.92333984]
[-88.43326569 279.23620605]
[-88.47126770 294.23617554]
[-93.03168488 308.52612305]
[-101.68975067 320.77511597]
[-113.63907623 329.84228516]
[-127.76670074 334.88314819]
[-142.75680542 335.42816162]
[-157.21319580 331.42660522]
[-169.78944397 323.25115967]
[-179.31420898 311.66326904]
[-184.90034485 297.74224854]
[-186.02757263 282.78466797]
[-182.59091187 268.18365479]
[-174.91044617 255.29914856]
[-163.70086670 245.33078003]
[-178.40209961 248.30964661]
[-193.10334778 251.28849792]
[-207.80458069 254.26736450]
[-219.79333496 264.59112549]
[-233.80366516 259.53546143]
[-248.50491333 262.51431274]
[-263.17712402 265.63299561]
[-277.81896973 268.89120483]
[-292.46084595 272.14941406]
[-307.03802490 275.68579102]
[-321.54522705 279.49905396]
[-336.05242920 283.31234741]
[-350.55963135 287.12561035]
[-358.30935669 300.89938354]
[-373.55111694 305.07852173]
[-387.24218750 297.18356323]
[-391.25991821 281.89849854]
[-383.22067261 268.29165649]
[-367.89398193 264.43576050]
[-354.37289429 272.61840820]
[-339.86569214 268.80514526]
[-325.35848999 264.99185181]
[-310.85128784 261.17858887]
[-307.69427490 257.54013062]
[-302.20120239 255.87382507]
[-295.71905518 257.50753784]
[-281.07717896 254.24934387]
[-266.43533325 250.99113464]
[-260.56259155 246.44802856]
[-251.48376465 247.81307983]
[-236.78253174 244.83421326]
[-225.84530640 234.72351074]
[-210.78344727 239.56611633]
[-196.08219910 236.58726501]
[-181.38096619 233.60839844]
[-166.67971802 230.62954712]
[-164.23257446 227.04776001]
[-160.22955322 224.42745972]
[-155.09234619 223.42561340]
[-149.50938416 224.50317383]
[-136.24288940 217.50317383]
[-122.97639465 210.50315857]
[-109.70989990 203.50315857]
[-96.44340515 196.50314331]
[-83.17691040 189.50312805]
[-78.91819000 173.25460815]
[-63.94144440 164.93058777]
[-47.24946594 170.09184265]
[-34.11864853 162.84053040]
[-33.70108414 149.47126770]
[-26.66578293 137.96791077]
[-14.76486111 131.40087891]
[-1.06513858 131.58497620]
[10.84195232 138.57922363]
[24.10844612 131.57922363]
[37.37493896 124.57920837]
[50.64143372 117.57920074]
[63.90792847 110.57918549]
[77.17442322 103.57917786]
[90.44091797 96.57917023]
[95.56167603 90.30311584]
[104.02729797 89.57490540]
[117.42465973 82.82874298]
[130.82202148 76.08258057]
[144.08851624 69.08256531]
[157.21932983 61.83124924]
[170.35014343 54.57992935]
[178.69027710 41.13549423]
[193.57194519 41.75599670]
[206.70275879 34.50467682]
[219.83358765 27.25335884]
[228.94683838 11.27656555]
[246.44985962 12.24248409]
[259.44024658 4.74248457]
[272.43063354 -2.75751543]
[285.34902954 -10.38084221]
[298.19424438 -18.12680435]
[311.03948975 -25.87276649]
[323.88473511 -33.61872864]
[327.69754028 -52.13995361]
[343.54141235 -61.86691284]
[361.16918945 -57.05294418]
[373.71020508 -65.28231812]
[386.25125122 -73.51168823]
[391.74081421 -80.87057495]
[399.11032104 -81.77570343]
[411.80575562 -89.76482391]
[424.50119019 -97.75393677]
[429.44818115 -113.01522064]
[444.51443481 -118.52767181]
[458.14242554 -110.06260681]
[459.87792969 -94.11370087]
[448.38958740 -82.91558838]
[432.49029541 -85.05850220]
[419.79486084 -77.06938934]
[407.09942627 -69.08027649]
[394.48062134 -60.97066116]
[381.93960571 -52.74128723]
[369.39855957 -44.51191330]
[369.54949951 -33.05100632]
[364.07437134 -22.84477234]
[354.24044800 -16.50159645]
[342.44485474 -15.70614529]
[331.63067627 -20.77349281]
[318.78546143 -13.02753067]
[305.94021606 -5.28156853]
[293.09497070 2.46439362]
[288.97216797 8.63943863]
[279.93063354 10.23286533]
[266.94024658 17.73286629]
[253.94985962 25.23286629]
[250.50151062 36.85712433]
[239.70161438 43.20316696]
[227.08489990 40.38417816]
[213.95408630 47.63549805]
[200.82327271 54.88681412]
[193.42234802 67.81259155]
[177.60147095 67.71074677]
[164.47064209 74.96206665]
[151.33982849 82.21338654]
[149.17045593 86.51443481]
[144.25305176 89.47574615]
[137.56817627 89.47994232]
[124.17082214 96.22610474]
[110.77346039 102.97226715]
[97.44092560 109.84566498]
[84.17443085 116.84567261]
[70.90793610 123.84568024]
[57.64144516 130.84568787]
[44.37495041 137.84570312]
[31.10845566 144.84571838]
[17.84196281 151.84571838]
[15.67480087 168.59884644]
[4.07629156 180.65127563]
[-12.25415611 183.40444946]
[-26.86732864 175.97134399]
[-39.99814606 183.22265625]
[-42.22635269 196.53361511]
[-51.58797073 205.98265076]
[-64.49388123 208.26644897]
[-76.17690277 202.76962280]
[-89.44339752 209.76963806]
[-102.70989227 216.76965332]
[-115.97637939 223.76965332]
[-129.24287415 230.76966858]
[-142.50936890 237.76966858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 54]
[19 53]
[20 52]
[21 51]
[23 49]
[24 48]
[25 46]
[26 45]
[27 44]
[28 41]
[29 40]
[30 39]
[31 38]
[58 164]
[59 163]
[60 162]
[61 161]
[62 160]
[63 159]
[66 155]
[67 154]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[80 143]
[81 142]
[82 141]
[83 138]
[84 137]
[85 136]
[87 134]
[88 133]
[89 132]
[91 129]
[92 128]
[93 127]
[94 125]
[95 124]
[96 123]
[97 122]
[100 117]
[101 116]
[102 115]
[104 114]
[105 113]
[106 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
