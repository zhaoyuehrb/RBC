%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCGCUGCCAAUCGGCUCGCCUCUACCAACGCCCCUUAAAGGCGCAGCCACUGCCUCCGGAGCCGGGGCGAACCAAUUCCUCCGUUGCGGCCCCCACCUGCAGUAUGGAGUCGUCUCGGGGGCGGCCCGGGCCCGAGACGGACCUUCUGGCUGUAGCGGAACAUCAGGCCCUAGUCUUUGGCGGCGGGCCGGGCCGAACGUCCU\
) } def
/len { sequence length } bind def

/coor [
[152.78428650 475.46896362]
[152.58262634 463.11068726]
[157.68524170 451.77398682]
[167.17933655 443.63641357]
[164.01614380 428.97375488]
[160.85295105 414.31106567]
[157.68975830 399.64837646]
[154.52655029 384.98571777]
[151.36335754 370.32302856]
[148.20016479 355.66033936]
[145.03697205 340.99765015]
[141.87376404 326.33499146]
[138.71057129 311.67230225]
[128.71768188 304.85202026]
[125.96376038 292.65982056]
[132.45765686 281.51327515]
[129.51734924 266.80429077]
[126.57704926 252.09529114]
[123.63674164 237.38629150]
[109.84434509 223.83686829]
[116.59004974 204.84278870]
[113.20468903 190.22979736]
[109.81933594 175.61680603]
[106.43398285 161.00382996]
[94.48471832 161.09373474]
[82.74475861 158.86526489]
[71.65959167 154.40298462]
[61.64988708 147.87620544]
[53.09548950 139.53263855]
[46.32102203 129.68888855]
[41.58356094 118.71850586]
[39.06288147 107.03779602]
[24.06331444 106.92396545]
[9.06374550 106.81014252]
[-5.93582249 106.69631958]
[-20.93539047 106.58249664]
[-35.93495941 106.46866608]
[-42.98695755 121.13002014]
[-55.68079376 131.21279907]
[-71.44410706 134.73857117]
[-87.11061096 131.05110168]
[-99.55610657 120.93791199]
[-106.32147980 106.46261597]
[-121.32105255 106.57643890]
[-136.97517395 116.27059174]
[-151.89050293 107.02651215]
[-166.88661194 107.36795807]
[-181.88272095 107.70940399]
[-196.87884521 108.05084991]
[-212.57623291 114.45617676]
[-223.07670593 101.14540863]
[-213.19294739 87.37051392]
[-197.22029114 93.05474091]
[-182.22418213 92.71329498]
[-167.22805786 92.37184143]
[-152.23194885 92.03039551]
[-143.64962769 83.50291443]
[-131.15684509 83.09752655]
[-121.43487549 91.57687378]
[-106.43530273 91.46304321]
[-101.13426208 78.64070129]
[-91.31508636 68.77655792]
[-78.43719482 63.38349915]
[-64.43252563 63.30640411]
[-51.41575623 68.58993530]
[-41.36498642 78.46681976]
[-35.82113266 91.46910095]
[-20.82156563 91.58292389]
[-5.82199764 91.69674683]
[9.17757034 91.81057739]
[24.17713928 91.92440033]
[39.17670822 92.03822327]
[41.44149017 81.73079681]
[45.43947601 71.96408844]
[51.05233383 63.02718735]
[58.11392975 55.18460083]
[66.41526031 48.66844559]
[75.71063232 43.67159271]
[85.72490692 40.34193420]
[96.16169739 38.77802277]
[106.71208954 39.02614594]
[117.06381989 41.07896042]
[126.91049957 44.87570572]
[135.08963013 32.30184937]
[143.26875305 19.72799492]
[151.44789124 7.15413857]
[159.62701416 -5.41971684]
[167.80615234 -17.99357224]
[175.98527527 -30.56742859]
[184.16441345 -43.14128494]
[192.34353638 -55.71513748]
[200.52265930 -68.28899384]
[208.70179749 -80.86284637]
[216.88092041 -93.43670654]
[203.16960144 -87.35398865]
[188.17987061 -86.79888153]
[174.05619812 -91.85079956]
[162.81912231 -101.78700256]
[156.07624817 -115.18601990]
[154.79220581 -130.13096619]
[159.15069580 -144.48377991]
[168.52818298 -156.19116211]
[181.58311462 -163.57821655]
[196.44784546 -165.58816528]
[210.99580383 -161.93342590]
[223.14573669 -153.13688660]
[231.15945435 -140.45698547]
[233.89051819 -125.70770264]
[230.94755554 -110.99745941]
[241.43273926 -121.72409821]
[251.91792297 -132.45074463]
[262.40310669 -143.17738342]
[272.72430420 -154.06192017]
[282.87911987 -165.10183716]
[293.03393555 -176.14175415]
[303.18875122 -187.18165588]
[313.34356689 -198.22157288]
[323.49838257 -209.26148987]
[333.65319824 -220.30140686]
[343.80801392 -231.34132385]
[353.96282959 -242.38124084]
[364.11764526 -253.42115784]
[363.63629150 -268.99053955]
[374.09197998 -280.04193115]
[388.93798828 -280.40487671]
[399.09280396 -291.44479370]
[405.36563110 -307.19558716]
[422.23739624 -305.52816772]
[425.30569458 -288.85418701]
[410.13272095 -281.28997803]
[399.97790527 -270.25006104]
[400.85403442 -255.42547607]
[390.71286011 -244.08477783]
[375.15756226 -243.26634216]
[365.00274658 -232.22642517]
[354.84793091 -221.18650818]
[344.69311523 -210.14659119]
[334.53829956 -199.10667419]
[324.38348389 -188.06675720]
[314.22866821 -177.02684021]
[304.07385254 -165.98693848]
[293.91903687 -154.94702148]
[283.76422119 -143.90710449]
[283.06527710 -139.17974854]
[279.38720703 -134.84225464]
[273.12976074 -132.69219971]
[262.64456177 -121.96555328]
[252.15937805 -111.23891449]
[241.67419434 -100.51226807]
[239.41714478 -90.69283295]
[229.45477295 -85.25757599]
[221.27565002 -72.68372345]
[213.09652710 -60.10986328]
[204.91738892 -47.53601074]
[196.73826599 -34.96215439]
[188.55912781 -22.38829803]
[180.38000488 -9.81444263]
[172.20086670 2.75941253]
[164.02174377 15.33326817]
[155.84262085 27.90712357]
[147.66348267 40.48097992]
[139.48435974 53.05483627]
[153.14753723 69.36991119]
[160.41435242 89.37135315]
[160.41024780 110.65195465]
[153.13571167 130.65058899]
[139.46624756 146.96038818]
[121.04696655 157.61846924]
[124.43231964 172.23146057]
[127.81768036 186.84443665]
[131.20303345 201.45742798]
[140.75222778 206.67353821]
[145.74984741 216.09094238]
[144.75834656 226.48547363]
[138.34573364 234.44598389]
[141.28604126 249.15498352]
[144.22634888 263.86398315]
[147.16665649 278.57296753]
[159.63883972 292.11819458]
[153.37326050 308.50909424]
[156.53645325 323.17178345]
[159.69964600 337.83447266]
[162.86283875 352.49716187]
[166.02604675 367.15982056]
[169.18923950 381.82250977]
[172.35243225 396.48519897]
[175.51562500 411.14785767]
[178.67881775 425.81054688]
[181.84202576 440.47323608]
[198.63761902 447.29757690]
[207.89543152 462.70147705]
[206.07185364 480.42254639]
[194.08444214 493.38735962]
[197.69117737 507.94729614]
[201.29791260 522.50720215]
[204.90464783 537.06713867]
[217.84596252 546.54882812]
[218.35766602 562.58374023]
[206.04722595 572.87121582]
[190.35816956 569.51965332]
[183.32579041 555.10003662]
[190.34472656 540.67388916]
[186.73799133 526.11395264]
[183.13125610 511.55401611]
[179.52452087 496.99411011]
[167.71983337 494.14624023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[12 181]
[13 180]
[16 178]
[17 177]
[18 176]
[19 175]
[21 171]
[22 170]
[23 169]
[24 168]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[43 60]
[44 59]
[46 56]
[47 55]
[48 54]
[49 53]
[83 162]
[84 161]
[85 160]
[86 159]
[87 158]
[88 157]
[89 156]
[90 155]
[91 154]
[92 153]
[93 152]
[94 151]
[109 149]
[110 148]
[111 147]
[112 146]
[113 143]
[114 142]
[115 141]
[116 140]
[117 139]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[125 131]
[126 130]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
