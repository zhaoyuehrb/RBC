%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCAGGGGCGGGCGGCCGCAGAGCAGCACCGGCCGUGGCUCCGGUAGCAGCAAGUUCGAACCCCGCUCCCGCUCCGCUUCGGUUCUCGCUCCUUCGGCCCUUGGGCCUCCAAACACCAGUCCCCGGCAGCUCGUUGCGCAUUGCGCUCUCCCCGCCACCAGGAUGCCGGUAACCGAGAAGGAUCUAGCUGAGGACGCGCCUUGGAAGAAGAUCCAGCAGAACACGUUCACACGCUGGUGCAACGAGCACCUC\
AAGUGCGUGA\
) } def
/len { sequence length } bind def

/coor [
[19.01442909 281.37597656]
[6.75544071 290.01986694]
[-5.50354767 298.66378784]
[-17.76253700 307.30770874]
[-18.11229324 322.70846558]
[-27.35540771 334.80880737]
[-41.78066254 339.09555054]
[-55.79628372 334.12561035]
[-68.05527496 342.76950073]
[-80.31426239 351.41342163]
[-92.52199554 360.12957764]
[-104.67803955 368.91766357]
[-116.83408356 377.70574951]
[-128.99012756 386.49383545]
[-141.14617920 395.28192139]
[-153.14463806 404.28399658]
[-164.98175049 413.49716187]
[-176.81886292 422.71035767]
[-179.63330078 428.63296509]
[-184.30503845 431.79431152]
[-189.04609680 431.99740601]
[-201.09750366 440.92846680]
[-201.52745056 454.37045288]
[-209.49562073 464.96240234]
[-221.92184448 468.98175049]
[-234.21226501 465.17752075]
[-246.36830139 473.96560669]
[-253.01893616 488.32107544]
[-267.86624146 489.50729370]
[-280.02227783 498.29541016]
[-292.12622070 507.15512085]
[-304.17764282 516.08618164]
[-316.22903442 525.01721191]
[-328.28045654 533.94824219]
[-340.33184814 542.87927246]
[-340.05059814 558.39379883]
[-348.96981812 571.09130859]
[-363.65994263 576.08935547]
[-378.47225952 571.46612549]
[-387.71118164 558.99926758]
[-387.82412720 543.48260498]
[-378.76766968 530.88256836]
[-364.02420044 526.04418945]
[-349.26290894 530.82788086]
[-337.21148682 521.89685059]
[-325.16009521 512.96582031]
[-313.10867310 504.03475952]
[-301.05725098 495.10369873]
[-297.56625366 488.61825562]
[-288.81036377 486.13934326]
[-276.65432739 477.35125732]
[-270.87316895 463.62435913]
[-255.15640259 461.80957031]
[-243.00035095 453.02145386]
[-241.03042603 436.30419922]
[-227.29902649 425.99411011]
[-210.02854919 428.87704468]
[-197.97714233 419.94601440]
[-186.03204346 410.87326050]
[-174.19494629 401.66006470]
[-162.35783386 392.44686890]
[-161.55467224 389.04605103]
[-159.08398438 385.85818481]
[-155.06028748 383.65405273]
[-149.93426514 383.12588501]
[-137.77822876 374.33779907]
[-125.62217712 365.54971313]
[-113.46612549 356.76162720]
[-101.31008148 347.97351074]
[-97.74272919 341.52975464]
[-88.95817566 339.15441895]
[-76.69918060 330.51052856]
[-64.44019318 321.86660767]
[-64.41436005 306.99591064]
[-55.53194046 294.84823608]
[-41.03015518 290.20584106]
[-26.40644646 295.04870605]
[-14.14745903 286.40478516]
[-1.88847005 277.76089478]
[10.37051868 269.11697388]
[10.96084785 253.23355103]
[21.73071289 241.18392944]
[37.97610855 238.74186707]
[45.57815552 225.81094360]
[53.10371017 212.83534241]
[60.55251312 199.81553650]
[68.00131226 186.79573059]
[75.45011139 173.77592468]
[82.89891815 160.75611877]
[83.49069977 153.41458130]
[90.51335144 147.62727356]
[98.11540222 134.69635010]
[105.71744537 121.76542664]
[97.76706696 125.54087067]
[87.97177124 126.13795471]
[77.66548157 122.78680420]
[68.46724701 115.28405762]
[62.04326248 104.08657837]
[59.84261703 90.30744934]
[50.49026871 78.57997894]
[41.13792038 66.85250092]
[31.78557396 55.12503052]
[16.33066940 49.64069366]
[13.61927986 33.46724701]
[26.44064903 23.24254608]
[41.60525513 29.48488808]
[43.51304626 45.77268600]
[52.86539459 57.50015640]
[62.21774292 69.22763062]
[71.57009125 80.95510101]
[78.98850250 79.85188293]
[76.40349579 65.07630920]
[73.81848907 50.30072784]
[71.23348236 35.52514648]
[65.45703888 21.68200302]
[76.39344025 11.41578770]
[89.84414673 18.05495453]
[88.34608459 32.98027802]
[90.17250824 47.86866760]
[91.99892426 62.75706100]
[93.82534027 77.64545441]
[101.24375916 76.54223633]
[106.77880096 62.60081100]
[100.76124573 48.23324966]
[106.57317352 34.17351151]
[120.30753326 28.52523994]
[125.84257507 14.58381653]
[131.37760925 0.64239246]
[136.91265869 -13.29903126]
[142.44770813 -27.24045563]
[147.98274231 -41.18187714]
[142.49137878 -44.59919357]
[137.80995178 -49.62555313]
[134.40513611 -56.05023575]
[132.68379211 -63.52941513]
[132.95579529 -71.60416412]
[135.40242004 -79.72861481]
[140.05291748 -87.30654907]
[146.77168274 -93.73403931]
[150.62544250 -108.23053741]
[154.47920227 -122.72704315]
[158.33294678 -137.22354126]
[156.55891418 -154.08441162]
[172.26976013 -160.45668030]
[182.74218750 -147.12384033]
[172.82945251 -133.36978149]
[168.97569275 -118.87328339]
[165.12193298 -104.37678528]
[161.26817322 -89.88027954]
[168.02545166 -86.62615204]
[174.53370667 -100.14068604]
[186.92726135 -108.59051514]
[188.04823303 -93.63243103]
[181.53997803 -80.11789703]
[188.29724121 -76.86376953]
[197.22828674 -88.91517639]
[193.41302490 -104.08020020]
[200.28472900 -118.12703705]
[214.59877014 -124.42321777]
[229.59652710 -119.99586487]
[238.19650269 -106.93544769]
[236.33804321 -91.40869141]
[224.89866638 -80.74685669]
[209.27969360 -79.98413849]
[200.34866333 -67.93272400]
[187.01043701 -39.69953918]
[161.92416382 -35.64683533]
[156.38912964 -21.70541191]
[150.85408020 -7.76398802]
[145.31904602 6.17743540]
[139.78399658 20.11886024]
[134.24894714 34.06028366]
[140.36880493 47.59109879]
[134.95408630 61.80853653]
[120.72022247 68.13585663]
[115.18518066 82.07727814]
[119.36116028 88.30714417]
[125.97571564 74.84432220]
[140.94215393 73.84139252]
[149.29383850 86.30130005]
[142.67898560 99.76398468]
[127.71311951 100.76686859]
[131.88909912 106.99673462]
[146.88804626 107.17388916]
[161.88700867 107.35104370]
[176.88595581 107.52819061]
[191.88490295 107.70534515]
[206.88386536 107.88249969]
[219.95637512 94.13440704]
[238.60591125 94.33931732]
[250.94181824 107.89751434]
[265.94076538 107.72036743]
[280.93972778 107.54321289]
[295.93869019 107.36605835]
[310.93765259 107.18890381]
[325.93658447 107.01174927]
[338.12951660 96.58525085]
[353.85559082 99.75862885]
[361.05111694 114.09753418]
[354.19628906 128.60238647]
[338.54953003 132.14631653]
[326.11373901 122.01070404]
[311.11480713 122.18785858]
[296.11584473 122.36501312]
[281.11688232 122.54216766]
[266.11791992 122.71931458]
[251.11897278 122.89646912]
[245.13117981 132.56178284]
[235.12492371 138.20819092]
[223.51660156 138.33995056]
[213.17372131 132.80928040]
[206.70671082 122.88145447]
[191.70776367 122.70429993]
[176.70880127 122.52714539]
[161.70985413 122.34999084]
[146.71089172 122.17284393]
[131.71194458 121.99568939]
[118.64837646 129.36747742]
[111.04632568 142.29840088]
[103.44427490 155.22932434]
[95.91872406 168.20492554]
[88.46992493 181.22473145]
[81.02111816 194.24453735]
[73.57231903 207.26434326]
[66.12351990 220.28414917]
[64.58757019 229.25361633]
[58.50908279 233.41297913]
[50.90703201 246.34391785]
[56.47337723 263.50286865]
[48.76816940 279.32461548]
[55.11636353 292.91506958]
[61.46455383 306.50555420]
[67.81274414 320.09600830]
[80.66338348 329.32482910]
[79.03950500 344.13067627]
[85.38769531 357.72113037]
[91.73588562 371.31158447]
[98.08407593 384.90203857]
[104.67202759 398.37789917]
[111.49766541 411.73492432]
[118.32330322 425.09197998]
[125.14894104 438.44903564]
[131.97457886 451.80606079]
[146.73413086 458.09378052]
[150.88162231 473.59143066]
[141.23545837 486.41061401]
[125.19534302 486.71749878]
[115.06587982 474.27670288]
[118.61753082 458.63171387]
[111.79189301 445.27465820]
[104.96625519 431.91763306]
[98.14061737 418.56057739]
[91.31497955 405.20352173]
[88.12557983 403.77584839]
[85.45856476 400.75030518]
[84.04949951 396.38418579]
[84.49362183 391.25021362]
[78.14543152 377.65975952]
[71.79724121 364.06930542]
[65.44905090 350.47885132]
[53.05247498 342.22207642]
[54.22229385 326.44418335]
[47.87409973 312.85372925]
[41.52590942 299.26327515]
[35.17771530 285.67282104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[4 77]
[8 73]
[9 72]
[10 71]
[11 69]
[12 68]
[13 67]
[14 66]
[15 65]
[16 61]
[17 60]
[18 59]
[21 58]
[22 57]
[26 54]
[27 53]
[29 51]
[30 50]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[83 228]
[84 227]
[85 225]
[86 224]
[87 223]
[88 222]
[89 221]
[91 220]
[92 219]
[93 218]
[99 110]
[100 109]
[101 108]
[102 107]
[122 176]
[123 175]
[126 172]
[127 171]
[128 170]
[129 169]
[130 168]
[131 167]
[139 149]
[140 148]
[141 147]
[142 146]
[155 165]
[156 164]
[183 217]
[184 216]
[185 215]
[186 214]
[187 213]
[188 212]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[230 265]
[231 264]
[232 263]
[233 262]
[235 260]
[236 259]
[237 258]
[238 257]
[239 253]
[240 252]
[241 251]
[242 250]
[243 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
