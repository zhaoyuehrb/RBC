%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SHCBP1)
} def

/sequence { (\
GUCAUCACGUCGUUGCCUGGGCUGCCGUCCGCGGAAAUUUGAAAUGGCUGACGGGUCGCUGACGGGCGGCGGUCUGGAGGCAGCGGCCAUGGCGCCGGAGCGCAUGGGCUGGGCGGUGGAGCAGGAGCUGGCGUCUCUGGAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006062159 ubox
1 93 0.998360154 ubox
2 7 0.005545904 ubox
2 92 0.998661725 ubox
3 91 0.999432611 ubox
3 142 0.003563751 ubox
4 90 0.997926201 ubox
5 89 0.979379026 ubox
5 92 0.015233674 ubox
6 91 0.021433253 ubox
7 90 0.021122423 ubox
9 87 0.999181949 ubox
10 86 0.999534051 ubox
11 85 0.999865970 ubox
12 84 0.999970644 ubox
13 83 0.999521141 ubox
14 82 0.999097894 ubox
15 81 0.999988705 ubox
16 80 0.999938248 ubox
17 76 0.003770947 ubox
17 77 0.107000121 ubox
17 79 0.994047479 ubox
18 76 0.216048814 ubox
18 78 0.926628273 ubox
19 74 0.011371802 ubox
19 75 0.947347862 ubox
20 73 0.008049284 ubox
20 74 0.995979632 ubox
20 75 0.066609706 ubox
21 73 0.997322462 ubox
21 74 0.067115586 ubox
22 72 0.999983668 ubox
23 71 0.999239543 ubox
24 70 0.999968707 ubox
25 69 0.999995321 ubox
26 68 0.999978155 ubox
27 67 0.999972075 ubox
28 66 0.999655992 ubox
29 54 0.003534391 ubox
29 65 0.999959826 ubox
30 53 0.003768071 ubox
30 64 0.999967187 ubox
31 48 0.003507608 ubox
31 52 0.005389456 ubox
31 59 0.008478801 ubox
31 63 0.999424590 ubox
32 41 0.019319881 ubox
32 47 0.003557999 ubox
32 50 0.032449375 ubox
32 58 0.009274679 ubox
32 61 0.998184583 ubox
33 40 0.018171093 ubox
33 49 0.032775939 ubox
33 57 0.008928971 ubox
33 60 0.998041679 ubox
34 39 0.014528141 ubox
34 40 0.004572942 ubox
34 48 0.032835815 ubox
34 56 0.006839447 ubox
34 57 0.004131980 ubox
34 59 0.998342601 ubox
35 39 0.009787146 ubox
35 56 0.004383094 ubox
37 45 0.062884741 ubox
37 56 0.811806346 ubox
38 44 0.065336798 ubox
38 51 0.003897090 ubox
38 54 0.010670855 ubox
38 55 0.813842398 ubox
38 62 0.004844026 ubox
39 43 0.055586221 ubox
39 46 0.004612511 ubox
39 50 0.004599050 ubox
39 51 0.011480807 ubox
39 53 0.008942222 ubox
39 54 0.810741943 ubox
39 55 0.015255250 ubox
39 61 0.004789465 ubox
39 62 0.007834347 ubox
40 46 0.003634629 ubox
40 50 0.012665858 ubox
40 53 0.808053652 ubox
40 54 0.016709538 ubox
40 58 0.129697589 ubox
40 61 0.007822120 ubox
41 45 0.007319524 ubox
41 49 0.013119817 ubox
41 52 0.801773127 ubox
41 57 0.131856479 ubox
41 60 0.006927003 ubox
42 56 0.130282325 ubox
45 53 0.139605509 ubox
45 58 0.538758648 ubox
45 61 0.004006089 ubox
46 52 0.149480593 ubox
46 57 0.558726395 ubox
46 60 0.009622429 ubox
47 56 0.559972675 ubox
47 59 0.010526364 ubox
48 54 0.012998228 ubox
48 55 0.560193339 ubox
48 58 0.010520104 ubox
49 53 0.014278616 ubox
49 54 0.549542786 ubox
49 58 0.009910868 ubox
50 57 0.013806683 ubox
51 56 0.012246980 ubox
52 58 0.005062886 ubox
52 61 0.031319690 ubox
53 57 0.004817792 ubox
53 60 0.031742600 ubox
54 59 0.031770710 ubox
55 63 0.006762662 ubox
56 62 0.006863828 ubox
57 61 0.006830516 ubox
95 140 0.996676615 ubox
96 139 0.999895329 ubox
97 137 0.004219466 ubox
97 138 0.999206884 ubox
98 136 0.003884924 ubox
98 137 0.999952703 ubox
99 110 0.007701311 ubox
99 136 0.999510377 ubox
100 109 0.008133094 ubox
100 134 0.143029680 ubox
100 135 0.989416925 ubox
101 108 0.008139173 ubox
101 133 0.998633882 ubox
102 132 0.999044946 ubox
102 134 0.038874184 ubox
103 130 0.035006406 ubox
103 131 0.996372348 ubox
103 133 0.039142436 ubox
104 129 0.035282562 ubox
104 134 0.004793367 ubox
105 130 0.195967035 ubox
105 133 0.004846673 ubox
106 129 0.244352188 ubox
106 132 0.004903022 ubox
107 128 0.202063262 ubox
107 129 0.925305852 ubox
108 114 0.006152292 ubox
108 117 0.006332748 ubox
108 122 0.013180405 ubox
108 128 0.975927742 ubox
109 113 0.006116235 ubox
109 116 0.006519775 ubox
109 121 0.013192149 ubox
109 124 0.041818249 ubox
109 125 0.115298989 ubox
109 127 0.986046568 ubox
110 115 0.006102905 ubox
110 120 0.013121964 ubox
110 123 0.042035687 ubox
110 124 0.114914819 ubox
110 126 0.964222820 ubox
111 122 0.038133895 ubox
111 136 0.006862539 ubox
112 135 0.007757878 ubox
113 122 0.995670842 ubox
113 134 0.007854370 ubox
114 121 0.996659840 ubox
114 133 0.007904206 ubox
115 132 0.007825652 ubox
116 122 0.040329534 ubox
117 121 0.037750546 ubox
117 123 0.010681744 ubox
117 130 0.005385809 ubox
118 122 0.010589050 ubox
118 129 0.003899275 ubox
119 128 0.003827676 ubox
120 129 0.011399529 ubox
121 128 0.011742777 ubox
122 127 0.011738127 ubox
1 93 0.9500000 lbox
2 92 0.9500000 lbox
3 91 0.9500000 lbox
4 90 0.9500000 lbox
5 89 0.9500000 lbox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
11 85 0.9500000 lbox
12 84 0.9500000 lbox
13 83 0.9500000 lbox
14 82 0.9500000 lbox
15 81 0.9500000 lbox
16 80 0.9500000 lbox
17 79 0.9500000 lbox
18 78 0.9500000 lbox
19 75 0.9500000 lbox
20 74 0.9500000 lbox
21 73 0.9500000 lbox
22 72 0.9500000 lbox
23 71 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
30 64 0.9500000 lbox
31 63 0.9500000 lbox
32 61 0.9500000 lbox
33 60 0.9500000 lbox
34 59 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
95 140 0.9500000 lbox
96 139 0.9500000 lbox
97 138 0.9500000 lbox
98 137 0.9500000 lbox
99 136 0.9500000 lbox
100 135 0.9500000 lbox
101 133 0.9500000 lbox
102 132 0.9500000 lbox
103 131 0.9500000 lbox
107 129 0.9500000 lbox
108 128 0.9500000 lbox
109 127 0.9500000 lbox
110 126 0.9500000 lbox
113 122 0.9500000 lbox
114 121 0.9500000 lbox
showpage
end
%%EOF
