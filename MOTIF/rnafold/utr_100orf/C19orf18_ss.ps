%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAGAACUUCUUGAUUCCUCAGAUAAAUAGAGGACAGAUGCUGGACUGUAGCUAAGUAUUUCCUUUCAUCUACGGGAUAAAAUACUGAUAAUUUGAGAGUGAUGGACAAGGUUCAGAGUGGUUUCCUCAUUUUGUUUUUGUUUUUAAUGGAAUGCCAACUUCAUUUAUGCUUGCCGUAUGCAGAUGGACUCCAUCCCACUG\
) } def
/len { sequence length } bind def

/coor [
[59.04686356 140.69387817]
[63.69948196 154.95407104]
[64.20582581 169.94552612]
[60.52600861 184.48715210]
[52.94993973 197.43331909]
[42.07448196 207.76406860]
[28.75645065 214.66551208]
[14.04508400 217.59394836]
[-0.90060383 216.31863403]
[-14.90313816 210.94006348]
[-26.85934830 201.88197327]
[-35.82728577 189.85798645]
[-41.10041809 175.81541443]
[-42.26331329 160.86054993]
[-39.22434998 146.17161560]
[-32.22295761 132.90585327]
[-21.81072044 122.10839081]
[-8.80795765 114.62987518]
[5.76025295 111.05957031]
[-8.81026077 107.49584961]
[-23.38077545 103.93212891]
[-37.95129013 100.36840057]
[-52.52180481 96.80467987]
[-67.09231567 93.24095917]
[-81.66283417 89.67723846]
[-92.16089630 104.90747833]
[-110.12574768 113.11197662]
[-131.00253296 110.81636047]
[-148.76553345 97.40636444]
[-162.94284058 102.30573273]
[-173.45893860 114.12615204]
[-188.01536560 110.97025299]
[-202.19267273 115.86962128]
[-209.15675354 129.80300903]
[-223.60437012 134.56970215]
[-236.84480286 127.84465027]
[-251.02210999 132.74401855]
[-265.19943237 137.64338684]
[-278.19494629 148.53157043]
[-292.25515747 139.05804443]
[-287.04409790 122.92481232]
[-270.09878540 123.46607971]
[-255.92147827 118.56671143]
[-241.74417114 113.66733551]
[-235.48100281 100.20225525]
[-221.17298889 95.03163910]
[-207.09204102 101.69231415]
[-192.91473389 96.79294586]
[-183.41268921 85.32295990]
[-167.84220886 88.12842560]
[-153.66490173 83.22904968]
[-152.50883484 75.81868744]
[-167.32952881 73.50634003]
[-165.01695251 58.68567657]
[-150.19671631 60.99795151]
[-149.04066467 53.58758545]
[-161.05194092 44.60264587]
[-173.06321716 35.61770630]
[-185.07449341 26.63276291]
[-197.08578491 17.64782333]
[-209.09706116 8.66288185]
[-221.10833740 -0.32205915]
[-236.54901123 1.73307788]
[-248.60215759 -7.55003500]
[-250.46626282 -22.28301620]
[-262.47753906 -31.26795578]
[-274.48883057 -40.25289917]
[-286.50009155 -49.23783875]
[-302.10501099 -46.73536682]
[-314.85971069 -56.06774521]
[-317.19705200 -71.69823456]
[-307.73034668 -84.35355377]
[-292.07601929 -86.52551270]
[-279.52148438 -76.92553711]
[-277.51516724 -61.24911880]
[-265.50387573 -52.26417542]
[-253.49259949 -43.27923584]
[-241.48132324 -34.29429626]
[-226.82160950 -36.66677475]
[-214.51248169 -27.72587204]
[-212.12339783 -12.33333874]
[-200.11212158 -3.34839773]
[-188.10084534 5.63654327]
[-176.08955383 14.62148380]
[-164.07827759 23.60642433]
[-152.06700134 32.59136581]
[-140.05572510 41.57630539]
[-122.05971527 34.37053299]
[-103.60776520 35.89538193]
[-88.53005219 45.06121063]
[-79.61464691 59.27192688]
[-78.09910583 75.10671997]
[-63.52859497 78.67044067]
[-48.95808029 82.23416901]
[-34.38756561 85.79788971]
[-19.81705284 89.36161041]
[-5.24653864 92.92533112]
[9.32397556 96.48905945]
[24.26967239 97.76427460]
[39.23331070 96.72049713]
[54.19695282 95.67671967]
[69.16059113 94.63294983]
[78.08162689 77.65141296]
[95.23334503 69.06210327]
[114.17500305 72.09043884]
[123.97396851 60.73349380]
[133.77293396 49.37654495]
[143.57189941 38.01959610]
[153.37086487 26.66264915]
[163.16983032 15.30570126]
[172.96879578 3.94875312]
[182.76776123 -7.40819502]
[182.60133362 -20.30948257]
[191.00207520 -29.56766701]
[203.05993652 -30.58354568]
[213.03347778 -41.78749466]
[223.00701904 -52.99143982]
[232.98056030 -64.19538879]
[242.95410156 -75.39933777]
[252.92764282 -86.60327911]
[262.90118408 -97.80722809]
[272.87472534 -109.01117706]
[273.38339233 -125.04616547]
[286.32290649 -134.53028870]
[301.76718140 -130.18814087]
[307.86868286 -115.35064697]
[299.94686890 -101.39986420]
[284.07867432 -99.03762817]
[274.10513306 -87.83368683]
[264.13159180 -76.62973785]
[254.15805054 -65.42578888]
[244.18450928 -54.22184372]
[234.21096802 -43.01789856]
[224.23742676 -31.81394958]
[214.26388550 -20.61000252]
[211.64733887 -3.25993085]
[194.12471008 2.39077091]
[184.32574463 13.74771881]
[174.52677917 25.10466766]
[164.72781372 36.46161652]
[154.92884827 47.81856155]
[145.12988281 59.17551041]
[135.33091736 70.53245544]
[125.53195190 81.88940430]
[133.54829407 81.28936005]
[141.92027283 82.24945831]
[150.40071106 84.83140564]
[165.27111816 86.79888916]
[180.14152527 88.76637268]
[195.01193237 90.73385620]
[209.88233948 92.70133209]
[224.75274658 94.66881561]
[235.34323120 83.32768250]
[250.58361816 80.41049957]
[264.61370850 87.03897858]
[272.03857422 100.66434479]
[270.00329590 116.04736328]
[259.29040527 127.27294159]
[244.01925659 130.02462769]
[230.06192017 123.24433136]
[222.78526306 109.53922272]
[207.91485596 107.57173920]
[193.04444885 105.60426331]
[178.17404175 103.63677979]
[163.30363464 101.66929626]
[148.43322754 99.70181274]
[145.28405762 106.50862885]
[138.98573303 120.12226105]
[135.83656311 126.92907715]
[146.96299744 136.98901367]
[158.08943176 147.04895020]
[172.95309448 142.91673279]
[187.68447876 147.49819946]
[197.58285522 159.33143616]
[199.48968506 174.64050293]
[192.79652405 188.54032898]
[179.63911438 196.59553528]
[164.21595764 196.23571777]
[151.44850159 187.57571411]
[145.41081238 173.37887573]
[148.02949524 158.17539978]
[136.90306091 148.11544800]
[125.77661896 138.05551147]
[113.56002045 146.75923157]
[119.43404388 160.56124878]
[125.30806732 174.36328125]
[131.18208313 188.16529846]
[137.05610657 201.96733093]
[148.82218933 214.17370605]
[140.35000610 228.85902405]
[123.89326477 224.78324890]
[123.25408936 207.84135437]
[117.38006592 194.03932190]
[111.50604248 180.23730469]
[105.63201904 166.43527222]
[99.75799561 152.63325500]
[75.21007538 133.86450195]
[70.20436859 109.59658813]
[55.24072647 110.64036560]
[40.27708435 111.68413544]
[25.31344604 112.72791290]
[39.06679535 118.71501160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 98]
[20 97]
[21 96]
[22 95]
[23 94]
[24 93]
[25 92]
[29 51]
[30 50]
[32 48]
[33 47]
[36 44]
[37 43]
[38 42]
[56 87]
[57 86]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[65 78]
[66 77]
[67 76]
[68 75]
[99 201]
[100 200]
[101 199]
[102 198]
[105 144]
[106 143]
[107 142]
[108 141]
[109 140]
[110 139]
[111 138]
[112 137]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
[152 161]
[169 183]
[170 182]
[171 181]
[184 196]
[185 195]
[186 194]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
