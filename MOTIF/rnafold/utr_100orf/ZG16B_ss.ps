%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGCCUUCCCCCAGGAAGAGCCCCACGGCCAGCUCCUUCCUGUUCCCCUGGCGGCCCCUCGCUUCUUCCUUCUGGAUGGGGGCCCAGGGGGCCCAGGAGAGUAUAAAGGCGAUGUGGAGGGUGCCCGGCACAACCAGACGCCCAGUCACAGGCGAGAGCCCUGGGAUGCACCGGC\
) } def
/len { sequence length } bind def

/coor [
[92.87954712 161.70449829]
[85.40345764 161.10610962]
[78.72439575 174.53704834]
[72.04532623 187.96798706]
[65.36626434 201.39891052]
[58.80665588 214.88859558]
[52.36701584 228.43595886]
[45.92737961 241.98332214]
[39.48773956 255.53068542]
[33.04810333 269.07806396]
[34.89517212 285.37286377]
[21.54797554 294.90093994]
[6.73696184 287.86062622]
[5.69843245 271.49438477]
[19.50073814 262.63842773]
[25.94037628 249.09104919]
[32.38001251 235.54368591]
[38.81965256 221.99632263]
[45.25928879 208.44895935]
[45.29118347 201.03480530]
[51.93532562 194.71984863]
[58.61439133 181.28890991]
[65.29345703 167.85797119]
[71.97251892 154.42703247]
[58.09941483 137.79466248]
[51.90691757 118.79699707]
[53.15885162 100.52732849]
[60.49832535 85.57736969]
[71.77734375 75.67259979]
[62.61954117 63.79258728]
[53.46173859 51.91257477]
[32.16289139 44.99824905]
[29.95695877 23.47817802]
[19.97949791 12.27772045]
[10.00203609 1.07726169]
[0.02457491 -10.12319660]
[-6.16897583 -12.57719421]
[-9.64927387 -17.11960793]
[-10.09957886 -21.90277100]
[-19.67324066 -33.45027924]
[-29.24690437 -44.99779129]
[-38.82056808 -56.54529953]
[-48.39422989 -68.09281158]
[-65.79489899 -74.07331848]
[-68.09619141 -91.45734406]
[-77.87329102 -102.83311462]
[-87.65039825 -114.20889282]
[-97.42749786 -125.58467102]
[-107.20459747 -136.96044922]
[-116.98170471 -148.33622742]
[-126.75880432 -159.71199036]
[-136.53590393 -171.08776855]
[-142.68492126 -173.65130615]
[-146.08406067 -178.25477600]
[-146.44940186 -183.04518127]
[-155.81660461 -194.76078796]
[-165.18380737 -206.47639465]
[-174.55102539 -218.19198608]
[-183.91822815 -229.90759277]
[-191.74711609 -234.67539978]
[-193.34550476 -241.91528320]
[-202.50331116 -253.79528809]
[-207.15922546 -239.53617859]
[-221.14555359 -234.11558533]
[-234.19468689 -241.51289368]
[-236.72703552 -256.29757690]
[-226.88357544 -267.61596680]
[-211.89001465 -267.15878296]
[-219.95886230 -279.80368042]
[-228.02770996 -292.44860840]
[-242.82109070 -299.52587891]
[-243.81874084 -315.89465332]
[-229.99436951 -324.71612549]
[-215.56929016 -316.91552734]
[-215.38279724 -300.51745605]
[-207.31394958 -287.87252808]
[-199.24510193 -275.22763062]
[-190.62329102 -262.95309448]
[-181.46549988 -251.07307434]
[-172.20262146 -239.27481079]
[-162.83541870 -227.55920410]
[-153.46821594 -215.84359741]
[-144.10099792 -204.12799072]
[-134.73379517 -192.41238403]
[-125.16013336 -180.86486816]
[-115.38302612 -169.48910522]
[-105.60592651 -158.11332703]
[-95.82882690 -146.73754883]
[-86.05171967 -135.36177063]
[-76.27462006 -123.98599243]
[-66.49752045 -112.61022186]
[-56.72041702 -101.23444366]
[-44.66703033 -100.00300598]
[-36.42935181 -90.57832336]
[-36.84672165 -77.66647339]
[-27.27305794 -66.11896515]
[-17.69939423 -54.57145309]
[-8.12573147 -43.02394485]
[1.44793105 -31.47643280]
[11.22503281 -20.10065842]
[21.20249367 -8.90019989]
[31.17995644 2.30025864]
[41.15741730 13.50071716]
[49.00616455 12.25915718]
[56.79328156 14.26185036]
[63.21799088 19.25147820]
[67.17664337 26.46559715]
[67.95192719 34.75246811]
[65.34175110 42.75477219]
[74.49954987 54.63478470]
[83.65735626 66.51479340]
[113.02695465 56.66900635]
[145.85812378 72.96650696]
[159.83064270 112.96675110]
[174.83004761 112.83363342]
[189.82946777 112.70051575]
[204.82887268 112.56739807]
[219.82827759 112.43428040]
[235.45252991 102.71663666]
[250.38629150 111.90811157]
[265.38098145 111.50880432]
[280.37564087 111.10949707]
[295.37033081 110.71018982]
[310.36502075 110.31088257]
[319.19277954 97.68643188]
[333.59320068 92.73857880]
[347.97573853 97.16658783]
[356.88632202 109.07202148]
[371.88101196 108.67271423]
[383.91815186 98.06674957]
[399.68951416 101.00682831]
[407.09661865 115.23757935]
[400.45739746 129.84237671]
[384.86486816 133.61769104]
[372.28030396 123.66739655]
[357.28561401 124.06670380]
[349.02130127 136.42950439]
[334.89483643 141.61669922]
[320.25149536 137.44229126]
[310.76434326 125.30556488]
[295.76965332 125.70487213]
[280.77496338 126.10417938]
[265.78027344 126.50348663]
[250.78559875 126.90279388]
[242.22030640 135.47229004]
[229.71060181 135.90972900]
[219.96139526 127.43369293]
[204.96199036 127.56681061]
[189.96257019 127.69992065]
[174.96316528 127.83303833]
[159.96376038 127.96615601]
[153.88703918 141.68014526]
[163.86450195 152.88059998]
[173.84196472 164.08106995]
[189.57273865 168.71514893]
[193.16136169 184.71682739]
[180.91616821 195.62495422]
[165.43395996 190.21817017]
[162.64151001 174.05851746]
[152.66404724 162.85806274]
[142.68658447 151.65760803]
[129.63015747 159.04202271]
[134.08781433 173.36436462]
[138.54547119 187.68670654]
[143.00312805 202.00903320]
[157.10940552 209.13562012]
[161.96536255 224.17541504]
[154.69003296 238.20556641]
[139.59974670 242.90223694]
[125.64730072 235.47897339]
[121.11043549 220.33987427]
[128.68078613 206.46669006]
[124.22313690 192.14436340]
[119.76547241 177.82202148]
[115.30781555 163.49969482]
[107.83172607 162.90129089]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 21]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[29 111]
[30 110]
[31 109]
[33 103]
[34 102]
[35 101]
[36 100]
[39 99]
[40 98]
[41 97]
[42 96]
[43 95]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[51 86]
[52 85]
[55 84]
[56 83]
[57 82]
[58 81]
[59 80]
[61 79]
[62 78]
[68 77]
[69 76]
[70 75]
[114 151]
[115 150]
[116 149]
[117 148]
[118 147]
[120 144]
[121 143]
[122 142]
[123 141]
[124 140]
[128 136]
[129 135]
[152 161]
[153 160]
[154 159]
[162 175]
[163 174]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
