%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUAAAUUCUGCAGCUCAGAGAUUCACACAGAAGUCUGGACACAAUUCAGAAGAGCCACCCAGAAGGAGACAACAAUGUCCCUGCUACCCGUGCCAUACACAGAGGCUGCCUCUUUGUCUACUGGUUCUACUGUGACAAUCAAAGGGCGACCACUUGCCUGUUUCUUGAAUGAAC\
) } def
/len { sequence length } bind def

/coor [
[98.22565460 208.23452759]
[97.43180847 193.25553894]
[96.63795471 178.27656555]
[95.84410095 163.29759216]
[95.05024719 148.31860352]
[94.25640106 133.33963013]
[93.46254730 118.36064911]
[86.20681000 116.46215820]
[71.69533539 112.66518402]
[64.43959045 110.76669312]
[56.41113663 123.43727875]
[48.38267517 136.10786438]
[40.35421753 148.77845764]
[42.44780350 164.68432617]
[31.21410942 176.13786316]
[15.27066326 174.35292053]
[6.84791183 160.69873047]
[12.40707016 145.64962769]
[27.68362808 140.75000000]
[35.71208572 128.07940674]
[43.74054718 115.40882111]
[51.76900482 102.73823547]
[54.40269089 87.97125244]
[51.24949646 73.30641937]
[48.09630203 58.64158249]
[44.94310760 43.97674942]
[31.95166016 35.38256454]
[28.96278000 20.46541786]
[37.23608398 8.13302040]
[34.08288956 -6.53181362]
[30.92969513 -21.19664764]
[27.77650070 -35.86148071]
[24.62330818 -50.52631760]
[16.44149590 -52.10282516]
[9.06956100 -56.97397995]
[3.83966517 -64.71266937]
[1.85911322 -74.35638428]
[-13.13855076 -74.62111664]
[-28.13621521 -74.88584137]
[-43.13387680 -75.15056610]
[-58.13154221 -75.41529083]
[-73.12920380 -75.68002319]
[-85.62397003 -65.61720276]
[-101.24974060 -69.25241852]
[-108.01976776 -83.79705048]
[-100.74066162 -98.09369659]
[-84.99633026 -101.17520142]
[-72.86447906 -90.67768860]
[-57.86681366 -90.41295624]
[-42.86915207 -90.14823151]
[-27.87148666 -89.88350677]
[-12.87382317 -89.61877441]
[2.12384057 -89.35404968]
[13.45219994 -99.18605042]
[15.30067635 -114.07172394]
[17.14915276 -128.95738220]
[18.99762726 -143.84306335]
[20.84610367 -158.72872925]
[22.69458008 -173.61439514]
[24.54305458 -188.50006104]
[11.18417835 -194.18501282]
[0.10315692 -203.87026978]
[-7.52192163 -216.69000244]
[-10.83029270 -231.43840027]
[-9.37413120 -246.68284607]
[-3.17470694 -260.90298462]
[7.26764297 -272.64239502]
[0.62342119 -286.09060669]
[-6.02080059 -299.53881836]
[-12.64782238 -305.87011719]
[-12.66125488 -313.28350830]
[-19.06710052 -326.84689331]
[-25.47294807 -340.41027832]
[-31.87879372 -353.97363281]
[-45.65898132 -362.86401367]
[-44.57965469 -379.22760010]
[-29.75113678 -386.23095703]
[-16.42773438 -376.66961670]
[-18.31542015 -360.37948608]
[-11.90957355 -346.81610107]
[-5.50372696 -333.25274658]
[0.90211970 -319.68936157]
[7.42740822 -306.18304443]
[14.07162952 -292.73483276]
[20.71585083 -279.28662109]
[35.43405151 -282.18051147]
[36.49213409 -297.14315796]
[25.12688828 -307.88397217]
[23.37602997 -323.42324829]
[32.06626129 -336.42376709]
[47.09432220 -340.74713135]
[61.36442184 -334.35195923]
[68.13865662 -320.25784302]
[64.21843719 -305.11959839]
[51.45476913 -296.08508301]
[50.39668655 -281.12243652]
[53.78649139 -278.76211548]
[56.88590622 -276.17779541]
[59.68132782 -273.40045166]
[62.16220474 -270.46166992]
[72.29063416 -281.52581787]
[82.41905975 -292.58993530]
[86.03023529 -307.99349976]
[100.33115387 -312.15679932]
[110.45958710 -323.22091675]
[120.58801270 -334.28506470]
[130.71644592 -345.34918213]
[140.84487915 -356.41329956]
[147.08007812 -372.17904663]
[163.95576477 -370.55191040]
[167.06387329 -353.88528442]
[151.90899658 -346.28488159]
[141.78056335 -335.22076416]
[131.65214539 -324.15661621]
[121.52371216 -313.09249878]
[111.39527893 -302.02838135]
[108.50856018 -287.41616821]
[93.48319244 -282.46151733]
[83.35475922 -271.39736938]
[73.22633362 -260.33325195]
[81.79896545 -242.57803345]
[82.01989746 -222.80909729]
[73.80165863 -204.76895142]
[58.65874863 -191.89218140]
[39.42872620 -186.65159607]
[37.58024979 -171.76591492]
[35.73177338 -156.88024902]
[33.88329697 -141.99458313]
[32.03482056 -127.10891724]
[30.18634415 -112.22324371]
[28.33786964 -97.33757782]
[50.47582245 -77.65895081]
[39.28814316 -53.67951202]
[42.44133759 -39.01467514]
[45.59452820 -24.34984207]
[48.74772263 -9.68500805]
[51.90091705 4.97982693]
[64.51204681 12.82170868]
[67.91873932 27.64901733]
[59.60794449 40.82355499]
[62.76113510 55.48839188]
[65.91432953 70.15322113]
[69.06752777 84.81806183]
[82.82380676 66.80495453]
[106.40107727 60.21792603]
[130.89486694 69.78773499]
[145.69670105 93.69097900]
[156.76083374 103.81940460]
[167.82496643 113.94783783]
[178.88908386 124.07627106]
[189.95321655 134.20469666]
[201.01733398 144.33312988]
[217.13763428 147.34445190]
[222.33396912 162.89855957]
[211.26078796 174.99472046]
[195.30924988 171.18942261]
[190.88891602 155.39724731]
[179.82478333 145.26882935]
[168.76065063 135.14039612]
[157.69653320 125.01196289]
[146.63240051 114.88353729]
[135.56826782 104.75510406]
[128.78659058 107.95803070]
[139.07020569 118.87806702]
[131.86242676 132.03283691]
[117.12417603 129.24284363]
[115.22321320 114.36387634]
[108.44152832 117.56679535]
[109.23537445 132.54577637]
[110.02922821 147.52474976]
[110.82308197 162.50373840]
[111.61693573 177.48271179]
[112.41078186 192.46168518]
[113.20463562 207.44067383]
[122.59309387 220.88644409]
[115.39880371 235.62327576]
[99.02264404 236.49118042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[5 170]
[6 169]
[7 168]
[10 22]
[11 21]
[12 20]
[13 19]
[23 143]
[24 142]
[25 141]
[26 140]
[29 137]
[30 136]
[31 135]
[32 134]
[33 133]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[67 85]
[68 84]
[69 83]
[71 82]
[72 81]
[73 80]
[74 79]
[86 96]
[87 95]
[100 120]
[101 119]
[102 118]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
