%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUAGGAAAGGGGCGGAGCUGCAGGGGUGGUUGGCUGAGGCUGGCUUCUGCGUGGUGCAGCUGCGCACGUGUUUCAGCCGGCAGCGCUUUAAGAUUUCCGGGGAUGGAAUCCGAAAUGGAAACGCAGAGCGCCAGGGCAGAGGAGGGCUUUACCCAGGUCACCCGCAAGGGUGGCCGACGGGCGAAGAAACGACAGGCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[-19.49024582 196.57553101]
[-22.38733292 205.79067993]
[-26.86337471 214.34478760]
[-32.77605820 221.97000122]
[-39.93810654 228.42790222]
[-48.12323380 233.51702881]
[-57.07327271 237.07910156]
[-66.50632477 239.00398254]
[-76.12564087 239.23304749]
[-85.62895966 237.76101685]
[-94.71799469 234.63601685]
[-103.10780334 229.95803833]
[-110.53573608 223.87571716]
[-116.76961517 216.58160400]
[-121.61504364 208.30612183]
[-135.92269897 212.81065369]
[-150.23036194 217.31518555]
[-161.07005310 228.83956909]
[-175.53341675 225.28141785]
[-189.84107971 229.78594971]
[-204.14874268 234.29046631]
[-218.45640564 238.79499817]
[-232.76406860 243.29953003]
[-247.07173157 247.80404663]
[-261.37939453 252.30857849]
[-266.53317261 268.41668701]
[-280.13668823 278.18310547]
[-296.71475220 277.92080688]
[-309.73876953 267.93115234]
[-323.97607422 272.65332031]
[-338.21337891 277.37551880]
[-352.45068359 282.09771729]
[-358.92477417 293.25634766]
[-370.88333130 296.89505005]
[-381.75457764 291.58444214]
[-396.06222534 296.08895874]
[-410.36990356 300.59347534]
[-424.67755127 305.09802246]
[-431.75793457 319.22753906]
[-446.78173828 324.13272095]
[-460.83563232 316.90338135]
[-465.58169556 301.82855225]
[-458.20413208 287.85186768]
[-443.07998657 283.26544189]
[-429.18209839 290.79034424]
[-414.87442017 286.28582764]
[-400.56677246 281.78128052]
[-386.25909424 277.27676392]
[-375.11434937 263.72305298]
[-357.17288208 267.86041260]
[-342.93557739 263.13821411]
[-328.69827271 258.41601562]
[-314.46096802 253.69383240]
[-311.60995483 240.64883423]
[-302.61248779 230.63639832]
[-289.73980713 226.34405518]
[-276.32144165 228.99476624]
[-265.88394165 238.00091553]
[-251.57626343 233.49638367]
[-237.26860046 228.99185181]
[-222.96093750 224.48733521]
[-208.65327454 219.98280334]
[-194.34561157 215.47828674]
[-180.03794861 210.97375488]
[-170.22163391 199.77154541]
[-154.73489380 203.00752258]
[-140.42723083 198.50299072]
[-126.11956787 193.99845886]
[-125.61215210 173.16473389]
[-117.25917816 154.04101562]
[-102.27931213 139.47111511]
[-82.87843323 131.63056946]
[-61.92477798 131.70172119]
[-42.52494812 139.69552612]
[-27.56329155 154.44674683]
[-14.10598660 147.82096863]
[-0.64868271 141.19517517]
[12.80862141 134.56939697]
[26.26592636 127.94361877]
[39.72322845 121.31784058]
[53.18053436 114.69206238]
[51.09803009 95.93595886]
[56.24806213 77.78092957]
[67.86894989 62.91207123]
[84.24197388 53.52846527]
[102.94558716 51.01793671]
[106.12390900 36.35852814]
[109.30222321 21.69911766]
[112.48054504 7.03970718]
[115.65885925 -7.61970234]
[118.83718109 -22.27911186]
[122.01549530 -36.93852234]
[112.09329224 -46.50942993]
[108.22756958 -59.62946701]
[111.32571411 -72.84048462]
[120.47412109 -82.71519470]
[133.20404053 -86.74626923]
[136.60554504 -101.35550690]
[140.00704956 -115.96473694]
[143.40853882 -130.57397461]
[146.81004333 -145.18321228]
[135.30409241 -161.64971924]
[139.54589844 -180.97257996]
[156.36415100 -190.79762268]
[159.09394836 -205.54713440]
[161.82373047 -220.29666138]
[164.55351257 -235.04617310]
[161.49063110 -251.72116089]
[176.66606140 -259.28042603]
[188.13088989 -246.79067993]
[179.30302429 -232.31639099]
[176.57324219 -217.56687927]
[173.84346008 -202.81735229]
[171.11367798 -188.06784058]
[178.99827576 -181.48428345]
[183.47174072 -172.14810181]
[183.66566467 -161.71653748]
[179.47793579 -152.07235718]
[171.60337830 -144.98406982]
[161.41928101 -141.78170776]
[158.01777649 -127.17247772]
[154.61627197 -112.56324005]
[151.21478271 -97.95400238]
[147.81327820 -83.34476471]
[158.95123291 -71.28805542]
[160.72724915 -54.80331421]
[152.24470520 -40.36429214]
[136.67491150 -33.76020432]
[133.49658203 -19.10079384]
[130.31826782 -4.44138432]
[127.13995361 10.21802521]
[123.96163177 24.87743568]
[120.78331757 39.53684616]
[117.60499573 54.19625473]
[129.33743286 60.66510010]
[138.88293457 70.06613159]
[145.52993774 81.69854736]
[160.13917542 78.29704285]
[174.74841309 74.89554596]
[186.43452454 64.23038483]
[200.58479309 68.87999725]
[215.19403076 65.47850037]
[229.80326843 62.07699585]
[244.41250610 58.67549133]
[254.07534790 45.86888885]
[270.11584473 45.58286285]
[280.22912598 58.03683472]
[276.65710449 73.67717743]
[262.13998413 80.50596619]
[247.81401062 73.28472900]
[233.20477295 76.68623352]
[218.59553528 80.08773041]
[203.98629761 83.48923492]
[193.34515381 93.91109467]
[178.14991760 89.50478363]
[163.54067993 92.90628052]
[148.93144226 96.30778503]
[148.82965088 104.85630035]
[147.24574280 113.25740814]
[160.89884949 119.46971130]
[174.55195618 125.68201447]
[188.20506287 131.89431763]
[201.85816956 138.10661316]
[215.51127625 144.31892395]
[229.16438293 150.53121948]
[242.81748962 156.74353027]
[259.07913208 154.62435913]
[268.82897949 167.81044006]
[262.03720093 182.73706055]
[245.69062805 184.04899597]
[236.60517883 170.39663696]
[222.95207214 164.18432617]
[209.29896545 157.97203064]
[195.64585876 151.75971985]
[181.99275208 145.54742432]
[168.33964539 139.33512878]
[154.68653870 133.12281799]
[141.03343201 126.91051483]
[138.42192078 130.52334595]
[135.49331665 133.88427734]
[132.27177429 136.96554565]
[140.29371643 149.64025879]
[155.63644409 148.93565369]
[169.26853943 156.01106262]
[177.52305603 168.96322632]
[178.17956543 184.30807495]
[171.06147766 197.91793823]
[158.08349609 206.13182068]
[142.73666382 206.74021912]
[129.14918518 199.57949829]
[120.97602081 186.57583618]
[120.41572571 171.22717285]
[127.61900330 157.66220093]
[119.59706116 144.98748779]
[103.34196472 148.95661926]
[86.69827271 147.23329163]
[71.60125732 140.01786804]
[59.80631256 128.14936829]
[46.34901047 134.77514648]
[32.89170456 141.40092468]
[19.43440247 148.02670288]
[5.97709751 154.65248108]
[-7.48020649 161.27825928]
[-20.93750954 167.90405273]
[-18.75183868 177.32995605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 68]
[16 67]
[17 66]
[19 64]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[25 58]
[29 53]
[30 52]
[31 51]
[32 50]
[35 48]
[36 47]
[37 46]
[38 45]
[75 204]
[76 203]
[77 202]
[78 201]
[79 200]
[80 199]
[81 198]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[97 124]
[98 123]
[99 122]
[100 121]
[101 120]
[104 114]
[105 113]
[106 112]
[107 111]
[137 157]
[138 156]
[139 155]
[141 153]
[142 152]
[143 151]
[144 150]
[159 178]
[160 177]
[161 176]
[162 175]
[163 174]
[164 173]
[165 172]
[166 171]
[181 194]
[182 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
