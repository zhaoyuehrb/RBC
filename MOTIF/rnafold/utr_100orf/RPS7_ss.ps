%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCUGUUUCCGCCUCUUGCCUUCGGACGCCGGAUUUUGACGUGCUCUCGCGAGAUUUGGGUCUCUUCCUAAGCCGGCGCUCGGCAAGUUCUCCCAGGAGAAAGCCAUGUUCAGUUCGAGCGCCAAGAUCGUGAAGCCCAAUGGCGAGAAGCCGGACGAGUUCGAGUCCGGCAUCUCCCAGGCUCUUCUGGAGCUGGAGAUGAACU\
) } def
/len { sequence length } bind def

/coor [
[524.12225342 145.19409180]
[512.59527588 137.83233643]
[506.16140747 125.64032745]
[491.19638062 124.61669159]
[476.23135376 123.59305573]
[463.00573730 130.44378662]
[449.76574707 121.78276062]
[434.80072021 120.75912476]
[419.83569336 119.73548889]
[404.87066650 118.71185303]
[389.90560913 117.68821716]
[380.22616577 133.92276001]
[363.57077026 143.03033447]
[344.51608276 142.41366577]
[328.34628296 132.16065979]
[319.58776855 115.04305267]
[304.58822632 114.92922974]
[289.58865356 114.81539917]
[274.58908081 114.70157623]
[259.58950806 114.58775330]
[244.58993530 114.47393036]
[237.98149109 122.27264404]
[227.96041870 125.20648956]
[217.76956177 122.07439423]
[210.84629822 113.68014526]
[195.85710144 113.11115265]
[189.05171204 115.99965668]
[180.64523315 112.41807556]
[165.66638184 111.62166595]
[150.68754578 110.82526398]
[135.70870972 110.02885437]
[120.72985840 109.23245239]
[105.75101471 108.43604279]
[90.79418182 109.57321167]
[76.10792542 112.62505341]
[61.42166138 115.67689514]
[46.73540115 118.72872925]
[32.04913712 121.78057098]
[17.36287689 124.83241272]
[9.59451485 129.64376831]
[2.43064761 127.81734467]
[-12.30023766 130.64595032]
[-20.95910835 143.86712646]
[-36.44747543 147.01133728]
[-49.57636642 138.21316528]
[-52.55664062 122.69241333]
[-43.62015915 109.65727997]
[-28.06877136 106.84126282]
[-15.12884521 115.91506958]
[-0.39795959 113.08645630]
[14.31103706 110.14614868]
[28.99729919 107.09430695]
[43.68355942 104.04247284]
[58.36981964 100.99063110]
[73.05608368 97.93878937]
[87.74234009 94.88694763]
[89.10636902 79.94909668]
[75.21572876 74.28781128]
[61.32509232 68.62651825]
[47.43445206 62.96523285]
[33.54381561 57.30394363]
[19.07627487 63.66522217]
[4.37858582 57.85544586]
[-1.82937443 43.32146072]
[4.13546753 28.68601608]
[18.73427582 22.63206482]
[33.30583954 28.75130844]
[39.20510483 43.41330719]
[53.09574127 49.07459641]
[66.98638153 54.73588181]
[80.87701416 60.39717102]
[94.76765442 66.05845642]
[106.78278351 79.28274536]
[106.54742432 93.45719910]
[121.52626801 94.25360870]
[136.50511169 95.05001068]
[151.48394775 95.84642029]
[166.46279907 96.64282990]
[181.44163513 97.43923187]
[196.42608643 98.12194824]
[211.41529846 98.69094086]
[228.79655457 88.48448181]
[244.70376587 99.47435760]
[259.70333862 99.58818054]
[274.70291138 99.70201111]
[289.70245361 99.81583405]
[304.70202637 99.92965698]
[319.70159912 100.04347992]
[323.84188843 89.56367493]
[330.96023560 80.86318970]
[340.36785889 74.75836945]
[351.16217041 71.81561279]
[362.31332397 72.29888153]
[372.76263428 76.14607239]
[381.52294922 82.97647858]
[387.77191162 92.12838745]
[390.92926025 102.72318268]
[405.89428711 103.74681854]
[420.85931396 104.77045441]
[435.82434082 105.79409027]
[450.78939819 106.81773376]
[465.08538818 100.04022217]
[477.25497437 108.62802887]
[492.22003174 109.65166473]
[507.18505859 110.67530060]
[517.85876465 97.55596161]
[534.08764648 93.42364502]
[549.42834473 99.71464539]
[557.91143799 113.76693726]
[572.89025879 114.56333923]
[587.86914062 115.35974884]
[602.84796143 116.15615082]
[617.82684326 116.95256042]
[632.01831055 109.95887756]
[644.31683350 118.36100006]
[659.29571533 119.15740967]
[674.27453613 119.95381165]
[688.46606445 112.96012878]
[700.76458740 121.36225128]
[715.74340820 122.15866089]
[730.72222900 122.95507050]
[744.91375732 115.96138000]
[757.21228027 124.36351013]
[772.19110107 125.15991211]
[787.16998291 125.95632172]
[795.90881348 123.28633118]
[802.36956787 126.88018036]
[817.33459473 127.90381622]
[822.49304199 119.67839050]
[830.24755859 113.93263245]
[839.50671387 111.42271423]
[848.98632812 112.45304108]
[857.38739014 116.83999634]
[863.57421875 123.94293213]
[866.72790527 132.75741577]
[881.60327148 134.68710327]
[896.47863770 136.61677551]
[911.35400391 138.54644775]
[916.17773438 136.53541565]
[920.82525635 136.57400513]
[924.54473877 138.25134277]
[926.85662842 140.91748047]
[941.62872314 143.52220154]
[956.40087891 146.12692261]
[965.39874268 144.53501892]
[971.37664795 148.88490295]
[986.10754395 151.71350098]
[1000.83843994 154.54211426]
[1015.56933594 157.37072754]
[1030.58093262 152.37458801]
[1041.62084961 162.37310791]
[1056.35168457 165.20170593]
[1071.08264160 168.03031921]
[1085.81347656 170.85891724]
[1100.54443359 173.68753052]
[1115.27526855 176.51614380]
[1130.00610352 179.34474182]
[1141.23803711 168.63844299]
[1156.62219238 166.61215210]
[1170.24328613 174.04502869]
[1176.86352539 188.07897949]
[1173.93737793 203.31765747]
[1162.59008789 213.90148926]
[1147.18481445 215.76077271]
[1133.64514160 208.18057251]
[1127.17749023 194.07563782]
[1112.44665527 191.24702454]
[1097.71582031 188.41841125]
[1082.98486328 185.58981323]
[1068.25402832 182.76119995]
[1053.52307129 179.93260193]
[1038.79223633 177.10398865]
[1024.83422852 182.30244446]
[1012.74072266 172.10160828]
[998.00982666 169.27299500]
[983.27893066 166.44439697]
[968.54803467 163.61578369]
[953.79614258 160.89904785]
[939.02404785 158.29432678]
[924.25189209 155.68959045]
[909.42431641 153.42181396]
[894.54895020 151.49212646]
[879.67358398 149.56245422]
[864.79821777 147.63278198]
[849.71655273 161.42506409]
[829.06756592 159.58158875]
[816.31097412 142.86885071]
[801.34594727 141.84521484]
[786.37353516 140.93516541]
[771.39471436 140.13876343]
[756.41589355 139.34234619]
[743.29571533 146.39300537]
[729.92584229 137.93391418]
[714.94702148 137.13749695]
[699.96813965 136.34109497]
[686.84802246 143.39175415]
[673.47814941 134.93266296]
[658.49926758 134.13624573]
[643.52044678 133.33984375]
[630.40032959 140.39048767]
[617.03039551 131.93139648]
[602.05157471 131.13499451]
[587.07275391 130.33859253]
[572.09387207 129.54219055]
[557.11505127 128.74577332]
[549.70245361 139.85173035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 105]
[4 104]
[5 103]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[16 88]
[17 87]
[18 86]
[19 85]
[20 84]
[21 83]
[25 81]
[26 80]
[28 79]
[29 78]
[30 77]
[31 76]
[32 75]
[33 74]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[41 50]
[42 49]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[109 205]
[110 204]
[111 203]
[112 202]
[113 201]
[115 199]
[116 198]
[117 197]
[119 195]
[120 194]
[121 193]
[123 191]
[124 190]
[125 189]
[127 188]
[128 187]
[135 184]
[136 183]
[137 182]
[138 181]
[142 180]
[143 179]
[144 178]
[146 177]
[147 176]
[148 175]
[149 174]
[151 172]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
