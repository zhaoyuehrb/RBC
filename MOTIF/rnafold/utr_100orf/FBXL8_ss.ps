%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCCCGUCCGCUGUCCUCUGCUGCCAGUCCCCUGCCCCGGGCAAAGCCCAUCUGGUCCGCCGAGCAGGCCGGAGCUAUUGGGAGUGGCGGAUCCUCCCACCCCAGCCGGAUCUGGGCCAUGGCCGAGCCUGGAGAGGGACUGCCAGAGGAGGUGCUGGCACUCAUCUUCCGCCACCUGUCCCUGAGAGACCGUGCUGCCGCCGCCAGGGUCUGCAGGG\
) } def
/len { sequence length } bind def

/coor [
[502.38415527 640.81066895]
[487.45117188 639.39422607]
[474.16070557 632.43988037]
[464.48361206 620.97888184]
[459.85498047 606.71087646]
[460.96121216 591.75177002]
[467.63824463 578.31982422]
[478.89593506 568.40692139]
[493.06478882 563.48321533]
[508.04370117 564.27874756]
[521.61132812 570.67559814]
[531.75665283 581.72674561]
[521.65124512 570.64160156]
[511.45184326 571.09057617]
[502.49884033 565.74243164]
[497.86837769 556.15368652]
[499.30441284 545.38128662]
[489.51818848 534.01336670]
[479.73196411 522.64544678]
[469.94570923 511.27752686]
[460.15948486 499.90960693]
[445.99221802 495.31204224]
[442.85256958 479.80548096]
[433.06631470 468.43756104]
[423.28009033 457.06964111]
[409.11282349 452.47207642]
[405.97317505 436.96551514]
[396.18692017 425.59759521]
[386.40069580 414.22967529]
[376.61447144 402.86175537]
[366.82821655 391.49383545]
[357.04199219 380.12591553]
[347.25576782 368.75799561]
[337.38897705 357.45993042]
[327.44213867 346.23226929]
[320.65884399 343.31219482]
[317.43508911 334.77359009]
[307.64886475 323.40567017]
[286.61761475 318.28463745]
[282.79116821 296.20172119]
[272.37469482 285.40832520]
[261.95822144 274.61495972]
[247.55256653 270.82995605]
[243.53674316 255.52688599]
[233.12026978 244.73348999]
[218.26983643 244.72644043]
[207.55229187 233.92880249]
[207.66038513 218.35234070]
[197.24392700 207.55894470]
[186.82745361 196.76556396]
[176.41098022 185.97216797]
[165.99452209 175.17878723]
[155.42567444 164.53456116]
[144.70660400 154.04164124]
[133.98751831 143.54872131]
[123.26844025 133.05580139]
[112.54936218 122.56288147]
[101.83028412 112.06996155]
[89.02122498 104.26432800]
[74.78196716 99.54802704]
[60.54270172 94.83173370]
[46.27028275 90.21675873]
[31.96541786 85.70334625]
[17.12718582 91.80305481]
[3.17735672 83.87956238]
[0.81704473 68.01108551]
[11.85687923 56.37056732]
[27.82804489 57.88761902]
[36.47882843 71.39848328]
[50.78369141 75.91189575]
[58.10291672 74.92759705]
[65.25900269 80.59246826]
[79.49826050 85.30876923]
[93.73751831 90.02506256]
[98.59011841 84.30647278]
[87.15292358 74.60128021]
[75.71588898 64.89591217]
[85.42143250 53.45902634]
[96.85811615 63.16408920]
[108.29530334 72.86927795]
[113.14790344 67.15068817]
[106.17705536 53.86884308]
[99.20620728 40.58700562]
[92.23535919 27.30516434]
[85.48136902 21.16644287]
[85.26133728 13.78460884]
[78.47999573 0.40502092]
[71.69865417 -12.97456741]
[64.91731262 -26.35415459]
[58.25126266 -32.58826447]
[58.13618851 -39.97248077]
[51.54571915 -53.44711304]
[37.64541245 -62.14846039]
[38.50117874 -78.52526855]
[53.23267746 -85.73046875]
[66.68540955 -76.35198212]
[65.02035522 -60.03758240]
[71.61082458 -46.56295013]
[78.29689789 -33.13549805]
[85.07823944 -19.75591087]
[91.85958099 -6.37632275]
[98.64093018 7.00326538]
[105.51719666 20.33431625]
[112.48804474 33.61615753]
[119.45889282 46.89799881]
[126.42974091 60.17983627]
[112.32320404 101.35088348]
[123.04228210 111.84380341]
[133.76136780 122.33672333]
[144.48043823 132.82963562]
[155.19952393 143.32255554]
[165.91859436 153.81547546]
[172.20578003 155.82197571]
[175.97491455 160.06292725]
[176.78790283 164.76231384]
[187.20437622 175.55570984]
[197.62084961 186.34909058]
[208.03730774 197.14248657]
[218.45378113 207.93586731]
[234.02424622 208.38130188]
[244.43426514 219.47570801]
[243.91366577 234.31703186]
[254.33012390 245.11041260]
[269.48083496 249.66743469]
[272.75161743 264.19848633]
[283.16809082 274.99188232]
[293.58453369 285.78524780]
[301.79782104 284.38729858]
[309.80477905 286.32263184]
[316.32257080 291.20498657]
[320.33712769 298.18228149]
[321.26068115 306.08441162]
[319.01678467 313.61944580]
[328.80300903 324.98736572]
[338.66979980 336.28543091]
[348.61663818 347.51309204]
[356.64346313 351.85708618]
[358.62368774 358.97177124]
[368.40991211 370.33969116]
[378.19613647 381.70761108]
[387.98239136 393.07553101]
[397.76861572 404.44345093]
[407.55484009 415.81137085]
[417.34109497 427.17929077]
[432.20834351 432.58996582]
[434.64801025 447.28341675]
[444.43423462 458.65133667]
[454.22048950 470.01925659]
[469.08773804 475.42993164]
[471.52740479 490.12338257]
[481.31362915 501.49130249]
[491.09988403 512.85919189]
[500.88610840 524.22711182]
[510.67233276 535.59503174]
[529.98406982 541.39263916]
[532.73638916 560.53619385]
[542.84179688 571.62127686]
[556.45385742 577.92297363]
[571.44439697 578.45593262]
[586.43493652 578.98889160]
[601.42547607 579.52185059]
[608.95989990 566.19927979]
[621.82885742 557.91387939]
[637.07519531 556.56958008]
[651.19543457 562.47534180]
[660.94482422 574.27398682]
[664.08300781 589.25427246]
[659.88891602 603.97393799]
[649.32623291 615.05041504]
[634.82226562 619.93847656]
[619.70983887 617.51483154]
[607.46179199 608.33642578]
[600.89251709 594.51239014]
[585.90197754 593.97943115]
[570.91143799 593.44647217]
[555.92089844 592.91351318]
[552.20172119 599.42639160]
[566.88854980 602.47552490]
[568.52709961 617.38580322]
[554.85296631 623.55163574]
[544.76336670 612.45214844]
[541.04418945 618.96502686]
[549.12115479 631.60479736]
[557.19812012 644.24450684]
[565.27508545 656.88421631]
[573.35211182 669.52392578]
[585.75305176 673.05303955]
[592.22119141 683.74084473]
[589.75750732 695.57916260]
[597.65399170 708.33239746]
[605.55047607 721.08563232]
[613.44696045 733.83892822]
[621.34344482 746.59216309]
[635.18664551 754.25213623]
[635.30834961 769.14624023]
[643.20483398 781.89953613]
[648.82910156 785.35235596]
[651.47381592 790.37207031]
[651.13854980 795.12945557]
[658.66931152 808.10205078]
[673.15246582 815.79425049]
[673.46185303 832.19049072]
[659.27923584 840.42370605]
[645.19445801 832.02423096]
[645.69671631 815.63281250]
[638.16595459 802.66021729]
[630.45153809 789.79602051]
[622.55505371 777.04272461]
[609.27667236 770.29498291]
[608.59014893 754.48864746]
[600.69366455 741.73541260]
[592.79718018 728.98211670]
[584.90069580 716.22888184]
[577.00427246 703.47564697]
[561.11712646 696.01403809]
[560.71234131 677.60089111]
[552.63537598 664.96118164]
[544.55841064 652.32147217]
[536.48144531 639.68176270]
[528.40447998 627.04205322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 157]
[13 156]
[17 154]
[18 153]
[19 152]
[20 151]
[21 150]
[23 148]
[24 147]
[25 146]
[27 144]
[28 143]
[29 142]
[30 141]
[31 140]
[32 139]
[33 138]
[34 136]
[35 135]
[37 134]
[38 133]
[40 127]
[41 126]
[42 125]
[44 123]
[45 122]
[48 119]
[49 118]
[50 117]
[51 116]
[52 115]
[53 112]
[54 111]
[55 110]
[56 109]
[57 108]
[58 107]
[59 74]
[60 73]
[61 72]
[62 70]
[63 69]
[81 106]
[82 105]
[83 104]
[84 103]
[86 102]
[87 101]
[88 100]
[89 99]
[91 98]
[92 97]
[158 176]
[159 175]
[160 174]
[161 173]
[182 220]
[183 219]
[184 218]
[185 217]
[186 216]
[189 214]
[190 213]
[191 212]
[192 211]
[193 210]
[195 208]
[196 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
