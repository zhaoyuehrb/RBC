%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGGUCCCGCCCCUCUCGUAGCCUCGCCCCGCCCGCCGCGCAGGCGCCGUCCGAGGGCUCCGUUUGAAACAUGGCGCGGGCUGGCCCUCGGCUGGUGCUGAGCGAGGAGGCGGUUCGGGCGAAGAGCGGCUUAGGGCCUCACCGCGACCUGGCUGAGCUUCAGUCAUUGU\
) } def
/len { sequence length } bind def

/coor [
[259.16452026 396.05316162]
[252.83210754 382.45535278]
[246.49967957 368.85754395]
[239.67770386 355.49862671]
[232.37513733 342.39624023]
[225.07257080 329.29385376]
[217.77000427 316.19146729]
[210.46743774 303.08908081]
[203.16487122 289.98669434]
[185.88775635 281.35031128]
[186.40606689 261.22198486]
[178.63255310 248.39338684]
[170.85903931 235.56480408]
[157.64610291 228.68968201]
[157.11161804 212.87750244]
[149.33810425 200.04891968]
[141.56459045 187.22033691]
[133.79107666 174.39175415]
[122.34331512 174.13262939]
[112.34709167 168.30522156]
[106.35807037 158.26486206]
[105.97212982 146.46018982]
[111.40180969 135.83619690]
[104.09924316 122.73380280]
[96.79667664 109.63141632]
[90.41089630 104.66181183]
[89.48293304 96.22414398]
[82.41949463 82.99131775]
[67.56589508 78.30000305]
[60.59106445 64.77941132]
[65.15505219 50.64768600]
[58.09160995 37.41485977]
[51.02816772 24.18202782]
[43.96472549 10.94919872]
[36.90128326 -2.28363037]
[24.78999710 -6.78724146]
[19.18648148 -17.98351097]
[22.61483192 -29.60740662]
[15.79284191 -42.96631622]
[2.62574053 -51.73774719]
[3.72817874 -66.59149933]
[-3.09381127 -79.95040894]
[-9.91580105 -93.30931854]
[-25.59052086 -102.94136810]
[-24.04667664 -120.40704346]
[-31.11011887 -133.63987732]
[-38.17356110 -146.87269592]
[-45.23700333 -160.10552979]
[-52.30044937 -173.33836365]
[-59.36389160 -186.57118225]
[-66.42733002 -199.80401611]
[-79.75154114 -208.33491516]
[-78.91900635 -223.20622253]
[-85.98244476 -236.43905640]
[-93.04589081 -249.67189026]
[-100.10933685 -262.90472412]
[-107.17277527 -276.13754272]
[-114.23622131 -289.37036133]
[-121.29965973 -302.60321045]
[-128.36309814 -315.83602905]
[-135.42654419 -329.06887817]
[-142.84777832 -342.10440063]
[-150.62129211 -354.93298340]
[-158.39480591 -367.76156616]
[-166.16831970 -380.59014893]
[-181.35615540 -379.07608032]
[-195.69390869 -384.30978394]
[-206.33480835 -395.25207520]
[-211.16609192 -409.73037720]
[-209.22851562 -424.87002563]
[-200.90678406 -437.66500854]
[-187.85317993 -445.57485962]
[-172.65950012 -447.02911377]
[-158.34245300 -441.73901367]
[-147.74473572 -430.75488281]
[-142.97048950 -416.25765991]
[-144.96766663 -401.12576294]
[-153.33973694 -388.36367798]
[-145.56622314 -375.53509521]
[-137.79270935 -362.70651245]
[-130.01919556 -349.87792969]
[-126.66346741 -348.69027710]
[-123.72637939 -345.79800415]
[-122.01205444 -341.42056274]
[-122.19371796 -336.13229370]
[-115.13027191 -322.89947510]
[-108.06683350 -309.66665649]
[-101.00338745 -296.43380737]
[-93.93994904 -283.20098877]
[-86.87650299 -269.96817017]
[-79.81306458 -256.73532104]
[-72.74961853 -243.50250244]
[-65.68617249 -230.26966858]
[-52.86719513 -222.68528748]
[-53.19450378 -206.86746216]
[-46.13106155 -193.63462830]
[-39.06761932 -180.40180969]
[-32.00417709 -167.16897583]
[-24.94073296 -153.93614197]
[-17.87729073 -140.70330811]
[-10.81384754 -127.47048187]
[0.68400800 -123.64061737]
[6.66916609 -112.64363098]
[3.44310808 -100.13130951]
[10.26509762 -86.77239990]
[17.08708763 -73.41349030]
[29.76623535 -65.59757233]
[29.15175247 -49.78830719]
[35.97373962 -36.42939758]
[51.18832397 -27.71448898]
[50.13411331 -9.34707355]
[57.19755554 3.88575649]
[64.26099396 17.11858559]
[71.32444000 30.35141563]
[78.38788605 43.58424377]
[92.66898346 47.65680313]
[100.02082825 60.97615433]
[95.65232086 75.92787170]
[102.71576691 89.16070557]
[109.89906311 102.32884979]
[117.20162964 115.43123627]
[124.50419617 128.53363037]
[142.89019775 132.98490906]
[152.05969238 149.16616821]
[146.61965942 166.61825562]
[154.39317322 179.44683838]
[162.16668701 192.27542114]
[169.94020081 205.10398865]
[183.70915222 212.89671326]
[183.68762207 227.79129028]
[191.46113586 240.61987305]
[199.23464966 253.44845581]
[209.97399902 255.43733215]
[217.67352295 262.87030029]
[219.94374084 273.10342407]
[216.26725769 282.68411255]
[223.56982422 295.78649902]
[230.87239075 308.88888550]
[238.17494202 321.99127197]
[245.47750854 335.09365845]
[252.78007507 348.19604492]
[256.65859985 350.32308960]
[259.36608887 353.28677368]
[260.78286743 356.60885620]
[260.95938110 359.82199097]
[260.09750366 362.52511597]
[266.42990112 376.12292480]
[272.76232910 389.72073364]
[290.62817383 392.63571167]
[303.07879639 405.55914307]
[305.28723145 423.21002197]
[296.55963135 438.53015137]
[303.38162231 451.88906860]
[310.20361328 465.24798584]
[317.02560425 478.60687256]
[323.84759521 491.96578979]
[330.66958618 505.32470703]
[337.49157715 518.68359375]
[350.08004761 530.03997803]
[342.65231323 545.28021240]
[325.95147705 542.36169434]
[324.13265991 525.50561523]
[317.31066895 512.14666748]
[310.48867798 498.78778076]
[303.66671753 485.42886353]
[296.84472656 472.06997681]
[290.02273560 458.71105957]
[283.20074463 445.35214233]
[271.02117920 445.25717163]
[259.97860718 439.94882202]
[252.20613098 430.38412476]
[249.23425293 418.34875488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 141]
[5 140]
[6 139]
[7 138]
[8 137]
[9 136]
[11 132]
[12 131]
[13 130]
[15 128]
[16 127]
[17 126]
[18 125]
[23 122]
[24 121]
[25 120]
[27 119]
[28 118]
[31 115]
[32 114]
[33 113]
[34 112]
[35 111]
[38 109]
[39 108]
[41 106]
[42 105]
[43 104]
[45 101]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[51 95]
[53 93]
[54 92]
[55 91]
[56 90]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[62 81]
[63 80]
[64 79]
[65 78]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
