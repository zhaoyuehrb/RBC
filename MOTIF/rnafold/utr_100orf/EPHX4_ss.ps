%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGGCGCGCGUCGAGAGGCGACGGCGGGCUGGCCUGGCGCGCUGCGGCGCUCGCUCACCCGCUCCCGAGGAAGGGCAGUGGGCCCCGCCGCCGCCUCCCAAUGGCGAGGCUGCGGGAUUGCCUGCCCCGCCUGAUGCUCACGCUCCGGUCCCUGCUCUUCUGGUCCCUGGUCUACUGCUACUGCGGGCUCUGCGCCUCCA\
) } def
/len { sequence length } bind def

/coor [
[311.88629150 494.23959351]
[297.68548584 486.77523804]
[294.80889893 470.99218750]
[305.46325684 458.99783325]
[305.92291260 444.00488281]
[306.38259888 429.01193237]
[306.84228516 414.01898193]
[307.30194092 399.02603149]
[307.76162720 384.03305054]
[308.22128296 369.04010010]
[308.68096924 354.04714966]
[303.71902466 339.89160156]
[293.99917603 328.46688843]
[284.27932739 317.04214478]
[274.55947876 305.61743164]
[267.82763672 302.55847168]
[264.77984619 293.94235229]
[255.23619080 282.36999512]
[245.69256592 270.79766846]
[235.79876709 259.52322388]
[225.56413269 248.55726624]
[215.32948303 237.59132385]
[205.09483337 226.62538147]
[194.86019897 215.65942383]
[182.78277588 214.92816162]
[174.16633606 205.87182617]
[174.02716064 192.97129822]
[163.96176147 181.84980774]
[153.89636230 170.72830200]
[143.83097839 159.60679626]
[133.76557922 148.48530579]
[123.70017242 137.36380005]
[113.63478088 126.24230194]
[89.79084015 127.75497437]
[72.61033630 111.15220642]
[57.73741531 113.10060883]
[42.86449814 115.04900360]
[34.39907455 124.78449249]
[21.96796799 126.09886169]
[12.29536438 118.82978058]
[-2.60566735 120.55003357]
[-17.50669861 122.27028656]
[-32.40773010 123.99053192]
[-47.30876160 125.71078491]
[-56.93111038 138.24816895]
[-72.61108398 140.22654724]
[-85.04602814 130.47218323]
[-86.85852051 114.77217102]
[-76.97323608 102.44104767]
[-61.25493622 100.79464722]
[-49.02901459 110.80975342]
[-34.12798309 109.08950043]
[-19.22694969 107.36925507]
[-4.32591867 105.64900208]
[10.57511234 103.92874908]
[24.07933426 92.72464752]
[40.91609955 100.17607880]
[55.78902054 98.22768402]
[70.66194153 96.27928925]
[71.21284485 93.22760773]
[72.08028412 90.25039673]
[73.25470734 87.38037872]
[61.75583649 77.74835205]
[50.25696564 68.11632538]
[38.75809479 58.48429489]
[27.25922394 48.85226822]
[15.76035213 39.22024155]
[4.18801403 29.67660522]
[-7.45711040 20.22192001]
[-19.10223579 10.76723385]
[-34.79418564 12.64824581]
[-47.16835022 2.81688523]
[-48.88335037 -12.89407635]
[-38.92171097 -25.16360474]
[-23.19349670 -26.71240425]
[-11.02997589 -16.62160110]
[-9.64754963 -0.87789059]
[1.99757469 8.57679462]
[13.64269924 18.03147888]
[20.82039833 19.80784798]
[25.39237976 27.72137070]
[36.89125061 37.35339737]
[48.39012146 46.98542404]
[59.88899231 56.61745453]
[71.38786316 66.24948120]
[82.88673401 75.88150787]
[88.10971832 72.92257690]
[93.82261658 71.07932281]
[94.51199341 56.09517670]
[95.20137024 41.11102676]
[95.89074707 26.12687492]
[96.58011627 11.14272404]
[89.48522949 -2.99845958]
[97.79927826 -15.35668945]
[98.48864746 -30.34083939]
[99.17802429 -45.32498932]
[99.63769531 -60.31794739]
[99.86756134 -75.31618500]
[100.09742737 -90.31442261]
[88.15616608 -100.41097260]
[85.54952240 -115.82977295]
[93.50827026 -129.29054260]
[108.27453613 -134.43751526]
[122.87614441 -128.84043884]
[130.41865540 -115.14210510]
[127.34072876 -99.81042480]
[115.09566498 -90.08455658]
[114.86579895 -75.08631897]
[114.63594055 -60.08808136]
[117.26213837 -56.09390640]
[117.40386200 -50.40663528]
[114.16217804 -44.63561630]
[113.47280121 -29.65146446]
[112.78342438 -14.66731453]
[119.92762756 -1.59789777]
[111.56427002 11.83209896]
[110.87489319 26.81624985]
[110.18551636 41.80039978]
[109.49614716 56.78454971]
[108.80677032 71.76869965]
[120.46305847 78.64985657]
[127.83238220 90.00380707]
[129.37089539 103.45194244]
[124.75627899 116.17690277]
[134.82167053 127.29840088]
[144.88706970 138.41990662]
[154.95246887 149.54139709]
[165.01786804 160.66290283]
[175.08326721 171.78440857]
[185.14866638 182.90589905]
[202.80082703 188.14059448]
[205.82614136 205.42477417]
[216.06079102 216.39073181]
[226.29544067 227.35667419]
[236.53007507 238.32263184]
[246.76472473 249.28857422]
[250.97077942 250.40960693]
[254.26756287 252.59317017]
[256.43240356 255.42207336]
[257.40130615 258.44958496]
[257.26489258 261.25402832]
[266.80853271 272.82635498]
[276.35217285 284.39871216]
[285.98419189 295.89758301]
[295.70404053 307.32229614]
[305.42391968 318.74703979]
[315.14376831 330.17175293]
[335.61703491 300.12902832]
[384.70019531 297.35092163]
[399.27899170 300.88052368]
[413.85781860 304.41015625]
[428.43661499 307.93975830]
[443.19769287 298.55624390]
[459.85092163 302.66833496]
[468.21157837 317.25827026]
[482.84277344 320.56405640]
[493.76623535 309.66995239]
[508.85021973 306.43325806]
[523.28155518 311.88677979]
[532.45513916 324.29034424]
[533.44384766 339.68597412]
[525.93206787 353.16104126]
[512.31683350 360.41564941]
[496.94274902 359.13488770]
[484.71557617 349.72747803]
[479.53698730 335.19525146]
[464.90579224 331.88946533]
[455.07769775 340.22668457]
[442.04751587 341.39700317]
[430.55407715 334.74978638]
[424.90701294 322.51858521]
[410.32821655 318.98895264]
[395.74938965 315.45935059]
[381.17056274 311.92974854]
[376.99783325 318.16177368]
[389.46173096 326.50747681]
[381.11584473 338.97125244]
[368.65234375 330.62582397]
[364.47958374 336.85784912]
[373.29635620 348.99310303]
[382.11312866 361.12835693]
[390.92993164 373.26361084]
[406.12319946 379.43582153]
[408.10626221 395.71463013]
[394.83905029 405.35379028]
[379.96978760 398.43737793]
[378.79467773 382.08038330]
[369.97787476 369.94512939]
[361.16110229 357.80987549]
[352.34432983 345.67462158]
[345.17672729 347.88269043]
[353.80636597 360.15173340]
[344.80435181 372.15020752]
[330.61138916 367.29635620]
[330.84152222 352.29876709]
[323.67391968 354.50683594]
[323.21423340 369.49978638]
[322.75457764 384.49273682]
[322.29489136 399.48568726]
[321.83523560 414.47863770]
[321.37554932 429.47158813]
[320.91589355 444.46456909]
[320.45620728 459.45751953]
[330.35574341 472.08203125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[12 147]
[13 146]
[14 145]
[15 144]
[17 143]
[18 142]
[19 141]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[27 130]
[28 129]
[29 128]
[30 127]
[31 126]
[32 125]
[33 124]
[35 59]
[36 58]
[37 57]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 79]
[69 78]
[70 77]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[94 114]
[95 113]
[96 112]
[97 109]
[98 108]
[99 107]
[149 174]
[150 173]
[151 172]
[152 171]
[155 167]
[156 166]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
