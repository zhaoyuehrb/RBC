%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUGCUCGGGCCUGGCCGCCAGCCCAGGGGCCGAUGGCCGAGCGCGUCGCACUCGCGUCCCUGCGCCGUGCCUGCCUCGCGCUCCCUGUUACGGCGUUCGUCCCCGGGCCUGGCGCCCGCGUCCGGCCCGGCUCCGCGGCGGCCUGGUCCGAUGGCUCCUCAGCGGAGGGCCGCAACCAAGGCGCCCGAGGGCAACGGAGCGGCCGAGCGCCGGAACCGGAGCAGCACCAAGAAGGACCGAGCCCCGCGGG\
) } def
/len { sequence length } bind def

/coor [
[-218.23112488 88.65187073]
[-225.41218567 87.74675751]
[-231.78125000 84.45378113]
[-236.57963562 79.21783447]
[-239.25405884 72.71189880]
[-254.10137939 70.57717133]
[-263.01342773 72.45053101]
[-269.11935425 68.32266235]
[-283.93902588 66.00373840]
[-298.75869751 63.68482208]
[-313.57836914 61.36590576]
[-328.39804077 59.04698944]
[-343.21771240 56.72806931]
[-358.10220337 54.87025070]
[-373.03720093 53.47531509]
[-387.97219849 52.08037949]
[-402.43209839 58.50079346]
[-414.38470459 49.61344147]
[-429.31970215 48.21850586]
[-444.25469971 46.82357407]
[-459.18969727 45.42863846]
[-474.12469482 44.03370285]
[-489.05969238 42.63876724]
[-504.00305176 41.33658600]
[-518.95422363 40.12720871]
[-533.90539551 38.91782761]
[-542.68402100 41.34054565]
[-549.03430176 37.59947968]
[-563.96929932 36.20454407]
[-578.90429688 34.80960846]
[-593.83929443 33.41467285]
[-608.29919434 39.83508682]
[-620.25177002 30.94773674]
[-635.18676758 29.55280113]
[-650.12176514 28.15786743]
[-662.21978760 37.96987534]
[-677.34613037 36.34246063]
[-686.62585449 24.74837303]
[-701.56085205 23.35343742]
[-716.49584961 21.95850372]
[-731.48168945 21.30679703]
[-746.48138428 21.39992714]
[-761.48107910 21.49305725]
[-776.48083496 21.58618546]
[-791.48052979 21.67931557]
[-806.48022461 21.77244568]
[-821.47991943 21.86557579]
[-832.54522705 32.82904053]
[-847.75836182 32.70980835]
[-858.14221191 22.09320259]
[-873.14190674 22.18633080]
[-888.14160156 22.27946091]
[-899.20684814 33.24292755]
[-914.42004395 33.12369537]
[-924.80383301 22.50708771]
[-939.80352783 22.60021782]
[-954.80328369 22.69334793]
[-969.80297852 22.78647614]
[-977.97589111 35.87110138]
[-991.93518066 42.43931961]
[-1007.22650146 40.39523697]
[-1018.97045898 30.39111137]
[-1023.41961670 15.61922550]
[-1019.15423584 0.79323363]
[-1007.53540039 -9.35594463]
[-992.27062988 -11.58974361]
[-978.23083496 -5.19536543]
[-969.89611816 7.78676605]
[-954.89636230 7.69363642]
[-939.89666748 7.60050678]
[-924.89697266 7.50737715]
[-914.64581299 -3.23734808]
[-899.43530273 -3.54547119]
[-888.23474121 7.27975035]
[-873.23504639 7.18662071]
[-858.23529053 7.09349108]
[-847.98413086 -3.65123439]
[-832.77362061 -3.95935750]
[-821.57305908 6.86586380]
[-806.57336426 6.77273417]
[-791.57366943 6.67960453]
[-776.57397461 6.58647490]
[-761.57421875 6.49334574]
[-746.57452393 6.40021610]
[-731.57482910 6.30708647]
[-743.07208252 -3.32686615]
[-746.80413818 -17.85517502]
[-741.37347412 -31.83759308]
[-728.81365967 -40.03828430]
[-713.82781982 -39.38643265]
[-702.02752686 -30.12612534]
[-697.83154297 -15.72496510]
[-702.81103516 -1.57558954]
[-715.10089111 7.02350569]
[-700.16589355 8.41844082]
[-685.23089600 9.81337547]
[-673.96466064 0.13828783]
[-658.79858398 1.34019530]
[-648.72686768 13.22286892]
[-633.79187012 14.61780453]
[-618.85687256 16.01273918]
[-605.46520996 9.49254894]
[-592.44439697 18.47967529]
[-577.50939941 19.87461090]
[-562.57440186 21.26954460]
[-547.63940430 22.66448021]
[-532.69598389 23.96666145]
[-517.74481201 25.17604065]
[-502.79367065 26.38541985]
[-495.89199829 23.79914284]
[-487.66473389 27.70377159]
[-472.72973633 29.09870529]
[-457.79473877 30.49364090]
[-442.85974121 31.88857460]
[-427.92474365 33.28350830]
[-412.98974609 34.67844391]
[-399.59811401 28.15825462]
[-386.57727051 37.14538193]
[-371.64227295 38.54031754]
[-356.70727539 39.93525314]
[-364.26132202 26.97622108]
[-358.95883179 12.94470215]
[-344.72222900 8.22032452]
[-332.08288574 16.29788589]
[-330.39059448 31.20211411]
[-340.89877319 41.90840149]
[-326.07913208 44.22731781]
[-311.25946045 46.54623795]
[-296.43978882 48.86515427]
[-281.62011719 51.18407059]
[-266.80044556 53.50299072]
[-251.96665955 55.72985077]
[-237.11933899 57.86457443]
[-217.25602722 47.40038300]
[-199.27835083 62.06567001]
[-184.32717896 63.27505112]
[-169.37602234 64.48442841]
[-154.42485046 65.69380951]
[-139.47367859 66.90318298]
[-124.52251434 68.11256409]
[-117.62084961 65.52629089]
[-109.39358521 69.43091583]
[-94.45858765 70.82585144]
[-79.52359009 72.22078705]
[-66.13193512 65.70059967]
[-53.11110306 74.68772125]
[-38.17610550 76.08265686]
[-23.24110794 77.47759247]
[-8.30611038 78.87252808]
[6.62888718 80.26746368]
[21.56388474 81.66239929]
[34.95381546 69.15097809]
[53.55426407 70.44987488]
[65.47811890 85.19872284]
[80.44314575 86.22235870]
[95.40818024 87.24599457]
[109.74699402 82.84162140]
[121.55695343 73.59365845]
[133.36691284 64.34569550]
[145.17687988 55.09772873]
[148.53399658 39.40985870]
[162.95610046 32.38258743]
[177.37977600 39.40663147]
[180.74041748 55.09375000]
[170.46002197 67.41012573]
[154.42483521 66.90769196]
[142.61488342 76.15565491]
[130.80491638 85.40361786]
[118.99495697 94.65158081]
[124.19326019 108.72203064]
[139.17909241 108.07032776]
[154.16493225 107.41861725]
[169.15077209 106.76691437]
[184.13661194 106.11520386]
[199.12243652 105.46350098]
[208.38208008 96.50991821]
[220.85964966 96.26122284]
[229.87055969 104.30614471]
[244.86332703 103.84056854]
[250.45292664 92.69366455]
[260.18814087 85.01705170]
[272.19082642 82.21381378]
[284.17819214 84.75428772]
[293.89694214 92.09841156]
[299.54675293 102.80909729]
[314.54644775 102.71597290]
[329.54617310 102.62284088]
[343.41592407 93.87285614]
[357.80050659 101.74782562]
[357.90234375 118.14665985]
[343.61660767 126.19963837]
[329.63928223 117.62255096]
[314.63958740 117.71568298]
[299.63986206 117.80880737]
[290.00433350 132.63363647]
[273.24383545 138.74122620]
[256.02783203 133.49952698]
[245.32890320 118.83334351]
[230.33613586 119.29891968]
[215.92094421 129.32743835]
[199.77415466 120.44933319]
[184.78831482 121.10104370]
[169.80247498 121.75274658]
[154.81663513 122.40445709]
[139.83081055 123.05615997]
[124.84497070 123.70786285]
[122.55393219 130.84938049]
[117.97184753 145.13238525]
[115.68080902 152.27389526]
[127.49076843 161.52186584]
[143.12635803 163.93827820]
[148.37664795 177.87684631]
[160.18659973 187.12481689]
[171.99656677 196.37277222]
[188.30064392 198.13603210]
[194.67724609 213.24467468]
[184.56666565 226.15621948]
[168.36979675 223.58839417]
[162.74859619 208.18273926]
[150.93864441 198.93476868]
[139.12867737 189.68681335]
[124.33782196 187.93186951]
[118.24280548 173.33181763]
[106.43284607 164.08386230]
[91.64559174 152.06573486]
[83.32391357 137.51843262]
[81.58336639 122.89568329]
[85.73488617 110.49397278]
[94.38454437 102.21102142]
[79.41950989 101.18738556]
[64.45448303 100.16374969]
[57.20832443 109.54804230]
[46.44729614 114.23292542]
[34.87957001 113.16511536]
[25.35630798 106.72356415]
[20.16894913 96.59739685]
[5.23395205 95.20246124]
[-9.70104599 93.80752563]
[-24.63604355 92.41259003]
[-39.57104111 91.01765442]
[-54.50603867 89.62271881]
[-68.96594238 96.04313660]
[-80.91852570 87.15578461]
[-95.85352325 85.76084900]
[-110.78852081 84.36591339]
[-125.73189545 83.06373596]
[-140.68305969 81.85435486]
[-155.63423157 80.64497375]
[-170.58538818 79.43559265]
[-185.53656006 78.22621918]
[-200.48773193 77.01683807]
[-204.93670654 82.98205566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 133]
[6 132]
[8 131]
[9 130]
[10 129]
[11 128]
[12 127]
[13 126]
[14 120]
[15 119]
[16 118]
[18 116]
[19 115]
[20 114]
[21 113]
[22 112]
[23 111]
[24 109]
[25 108]
[26 107]
[28 106]
[29 105]
[30 104]
[31 103]
[33 101]
[34 100]
[35 99]
[38 96]
[39 95]
[40 94]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[47 79]
[50 76]
[51 75]
[52 74]
[55 71]
[56 70]
[57 69]
[58 68]
[135 251]
[136 250]
[137 249]
[138 248]
[139 247]
[140 246]
[142 245]
[143 244]
[144 243]
[146 241]
[147 240]
[148 239]
[149 238]
[150 237]
[151 236]
[154 231]
[155 230]
[156 229]
[157 169]
[158 168]
[159 167]
[160 166]
[170 206]
[171 205]
[172 204]
[173 203]
[174 202]
[175 201]
[178 199]
[179 198]
[185 194]
[186 193]
[187 192]
[209 224]
[210 223]
[212 221]
[213 220]
[214 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
