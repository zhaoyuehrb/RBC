%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGGACCGUUUGUAGUUAGGAUCCGCUGUGGCGUCCUGAGUGGAGUUUGGGACCCCAGGGAGGGAGGGUGUGGGCGUUCGGGUCCAGAGGAGCUGUUUAGUAUCCAAGAUGAAUGACAGCCUGUUUGUCAGUUUGGACAGACUUUUGCUAGAAUUUGUCUUCCAGUAUGAGCAAGACAUAAGUACUAAAGAAGAGAUGAUUCAAAGAA\
) } def
/len { sequence length } bind def

/coor [
[102.35527802 284.40942383]
[90.39293671 293.45944214]
[78.49830627 302.59823608]
[66.67203522 311.82534790]
[54.84576797 321.05242920]
[43.01949692 330.27954102]
[36.50810623 347.50402832]
[19.04668808 349.25497437]
[7.35910797 358.65713501]
[-4.32847357 368.05929565]
[-10.58269596 385.37881470]
[-28.01610756 387.38955688]
[-39.56240845 396.96469116]
[-45.24610138 411.72970581]
[-59.98200226 413.89825439]
[-71.52830505 423.47335815]
[-77.21199799 438.23840332]
[-91.94789124 440.40692139]
[-103.49419403 449.98205566]
[-115.04049683 459.55715942]
[-126.58679962 469.13229370]
[-138.13310242 478.70739746]
[-149.67939758 488.28253174]
[-161.22570801 497.85763550]
[-172.70040894 507.51846313]
[-184.10287476 517.26440430]
[-186.78407288 533.08184814]
[-200.89151001 540.72119141]
[-215.60316467 534.32220459]
[-219.63351440 518.79364014]
[-209.89080811 506.04769897]
[-193.84883118 505.86196899]
[-182.44636536 496.11599731]
[-179.40420532 489.38049316]
[-170.80082703 486.31134033]
[-159.25451660 476.73623657]
[-147.70822144 467.16110229]
[-136.16192627 457.58599854]
[-124.61561584 448.01086426]
[-113.06931305 438.43576050]
[-101.52301788 428.86062622]
[-96.66519165 414.78045654]
[-81.10342407 411.92706299]
[-69.55712128 402.35195923]
[-64.69929504 388.27178955]
[-49.13753128 385.41839600]
[-37.59122849 375.84326172]
[-36.15535736 363.83224487]
[-26.61430740 355.76055908]
[-13.73062420 356.37170410]
[-2.04304338 346.96954346]
[9.64453793 337.56741333]
[11.25907516 325.57910156]
[20.91924286 317.65036011]
[33.79240036 318.45324707]
[45.61866760 309.22616577]
[57.44493866 299.99905396]
[69.27120972 290.77197266]
[72.61109161 284.17901611]
[81.34294128 281.49710083]
[93.30527496 272.44711304]
[88.45585632 246.18731689]
[106.29058075 231.17016602]
[106.96036530 216.18511963]
[99.79908752 203.12506104]
[108.14487457 189.68412781]
[108.81466675 174.69909668]
[109.48445129 159.71405029]
[110.15423584 144.72901917]
[110.82402039 129.74397278]
[111.49380493 114.75894165]
[86.95686340 129.48994446]
[54.34843063 103.48937988]
[44.18488312 92.45750427]
[34.02133560 81.42562866]
[23.85778999 70.39374542]
[13.69424248 59.36186981]
[-2.10507417 58.96545029]
[-12.93587399 47.45591736]
[-12.37243557 31.66167641]
[-0.74903733 20.95316696]
[15.03836536 21.68356133]
[25.62338638 33.41952515]
[24.72612000 49.19832230]
[34.88966751 60.23020172]
[45.05321503 71.26207733]
[55.21675873 82.29395294]
[65.38031006 93.32583618]
[72.46337128 90.86003876]
[63.39572144 78.91107178]
[71.95795441 66.59490204]
[86.31715393 70.93234253]
[86.62950897 85.92844391]
[93.71257782 83.46264648]
[94.82822418 68.50419617]
[95.94387817 53.54573822]
[97.05952454 38.58728409]
[98.17517090 23.62883186]
[99.29081726 8.67037868]
[87.62149048 -1.38610590]
[84.15184784 -16.21226501]
[90.00841522 -30.07460976]
[102.75214386 -37.73851013]
[103.86779022 -52.69696426]
[104.98343658 -67.65541840]
[106.09909058 -82.61386871]
[101.24755859 -98.85884094]
[115.51462555 -108.01782227]
[128.26519775 -96.84378052]
[121.05754089 -81.49822235]
[119.94189453 -66.53976440]
[118.82624054 -51.58131409]
[117.71059418 -36.62285995]
[129.17645264 -27.15333366]
[132.91188049 -12.57558727]
[127.28128815 1.57184720]
[114.24927521 9.78602791]
[113.13362885 24.74448013]
[112.01797485 39.70293427]
[110.90232849 54.66138840]
[109.78668213 69.61984253]
[108.67102814 84.57829285]
[122.24723816 90.95690155]
[133.04939270 80.54953003]
[143.85154724 70.14215088]
[154.65370178 59.73477936]
[165.45585632 49.32740784]
[176.25802612 38.92003250]
[187.06018066 28.51266098]
[187.10366821 12.70843124]
[198.36846924 1.62330449]
[214.17134094 1.83388937]
[225.13676453 13.21524906]
[224.75910950 29.01502609]
[213.26245117 39.85948944]
[197.46754456 39.31481552]
[186.66539001 49.72219086]
[175.86323547 60.12956238]
[165.06108093 70.53693390]
[154.25892639 80.94431305]
[143.45677185 91.35168457]
[132.65461731 101.75905609]
[126.47884369 115.42872620]
[125.80905914 130.41375732]
[125.13927460 145.39880371]
[124.46949005 160.38385010]
[123.79970551 175.36888123]
[123.12991333 190.35392761]
[130.24328613 204.48580933]
[121.94540405 216.85490417]
[121.27561951 231.83995056]
[137.41905212 246.73410034]
[133.35649109 271.55245972]
[145.71099854 280.05929565]
[158.06550598 288.56610107]
[170.42001343 297.07293701]
[182.77452087 305.57977295]
[199.91677856 302.09228516]
[214.00024414 311.88876343]
[216.58891296 328.50616455]
[229.06869507 336.82812500]
[241.54849243 345.15005493]
[254.02828979 353.47198486]
[266.50808716 361.79394531]
[286.66275024 362.18438721]
[294.47027588 379.87420654]
[307.19229126 387.82089233]
[319.91433716 395.76757812]
[332.63638306 403.71426392]
[345.35839844 411.66094971]
[357.95867920 403.10800171]
[372.94955444 400.42590332]
[387.73376465 404.07928467]
[399.74981689 413.43524170]
[406.91592407 426.87277222]
[407.99047852 442.06372070]
[402.78729248 456.37619019]
[392.20788574 467.33047485]
[378.08517456 473.02862549]
[362.86599731 472.48342896]
[349.18722534 465.78936768]
[339.41873169 454.10620117]
[335.25299072 439.45809937]
[337.41171265 424.38296509]
[324.68969727 416.43627930]
[311.96765137 408.48959351]
[299.24560547 400.54290771]
[286.52359009 392.59625244]
[276.81484985 395.78268433]
[266.74334717 393.04162598]
[259.69805908 385.04513550]
[258.18612671 374.27374268]
[245.70634460 365.95178223]
[233.22654724 357.62985229]
[220.74674988 349.30789185]
[208.26696777 340.98596191]
[196.10928345 345.25451660]
[183.52508545 341.68804932]
[175.16973877 331.37307739]
[174.26770020 317.93426514]
[161.91319275 309.42745972]
[149.55868530 300.92062378]
[137.20417786 292.41378784]
[124.84966278 283.90698242]
[135.15287781 294.80850220]
[136.62709045 309.73590088]
[128.65534973 322.44226074]
[114.57369995 327.61016846]
[100.27510071 323.07696533]
[91.74327087 310.73971558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 61]
[2 60]
[3 58]
[4 57]
[5 56]
[6 55]
[8 52]
[9 51]
[10 50]
[12 47]
[13 46]
[15 44]
[16 43]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 33]
[26 32]
[63 151]
[64 150]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[103 113]
[104 112]
[105 111]
[106 110]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[153 204]
[154 203]
[155 202]
[156 201]
[157 200]
[160 196]
[161 195]
[162 194]
[163 193]
[164 192]
[166 188]
[167 187]
[168 186]
[169 185]
[170 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
