%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACGCUCAGCCGAGCCCAGUCUGGGAGGGACGCGCCCGGCAGCUGUCCACCGAUCCCGGCCACCGCCCCCGGCCACCCCCACCCCGCGAGCCCAUGGAGGCUCCGGGACCCCGCGCCUUGCGGACUGCGCUCUGUGGCGGCUGUUGCUGCCUCCUCCUAUGUGCCCAGCUGGCUGUGGCUGGUAAAGGAGCUC\
) } def
/len { sequence length } bind def

/coor [
[284.66510010 413.74182129]
[276.28387451 401.30175781]
[272.86358643 386.69689941]
[274.84957886 371.82894897]
[281.98327637 358.63388062]
[293.33581543 348.82977295]
[307.42892456 343.69326782]
[322.42761230 343.89315796]
[336.37884521 349.40341187]
[347.46472168 359.50485229]
[336.81549072 348.94104004]
[322.33078003 345.47091675]
[317.98236084 330.25903320]
[307.33312988 319.69522095]
[296.68389893 309.13143921]
[286.03466797 298.56762695]
[271.54992676 295.09750366]
[267.20153809 279.88558960]
[256.55227661 269.32180786]
[245.90306091 258.75799561]
[235.25381470 248.19421387]
[224.60458374 237.63041687]
[213.95535278 227.06661987]
[203.30610657 216.50282288]
[188.82138062 213.03269958]
[184.47297668 197.82078552]
[173.82374573 187.25698853]
[163.17449951 176.69320679]
[152.52526855 166.12940979]
[147.81805420 165.25355530]
[143.61549377 161.40301514]
[141.71000671 155.04957581]
[131.40661621 144.14817810]
[121.10324097 133.24679565]
[110.79985046 122.34540558]
[83.20855713 125.68778992]
[63.46586990 98.63587189]
[48.76900864 95.63549042]
[34.07215118 92.63510132]
[19.37528992 89.63471985]
[6.28796768 98.08218384]
[-8.57399654 94.83000946]
[-16.54671478 82.30118561]
[-31.24357605 79.30080414]
[-46.31251526 84.12134552]
[-57.23491669 73.99462891]
[-71.93177795 70.99424744]
[-82.24591064 79.66883850]
[-95.48012543 80.79844666]
[-106.77897644 74.19368744]
[-112.12639618 62.46192169]
[-126.77301788 59.22515869]
[-141.41963196 55.98839569]
[-156.88490295 61.44345474]
[-169.16406250 50.57358932]
[-165.62539673 34.56079102]
[-149.90914917 29.87764740]
[-138.18287659 41.34177780]
[-123.53625488 44.57854080]
[-108.88963318 47.81530380]
[-95.11837769 38.17222595]
[-78.30141449 41.53259659]
[-68.93138885 56.29738617]
[-54.23453140 59.29777145]
[-40.21681213 54.26261902]
[-28.24319077 64.60394287]
[-13.54633045 67.60432434]
[-1.30071342 59.20310974]
[13.64673424 62.03656387]
[22.37567520 74.93785858]
[37.07253647 77.93824005]
[51.76939392 80.93862915]
[66.46625519 83.93901062]
[72.15947723 79.05667877]
[60.70023346 69.37754059]
[49.24098587 59.69840622]
[36.67695618 51.50418854]
[35.69561005 36.53632736]
[47.08219910 26.77182198]
[61.72539139 30.02405357]
[67.90798950 43.69015503]
[75.72695923 56.49108124]
[83.54592896 69.29200745]
[89.23915100 64.40966797]
[88.51445007 49.42718887]
[87.78974915 34.44470596]
[87.06504822 19.46222115]
[83.52068329 11.02865314]
[86.45133209 4.23292351]
[85.96809387 -10.75929070]
[85.48485565 -25.75150490]
[85.00161743 -40.74371719]
[84.51837921 -55.73593140]
[72.81886292 -66.36122894]
[72.14273071 -82.15104675]
[82.89112854 -93.73757172]
[98.68721771 -94.24671936]
[110.15945435 -83.37642670]
[110.50157166 -67.57584381]
[99.51058960 -56.21916962]
[99.99382782 -41.22695541]
[100.47706604 -26.23474312]
[100.96030426 -11.24252892]
[101.44354248 3.74968529]
[102.04753113 18.73752022]
[102.77223206 33.72000504]
[103.49693298 48.70248795]
[104.22163391 63.68497086]
[116.64335632 70.10993958]
[124.96708679 80.20345306]
[128.38114929 91.89822388]
[126.98949432 103.09745026]
[121.70124054 112.04202271]
[132.00462341 122.94341278]
[142.30801392 133.84480286]
[152.61138916 144.74618530]
[163.08906555 155.48016357]
[173.73829651 166.04396057]
[184.38754272 176.60775757]
[195.03677368 187.17155457]
[210.28320312 191.39727783]
[213.86990356 205.85359192]
[224.51914978 216.41738892]
[235.16838074 226.98118591]
[245.81761169 237.54498291]
[256.46685791 248.10876465]
[267.11608887 258.67257690]
[277.76531982 269.23635864]
[293.01174927 273.46209717]
[296.59844971 287.91839600]
[307.24768066 298.48217773]
[317.89691162 309.04598999]
[328.54617310 319.60977173]
[343.79260254 323.83551025]
[347.37930298 338.29180908]
[358.02853394 348.85562134]
[372.05377197 354.17468262]
[387.02993774 353.32931519]
[402.00610352 352.48394775]
[416.98223877 351.63858032]
[431.95840454 350.79321289]
[446.93457031 349.94787598]
[460.34799194 340.51321411]
[475.10946655 347.65676880]
[476.03369141 364.02984619]
[462.16989136 372.78924561]
[447.77993774 364.92401123]
[432.80377197 365.76937866]
[417.82760620 366.61474609]
[402.85147095 367.46011353]
[387.87530518 368.30548096]
[372.89913940 369.15084839]
[369.95938110 376.05068970]
[364.07989502 389.85037231]
[361.14013672 396.75024414]
[370.90481567 408.13668823]
[380.66949463 419.52313232]
[390.43414307 430.90957642]
[400.19882202 442.29602051]
[411.09066772 442.50106812]
[419.88635254 448.54846191]
[423.81216431 458.23767090]
[421.79293823 468.27105713]
[431.18572998 479.96618652]
[440.57849121 491.66131592]
[449.97128296 503.35641479]
[457.79586792 508.09600830]
[459.41934204 515.31646729]
[468.62249756 527.16137695]
[477.82565308 539.00628662]
[487.02880859 550.85119629]
[496.23193359 562.69610596]
[511.61618042 568.37561035]
[514.12261963 584.58209229]
[501.17288208 594.64367676]
[486.08850098 588.20989990]
[484.38702393 571.89923096]
[475.18386841 560.05432129]
[465.98074341 548.20941162]
[456.77758789 536.36450195]
[447.57443237 524.51959229]
[438.27615356 512.74920654]
[428.88339233 501.05407715]
[419.49060059 489.35897827]
[410.09783936 477.66384888]
[391.61331177 472.01480103]
[388.81237793 452.06069946]
[379.04769897 440.67425537]
[369.28302002 429.28781128]
[359.51837158 417.90133667]
[349.75369263 406.51489258]
[339.69989014 417.64688110]
[326.34960938 424.48577881]
[311.44122314 426.14108276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 136]
[11 135]
[13 133]
[14 132]
[15 131]
[16 130]
[18 128]
[19 127]
[20 126]
[21 125]
[22 124]
[23 123]
[24 122]
[26 120]
[27 119]
[28 118]
[29 117]
[32 116]
[33 115]
[34 114]
[35 113]
[37 73]
[38 72]
[39 71]
[40 70]
[43 67]
[44 66]
[46 64]
[47 63]
[51 60]
[52 59]
[53 58]
[84 108]
[85 107]
[86 106]
[87 105]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
[155 191]
[156 190]
[157 189]
[158 188]
[159 187]
[163 185]
[164 184]
[165 183]
[166 182]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
