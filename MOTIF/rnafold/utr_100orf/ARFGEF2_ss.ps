%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGCCGUGGGGCCGAGGUGUCGCUUCCUGACGGGGCGGCGCGGACGGACGCGGCCGGUGCCGGCCGGGACGCCGGGCCCGCAGCCUAGCUCGCCAUCUCGCUCACGCCGCCCGCCCGCGGGGCCGUCAGCCCCCGCCGGGCCGGGGCCAUGCAGGAGAGCCAGACCAAGAGCAUGUUCGUGUCCCGGGCCCUGGAGAAGAUCCUAGCCGACAAGGAGGUGAAGCGGCCCCAGCACUCCCAGCUGCGCA\
) } def
/len { sequence length } bind def

/coor [
[108.15924835 522.64202881]
[118.13203430 510.07528687]
[117.75955200 495.07989502]
[117.38706970 480.08453369]
[117.01458740 465.08914185]
[116.64210510 450.09378052]
[115.61846924 435.12875366]
[113.94561005 420.22232056]
[110.85910034 416.60992432]
[109.99168396 411.02777100]
[112.42103577 404.92559814]
[111.11885071 389.98223877]
[109.81666565 375.03884888]
[108.51448822 360.09548950]
[107.21230316 345.15213013]
[105.91012573 330.20874023]
[104.60794067 315.26538086]
[103.30576324 300.32199097]
[93.99777985 296.10501099]
[87.21639252 288.35333252]
[84.22772980 278.41299438]
[85.63153076 268.04711914]
[91.24218750 259.12322998]
[100.11018372 253.27690125]
[99.36544800 238.29541016]
[98.62071228 223.31390381]
[97.87597656 208.33239746]
[97.13124084 193.35090637]
[96.38650513 178.36940002]
[95.64176941 163.38789368]
[94.89703369 148.40640259]
[94.15230560 133.42489624]
[75.89000702 126.86750031]
[63.23789215 110.62196350]
[61.10743332 88.94739532]
[71.40974426 68.42008972]
[92.09168243 55.93819427]
[77.89648438 51.09088898]
[63.70128632 46.24358368]
[49.50608826 41.39627838]
[35.31089020 36.54897308]
[21.11569405 31.70166779]
[6.92049599 26.85436249]
[-7.27470160 22.00705719]
[-22.83478355 24.86964607]
[-32.37885666 13.43461418]
[-46.57405090 8.58730888]
[-62.13413620 11.44989967]
[-71.67820740 0.01486728]
[-85.87340546 -4.83243799]
[-100.09841919 -9.59151745]
[-114.35271454 -14.26218700]
[-132.29603577 -10.06965637]
[-143.47100830 -23.61546898]
[-157.78219604 -28.10878181]
[-172.09338379 -32.60209656]
[-186.43218994 -37.00646973]
[-200.79806519 -41.32173157]
[-218.63174438 -36.68492508]
[-230.13964844 -49.94906235]
[-244.55799866 -54.08560944]
[-259.00177002 -58.13256073]
[-273.47036743 -62.08975983]
[-287.93896484 -66.04695892]
[-303.29147339 -62.22442627]
[-313.52664185 -73.04524231]
[-327.99526978 -77.00244141]
[-342.46386719 -80.95964050]
[-356.93246460 -84.91683960]
[-372.28494263 -81.09430695]
[-382.52014160 -91.91513062]
[-396.98876953 -95.87232208]
[-413.86187744 -94.21875763]
[-420.12176514 -109.97470856]
[-406.71447754 -120.35164642]
[-393.03155518 -110.34093475]
[-378.56295776 -106.38373566]
[-364.24536133 -110.48931122]
[-352.97528076 -99.38544464]
[-338.50665283 -95.42824554]
[-324.03805542 -91.47105408]
[-309.56945801 -87.51385498]
[-295.25186157 -91.61943054]
[-283.98178101 -80.51556396]
[-269.51318359 -76.55836487]
[-255.04455566 -72.60116577]
[-247.78332520 -73.86462402]
[-240.42144775 -68.50396729]
[-226.00309753 -64.36741638]
[-215.29118347 -69.95061493]
[-203.25755310 -66.64253235]
[-196.48280334 -55.68761444]
[-182.11692810 -51.37234879]
[-174.82656860 -52.45510483]
[-167.60006714 -46.91328430]
[-153.28887939 -42.41997147]
[-138.97769165 -37.92665863]
[-128.13043213 -43.24213791]
[-116.18266296 -39.63625336]
[-109.68204498 -28.51647949]
[-95.42775726 -23.84580994]
[-88.11274719 -24.74719429]
[-81.02610016 -19.02763557]
[-66.83090210 -14.18033028]
[-52.28615570 -17.38963127]
[-41.72674561 -5.60788822]
[-27.53154945 -0.76058286]
[-12.98680305 -3.96988487]
[-2.42739606 7.81185913]
[11.76780128 12.65916443]
[25.96299934 17.50646973]
[40.15819550 22.35377502]
[54.35339355 27.20108032]
[68.54859161 32.04838562]
[82.74378967 36.89569092]
[96.93898773 41.74299622]
[109.60789490 33.71188736]
[111.28075409 18.80545998]
[112.95360565 3.89903402]
[114.62646484 -11.00739193]
[116.29932404 -25.91381836]
[117.87960052 -40.83034515]
[119.36723328 -55.75639343]
[120.85486603 -70.68244171]
[122.34249878 -85.60848999]
[123.83013153 -100.53453827]
[112.15386200 -110.75434113]
[108.74745178 -125.89290619]
[114.92073059 -140.12913513]
[128.29994202 -147.98892212]
[143.74052429 -146.44999695]
[155.30523682 -136.10412598]
[158.54722595 -120.92951202]
[152.21987915 -106.76108551]
[138.75617981 -99.04690552]
[137.26855469 -84.12085724]
[135.78091431 -69.19480896]
[134.29327393 -54.26876068]
[132.80564880 -39.34270859]
[135.26292419 -32.39407349]
[131.20574951 -24.24096298]
[129.53289795 -9.33453560]
[127.86003876 5.57189083]
[126.18717957 20.47831726]
[124.51432037 35.38474274]
[137.13311768 43.49435425]
[149.99755859 35.78031921]
[162.86198425 28.06628227]
[175.72642517 20.35224342]
[188.59085083 12.63820648]
[201.45529175 4.92416954]
[214.07409668 -3.18544269]
[226.43510437 -11.68281555]
[238.79611206 -20.18018723]
[251.15713501 -28.67756081]
[263.51815796 -37.17493439]
[259.20257568 -51.67428207]
[259.58081055 -66.79751587]
[264.61575317 -81.06301117]
[273.81417847 -93.07318115]
[286.27490234 -101.65139008]
[300.77713013 -105.95723724]
[315.90011597 -105.56887817]
[330.16223145 -100.52436066]
[342.16622925 -91.31789398]
[350.73611450 -78.85143280]
[355.03222656 -64.34631348]
[354.63372803 -49.22360229]
[349.57965088 -34.96486664]
[340.36514282 -22.96703529]
[327.89294434 -14.40552902]
[313.38494873 -10.11911964]
[298.26251221 -10.52774525]
[284.00717163 -15.59137249]
[272.01553345 -24.81391907]
[259.65451050 -16.31654739]
[247.29348755 -7.81917429]
[234.93247986 0.67819828]
[222.57145691 9.17557049]
[236.67405701 14.28605270]
[241.59230042 28.45682335]
[233.68801880 41.20524216]
[218.80827332 43.10083389]
[207.96017456 32.74135971]
[209.16932678 17.78860283]
[196.30488586 25.50263977]
[183.44046021 33.21667862]
[170.57603455 40.93071365]
[157.71159363 48.64475250]
[144.84716797 56.35878754]
[146.70498657 71.24329376]
[161.07086182 75.55855560]
[175.43673706 79.87382507]
[186.46957397 72.17604828]
[199.72789001 72.22853088]
[210.38221741 79.78847504]
[214.68025208 91.91911316]
[228.99143982 96.41242981]
[243.30262756 100.90573883]
[258.13226318 94.78519440]
[272.09323120 102.68909454]
[274.47583008 118.55423737]
[263.45236206 130.21025085]
[247.47906494 128.71563721]
[238.80931091 115.21693420]
[224.49812317 110.72361755]
[210.18693542 106.23030090]
[195.61039734 114.64289093]
[179.13885498 109.80221558]
[171.12147522 94.23970032]
[156.75559998 89.92443848]
[142.38972473 85.60917664]
[142.59912109 99.90747070]
[138.34251404 112.83135986]
[130.50810242 123.09836578]
[120.31291962 129.84191895]
[109.13380432 132.68016052]
[109.87854004 147.66166687]
[110.62327576 162.64315796]
[111.36801147 177.62466431]
[112.11274719 192.60617065]
[112.85748291 207.58766174]
[113.60221863 222.56916809]
[114.34695435 237.55067444]
[115.09168243 252.53216553]
[130.68078613 265.24655151]
[131.83155823 285.02316284]
[118.24913025 299.01983643]
[119.55131531 313.96319580]
[120.85349274 328.90655518]
[122.15567780 343.84994507]
[123.45785522 358.79330444]
[124.76004028 373.73666382]
[126.06221771 388.68005371]
[127.36440277 403.62341309]
[128.85203552 418.54946899]
[130.52488708 433.45590210]
[139.65409851 421.55389404]
[154.27485657 418.20227051]
[167.67681885 424.93927002]
[173.70899963 438.67291260]
[169.60287476 453.09997559]
[157.24298096 461.59896851]
[142.30203247 460.26922607]
[131.63748169 449.72128296]
[132.00996399 464.71667480]
[132.38244629 479.71203613]
[132.75492859 494.70742798]
[133.12741089 509.70278931]
[143.71182251 521.75891113]
[140.74353027 537.52496338]
[126.49954987 544.90661621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 249]
[3 248]
[4 247]
[5 246]
[6 245]
[7 237]
[8 236]
[11 235]
[12 234]
[13 233]
[14 232]
[15 231]
[16 230]
[17 229]
[18 228]
[24 225]
[25 224]
[26 223]
[27 222]
[28 221]
[29 220]
[30 219]
[31 218]
[32 217]
[37 116]
[38 115]
[39 114]
[40 113]
[41 112]
[42 111]
[43 110]
[44 109]
[46 107]
[47 106]
[49 104]
[50 103]
[51 101]
[52 100]
[54 97]
[55 96]
[56 95]
[57 93]
[58 92]
[60 89]
[61 88]
[62 86]
[63 85]
[64 84]
[66 82]
[67 81]
[68 80]
[69 79]
[71 77]
[72 76]
[117 145]
[118 144]
[119 143]
[120 142]
[121 141]
[122 139]
[123 138]
[124 137]
[125 136]
[126 135]
[146 190]
[147 189]
[148 188]
[149 187]
[150 186]
[151 185]
[152 179]
[153 178]
[154 177]
[155 176]
[156 175]
[191 212]
[192 211]
[193 210]
[197 207]
[198 206]
[199 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
