%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGAUGUUCCGACCCGCCAGCUCGCGGAGCCGCUCUGCCCCGCGCCCUAGCCCGCGCCUGCAGCCCGCCCAGGCGGAGUCAGCCCGCGCUCCGCCCGCCGCGAUCCGAGCUCGGAGGUUCGGACUCCGGGCUCGCCGCCCCCCGGGCCGGCUCCGCGCCCCGCACUCCCGGCGCCCAGCGCCCCGCGCCCCGGCGGGCGGAGCGCACCAUGCCGCAGCUGGACUCCGGCGGGGGCGGCGCGGGCGGCGGCGACG\
ACCUCGGCGCGCCGGACGAGCUGCUGGCCUUCCAGGAUGAAGGCGAGGAGCAGG\
) } def
/len { sequence length } bind def

/coor [
[227.40650940 1241.56860352]
[211.89660645 1241.09692383]
[199.64671326 1231.57214355]
[195.36717224 1216.65698242]
[200.70353699 1202.08630371]
[213.60389709 1193.46301270]
[214.05986023 1178.46997070]
[214.51582336 1163.47692871]
[214.97178650 1148.48388672]
[215.42776489 1133.49084473]
[215.88372803 1118.49768066]
[208.58654785 1116.76538086]
[198.28904724 1127.67236328]
[193.99217224 1113.30065918]
[186.69497681 1111.56823730]
[180.36335754 1125.16650391]
[174.03173828 1138.76464844]
[167.70011902 1152.36279297]
[173.34866333 1167.12329102]
[166.82939148 1181.52026367]
[152.01008606 1187.01245117]
[137.68278503 1180.34130859]
[132.34761047 1165.46484375]
[139.16983032 1151.20886230]
[154.10194397 1146.03125000]
[160.43356323 1132.43298340]
[166.76518250 1118.83483887]
[173.09680176 1105.23669434]
[176.26501465 1090.57507324]
[176.11300659 1075.57580566]
[175.96099854 1060.57666016]
[168.09512329 1047.92846680]
[175.69216919 1034.05053711]
[175.54016113 1019.05133057]
[175.38815308 1004.05206299]
[175.23614502 989.05285645]
[164.45126343 978.84393311]
[164.08341980 963.63476562]
[174.86459351 952.39178467]
[174.71258545 937.39257812]
[164.99160767 922.75555420]
[174.23826599 906.80371094]
[173.93426514 891.80676270]
[173.63026428 876.80987549]
[173.32624817 861.81292725]
[173.02224731 846.81604004]
[172.71824646 831.81909180]
[160.71145630 822.28887939]
[158.54026794 806.18627930]
[168.67349243 792.32836914]
[186.48609924 789.18988037]
[184.36505127 774.34057617]
[182.24400330 759.49133301]
[180.12297058 744.64202881]
[178.00192261 729.79272461]
[175.88087463 714.94348145]
[173.75984192 700.09417725]
[171.63879395 685.24487305]
[169.51774597 670.39562988]
[165.48243713 664.25054932]
[167.45124817 655.38519287]
[165.48078918 640.51519775]
[156.09127808 632.94049072]
[154.30200195 620.60546875]
[161.60578918 610.01580811]
[159.78613281 595.12658691]
[157.96647644 580.23736572]
[156.14682007 565.34814453]
[154.32714844 550.45892334]
[152.50749207 535.56970215]
[141.55364990 545.81726074]
[126.69738007 543.74572754]
[118.96473694 530.89245605]
[124.09472656 516.79693604]
[138.27998352 511.92062378]
[150.99255371 519.88269043]
[149.92935181 504.92041016]
[148.86616516 489.95816040]
[147.80296326 474.99588013]
[146.73977661 460.03359985]
[145.67657471 445.07131958]
[144.53758240 430.11462402]
[143.32281494 415.16390991]
[142.10804749 400.21316528]
[122.61238098 387.06634521]
[119.42131042 363.50338745]
[135.06117249 345.24392700]
[132.48973083 330.46597290]
[129.91827393 315.68801880]
[127.34683228 300.91009521]
[124.77538300 286.13214111]
[122.20393372 271.35418701]
[119.63248444 256.57626343]
[117.06103516 241.79830933]
[114.48958588 227.02035522]
[111.91813660 212.24241638]
[109.34669495 197.46447754]
[106.77524567 182.68652344]
[104.20379639 167.90858459]
[101.63234711 153.13063049]
[99.06089783 138.35269165]
[86.04306030 141.01490784]
[71.49409485 138.97245789]
[57.15782547 131.61672974]
[44.97742081 118.98490143]
[36.85991669 101.81458282]
[34.42933273 81.51448822]
[38.79760742 60.05043030]
[29.25969124 48.47337723]
[19.72177696 36.89632416]
[10.18386269 25.31926918]
[0.64594805 13.74221516]
[-8.89196682 2.16516066]
[-18.42988205 -9.41189384]
[-27.96779633 -20.98894691]
[-37.50571060 -32.56600189]
[-47.04362488 -44.14305496]
[-62.68115616 -44.10298538]
[-74.65276337 -54.16353607]
[-77.30582428 -69.57441711]
[-69.38763428 -83.05908966]
[-54.63692856 -88.25049591]
[-40.01853561 -82.69741821]
[-32.43481827 -69.02185059]
[-35.46657181 -53.68096924]
[-25.92865562 -42.10391617]
[-16.39074135 -30.52686310]
[-6.85282707 -18.94980812]
[2.68508768 -7.37275410]
[12.22300243 4.20430040]
[21.76091766 15.78135490]
[31.29883194 27.35840797]
[40.83674622 38.93546295]
[50.37466049 50.51251602]
[63.80808258 43.83845139]
[60.34336853 29.24407768]
[56.87865067 14.64970398]
[53.41393661 0.05533008]
[49.87531281 -14.52130032]
[46.26287460 -29.07981300]
[42.65043640 -43.63832474]
[32.96753311 -57.55513763]
[43.65997314 -70.71218872]
[59.26280594 -64.07984924]
[57.20895004 -47.25076294]
[60.82138824 -32.69224930]
[64.43382263 -18.13373756]
[69.07011414 -12.42841721]
[68.00830841 -3.40938616]
[71.47302246 11.18498802]
[74.93774414 25.77936172]
[78.40245819 40.37373352]
[85.90206909 40.29772949]
[93.26977539 27.23185730]
[100.90129852 40.14572144]
[108.40091705 40.06971359]
[111.56913757 25.40811920]
[114.73735809 10.74652481]
[117.90557861 -3.91507077]
[121.07379913 -18.57666588]
[109.64096832 -28.83268166]
[104.88310242 -43.43605042]
[108.08005524 -58.45853424]
[118.37185669 -69.85916901]
[132.99006653 -74.57122803]
[148.00245667 -71.32720184]
[159.37077332 -60.99971771]
[164.03698730 -46.36680984]
[160.74592590 -31.36466217]
[150.38285828 -20.02877426]
[135.73539734 -15.40844536]
[132.56716919 -0.74684978]
[129.39895630 13.91474533]
[126.23073578 28.57634163]
[123.06251526 43.23793411]
[129.96958923 46.16064453]
[141.93893433 37.11991119]
[143.78375244 52.00605774]
[150.69084167 54.92876816]
[159.00859070 42.44617462]
[167.32633972 29.96358490]
[175.64408875 17.48099518]
[179.39553833 0.94730556]
[196.32159424 -0.02482223]
[201.94132996 15.97064304]
[188.12667847 25.79874229]
[179.80892944 38.28133392]
[171.49118042 50.76392365]
[163.17343140 63.24651337]
[161.43794250 103.03162384]
[140.48277283 129.24026489]
[113.83884430 135.78125000]
[116.41029358 150.55918884]
[118.98173523 165.33712769]
[121.55318451 180.11508179]
[124.12463379 194.89302063]
[126.69608307 209.67095947]
[129.26753235 224.44891357]
[131.83898926 239.22685242]
[134.41043091 254.00480652]
[136.98187256 268.78274536]
[139.55332947 283.56069946]
[142.12477112 298.33862305]
[144.69622803 313.11657715]
[147.26766968 327.89453125]
[149.83912659 342.67245483]
[156.34591675 344.05477905]
[162.36123657 346.85186768]
[167.58279419 350.91418457]
[171.75019836 356.02880859]
[174.65797424 361.93069458]
[176.16561890 368.31625366]
[176.20443726 374.85910034]
[174.78060913 381.22665405]
[171.97444153 387.09701538]
[167.93589783 392.17541504]
[162.87660217 396.20874023]
[157.05877686 398.99841309]
[158.27354431 413.94912720]
[159.48831177 428.89987183]
[163.28518677 437.14935303]
[160.63885498 444.00814819]
[161.70204163 458.97039795]
[162.76524353 473.93267822]
[163.82843018 488.89495850]
[164.89163208 503.85723877]
[165.95483398 518.81951904]
[167.39671326 533.75006104]
[169.21636963 548.63928223]
[171.03602600 563.52850342]
[172.85568237 578.41772461]
[174.67535400 593.30688477]
[176.49501038 608.19610596]
[187.90438843 622.68017578]
[180.35079956 638.54473877]
[182.32125854 653.41473389]
[184.36703491 668.27459717]
[186.48806763 683.12384033]
[188.60911560 697.97314453]
[190.73016357 712.82244873]
[192.85119629 727.67169189]
[194.97224426 742.52099609]
[197.09329224 757.37023926]
[199.21432495 772.21954346]
[201.33537292 787.06884766]
[210.51696777 798.93048096]
[224.36056519 804.70581055]
[238.23326111 810.41094971]
[252.13468933 816.04571533]
[268.29324341 813.24700928]
[278.58703613 826.01293945]
[272.42669678 841.21105957]
[256.14944458 843.20678711]
[246.49992371 829.94708252]
[232.59851074 824.31237793]
[225.25765991 824.70971680]
[218.58522034 818.54943848]
[204.74162292 812.77404785]
[201.45785522 821.75354004]
[195.33056641 828.24194336]
[187.71516418 831.51507568]
[188.01916504 846.51202393]
[188.32318115 861.50891113]
[188.62718201 876.50585938]
[188.93118286 891.50274658]
[189.23518372 906.49969482]
[197.96299744 915.95019531]
[197.93591309 928.41424561]
[189.71182251 937.24053955]
[189.86383057 952.23980713]
[200.87065125 963.26190186]
[200.81112671 978.47546387]
[190.23536682 988.90081787]
[190.38737488 1003.90008545]
[190.53938293 1018.89929199]
[190.69140625 1033.89855957]
[198.56814575 1047.61962891]
[190.96023560 1060.42456055]
[191.11224365 1075.42382812]
[191.26425171 1090.42309570]
[229.77226257 1077.74340820]
[274.22265625 1107.73620605]
[279.99798584 1121.57983398]
[285.77334595 1135.42346191]
[291.54867554 1149.26696777]
[297.32403564 1163.11059570]
[303.09936523 1176.95422363]
[317.80938721 1182.73266602]
[324.04827881 1197.25341797]
[318.11459351 1211.90148926]
[303.52871704 1217.98657227]
[288.94415283 1211.89831543]
[283.01370239 1197.24890137]
[289.25576782 1182.72961426]
[283.48043823 1168.88598633]
[277.70507812 1155.04235840]
[271.92974854 1141.19873047]
[266.15438843 1127.35510254]
[260.37905884 1113.51159668]
[253.00349426 1114.87207031]
[238.25236511 1117.59313965]
[230.87680054 1118.95373535]
[230.42082214 1133.94677734]
[229.96485901 1148.93981934]
[229.50889587 1163.93286133]
[229.05293274 1178.92590332]
[228.59695435 1193.91906738]
[240.94944763 1203.31030273]
[245.39054871 1218.17822266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 307]
[7 306]
[8 305]
[9 304]
[10 303]
[11 302]
[15 28]
[16 27]
[17 26]
[18 25]
[29 280]
[30 279]
[31 278]
[33 276]
[34 275]
[35 274]
[36 273]
[39 270]
[40 269]
[42 266]
[43 265]
[44 264]
[45 263]
[46 262]
[47 261]
[51 245]
[52 244]
[53 243]
[54 242]
[55 241]
[56 240]
[57 239]
[58 238]
[59 237]
[61 236]
[62 235]
[65 233]
[66 232]
[67 231]
[68 230]
[69 229]
[70 228]
[76 227]
[77 226]
[78 225]
[79 224]
[80 223]
[81 222]
[82 220]
[83 219]
[84 218]
[87 206]
[88 205]
[89 204]
[90 203]
[91 202]
[92 201]
[93 200]
[94 199]
[95 198]
[96 197]
[97 196]
[98 195]
[99 194]
[100 193]
[101 192]
[108 134]
[109 133]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[135 152]
[136 151]
[137 150]
[138 149]
[139 147]
[140 146]
[141 145]
[156 175]
[157 174]
[158 173]
[159 172]
[160 171]
[179 189]
[180 188]
[181 187]
[182 186]
[246 258]
[247 257]
[248 255]
[249 254]
[282 299]
[283 298]
[284 297]
[285 296]
[286 295]
[287 294]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
