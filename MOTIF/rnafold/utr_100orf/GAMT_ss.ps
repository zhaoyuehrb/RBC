%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:47:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCUGUUGGACCCGCCCCCGGCCCACAAGCCCCUGCAGGGAGCGGGCCCGGGCGGCGCGCGAUCGAGGUCGGGUCGCCGUCCAGCCUGCAGCAUGAGCGCCCCCAGCGCGACCCCCAUCUUCGCGCCCGGCGAGAACUGCAGCCCCGCGUGGGGGGCGGCGCCCGCGGCCUACGACGCAGCGGACACGCACC\
) } def
/len { sequence length } bind def

/coor [
[86.06289673 139.79364014]
[82.23899841 154.29804993]
[78.41510010 168.80245972]
[74.70816040 183.33718872]
[71.11842346 197.90132141]
[76.19819641 213.49388123]
[65.03479767 225.50682068]
[49.11217499 221.58224487]
[44.81016541 205.75743103]
[56.55429840 194.31158447]
[60.14403534 179.74745178]
[58.69034576 172.49092102]
[63.91069031 164.97856140]
[67.73458862 150.47415161]
[71.55848694 135.96974182]
[60.33082581 126.02290344]
[46.39309311 131.56723022]
[32.45536041 137.11155701]
[18.56274033 142.76799011]
[4.71613550 148.53613281]
[-9.13046932 154.30427551]
[-22.97707367 160.07243347]
[-36.82368088 165.84057617]
[-50.62337112 171.72007751]
[-64.37525177 177.71054077]
[-78.12713623 183.70101929]
[-80.59671021 187.30917358]
[-83.77019501 189.69598389]
[-87.17448425 190.79019165]
[-90.36228180 190.68243408]
[-92.96290588 189.60256958]
[-107.07201385 194.69500732]
[-121.13964844 199.90093994]
[-135.16490173 205.22000122]
[-149.19013977 210.53907776]
[-159.13693237 223.57723999]
[-175.36491394 221.21406555]
[-181.18013000 205.88058472]
[-170.60038757 193.35058594]
[-154.50921631 196.51383972]
[-140.48396301 191.19476318]
[-126.45872498 185.87568665]
[-121.31250000 180.55714417]
[-112.16445160 180.58589172]
[-98.05533600 175.49346924]
[-84.11760712 169.94912720]
[-70.36572266 163.95866394]
[-56.61383820 157.96820068]
[-51.73057938 152.40722656]
[-42.59182739 151.99397278]
[-28.74522209 146.22583008]
[-14.89861774 140.45767212]
[-1.05201268 134.68952942]
[12.79459190 128.92138672]
[17.76680565 123.43980408]
[26.91102982 123.17382812]
[40.84876251 117.62950134]
[54.78649521 112.08516693]
[65.23155975 81.25230408]
[89.85354614 69.43931580]
[110.49703979 77.41949463]
[120.62346649 66.35353851]
[130.74989319 55.28757477]
[134.24116516 46.83189392]
[141.12969971 44.12658691]
[151.43309021 33.22520065]
[161.73648071 22.32381248]
[171.95172119 11.33978271]
[182.07814026 0.27382249]
[192.20457458 -10.79213810]
[202.33099365 -21.85809708]
[212.45742798 -32.92405701]
[222.58384705 -43.99001694]
[232.62080383 -55.13719177]
[242.56764221 -66.36485291]
[245.92739868 -81.82521057]
[260.15859985 -86.22093201]
[270.10543823 -97.44859314]
[280.05227661 -108.67625427]
[289.99911499 -119.90391541]
[299.94595337 -131.13157654]
[309.89279175 -142.35923767]
[319.83963013 -153.58689880]
[329.78646851 -164.81455994]
[316.71987915 -176.64717102]
[315.56698608 -193.33125305]
[325.72616577 -205.45817566]
[340.55767822 -207.04632568]
[348.97894287 -219.45932007]
[357.40020752 -231.87231445]
[365.82144165 -244.28530884]
[374.24270630 -256.69830322]
[382.66397095 -269.11129761]
[375.94882202 -280.15972900]
[373.92306519 -292.88174438]
[376.85317993 -305.37838745]
[384.26864624 -315.79779053]
[395.03698730 -322.60974121]
[407.53659058 -324.83032227]
[419.90087891 -322.16387939]
[428.71765137 -334.29913330]
[437.53442383 -346.43438721]
[446.35122681 -358.56964111]
[442.23745728 -369.74069214]
[444.01507568 -381.39031982]
[451.12695312 -390.63595581]
[461.71084595 -395.24661255]
[473.08563232 -394.18072510]
[482.28875732 -406.02566528]
[491.49191284 -417.87057495]
[500.69506836 -429.71548462]
[509.89822388 -441.56039429]
[519.10137939 -453.40530396]
[513.87341309 -467.91986084]
[517.34472656 -482.95159912]
[528.40777588 -493.70394897]
[543.53222656 -496.74591064]
[557.89202881 -491.10678101]
[566.90496826 -478.58596802]
[567.69506836 -463.17886353]
[560.01019287 -449.80178833]
[546.30261230 -442.72329712]
[530.94628906 -444.20214844]
[521.74316406 -432.35723877]
[512.53997803 -420.51232910]
[503.33682251 -408.66741943]
[494.13369751 -396.82250977]
[484.93054199 -384.97756958]
[488.30657959 -366.99520874]
[477.28842163 -351.99053955]
[458.48648071 -349.75286865]
[449.66970825 -337.61761475]
[440.85290527 -325.48236084]
[432.03613281 -313.34710693]
[439.60519409 -297.89489746]
[438.30685425 -280.64831543]
[428.40841675 -266.35717773]
[412.55804443 -259.00302124]
[395.07696533 -260.69006348]
[386.65570068 -248.27705383]
[378.23443604 -235.86405945]
[369.81320190 -223.45106506]
[361.39193726 -211.03807068]
[352.97067261 -198.62507629]
[358.54666138 -188.11257935]
[357.12948608 -174.93321228]
[371.98904419 -172.88551331]
[386.84863281 -170.83779907]
[401.82479858 -177.51960754]
[414.93881226 -167.67306519]
[412.70010376 -151.42744446]
[397.41165161 -145.49484253]
[384.80093384 -155.97822571]
[369.94134521 -158.02593994]
[355.08178711 -160.07363892]
[341.01412964 -154.86772156]
[331.06729126 -143.64006042]
[321.12045288 -132.41239929]
[311.17361450 -121.18473053]
[301.22677612 -109.95706940]
[291.27993774 -98.72940826]
[281.33309937 -87.50174713]
[271.38626099 -76.27408600]
[268.73797607 -61.61680984]
[253.79530334 -56.41801071]
[243.84846497 -45.19034958]
[241.76336670 -38.08943939]
[233.64981079 -33.86359024]
[223.52337646 -22.79763031]
[213.39695740 -11.73167133]
[203.27052307 -0.66571069]
[193.14410400 10.40024948]
[183.01766968 21.46620941]
[180.81845093 28.53260803]
[172.63786316 32.62719727]
[162.33447266 43.52858734]
[152.03109741 54.42997360]
[141.81585693 65.41400146]
[131.68942261 76.47996521]
[121.56300354 87.54592133]
[135.34281921 106.01469421]
[130.50283813 135.49491882]
[134.55990601 149.93583679]
[138.61697388 164.37675476]
[150.72375488 175.43830872]
[146.93379211 191.39350891]
[131.14587402 195.82899475]
[119.60125732 184.18194580]
[124.17605591 168.43382263]
[120.11898804 153.99290466]
[116.06192017 139.55198669]
[108.56216431 139.61239624]
[108.68276215 154.61190796]
[93.68324280 154.73228455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 11]
[5 10]
[16 58]
[17 57]
[18 56]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[24 48]
[25 47]
[26 46]
[31 45]
[32 44]
[33 42]
[34 41]
[35 40]
[61 180]
[62 179]
[63 178]
[65 177]
[66 176]
[67 175]
[68 173]
[69 172]
[70 171]
[71 170]
[72 169]
[73 168]
[74 166]
[75 165]
[77 163]
[78 162]
[79 161]
[80 160]
[81 159]
[82 158]
[83 157]
[84 156]
[88 144]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
[100 134]
[101 133]
[102 132]
[103 131]
[108 128]
[109 127]
[110 126]
[111 125]
[112 124]
[113 123]
[146 155]
[147 154]
[148 153]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
