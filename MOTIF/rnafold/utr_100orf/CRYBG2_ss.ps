%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGAGAGCCCAAUCGCAUCAGGGGAGCACGGCCCAGCAGCAGGAGCUCCAGGCUGGCUGGACACCUGGGUCCCCACGCAGACUGUGAGUAGAGGGAGCUGGACCACAGUGGGACAAGGACACCUCCAGACAGGUUGCCAGGGCCCCACAUGGAGGAGGCAGGUGGGCCCAUGGCCCGGGCCAAGGCCCGAGUGGUAAGUGCCACAUUGACAUGGCGGCAGCGGCCCCCCACCCAGGAAGAGAUCAAAC\
) } def
/len { sequence length } bind def

/coor [
[-22.44366455 219.99790955]
[-30.50834846 218.07716370]
[-37.04076004 231.58003235]
[-43.57316971 245.08291626]
[-50.10557938 258.58578491]
[-41.59715652 271.29617310]
[-40.59975052 286.45867920]
[-47.28130341 299.99468994]
[-59.75760651 308.31320190]
[-74.62241364 309.26351929]
[-81.15482330 322.76638794]
[-87.68723297 336.26925659]
[-78.53391266 348.53610229]
[-76.14118958 363.65341187]
[-81.05888367 378.14739990]
[-92.15695953 388.68737793]
[-106.88515472 392.85137939]
[-121.85903168 389.68255615]
[-133.63771057 379.90905762]
[-139.51454163 365.77676392]
[-138.13905334 350.53317261]
[-129.82734680 337.68118286]
[-116.48937225 330.17404175]
[-101.19010925 329.73684692]
[-94.65769958 316.23397827]
[-88.12528992 302.73110962]
[-96.60662842 290.48641968]
[-97.82835388 275.54107666]
[-91.36254883 261.90069580]
[-78.85520172 253.27149963]
[-63.60845566 252.05337524]
[-57.07604599 238.55050659]
[-50.54363251 225.04762268]
[-44.01122284 211.54475403]
[-54.10849380 200.45217896]
[-68.16423035 205.69013977]
[-82.21997070 210.92811584]
[-96.27570343 216.16607666]
[-110.33143616 221.40403748]
[-124.35411835 226.72985840]
[-138.34320068 232.14334106]
[-152.33227539 237.55680847]
[-163.56199646 252.16554260]
[-180.78894043 248.76185608]
[-194.70916748 254.34999084]
[-204.40307617 267.57723999]
[-220.67355347 265.52697754]
[-226.78292847 250.30831909]
[-216.44641113 237.57693481]
[-200.29730225 240.42977905]
[-186.37707520 234.84162903]
[-181.34994507 223.85702515]
[-169.81977844 219.07957458]
[-157.74575806 223.56773376]
[-143.75666809 218.15426636]
[-129.76759338 212.74078369]
[-124.67711639 207.40968323]
[-115.56940460 207.34829712]
[-101.51366425 202.11033630]
[-87.45793152 196.87237549]
[-73.40219879 191.63441467]
[-59.34645844 186.39643860]
[-57.59158707 159.89279175]
[-41.95965958 139.21948242]
[-18.14924622 130.74267578]
[5.77906227 136.58285522]
[15.01562786 124.76396942]
[24.25219345 112.94509125]
[33.48875809 101.12622070]
[42.72532654 89.30734253]
[41.69354630 74.34286499]
[30.92230415 63.90350342]
[20.15106392 53.46413803]
[9.37982273 43.02476883]
[-1.39141881 32.58540344]
[-0.87507099 47.57651520]
[-10.03219604 59.45704651]
[-24.66061974 62.77506638]
[-38.04740524 56.00794220]
[-44.04940033 42.26108551]
[-39.91230774 27.84288406]
[-27.53462982 19.36980629]
[-12.59761906 20.72956657]
[-22.41407967 9.38773632]
[-32.23053741 -1.95409381]
[-42.04699707 -13.29592419]
[-51.86346054 -24.63775444]
[-61.67992020 -35.97958374]
[-69.64037323 -40.40510559]
[-71.54718018 -47.52534866]
[-81.22091675 -58.98915100]
[-96.72705078 -60.47161484]
[-106.37429047 -72.23535156]
[-104.86542511 -87.00893402]
[-114.53916168 -98.47274017]
[-130.14010620 -103.52670288]
[-133.29864502 -119.61879730]
[-120.76554108 -130.19487000]
[-105.43377686 -124.37515259]
[-103.07536316 -108.14647675]
[-93.40162659 -96.68267059]
[-78.58469391 -95.68561554]
[-68.61083984 -84.19748688]
[-69.75711823 -68.66288757]
[-60.08337784 -57.19908524]
[-50.33808899 -45.79604340]
[-40.52162933 -34.45421600]
[-30.70516777 -23.11238480]
[-20.88870811 -11.77055359]
[-11.07224846 -0.42872345]
[-1.25578856 10.91310692]
[9.04794693 21.81416321]
[19.81918907 32.25352859]
[30.59042931 42.69289398]
[41.36167145 53.13226318]
[52.13291168 63.57162857]
[59.17703247 60.99667740]
[54.02713394 46.90843582]
[48.87744904 32.82011414]
[62.96585083 27.67065239]
[68.11537170 41.75853729]
[73.26527405 55.84677887]
[80.30939484 53.27182770]
[81.80884552 38.34696198]
[83.30828857 23.42209435]
[84.80773926 8.49722672]
[74.61271667 -3.57907844]
[76.02622223 -19.32003021]
[88.20964050 -29.38680077]
[103.93476868 -27.80695343]
[113.87216949 -15.51778316]
[112.12615204 0.18976203]
[99.73260498 9.99667549]
[98.23315430 24.92154121]
[96.73371124 39.84640884]
[95.23426056 54.77127457]
[113.22068787 41.39482880]
[138.95181274 36.28689575]
[149.59155273 25.71353531]
[160.23129272 15.14017391]
[170.87103271 4.56681299]
[181.44439697 -6.07292557]
[191.95095825 -16.77862549]
[202.45753479 -27.48432541]
[212.96409607 -38.19002533]
[223.47067261 -48.89572525]
[233.97723389 -59.60142136]
[237.74121094 -67.89519501]
[244.68293762 -70.37432861]
[255.32267761 -80.94769287]
[259.65740967 -96.16349792]
[274.13900757 -99.64664459]
[284.77874756 -110.22000122]
[283.28439331 -125.78601837]
[292.18783569 -138.64147949]
[307.28515625 -142.71641541]
[321.44784546 -136.08676147]
[327.98873901 -121.88285828]
[323.81939697 -106.81134033]
[310.90847778 -97.98852539]
[295.35211182 -99.58026123]
[284.71237183 -89.00690460]
[281.13867188 -74.54737854]
[265.89602661 -70.30795288]
[255.25630188 -59.73459244]
[244.68293762 -49.09485245]
[234.17637634 -38.38915253]
[223.66979980 -27.68345451]
[213.16323853 -16.97775459]
[202.65666199 -6.27205563]
[192.15010071 4.43364382]
[189.71444702 11.39075470]
[181.44439697 15.20655155]
[170.80465698 25.77991295]
[160.16491699 36.35327530]
[149.52517700 46.92663574]
[152.70661926 53.71842194]
[162.25097656 74.09378815]
[177.18493652 72.68776703]
[192.11889648 71.28175354]
[207.05284119 69.87573242]
[221.98680115 68.46971893]
[235.03721619 58.53902054]
[250.05604553 65.12435913]
[251.59321594 81.45130157]
[238.06741333 90.72409821]
[223.39282227 83.40367889]
[208.45886230 84.80969238]
[193.52490234 86.21571350]
[178.59094238 87.62172699]
[163.65698242 89.02774811]
[162.25091553 103.96237183]
[160.84495544 118.89566040]
[175.25405884 123.06430054]
[189.66317749 127.23294067]
[204.07228088 131.40158081]
[218.48139954 135.57022095]
[234.26441956 131.11735535]
[245.82183838 142.75169373]
[241.26437378 158.50483704]
[225.28034973 162.17129517]
[214.31275940 149.97932434]
[199.90364075 145.81068420]
[185.49453735 141.64204407]
[171.08543396 137.47340393]
[156.67631531 133.30477905]
[152.67189026 139.64627075]
[165.35488892 147.65512085]
[178.03788757 155.66397095]
[190.72074890 163.67300415]
[182.71151733 176.35575867]
[170.02903748 168.34695435]
[157.34603882 160.33811951]
[144.66304016 152.32926941]
[140.65861511 158.67076111]
[150.61627197 169.88883972]
[158.63148499 174.21438599]
[160.62725830 181.31019592]
[170.44372559 192.65203857]
[180.26017761 203.99386597]
[195.92315674 208.85215759]
[199.28285217 224.90347290]
[186.88310242 235.63557434]
[171.47970581 230.00820923]
[168.91835022 213.81031799]
[159.10189819 202.46849060]
[149.28543091 191.12666321]
[139.39819336 179.84648132]
[129.44053650 168.62840271]
[100.24980927 168.83670044]
[75.58465576 158.07403564]
[59.01340866 139.83906555]
[52.14663315 118.53797150]
[54.54420090 98.54390717]
[45.30763626 110.36278534]
[36.07107162 122.18166351]
[26.83450508 134.00053406]
[17.59793854 145.81941223]
[22.34783554 151.68368530]
[26.01292419 158.34123230]
[28.46156120 165.59176636]
[29.59901047 173.21330261]
[29.37098503 180.96902466]
[27.76592827 188.61454773]
[24.81596184 195.90568542]
[20.59644890 202.60621643]
[15.22417259 208.49552917]
[8.85415268 213.37590027]
[1.67521250 217.07905579]
[-6.09560299 219.47193909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[10 26]
[11 25]
[12 24]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[40 56]
[41 55]
[42 54]
[44 51]
[45 50]
[66 238]
[67 237]
[68 236]
[69 235]
[70 234]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[83 111]
[84 110]
[85 109]
[86 108]
[87 107]
[88 106]
[90 105]
[91 104]
[94 101]
[95 100]
[123 136]
[124 135]
[125 134]
[126 133]
[138 176]
[139 175]
[140 174]
[141 173]
[142 171]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[149 165]
[150 164]
[152 162]
[153 161]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
[193 206]
[194 205]
[195 204]
[196 203]
[197 202]
[215 229]
[216 228]
[218 227]
[219 226]
[220 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
