%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCAAAGCUGCGCUGGCCGCUCGCGGAGGGAGAGGCUGCAGAGCGAGGGCAGGAGGACUACUUCCAGCAACCCAGUCUCCUGCCAUGUCCGACCCCAUCACGCUGAACGUCGGGGGGAAGCUCUAUACAACCUCACUGGCGACCCUGACCAGCUUCCCUGACUCCAUGCUAGGCGCCAUGUUCA\
) } def
/len { sequence length } bind def

/coor [
[90.97910309 396.52816772]
[78.23686981 388.61392212]
[71.44647980 375.24154663]
[67.22048950 389.63394165]
[62.99449921 404.02633667]
[58.76851273 418.41873169]
[63.15848541 434.21939087]
[51.47819901 445.73037720]
[35.74333191 441.11019897]
[32.14056778 425.11169434]
[44.37611771 414.19274902]
[48.60210419 399.80035400]
[52.82809448 385.40795898]
[57.05408096 371.01556396]
[54.36394501 360.67532349]
[61.49262619 351.01666260]
[63.75199127 336.18780518]
[66.01135254 321.35894775]
[68.27071381 306.53005981]
[66.16564941 299.42913818]
[70.69461060 291.47192383]
[73.20276642 276.68310547]
[75.71092224 261.89428711]
[68.71811676 245.80838013]
[80.55341339 231.71397400]
[82.81277466 216.88511658]
[84.82270813 202.02038574]
[86.58264160 187.12399292]
[88.34257507 172.22758484]
[89.60108948 157.28047180]
[90.35676575 142.29953003]
[91.11244202 127.31857300]
[91.86812592 112.33762360]
[90.10819244 97.44122314]
[85.88220215 83.04882812]
[81.65621185 68.65643311]
[77.43022156 54.26403809]
[66.11838531 43.20272064]
[69.95658112 28.81114388]
[65.73059082 14.41874886]
[50.52478790 1.20527339]
[55.84217453 -17.37281418]
[51.13507843 -31.61511803]
[46.42798233 -45.85742188]
[41.72089005 -60.09972763]
[37.01379395 -74.34203339]
[24.40446091 -77.46102142]
[14.96068192 -86.17997742]
[10.93310070 -98.24243927]
[13.19510365 -110.61837006]
[1.85885990 -120.44128418]
[-9.47738361 -130.26419067]
[-20.81362724 -140.08711243]
[-32.14987183 -149.91001892]
[-43.48611450 -159.73292542]
[-54.82235718 -169.55584717]
[-66.15859985 -179.37875366]
[-74.71268463 -182.64315796]
[-77.60099030 -189.46315002]
[-88.77061462 -199.47511292]
[-99.94023895 -209.48707581]
[-113.63051605 -202.88066101]
[-128.80712891 -202.02116394]
[-143.15576172 -207.03964233]
[-154.48835754 -217.17082214]
[-161.07676697 -230.86976624]
[-161.91630554 -246.04750061]
[-156.87895203 -260.38952637]
[-146.73286438 -271.70877075]
[-133.02526855 -278.27917480]
[-117.84643555 -279.09872437]
[-103.51105499 -274.04251099]
[-92.20516205 -263.88156128]
[-85.65281677 -250.16531372]
[-84.85321045 -234.98542786]
[-89.92827606 -220.65670776]
[-78.75865173 -210.64474487]
[-67.58901978 -200.63278198]
[-56.33568954 -190.71499634]
[-44.99944687 -180.89208984]
[-33.66320419 -171.06916809]
[-22.32695961 -161.24626160]
[-10.99071598 -151.42335510]
[0.34552729 -141.60043335]
[11.68177128 -131.77752686]
[23.01801491 -121.95462036]
[26.57897568 -123.78247070]
[30.38486481 -125.02210236]
[34.33924103 -125.64209747]
[38.34189606 -125.62674713]
[43.99472809 -139.52082825]
[49.64756012 -153.41491699]
[49.12026215 -160.03916931]
[51.65052414 -165.15719604]
[55.73074341 -167.67562866]
[61.84713745 -181.37197876]
[67.96353149 -195.06831360]
[74.07992554 -208.76464844]
[69.60383606 -218.70678711]
[71.31493378 -229.25228882]
[78.40721130 -236.94555664]
[88.35229492 -239.40116882]
[94.92534637 -252.88430786]
[101.49839020 -266.36743164]
[97.65293121 -281.94281006]
[107.54646301 -294.57205200]
[123.58951569 -294.56707764]
[133.47523499 -281.93173218]
[129.62013245 -266.35873413]
[114.98152924 -259.79440308]
[108.40847778 -246.31126404]
[101.83543396 -232.82812500]
[104.61548615 -213.70506287]
[87.77626038 -202.64825439]
[81.65987396 -188.95191956]
[75.54347992 -175.25558472]
[69.42708588 -161.55923462]
[63.54164124 -147.76208496]
[57.88880920 -133.86799622]
[52.23597717 -119.97391510]
[61.91560745 -99.53981018]
[51.25609589 -79.04912567]
[55.96319199 -64.80682373]
[60.67028809 -50.56451797]
[65.37738037 -36.32221222]
[70.08448029 -22.07990837]
[79.61083221 -18.31384850]
[85.60829163 -9.73962498]
[85.89090729 0.94006401]
[80.12298584 10.19276047]
[84.34897614 24.58515549]
[95.35854340 34.61703491]
[91.82261658 50.03805161]
[96.04860687 64.43044281]
[100.27459717 78.82283783]
[104.50058746 93.21523285]
[117.00714874 83.71408844]
[133.36250305 79.89370728]
[148.08341980 82.77370453]
[162.80435181 85.65370178]
[177.52526855 88.53369904]
[192.26986694 91.28993988]
[207.03709412 93.92223358]
[222.26518250 87.83641052]
[234.98057556 98.19262695]
[232.10275269 114.33728790]
[216.59217834 119.66215515]
[204.40480042 108.68946838]
[189.63757324 106.05717468]
[182.48583984 107.98264313]
[174.64527893 103.25462341]
[159.92434692 100.37462616]
[145.20343018 97.49462891]
[130.48249817 94.61463165]
[124.57414246 99.23429871]
[112.75743103 108.47363281]
[106.84907532 113.09329987]
[106.09339905 128.07424927]
[105.33772278 143.05520630]
[104.58203888 158.03616333]
[106.72367096 161.86776733]
[107.44845581 165.78672791]
[106.90489960 169.33312988]
[105.37668610 172.14366150]
[103.23896790 173.98751831]
[101.47903442 188.88392639]
[99.71910095 203.78031921]
[101.98669434 210.02665710]
[100.90650940 215.63287354]
[97.64163971 219.14447021]
[95.38227844 233.97334290]
[102.38722992 244.81980896]
[100.18653870 257.13543701]
[90.49974060 264.40243530]
[87.99158478 279.19125366]
[85.48342896 293.98007202]
[83.09957886 308.78942871]
[80.84021759 323.61828613]
[78.58085632 338.44717407]
[76.32149506 353.27603149]
[88.13365936 344.03088379]
[103.02774048 342.25149536]
[116.68540955 348.45376587]
[125.14678955 360.83944702]
[125.95862579 375.81747437]
[118.88552856 389.04513550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[16 180]
[17 179]
[18 178]
[19 177]
[21 176]
[22 175]
[23 174]
[25 171]
[26 170]
[27 167]
[28 166]
[29 165]
[30 160]
[31 159]
[32 158]
[33 157]
[34 136]
[35 135]
[36 134]
[37 133]
[39 131]
[40 130]
[42 126]
[43 125]
[44 124]
[45 123]
[46 122]
[50 86]
[51 85]
[52 84]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[59 78]
[60 77]
[61 76]
[90 120]
[91 119]
[92 118]
[95 117]
[96 116]
[97 115]
[98 114]
[102 112]
[103 111]
[104 110]
[138 154]
[139 153]
[140 152]
[141 151]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
