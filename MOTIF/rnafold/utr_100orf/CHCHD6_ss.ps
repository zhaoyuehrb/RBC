%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGCCGCGCGAGUCCUGGAAAGCGUUGUUGGCCCGGUUGCUCUGGAGCCGGGUCUCGGGUCUGGUGGCUGCCGGCCCUGCGGCAUCUCGCCAUGGGGAGCACGGAGAGCAGCGAGGGCCGCAGGGUGUCCUUCGGAGUGGACGAGGAGGAGCGGGUCCGGGUGCUGCAGGGUGUCCGGCUGUCUGAAAACG\
) } def
/len { sequence length } bind def

/coor [
[101.84098816 560.28936768]
[114.39746094 551.53759766]
[112.45964050 536.66326904]
[110.52182007 521.78900146]
[108.58399200 506.91467285]
[106.64617157 492.04037476]
[104.70835114 477.16607666]
[102.77053070 462.29177856]
[93.45384979 450.67071533]
[99.34349823 435.98663330]
[97.40567780 421.11233521]
[95.46784973 406.23803711]
[92.28501892 402.65997314]
[91.32531738 397.04034424]
[93.71619415 390.85162354]
[92.26104736 375.92236328]
[90.80590057 360.99313354]
[89.35075378 346.06387329]
[87.89560699 331.13461304]
[79.43850708 325.36862183]
[75.47515106 315.69354248]
[77.54129791 305.22021484]
[85.19043732 297.46197510]
[84.21949005 282.49343872]
[83.24854279 267.52490234]
[82.27759552 252.55635071]
[74.01165009 246.51953125]
[70.36367035 236.72116089]
[72.76788330 226.32025146]
[80.66423798 218.81378174]
[80.17850494 203.82164001]
[79.69277954 188.82951355]
[79.20704651 173.83737183]
[78.59995270 158.84967041]
[77.87151337 143.86737061]
[77.14308167 128.88507080]
[67.52195740 117.37706757]
[52.90579987 114.00543213]
[38.28964233 110.63379669]
[23.10345268 115.07115936]
[12.44102287 104.67106628]
[-2.17513490 101.29943085]
[-16.79129219 97.92779541]
[-31.43427086 94.67461395]
[-46.10311127 91.54010010]
[-60.77194977 88.40558624]
[-75.44078827 85.27107239]
[-90.10962677 82.13656616]
[-105.22196960 86.81925201]
[-116.05141449 76.59318542]
[-130.72024536 73.45867157]
[-145.38908386 70.32415771]
[-159.58097839 77.80545044]
[-174.22024536 71.24254608]
[-178.07687378 55.66994476]
[-168.19241333 43.03361511]
[-152.14935303 43.02706528]
[-142.25457764 55.65532303]
[-127.58573914 58.78983688]
[-112.91690063 61.92434692]
[-98.85376740 57.01745605]
[-86.97511292 67.46772766]
[-72.30627441 70.60223389]
[-57.63743591 73.73674774]
[-42.96859741 76.87126160]
[-28.29975700 80.00577545]
[-21.09133720 78.32667542]
[-13.41965675 83.31163788]
[1.19650102 86.68327332]
[15.81265926 90.05490875]
[29.95340347 85.37638855]
[41.66128159 96.01763916]
[56.27743912 99.38927460]
[70.89359283 102.76091003]
[78.94562531 83.63056946]
[96.29106140 76.18579865]
[98.70952606 61.38204575]
[101.12799072 46.57829666]
[103.54645538 31.77454376]
[105.96491241 16.97079468]
[108.38337708 2.16704345]
[110.80184174 -12.63670731]
[113.22030640 -27.44045830]
[115.63877106 -42.24420929]
[118.05723572 -57.04795837]
[116.35115051 -66.03649902]
[120.63658905 -72.07104492]
[123.29444885 -86.83369446]
[125.95231628 -101.59633636]
[128.61018372 -116.35898590]
[131.26805115 -131.12162781]
[133.92590332 -145.88427734]
[132.04341125 -152.24609375]
[133.45448303 -157.76968384]
[136.91629028 -161.07859802]
[140.05079651 -175.74743652]
[127.51279449 -184.34202576]
[119.22238159 -197.08319092]
[116.44379425 -212.02803040]
[119.60073853 -226.89752197]
[128.21180725 -239.42420959]
[140.96388245 -247.69786072]
[155.91235352 -250.45678711]
[170.77767944 -247.28028870]
[183.29302979 -238.65274048]
[191.54989624 -225.88980103]
[194.28915405 -210.93771362]
[191.09310913 -196.07656860]
[182.44911194 -183.57258606]
[169.67532349 -175.33251953]
[154.71963501 -172.61293030]
[151.58512878 -157.94409180]
[148.68855286 -143.22640991]
[146.03068542 -128.46376038]
[143.37283325 -113.70111847]
[140.71496582 -98.93847656]
[138.05709839 -84.17582703]
[135.39923096 -69.41317749]
[132.86099243 -54.62949371]
[130.44252014 -39.82574463]
[128.02406311 -25.02199364]
[125.60559082 -10.21824360]
[123.18713379 4.58550739]
[120.76866913 19.38925743]
[118.35020447 34.19300842]
[115.93173981 48.99675751]
[113.51327515 63.80051041]
[111.09481049 78.60426331]
[117.17961884 83.09635162]
[121.57259369 89.25310516]
[136.41355896 87.07467651]
[151.25453186 84.89624786]
[166.09550476 82.71781921]
[180.93647766 80.53939056]
[195.77745056 78.36096191]
[200.78645325 63.89830399]
[211.95077515 53.42850876]
[226.70492554 49.35746384]
[241.65852356 52.62065887]
[253.37533569 62.46824265]
[259.16293335 76.63730621]
[257.69134521 91.87191010]
[249.29876709 104.67124176]
[235.91371155 112.09412384]
[220.61199951 112.43481445]
[206.90983582 105.61504364]
[197.95588684 93.20193481]
[183.11491394 95.38036346]
[168.27394104 97.55879211]
[153.43296814 99.73722076]
[138.59199524 101.91564941]
[123.75102234 104.09407806]
[119.26461029 117.18129730]
[107.73616791 126.41561890]
[92.12538147 128.15663147]
[92.85382080 143.13893127]
[93.58225250 158.12123108]
[97.12899017 166.55480957]
[94.19918060 173.35165405]
[94.68491364 188.34378052]
[95.17063904 203.33592224]
[95.65637207 218.32804871]
[107.06410980 234.93681335]
[97.24613953 251.58540344]
[98.21708679 266.55395508]
[99.18803406 281.52249146]
[100.15898132 296.49102783]
[112.09856415 312.72167969]
[102.82485962 329.67947388]
[104.28000641 344.60873413]
[105.73515320 359.53796387]
[107.19029999 374.46722412]
[108.64544678 389.39648438]
[110.34215546 404.30020142]
[112.27997589 419.17449951]
[114.21779633 434.04879761]
[123.67308044 446.73376465]
[117.64482880 460.35397339]
[119.58264923 475.22827148]
[121.52047729 490.10256958]
[123.45829773 504.97686768]
[125.39611816 519.85113525]
[127.33393860 534.72546387]
[129.27175903 549.59979248]
[143.65141296 554.84228516]
[153.93905640 566.17468262]
[157.77064514 580.99285889]
[154.26573181 595.89166260]
[144.22970581 607.44744873]
[129.96878052 613.00482178]
[114.76001740 611.28674316]
[102.09825897 602.68798828]
[94.89309692 589.18450928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[10 176]
[11 175]
[12 174]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[23 167]
[24 166]
[25 165]
[26 164]
[30 162]
[31 161]
[32 160]
[33 159]
[34 157]
[35 156]
[36 155]
[37 74]
[38 73]
[39 72]
[41 70]
[42 69]
[43 68]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[50 60]
[51 59]
[52 58]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[95 112]
[96 111]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
[135 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
