%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGGCCCUACACAAACCCGCUGGUAGCGCUGGGCCGACUCGCCCAGCCUGGACCCAUUCAGUCAGAGGCAGCCAGCGGGACCUGCUUCACCGAGCGCAGCGAAGCCGAGACCCGGGCUGGCCCCUCUGCUGCCCCCGGAGCGGGCCAUGCCGCCGCGGGAGCUGAGCGAGGCCGAGCCGCCCCCGCUCCGGGCCCCGACCCCUCCCCCGCGGCGGCGUAGCGCGCCCCCAGAGCUGGGCAUCAAGU\
) } def
/len { sequence length } bind def

/coor [
[153.64312744 308.30508423]
[150.47550964 293.64337158]
[147.30787659 278.98165894]
[142.83505249 273.12268066]
[144.19355774 264.11663818]
[141.20968628 249.41641235]
[131.09524536 238.48265076]
[135.93272400 223.41912842]
[132.94883728 208.71890259]
[122.83440399 197.78514099]
[127.67186737 182.72161865]
[124.68799591 168.02140808]
[121.70411682 153.32118225]
[118.72024536 138.62095642]
[108.12936401 141.39700317]
[97.36802673 141.37286377]
[87.15172577 138.64549255]
[78.13554382 133.48847961]
[70.87220001 126.32780457]
[65.77829742 117.70809174]
[51.36919022 121.87673187]
[36.96007919 126.04537201]
[22.55097008 130.21400452]
[8.14186001 134.38264465]
[-6.26725054 138.55128479]
[-20.67636108 142.71992493]
[-35.08547211 146.88856506]
[-49.49458313 151.05718994]
[-60.60086060 162.32490540]
[-74.97704315 158.42941284]
[-89.38614655 162.59805298]
[-103.16214752 168.53286743]
[-116.08949280 176.14099121]
[-129.01684570 183.74913025]
[-141.94418335 191.35726929]
[-154.87153625 198.96539307]
[-167.79888916 206.57353210]
[-180.72622681 214.18165588]
[-184.44604492 229.54194641]
[-197.98103333 237.70158386]
[-213.30113220 233.81958008]
[-221.31721497 220.19908142]
[-217.27345276 204.92086792]
[-203.56896973 197.04925537]
[-188.33436584 201.25430298]
[-175.40701294 193.64617920]
[-162.47967529 186.03804016]
[-149.55232239 178.42991638]
[-136.62496948 170.82177734]
[-123.69762421 163.21365356]
[-110.77027893 155.60551453]
[-115.47689819 141.36305237]
[-130.39208984 142.95587158]
[-145.30728149 144.54869080]
[-160.22247314 146.14151001]
[-175.13766479 147.73432922]
[-188.06275940 157.82759094]
[-203.16284180 151.43074036]
[-204.90422058 135.12431335]
[-191.49554443 125.68296814]
[-176.73048401 132.81913757]
[-161.81529236 131.22631836]
[-146.90010071 129.63349915]
[-131.98490906 128.04067993]
[-117.06971741 126.44786072]
[-112.69795990 112.09907532]
[-100.32890320 103.61341095]
[-85.36826324 104.69941711]
[-74.35438538 114.88246155]
[-72.10071564 129.71218872]
[-79.59219360 142.70748901]
[-93.55478668 148.18894958]
[-79.14567566 144.02030945]
[-69.07003021 133.05076599]
[-53.66321945 136.64808655]
[-39.25410843 132.47944641]
[-24.84499931 128.31080627]
[-10.43588829 124.14217377]
[3.97322178 119.97353363]
[18.38233185 115.80489349]
[32.79144287 111.63626099]
[47.20055389 107.46762085]
[61.60966110 103.29898071]
[55.42224884 96.11664581]
[50.74508286 86.92288208]
[48.07973862 76.05438995]
[37.57316971 65.34869385]
[27.06659889 54.64299393]
[16.56002998 43.93729401]
[5.98666859 33.29755402]
[-4.65306997 22.72419357]
[-15.29280853 12.15083313]
[-30.78976631 5.27474022]
[-28.47237778 -11.52008247]
[-11.69238758 -13.94252777]
[-4.71944761 1.51109433]
[5.92029095 12.08445549]
[16.56002998 22.65781593]
[23.50176239 25.13695145]
[27.26572990 33.43072510]
[37.77229691 44.13642502]
[48.27886963 54.84212494]
[58.78543854 65.54782104]
[65.27278900 61.78428268]
[65.24118805 46.78431320]
[78.24749756 54.25719833]
[84.73485565 50.49365997]
[80.65647125 36.05874252]
[76.57808685 21.62382698]
[72.49970245 7.18891048]
[57.89319611 1.95158553]
[49.18254852 -10.88991833]
[49.71718216 -26.39778137]
[59.29151535 -38.60891342]
[74.22402954 -42.82788467]
[88.77285767 -37.43241501]
[97.34368896 -24.49717140]
[96.64086151 -8.99602127]
[86.93462372 3.11052823]
[91.01300049 17.54544449]
[95.09138489 31.98036003]
[99.16976929 46.41527557]
[114.16976929 46.41527557]
[118.24815369 31.98036003]
[122.32653046 17.54544449]
[126.40491486 3.11052823]
[130.48329163 -11.32438755]
[134.47126770 -25.78454399]
[138.36866760 -40.26937485]
[142.26605225 -54.75420380]
[146.16345215 -69.23903656]
[150.06085205 -83.72386169]
[140.95713806 -96.43829346]
[142.20751953 -112.02580261]
[153.22157288 -123.12645721]
[168.79881287 -124.49886322]
[181.58415222 -115.49501038]
[185.54072571 -100.36624908]
[178.80036926 -86.25591278]
[164.54568481 -79.82646942]
[160.64828491 -65.34163666]
[156.75088501 -50.85680771]
[152.85348511 -36.37197876]
[148.95610046 -21.88714790]
[150.24969482 -14.63040352]
[144.91821289 -7.24600554]
[140.83982849 7.18891048]
[136.76144409 21.62382698]
[132.68305969 36.05874252]
[128.60469055 50.49365997]
[142.39634705 69.16509247]
[146.61631775 90.02665710]
[142.00013733 108.83260345]
[156.98574829 108.17570496]
[171.97135925 107.51880646]
[186.95697021 106.86191559]
[201.94256592 106.20501709]
[216.92817688 105.54811859]
[231.91378784 104.89122772]
[246.89939880 104.23432922]
[261.88500977 103.57743073]
[276.87060547 102.92053986]
[291.85623169 102.26364136]
[296.57031250 87.03207397]
[306.20248413 74.35971832]
[319.57159424 65.77015686]
[335.04852295 62.28816605]
[350.75491333 64.31748199]
[364.79092407 71.59408569]
[375.46517944 83.22036743]
[381.49847412 97.77584839]
[396.47470093 96.93144989]
[409.81741333 88.42955780]
[422.96008301 95.43812561]
[437.93627930 94.59371948]
[452.91250610 93.74931335]
[467.88870239 92.90490723]
[482.85317993 91.87313080]
[497.80355835 90.65413666]
[512.75396729 89.43514252]
[527.70434570 88.21614838]
[536.60107422 75.35602570]
[551.69622803 71.27317810]
[565.86236572 77.89538574]
[572.41070557 92.09586334]
[568.24926758 107.16956329]
[555.34301758 115.99915314]
[539.78582764 114.41557312]
[528.92333984 103.16653442]
[513.97296143 104.38552856]
[499.02255249 105.60452271]
[484.07217407 106.82351685]
[480.36706543 109.79962158]
[474.75970459 110.49671936]
[468.73312378 107.88112640]
[453.75689697 108.72552490]
[438.78070068 109.56993103]
[423.80447388 110.41433716]
[411.53295898 118.85582733]
[397.31909180 111.90766144]
[382.34289551 112.75206757]
[378.67550659 126.41205597]
[370.96017456 138.29170227]
[359.93890381 147.22427368]
[346.67901611 152.32763672]
[332.47006226 153.09132385]
[318.69815063 149.42761230]
[306.71090698 141.68130493]
[297.68551636 130.59735107]
[292.51312256 117.24925232]
[277.52752686 117.90614319]
[262.54190063 118.56304169]
[247.55628967 119.21994019]
[232.57069397 119.87683105]
[217.58508301 120.53372955]
[202.59947205 121.19062805]
[187.61386108 121.84751892]
[172.62825012 122.50441742]
[157.64263916 123.16131592]
[142.65702820 123.81820679]
[133.42047119 135.63708496]
[136.40434265 150.33731079]
[139.38821411 165.03752136]
[142.37208557 179.73774719]
[152.69996643 191.72297668]
[147.64906311 205.73503113]
[150.63293457 220.43525696]
[160.96080017 232.42048645]
[155.90991211 246.43254089]
[158.89378357 261.13275146]
[161.96960449 275.81402588]
[165.13722229 290.47573853]
[168.30485535 305.13748169]
[177.74497986 310.47445679]
[182.60241699 319.92419434]
[181.49467468 330.27090454]
[175.02505493 338.13925171]
[177.82470703 352.87567139]
[180.62437439 367.61206055]
[194.71656799 374.10742188]
[202.27015686 387.66186523]
[200.38059998 403.06344604]
[189.77449036 414.38998413]
[174.53009033 417.28613281]
[160.50917053 410.63830566]
[153.10307312 397.00271606]
[155.15959167 381.62252808]
[165.88795471 370.41171265]
[163.08830261 355.67532349]
[160.28865051 340.93890381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 233]
[2 232]
[3 231]
[5 230]
[6 229]
[8 227]
[9 226]
[11 224]
[12 223]
[13 222]
[14 221]
[20 83]
[21 82]
[22 81]
[23 80]
[24 79]
[25 78]
[26 77]
[27 76]
[28 75]
[30 73]
[31 72]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[86 103]
[87 102]
[88 101]
[89 100]
[90 98]
[91 97]
[92 96]
[107 122]
[108 121]
[109 120]
[110 119]
[123 150]
[124 149]
[125 148]
[126 147]
[127 146]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[153 220]
[154 219]
[155 218]
[156 217]
[157 216]
[158 215]
[159 214]
[160 213]
[161 212]
[162 211]
[163 210]
[171 201]
[172 200]
[174 198]
[175 197]
[176 196]
[177 195]
[178 192]
[179 191]
[180 190]
[181 189]
[237 250]
[238 249]
[239 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
