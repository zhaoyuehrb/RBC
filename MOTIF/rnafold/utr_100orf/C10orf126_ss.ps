%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGAUGAAGAGCAUGAAUGCGAAUGUACAGCACUGAGCUCGCGUCUGCCACAUGAGAUGGGCCUCUUUCUGUCGCCCAGGCUGGAGUGCAAUGGUGUGAUCAUAGCUCACUGCAGCCUCAACCUCCUGAGCUCAAAUAGUCCUCCUGCCUCAGCUUCCUGAGUUGCGACUACAGCCAUGAACCACUGCAUCCAGUUCAGCCCUCAGAGCCUGCAGAGGUGGCUCAUCCUUCCCUGUUAUGAUCUGAAACUACC\
CAUAUGGGCCAACACCACAGAGU\
) } def
/len { sequence length } bind def

/coor [
[185.85791016 220.79736328]
[179.17626953 207.36770630]
[172.49464417 193.93804932]
[165.81301880 180.50837708]
[159.13139343 167.07872009]
[152.44976807 153.64904785]
[137.31776428 144.72833252]
[138.66133118 126.34494019]
[131.82890320 112.99136353]
[124.32902527 113.03359222]
[116.90254974 126.06614685]
[109.32926178 113.11804199]
[101.82938385 113.16026306]
[95.14775848 126.58992767]
[88.46612549 140.01959229]
[81.78450012 153.44924927]
[89.08023834 167.14421082]
[86.89957428 182.50729370]
[76.08103180 193.63108826]
[60.78455353 196.23826599]
[46.89194870 189.32630920]
[39.74520493 175.55300903]
[42.09239578 160.21449280]
[53.03097534 149.20870972]
[68.35483551 146.76762390]
[75.03646088 133.33796692]
[81.71809387 119.90830231]
[88.39971924 106.47863770]
[75.96995544 114.87512207]
[61.00128937 113.90609741]
[49.75786591 103.97708130]
[46.94487000 89.24320221]
[53.73950195 75.87036133]
[67.29831696 69.45486450]
[81.94716644 72.68149567]
[91.55620575 84.20114899]
[88.86835480 69.44393158]
[86.18050385 54.68671036]
[83.49265289 39.92949295]
[80.80480194 25.17227554]
[76.20520782 17.32737350]
[78.17075348 10.23382378]
[75.64923859 -4.55272293]
[73.12772369 -19.33926964]
[63.18070602 -31.64241600]
[68.66844177 -45.48922348]
[66.14692688 -60.27576828]
[63.62541199 -75.06231689]
[61.10389709 -89.84886169]
[58.58238602 -104.63541412]
[41.93724060 -110.37575531]
[30.56879807 -123.70364380]
[27.55594635 -140.86972046]
[33.64359283 -157.10502625]
[47.06112289 -167.94587708]
[44.20727921 -182.67189026]
[41.35343552 -197.39791870]
[38.49959183 -212.12393188]
[33.13192368 -208.01583862]
[26.22237396 -205.51472473]
[11.22261143 -205.59918213]
[-3.77715087 -205.68362427]
[-18.77691269 -205.76808167]
[-33.77667618 -205.85252380]
[-40.90931702 -192.31059265]
[-53.52478027 -183.64407349]
[-68.72412109 -181.84445190]
[-83.01464081 -187.32528687]
[-93.11248779 -198.82711792]
[-96.69725037 -213.70690918]
[-92.94517517 -228.54537964]
[-82.71845245 -239.93278503]
[-68.36712646 -245.25234985]
[-53.18901062 -243.28170776]
[-40.67193222 -234.47367859]
[-33.69222260 -220.85229492]
[-18.69246292 -220.76783752]
[-3.69269991 -220.68339539]
[11.30706215 -220.59893799]
[26.30682373 -220.51449585]
[37.23672867 -230.78761292]
[38.08079529 -245.76385498]
[38.92486572 -260.74008179]
[39.76893234 -275.71630859]
[40.61299896 -290.69256592]
[41.45706940 -305.66879272]
[42.30113602 -320.64501953]
[42.80774689 -335.63644409]
[42.97664642 -350.63549805]
[43.14554596 -365.63455200]
[43.31444550 -380.63360596]
[43.48334503 -395.63265991]
[35.90192413 -409.51907349]
[43.78204346 -422.15841675]
[43.95094299 -437.15747070]
[44.11984253 -452.15652466]
[44.28874207 -467.15557861]
[42.07898331 -470.78964233]
[41.20421219 -474.55911255]
[41.54632950 -478.03454590]
[42.86182404 -480.86712646]
[44.81816864 -482.82217407]
[45.66223907 -497.79840088]
[46.50630569 -512.77465820]
[47.35037231 -527.75085449]
[40.40188599 -541.96453857]
[48.84310532 -554.23626709]
[49.68717194 -569.21252441]
[50.53124237 -584.18878174]
[36.13540268 -595.26574707]
[31.34263611 -612.62268066]
[37.89881897 -629.22363281]
[52.98882294 -638.45721436]
[53.49543381 -653.44866943]
[54.00204468 -668.44006348]
[54.50865936 -683.43151855]
[55.01527023 -698.42297363]
[55.52188110 -713.41442871]
[52.69274139 -722.05700684]
[56.11954498 -728.57153320]
[56.79492569 -743.55633545]
[57.47031021 -758.54113770]
[44.10440063 -765.82904053]
[35.26421738 -778.14721680]
[32.65964508 -793.02124023]
[36.75452805 -807.49169922]
[46.68512726 -818.70294189]
[60.44166565 -824.46691895]
[61.11705017 -839.45166016]
[61.79243088 -854.43646240]
[62.46781540 -869.42126465]
[63.05882263 -884.40960693]
[63.56543350 -899.40106201]
[49.59435654 -905.33178711]
[38.71186447 -915.91174316]
[32.38972473 -929.71008301]
[31.48295593 -944.86077881]
[36.11418915 -959.31469727]
[45.65709305 -971.11712646]
[58.82106018 -978.67187500]
[73.82577515 -980.95727539]
[88.64198303 -977.66412354]
[101.26589966 -969.23791504]
[109.99024963 -956.81817627]
[113.63513184 -942.08453369]
[111.70761871 -927.02966309]
[104.46837616 -913.68957520]
[92.89646149 -903.86846924]
[78.55687714 -898.89440918]
[78.05026245 -883.90301514]
[80.95347595 -877.13891602]
[77.45259857 -868.74584961]
[76.77722168 -853.76110840]
[76.10183716 -838.77630615]
[75.42645264 -823.79150391]
[88.60869598 -816.81341553]
[97.49046326 -804.75421143]
[100.26699066 -789.97412109]
[96.33491516 -775.39471436]
[86.42243195 -763.92169189]
[72.45509338 -757.86572266]
[71.77971649 -742.88092041]
[71.10433197 -727.89617920]
[70.51332092 -712.90777588]
[70.00671387 -697.91638184]
[69.50009918 -682.92492676]
[68.99348450 -667.93347168]
[68.48687744 -652.94201660]
[67.98026276 -637.95056152]
[78.51963043 -632.01623535]
[85.59028625 -622.11431885]
[87.80840302 -610.07769775]
[84.69538879 -598.16644287]
[76.77953339 -588.64349365]
[65.50747681 -583.34466553]
[64.66340637 -568.36846924]
[63.81933594 -553.39221191]
[70.82820129 -540.24975586]
[62.32660675 -526.90679932]
[61.48254013 -511.93057251]
[60.63846970 -496.95434570]
[59.79440308 -481.97811890]
[59.28778839 -466.98666382]
[59.11889267 -451.98760986]
[58.94999313 -436.98855591]
[58.78109360 -421.98953247]
[66.37459564 -409.17593384]
[58.48239517 -395.46374512]
[58.31349564 -380.46472168]
[58.14459610 -365.46566772]
[57.97569656 -350.46661377]
[57.80679703 -335.46755981]
[59.62669754 -333.38488770]
[60.74795914 -330.46997070]
[60.85467148 -326.97937012]
[59.72742081 -323.27755737]
[57.27737045 -319.80093384]
[56.43330002 -304.82470703]
[55.58923340 -289.84848022]
[54.74516678 -274.87225342]
[53.90109634 -259.89602661]
[53.05702972 -244.91978455]
[52.21295929 -229.94355774]
[53.22560883 -214.97776794]
[56.07945251 -200.25175476]
[58.93329620 -185.52574158]
[61.78713989 -170.79972839]
[74.06352997 -168.00378418]
[84.41660309 -160.75692749]
[91.29661560 -150.10098267]
[93.65755463 -137.59121704]
[91.11606598 -125.06929779]
[84.01315308 -114.39222717]
[73.36893463 -107.15692139]
[75.89044189 -92.37037659]
[78.41195679 -77.58383179]
[80.93347168 -62.79728317]
[83.45498657 -48.01073456]
[93.22164917 -36.76522446]
[87.91427612 -21.86078262]
[90.43578339 -7.07423592]
[92.95729828 7.71231079]
[95.56201935 22.48442650]
[98.24987030 37.24164581]
[100.93772125 51.99886322]
[103.62557220 66.75608063]
[106.31342316 81.51329803]
[145.18247986 106.15894318]
[152.01490784 119.51251984]
[164.00389099 124.19853210]
[169.42817688 135.42913818]
[165.87942505 146.96742249]
[172.56105042 160.39709473]
[179.24267578 173.82675171]
[185.92431641 187.25640869]
[192.60594177 200.68608093]
[199.28756714 214.11573792]
[210.68330383 214.01828003]
[221.25152588 218.14393616]
[229.49249268 225.86642456]
[234.25189209 236.05195618]
[234.88253784 247.22564697]
[231.33206177 257.78503418]
[224.14501953 266.22985840]
[230.36926270 279.87753296]
[236.59350586 293.52520752]
[242.81774902 307.17288208]
[260.41299438 306.16632080]
[277.00335693 312.00738525]
[290.03436279 323.76773071]
[297.51074219 339.60989380]
[298.30194092 357.07424927]
[292.31301880 373.46096802]
[280.49502563 386.24734497]
[287.17666626 399.67700195]
[293.85830688 413.10665894]
[307.81726074 421.71362305]
[307.07247925 438.09585571]
[292.39013672 445.40072632]
[278.87417603 436.11361694]
[280.42861938 419.78829956]
[273.74700928 406.35864258]
[267.06536865 392.92895508]
[254.69332886 394.85559082]
[242.25889587 393.23953247]
[230.75764465 388.20016479]
[221.11318970 380.13122559]
[214.10313416 369.67028809]
[210.29629517 357.64825439]
[210.00660706 345.02334595]
[213.26719666 332.80484009]
[219.82701111 321.97232056]
[229.17007446 313.39709473]
[222.94584656 299.74945068]
[216.72160339 286.10177612]
[210.49736023 272.45410156]
[191.96330261 269.76229858]
[178.72393799 256.30294800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 237]
[2 236]
[3 235]
[4 234]
[5 233]
[6 232]
[8 229]
[9 228]
[13 28]
[14 27]
[15 26]
[16 25]
[36 227]
[37 226]
[38 225]
[39 224]
[40 223]
[42 222]
[43 221]
[44 220]
[46 218]
[47 217]
[48 216]
[49 215]
[50 214]
[55 207]
[56 206]
[57 205]
[58 204]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[81 203]
[82 202]
[83 201]
[84 200]
[85 199]
[86 198]
[87 197]
[88 192]
[89 191]
[90 190]
[91 189]
[92 188]
[94 186]
[95 185]
[96 184]
[97 183]
[102 182]
[103 181]
[104 180]
[105 179]
[107 177]
[108 176]
[109 175]
[113 169]
[114 168]
[115 167]
[116 166]
[117 165]
[118 164]
[120 163]
[121 162]
[122 161]
[128 155]
[129 154]
[130 153]
[131 152]
[132 150]
[133 149]
[244 276]
[245 275]
[246 274]
[247 273]
[254 263]
[255 262]
[256 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
