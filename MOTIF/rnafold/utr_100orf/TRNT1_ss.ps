%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGGUGACGUCACCGCGUUCACCAGCCCGGAAGUGCGCGUGGCGGCGGUGGCGGCUGCGGCAACAGCGGGGCCGAUGUGUAGUUGGUGACUGCCUCUCCAGAUGCUGAGGUGCCUGUAUCAUUGGCACAGGCCAGUGCUGAACCGUAGGUGGAGUAGGCUGUGCCUUCCGAAGCAGUAUCUAUUCACAAUGAAGUUGCAGU\
) } def
/len { sequence length } bind def

/coor [
[91.25300598 130.52059937]
[84.95466614 144.13423157]
[78.65632629 157.74786377]
[72.35799408 171.36148071]
[66.05965424 184.97511292]
[59.76131821 198.58874512]
[53.46298218 212.20237732]
[47.16464615 225.81600952]
[40.97183990 239.47796631]
[34.88492966 253.18743896]
[28.79802132 266.89691162]
[31.06614494 283.13845825]
[17.96998024 293.00872803]
[2.98174047 286.35406494]
[1.52004039 270.02017212]
[15.08855247 260.80999756]
[21.17546082 247.10054016]
[27.26236916 233.39106750]
[27.10335159 225.99728394]
[33.55101395 219.51766968]
[39.84934998 205.90403748]
[46.14768982 192.29042053]
[52.44602585 178.67678833]
[58.74436188 165.06315613]
[65.04269409 151.44952393]
[71.34103394 137.83589172]
[77.63937378 124.22225952]
[69.22156525 111.80692291]
[54.24356461 112.61900330]
[39.26556396 113.43109131]
[32.25482941 127.02509308]
[19.46549797 135.23056030]
[4.38638115 135.92811584]
[-8.92819881 129.03044128]
[-16.94848061 116.47892761]
[-31.92648315 117.29100800]
[-46.90448380 118.10309601]
[-55.31041718 121.69447327]
[-62.12020493 118.81002808]
[-77.10897827 119.39022827]
[-92.09775543 119.97042847]
[-107.08653259 120.55062866]
[-122.07530212 121.13082123]
[-137.06407166 121.71102142]
[-150.55464172 129.97631836]
[-163.57167053 122.73709869]
[-178.56044006 123.31729889]
[-192.13871765 132.51309204]
[-206.77146912 125.10941315]
[-207.40579224 108.72254181]
[-193.38914490 100.20987701]
[-179.14064026 108.32852936]
[-164.15187073 107.74832916]
[-151.73339844 99.52452850]
[-137.64427185 106.72224426]
[-122.65550232 106.14205170]
[-107.66672516 105.56185150]
[-92.67795563 104.98165131]
[-77.68917847 104.40145111]
[-62.70040512 103.82125092]
[-47.71656799 103.12509155]
[-32.73856735 102.31301117]
[-17.76056480 101.50092316]
[-11.14435577 88.15583801]
[1.34640348 79.85903931]
[16.41254616 78.92216492]
[30.01407242 85.69676971]
[38.45347977 98.45308685]
[53.43148041 97.64100647]
[68.40948486 96.82891846]
[73.60687256 90.47753143]
[79.78556061 86.39286041]
[70.52423859 74.59337616]
[61.26291656 62.79388809]
[52.00159454 50.99440002]
[42.74027252 39.19491196]
[33.47895050 27.39542389]
[17.78729057 24.05605125]
[10.74370193 9.64191246]
[17.75142097 -4.78969955]
[33.43472672 -8.16808701]
[45.76272583 2.09836006]
[45.27843857 18.13410187]
[54.53976059 29.93358994]
[63.80108261 41.73307800]
[73.06240082 53.53256607]
[82.32372284 65.33205414]
[91.58504486 77.13154602]
[108.49149323 77.15985107]
[121.31036377 88.18280029]
[136.03056335 85.29914093]
[150.75077820 82.41548920]
[165.47099304 79.53183746]
[180.19119263 76.64818573]
[189.02224731 63.81657410]
[203.99171448 61.10183334]
[216.17027283 69.59996796]
[230.89047241 66.71631622]
[242.94580078 56.47034454]
[256.92312622 61.61658859]
[271.64331055 58.73293686]
[281.13366699 44.04124832]
[297.98092651 40.81908798]
[311.67279053 50.57997894]
[326.34658813 47.46887207]
[332.73937988 33.45321655]
[346.00415039 25.97667313]
[360.95111084 27.72387314]
[371.87240601 37.81660461]
[386.54623413 34.70550156]
[401.22006226 31.59439468]
[415.89385986 28.48328781]
[430.56768799 25.37218094]
[445.24151611 22.26107597]
[452.99340820 17.41691780]
[460.16641235 19.21721840]
[474.88662720 16.33356476]
[489.60684204 13.44991207]
[501.66217041 3.20393944]
[515.63946533 8.35018158]
[530.35968018 5.46652889]
[537.27380371 -9.96680832]
[551.87835693 -18.15871239]
[568.32330322 -16.05483437]
[580.15557861 -4.68036318]
[594.82940674 -7.79146910]
[609.50323486 -10.90257549]
[624.17706299 -14.01368141]
[638.85083008 -17.12478828]
[653.52465820 -20.23589325]
[668.19848633 -23.34700012]
[675.95037842 -28.19115829]
[683.12341309 -26.39085770]
[697.84362793 -29.27450943]
[703.07775879 -33.33063889]
[708.72631836 -34.02531433]
[713.06359863 -32.01221085]
[727.86602783 -34.43893814]
[742.66839600 -36.86566925]
[757.47082520 -39.29240036]
[766.69470215 -51.84457016]
[781.74102783 -54.09475708]
[793.65075684 -45.22380066]
[808.45318604 -47.65053177]
[823.25555420 -50.07726288]
[837.90783691 -58.60643768]
[850.15985107 -46.88787842]
[842.29095459 -31.87066269]
[825.68231201 -35.27486420]
[810.87988281 -32.84813309]
[796.07751465 -30.42140388]
[787.62371826 -18.21202087]
[772.64654541 -15.54010582]
[759.89752197 -24.49000168]
[745.09515381 -22.06327057]
[730.29272461 -19.63654137]
[715.49035645 -17.20981026]
[700.72729492 -14.55430126]
[686.00708008 -11.67064857]
[671.30963135 -8.67317867]
[656.63580322 -5.56207275]
[641.96197510 -2.45096684]
[627.28814697 0.66013926]
[612.61431885 3.77124548]
[597.94049072 6.88235140]
[583.26666260 9.99345779]
[578.98321533 22.64212799]
[568.92742920 31.59313011]
[555.65588379 34.42744064]
[542.61444092 30.29976463]
[533.24334717 20.18673706]
[518.52313232 23.07039070]
[507.52069092 33.11010361]
[492.49050903 28.17012024]
[477.77029419 31.05377388]
[463.05007935 33.93742752]
[448.35263062 36.93489456]
[433.67880249 40.04600143]
[419.00497437 43.15710831]
[404.33114624 46.26821518]
[389.65734863 49.37932205]
[374.98352051 52.49042511]
[369.09741211 66.14662170]
[356.14541626 73.80888367]
[340.98794556 72.35836029]
[329.45770264 62.14269257]
[314.78387451 65.25379944]
[309.33868408 76.93605804]
[297.98873901 83.44444275]
[284.76824951 82.20722961]
[274.52697754 73.45314026]
[259.80676270 76.33679962]
[248.80433655 86.37651062]
[233.77413940 81.43652344]
[219.05392456 84.32018280]
[210.98202515 96.78533173]
[196.09471130 99.91946411]
[183.07484436 91.36839294]
[168.35464478 94.25204468]
[153.63442993 97.13569641]
[138.91423035 100.01935577]
[124.19401550 102.90300751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 18]
[10 17]
[11 16]
[28 70]
[29 69]
[30 68]
[35 63]
[36 62]
[37 61]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[46 53]
[47 52]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[90 202]
[91 201]
[92 200]
[93 199]
[94 198]
[97 195]
[98 194]
[100 192]
[101 191]
[104 187]
[105 186]
[109 182]
[110 181]
[111 180]
[112 179]
[113 178]
[114 177]
[116 176]
[117 175]
[118 174]
[120 172]
[121 171]
[125 166]
[126 165]
[127 164]
[128 163]
[129 162]
[130 161]
[131 160]
[133 159]
[134 158]
[137 157]
[138 156]
[139 155]
[140 154]
[143 151]
[144 150]
[145 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
