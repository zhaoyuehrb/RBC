%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUGUCUGACCUUGGCUAAGAGGGAAGGAGAUCCUAUCAGUGGGGAGAGUGUGAGGGGAGAGGGAGAGCCUGCAGGGCAGGCGCUGAGGAUCACGCAUCCUGUGACUCUCCCCUGUCCCCCGCCACCCUCUGAACCACUGGCCACCAUGGCUACUUCAAAGUUGCCCGUGGUGCCUGGGGAGGAGGAAAACACCAUCCUUAUGGCCAAGGAAAGGCUGGAGGCCCUGCGCACAGCCUUUGAGUCGG\
) } def
/len { sequence length } bind def

/coor [
[153.58949280 519.44714355]
[147.15434265 505.89764404]
[145.16798401 491.02975464]
[147.82052612 476.26614380]
[154.85812378 463.01953125]
[165.60736084 452.55752563]
[179.03965759 445.88119507]
[193.86967468 443.62936401]
[208.67832947 446.01754761]
[222.04861450 452.81723022]
[232.70268250 463.37985229]
[227.85110474 449.18612671]
[222.99954224 434.99237061]
[218.14797974 420.79864502]
[213.29640198 406.60488892]
[208.44483948 392.41116333]
[203.59326172 378.21740723]
[198.74169922 364.02368164]
[193.89012146 349.82992554]
[183.18302917 344.23379517]
[179.01646423 332.46792603]
[184.13272095 320.64517212]
[179.46133423 306.39111328]
[174.78994751 292.13705444]
[170.11857605 277.88299561]
[165.44718933 263.62893677]
[154.13105774 253.94418335]
[157.18586731 238.42070007]
[152.51448059 224.16664124]
[135.45635986 219.52294922]
[124.51873016 205.43365479]
[124.24442291 187.44168091]
[134.93299866 172.77073669]
[129.90202332 158.63958740]
[124.87104797 144.50843811]
[119.84007263 130.37730408]
[81.90030670 122.64410400]
[79.66806030 92.43017578]
[68.28668976 82.65959167]
[56.90531921 72.88900757]
[45.52394867 63.11841583]
[34.14257812 53.34782791]
[22.76120567 43.57724380]
[11.37983322 33.80665588]
[-6.04798508 35.44846344]
[-19.00782013 24.19042778]
[-19.78777122 7.37979078]
[-31.29199791 -2.24584055]
[-42.79622269 -11.87147141]
[-54.30044937 -21.49710274]
[-69.84956360 -24.41868401]
[-74.64562988 -38.51999664]
[-86.14985657 -48.14562607]
[-97.65408325 -57.77125931]
[-117.66014862 -60.37026215]
[-123.45117188 -78.83345795]
[-135.19555664 -88.16456604]
[-146.93992615 -97.49568176]
[-158.68431091 -106.82678986]
[-170.42868042 -116.15789795]
[-186.04681396 -118.68463898]
[-191.19857788 -132.65992737]
[-202.94294739 -141.99104309]
[-214.68733215 -151.32214355]
[-226.43170166 -160.65325928]
[-239.50053406 -168.01570129]
[-253.56681824 -173.22528076]
[-269.19515991 -170.76248169]
[-278.44299316 -182.43840027]
[-292.50927734 -187.64797974]
[-306.57553101 -192.85755920]
[-320.64181519 -198.06713867]
[-334.70809937 -203.27671814]
[-348.77438354 -208.48629761]
[-365.72750854 -208.31735229]
[-370.58294678 -224.56114197]
[-356.31805420 -233.72355652]
[-343.56481934 -222.55258179]
[-329.49853516 -217.34300232]
[-315.43225098 -212.13342285]
[-301.36596680 -206.92384338]
[-287.29968262 -201.71426392]
[-273.23339844 -196.50468445]
[-258.61117554 -199.34010315]
[-248.35723877 -187.29156494]
[-234.29095459 -182.08198547]
[-225.26036072 -194.05897522]
[-234.13851929 -206.14939880]
[-243.01666260 -218.23982239]
[-251.89482117 -230.33024597]
[-266.29931641 -236.87405396]
[-267.59579468 -251.71212769]
[-276.47396851 -263.80255127]
[-285.35211182 -275.89297485]
[-294.23028564 -287.98339844]
[-303.10842896 -300.07382202]
[-318.68493652 -303.91470337]
[-325.26263428 -318.54730225]
[-317.79571533 -332.74676514]
[-302.01214600 -335.62045288]
[-290.01971436 -324.96392822]
[-291.01800537 -308.95196533]
[-282.13986206 -296.86154175]
[-273.26168823 -284.77111816]
[-264.38354492 -272.68069458]
[-255.50538635 -260.59027100]
[-241.73591614 -254.91127014]
[-239.80439758 -239.20840454]
[-230.92623901 -227.11798096]
[-222.04809570 -215.02755737]
[-213.16993713 -202.93713379]
[-217.10060120 -172.39762878]
[-205.35621643 -163.06652832]
[-193.61184692 -153.73541260]
[-181.86746216 -144.40431213]
[-167.08937073 -142.54498291]
[-161.09757996 -127.90227509]
[-149.35319519 -118.57116699]
[-137.60882568 -109.24005890]
[-125.86444092 -99.90895081]
[-114.12006378 -90.57783508]
[-104.14370728 -92.64672089]
[-94.46713257 -88.81425476]
[-88.36053467 -80.11680603]
[-88.02845001 -69.27548218]
[-76.52422333 -59.64985275]
[-65.01999664 -50.02422333]
[-50.29374695 -47.79113007]
[-44.67481995 -33.00132751]
[-33.17059326 -23.37569809]
[-21.66636658 -13.75006676]
[-10.16213989 -4.12443590]
[2.37209582 -7.05007982]
[14.48651791 -2.15615916]
[21.68268776 8.98133278]
[21.15042114 22.42528343]
[32.53179169 32.19586945]
[43.91316223 41.96645737]
[55.29453659 51.73704529]
[66.67591095 61.50763321]
[78.05728149 71.27822113]
[89.43865204 81.04880524]
[102.82072449 71.14869690]
[123.46629333 72.32795715]
[135.09152222 62.84882736]
[146.71676636 53.36969757]
[158.34199524 43.89056778]
[169.96722412 34.41143417]
[181.59246826 24.93230438]
[193.21769714 15.45317459]
[204.78265381 5.90060234]
[216.28688049 -3.72502899]
[221.90580750 -18.51483154]
[236.63206482 -20.74792290]
[248.13629150 -30.37355423]
[259.64053345 -39.99918365]
[264.75979614 -55.57882309]
[280.86499023 -58.66992188]
[291.38845825 -46.09262085]
[285.50457764 -30.78537178]
[269.26614380 -28.49495888]
[257.76193237 -18.86932755]
[246.25770569 -9.24369621]
[241.46163940 4.85761642]
[225.91252136 7.77919722]
[214.40829468 17.40482903]
[211.30273438 24.09119987]
[202.69682312 27.07840919]
[191.07159424 36.55754089]
[179.44636536 46.03667068]
[167.82112122 55.51580048]
[156.19589233 64.99493408]
[144.57064819 74.47406006]
[132.94541931 83.95319366]
[139.12159729 97.62268066]
[153.91865540 95.16362762]
[168.71572876 92.70456696]
[181.03085327 81.87545776]
[196.47795105 87.38172913]
[199.16638184 103.55900574]
[186.33050537 113.76549530]
[171.17477417 107.50163269]
[156.37771606 109.96068573]
[141.58065796 112.41973877]
[133.97122192 125.34632111]
[139.00219727 139.47746277]
[144.03317261 153.60861206]
[149.06414795 167.73976135]
[161.38980103 169.65112305]
[171.67892456 176.57325745]
[178.01992798 187.14637756]
[179.26617432 199.33956909]
[175.24284363 210.84078979]
[166.76853943 219.49525452]
[171.43992615 233.74931335]
[183.09017944 244.45361328]
[179.70124817 258.95755005]
[184.37263489 273.21160889]
[189.04400635 287.46566772]
[193.71539307 301.71972656]
[198.38677979 315.97378540]
[212.38551331 327.95413208]
[208.08386230 344.97836304]
[212.93544006 359.17211914]
[217.78700256 373.36584473]
[222.63858032 387.55960083]
[227.49014282 401.75332642]
[232.34170532 415.94708252]
[237.19328308 430.14080811]
[242.04484558 444.33456421]
[246.89642334 458.52828979]
[253.33120728 472.07797241]
[261.26568604 484.80761719]
[269.20013428 497.53729248]
[277.13458252 510.26693726]
[285.06906128 522.99664307]
[293.00350952 535.72625732]
[300.93795776 548.45593262]
[308.87243652 561.18560791]
[324.22854614 562.40856934]
[335.78497314 572.32330322]
[339.24636841 586.96856689]
[333.48925781 600.67962646]
[341.42370605 613.40930176]
[354.93322754 623.65277100]
[348.82986450 639.47003174]
[331.94119263 637.98382568]
[328.69403076 621.34375000]
[320.75958252 608.61407471]
[305.91430664 607.74456787]
[294.29013062 598.18725586]
[290.47802734 583.44543457]
[296.14276123 569.12005615]
[288.20831299 556.39038086]
[280.27383423 543.66076660]
[272.33938599 530.93109131]
[264.40493774 518.20141602]
[256.47045898 505.47174072]
[248.53601074 492.74209595]
[240.60154724 480.01242065]
[242.05514526 494.94183350]
[238.87655640 509.60116577]
[231.36993408 522.58770752]
[220.25358582 532.65881348]
[206.59121704 538.85070801]
[191.69018555 540.57098389]
[176.97636414 537.65496826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 211]
[12 210]
[13 209]
[14 208]
[15 207]
[16 206]
[17 205]
[18 204]
[19 203]
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[28 195]
[29 194]
[33 188]
[34 187]
[35 186]
[36 185]
[38 142]
[39 141]
[40 140]
[41 139]
[42 138]
[43 137]
[44 136]
[47 132]
[48 131]
[49 130]
[50 129]
[52 127]
[53 126]
[54 125]
[56 121]
[57 120]
[58 119]
[59 118]
[60 117]
[62 115]
[63 114]
[64 113]
[65 112]
[66 86]
[67 85]
[69 83]
[70 82]
[71 81]
[72 80]
[73 79]
[74 78]
[87 111]
[88 110]
[89 109]
[90 108]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[144 174]
[145 173]
[146 172]
[147 171]
[148 170]
[149 169]
[150 168]
[151 166]
[152 165]
[154 163]
[155 162]
[156 161]
[175 184]
[176 183]
[177 182]
[212 240]
[213 239]
[214 238]
[215 237]
[216 236]
[217 235]
[218 234]
[219 233]
[223 229]
[224 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
