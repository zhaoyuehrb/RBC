%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAUCAUUGUGAGGAAAACCACUUAGUAUUUUAUAGUGAGGUGACUUUACAAGUAAAGAUCUUCAAGAAGAUUUUUAUGUGAUUUAAAAAAUCAGCUUAGAUGCUUGGAAUUUGGAUUGUUGCAUUCUUGUUCUUUGGCACAUCAAGAGGAAAAGAAGUUUGCUAUGAAAGGUUAGGGUGUUUCAAAGAUGGUUUACCAU\
) } def
/len { sequence length } bind def

/coor [
[90.31316376 723.34606934]
[91.25038910 708.06933594]
[99.18964386 694.98394775]
[112.30656433 687.09692383]
[111.37402344 672.12591553]
[110.44147491 657.15496826]
[109.50893402 642.18395996]
[108.57638550 627.21301270]
[107.64384460 612.24200439]
[95.75688171 606.15521240]
[88.37208557 594.89831543]
[87.50885773 581.35455322]
[93.49958038 569.05651855]
[104.87483978 561.26501465]
[104.17523193 546.28137207]
[103.47563171 531.29766846]
[102.77602386 516.31396484]
[94.45353699 503.96145630]
[101.53877258 489.81542969]
[100.83916473 474.83175659]
[100.13956451 459.84805298]
[96.68481445 453.30838013]
[99.54742432 444.62628174]
[99.08092499 429.63354492]
[86.64413452 423.98120117]
[77.81481171 413.47033691]
[74.36056519 400.11651611]
[77.01104736 386.51275635]
[85.30474091 375.32617188]
[97.66811371 368.77484131]
[97.43483734 353.77664185]
[97.20156097 338.77844238]
[96.96828461 323.78027344]
[96.73500824 308.78207397]
[96.50173187 293.78390503]
[96.26845551 278.78570557]
[96.03517914 263.78753662]
[95.80190277 248.78933716]
[95.56861877 233.79115295]
[95.33534241 218.79296875]
[95.10206604 203.79478455]
[83.51193237 197.16018677]
[76.66020203 185.57113647]
[76.42960358 172.00181580]
[82.98738098 159.99658203]
[94.71366882 152.74412537]
[94.71366882 137.74412537]
[94.71366882 122.74412537]
[94.71366882 107.74412537]
[84.50194550 108.94182587]
[73.66497803 101.97332001]
[60.48457718 94.81252289]
[44.66477203 95.02321625]
[37.17508698 82.14867401]
[23.99468613 74.98787689]
[10.81428528 67.82707977]
[-2.36611581 60.66628265]
[-15.54651737 53.50548172]
[-28.72691727 46.34468460]
[-41.90731812 39.18388748]
[-55.08771896 32.02309036]
[-68.26811981 24.86229134]
[-81.44852448 17.70149231]
[-94.62892151 10.54069424]
[-110.99961090 11.50639629]
[-119.79409790 -2.33517480]
[-111.96536255 -16.74499702]
[-95.56694031 -16.89948082]
[-87.46812439 -2.63970685]
[-74.28772736 4.52109146]
[-61.10732269 11.68188953]
[-47.92692184 18.84268761]
[-34.74652100 26.00348473]
[-21.56612015 33.16428375]
[-8.38571835 40.32508087]
[4.79468203 47.48588181]
[17.97508240 54.64667892]
[31.15548515 61.80747604]
[44.33588409 68.96827698]
[59.21293640 68.24538422]
[67.64537811 81.63211823]
[80.82577515 88.79291534]
[72.69195557 76.18970490]
[61.48648071 66.21788025]
[57.18965530 51.84647369]
[61.08261108 37.36045074]
[72.00463104 27.07894135]
[86.69922638 24.06746864]
[100.78506470 29.22392845]
[110.06233978 41.01087952]
[111.76494598 55.91393661]
[105.38679504 69.48783875]
[102.86746979 84.27475739]
[112.16761017 72.50584412]
[110.52245331 57.01613235]
[120.12177277 45.21326447]
[134.89898682 43.74031067]
[144.19912720 31.97139740]
[153.49926758 20.20248413]
[156.36770630 11.52230835]
[163.03671265 8.32434177]
[172.51875305 -3.29851484]
[181.81889343 -15.06742859]
[190.93489075 -26.97955322]
[200.05087280 -38.89167786]
[209.16687012 -50.80380249]
[211.11889648 -69.11084747]
[227.56806946 -75.21688843]
[236.49769592 -87.26934814]
[245.42733765 -99.32180023]
[254.35696411 -111.37425232]
[263.28659058 -123.42670441]
[261.16049194 -138.85775757]
[270.38812256 -150.95346069]
[285.11236572 -152.88526917]
[294.04199219 -164.93772888]
[302.97164917 -176.99017334]
[311.90127563 -189.04263306]
[309.32708740 -204.63586426]
[318.60073853 -217.43333435]
[334.22033691 -219.84249878]
[346.91903687 -210.43406677]
[349.16293335 -194.78988647]
[339.62075806 -182.19137573]
[323.95373535 -180.11299133]
[315.02407837 -168.06054688]
[306.09445190 -156.00808716]
[297.16482544 -143.95562744]
[299.60467529 -129.30699158]
[290.72042847 -116.95687866]
[275.33905029 -114.49707794]
[266.40942383 -102.44461823]
[257.47979736 -90.39216614]
[248.55015564 -78.33971405]
[239.62051392 -66.28725433]
[241.08981323 -54.27569580]
[233.74279785 -44.16030502]
[221.07899475 -41.68781281]
[211.96299744 -29.77568817]
[202.84701538 -17.86356354]
[193.73101807 -5.95143795]
[193.46279907 -1.17649996]
[190.18734741 3.47883463]
[184.14161682 6.18353176]
[174.65956116 17.80638885]
[165.26818848 29.50262642]
[155.96804810 41.27154160]
[146.66789246 53.04045486]
[148.65098572 67.75788879]
[139.38697815 79.82572937]
[123.93652344 81.80598450]
[114.63638306 93.57489777]
[109.71366882 107.74412537]
[109.71366882 122.74412537]
[109.71366882 137.74412537]
[109.71366882 152.74412537]
[123.52970886 162.49584961]
[128.76152039 178.40229797]
[123.53630829 194.13594055]
[110.10025024 203.56150818]
[110.33353424 218.55969238]
[110.56681061 233.55787659]
[110.80008698 248.55606079]
[111.03336334 263.55426025]
[111.26663971 278.55242920]
[111.49991608 293.55062866]
[111.73319244 308.54879761]
[111.96646881 323.54699707]
[112.19974518 338.54516602]
[112.43302917 353.54336548]
[112.66630554 368.54156494]
[127.19217682 376.43316650]
[135.70922852 390.49172974]
[135.97491455 406.83294678]
[128.01139832 420.99731445]
[114.07366943 429.16705322]
[114.54016876 444.15979004]
[115.12323761 459.14846802]
[115.82284546 474.13214111]
[116.52244568 489.11581421]
[124.89497375 502.54010010]
[117.75969696 515.61437988]
[118.45930481 530.59808350]
[119.15891266 545.58172607]
[119.85852051 560.56542969]
[134.11434937 569.66217041]
[140.08235168 585.30725098]
[135.59664917 601.26751709]
[122.61483002 611.30944824]
[123.54737091 626.28045654]
[124.47991943 641.25140381]
[125.41246033 656.22241211]
[126.34500122 671.19342041]
[127.27754974 686.16436768]
[141.27183533 692.36267090]
[150.77360535 704.36157227]
[153.59941101 719.40399170]
[149.09991455 734.03314209]
[138.30905151 744.88745117]
[123.70649719 749.47265625]
[108.64780426 746.73510742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[14 185]
[15 184]
[16 183]
[17 182]
[19 180]
[20 179]
[21 178]
[23 177]
[24 176]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[46 156]
[47 155]
[48 154]
[49 153]
[51 82]
[52 81]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[93 152]
[94 151]
[97 148]
[98 147]
[99 146]
[101 145]
[102 144]
[103 141]
[104 140]
[105 139]
[106 138]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[115 128]
[116 127]
[117 126]
[118 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
