%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCGGAAGCGUGGGUCUGGCGGCUGCACCGGUUCGCGGUCGGCGCGAGAACAAGCAGGGUGGCGCGGGUCCGGGCAUGAAGCUGGGCCGGGCCGUGCUGGGCCUGCUGCUGCUGGCGCCGUCCGUGGUGCAGGCGGUGGAGCCCAUCAGCCUGGGACUGGCCCUGGCCGGCGUCC\
) } def
/len { sequence length } bind def

/coor [
[109.14552307 212.42501831]
[97.08258820 222.63584900]
[81.33979797 221.24298096]
[71.25707245 209.07276917]
[72.81630707 193.34558105]
[85.09243774 183.39208984]
[86.41442871 168.45045471]
[87.73641205 153.50881958]
[81.15090942 140.14916992]
[90.07434082 127.08460236]
[91.39633179 112.14296722]
[89.67928314 97.24156952]
[84.99370575 82.99217224]
[80.30812073 68.74277496]
[75.62253571 54.49337769]
[70.93695831 40.24398041]
[66.12580872 26.03648758]
[61.18947601 11.87200260]
[56.25314331 -2.29248142]
[51.31681061 -16.45696640]
[39.46900558 -26.94219398]
[42.58692551 -41.50680542]
[37.65059280 -55.67128754]
[25.80278397 -66.15651703]
[28.92070580 -80.72112274]
[23.98437119 -94.88561249]
[19.04803848 -109.05009460]
[14.11170578 -123.21457672]
[9.17537308 -137.37905884]
[4.23903942 -151.54354858]
[-0.69729358 -165.70803833]
[-9.61396694 -153.64598083]
[-24.59618568 -152.91583252]
[-34.64350891 -164.05366516]
[-32.37885666 -178.88171387]
[-19.46501350 -186.51275635]
[-5.38397264 -181.34402466]
[-9.05274582 -195.88844299]
[-12.72151947 -210.43286133]
[-16.39029312 -224.97727966]
[-27.26790810 -236.46588135]
[-22.87850380 -250.69903564]
[-26.54727745 -265.24343872]
[-30.21605110 -279.78787231]
[-33.88482285 -294.33227539]
[-37.55359650 -308.87670898]
[-41.22237015 -323.42111206]
[-52.09998703 -334.90972900]
[-47.71058273 -349.14288330]
[-51.37935638 -363.68728638]
[-66.06533051 -367.96154785]
[-76.57069397 -378.94036865]
[-80.14645386 -393.60598755]
[-75.92957306 -407.99603271]
[-65.14865875 -418.27404785]
[-68.81742859 -432.81848145]
[-72.48620605 -447.36288452]
[-76.15497589 -461.90731812]
[-79.82375336 -476.45172119]
[-83.49252319 -490.99615479]
[-96.62263489 -503.88677979]
[-91.21333313 -520.56781006]
[-95.13822174 -535.04516602]
[-99.06311035 -549.52258301]
[-102.98799896 -564.00000000]
[-106.91288757 -578.47741699]
[-110.83777618 -592.95483398]
[-114.76266479 -607.43218994]
[-118.68755341 -621.90960693]
[-123.96860504 -629.40051270]
[-122.55154419 -636.67718506]
[-126.22032166 -651.22161865]
[-129.88909912 -665.76605225]
[-133.55786133 -680.31048584]
[-137.22663879 -694.85485840]
[-150.35675049 -707.74554443]
[-144.94744873 -724.42651367]
[-148.87234497 -738.90393066]
[-162.70539856 -746.54736328]
[-167.00177002 -761.75646973]
[-159.21250916 -775.50793457]
[-143.95883179 -779.64324951]
[-130.29048157 -771.70904541]
[-126.31665039 -756.41253662]
[-134.39492798 -742.82879639]
[-130.47004700 -728.35144043]
[-120.12250519 -722.04962158]
[-116.74626923 -709.99694824]
[-122.68222046 -698.52368164]
[-119.01345062 -683.97924805]
[-115.34467316 -669.43481445]
[-111.67590332 -654.89038086]
[-108.00712585 -640.34600830]
[-104.21015167 -625.83453369]
[-100.28526306 -611.35711670]
[-96.36037445 -596.87969971]
[-92.43548584 -582.40228271]
[-88.51059723 -567.92486572]
[-84.58570862 -553.44750977]
[-80.66082001 -538.97009277]
[-76.73593140 -524.49267578]
[-66.38838959 -518.19091797]
[-63.01215363 -506.13818359]
[-68.94810486 -494.66491699]
[-65.27933502 -480.12048340]
[-61.61055756 -465.57608032]
[-57.94178391 -451.03164673]
[-54.27301025 -436.48724365]
[-50.60423660 -421.94281006]
[-36.23820114 -418.00802612]
[-25.70045471 -407.33978271]
[-21.89230537 -392.73278809]
[-25.93338394 -378.08468628]
[-36.83493805 -367.35607910]
[-33.16616440 -352.81164551]
[-22.55096436 -342.36334229]
[-26.67795372 -327.08990479]
[-23.00918007 -312.54547119]
[-19.34040642 -298.00106812]
[-15.67163277 -283.45663452]
[-12.00286007 -268.91223145]
[-8.33408642 -254.36779785]
[2.28111434 -243.91950989]
[-1.84587419 -228.64605713]
[1.82289910 -214.10163879]
[5.49167252 -199.55722046]
[9.16044617 -185.01280212]
[13.46719074 -170.64436340]
[18.40352440 -156.47987366]
[23.33985710 -142.31539917]
[28.27618980 -128.15090942]
[33.21252441 -113.98642731]
[38.14885712 -99.82194519]
[43.08518982 -85.65745544]
[54.57991791 -76.18537140]
[51.81507492 -60.60762024]
[56.75140762 -46.44313812]
[68.24613953 -36.97104645]
[65.48129272 -21.39329910]
[70.41762543 -7.22881460]
[75.35396576 6.93566990]
[80.29029846 21.10015488]
[85.47631073 26.39768028]
[85.18635559 35.55839920]
[89.87193298 49.80779648]
[94.55751801 64.05718994]
[99.24310303 78.30658722]
[103.92868042 92.55598450]
[115.69690704 85.42436981]
[131.54949951 86.22880554]
[147.29507446 96.45774078]
[156.19731140 108.53044891]
[165.09954834 120.60315704]
[179.51704407 127.11824036]
[180.84310913 141.95370483]
[189.74533081 154.02641296]
[198.64756775 166.09912109]
[214.23168945 169.90895081]
[220.83854675 184.52841187]
[213.39991760 198.74272156]
[197.62210083 201.64787292]
[185.60847473 191.01527405]
[186.57485962 175.00134277]
[177.67262268 162.92863464]
[168.77040100 150.85592651]
[154.98963928 145.20436096]
[153.02684021 129.50538635]
[144.12460327 117.43267822]
[135.22236633 105.35997009]
[128.00126648 107.38621521]
[113.55906677 111.43871307]
[106.33795929 113.46495819]
[105.01597595 128.40658569]
[111.50692749 142.83497620]
[102.67804718 154.83081055]
[101.35605621 169.77244568]
[100.03407288 184.71406555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 177]
[7 176]
[8 175]
[10 173]
[11 172]
[12 148]
[13 147]
[14 146]
[15 145]
[16 144]
[17 142]
[18 141]
[19 140]
[20 139]
[22 137]
[23 136]
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[30 129]
[31 128]
[37 127]
[38 126]
[39 125]
[40 124]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[49 115]
[50 114]
[55 109]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[62 101]
[63 100]
[64 99]
[65 98]
[66 97]
[67 96]
[68 95]
[69 94]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[77 86]
[78 85]
[151 169]
[152 168]
[153 167]
[155 165]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
