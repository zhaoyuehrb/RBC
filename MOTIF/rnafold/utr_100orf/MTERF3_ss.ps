%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGUAGGGCGGGCUGAGGAGCCGGCGUGCGGCGCGGCGGGACGGGACGUGCGGCCCAGCGAGUUGGUCGGUCCCGGGGUCACCCGCUACGGGAAGCAGGCCUCGCCACAGACUAAGAAAAAUGGCUUUGUCAGCCCAACAGAUACCCAGAUGGUUUAACUCAGUUAAGUUGAGGAGCCUCAUUAAUGCUGCACAACUCACAAAACGUUUUACUAGACCAG\
) } def
/len { sequence length } bind def

/coor [
[505.64059448 473.11196899]
[514.34783936 456.49108887]
[528.79083252 444.46179199]
[523.83666992 430.30355835]
[518.88244629 416.14529419]
[513.92828369 401.98706055]
[508.97409058 387.82879639]
[504.01989746 373.67056274]
[499.06573486 359.51229858]
[472.99853516 357.36013794]
[451.69393921 342.05520630]
[441.27340698 317.89837646]
[444.78088379 291.74771118]
[432.08001709 283.76724243]
[419.37915039 275.78674316]
[406.67831421 267.80627441]
[393.97744751 259.82577515]
[381.27658081 251.84530640]
[368.57571411 243.86482239]
[351.02502441 244.15019226]
[342.56497192 227.78959656]
[329.75341797 219.98803711]
[316.94189453 212.18646240]
[304.13034058 204.38488770]
[291.31881714 196.58331299]
[278.04074097 189.60530090]
[264.34899902 183.47863770]
[250.56863403 189.01376343]
[236.59597778 182.99549866]
[230.88366699 168.50387573]
[217.19192505 162.37721252]
[202.41442871 164.24130249]
[192.97811890 151.54222107]
[179.28636169 145.41555786]
[165.59461975 139.28889465]
[151.90286255 133.16223145]
[137.12536621 135.02633667]
[127.68905640 122.32724762]
[113.99730682 116.20058441]
[100.30556488 110.07392120]
[85.78100586 106.32727814]
[70.83408356 105.06652069]
[55.88716507 103.80576324]
[40.94024277 102.54499817]
[25.99331856 101.28424072]
[11.59165382 107.83425140]
[-0.44025803 99.05459595]
[-15.38718033 97.79383850]
[-30.35731697 96.84778595]
[-45.34403992 96.21684265]
[-59.45745087 103.36682892]
[-71.84800720 95.10103607]
[-86.83473206 94.47010040]
[-101.82145691 93.83916473]
[-113.28587341 104.71770477]
[-129.08232117 104.21991730]
[-139.83905029 92.64112854]
[-139.17428589 76.85083008]
[-127.48241425 66.21711731]
[-111.70001984 67.04879761]
[-101.19052124 78.85243988]
[-86.20379639 79.48337555]
[-71.21707153 80.11431122]
[-58.17561340 72.91919708]
[-44.71310425 81.23011780]
[-29.72637939 81.86106110]
[-26.90180969 79.76544952]
[-22.92480469 78.92870331]
[-18.39572716 79.87633514]
[-14.12642288 82.84691620]
[0.82049984 84.10767365]
[14.15305996 77.46749115]
[27.25407600 86.33731842]
[42.20100021 87.59807587]
[57.14792252 88.85884094]
[72.09484100 90.11959839]
[87.04176331 91.38035583]
[93.07226562 77.64598083]
[82.02891541 67.49490356]
[70.98555756 57.34383011]
[54.87146378 54.29948044]
[49.70700836 38.73476410]
[60.80494308 26.66132164]
[76.74865723 30.49928093]
[81.13663483 46.30047226]
[92.17998505 56.45154953]
[103.22334290 66.60262299]
[114.95081329 57.25027466]
[107.51162720 44.22497559]
[100.07243347 31.19967270]
[84.76187134 27.28021049]
[76.77914429 13.64013767]
[80.86026001 -1.62813115]
[94.58396912 -9.46620369]
[109.80823517 -5.22388935]
[117.50077820 8.58192062]
[113.09774017 23.76048470]
[120.53692627 36.78578568]
[127.97611237 49.81108856]
[126.00663757 68.60664368]
[118.47919464 84.57173157]
[106.43222809 96.38217163]
[120.12397766 102.50883484]
[133.81571960 108.63549805]
[149.57254028 107.20962524]
[158.02952576 119.47048187]
[171.72128296 125.59714508]
[185.41302490 131.72381592]
[199.10478210 137.85047913]
[214.86160278 136.42459106]
[223.31858826 148.68545532]
[237.01033020 154.81211853]
[251.62228394 149.41502380]
[265.42037964 155.82336426]
[270.47564697 169.78689575]
[284.16738892 175.91355896]
[277.16589355 162.64784241]
[278.34793091 147.69450378]
[287.34677124 135.69361877]
[301.36996460 130.36915588]
[316.06604004 133.37332153]
[326.87475586 143.77391052]
[330.44201660 158.34355164]
[325.66094971 172.56120300]
[314.01513672 182.01501465]
[299.12039185 183.77177429]
[311.93191528 191.57334900]
[324.74346924 199.37492371]
[337.55499268 207.17649841]
[350.36654663 214.97807312]
[363.05487061 212.69566345]
[373.56274414 219.44975281]
[376.55618286 231.16395569]
[389.25704956 239.14443970]
[401.95791626 247.12492371]
[414.65878296 255.10540771]
[427.35964966 263.08587646]
[440.06051636 271.06637573]
[452.76138306 279.04684448]
[458.95379639 273.09497070]
[466.07626343 268.30847168]
[473.91244507 264.82949829]
[482.22494507 262.76055908]
[490.76239014 262.16152954]
[499.26718140 263.04779053]
[507.48300171 265.39001465]
[515.16284180 269.11502075]
[522.07623291 274.10806274]
[528.01617432 280.21640015]
[532.80548096 287.25399780]
[536.30181885 295.00711060]
[538.40216064 303.24081421]
[553.40069580 303.03042603]
[561.92822266 299.78347778]
[568.61065674 302.92376709]
[583.61065674 302.92376709]
[598.61065674 302.92376709]
[613.61065674 302.92376709]
[628.61065674 302.92376709]
[634.50415039 299.96109009]
[640.16174316 300.35354614]
[644.02990723 303.14004517]
[659.02398682 303.56072998]
[674.01806641 303.98144531]
[689.01220703 304.40213013]
[704.00628662 304.82281494]
[716.60504150 294.89050293]
[732.19213867 298.68801880]
[738.81054688 313.30227661]
[731.38311768 327.52246094]
[715.60760498 330.44003296]
[703.58557129 319.81692505]
[688.59149170 319.39620972]
[673.59741211 318.97552490]
[658.60327148 318.55484009]
[643.60919189 318.13415527]
[628.61065674 317.92376709]
[613.61065674 317.92376709]
[598.61065674 317.92376709]
[583.61065674 317.92376709]
[568.61065674 317.92376709]
[553.61102295 318.02896118]
[538.61248779 318.23931885]
[537.47845459 323.87155151]
[535.69165039 329.33190918]
[533.27691650 334.54504395]
[530.26751709 339.43905640]
[526.70495605 343.94641113]
[522.63836670 348.00488281]
[518.12396240 351.55844116]
[513.22399902 354.55810547]
[518.17816162 368.71636963]
[523.13232422 382.87463379]
[528.08654785 397.03286743]
[533.04071045 411.19113159]
[537.99493408 425.34936523]
[542.94909668 439.50762939]
[554.50488281 438.87026978]
[565.86633301 441.01159668]
[576.37585449 445.80184937]
[585.42626953 452.95816040]
[592.49639893 462.06112671]
[597.18072510 472.57949829]
[599.21276855 483.90106201]
[598.48028564 495.36837769]
[595.03131104 506.31686401]
[589.07135010 516.11340332]
[580.95068359 524.19281006]
[571.14422607 530.09075928]
[575.09417725 544.56134033]
[579.04418945 559.03192139]
[582.99414062 573.50250244]
[595.01867676 584.65344238]
[591.11059570 600.58013916]
[575.29022217 604.89855957]
[563.83221436 593.16625977]
[568.52355957 577.45245361]
[564.57360840 562.98187256]
[560.62359619 548.51129150]
[556.67364502 534.04071045]
[538.14099121 532.47033691]
[521.59991455 523.89465332]
[509.59378052 509.60375977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[9 191]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[21 130]
[22 129]
[23 128]
[24 127]
[25 126]
[26 116]
[27 115]
[30 112]
[31 111]
[33 109]
[34 108]
[35 107]
[36 106]
[38 104]
[39 103]
[40 102]
[41 77]
[42 76]
[43 75]
[44 74]
[45 73]
[47 71]
[48 70]
[49 66]
[50 65]
[52 63]
[53 62]
[54 61]
[78 87]
[79 86]
[80 85]
[88 99]
[89 98]
[90 97]
[152 183]
[153 182]
[155 181]
[156 180]
[157 179]
[158 178]
[159 177]
[162 176]
[163 175]
[164 174]
[165 173]
[166 172]
[209 220]
[210 219]
[211 218]
[212 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
