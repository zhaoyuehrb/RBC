%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCGAGCCAUGUCGUUGAGCCCAAAGCACACGACGCCCUUCUCCGUGUCCGACAUCCUGAGCCCCAUCGAGGAGACCUACAAGAAGUUCAGCGGCGCCAUGGACGGCG\
) } def
/len { sequence length } bind def

/coor [
[90.07795715 485.86926270]
[92.81289673 466.68148804]
[93.23737335 451.68750000]
[93.66185760 436.69351196]
[94.08634186 421.69952393]
[94.51082611 406.70553589]
[86.39159393 397.61541748]
[86.71241760 385.02850342]
[95.85000610 375.79037476]
[96.69863129 360.81439209]
[97.54725647 345.83843994]
[98.39588165 330.86245728]
[98.60814667 315.86395264]
[98.18366241 300.86996460]
[97.75917816 285.87597656]
[97.33469391 270.88198853]
[96.91021729 255.88798523]
[96.48573303 240.89399719]
[96.06124878 225.89999390]
[95.63676453 210.90600586]
[95.21228027 195.91201782]
[94.78780365 180.91802979]
[79.80380249 178.53028870]
[65.52696991 173.39280701]
[52.45722961 165.68545532]
[41.05220795 155.67810059]
[31.71125603 143.72117615]
[24.76145363 130.23333740]
[20.44614792 115.68686676]
[18.91643906 100.59112549]
[20.22589111 85.47467804]
[24.32865334 70.86684418]
[31.08106804 57.27911377]
[40.24669647 45.18726349]
[30.17822838 34.06854248]
[20.10975838 22.94982338]
[10.04129124 11.83110237]
[-0.02717740 0.71238220]
[-15.43955994 2.51185322]
[-28.94961357 -5.12084579]
[-35.36244583 -19.25078583]
[-32.21219254 -34.44471741]
[-20.71019173 -44.86026001]
[-5.27919531 -46.49243164]
[8.14726257 -38.71362305]
[14.40643501 -24.51494789]
[11.09154320 -9.35608578]
[21.16001129 1.76263452]
[31.22847939 12.88135529]
[41.29694748 24.00007629]
[51.36541748 35.11879730]
[64.55442047 27.07192612]
[79.03027344 21.67271233]
[94.26744080 19.11717606]
[109.71272278 19.49809647]
[124.80538177 22.80164337]
[138.99748230 28.90788078]
[147.39710999 16.48023605]
[155.79673767 4.05259132]
[164.19635010 -8.37505341]
[172.41926575 -20.92031479]
[180.46383667 -33.58068085]
[176.78077698 -48.94982529]
[185.11518860 -62.37789917]
[200.52241516 -65.89826202]
[213.86161804 -57.42235184]
[217.21888733 -41.97876740]
[208.60241699 -28.72991943]
[193.12420654 -25.53611374]
[185.07963562 -12.87574577]
[184.13482666 -5.43382931]
[176.62399292 0.02456861]
[168.22438049 12.45221329]
[159.82475281 24.87985802]
[151.42512512 37.30750275]
[161.79258728 47.49695587]
[170.17410278 59.37379456]
[176.30030823 72.55631256]
[179.97431946 86.62083435]
[181.07804871 101.11534119]
[179.57601929 115.57401276]
[175.51652527 129.53215027]
[169.03001404 142.54115295]
[160.32496643 154.18293762]
[149.68115234 164.08335876]
[137.44064331 171.92420959]
[123.99683380 177.45350647]
[109.78179169 180.49354553]
[110.20627594 195.48753357]
[110.63076019 210.48152161]
[111.05524445 225.47550964]
[111.47972107 240.46951294]
[111.90420532 255.46350098]
[112.32868958 270.45748901]
[112.75317383 285.45147705]
[113.17765808 300.44546509]
[113.60214233 315.43948364]
[116.51049042 320.12811279]
[117.15756989 324.97122192]
[115.88714600 329.04458618]
[113.37185669 331.71109009]
[112.52323151 346.68704224]
[111.67460632 361.66302490]
[110.82598114 376.63900757]
[119.51844025 392.79498291]
[109.50481415 407.13000488]
[109.08033752 422.12399292]
[108.65585327 437.11801147]
[108.23136902 452.11199951]
[107.80688477 467.10598755]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[5 107]
[6 106]
[9 104]
[10 103]
[11 102]
[12 101]
[13 97]
[14 96]
[15 95]
[16 94]
[17 93]
[18 92]
[19 91]
[20 90]
[21 89]
[22 88]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[57 75]
[58 74]
[59 73]
[60 72]
[61 70]
[62 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
