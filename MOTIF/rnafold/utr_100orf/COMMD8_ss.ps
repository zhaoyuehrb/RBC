%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGUCACGUGGGCGAGUCGUAGCUUUAGACAAGCGGCCAGCCUUGACACGUGACCCAAGCCCCAGCUUCGCGCAGGGAUGGAGCCGGAAGAGGGGACGCCCUUGUGGCGGCUGCAGAAGCUGCCGGCCGAGCUGGGCCCGCAGCUUCUUCACAAAAUAAUUGAUGGCAUUUGUGGUC\
) } def
/len { sequence length } bind def

/coor [
[81.21247864 163.89018250]
[68.68547058 155.63948059]
[63.83013153 141.44702148]
[68.67834473 127.25213623]
[81.20242310 118.99481964]
[68.08312988 126.26696777]
[54.96383667 133.53910828]
[41.84453964 140.81124878]
[28.72524452 148.08340454]
[15.60594845 155.35554504]
[2.48665237 162.62768555]
[-10.63264370 169.89982605]
[-23.49015236 177.62539673]
[-36.07020950 185.79498291]
[-48.65026855 193.96456909]
[-52.05369568 209.16505432]
[-64.92803955 217.27096558]
[-79.39839935 213.93264771]
[-91.97845459 222.10223389]
[-104.55851746 230.27180481]
[-117.13857269 238.44139099]
[-129.71862793 246.61097717]
[-127.73191071 261.74426270]
[-132.51617432 276.23815918]
[-143.12149048 287.21496582]
[-157.44218445 292.49517822]
[-172.63485718 291.03042603]
[-185.68298340 283.11154175]
[-193.99588013 270.31079102]
[-195.92298889 255.16983032]
[-191.08169556 240.69487000]
[-180.43322754 229.75991821]
[-166.09185791 224.53614807]
[-150.90507507 226.06071472]
[-137.88821411 234.03092957]
[-125.30815887 225.86134338]
[-112.72810364 217.69175720]
[-100.14804077 209.52217102]
[-87.56798553 201.35258484]
[-84.73207092 186.77543640]
[-72.09047699 178.31111145]
[-56.81985474 181.38452148]
[-44.23979568 173.21493530]
[-31.65973854 165.04534912]
[-30.95434380 162.30480957]
[-29.10556602 159.68290710]
[-26.15463066 157.62223816]
[-22.30412292 156.54171753]
[-17.90478706 156.78053284]
[-4.78549194 149.50839233]
[8.33380413 142.23625183]
[21.45310020 134.96409607]
[34.57239532 127.69195557]
[47.69169235 120.41981506]
[60.81098557 113.14766693]
[73.93028259 105.87552643]
[76.66381836 91.12670135]
[67.02200317 79.63603210]
[57.38018799 68.14537048]
[46.47274399 67.82131195]
[37.73314285 61.66134644]
[33.92134857 51.90730286]
[36.07641220 41.88388443]
[26.84149170 30.06372070]
[17.60656929 18.24356079]
[3.01325870 12.13243389]
[1.27464354 -2.66035128]
[-7.96027851 -14.48051262]
[-23.64443398 -17.85495377]
[-30.65578270 -32.28480148]
[-23.61582184 -46.70071411]
[-7.92500353 -50.04403305]
[4.38001728 -39.75005341]
[3.85988259 -23.71543503]
[13.09480476 -11.89527321]
[27.02757263 -6.62960386]
[29.42673111 9.00863743]
[38.66165161 20.82879829]
[47.89657593 32.64896011]
[66.30021667 38.52818298]
[68.87084961 58.50355530]
[78.51266479 69.99422455]
[88.15447998 81.48488617]
[102.87889099 78.62274933]
[107.51414490 64.35690308]
[112.14939880 50.09105682]
[116.78465271 35.82521057]
[121.41990662 21.55936241]
[111.29604340 8.02601814]
[111.22380829 -8.70881176]
[121.03391266 -22.06143188]
[136.70806885 -26.89644432]
[141.09364319 -41.24101639]
[145.47921753 -55.58558655]
[149.86479187 -69.93016052]
[154.25036621 -84.27472687]
[150.03616333 -100.12314606]
[161.84356689 -111.50370789]
[177.52615356 -106.70906067]
[180.95100403 -90.67153168]
[168.59494019 -79.88915253]
[164.20936584 -65.54457855]
[159.82379150 -51.20001221]
[155.43821716 -36.85543823]
[151.05264282 -22.51086807]
[160.05006409 -12.62644482]
[163.00523376 0.52005076]
[159.04017639 13.51131725]
[149.09016418 22.91592979]
[135.68576050 26.19461632]
[131.05050659 40.46046448]
[126.41524506 54.72631073]
[121.77999115 68.99215698]
[117.14473724 83.25801086]
[118.85791779 84.79906464]
[120.43155670 86.51564026]
[121.84765625 88.39497375]
[136.82710266 87.60993958]
[151.80654907 86.82489777]
[166.78599548 86.03985596]
[181.76542664 85.25482178]
[196.74487305 84.46977997]
[211.72431946 83.68473816]
[226.70376587 82.89970398]
[241.68319702 82.11466217]
[255.05952454 73.66571808]
[268.17428589 80.72632599]
[283.15374756 79.94128418]
[298.13317871 79.15624237]
[313.11260986 78.37120819]
[323.50018311 66.46009827]
[339.27316284 65.46614838]
[351.07379150 75.97904968]
[351.90090942 91.76168060]
[341.26385498 103.45048523]
[325.47335815 104.11071014]
[313.89767456 93.35064697]
[298.91821289 94.13568878]
[283.93878174 94.92072296]
[268.95932007 95.70576477]
[256.65444946 104.09855652]
[242.46824646 97.09410858]
[227.48880005 97.87914276]
[212.50935364 98.66418457]
[197.52990723 99.44922638]
[182.55047607 100.23426056]
[167.57102966 101.01930237]
[152.59158325 101.80434418]
[137.61213684 102.58937836]
[122.63269806 103.37442017]
[115.70646667 116.67958069]
[123.65525818 129.40029907]
[131.60404968 142.12101746]
[139.55284119 154.84175110]
[147.50163269 167.56246948]
[155.45040894 180.28318787]
[163.39920044 193.00390625]
[178.47398376 190.84266663]
[193.12275696 195.00599670]
[204.80754089 204.77255249]
[211.50387573 218.45024109]
[212.05157471 233.66931152]
[206.35575867 247.79295349]
[195.40324402 258.37417603]
[181.09162903 263.57974243]
[165.90049744 262.50769043]
[152.46179199 255.34382629]
[143.10385132 243.32929993]
[139.44799805 228.54571533]
[142.12762451 213.55439758]
[150.67848206 200.95269775]
[142.72969055 188.23197937]
[134.78089905 175.51126099]
[126.83211517 162.79054260]
[118.88332367 150.06980896]
[110.93453979 137.34909058]
[102.98574829 124.62837219]
[109.93614197 137.92092896]
[107.29547119 152.68666077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 56]
[6 55]
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[13 44]
[14 43]
[15 42]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[57 83]
[58 82]
[59 81]
[63 79]
[64 78]
[65 77]
[67 75]
[68 74]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
[117 150]
[118 149]
[119 148]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[127 140]
[128 139]
[129 138]
[130 137]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
