%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGUGCGCGUGUUCCUUUAAGGGGCUGGUCUGGCGGGAGCGCGGGGGUUUUUCUGCUGCCGCUUCCUUUCUGCCCUUUUAAUUUCCCCGAAAUCAGACUGCUGCCUUGGACCGGGACAGCUCGCGGCCCCCGAGAGCUCUAGCCGUCGAGGAGCUGCCUGGGGACGAUGAGGAAAUGGAGGCACAGAGAGGUGAACUUGCCCGAAGUCACUCAGCAGGAUGCAGUGUGUCCAGCUCCAAUACCGAGCCCAGGU\
CUGAGUGCCCAGA\
) } def
/len { sequence length } bind def

/coor [
[55.74705505 546.62756348]
[47.99551392 533.04638672]
[50.83813477 517.66937256]
[62.93271637 507.75698853]
[62.93271637 492.75698853]
[59.80115891 486.09173584]
[63.02133179 477.58206177]
[63.19651031 462.58309937]
[63.37168503 447.58410645]
[63.54686356 432.58514404]
[50.13919830 426.05059814]
[40.86012650 414.29440308]
[37.59214783 399.61511230]
[41.03572464 384.91268921]
[50.55999756 373.11541748]
[64.31755829 366.59692383]
[64.49273682 351.59793091]
[64.66791534 336.59896851]
[52.39301300 345.22027588]
[37.96602249 341.11392212]
[32.07086182 327.32092285]
[39.07320023 314.05566406]
[53.78744888 311.14172363]
[65.31667328 320.73645020]
[66.36689758 305.77325439]
[67.41712952 290.81005859]
[68.46736145 275.84689331]
[69.51759338 260.88369751]
[70.48043060 245.91462708]
[71.35584259 230.94018555]
[72.23125458 215.96575928]
[63.53196335 200.70759583]
[73.82727814 185.42089844]
[74.52774811 170.43727112]
[75.22822571 155.45362854]
[80.99693298 132.14376831]
[91.58506775 111.12192535]
[77.46652222 116.18816376]
[63.34797668 121.25439453]
[49.22943115 126.32062531]
[35.11088943 131.38685608]
[20.99234390 136.45309448]
[6.87379980 141.51931763]
[-7.21492052 146.66790771]
[-21.27333641 151.89868164]
[-35.33175278 157.12944031]
[-45.56752014 169.19342041]
[-60.19400787 166.38005066]
[-74.25242615 171.61080933]
[-82.20915222 185.54171753]
[-98.08321381 187.86418152]
[-109.69737244 176.79663086]
[-108.14225006 160.82913208]
[-94.61080170 152.21058655]
[-79.48319244 157.55239868]
[-65.42477417 152.32162476]
[-56.19456100 140.63179016]
[-40.56252289 143.07102966]
[-26.50410652 137.84025574]
[-12.44569016 132.60949707]
[-7.29085302 127.35021210]
[1.80756807 127.40077209]
[15.92611217 122.33454132]
[30.04465675 117.26831055]
[44.16320038 112.20207977]
[58.28174591 107.13584900]
[72.40029144 102.06961823]
[86.51883698 97.00338745]
[94.49401855 84.29919434]
[92.92028046 69.38197327]
[91.34654999 54.46475983]
[89.77281189 39.54754257]
[88.19908142 24.63032532]
[86.62534332 9.71310902]
[75.45543671 -4.94669151]
[83.24942017 -20.68653870]
[81.50157928 -35.58435822]
[79.75374603 -50.48218155]
[78.00590515 -65.38000488]
[76.25806427 -80.27782440]
[72.65162659 -85.75154877]
[72.36708832 -91.38342285]
[74.64757538 -95.54346466]
[73.24816132 -110.47804260]
[71.84874725 -125.41262054]
[70.44932556 -140.34719849]
[69.04991150 -155.28176880]
[67.65049744 -170.21635437]
[54.24300385 -186.96156311]
[63.77097321 -205.28996277]
[61.84926987 -220.16636658]
[48.39273834 -227.66488647]
[42.00647736 -241.48767090]
[44.94931793 -256.24584961]
[55.88714600 -266.32064819]
[53.96544266 -281.19705200]
[52.04373932 -296.07342529]
[50.12203979 -310.94982910]
[36.66550827 -318.44836426]
[30.27924728 -332.27114868]
[33.22208786 -347.02929688]
[44.15991592 -357.10412598]
[42.23821259 -371.98052979]
[40.31650925 -386.85690308]
[36.12670517 -394.93338013]
[38.46028137 -401.91812134]
[36.71244431 -416.81594849]
[34.96460342 -431.71377563]
[33.21676636 -446.61160278]
[31.46892929 -461.50942993]
[29.72109222 -476.40722656]
[26.11464882 -481.88095093]
[25.83011627 -487.51284790]
[28.11059952 -491.67288208]
[26.71118355 -506.60745239]
[25.31176758 -521.54205322]
[10.63306522 -529.97985840]
[3.95442152 -545.35675049]
[7.73192501 -561.51940918]
[20.28000832 -572.12829590]
[18.70627403 -587.04553223]
[17.13253975 -601.96270752]
[15.55880547 -616.87994385]
[13.98507118 -631.79718018]
[4.84261894 -644.70941162]
[11.20192814 -658.17822266]
[9.62819386 -673.09539795]
[8.05445957 -688.01263428]
[0.37971684 -703.13000488]
[12.78170681 -714.68969727]
[27.32287598 -705.97247314]
[22.97167587 -689.58636475]
[24.54541016 -674.66912842]
[26.11914444 -659.75195312]
[35.14903259 -647.90667725]
[28.90228844 -633.37091064]
[30.47602272 -618.45367432]
[32.04975510 -603.53643799]
[33.62348938 -588.61926270]
[35.19722366 -573.70202637]
[47.31503296 -568.14477539]
[55.17472839 -557.24316406]
[56.64193726 -543.77526855]
[51.22830200 -531.23846436]
[40.24634552 -522.94146729]
[41.64576340 -508.00686646]
[43.04517746 -493.07229614]
[44.61891174 -478.15509033]
[46.36674881 -463.25726318]
[48.11458969 -448.35943604]
[49.86242676 -433.46160889]
[51.61026382 -418.56378174]
[53.35810089 -403.66598511]
[55.19290161 -388.77862549]
[57.11460495 -373.90222168]
[59.03630829 -359.02581787]
[72.17526245 -352.06121826]
[78.77178192 -338.53530884]
[76.10774231 -323.54342651]
[64.99842834 -312.87152100]
[66.92013550 -297.99514771]
[68.84183502 -283.11874390]
[70.76354218 -268.24237061]
[83.90248871 -261.27774048]
[90.49900818 -247.75183105]
[87.83496857 -232.75996399]
[76.72566223 -222.08805847]
[78.64736176 -207.21166992]
[86.41570282 -203.03938293]
[91.48710632 -195.65870667]
[92.63110352 -186.63867188]
[89.46887970 -177.96780396]
[82.58507538 -171.61576843]
[83.98448944 -156.68119812]
[85.38390350 -141.74661255]
[86.78332520 -126.81203461]
[88.18273926 -111.87745667]
[89.58215332 -96.94287872]
[91.15589142 -82.02565765]
[92.90372467 -67.12783813]
[94.65156555 -52.23001862]
[96.39939880 -37.33219910]
[98.14723969 -22.43437767]
[107.42867279 -14.71104145]
[109.02466583 -2.33867478]
[101.54256439 8.13937473]
[103.11629486 23.05659103]
[104.69003296 37.97380829]
[106.26376343 52.89102554]
[107.83750153 67.80824280]
[109.41123199 82.72545624]
[120.47203827 92.85752106]
[135.46974182 93.12027740]
[150.46743774 93.38303375]
[165.46513367 93.64579773]
[180.46282959 93.90855408]
[189.06286621 90.93817139]
[195.63386536 94.26297760]
[210.62748718 94.70086670]
[225.62109375 95.13876343]
[238.23121643 85.22089386]
[253.81396484 89.03630066]
[260.41558838 103.65814209]
[252.97187805 117.86978149]
[237.19302368 120.76927185]
[225.18319702 110.13237000]
[210.18959045 109.69448090]
[195.19598389 109.25658417]
[180.20007324 108.90625000]
[165.20237732 108.64349365]
[150.20468140 108.38073730]
[135.20697021 108.11797333]
[120.20928192 107.85521698]
[118.05048370 115.03781128]
[111.57411194 136.58558655]
[124.23151398 144.63481140]
[136.88891602 152.68403625]
[152.68582153 153.56048584]
[159.27348328 166.91908264]
[171.93089294 174.96830750]
[184.58830261 183.01754761]
[197.24569702 191.06677246]
[209.90310669 199.11599731]
[222.56050110 207.16523743]
[239.17054749 210.56269836]
[240.50398254 227.46412659]
[224.63220215 233.42422485]
[214.51127625 219.82264709]
[201.85386658 211.77340698]
[189.19647217 203.72418213]
[176.53906250 195.67494202]
[163.88166809 187.62571716]
[151.22425842 179.57647705]
[136.33268738 179.27577209]
[128.83969116 165.34144592]
[116.18228149 157.29222107]
[103.52487946 149.24298096]
[90.21186066 156.15409851]
[89.51139069 171.13774109]
[88.81091309 186.12136841]
[96.89177704 196.14489746]
[96.02056122 208.58932495]
[87.20568848 216.84117126]
[86.33027649 231.81559753]
[85.45486450 246.79003906]
[88.07132721 255.50427246]
[84.48078156 261.93392944]
[83.43054962 276.89709473]
[82.38031769 291.86029053]
[81.33009338 306.82348633]
[80.27986145 321.78668213]
[79.66689301 336.77413940]
[79.49171448 351.77313232]
[79.31653595 366.77209473]
[92.91810608 373.61013794]
[102.16425323 385.62661743]
[105.26350403 400.40548706]
[101.65357971 415.00442505]
[92.10246277 426.54071045]
[78.54584503 432.76031494]
[78.37066650 447.75927734]
[78.19548798 462.75827026]
[78.02030945 477.75723267]
[77.93271637 492.75698853]
[77.93271637 507.75698853]
[90.02729797 517.66937256]
[92.86991882 533.04638672]
[85.11837769 546.62756348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 265]
[5 264]
[7 263]
[8 262]
[9 261]
[10 260]
[16 254]
[17 253]
[18 252]
[24 251]
[25 250]
[26 249]
[27 248]
[28 247]
[29 245]
[30 244]
[31 243]
[33 240]
[34 239]
[35 238]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[44 60]
[45 59]
[46 58]
[48 56]
[49 55]
[69 191]
[70 190]
[71 189]
[72 188]
[73 187]
[74 186]
[76 183]
[77 182]
[78 181]
[79 180]
[80 179]
[83 178]
[84 177]
[85 176]
[86 175]
[87 174]
[88 173]
[90 168]
[91 167]
[95 163]
[96 162]
[97 161]
[98 160]
[102 156]
[103 155]
[104 154]
[106 153]
[107 152]
[108 151]
[109 150]
[110 149]
[111 148]
[114 147]
[115 146]
[116 145]
[120 140]
[121 139]
[122 138]
[123 137]
[124 136]
[126 134]
[127 133]
[128 132]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[198 208]
[199 207]
[200 206]
[215 237]
[216 236]
[217 235]
[219 233]
[220 232]
[221 231]
[222 230]
[223 229]
[224 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
