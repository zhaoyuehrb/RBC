%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCUCCCUAGGCGUGGAGGAGGGGGGGCGGCUCAGCCCCGCGCCCGUGCGCGCGCUCGCGGCCGGGUUGCAGGGCUGGGCGCGCGCCCCGCGUCCCGGGCAGGAAGAUGGUGGCGAGCGCGCGAGUGCAGAAGCUGGUGCGGCGCUACAAGCUGGCGAUUGCCACGGCGCUGGCCAUCCUGCUGCUGCAGGGCCUGGUAGUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[-139.83683777 215.95831299]
[-146.34509277 229.47285461]
[-152.85334778 242.98738098]
[-151.86996460 258.77798462]
[-164.36317444 266.88778687]
[-170.87142944 280.40231323]
[-177.37969971 293.91683960]
[-183.88795471 307.43136597]
[-190.39620972 320.94592285]
[-196.80319214 334.50875854]
[-203.10855103 348.11914062]
[-209.41390991 361.72952271]
[-207.40579224 378.00524902]
[-220.65811157 387.66485596]
[-235.53802490 380.77133179]
[-236.73834229 364.41619873]
[-223.02429199 355.42416382]
[-216.71893311 341.81378174]
[-210.41357422 328.20339966]
[-210.45417786 320.81225586]
[-203.91073608 314.43765259]
[-197.40248108 300.92312622]
[-190.89422607 287.40859985]
[-184.38597107 273.89407349]
[-177.87771606 260.37951660]
[-179.32662964 245.55555725]
[-166.36788940 236.47912598]
[-159.85963440 222.96458435]
[-153.35137939 209.45005798]
[-160.16123962 196.08496094]
[-174.92018127 193.40660095]
[-189.67912292 190.72825623]
[-204.45768738 188.16036987]
[-219.25505066 185.70309448]
[-234.05239868 183.24583435]
[-248.84976196 180.78855896]
[-263.64712524 178.33129883]
[-278.44448853 175.87402344]
[-293.24185181 173.41676331]
[-308.03918457 170.95948792]
[-322.83654785 168.50222778]
[-337.71780396 173.87428284]
[-349.00561523 164.15655518]
[-363.80297852 161.69927979]
[-378.60034180 159.24201965]
[-393.41567993 156.89549255]
[-408.24813843 154.65986633]
[-423.08059692 152.42422485]
[-437.91305542 150.18859863]
[-446.86605835 152.00410461]
[-452.95001221 147.80697632]
[-467.74737549 145.34970093]
[-476.72653198 147.03108215]
[-482.74703979 142.74340820]
[-497.50598145 140.06504822]
[-512.26489258 137.38670349]
[-527.51190186 143.42498779]
[-540.19494629 133.02914429]
[-537.26672363 116.89354706]
[-521.73962402 111.61709595]
[-509.58654785 122.62775421]
[-494.82760620 125.30610657]
[-480.06866455 127.98446655]
[-465.29010010 130.55235291]
[-450.49273682 133.00961304]
[-435.67742920 135.35612488]
[-420.84497070 137.59176636]
[-406.01251221 139.82739258]
[-391.18005371 142.06303406]
[-384.09686279 139.95137024]
[-376.14306641 144.44465637]
[-361.34573364 146.90191650]
[-346.54837036 149.35919189]
[-332.72552490 143.81137085]
[-320.37927246 153.70486450]
[-305.58193970 156.16212463]
[-290.78457642 158.61940002]
[-275.98721313 161.07667542]
[-261.18984985 163.53393555]
[-246.39248657 165.99121094]
[-231.59513855 168.44847107]
[-216.79777527 170.90574646]
[-202.00041199 173.36300659]
[-194.88644409 171.35754395]
[-187.00076294 175.96931458]
[-172.24182129 178.64765930]
[-157.48287964 181.32601929]
[-147.54840088 165.06468201]
[-130.80738831 157.82302856]
[-113.75166321 161.38952637]
[-102.43098450 173.54321289]
[-87.85862732 169.98701477]
[-73.28627777 166.43080139]
[-58.71392822 162.87460327]
[-44.14157867 159.31838989]
[-36.03044510 144.58624268]
[-19.44758224 140.19177246]
[-4.52889299 149.32627869]
[9.98862839 145.55247498]
[24.50614929 141.77867126]
[39.02367020 138.00486755]
[53.54119110 134.23107910]
[68.05871582 130.45727539]
[52.54700089 111.47488403]
[48.68356323 84.84859467]
[59.93795395 57.79373169]
[85.36041260 38.84996414]
[119.27967072 35.24539566]
[130.12159729 24.87945557]
[128.18411255 9.59703541]
[135.53102112 -3.73998737]
[149.16128540 -10.11807919]
[163.75886536 -7.28107166]
[174.60078430 -17.64701080]
[185.44271851 -28.01295090]
[196.28463745 -38.37889099]
[207.12655640 -48.74483109]
[217.96847534 -59.11077118]
[219.03775024 -71.96504974]
[228.28205872 -80.37568665]
[240.37831116 -80.23700714]
[251.37408447 -90.43959808]
[262.36987305 -100.64218903]
[273.36563110 -110.84477997]
[284.36141968 -121.04737091]
[289.21496582 -136.10571289]
[303.80740356 -139.09062195]
[314.80319214 -149.29321289]
[325.79895020 -159.49580383]
[326.13937378 -175.29641724]
[337.61044312 -186.16795349]
[353.40658569 -185.66050720]
[364.15621948 -174.07514954]
[363.48181152 -158.28524780]
[351.78344727 -147.65869141]
[336.00155640 -148.50001526]
[325.00576782 -138.29742432]
[314.01000977 -128.09483337]
[309.94296265 -113.76625061]
[294.56399536 -110.05158997]
[283.56823730 -99.84899902]
[272.57244873 -89.64640808]
[261.57666016 -79.44381714]
[250.58090210 -69.24122620]
[246.31982422 -52.21775818]
[228.33442688 -48.26884842]
[217.49249268 -37.90290833]
[206.65057373 -27.53696823]
[195.80865479 -17.17102814]
[184.96673584 -6.80508852]
[174.12480164 3.56085110]
[176.30404663 18.27101517]
[169.32084656 31.60139656]
[155.66763306 38.34255600]
[140.48753357 35.72137833]
[129.64561462 46.08731842]
[134.38743591 60.31809616]
[149.28015137 62.10900879]
[164.17285156 63.89992142]
[179.03144836 56.96061325]
[192.31347656 66.57934570]
[190.35551453 82.86118317]
[175.17175293 89.05677795]
[162.38194275 78.79262543]
[147.48922729 77.00170898]
[132.59652710 75.21080017]
[130.38586426 82.37759399]
[125.96453857 96.71118927]
[123.75387573 103.87798309]
[137.06765747 110.78762054]
[150.38145447 117.69725800]
[166.73088074 116.42137146]
[175.78619385 130.09373474]
[168.23205566 144.64938354]
[151.83950806 145.11471558]
[143.47181702 131.01104736]
[130.15802002 124.10140991]
[116.84423828 117.19177246]
[112.08087158 122.98489380]
[102.55413055 134.57115173]
[97.79076385 140.36427307]
[107.14311218 152.09175110]
[116.49546051 163.81922913]
[125.84780884 175.54669189]
[135.20014954 187.27416992]
[150.65505981 192.75849915]
[153.36645508 208.93194580]
[140.54507446 219.15664673]
[125.38047028 212.91430664]
[123.47267914 196.62651062]
[114.12033081 184.89904785]
[104.76798248 173.17156982]
[95.41564178 161.44409180]
[86.06329346 149.71662903]
[71.83251190 144.97479248]
[57.31499481 148.74859619]
[42.79747391 152.52239990]
[28.27995110 156.29620361]
[13.76242924 160.06999207]
[-0.75509161 163.84379578]
[-6.19467545 176.16606140]
[-17.57203674 183.00552368]
[-30.61790276 182.05717468]
[-40.58537292 173.89074707]
[-55.15772247 177.44694519]
[-69.73007202 181.00315857]
[-84.30242157 184.55935669]
[-98.87477875 188.11557007]
[-103.84909058 205.48828125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[5 25]
[6 24]
[7 23]
[8 22]
[9 21]
[10 19]
[11 18]
[12 17]
[30 87]
[31 86]
[32 85]
[33 83]
[34 82]
[35 81]
[36 80]
[37 79]
[38 78]
[39 77]
[40 76]
[41 75]
[43 73]
[44 72]
[45 71]
[46 69]
[47 68]
[48 67]
[49 66]
[51 65]
[52 64]
[54 63]
[55 62]
[56 61]
[91 208]
[92 207]
[93 206]
[94 205]
[95 204]
[98 200]
[99 199]
[100 198]
[101 197]
[102 196]
[103 195]
[108 156]
[109 155]
[113 151]
[114 150]
[115 149]
[116 148]
[117 147]
[118 146]
[121 144]
[122 143]
[123 142]
[124 141]
[125 140]
[127 138]
[128 137]
[129 136]
[157 166]
[158 165]
[159 164]
[169 178]
[170 177]
[171 176]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
