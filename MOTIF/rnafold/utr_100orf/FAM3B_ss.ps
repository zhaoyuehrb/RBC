%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGCCCGACUGGCCGCGCACCCAGCUGGCCCGCCCCUGCCCGACACGACCGCUGCCCGCCCCUUGCCUUCCUGACCCAGGGGCUCCGCUGGCUGCGGUCGCCUGGGAGCUGCCGCCAGGGCCAGGAGGGGAGCGGCACCUGGAAGAUGCGCCCAUUGGCUGGUGGCCUGCUCAAGGUGGUGUUCGUGGUCUUCGCCUCCUUGUGUGCCUGGUAUUCGGGGUACCUGCUCGCAGAGCUCAUUCCAG\
) } def
/len { sequence length } bind def

/coor [
[-28.64113235 137.23199463]
[-28.87061691 152.23023987]
[-34.99131012 165.92465210]
[-46.01285172 176.09941101]
[-60.15188599 181.10816956]
[-75.12064362 180.14047241]
[-88.49707794 173.35292053]
[-98.11681366 161.84376526]
[-102.42331696 147.47525024]
[-100.71977234 132.57231140]
[-93.28182220 119.54629517]
[-81.31296539 110.50492096]
[-66.74724579 106.91101074]
[-80.90324402 101.95039368]
[-95.05924225 96.98977661]
[-109.21524048 92.02915955]
[-123.37123871 87.06854248]
[-134.74282837 94.26016235]
[-147.98707581 93.60654449]
[-158.28858948 85.56932068]
[-162.03083801 73.25386047]
[-176.12258911 68.11360168]
[-190.21435547 62.97334290]
[-204.40676880 69.39309692]
[-218.62458801 63.97939682]
[-224.65737915 50.40953827]
[-238.74914551 45.26927567]
[-252.84089661 40.12901688]
[-266.93264771 34.98875427]
[-281.02441406 29.84849358]
[-295.11618042 24.70823288]
[-309.20794678 19.56797218]
[-323.36395264 14.60735607]
[-337.58187866 9.82718563]
[-349.11975098 19.86834717]
[-364.03601074 22.76704025]
[-378.30557251 17.84308243]
[-388.12887573 6.51352835]
[-390.94335938 -8.11330605]
[-405.16131592 -12.89347553]
[-419.40936279 -17.58313179]
[-433.68695068 -22.18208122]
[-445.09616089 -11.99498558]
[-459.97433472 -8.90681267]
[-474.30538940 -13.64888287]
[-484.27200317 -24.85258102]
[-487.27227783 -39.44243622]
[-501.54989624 -44.04138565]
[-515.82745361 -48.64033508]
[-530.10504150 -53.23928833]
[-544.38269043 -57.83823776]
[-558.66027832 -62.43718719]
[-572.93786621 -67.03614044]
[-588.44561768 -63.90255737]
[-598.18774414 -75.16936493]
[-612.46533203 -79.76831818]
[-626.74291992 -84.36726379]
[-642.25067139 -81.23368835]
[-651.99279785 -92.50049591]
[-666.27038574 -97.09944153]
[-675.28326416 -88.47631073]
[-687.03588867 -84.51735687]
[-699.28607178 -85.91331482]
[-709.72387695 -92.33938599]
[-716.40747070 -102.52814484]
[-718.12384033 -114.51909637]
[-732.27984619 -119.47971344]
[-746.43585205 -124.44033051]
[-752.95471191 -123.59637451]
[-758.15142822 -125.82215118]
[-760.88604736 -129.71134949]
[-774.91131592 -135.03041077]
[-788.93652344 -140.34948730]
[-802.96179199 -145.66856384]
[-819.91571045 -145.63177490]
[-824.64434814 -161.91293335]
[-810.30853271 -170.96386719]
[-797.64270020 -159.69380188]
[-783.61749268 -154.37474060]
[-769.59222412 -149.05566406]
[-755.56701660 -143.73658752]
[-741.47521973 -138.59632874]
[-727.31921387 -133.63571167]
[-713.16320801 -128.67509460]
[-699.10339355 -139.39184570]
[-681.26770020 -139.50634766]
[-666.81835938 -128.78320312]
[-661.67138672 -111.37703705]
[-647.39379883 -106.77808380]
[-632.90728760 -110.24061584]
[-622.14392090 -98.64485931]
[-607.86633301 -94.04590607]
[-593.58874512 -89.44696045]
[-579.10223389 -92.90948486]
[-568.33886719 -81.31372833]
[-554.06127930 -76.71478271]
[-539.78369141 -72.11582947]
[-525.50610352 -67.51687622]
[-511.22851562 -62.91793060]
[-496.95092773 -58.31897736]
[-482.67333984 -53.72002792]
[-471.72158813 -63.81579208]
[-457.08956909 -67.09603882]
[-442.68502808 -62.58209610]
[-432.40643311 -51.39068985]
[-429.08801270 -36.45967484]
[-414.81042480 -31.86072350]
[-407.49758911 -32.79926300]
[-400.38113403 -27.11142159]
[-386.16317749 -22.33125114]
[-375.08389282 -32.28690720]
[-360.41134644 -35.38078690]
[-346.06539917 -30.68400383]
[-335.92999268 -19.36277390]
[-332.80172729 -4.39075947]
[-318.58377075 0.38941061]
[-314.00308228 -0.88394803]
[-308.57333374 0.69008839]
[-304.06768799 5.47621202]
[-289.97592163 10.61647320]
[-275.88415527 15.75673389]
[-261.79238892 20.89699554]
[-247.70063782 26.03725624]
[-233.60887146 31.17751694]
[-219.51712036 36.31777573]
[-206.16400146 29.81932831]
[-191.79972839 34.83154297]
[-185.07409668 48.88158035]
[-170.98233032 54.02184296]
[-156.89057922 59.16210175]
[-141.94787598 51.42173386]
[-125.71440125 57.00437546]
[-118.41062164 72.91254425]
[-104.25462341 77.87316132]
[-90.09862518 82.83377838]
[-75.94262695 87.79439545]
[-61.78663254 92.75501251]
[-55.47972870 90.28536224]
[-48.00810623 91.95973969]
[-42.10703659 98.14009094]
[-27.39758873 101.07814026]
[-12.68813992 104.01618958]
[2.02130866 106.95423889]
[16.73075676 109.89228058]
[31.44020462 112.83032990]
[46.16804123 115.67478180]
[60.91366577 118.42550659]
[50.06848145 94.60198975]
[54.64232254 65.09533691]
[76.96588135 40.02711105]
[112.86176300 29.91532326]
[123.76751709 19.61655998]
[134.67326355 9.31779671]
[138.84822083 -6.54101419]
[154.73884583 -10.59317493]
[165.99822998 1.32983005]
[161.04370117 16.96263504]
[144.97203064 20.22355080]
[134.06628418 30.52231407]
[123.16052246 40.82107925]
[125.77541351 47.85047150]
[139.83428955 42.62092972]
[145.06358337 56.67988968]
[131.00518799 61.90925598]
[133.62007141 68.93865204]
[148.60520935 69.60617828]
[163.59034729 70.27370453]
[169.58888245 67.58567810]
[175.20666504 68.21826172]
[178.94671631 71.15359497]
[193.91003418 72.20205688]
[208.21726990 65.44828033]
[220.37260437 74.05625916]
[235.33590698 75.10472107]
[250.29922485 76.15318298]
[265.26254272 77.20164490]
[280.22586060 78.25010681]
[294.53308105 71.49632263]
[306.68841553 80.10430145]
[321.65173340 81.15276337]
[336.61505127 82.20122528]
[351.57833862 83.24968719]
[359.56671143 70.19424438]
[372.71316528 62.35656738]
[387.99676514 61.53768539]
[401.90542603 67.92578125]
[411.24304199 80.05290985]
[413.86392212 95.13235474]
[409.16577148 109.69896698]
[398.22824097 120.40544128]
[383.56463623 124.79151154]
[368.54458618 121.84928894]
[356.61956787 112.25487518]
[350.52987671 98.21300507]
[335.56658936 97.16454315]
[320.60327148 96.11608124]
[305.63995361 95.06761932]
[292.40298462 101.89639282]
[279.17739868 93.21341705]
[264.21408081 92.16495514]
[249.25076294 91.11649323]
[234.28744507 90.06803131]
[219.32414246 89.01956940]
[206.08717346 95.84834290]
[192.86157227 87.16536713]
[177.89825439 86.11690521]
[162.92282104 85.25884247]
[147.93768311 84.59131622]
[132.95254517 83.92378998]
[129.76609802 90.71324158]
[120.20679474 111.08158112]
[130.29562378 122.18182373]
[140.38446045 133.28207397]
[150.47329712 144.38230896]
[160.56213379 155.48255920]
[170.65097046 166.58279419]
[185.77859497 174.23730469]
[182.61096191 190.89271545]
[165.72956848 192.45954895]
[159.55073547 176.67163086]
[149.46189880 165.57139587]
[139.37306213 154.47114563]
[129.28422546 143.37091064]
[119.19538879 132.27066040]
[109.10655212 121.17041779]
[102.75068665 125.15200043]
[83.68309784 137.09675598]
[89.26876831 151.01797485]
[94.85443878 164.93919373]
[100.44010162 178.86039734]
[111.94974518 191.30888367]
[103.17394257 205.81480408]
[86.80553436 201.39759827]
[86.51889038 184.44607544]
[80.93321991 170.52485657]
[75.34754944 156.60363770]
[69.76187897 142.68241882]
[58.16294098 133.17112732]
[43.41731262 130.42041016]
[34.43165207 131.92149353]
[28.50215721 127.53977966]
[13.79270840 124.60173035]
[-0.91674024 121.66368103]
[-15.62618828 118.72563171]
[-30.33563614 115.78758240]
[-45.04508591 112.84954071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 137]
[14 136]
[15 135]
[16 134]
[17 133]
[21 130]
[22 129]
[23 128]
[26 125]
[27 124]
[28 123]
[29 122]
[30 121]
[31 120]
[32 119]
[33 116]
[34 115]
[39 110]
[40 109]
[41 107]
[42 106]
[47 101]
[48 100]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[55 93]
[56 92]
[57 91]
[59 89]
[60 88]
[66 84]
[67 83]
[68 82]
[71 81]
[72 80]
[73 79]
[74 78]
[140 246]
[141 245]
[142 244]
[143 243]
[144 242]
[145 241]
[146 239]
[147 238]
[151 160]
[152 159]
[153 158]
[165 209]
[166 208]
[167 207]
[170 206]
[171 205]
[173 203]
[174 202]
[175 201]
[176 200]
[177 199]
[179 197]
[180 196]
[181 195]
[182 194]
[211 225]
[212 224]
[213 223]
[214 222]
[215 221]
[216 220]
[227 237]
[228 236]
[229 235]
[230 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
