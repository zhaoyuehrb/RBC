%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCCACCAUGCAGGAUGUCCAAGGCCCCCGUCCCGGAAGCCCCGGGGAUGCUGAAGACCGGCGGGAGCUGGGCUUGCACAGGGGCGAGGUCAACUUUGGAGGGUCUG\
) } def
/len { sequence length } bind def

/coor [
[83.98915863 474.40139771]
[90.03549194 458.56225586]
[90.03549194 443.56225586]
[90.03549194 428.56225586]
[90.03549194 413.56225586]
[90.03549194 398.56225586]
[80.43111420 383.95135498]
[89.57357788 368.04721069]
[89.14523315 353.05331421]
[88.71689606 338.05944824]
[75.05721283 332.06954956]
[65.31272888 320.69616699]
[61.45687485 306.16021729]
[64.30621338 291.33114624]
[73.34820557 279.16030884]
[86.83240509 272.09362793]
[86.40406036 257.09976196]
[85.97572327 242.10586548]
[77.87813568 229.60473633]
[85.21820068 215.58924866]
[84.78986359 200.59536743]
[82.68241882 198.53576660]
[81.32874298 195.45541382]
[81.14650726 191.66253662]
[82.42391968 187.61952209]
[85.26711273 183.88951111]
[86.55073547 168.94453430]
[87.83435822 153.99955750]
[89.11798859 139.05458069]
[90.40161133 124.10961151]
[79.11308289 115.39932251]
[74.13031006 102.03998566]
[76.95758057 88.06478119]
[66.20060730 77.61071777]
[55.44363022 67.15665436]
[44.68665314 56.70259094]
[33.92967606 46.24852753]
[23.17269897 35.79446411]
[7.17530775 34.58490372]
[-1.73376167 21.24293900]
[3.27976608 6.00338173]
[18.36994171 0.55671680]
[31.96087456 9.08115959]
[33.62676239 25.03748703]
[44.38373947 35.49155045]
[55.14071655 45.94561386]
[65.89769745 56.39967728]
[76.65467072 66.85373688]
[87.41164398 77.30780029]
[97.41036224 74.17954254]
[107.83116913 75.25984955]
[116.29782104 62.87776947]
[124.76446533 50.49568939]
[125.67895508 43.70212555]
[129.40505981 39.16286087]
[134.08479309 37.66736603]
[143.24450684 25.78883171]
[152.40422058 13.91029835]
[154.70408630 -1.74285507]
[168.60314941 -7.09684420]
[177.76287842 -18.97537804]
[186.92259216 -30.85391235]
[196.08230591 -42.73244476]
[205.24203491 -54.61097717]
[206.88375854 -70.92774200]
[221.94447327 -77.41672516]
[234.93099976 -67.40261841]
[232.48390198 -51.18708038]
[217.12055969 -45.45125961]
[207.96084595 -33.57272720]
[198.80113220 -21.69419289]
[189.64140320 -9.81565952]
[180.48168945 2.06287384]
[178.83699036 16.86639595]
[164.28276062 23.07001686]
[155.12304688 34.94855118]
[145.96331787 46.82708359]
[137.14654541 58.96233749]
[128.67990112 71.34441376]
[120.21324921 83.72649384]
[125.94991302 100.06575012]
[120.13053131 116.37571716]
[105.34658813 125.39323425]
[104.06295776 140.33821106]
[102.77933502 155.28318787]
[101.49571228 170.22816467]
[100.21208954 185.17314148]
[99.78374481 200.16702271]
[100.21208954 215.16090393]
[108.34030914 228.73449707]
[100.96960449 241.67753601]
[101.39794922 256.67141724]
[101.82628632 271.66528320]
[115.69192505 277.95062256]
[125.41397858 289.58544922]
[129.10525513 304.22766113]
[126.08552551 318.96002197]
[117.00622559 330.87118530]
[103.71077728 337.63110352]
[104.13912201 352.62496948]
[104.56745911 367.61886597]
[113.44336700 377.11120605]
[113.40956116 389.70391846]
[105.03549194 398.56225586]
[105.03549194 413.56225586]
[105.03549194 428.56225586]
[105.03549194 443.56225586]
[105.03549194 458.56225586]
[111.08183289 474.40139771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 108]
[3 107]
[4 106]
[5 105]
[6 104]
[8 101]
[9 100]
[10 99]
[16 93]
[17 92]
[18 91]
[20 89]
[21 88]
[26 87]
[27 86]
[28 85]
[29 84]
[30 83]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[51 80]
[52 79]
[53 78]
[56 77]
[57 76]
[58 75]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
