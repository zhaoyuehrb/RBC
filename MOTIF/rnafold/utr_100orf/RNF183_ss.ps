%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAUUCAGGGGAGGGAGCAACUGGAGCCUCAGGCCCUCCAGAGUAGUCUGCCUGACCACCCUGGAGCCCACAGAAGCCCAGGACGUCUCCCGCGAAGCCUCCCCGUGUGUGGCUGAGGAUGGCUGAGCAGCAGGGCCGGGAGCUUGAGGCUGAGUGCCCCGUCUGCUGGAACCCCUUCAACAACACGUUCCAUACCCCCAAAAUGCUGGAUUGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[96.36953735 294.11282349]
[95.29457092 279.15139771]
[94.21960449 264.18997192]
[93.14463806 249.22853088]
[92.06967163 234.26708984]
[90.99470520 219.30566406]
[89.91974640 204.34423828]
[88.09526062 189.45559692]
[85.52586365 174.67730713]
[82.95646667 159.89900208]
[80.38706970 145.12069702]
[71.77226257 118.58297729]
[81.60825348 100.06713867]
[66.65491486 101.24938965]
[51.70158005 102.43163300]
[36.74824142 103.61388397]
[21.79490471 104.79613495]
[12.78705883 120.53761292]
[-3.72384501 127.65399933]
[-21.04696846 123.46720123]
[-32.28513336 109.83855438]
[-47.19840240 111.44927979]
[-62.11167145 113.05999756]
[-77.02494049 114.67071533]
[-85.21519470 118.70141602]
[-92.16346741 116.19599915]
[-107.09831238 117.59262848]
[-120.11812592 126.58123779]
[-133.51051331 120.06256104]
[-148.44535828 121.45919037]
[-164.35244751 133.84802246]
[-181.55496216 125.01100922]
[-196.44358826 126.83548737]
[-204.98406982 136.49584961]
[-217.41830444 137.71182251]
[-227.03076172 130.37443542]
[-241.94403076 131.98516846]
[-256.85729980 133.59588623]
[-271.77056885 135.20660400]
[-286.68383789 136.81732178]
[-301.59710693 138.42803955]
[-314.48663330 147.60249329]
[-327.97116089 141.27659607]
[-342.88442993 142.88731384]
[-355.77395630 152.06176758]
[-369.25848389 145.73587036]
[-384.17175293 147.34658813]
[-399.08502197 148.95730591]
[-410.22497559 160.50205994]
[-426.18243408 158.84713745]
[-434.71624756 145.26206970]
[-429.27993774 130.16815186]
[-414.04385376 125.14414978]
[-400.69573975 134.04403687]
[-385.78247070 132.43331909]
[-370.86920166 130.82260132]
[-359.04638672 121.76336670]
[-344.49514771 127.97404480]
[-329.58187866 126.36332703]
[-317.75903320 117.30409241]
[-303.20782471 123.51477814]
[-288.29455566 121.90405273]
[-273.38128662 120.29333496]
[-258.46801758 118.68261719]
[-243.55474854 117.07189178]
[-228.64147949 115.46117401]
[-215.04858398 104.35762787]
[-198.26806641 111.94686127]
[-183.37944031 110.12238312]
[-177.84094238 101.54393005]
[-168.29563904 97.33886719]
[-157.79479980 99.11498260]
[-149.84197998 106.52435303]
[-134.90715027 105.12772369]
[-122.95557404 96.23901367]
[-108.49494171 102.65779114]
[-93.56009674 101.26116180]
[-78.63565826 99.75744629]
[-63.72239304 98.14672852]
[-48.80912399 96.53601074]
[-33.89585495 94.92529297]
[-29.48735619 83.62138367]
[-20.64036560 75.21304321]
[-8.99012661 71.33904266]
[3.27370191 72.79211426]
[13.81856632 79.35764313]
[20.61265564 89.84279633]
[35.56599045 88.66054535]
[50.51932907 87.47830200]
[65.47266388 86.29605103]
[80.42600250 85.11380005]
[90.68479156 74.17044067]
[90.89996338 59.17198181]
[80.16623688 47.88372421]
[80.59810638 32.67621994]
[91.42588043 22.51281357]
[91.64105225 7.51435709]
[91.85622406 -7.48409939]
[92.07139587 -22.48255539]
[92.17897797 -37.48217010]
[92.17897797 -52.48217010]
[92.17897797 -67.48217010]
[84.44168091 -81.28234100]
[92.17897797 -94.00961304]
[92.17897797 -109.00961304]
[89.05107117 -117.58533478]
[92.28810883 -124.22439575]
[92.50328064 -139.22285461]
[86.68476868 -155.14709473]
[100.37596130 -165.14648438]
[113.77466583 -154.75845337]
[107.50173950 -139.00769043]
[107.28656769 -124.00923157]
[107.17897797 -109.00961304]
[107.17897797 -94.00961304]
[114.91628265 -81.28234100]
[107.17897797 -67.48217010]
[107.17897797 -52.48217010]
[107.17897797 -37.48217010]
[110.32045746 -30.79735374]
[107.06984711 -22.26738548]
[106.85468292 -7.26892948]
[106.63951111 7.72952700]
[106.42433929 22.72798347]
[116.95610809 33.19781876]
[116.95155334 48.41144943]
[105.89842224 59.38714981]
[105.68325043 74.38560486]
[118.39636230 82.34655762]
[131.79548645 75.60388947]
[145.19461060 68.86122131]
[158.59371948 62.11855316]
[171.99284363 55.37588501]
[185.39196777 48.63321686]
[189.32803345 43.33300781]
[194.56317139 41.14082718]
[199.27357483 41.89553833]
[212.86061096 35.54001999]
[226.44763184 29.18449783]
[240.03466797 22.82897758]
[250.22900391 7.49086237]
[267.64251709 9.68741703]
[281.13699341 3.13764882]
[294.63146973 -3.41211987]
[308.12591553 -9.96188831]
[313.06237793 -24.97544098]
[327.20666504 -32.02634048]
[342.16717529 -26.93140984]
[349.06814575 -12.71338367]
[343.81533813 2.19243622]
[329.52514648 8.94269085]
[314.67568970 3.53257489]
[301.18121338 10.08234310]
[287.68676758 16.63211250]
[274.19229126 23.18188095]
[269.93951416 34.50222778]
[258.75564575 40.07086945]
[246.39018250 36.41600800]
[232.80316162 42.77152634]
[219.21612549 49.12704849]
[205.62910461 55.48256683]
[192.13462830 62.03233719]
[178.73551941 68.77500916]
[165.33639526 75.51767731]
[151.93727112 82.26034546]
[138.53814697 89.00301361]
[125.13903046 95.74568176]
[125.35420227 110.74413300]
[138.94123840 117.09965515]
[152.52825928 123.45517731]
[166.11529541 129.81069946]
[179.70231628 136.16621399]
[190.89825439 125.88421631]
[205.17840576 120.67408752]
[220.36517334 121.33032227]
[234.14266968 127.75286102]
[244.40994263 138.96231079]
[249.60127258 153.24931335]
[248.92506409 168.43519592]
[242.48440552 182.20423889]
[231.26145935 192.45674133]
[216.96765137 197.62928772]
[201.78265381 196.93310547]
[188.02210999 190.47433472]
[177.78437805 179.23791504]
[172.63063049 164.93730164]
[173.34680176 149.75325012]
[159.75976562 143.39772034]
[146.17274475 137.04220581]
[132.58570862 130.68669128]
[118.99868011 124.33116150]
[113.04035187 128.88619995]
[122.15022278 140.80300903]
[110.23326874 149.91267395]
[101.12370300 137.99626160]
[95.16537476 142.55130005]
[97.73477173 157.32960510]
[100.30416870 172.10791016]
[102.87356567 186.88619995]
[111.39820862 174.54397583]
[125.82934570 170.45225525]
[139.56346130 176.48336792]
[146.31596375 189.87753296]
[142.99697876 204.50573730]
[131.12525940 213.67428589]
[116.13314819 213.18772888]
[104.88117218 203.26927185]
[105.95613861 218.23069763]
[107.03110504 233.19212341]
[108.10607147 248.15356445]
[109.18103790 263.11499023]
[110.25600433 278.07641602]
[111.33097076 293.03787231]
[123.44099426 303.19281006]
[124.74019623 318.94360352]
[114.45778656 330.94558716]
[98.69412994 332.07818604]
[86.80153656 321.66946411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[3 211]
[4 210]
[5 209]
[6 208]
[7 207]
[8 199]
[9 198]
[10 197]
[11 196]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[21 81]
[22 80]
[23 79]
[24 78]
[26 77]
[27 76]
[29 74]
[30 73]
[32 69]
[33 68]
[36 66]
[37 65]
[38 64]
[39 63]
[40 62]
[41 61]
[43 59]
[44 58]
[46 56]
[47 55]
[48 54]
[92 128]
[93 127]
[96 124]
[97 123]
[98 122]
[99 121]
[100 119]
[101 118]
[102 117]
[104 115]
[105 114]
[107 113]
[108 112]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[134 162]
[137 161]
[138 160]
[139 159]
[140 158]
[142 155]
[143 154]
[144 153]
[145 152]
[168 191]
[169 190]
[170 189]
[171 188]
[172 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
