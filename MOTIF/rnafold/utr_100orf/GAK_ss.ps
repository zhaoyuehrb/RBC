%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGAGGCCGCGGCGGAGGGGACGGGGCUAGGCCGGGUCGCCGCCUGACGCGACGCGUCCUCACGGGCGCCUACGUCACGGCGUCGAGGCGGAAGAUGGUGCACCUCCGGGCCGGCGGUUGCUGAGCUGACCCGGACGGCGAGGGAGCGGGAGCCCGAGCCCGACCACUCCGGCUGCCGCGGGGUGCGGCGCAGCCACCGCCAUGUCGCUGCUGCAGUCGGCGCUCGACUUCUUGGCGGGUCCAGGCUCCCUGG\
GCGGUGCUUCCGGCCGCGACCAGAGUGACUUCGUGGGGCAGACGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-146.47448730 585.97949219]
[-151.28030396 571.77020264]
[-149.68331909 556.85845947]
[-159.37780762 568.30474854]
[-169.07229614 579.75097656]
[-178.76678467 591.19726562]
[-188.46127319 602.64349365]
[-198.15576172 614.08978271]
[-201.17059326 629.62109375]
[-215.30043030 634.33245850]
[-224.99491882 645.77868652]
[-234.68940735 657.22497559]
[-244.38389587 668.67120361]
[-253.95957947 680.21704102]
[-263.41543579 691.86120605]
[-272.87130737 703.50537109]
[-271.43231201 719.01562500]
[-281.18777466 730.68975830]
[-295.98327637 731.96600342]
[-305.43911743 743.61022949]
[-314.89498901 755.25439453]
[-316.29656982 761.63366699]
[-320.11416626 765.75897217]
[-324.66857910 767.03881836]
[-334.36306763 778.48510742]
[-344.05755615 789.93133545]
[-353.69277954 801.42755127]
[-363.26846313 812.97338867]
[-372.84414673 824.51922607]
[-382.41983032 836.06506348]
[-380.70266724 851.77575684]
[-390.66259766 864.04669189]
[-406.39062500 865.59765625]
[-418.55551147 855.50854492]
[-419.94012451 839.76501465]
[-409.72293091 827.70745850]
[-393.96566772 826.48937988]
[-384.38998413 814.94354248]
[-374.81430054 803.39770508]
[-365.23861694 791.85186768]
[-363.39651489 784.73309326]
[-355.50381470 780.23687744]
[-345.80932617 768.79058838]
[-336.11483765 757.34436035]
[-326.53915405 745.79852295]
[-317.08331299 734.15435791]
[-307.62744141 722.51019287]
[-309.41461182 707.76763916]
[-299.99087524 695.82409668]
[-284.51547241 694.04956055]
[-275.05960083 682.40533447]
[-265.60375977 670.76116943]
[-265.18826294 666.04864502]
[-261.84017944 661.53393555]
[-255.83015442 658.97674561]
[-246.13566589 647.53045654]
[-236.44117737 636.08422852]
[-226.74668884 624.63793945]
[-224.42527771 609.92535400]
[-209.60202026 604.39526367]
[-199.90753174 592.94903564]
[-190.21304321 581.50274658]
[-180.51855469 570.05651855]
[-170.82406616 558.61022949]
[-161.12957764 547.16400146]
[-161.20088196 540.16845703]
[-156.71392822 533.63769531]
[-148.43301392 530.49896240]
[-139.97102356 518.11370850]
[-138.79803467 510.85461426]
[-131.35704041 505.64477539]
[-122.76750183 493.34762573]
[-114.17797089 481.05047607]
[-105.58843994 468.75332642]
[-96.99890900 456.45617676]
[-88.60102081 444.02734375]
[-80.39679718 431.46984863]
[-72.19257355 418.91235352]
[-63.98835373 406.35485840]
[-55.78413010 393.79736328]
[-62.11198807 378.62561035]
[-58.09197998 362.51458740]
[-45.12081909 351.88290405]
[-28.20143318 351.08816528]
[-20.12741852 338.44653320]
[-12.05340290 325.80493164]
[-3.97938752 313.16333008]
[-3.64950371 298.27236938]
[10.29947758 290.80670166]
[18.37349319 278.16506958]
[26.44750786 265.52346802]
[34.45609665 252.84031677]
[42.39904022 240.11593628]
[50.34198761 227.39157104]
[58.28493118 214.66719055]
[43.51971436 217.31074524]
[31.15528679 208.81834412]
[28.32307434 194.08815002]
[36.65661240 181.61608887]
[51.34936523 178.59567261]
[63.92700958 186.76898193]
[67.13512421 201.42195129]
[75.85128021 189.21421814]
[84.56742859 177.00648499]
[93.28358459 164.79875183]
[101.99973297 152.59101868]
[23.42641830 85.85265350]
[14.71026707 73.64492798]
[5.99411440 61.43719482]
[-2.72203755 49.22946548]
[-11.43818951 37.02173233]
[-20.15434265 24.81400299]
[-34.47029495 18.07871628]
[-35.56882477 3.22467685]
[-44.28497696 -8.98305416]
[-53.00112915 -21.19078445]
[-61.71728134 -33.39851379]
[-77.12087250 -32.54246140]
[-90.53073883 -40.16998291]
[-97.66783142 -53.84717178]
[-96.25473785 -69.20967865]
[-86.74236298 -81.35539246]
[-72.16607666 -86.40865326]
[-57.17711639 -82.75698853]
[-46.55841064 -71.56562805]
[-43.69834137 -56.40569305]
[-49.50955200 -42.11466599]
[-40.79339981 -29.90693665]
[-32.07724762 -17.69920540]
[-23.36109352 -5.49147511]
[-9.66858006 0.37063283]
[-7.94661140 16.09785080]
[0.76954085 28.30558205]
[9.48569298 40.51331329]
[18.20184517 52.72104263]
[26.91799736 64.92877197]
[35.63415146 77.13650513]
[49.96619797 72.70792389]
[64.29698181 68.27974701]
[64.60697937 53.28294754]
[54.24438095 44.72558594]
[50.73804474 31.95322609]
[55.14785385 19.67022514]
[65.65974426 12.26851463]
[66.12471008 -2.72427750]
[66.58967590 -17.71706963]
[56.04545593 -29.18254852]
[56.73057175 -44.38074875]
[67.72613525 -54.36239243]
[68.19110107 -69.35518646]
[68.65606689 -84.34797668]
[60.42812729 -98.53363800]
[68.83279419 -112.61531830]
[85.22406006 -112.10698700]
[92.73999786 -97.53157043]
[83.64885712 -83.88301086]
[83.18389130 -68.89022064]
[82.71892548 -53.89742661]
[93.07484436 -43.25362015]
[92.81687927 -28.04217529]
[81.58246613 -17.25210571]
[81.11750031 -2.25931358]
[80.65253448 12.73347855]
[92.68888855 24.51129913]
[92.45403290 41.68832397]
[79.60377502 53.59295273]
[79.29377747 68.58974457]
[86.33556366 71.17107391]
[86.89350128 56.18145752]
[101.32189941 52.08006668]
[109.68115234 64.53490448]
[100.41912842 76.33373260]
[107.46091461 78.91506195]
[116.91677856 67.27088928]
[126.37263489 55.62672043]
[135.82849121 43.98255157]
[145.16351318 32.24128342]
[154.37670898 20.40417671]
[163.58990479 8.56706810]
[172.80308533 -3.27003932]
[182.01628113 -15.10714722]
[181.46669006 -31.14078331]
[193.75277710 -41.45735168]
[209.44970703 -38.14286423]
[216.51614380 -23.73991203]
[209.53131104 -9.29720592]
[193.85339355 -5.89395618]
[184.64019775 5.94315147]
[175.42700195 17.78025818]
[166.21382141 29.61736679]
[157.00062561 41.45447540]
[156.68261719 46.17461395]
[153.42854309 50.75753784]
[147.47267151 53.43840790]
[138.01679993 65.08258057]
[128.56094360 76.72675323]
[119.10508728 88.37092590]
[122.91088104 94.83358002]
[134.32827759 114.22154999]
[149.09738159 111.59986115]
[163.86650085 108.97817993]
[178.63562012 106.35649872]
[193.40473938 103.73481750]
[208.17384338 101.11312866]
[223.78442383 86.38685608]
[242.81808472 94.43286896]
[257.49884033 91.35463715]
[272.17959595 88.27641296]
[286.86035156 85.19818115]
[300.32119751 72.59933472]
[316.77017212 78.77492523]
[331.41833496 75.54514313]
[346.06649780 72.31536865]
[360.71466064 69.08559418]
[375.36282349 65.85581970]
[387.09457397 54.39727783]
[402.80856323 59.08791733]
[406.33959961 75.10240173]
[394.05523682 85.96640778]
[378.59259033 80.50397491]
[363.94442749 83.73374939]
[349.29626465 86.96353149]
[334.64810181 90.19330597]
[319.99996948 93.42308044]
[313.25140381 103.42454529]
[301.11196899 106.25693512]
[289.93856812 99.87892914]
[275.25781250 102.95716095]
[260.57705688 106.03539276]
[245.89631653 109.11362457]
[242.35556030 117.16154480]
[235.42005920 122.78593445]
[226.54612732 124.64456177]
[217.67221069 122.20349121]
[210.79553223 115.88224792]
[196.02641296 118.50392914]
[181.25729370 121.12561035]
[166.48818970 123.74729919]
[151.71907043 126.36898041]
[136.94995117 128.99066162]
[135.01768494 143.86569214]
[148.62681580 150.17372131]
[162.23596191 156.48176575]
[175.84509277 162.78979492]
[189.45423889 169.09783936]
[203.06336975 175.40586853]
[216.67251587 181.71391296]
[233.58567810 182.88912964]
[237.13841248 199.46665955]
[222.19223022 207.46966553]
[210.36447144 195.32304382]
[196.75534058 189.01501465]
[183.14619446 182.70697021]
[169.53706360 176.39894104]
[155.92791748 170.09089661]
[142.31878662 163.78286743]
[128.70964050 157.47482300]
[114.20746613 161.30717468]
[105.49131012 173.51490784]
[96.77516174 185.72264099]
[88.05900574 197.93037415]
[79.34285736 210.13809204]
[71.00930023 222.61013794]
[63.06635666 235.33451843]
[55.12341309 248.05888367]
[47.18046570 260.78326416]
[45.30650330 269.67141724]
[39.08911896 273.59747314]
[31.01510239 286.23910522]
[22.94108772 298.88070679]
[22.03369522 314.67587280]
[8.66222191 321.23733521]
[0.58820641 333.87893677]
[-7.48580885 346.52056885]
[-15.55982399 359.16217041]
[-9.58986664 371.55468750]
[-10.50264740 385.17156982]
[-17.95422935 396.47592163]
[-29.91617584 402.58422852]
[-43.22663498 402.00158691]
[-51.43085480 414.55908203]
[-59.63507843 427.11657715]
[-67.83930206 439.67407227]
[-76.04352570 452.23156738]
[-76.32886505 457.34497070]
[-78.32170105 461.44842529]
[-81.36332703 464.06579590]
[-84.70175171 465.04568481]
[-93.29129028 477.34286499]
[-101.88082123 489.64001465]
[-110.47035217 501.93716431]
[-119.05988312 514.23431396]
[-127.58576202 526.57568359]
[-136.04776001 538.96093750]
[-122.09197998 533.46215820]
[-107.11679840 534.32476807]
[-93.88468933 541.38958740]
[-84.83657837 553.35333252]
[-81.64157104 568.00909424]
[-84.88904572 582.65338135]
[-93.97994232 594.58465576]
[-107.23726654 601.60198975]
[-122.21543121 602.41094971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 65]
[4 64]
[5 63]
[6 62]
[7 61]
[8 60]
[10 58]
[11 57]
[12 56]
[13 55]
[14 52]
[15 51]
[16 50]
[19 47]
[20 46]
[21 45]
[24 44]
[25 43]
[26 42]
[27 40]
[28 39]
[29 38]
[30 37]
[68 294]
[69 293]
[71 292]
[72 291]
[73 290]
[74 289]
[75 288]
[76 284]
[77 283]
[78 282]
[79 281]
[80 280]
[84 275]
[85 274]
[86 273]
[87 272]
[89 270]
[90 269]
[91 268]
[92 266]
[93 265]
[94 264]
[95 263]
[102 262]
[103 261]
[104 260]
[105 259]
[106 258]
[107 137]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[114 130]
[115 129]
[116 128]
[117 127]
[139 167]
[140 166]
[144 163]
[145 162]
[146 161]
[149 158]
[150 157]
[151 156]
[173 197]
[174 196]
[175 195]
[176 194]
[177 191]
[178 190]
[179 189]
[180 188]
[181 187]
[199 240]
[200 239]
[201 238]
[202 237]
[203 236]
[204 235]
[206 230]
[207 229]
[208 228]
[209 227]
[211 224]
[212 223]
[213 222]
[214 221]
[215 220]
[241 257]
[242 256]
[243 255]
[244 254]
[245 253]
[246 252]
[247 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
