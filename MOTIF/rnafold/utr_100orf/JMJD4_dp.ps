%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (JMJD4)
} def

/sequence { (\
AUGCGUGCAGGCCCGGAGCCCCAGGCGCUGGCGGGGCAGAAACGCGGCGCCCUGCGUCUUCUGGUUCCGAGGCUGGUCCUCACCGUUUCCGCUCCGGCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 86 0.559991382 ubox
2 9 0.063381990 ubox
2 82 0.180391498 ubox
2 85 0.621075660 ubox
2 99 0.008419812 ubox
3 8 0.069960837 ubox
3 12 0.012527534 ubox
3 26 0.004752584 ubox
3 77 0.020881390 ubox
3 81 0.206668833 ubox
3 84 0.676745944 ubox
3 86 0.437459109 ubox
3 92 0.007878719 ubox
3 98 0.011898170 ubox
4 11 0.012855419 ubox
4 25 0.004756268 ubox
4 75 0.007514386 ubox
4 76 0.021853246 ubox
4 85 0.459333749 ubox
4 91 0.007893010 ubox
4 96 0.004650197 ubox
4 97 0.011376023 ubox
4 99 0.005220366 ubox
5 74 0.004131174 ubox
5 77 0.010275969 ubox
5 83 0.797049223 ubox
5 84 0.340167242 ubox
5 86 0.003296716 ubox
5 90 0.007768738 ubox
5 95 0.005789363 ubox
5 98 0.005099227 ubox
6 23 0.004738595 ubox
6 75 0.006829355 ubox
6 76 0.009290478 ubox
6 82 0.853813975 ubox
6 85 0.006634030 ubox
6 97 0.004361970 ubox
7 22 0.004732354 ubox
7 74 0.003924010 ubox
7 77 0.410929559 ubox
7 81 0.817415991 ubox
7 84 0.007709555 ubox
7 86 0.037915294 ubox
7 92 0.011713689 ubox
7 98 0.003283638 ubox
8 30 0.003664753 ubox
8 75 0.293232456 ubox
8 76 0.575974874 ubox
8 85 0.039745735 ubox
8 91 0.011706535 ubox
8 97 0.003239720 ubox
9 29 0.003850300 ubox
9 74 0.273810827 ubox
9 80 0.397997857 ubox
9 87 0.003323511 ubox
9 88 0.003680065 ubox
10 20 0.005150310 ubox
10 28 0.003861314 ubox
10 73 0.194169275 ubox
10 74 0.815893386 ubox
10 78 0.150664773 ubox
10 79 0.385512755 ubox
10 80 0.004972135 ubox
10 89 0.004041735 ubox
11 19 0.005162822 ubox
11 26 0.004621284 ubox
11 73 0.920327294 ubox
11 77 0.134205893 ubox
11 78 0.310916585 ubox
11 98 0.005047234 ubox
12 18 0.005160269 ubox
12 25 0.004641525 ubox
12 72 0.963580057 ubox
12 76 0.264196919 ubox
12 97 0.004134811 ubox
13 24 0.004638706 ubox
13 31 0.003319951 ubox
13 71 0.963659540 ubox
13 72 0.009192652 ubox
13 75 0.263442993 ubox
13 76 0.033283179 ubox
13 97 0.006221844 ubox
14 30 0.005023321 ubox
14 69 0.998608664 ubox
14 71 0.011160871 ubox
14 75 0.031664355 ubox
14 96 0.006914758 ubox
15 22 0.004907647 ubox
15 29 0.005126939 ubox
15 68 0.999528028 ubox
15 74 0.014842190 ubox
15 95 0.007500877 ubox
16 21 0.004896479 ubox
16 28 0.005138082 ubox
16 67 0.999549019 ubox
16 73 0.009234424 ubox
16 94 0.007501590 ubox
17 66 0.998985760 ubox
17 74 0.021347272 ubox
17 93 0.007499661 ubox
18 26 0.011565617 ubox
18 37 0.010765526 ubox
18 65 0.998877372 ubox
18 73 0.024141132 ubox
18 92 0.007494831 ubox
19 25 0.011582241 ubox
19 36 0.014069721 ubox
19 64 0.997612398 ubox
19 72 0.024599440 ubox
19 91 0.007449989 ubox
20 24 0.011500276 ubox
20 35 0.017294355 ubox
20 36 0.020486941 ubox
20 63 0.993781154 ubox
20 64 0.056613616 ubox
20 71 0.024545375 ubox
21 31 0.025137551 ubox
21 34 0.017320747 ubox
21 35 0.020838488 ubox
21 36 0.004798814 ubox
21 63 0.079352813 ubox
21 64 0.021933640 ubox
22 30 0.025566754 ubox
22 33 0.017231212 ubox
22 34 0.020826620 ubox
22 35 0.004840927 ubox
22 54 0.021844201 ubox
22 63 0.025938008 ubox
23 29 0.025514864 ubox
23 53 0.021878464 ubox
23 59 0.942911867 ubox
23 60 0.163172037 ubox
23 62 0.032794370 ubox
24 28 0.024956216 ubox
24 51 0.014259660 ubox
24 52 0.017874793 ubox
24 58 0.989741878 ubox
24 59 0.124566982 ubox
24 60 0.003228132 ubox
24 61 0.031118486 ubox
24 62 0.006420256 ubox
25 32 0.027498280 ubox
25 50 0.019072988 ubox
25 51 0.012644035 ubox
25 57 0.990535141 ubox
25 58 0.124170209 ubox
25 60 0.020183092 ubox
25 61 0.006455205 ubox
26 31 0.027547040 ubox
26 49 0.022878702 ubox
26 56 0.998460568 ubox
27 48 0.022882708 ubox
27 55 0.997625213 ubox
27 57 0.017653190 ubox
27 73 0.009729421 ubox
28 47 0.022881493 ubox
28 54 0.997035281 ubox
28 56 0.017740501 ubox
28 72 0.010349669 ubox
28 100 0.004085496 ubox
29 46 0.021468155 ubox
29 54 0.010280171 ubox
29 56 0.003185656 ubox
29 71 0.010301335 ubox
29 99 0.004457699 ubox
30 45 0.015250631 ubox
30 51 0.979244638 ubox
30 52 0.156219253 ubox
30 53 0.073011046 ubox
30 55 0.004359872 ubox
30 98 0.004649582 ubox
31 45 0.017123014 ubox
31 50 0.986004918 ubox
31 51 0.110951565 ubox
31 52 0.077839547 ubox
31 55 0.050368613 ubox
32 44 0.022857451 ubox
32 49 0.992103904 ubox
32 54 0.053785786 ubox
32 69 0.027307283 ubox
32 96 0.004789131 ubox
33 43 0.022867024 ubox
33 48 0.984906129 ubox
33 51 0.080270742 ubox
33 52 0.010967200 ubox
33 53 0.081636646 ubox
33 68 0.028312491 ubox
33 95 0.004821832 ubox
34 50 0.080945875 ubox
34 51 0.011121749 ubox
34 52 0.082163962 ubox
34 67 0.028311722 ubox
34 94 0.004822077 ubox
35 50 0.011135392 ubox
35 51 0.082186028 ubox
35 65 0.005790570 ubox
35 66 0.027699757 ubox
35 93 0.004819171 ubox
36 45 0.988766668 ubox
36 48 0.082110801 ubox
36 50 0.082188348 ubox
36 65 0.026721235 ubox
36 92 0.004824567 ubox
37 44 0.989302338 ubox
37 47 0.082125037 ubox
37 49 0.082121042 ubox
37 63 0.032652459 ubox
37 64 0.019307997 ubox
37 91 0.004814029 ubox
38 62 0.039141785 ubox
39 61 0.039691373 ubox
39 89 0.004772415 ubox
40 60 0.039583305 ubox
40 88 0.004775139 ubox
41 59 0.038364609 ubox
41 87 0.004767181 ubox
42 57 0.039191749 ubox
42 86 0.004755241 ubox
43 56 0.039708878 ubox
43 85 0.004749778 ubox
44 55 0.039721475 ubox
44 84 0.004000146 ubox
45 54 0.039720372 ubox
46 52 0.007097794 ubox
46 53 0.038786072 ubox
46 58 0.004323617 ubox
47 51 0.007083521 ubox
47 52 0.038170929 ubox
47 57 0.004348525 ubox
48 56 0.004360757 ubox
49 55 0.004363547 ubox
50 54 0.004331879 ubox
54 73 0.003176967 ubox
55 72 0.003177129 ubox
69 81 0.006237602 ubox
69 89 0.006681747 ubox
70 80 0.006503456 ubox
70 88 0.009926669 ubox
71 79 0.006538315 ubox
71 87 0.010859105 ubox
71 90 0.003172557 ubox
72 78 0.006491345 ubox
72 86 0.011439308 ubox
72 89 0.003177050 ubox
73 85 0.011649939 ubox
74 82 0.011136938 ubox
74 85 0.139932856 ubox
75 81 0.018751792 ubox
75 84 0.347839714 ubox
76 80 0.012404022 ubox
76 83 0.348508690 ubox
76 89 0.003207357 ubox
77 82 0.318499388 ubox
78 100 0.004606141 ubox
79 99 0.004686125 ubox
80 100 0.006201417 ubox
81 99 0.010792900 ubox
83 97 0.013087235 ubox
83 100 0.049902910 ubox
84 96 0.013140516 ubox
84 99 0.050899007 ubox
85 95 0.012893683 ubox
85 98 0.050836522 ubox
86 97 0.042346517 ubox
87 96 0.039033371 ubox
87 99 0.004479475 ubox
87 100 0.003725866 ubox
88 100 0.010641315 ubox
89 96 0.005149530 ubox
89 97 0.030176925 ubox
89 99 0.012179748 ubox
89 100 0.975689154 ubox
90 96 0.031853650 ubox
90 99 0.997819938 ubox
91 95 0.029881118 ubox
91 98 0.998344780 ubox
92 97 0.998214827 ubox
1 86 0.9500000 lbox
2 85 0.9500000 lbox
3 84 0.9500000 lbox
5 83 0.9500000 lbox
6 82 0.9500000 lbox
7 81 0.9500000 lbox
10 74 0.9500000 lbox
11 73 0.9500000 lbox
12 72 0.9500000 lbox
13 71 0.9500000 lbox
14 69 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
18 65 0.9500000 lbox
19 64 0.9500000 lbox
20 63 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
28 54 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
89 100 0.9500000 lbox
90 99 0.9500000 lbox
91 98 0.9500000 lbox
92 97 0.9500000 lbox
showpage
end
%%EOF
