%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGUCUUCGUGUCUCCUCCCUCCCUCGCCUUCCUCCUUCCUAGCUCCUCUCCUCCAGGGCCAGACUGAGCCCAGGUUGAUUUCAGGCGGACACCAAUAGACUCCACAGCAGCUCCAGGAGCCCAGACACCGGCGGCCAGAAGCAAGGCUAGGAGCUGCUGCAGCCAUGUCGGCCCUCAGCCUCCUCAUUCUGGGCCUGCUCACGGCAGUGCCACCUGCCAGCUGUCAGCAAGGCCUGGGGAACCUUCAGCCCU\
GGAUGCAGGGCC\
) } def
/len { sequence length } bind def

/coor [
[104.26225281 574.38824463]
[96.39547729 571.74322510]
[88.91663361 568.13989258]
[81.94197083 563.63366699]
[75.57997894 558.29400635]
[69.92967224 552.20336914]
[65.07909393 545.45587158]
[61.10392380 538.15594482]
[58.06627655 530.41650391]
[56.01376343 522.35742188]
[54.97873306 514.10363770]
[54.97776031 505.78314209]
[56.01137924 497.52496338]
[58.06407547 489.45727539]
[61.10450745 481.70541382]
[65.08599854 474.38977051]
[69.94723511 467.62411499]
[75.61323547 461.51370239]
[81.99647522 456.15368652]
[88.99826813 451.62759399]
[96.51028442 448.00610352]
[104.41621399 445.34582520]
[112.59356689 443.68859863]
[112.24192810 428.69271851]
[111.89028931 413.69683838]
[111.53865051 398.70095825]
[111.18701172 383.70507812]
[101.26945496 369.20941162]
[110.28003693 353.13217163]
[109.75263977 338.14144897]
[109.22524261 323.15072632]
[108.69784546 308.16000366]
[108.17044830 293.16928101]
[99.99044037 280.72189331]
[107.23774719 266.65823364]
[106.71035004 251.66749573]
[98.30460358 247.74023438]
[91.85299683 240.99253845]
[88.26244354 232.31245422]
[88.05950928 222.86349487]
[91.31359100 213.92874146]
[97.62181091 206.73663330]
[106.15841675 202.29202271]
[106.33424377 187.29306030]
[106.51007843 172.29408264]
[106.68591309 157.29512024]
[106.86174011 142.29614258]
[94.22315979 141.98469543]
[82.36468506 138.02055359]
[72.30565643 130.83032227]
[64.88530731 121.11403656]
[60.69298172 109.77757263]
[60.02185822 97.84852600]
[62.84978104 86.38311768]
[68.84835052 76.37268066]
[77.41880798 68.65798187]
[87.75094604 63.85875320]
[85.82211304 48.98328400]
[83.89327240 34.10781479]
[81.96443939 19.23234558]
[72.51683044 6.54167414]
[78.55330658 -7.07486725]
[76.62447357 -21.95033646]
[74.69564056 -36.82580566]
[72.76680756 -51.70127487]
[70.83796692 -66.57674408]
[61.39035416 -79.26741791]
[67.42683411 -92.88395691]
[65.49800110 -107.75942993]
[63.56916809 -122.63489532]
[61.64033127 -137.51036072]
[52.68878555 -143.61219788]
[48.63853073 -153.42330933]
[50.59661484 -163.63235474]
[57.68442154 -170.93399048]
[56.10483551 -185.85058594]
[54.52525330 -200.76719666]
[52.94566727 -215.68379211]
[51.36608124 -230.60038757]
[49.78649902 -245.51698303]
[48.20691299 -260.43359375]
[40.92371368 -264.35330200]
[35.82444763 -270.74594116]
[33.67166901 -278.53771973]
[34.74070358 -286.45590210]
[38.78676987 -293.23693848]
[45.09598160 -297.82785034]
[44.21730423 -312.80209351]
[43.33863068 -327.77633667]
[34.80622864 -341.09957886]
[41.78470230 -354.25823975]
[40.90602875 -369.23248291]
[40.02735519 -384.20672607]
[39.14868164 -399.18093872]
[28.78746033 -401.26074219]
[19.09057426 -405.44110107]
[10.47841549 -411.53701782]
[3.32356310 -419.28054810]
[-2.06532240 -428.33255005]
[-5.45682049 -438.29757690]
[-6.70668602 -448.74108887]
[-5.76398087 -459.20843506]
[-2.67313933 -469.24468994]
[2.42811108 -478.41436768]
[9.31488609 -486.32025146]
[17.68505287 -492.62081909]
[27.17249298 -497.04473877]
[37.36310196 -499.40277100]
[37.71474075 -514.39862061]
[38.06637955 -529.39453125]
[38.41801453 -544.39038086]
[38.76965332 -559.38629150]
[39.12129211 -574.38214111]
[39.47293091 -589.37805176]
[39.82456970 -604.37390137]
[40.17620850 -619.36981201]
[40.52784729 -634.36566162]
[31.90881348 -637.92987061]
[24.98838425 -645.12158203]
[21.29057503 -655.09368896]
[21.90896988 -666.36822510]
[27.25288582 -677.05474854]
[25.32405090 -691.93023682]
[23.39521790 -706.80566406]
[9.70906258 -714.11791992]
[2.96506023 -728.09283447]
[5.75641727 -743.35675049]
[17.00979996 -754.04046631]
[32.39805222 -756.03576660]
[46.00407791 -748.57550049]
[52.59608078 -734.52825928]
[49.63930511 -719.29547119]
[38.27068710 -708.73449707]
[40.19952011 -693.85906982]
[42.12835312 -678.98358154]
[57.11186981 -678.28051758]
[60.42518616 -692.90997314]
[63.73850632 -707.53948975]
[67.05182648 -722.16894531]
[56.72211075 -733.74810791]
[55.20474243 -749.19079590]
[63.08318710 -762.55908203]
[77.32801819 -768.71246338]
[92.46180725 -765.28491211]
[102.66530609 -753.59442139]
[104.01506042 -738.13616943]
[95.99205780 -724.85418701]
[81.68131256 -718.85565186]
[78.36799622 -704.22613525]
[75.05467224 -689.59667969]
[71.74135590 -674.96716309]
[73.94356537 -648.03521729]
[55.52372742 -634.01403809]
[55.17208862 -619.01812744]
[54.82044983 -604.02227783]
[54.46881104 -589.02636719]
[54.11717224 -574.03051758]
[53.76553345 -559.03460693]
[53.41389465 -544.03875732]
[53.06225586 -529.04290771]
[52.71061707 -514.04699707]
[52.35897827 -499.05111694]
[70.71261597 -491.99917603]
[84.96981812 -478.41436768]
[92.92469788 -460.36535645]
[93.33374786 -440.61410522]
[86.11016083 -422.19311523]
[72.34083557 -407.93981934]
[54.12292099 -400.05963135]
[55.00159454 -385.08538818]
[55.88026810 -370.11114502]
[56.75894165 -355.13690186]
[65.22850037 -342.88473511]
[58.31287384 -328.65499878]
[59.19154739 -313.68075562]
[60.07022095 -298.70651245]
[73.63041687 -281.82397461]
[63.12351227 -262.01318359]
[64.70309448 -247.09657288]
[66.28268433 -232.17997742]
[67.86226654 -217.26336670]
[69.44184875 -202.34677124]
[71.02143097 -187.43017578]
[72.60102081 -172.51358032]
[85.07646179 -157.71435547]
[76.51580048 -139.43920898]
[78.44463348 -124.56373596]
[80.37347412 -109.68826294]
[82.30230713 -94.81278992]
[91.61195374 -83.18611145]
[85.71343994 -68.50557709]
[87.64227295 -53.63011169]
[89.57110596 -38.75464249]
[91.49993896 -23.87917137]
[93.42877960 -9.00370121]
[102.73842621 2.62297750]
[96.83991241 17.30351257]
[98.76874542 32.17898178]
[100.69757843 47.05445099]
[102.62641144 61.92992020]
[115.04991150 64.08371735]
[126.33374786 70.25972748]
[135.18800354 79.93891144]
[140.54148865 92.19333649]
[141.66955566 105.77400970]
[138.28771973 119.23792267]
[152.64819336 123.57115936]
[167.00866699 127.90438843]
[181.36912537 132.23762512]
[195.72959900 136.57086182]
[209.53659058 128.88041687]
[224.71447754 133.28578186]
[232.25849915 147.17329407]
[227.69293213 162.30377197]
[213.72642517 169.70054626]
[198.64506531 164.97525024]
[191.39637756 150.93132019]
[177.03590393 146.59809875]
[162.67543030 142.26486206]
[148.31495667 137.93162537]
[133.95448303 133.59838867]
[121.86071014 142.47198486]
[121.68487549 157.47094727]
[121.50904846 172.46990967]
[121.33321381 187.46888733]
[121.15738678 202.46784973]
[136.78294373 216.58763123]
[136.82792664 237.35165405]
[121.70107269 251.14010620]
[122.22846985 266.13082886]
[130.44619751 279.65042114]
[123.16117096 292.64187622]
[123.68856812 307.63259888]
[124.21596527 322.62332153]
[124.74336243 337.61404419]
[125.27075958 352.60476685]
[134.14454651 361.93405151]
[134.29383850 374.40832520]
[126.18289185 383.35342407]
[126.53453064 398.34930420]
[126.88616943 413.34518433]
[127.23780823 428.34106445]
[127.58944702 443.33694458]
[149.46157837 449.17541504]
[168.12428284 461.95727539]
[181.45182800 480.21224976]
[187.93095398 501.84750366]
[186.83271790 524.38757324]
[178.29443359 545.25750732]
[163.30267334 562.07720947]
[143.57928467 572.93273926]
[146.89259338 587.56219482]
[150.20591736 602.19171143]
[153.51924133 616.82116699]
[156.83255005 631.45068359]
[160.14587402 646.08013916]
[171.67117310 657.74633789]
[167.07029724 673.48681641]
[151.07621765 677.10919189]
[140.14228821 664.88708496]
[145.51638794 649.39349365]
[142.20306396 634.76397705]
[138.88975525 620.13452148]
[135.57643127 605.50500488]
[132.26310730 590.87554932]
[128.94978333 576.24603271]
[120.66672516 576.65673828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 243]
[24 242]
[25 241]
[26 240]
[27 239]
[29 236]
[30 235]
[31 234]
[32 233]
[33 232]
[35 230]
[36 229]
[43 226]
[44 225]
[45 224]
[46 223]
[47 222]
[57 200]
[58 199]
[59 198]
[60 197]
[62 195]
[63 194]
[64 193]
[65 192]
[66 191]
[68 189]
[69 188]
[70 187]
[71 186]
[75 184]
[76 183]
[77 182]
[78 181]
[79 180]
[80 179]
[81 178]
[87 176]
[88 175]
[89 174]
[91 172]
[92 171]
[93 170]
[94 169]
[108 162]
[109 161]
[110 160]
[111 159]
[112 158]
[113 157]
[114 156]
[115 155]
[116 154]
[117 153]
[122 135]
[123 134]
[124 133]
[136 151]
[137 150]
[138 149]
[139 148]
[206 221]
[207 220]
[208 219]
[209 218]
[210 217]
[251 266]
[252 265]
[253 264]
[254 263]
[255 262]
[256 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
