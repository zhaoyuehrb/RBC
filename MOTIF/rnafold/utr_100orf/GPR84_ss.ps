%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUUGAAGCCUAACUGUCCACCAGAAAGGACUGCUCUUUGGGUGAGUUGAACUUCUUCCAUUAUAGAAAGAAUUGAAGGCUGAGAAACUCAGCCUCUAUCAUGUGGAACAGCUCUGACGCCAACUUCUCCUGCUACCAUGAGUCUGUGCUGGGCUAUCGUUAUGUUGCAGUUAGCUGGGGGGUGGUGGUGGCUGUGACAG\
) } def
/len { sequence length } bind def

/coor [
[113.86559296 177.78627014]
[99.06221008 175.36557007]
[86.63964081 166.95845032]
[78.88948059 154.11573792]
[77.24140167 139.20655823]
[81.99942017 124.98118591]
[92.28330231 114.06550598]
[79.73918915 122.29016876]
[67.19506836 130.51484680]
[54.65095520 138.73950195]
[51.31421661 153.95475769]
[38.47553253 162.11705017]
[23.99067879 158.84220886]
[11.44656372 167.06687927]
[-1.09755147 175.29154968]
[-13.64166737 183.51620483]
[-26.18578339 191.74087524]
[-28.53872490 196.41467285]
[-32.09553528 199.41464233]
[-36.01528931 200.56251526]
[-39.50847244 200.04035950]
[-52.42078400 207.67398071]
[-65.33309174 215.30760193]
[-78.24540710 222.94122314]
[-82.20709229 235.22032166]
[-93.12423706 241.31149292]
[-104.87526703 238.42410278]
[-117.90416718 245.85699463]
[-130.93305969 253.28988647]
[-143.96195984 260.72277832]
[-156.99085999 268.15567017]
[-162.59289551 283.18884277]
[-177.88336182 288.04489136]
[-191.13270569 278.99868774]
[-192.17718506 262.98965454]
[-180.21554565 252.29859924]
[-164.42375183 255.12675476]
[-151.39485168 247.69387817]
[-138.36595154 240.26098633]
[-125.33705139 232.82809448]
[-112.30815125 225.39520264]
[-104.28867340 209.78881836]
[-85.87902832 210.02891541]
[-72.96672058 202.39529419]
[-60.05440521 194.76167297]
[-47.14209366 187.12805176]
[-34.41044998 179.19676208]
[-21.86633492 170.97209167]
[-9.32221985 162.74742126]
[3.22189593 154.52276611]
[15.76601124 146.29809570]
[18.53798294 131.70864868]
[31.14233589 123.18897247]
[46.42628860 126.19538879]
[58.97040558 117.97072601]
[71.51451874 109.74605560]
[84.05863190 101.52138519]
[85.79273987 96.73005676]
[88.77820587 93.15702820]
[81.04489899 80.30416870]
[73.31159210 67.45130920]
[65.57828522 54.59845352]
[57.84497452 41.74559402]
[39.78637314 32.79680252]
[40.26115417 13.47017574]
[32.13379669 0.86279505]
[24.00643921 -11.74458599]
[15.87908173 -24.35196686]
[7.75172377 -36.95934677]
[6.81314325 -21.98874092]
[-1.39917064 -9.43653488]
[-14.74067783 -2.58057451]
[-29.72741508 -3.21120691]
[-42.44578934 -11.16374969]
[-49.57456207 -24.36149979]
[-49.25214386 -39.35803604]
[-41.56273270 -52.23720169]
[-28.51431656 -59.63577271]
[-13.51432419 -59.62170792]
[-0.47882736 -52.19771576]
[-6.56573582 -65.90718079]
[-12.65264416 -79.61665344]
[-18.73955345 -93.32611847]
[-24.82646179 -107.03559113]
[-30.91337013 -120.74506378]
[-37.00027847 -134.45452881]
[-48.95384216 -146.47737122]
[-40.70993805 -161.29203796]
[-24.19209290 -157.47140503]
[-23.29080963 -140.54144287]
[-17.20390129 -126.83197021]
[-11.11699200 -113.12249756]
[-5.03008366 -99.41303253]
[1.05682468 -85.70355988]
[7.14373350 -71.99409485]
[13.23064137 -58.28462219]
[20.35910606 -45.08670425]
[28.48646355 -32.47932434]
[36.61381912 -19.87194443]
[44.74117661 -7.26456261]
[52.86853409 5.34281874]
[63.01758957 6.59572268]
[70.96628571 13.37302208]
[73.93030548 23.61827660]
[70.69783020 34.01228714]
[78.43114471 46.86514664]
[86.16445160 59.71800232]
[93.89775848 72.57086182]
[101.63106537 85.42372131]
[114.54337311 93.05734253]
[129.53215027 93.63754272]
[144.52091980 94.21773529]
[159.50970459 94.79793549]
[174.49847412 95.37813568]
[189.48724365 95.95833588]
[196.47904968 86.33371735]
[207.14086914 81.33316803]
[218.77224731 82.09536743]
[228.48832703 88.31524658]
[233.93531799 98.34855652]
[248.89895630 99.39232635]
[263.86260986 100.43610382]
[278.82623291 101.47987366]
[293.78988647 102.52365112]
[302.57498169 99.99781799]
[308.97644043 103.70112610]
[323.92211914 104.97634125]
[338.86782837 106.25154877]
[353.81353760 107.52676392]
[368.75921631 108.80197906]
[383.70492554 110.07719421]
[398.69369507 110.65739441]
[413.69323730 110.54132843]
[428.69277954 110.42526245]
[443.69235229 110.30918884]
[457.43222046 102.46533966]
[470.21899414 110.10392761]
[485.21853638 109.98786163]
[502.11203003 98.99674988]
[518.50714111 109.24093628]
[533.49591064 108.66073608]
[548.48474121 108.08053589]
[563.47351074 107.50033569]
[578.45147705 106.68825531]
[593.41510010 105.64447784]
[608.37878418 104.60070801]
[623.34240723 103.55693054]
[634.91235352 92.44313049]
[650.79553223 94.70225525]
[658.80773926 108.60130310]
[652.80273438 123.47811127]
[637.38702393 127.92046356]
[624.38616943 118.52056885]
[609.42254639 119.56434631]
[594.45892334 120.60812378]
[579.49523926 121.65189362]
[575.73742676 124.60883331]
[570.08056641 125.23228455]
[564.05371094 122.48911285]
[549.06494141 123.06931305]
[534.07611084 123.64951324]
[519.08734131 124.22970581]
[512.84387207 132.32861328]
[502.96469116 135.72198486]
[492.63696289 133.05958557]
[485.33462524 124.98741150]
[470.33505249 125.10347748]
[457.66802979 132.93902588]
[443.80841064 125.30874634]
[428.80886841 125.42481232]
[413.80929565 125.54087830]
[398.80975342 125.65694427]
[408.67825317 136.95353699]
[407.81146240 151.92846680]
[396.70547485 162.01100159]
[381.71673584 161.43051147]
[371.42382812 150.51922607]
[371.71780396 135.52210999]
[382.42968750 125.02289581]
[367.48400879 123.74768066]
[352.53829956 122.47246552]
[337.59262085 121.19725037]
[322.64691162 119.92203522]
[307.70123291 118.64682007]
[292.74609375 117.48728943]
[277.78247070 116.44351959]
[262.81881714 115.39974213]
[247.85517883 114.35596466]
[232.89154053 113.31219482]
[219.83221436 126.13405609]
[201.22872925 125.33118439]
[188.90705872 110.94711304]
[173.91827393 110.36691284]
[158.92950439 109.78671265]
[143.94073486 109.20651245]
[128.95195007 108.62631226]
[113.96318054 108.04611206]
[128.40531921 112.09883881]
[139.81535339 121.83593750]
[146.08848572 135.46119690]
[146.06748962 150.46118164]
[139.75625610 164.06884766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 57]
[8 56]
[9 55]
[10 54]
[13 51]
[14 50]
[15 49]
[16 48]
[17 47]
[21 46]
[22 45]
[23 44]
[24 43]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[59 109]
[60 108]
[61 107]
[62 106]
[63 105]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[110 197]
[111 196]
[112 195]
[113 194]
[114 193]
[115 192]
[120 189]
[121 188]
[122 187]
[123 186]
[124 185]
[126 184]
[127 183]
[128 182]
[129 181]
[130 180]
[131 179]
[132 172]
[133 171]
[134 170]
[135 169]
[137 167]
[138 166]
[140 162]
[141 161]
[142 160]
[143 159]
[144 156]
[145 155]
[146 154]
[147 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
