%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCCCGCGAGCAGGCAGCGCCGGCCCCCCGCCCCGCGGCCCCGGGCCCCGGCUCCGGCGCCGUCCCUCCUCCCCGGCCGGGCGCCGCGGCCCCGGCAUGAGGAGCGGGCGAUGAUCCCCGCCAACGCCUCCGCCAGGAAGGGGCCCGAGGGCAAGUAUCCGCUGCACUACCUCGUGUGGCACAACCGCCACCGCGAGCUGGAGAAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[163.80242920 163.15145874]
[154.59837341 151.30723572]
[145.39433289 139.46301270]
[136.19029236 127.61879730]
[126.98625183 115.77457428]
[119.48807526 115.60943604]
[104.49170685 115.27915192]
[96.99353027 115.11401367]
[87.27694702 126.54152679]
[77.56036377 137.96903992]
[67.84378815 149.39654541]
[64.94805908 167.58267212]
[48.19952774 172.82553101]
[38.65174866 184.39445496]
[35.83515930 199.96292114]
[21.76653481 204.85403442]
[12.21875477 216.42295837]
[13.53486061 231.94409180]
[3.68725085 243.54061890]
[-11.11788940 244.69966125]
[-20.66566849 256.26858521]
[-22.84645081 272.52209473]
[-38.11364746 278.50912476]
[-50.76167297 268.07077026]
[-47.77932739 251.94509888]
[-32.23458862 246.72080994]
[-22.68680954 235.15188599]
[-24.35715675 220.39569092]
[-14.83915424 208.52714539]
[0.64983493 206.87518311]
[10.19761467 195.30625916]
[12.33127975 180.56527710]
[27.08282661 174.84666443]
[36.63060760 163.27775574]
[35.79030228 151.21185303]
[43.64805603 141.49572754]
[56.41627121 139.67997742]
[66.13285065 128.25245667]
[75.84943390 116.82494354]
[85.56601715 105.39743042]
[88.84246063 90.75964355]
[84.92473602 76.28029633]
[81.00701141 61.80095291]
[77.08928680 47.32160568]
[73.06539154 32.87140656]
[68.93553162 18.45113373]
[64.80567932 4.03086042]
[60.67581940 -10.38941288]
[56.54596329 -24.80968666]
[52.41610718 -39.22996140]
[48.28625107 -53.65023422]
[44.15639496 -68.07051086]
[38.87693787 -82.11071014]
[32.48228073 -95.67936707]
[26.08762169 -109.24801636]
[10.97915268 -112.25473022]
[0.65876585 -123.45040131]
[-1.06983626 -138.39952087]
[6.24807167 -151.34501648]
[-0.14658634 -164.91368103]
[-6.54124451 -178.48233032]
[-12.93590260 -192.05097961]
[-34.27983856 -203.88473511]
[-31.81912041 -227.45057678]
[-39.57193756 -240.29168701]
[-47.32475662 -253.13278198]
[-55.07757568 -265.97387695]
[-62.83039474 -278.81497192]
[-70.67725372 -291.59881592]
[-78.61774445 -304.32473755]
[-86.55823517 -317.05062866]
[-94.49871826 -329.77655029]
[-102.43920898 -342.50244141]
[-110.37969208 -355.22833252]
[-122.25953674 -355.60421753]
[-132.37979126 -361.60568237]
[-138.28620911 -371.64288330]
[-138.61164856 -383.16452026]
[-133.39086914 -393.30596924]
[-140.95434570 -406.25949097]
[-148.51782227 -419.21301270]
[-156.08129883 -432.16653442]
[-163.64477539 -445.12008667]
[-171.20825195 -458.07360840]
[-178.23620605 -463.90481567]
[-178.78607178 -471.27325439]
[-186.15858459 -484.33642578]
[-200.54716492 -492.20413208]
[-200.65725708 -508.60290527]
[-186.37561035 -516.66308594]
[-172.39396667 -508.09307861]
[-173.09542847 -491.70892334]
[-165.72291565 -478.64578247]
[-158.25473022 -465.63708496]
[-150.69125366 -452.68356323]
[-143.12777710 -439.73004150]
[-135.56428528 -426.77648926]
[-128.00080872 -413.82296753]
[-120.43733978 -400.86944580]
[-102.48278809 -397.29037476]
[-92.67996216 -381.45114136]
[-97.65379333 -363.16882324]
[-89.71330261 -350.44293213]
[-81.77281189 -337.71701050]
[-73.83232880 -324.99111938]
[-65.89183807 -312.26522827]
[-57.95135117 -299.53930664]
[-51.74506760 -295.52951050]
[-49.98929596 -286.56777954]
[-42.23647690 -273.72668457]
[-34.48365784 -260.88558960]
[-26.73084068 -248.04449463]
[-18.97802353 -235.20339966]
[-13.01299953 -235.58209229]
[-7.13954401 -234.27401733]
[-1.82828593 -231.36093140]
[2.48880768 -227.05415344]
[5.45354414 -221.67926025]
[6.81116247 -215.65161133]
[6.43209028 -209.44418335]
[4.32395506 -203.55058289]
[0.63275039 -198.44564819]
[7.02740860 -184.87698364]
[13.42206669 -171.30833435]
[19.81672478 -157.73968506]
[34.45907974 -155.14364624]
[44.88846588 -144.29504395]
[46.95413208 -129.20909119]
[39.65627289 -115.64267731]
[46.05093384 -102.07402039]
[52.44559097 -88.50537109]
[67.10703278 -85.33645630]
[78.53454590 -95.05303192]
[89.96206665 -104.76961517]
[94.95758820 -120.38937378]
[111.03775024 -123.60811615]
[121.66065979 -111.11468506]
[115.89837646 -95.76124573]
[99.67864227 -93.34210205]
[88.25112915 -83.62551880]
[76.82361603 -73.90894318]
[67.32569885 -71.18151093]
[58.57666779 -72.20036316]
[62.70652390 -57.78009033]
[66.83638000 -43.35981750]
[70.96623993 -28.93954277]
[75.09609222 -14.51926899]
[79.22595215 -0.09899584]
[83.35580444 14.32127762]
[87.48566437 28.74155045]
[92.34809113 34.30511093]
[91.56863403 43.40388107]
[95.48635864 57.88322830]
[99.40408325 72.36257172]
[103.32180786 86.84191895]
[102.99213409 71.84554291]
[110.22296143 58.70342636]
[123.06679535 50.95513916]
[138.06440735 50.68753433]
[151.17648315 57.97267914]
[158.87155151 70.84847260]
[159.07710266 85.84706116]
[151.73774719 98.92887878]
[138.83047485 106.57053375]
[148.03451538 118.41475677]
[157.23855591 130.25897217]
[166.44259644 142.10319519]
[175.64663696 153.94741821]
[186.60040283 158.91702271]
[189.27964783 169.28349304]
[199.96382141 179.81195068]
[210.64799500 190.34040833]
[225.90834045 194.51560974]
[229.54290771 208.95996094]
[240.22706604 219.48841858]
[250.91123962 230.01689148]
[261.59539795 240.54534912]
[272.27957153 251.07380676]
[282.96374512 261.60226440]
[293.72491455 272.05203247]
[304.56250000 282.42251587]
[315.40005493 292.79299927]
[326.23764038 303.16348267]
[342.03057861 302.56497192]
[353.56414795 313.37017822]
[353.99566650 329.16857910]
[343.06912231 340.58724976]
[327.26702881 340.85171509]
[315.96453857 329.80505371]
[315.86715698 314.00106812]
[305.02957153 303.63058472]
[294.19198608 293.26010132]
[283.35443115 282.88961792]
[276.35006714 280.53689575]
[272.43530273 272.28643799]
[261.75112915 261.75796509]
[251.06695557 251.22952271]
[240.38278198 240.70104980]
[229.69860840 230.17259216]
[219.01443481 219.64413452]
[204.51829529 216.22200012]
[200.11952209 201.02458191]
[189.43536377 190.49612427]
[178.75119019 179.96765137]
[180.16130066 194.90122986]
[174.21423340 208.67193604]
[162.37641907 217.88420105]
[147.56680298 220.26647949]
[133.43713379 215.23133850]
[123.47151947 204.02033997]
[120.12726593 189.39788818]
[124.22899628 174.96958923]
[134.76530457 164.29316711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[5 164]
[8 40]
[9 39]
[10 38]
[11 37]
[13 34]
[14 33]
[16 31]
[17 30]
[20 27]
[21 26]
[41 155]
[42 154]
[43 153]
[44 152]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[50 145]
[51 144]
[52 143]
[53 131]
[54 130]
[55 129]
[59 125]
[60 124]
[61 123]
[62 122]
[64 113]
[65 112]
[66 111]
[67 110]
[68 109]
[69 107]
[70 106]
[71 105]
[72 104]
[73 103]
[74 102]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[86 93]
[87 92]
[132 141]
[133 140]
[134 139]
[170 204]
[171 203]
[172 202]
[174 200]
[175 199]
[176 198]
[177 197]
[178 196]
[179 195]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
