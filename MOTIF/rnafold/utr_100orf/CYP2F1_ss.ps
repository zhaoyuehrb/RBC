%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCACACCCAGAGCUGCAGGCUCUAGCGCAUCCCAGCCAGUGUCUCCUGCAGCUCAGCAGCUGCCUUCACCAUGGACAGCAUAAGCACAGCCAUCUUACUCCUGCUCCUGGCUCUCGUCUGUCUGCUCCUGACCCUAAGCUCAAGAGAUAAGGGAAAGCUGCCUCCGGGAC\
) } def
/len { sequence length } bind def

/coor [
[-48.23151779 339.79852295]
[-62.16749573 346.25485229]
[-77.46311951 344.86221313]
[-90.00394440 335.99523926]
[-96.41654968 322.03909302]
[-94.97598267 306.74789429]
[-86.06974030 294.23492432]
[-72.09355927 287.86608887]
[-70.73346710 272.92788696]
[-69.37337494 257.98968506]
[-74.20437622 255.08598328]
[-78.19376373 251.10417175]
[-92.35522461 256.04916382]
[-106.51667786 260.99417114]
[-120.67813873 265.93917847]
[-134.83959961 270.88418579]
[-149.00106812 275.82919312]
[-163.16252136 280.77416992]
[-177.32397461 285.71917725]
[-191.48544312 290.66418457]
[-205.64689636 295.60919189]
[-213.35571289 314.12722778]
[-231.89279175 320.95547485]
[-249.23043823 312.13824463]
[-263.10162354 317.84701538]
[-272.91857910 330.25418091]
[-287.63278198 327.94296265]
[-301.50396729 333.65173340]
[-305.02957153 348.76300049]
[-316.78604126 358.89044189]
[-332.25271606 360.13992310]
[-345.48239136 352.03094482]
[-351.38796997 337.68157959]
[-347.69860840 322.60946655]
[-335.83300781 312.61013794]
[-320.35366821 311.52853394]
[-307.21273804 319.78054810]
[-293.34155273 314.07177734]
[-284.51675415 302.07293701]
[-268.81042480 303.97583008]
[-254.93922424 298.26705933]
[-253.67543030 288.01834106]
[-248.21301270 279.15979004]
[-239.48844910 273.33868408]
[-229.05175781 271.67028809]
[-218.79124451 274.52474976]
[-210.59190369 281.44772339]
[-196.43045044 276.50271606]
[-182.26898193 271.55773926]
[-168.10752869 266.61273193]
[-153.94606018 261.66772461]
[-139.78460693 256.72271729]
[-125.62314606 251.77770996]
[-111.46168518 246.83271790]
[-97.30022430 241.88771057]
[-83.13876343 236.94270325]
[-71.52451324 215.98019409]
[-46.95862198 216.08653259]
[-35.47768784 206.43313599]
[-23.99675369 196.77973938]
[-12.51582050 187.12632751]
[-1.03488660 177.47293091]
[10.44604683 167.81953430]
[15.51336288 151.03395081]
[33.64685440 147.92755127]
[44.95060349 138.06726074]
[56.25435257 128.20697021]
[67.55810547 118.34668732]
[63.30320358 106.51327515]
[63.22589874 93.93839264]
[67.33499146 82.05355835]
[75.16268921 72.21176910]
[85.81790161 65.53340912]
[98.08760834 62.77876282]
[110.57501984 64.26141357]
[117.63846588 51.02858353]
[124.70190430 37.79575348]
[131.76535034 24.56292534]
[138.82879639 11.33009529]
[145.89224243 -1.90273452]
[147.18142700 -10.98268414]
[153.20597839 -15.31000900]
[160.50854492 -28.41239548]
[160.46852112 -44.23355103]
[173.42311096 -51.58391571]
[180.72567749 -64.68630219]
[180.64007568 -69.97699738]
[182.43359375 -74.32258606]
[185.42271423 -77.16104889]
[188.79946899 -78.28754425]
[196.80464172 -90.97286224]
[204.80981445 -103.65817261]
[212.81498718 -116.34348297]
[220.82017517 -129.02879333]
[211.75382996 -141.20112610]
[207.70062256 -155.82768250]
[209.20875549 -170.93032837]
[216.07421875 -184.46656799]
[227.36856079 -194.60572815]
[241.56427002 -199.97656250]
[256.74151611 -199.85273743]
[270.84771729 -194.25096130]
[281.97509766 -183.92886353]
[288.61877441 -170.28240967]
[289.88027954 -155.15715027]
[285.58895874 -140.59869385]
[276.32519531 -128.57591248]
[263.34182739 -120.71481323]
[248.39477539 -118.07853699]
[233.50547791 -121.02361298]
[225.50030518 -108.33830261]
[217.49513245 -95.65299225]
[209.48994446 -82.96768188]
[201.48477173 -70.28237152]
[193.82806396 -57.38373566]
[186.52549744 -44.28134918]
[187.08784485 -29.39736366]
[173.61093140 -21.10982895]
[166.30836487 -8.00744247]
[159.12506104 5.16070843]
[152.06163025 18.39353752]
[144.99818420 31.62636757]
[137.93473816 44.85919571]
[130.87129211 58.09202576]
[123.80785370 71.32485199]
[134.33537292 85.50311279]
[137.15451050 102.93595123]
[151.56422424 107.10250854]
[165.97393799 111.26905823]
[181.38023376 107.66951752]
[191.45745850 118.63758850]
[205.86717224 122.80414581]
[220.27688599 126.97069550]
[232.44255066 117.33865356]
[247.94770813 116.73059845]
[260.83032227 125.38034821]
[266.13674927 139.96189880]
[261.82656860 154.86833191]
[249.55712891 164.36784363]
[234.04627991 164.80764771]
[221.25827026 156.01866150]
[216.11033630 141.38041687]
[201.70062256 137.21385193]
[187.29090881 133.04730225]
[172.91529846 136.94487000]
[161.80738831 125.67877197]
[147.39767456 121.51222229]
[132.98796082 117.34566498]
[122.62400818 129.61810303]
[108.05760193 136.38891602]
[91.99447632 136.40040588]
[77.41838837 129.65043640]
[66.11463928 139.51072693]
[54.81089020 149.37101746]
[43.50714111 159.23129272]
[41.84469604 172.04544067]
[32.19670868 180.02491760]
[20.09944916 179.30046082]
[8.61851501 188.95387268]
[-2.86241841 198.60726929]
[-14.34335232 208.26066589]
[-25.82428551 217.91407776]
[-37.30521774 227.56747437]
[-35.76002502 235.73927307]
[-37.05036926 243.87338257]
[-40.97106934 251.02409363]
[-47.01438141 256.37869263]
[-54.43516541 259.34976196]
[-55.79525757 274.28796387]
[-57.15534973 289.22619629]
[-44.55918503 298.01437378]
[-38.05921173 311.93005371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 170]
[9 169]
[10 168]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[17 51]
[18 50]
[19 49]
[20 48]
[21 47]
[24 41]
[25 40]
[27 38]
[28 37]
[58 163]
[59 162]
[60 161]
[61 160]
[62 159]
[63 158]
[65 155]
[66 154]
[67 153]
[68 152]
[75 125]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
[82 119]
[83 118]
[85 116]
[86 115]
[90 114]
[91 113]
[92 112]
[93 111]
[94 110]
[127 148]
[128 147]
[129 146]
[131 144]
[132 143]
[133 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
