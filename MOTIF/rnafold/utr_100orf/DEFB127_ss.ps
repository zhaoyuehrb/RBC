%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGAGGAAGGUAGCAUAGUGUGCAGUUCACUGGACCAAAAGCUUUGGCUGCACCUCUUCUGGAAAGCCUGGCCAUGGGGCUCUUCAUGAUCAUUGCAAUUCUGCUGUUCCAGAAACCCACAGUAACCGAACAACUUAAGAAGUGCUGGAAUAACUAUGUACAAGGACAUUGCA\
) } def
/len { sequence length } bind def

/coor [
[118.16645813 131.71652222]
[105.84664154 136.08010864]
[92.77925873 135.83041382]
[80.63513184 130.99934387]
[70.96704865 122.20462799]
[57.43596649 128.67840576]
[43.90488052 135.15217590]
[30.37379456 141.62594604]
[27.33958435 152.11355591]
[19.18987656 159.04347229]
[8.78768921 160.29949951]
[-0.38376030 155.70533752]
[-14.13728809 161.69203186]
[-27.89081573 167.67872620]
[-41.64434433 173.66542053]
[-55.39786911 179.65209961]
[-61.48969269 196.03405762]
[-77.22846222 202.82305908]
[-92.70320129 196.27470398]
[-106.34767914 202.50592041]
[-119.99216461 208.73715210]
[-133.34507751 215.57084656]
[-146.37985229 222.99342346]
[-154.54328918 236.54588318]
[-169.43180847 236.12022400]
[-182.46658325 243.54280090]
[-195.50135803 250.96537781]
[-203.31381226 265.38403320]
[-219.71203613 265.55703735]
[-227.82696533 251.30642700]
[-219.31065369 237.29200745]
[-202.92393494 237.93060303]
[-189.88916016 230.50802612]
[-176.85438538 223.08544922]
[-169.62329102 210.06390381]
[-153.80242920 209.95864868]
[-140.76765442 202.53607178]
[-154.24096680 195.94290161]
[-157.66545105 181.33903503]
[-148.52755737 169.44371033]
[-133.53448486 168.98808289]
[-123.69113159 180.30659485]
[-126.22338867 195.09266663]
[-112.57891083 188.86145020]
[-98.93442535 182.63021851]
[-96.15653992 170.02876282]
[-86.47665405 161.20388794]
[-73.28617859 159.55130005]
[-61.38456345 165.89857483]
[-47.63103485 159.91188049]
[-33.87750626 153.92520142]
[-20.12397957 147.93850708]
[-6.37045240 141.95181274]
[3.91767025 125.60199738]
[23.90002251 128.09486389]
[37.43110657 121.62109375]
[50.96219254 115.14731598]
[64.49327850 108.67354584]
[65.53125000 87.84011841]
[77.79537201 70.96704865]
[71.32159424 57.43596649]
[64.72731781 43.96319580]
[58.01306152 30.54981804]
[51.29880142 17.13643837]
[44.58454514 3.72305894]
[31.48846054 -5.15405512]
[32.71040344 -19.99845123]
[25.99614716 -33.41183090]
[19.28188896 -46.82521057]
[12.56762981 -60.23859024]
[5.85337210 -73.65196991]
[-9.39885712 -77.10211945]
[-18.82382965 -89.58025360]
[-17.97136116 -105.19458771]
[-7.24396372 -116.57250214]
[8.29321671 -118.34169769]
[21.30399704 -109.66680908]
[25.64508438 -94.64385986]
[19.26675034 -80.36622620]
[25.98100853 -66.95285034]
[32.69526672 -53.53946686]
[39.40952682 -40.12609100]
[46.12378311 -26.71270943]
[58.73962021 -18.79501152]
[57.99792480 -2.99119925]
[64.71218109 10.42218018]
[71.42643738 23.83555984]
[78.14070129 37.24893951]
[83.96533966 41.83768463]
[84.85268402 50.96219254]
[91.32645416 64.49327850]
[103.87248230 63.65496445]
[115.96021271 67.11795044]
[126.15911102 74.47239685]
[133.26219177 84.84793854]
[136.42880249 97.01667786]
[151.31185913 98.88604736]
[166.19491577 100.75541687]
[181.07797241 102.62479401]
[195.96104431 104.49416351]
[210.84410095 106.36354065]
[225.74324036 108.10000610]
[240.65730286 109.70343018]
[255.57135010 111.30686188]
[272.52398682 94.23169708]
[296.31869507 95.05921936]
[311.71423340 112.88889313]
[326.69271851 112.08602142]
[341.67120361 111.28315735]
[356.64971924 110.48029327]
[371.62820435 109.67742920]
[386.60671997 108.87456512]
[401.58520508 108.07170105]
[416.56372070 107.26883698]
[420.56588745 91.98061371]
[429.08172607 78.69098663]
[441.26925659 68.69172668]
[455.93032837 62.95038223]
[471.62832642 62.01664352]
[486.82904053 65.96977234]
[500.05053711 74.41198730]
[510.00772095 86.50849152]
[515.73712158 101.06997681]
[530.69891357 99.99988556]
[545.66070557 98.92980194]
[552.96380615 85.34054565]
[566.46557617 77.87690735]
[581.85760498 78.92049408]
[594.22833252 88.13830566]
[599.63037109 102.58897400]
[596.33990479 117.66133881]
[585.40686035 128.54586792]
[570.32000732 131.76934814]
[555.89349365 126.30316925]
[546.73077393 113.89158630]
[531.76898193 114.96166992]
[516.80718994 116.03176117]
[513.71813965 129.96374512]
[506.81610107 142.47210693]
[496.65405273 152.53619385]
[484.05136108 159.33183289]
[470.02774048 162.29898071]
[455.72085571 161.18772888]
[442.29382324 156.07942200]
[430.84085083 147.38070679]
[422.29797363 135.79122925]
[417.36657715 122.24733734]
[402.38806152 123.05020142]
[387.40957642 123.85306549]
[372.43109131 124.65592957]
[357.45257568 125.45879364]
[342.47409058 126.26165771]
[327.49557495 127.06452179]
[312.51708984 127.86738586]
[310.43856812 134.34605408]
[306.91253662 140.18640137]
[302.12179565 145.06919861]
[296.31869507 148.72529602]
[289.81152344 150.95045471]
[282.94836426 151.61669922]
[276.09844971 150.67974854]
[269.63220215 148.18174744]
[263.90124512 144.24948120]
[259.21932983 139.08799744]
[255.84513855 132.96987915]
[253.96792603 126.22091675]
[239.05387878 124.61748505]
[224.13981628 123.01406097]
[217.13047791 125.43319702]
[208.97471619 121.24659729]
[194.09165955 119.37722778]
[179.20860291 117.50785065]
[164.32554626 115.63848114]
[149.44248962 113.76910400]
[134.55943298 111.89973450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 58]
[6 57]
[7 56]
[8 55]
[12 53]
[13 52]
[14 51]
[15 50]
[16 49]
[19 45]
[20 44]
[21 43]
[22 37]
[23 36]
[25 34]
[26 33]
[27 32]
[60 91]
[61 90]
[62 88]
[63 87]
[64 86]
[65 85]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[96 175]
[97 174]
[98 173]
[99 172]
[100 171]
[101 170]
[102 168]
[103 167]
[104 166]
[107 154]
[108 153]
[109 152]
[110 151]
[111 150]
[112 149]
[113 148]
[114 147]
[123 137]
[124 136]
[125 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
