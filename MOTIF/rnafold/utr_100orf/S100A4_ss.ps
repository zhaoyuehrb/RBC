%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUCCCCUCUCUACAACCCUCUCUCCUCAGCGCUUCUUCUUUCUUGGUUUGGUGCUUCUGAGAUGUGGGCUUGCACACGCUGUUGCUAUAGUACGUGUUGAUCCUGACUGCUGUCAUGGCGUGCCCUCUGGAGAAGGCCCUGGAUGUGAUGGUGUCCACCUUCCACAAGUACUCGGGCAAAGAGGGUGACAAGUUCAAGCUCAACAAGUCAGAAC\
) } def
/len { sequence length } bind def

/coor [
[134.52679443 287.96832275]
[127.17321014 279.45654297]
[123.50778198 268.76794434]
[124.09555817 257.43225098]
[128.88992310 247.08697510]
[137.23385620 239.24085999]
[132.78315735 224.91635132]
[128.22984314 210.62414551]
[123.57412720 196.36495972]
[118.91841125 182.10577393]
[114.26269531 167.84660339]
[109.60697937 153.58741760]
[104.95126343 139.32823181]
[92.43572998 138.91023254]
[80.67512512 134.60887146]
[70.84321594 126.85342407]
[63.92124557 116.41791534]
[49.33946991 119.93528748]
[34.75769806 123.45265961]
[20.20152855 127.07453156]
[5.67171240 130.80070496]
[-8.85810471 134.52688599]
[-17.49297142 149.74391174]
[-34.13471603 153.92262268]
[-48.36224365 144.95010376]
[-62.83711243 148.88432312]
[-77.31198120 152.81854248]
[-91.78685760 156.75277710]
[-97.37850952 171.10684204]
[-110.20024872 179.32003784]
[-125.22197723 178.41911316]
[-136.69541931 168.95877075]
[-151.17028809 172.89299011]
[-165.64515686 176.82720947]
[-180.12004089 180.76142883]
[-194.59490967 184.69566345]
[-209.06977844 188.62988281]
[-214.66143799 202.98396301]
[-227.48316956 211.19714355]
[-242.50489807 210.29621887]
[-253.97834778 200.83587646]
[-268.45321655 204.77009583]
[-276.08773804 218.60807800]
[-291.29406738 222.91426086]
[-305.05053711 215.13386536]
[-309.19570923 199.88285828]
[-301.27032471 186.20939636]
[-285.97634888 182.22570801]
[-272.38745117 190.29522705]
[-257.91256714 186.36100769]
[-252.80648804 172.39440918]
[-240.30754089 164.01344299]
[-225.09234619 164.60629272]
[-213.00399780 174.15501404]
[-198.52912903 170.22077942]
[-184.05426025 166.28656006]
[-169.57939148 162.35234070]
[-155.10452271 158.41812134]
[-140.62963867 154.48390198]
[-135.52355957 140.51730347]
[-123.02462006 132.13633728]
[-107.80943298 132.72918701]
[-95.72107697 142.27789307]
[-81.24620819 138.34367371]
[-66.77133942 134.40945435]
[-52.29646301 130.47523499]
[-47.52342224 118.51033783]
[-36.56798172 111.37107086]
[-23.30573082 111.85033417]
[-12.58428478 119.99707031]
[1.94553244 116.27088928]
[16.47534943 112.54470825]
[22.17024803 107.84111786]
[31.24032784 108.87088776]
[45.82210159 105.35351562]
[60.40387344 101.83614349]
[58.06071091 85.42079926]
[62.89166641 67.75062561]
[54.74916840 55.15301895]
[46.60667038 42.55541229]
[38.46417618 29.95780373]
[30.32167816 17.36019516]
[21.99930954 4.88068390]
[13.49878311 -7.47816086]
[4.99825668 -19.83700562]
[-3.50226951 -32.19585037]
[-18.53113747 -38.75825882]
[-20.09322357 -55.08283615]
[-6.58158922 -64.37626648]
[8.10415554 -57.07825470]
[8.85657597 -40.69637680]
[17.35710144 -28.33753204]
[25.85762787 -15.97868729]
[34.35815430 -3.61984229]
[38.80252457 -1.88631463]
[42.20771027 2.65427303]
[42.91928482 9.21769810]
[51.06178284 21.81530571]
[59.20428085 34.41291428]
[67.34677887 47.01052475]
[75.48927307 59.60813141]
[82.80464172 57.95421219]
[79.49703979 43.32342911]
[94.12788391 40.01607895]
[97.43536377 54.64637375]
[104.75073242 52.99245453]
[106.68195343 38.11729431]
[108.50643158 23.22866631]
[110.22407532 8.32733440]
[111.94172668 -6.57399702]
[113.65937042 -21.47532845]
[106.64706421 -36.29962158]
[116.20034790 -49.62878799]
[132.49162292 -47.75093079]
[138.76182556 -32.59782028]
[128.56069946 -19.75768471]
[126.84305573 -4.85635281]
[125.12541199 10.04497910]
[123.40776825 24.94631195]
[125.76309967 31.94688606]
[121.55711365 40.04851913]
[119.62589264 54.92367935]
[127.13476562 62.86978912]
[132.20904541 71.79391479]
[134.80940247 81.03873444]
[149.10162354 76.48541260]
[163.39382935 71.93209076]
[177.68603516 67.37876892]
[191.97825623 62.82545090]
[200.52807617 42.75293350]
[220.86262512 35.67049789]
[239.53147888 45.81650925]
[253.46063232 40.25065231]
[259.75646973 26.00283623]
[273.96188354 20.55669403]
[287.50619507 26.64661026]
[301.43536377 21.08075523]
[315.36450195 15.51489925]
[329.29364014 9.94904423]
[343.22280884 4.38318872]
[346.44396973 0.29077673]
[350.50552368 -1.93790126]
[354.55844116 -2.29448771]
[357.87289429 -1.10823607]
[372.02862549 -6.06967497]
[386.18432617 -11.03111362]
[400.34002686 -15.99255276]
[414.49575806 -20.95399094]
[418.82165527 -35.85587311]
[431.10113525 -45.34241104]
[446.61242676 -45.76584625]
[459.39114380 -36.96335220]
[464.52362061 -22.31967163]
[460.03628540 -7.46559620]
[447.65463257 1.88717759]
[432.13964844 2.14231801]
[419.45718384 -6.79828167]
[405.30148315 -1.83684289]
[391.14575195 3.12459612]
[376.99005127 8.08603477]
[362.83435059 13.04747391]
[348.78866577 18.31233978]
[334.85949707 23.87819481]
[320.93035889 29.44405174]
[307.00122070 35.00990677]
[293.07205200 40.57576370]
[287.45416260 54.32257462]
[273.40731812 60.16556931]
[259.02648926 54.17980194]
[245.09733582 59.74565887]
[244.56958008 68.32780457]
[241.27038574 76.31501770]
[235.53039551 82.83306122]
[227.94900513 87.15868378]
[219.33187866 88.79980469]
[210.60530090 87.55133820]
[202.71665955 83.52039337]
[196.53157043 77.11766052]
[182.23936462 81.67098236]
[167.94714355 86.22430420]
[153.65493774 90.77762604]
[139.36273193 95.33094025]
[135.27951050 118.07154083]
[119.21044922 134.67251587]
[123.86616516 148.93170166]
[128.52188110 163.19088745]
[133.17759705 177.45005798]
[137.83331299 191.70924377]
[142.48902893 205.96842957]
[148.12419128 213.14976501]
[147.10766602 220.46566772]
[151.55834961 234.79016113]
[169.93315125 240.16999817]
[181.25758362 255.42123413]
[181.09600830 274.26611328]
[169.69500732 289.08270264]
[174.75784302 303.20245361]
[179.82069397 317.32223511]
[184.88352966 331.44198608]
[198.89645386 338.24462891]
[203.82975769 352.63619995]
[197.25811768 365.95343018]
[202.32095337 380.07321167]
[207.38380432 394.19296265]
[221.21887207 402.31515503]
[223.35198975 418.21578979]
[212.14680481 429.69720459]
[196.19897461 427.95187378]
[187.74230957 414.31866455]
[193.26403809 399.25579834]
[188.20120239 385.13604736]
[183.13835144 371.01629639]
[169.60180664 364.90911865]
[164.26622009 350.66180420]
[170.76377869 336.50482178]
[165.70092773 322.38507080]
[160.63809204 308.26531982]
[155.57524109 294.14553833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 192]
[7 191]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[17 76]
[18 75]
[19 74]
[20 72]
[21 71]
[22 70]
[25 66]
[26 65]
[27 64]
[28 63]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[41 50]
[42 49]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 94]
[84 93]
[85 92]
[86 91]
[106 122]
[107 121]
[108 119]
[109 118]
[110 117]
[111 116]
[125 182]
[126 181]
[127 180]
[128 179]
[129 178]
[132 170]
[133 169]
[136 166]
[137 165]
[138 164]
[139 163]
[140 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[196 218]
[197 217]
[198 216]
[199 215]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
