%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR4S2)
} def

/sequence { (\
AUGGAAAAAAUAAACAACGUAACUGAAUUCAUUUUCUGGGGUCUUUCUCAGAGCCCAGAGAUUGAGAAAGUUUGUUUUGUGGUGUUUUCUUUCUUCUACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.005174071 ubox
2 10 0.005508010 ubox
2 16 0.006473492 ubox
2 98 0.375418747 ubox
2 100 0.026361411 ubox
3 11 0.003307047 ubox
3 15 0.008926760 ubox
3 87 0.008061133 ubox
3 88 0.013265415 ubox
3 89 0.157689810 ubox
3 90 0.539096140 ubox
3 91 0.026743517 ubox
3 92 0.073505244 ubox
3 93 0.400252267 ubox
3 94 0.468343543 ubox
3 95 0.022177087 ubox
3 96 0.070472839 ubox
3 97 0.422799986 ubox
3 99 0.029745167 ubox
4 86 0.010234865 ubox
4 87 0.017156776 ubox
4 88 0.158053127 ubox
4 89 0.583624254 ubox
4 90 0.011651614 ubox
4 91 0.095025397 ubox
4 92 0.402087565 ubox
4 93 0.507518830 ubox
4 94 0.004995877 ubox
4 95 0.065862201 ubox
4 96 0.427716068 ubox
5 85 0.010411090 ubox
5 86 0.017908208 ubox
5 87 0.157952051 ubox
5 88 0.581468938 ubox
5 90 0.098059428 ubox
5 91 0.402116230 ubox
5 92 0.506340093 ubox
5 94 0.065221366 ubox
5 95 0.426666547 ubox
6 85 0.018237758 ubox
6 86 0.156724757 ubox
6 87 0.574378348 ubox
6 88 0.063597443 ubox
6 90 0.389754680 ubox
6 91 0.480628538 ubox
6 92 0.031324826 ubox
6 94 0.410934382 ubox
6 95 0.009712647 ubox
7 78 0.013505149 ubox
7 85 0.152505746 ubox
7 86 0.565150427 ubox
7 87 0.085597792 ubox
7 88 0.589997126 ubox
7 90 0.350706372 ubox
7 91 0.037640648 ubox
7 92 0.214344833 ubox
7 94 0.010922522 ubox
8 77 0.015379925 ubox
8 85 0.520032942 ubox
8 86 0.096046353 ubox
8 87 0.688054663 ubox
8 88 0.092919245 ubox
8 90 0.031200494 ubox
8 91 0.220351893 ubox
8 92 0.195662661 ubox
9 76 0.015786475 ubox
9 78 0.003990372 ubox
9 85 0.098834379 ubox
9 86 0.712222897 ubox
9 87 0.088997630 ubox
9 88 0.067579604 ubox
9 90 0.216017284 ubox
9 91 0.204600432 ubox
9 92 0.014162263 ubox
10 75 0.015835345 ubox
10 77 0.003451512 ubox
10 80 0.123439952 ubox
10 83 0.355107575 ubox
10 85 0.719418712 ubox
10 86 0.078910630 ubox
10 87 0.064713760 ubox
10 90 0.196404608 ubox
10 91 0.014421299 ubox
11 74 0.015840014 ubox
11 79 0.126937755 ubox
11 81 0.108972131 ubox
11 82 0.349232785 ubox
11 84 0.719832973 ubox
12 73 0.015788491 ubox
12 77 0.079734235 ubox
12 78 0.124255927 ubox
12 80 0.111202550 ubox
12 83 0.680146205 ubox
12 86 0.017477152 ubox
12 87 0.312692511 ubox
12 88 0.045499506 ubox
13 72 0.014678773 ubox
13 76 0.091534132 ubox
13 77 0.115050185 ubox
13 78 0.055993822 ubox
13 85 0.016479497 ubox
13 86 0.319582491 ubox
13 87 0.041806222 ubox
13 88 0.004094752 ubox
14 71 0.013511736 ubox
14 75 0.097052227 ubox
14 76 0.079048274 ubox
14 77 0.056285605 ubox
14 80 0.887336213 ubox
14 83 0.079092063 ubox
14 85 0.321748932 ubox
14 86 0.029352520 ubox
15 70 0.013143890 ubox
15 74 0.101390087 ubox
15 79 0.891921722 ubox
15 81 0.094248736 ubox
15 82 0.081332369 ubox
15 84 0.322711717 ubox
16 72 0.004266547 ubox
16 73 0.100802679 ubox
16 76 0.378523387 ubox
16 77 0.083057459 ubox
16 78 0.823286243 ubox
16 80 0.080447352 ubox
16 83 0.290161980 ubox
16 86 0.005731944 ubox
17 71 0.005825491 ubox
17 72 0.070960063 ubox
17 75 0.683267134 ubox
17 76 0.091030452 ubox
17 77 0.605365991 ubox
17 80 0.216087668 ubox
17 83 0.045466173 ubox
17 85 0.007077270 ubox
18 25 0.006514094 ubox
18 70 0.006986788 ubox
18 74 0.751964975 ubox
18 79 0.227995443 ubox
18 81 0.113031531 ubox
18 82 0.063161409 ubox
18 84 0.007184733 ubox
19 24 0.004681883 ubox
19 73 0.701232631 ubox
19 75 0.200957351 ubox
19 78 0.213082568 ubox
19 80 0.103669201 ubox
19 83 0.006546262 ubox
20 74 0.194997486 ubox
20 79 0.081820692 ubox
20 81 0.011587251 ubox
20 82 0.004126127 ubox
21 72 0.915708023 ubox
21 73 0.165891298 ubox
21 76 0.217065911 ubox
21 77 0.031654993 ubox
21 78 0.070639417 ubox
21 80 0.009283066 ubox
22 71 0.962021627 ubox
22 72 0.119552884 ubox
22 75 0.221660848 ubox
22 76 0.029818446 ubox
22 77 0.048226875 ubox
22 80 0.022172657 ubox
23 66 0.004944229 ubox
23 70 0.971144056 ubox
23 74 0.220907260 ubox
23 79 0.023018011 ubox
24 65 0.004469759 ubox
24 69 0.964433220 ubox
24 74 0.046059544 ubox
25 72 0.092727861 ubox
25 73 0.165465076 ubox
25 77 0.021259448 ubox
25 78 0.003829516 ubox
26 63 0.004100708 ubox
26 71 0.099290984 ubox
26 72 0.177328989 ubox
26 73 0.016066577 ubox
26 76 0.023513095 ubox
26 77 0.004059142 ubox
27 62 0.004115207 ubox
27 71 0.177606830 ubox
27 72 0.016751768 ubox
27 75 0.023466823 ubox
27 76 0.004001340 ubox
28 61 0.003523020 ubox
28 65 0.086167677 ubox
28 66 0.865158767 ubox
28 67 0.037875316 ubox
28 68 0.027211353 ubox
28 69 0.034056552 ubox
28 70 0.158622263 ubox
28 74 0.020701338 ubox
29 64 0.027955597 ubox
29 65 0.989074509 ubox
29 66 0.022930592 ubox
29 67 0.026954475 ubox
29 68 0.015356656 ubox
29 69 0.052544594 ubox
30 64 0.998691985 ubox
30 66 0.026674980 ubox
31 62 0.032657443 ubox
31 63 0.985032331 ubox
32 61 0.036905959 ubox
32 65 0.006480220 ubox
33 60 0.030414559 ubox
33 61 0.981731407 ubox
33 64 0.004679286 ubox
34 59 0.021526837 ubox
34 60 0.996730078 ubox
34 61 0.005739523 ubox
35 59 0.999096731 ubox
35 60 0.003290495 ubox
36 58 0.999977410 ubox
37 57 0.999751418 ubox
38 56 0.999945132 ubox
39 55 0.999911990 ubox
39 56 0.009292655 ubox
40 54 0.999668215 ubox
40 55 0.012872403 ubox
41 54 0.015647989 ubox
42 52 0.997111171 ubox
42 53 0.007114784 ubox
43 51 0.999314908 ubox
43 53 0.025495036 ubox
44 50 0.957068524 ubox
44 51 0.008115348 ubox
44 52 0.025746738 ubox
45 50 0.048038502 ubox
45 51 0.025430964 ubox
45 53 0.003905595 ubox
46 50 0.021577548 ubox
46 52 0.004365390 ubox
47 51 0.004515671 ubox
66 78 0.004005584 ubox
67 77 0.004787994 ubox
67 78 0.003700922 ubox
68 76 0.005044597 ubox
68 77 0.003954691 ubox
69 75 0.004987963 ubox
69 76 0.003866579 ubox
76 81 0.005701726 ubox
77 81 0.003177742 ubox
78 100 0.051410153 ubox
79 99 0.067364970 ubox
80 98 0.067380373 ubox
81 89 0.014757301 ubox
81 90 0.013930223 ubox
81 93 0.005755779 ubox
81 94 0.003362869 ubox
81 96 0.004025976 ubox
81 97 0.067297401 ubox
82 87 0.003335482 ubox
82 88 0.014044971 ubox
82 89 0.015749328 ubox
82 92 0.005399112 ubox
82 93 0.004008401 ubox
82 95 0.003811115 ubox
82 96 0.067164104 ubox
82 99 0.005861535 ubox
83 98 0.005848192 ubox
83 100 0.005538045 ubox
84 97 0.005477454 ubox
84 99 0.007165596 ubox
85 98 0.007071376 ubox
3 90 0.9500000 lbox
4 89 0.9500000 lbox
5 88 0.9500000 lbox
6 87 0.9500000 lbox
7 86 0.9500000 lbox
8 85 0.9500000 lbox
14 80 0.9500000 lbox
15 79 0.9500000 lbox
16 78 0.9500000 lbox
17 77 0.9500000 lbox
21 72 0.9500000 lbox
22 71 0.9500000 lbox
23 70 0.9500000 lbox
24 69 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
30 64 0.9500000 lbox
31 63 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
showpage
end
%%EOF
