%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCAAAGAGGCAGCUGCAGUGGAGAAUCAUGUUAAGCUCGGCUACUGCGGAGAGCCCAAGGUAGCCCAAUAAUGGAUUUUGAUGAGCGUGGUCCCUGCUCCUCUAACAUGUAUUUGCCAAGUUGUACUUACUACGUCUCGGGUCCAGAUUUCUCCAGCCUCCCUUCUUUUC\
) } def
/len { sequence length } bind def

/coor [
[66.39812469 400.64010620]
[56.85762024 388.89984131]
[51.41390228 374.78527832]
[50.60028076 359.67919922]
[54.49647522 345.06158447]
[62.72076797 332.36450195]
[74.46743011 322.83184814]
[88.58564758 317.39758301]
[87.76887512 302.41986084]
[86.95210266 287.44210815]
[86.13533020 272.46435547]
[85.31855774 257.48660278]
[75.84114075 269.11325073]
[61.37627411 273.08410645]
[47.29110718 267.92581177]
[38.81189346 255.55232239]
[39.08482742 240.55480957]
[48.00863266 228.49803162]
[62.27215958 223.85563660]
[76.58296967 228.35017395]
[85.63047028 240.31222534]
[86.99056244 225.37400818]
[88.35064697 210.43580627]
[89.71073914 195.49758911]
[91.07083130 180.55937195]
[92.43092346 165.62117004]
[93.79101562 150.68295288]
[95.01541901 135.73301697]
[96.10403442 120.77256775]
[87.97626495 133.37968445]
[83.18756866 147.59475708]
[72.14119720 157.74255371]
[57.57180786 161.31085205]
[43.08621597 157.41630554]
[32.27049255 147.02302551]
[27.80220222 132.70401001]
[30.78751564 118.00407410]
[40.48738480 106.56237793]
[54.50049973 101.21142578]
[69.35948181 103.27663422]
[84.26952362 101.63635254]
[70.39833832 95.92757416]
[56.52715302 90.21879578]
[42.65596390 84.51001740]
[28.78477669 78.80123901]
[14.91358948 73.09246063]
[1.04240239 67.38367462]
[-13.39921474 73.22126770]
[-27.38524818 67.23415375]
[-32.86149597 53.43030167]
[-46.73268509 47.72152328]
[-62.03422928 52.54255295]
[-75.26283264 43.46601105]
[-76.27064514 27.45464325]
[-64.28455353 16.79100227]
[-48.49926758 19.65531921]
[-41.02390671 33.85033417]
[-27.15271759 39.55911636]
[-13.54650211 33.60877991]
[0.60217804 39.20069504]
[6.75118208 53.51248932]
[20.62236977 59.22127151]
[34.49355698 64.93005371]
[48.36474228 70.63883209]
[62.23593140 76.34761047]
[76.10711670 82.05638885]
[89.97830200 87.76516724]
[79.33856201 77.19181061]
[78.53563690 62.21331406]
[87.98406219 50.56311417]
[102.80561066 48.25623322]
[115.34787750 56.48371887]
[119.13526917 70.99770355]
[112.21080017 84.30593872]
[123.69173431 74.65253448]
[135.17266846 64.99913788]
[146.65359497 55.34573364]
[158.13453674 45.69233322]
[169.61546326 36.03892899]
[170.96890259 31.82759285]
[173.36573792 28.60746765]
[176.35910034 26.58676720]
[179.48054504 25.80451012]
[182.29803467 26.13846779]
[194.44927979 17.34374046]
[206.60052490 8.54901314]
[218.75177002 -0.24571453]
[230.82266235 -9.15040779]
[242.81219482 -18.16433334]
[254.80174255 -27.17825890]
[266.79129028 -36.19218445]
[278.78082275 -45.20611191]
[290.77038574 -54.22003555]
[290.65005493 -69.62431335]
[299.51968384 -82.00103760]
[313.80743408 -86.72590637]
[327.96817017 -82.18591309]
[339.95770264 -91.19983673]
[351.94723511 -100.21376038]
[354.29913330 -115.61202240]
[366.58663940 -124.58262634]
[381.25204468 -122.24556732]
[393.24157715 -131.25949097]
[391.99322510 -145.00685120]
[397.66418457 -157.47312927]
[408.67190552 -165.43820190]
[422.07089233 -166.90310669]
[434.34069824 -161.59075928]
[446.49194336 -170.38548279]
[448.74484253 -186.02836609]
[461.44894409 -195.42950439]
[477.06713867 -193.01135254]
[486.33343506 -180.20857239]
[483.75030518 -164.61680603]
[470.85025024 -155.48638916]
[455.28668213 -158.23423767]
[443.13543701 -149.43951416]
[443.63861084 -133.04782104]
[434.18835449 -119.44252777]
[418.33779907 -114.08544159]
[402.25552368 -119.26994324]
[390.26596069 -110.25601959]
[388.43743896 -95.51857758]
[376.40676880 -86.20638275]
[360.96118164 -88.22422028]
[348.97161865 -79.21029663]
[336.98208618 -70.19637299]
[337.41000366 -55.33181763]
[328.90234375 -42.91875839]
[314.54895020 -37.83607101]
[299.78430176 -42.23049164]
[287.79476929 -33.21656799]
[275.80520630 -24.20264053]
[263.81567383 -15.18871593]
[251.82612610 -6.17479038]
[239.83657837 2.83913517]
[236.36730957 9.39544010]
[227.54649353 11.90553093]
[215.39524841 20.70025826]
[203.24400330 29.49498558]
[191.09275818 38.28971481]
[179.26887512 47.51986313]
[167.78793335 57.17326736]
[156.30700684 66.82666779]
[144.82606506 76.48007202]
[133.34513855 86.13346863]
[121.86419678 95.78687286]
[111.06447601 121.86117554]
[109.97586060 136.82162476]
[112.48059845 145.64396667]
[108.72922516 152.04304504]
[107.36913300 166.98126221]
[106.00904846 181.91946411]
[104.64895630 196.85768127]
[103.28886414 211.79588318]
[101.92877197 226.73410034]
[100.56867981 241.67231750]
[100.29630280 256.66983032]
[101.11307526 271.64758301]
[101.92984772 286.62533569]
[102.74662018 301.60308838]
[103.56339264 316.58081055]
[118.18881989 320.44763184]
[130.90242004 328.64639282]
[140.45864868 340.37387085]
[145.92127991 354.48110962]
[146.75514221 369.58609009]
[142.87854004 384.20892334]
[134.67126465 396.91702271]
[122.93738556 406.46539307]
[108.82646942 411.91854858]
[93.72095490 412.74230957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 162]
[9 161]
[10 160]
[11 159]
[12 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[27 151]
[28 149]
[29 148]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[50 58]
[51 57]
[74 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[84 141]
[85 140]
[86 139]
[87 138]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[97 127]
[98 126]
[99 125]
[102 122]
[103 121]
[108 117]
[109 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
