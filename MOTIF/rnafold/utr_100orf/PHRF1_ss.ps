%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAGCCCGGAAGAGGCGCCGUGCACUUCCGGGUCGAAGAGCGCACGGCGGCGGCAGAGGCGGCGGCGGCCGGGCCUAGGAGCGACUCUCGGUCGUGCAGCGGCGGCGAGCGCUCGCGAGCGGCUGCGGGACGCGAGGUUUCCGGAGCUGAGCUCAAUGUGCAGCAAUGGAUGACGACAGCCUGGAUGAGCUUGUGGCCCGGAGCCCAGGGCCGGAUGGACACCCACAGGUCGGCCCUGCGGACCCGGCAGGU\
GACUUUGAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[117.45547485 380.30926514]
[105.02815247 371.90914917]
[96.71094513 359.42620850]
[93.74450684 344.72033691]
[89.25945282 359.03411865]
[92.51648712 374.51641846]
[81.32765198 384.34796143]
[76.84259796 398.66174316]
[72.35754395 412.97552490]
[80.93498993 426.05075073]
[79.04977417 441.57427979]
[67.59203339 452.21640015]
[51.97177124 452.95217896]
[39.56439209 443.43426514]
[36.22828293 428.15667725]
[43.53865051 414.33306885]
[58.04376602 408.49047852]
[62.52882004 394.17669678]
[67.01387024 379.86291504]
[63.43603897 365.40441895]
[74.94567871 354.54904175]
[79.43073273 340.23529053]
[82.73193359 325.60305786]
[84.82723999 310.75012207]
[82.65744019 303.71276855]
[87.03472900 295.73635864]
[89.30335236 280.90890503]
[91.57197571 266.08145142]
[93.84059906 251.25399780]
[96.10922241 236.42654419]
[98.29122162 221.58609009]
[100.38652802 206.73315430]
[102.48183441 191.88021851]
[104.57714081 177.02728271]
[106.67244720 162.17434692]
[108.76775360 147.32141113]
[110.86306000 132.46847534]
[104.80574799 128.04592896]
[95.96064758 140.16055298]
[87.11534882 152.27503967]
[75.00101471 143.42953491]
[83.84602356 131.31546021]
[92.69112396 119.20082855]
[86.63380432 114.77828217]
[73.12471008 121.29780579]
[59.61560822 127.81733704]
[47.97873306 140.14695740]
[32.90955353 132.37803650]
[36.20330048 115.74710846]
[53.09608078 114.30823517]
[66.60517883 107.78871155]
[80.11428070 101.26918030]
[75.46236420 87.00875854]
[60.70746231 89.70926666]
[48.52575684 99.80464935]
[34.61346436 94.48511505]
[19.85856056 97.18562317]
[7.72202969 108.21452332]
[-7.81298447 102.96139526]
[-10.76539040 86.83020782]
[1.90199351 76.41533661]
[17.15804863 82.43071747]
[31.91295433 79.73020935]
[43.03928757 69.82798767]
[58.00695038 74.95436096]
[72.76185608 72.25385284]
[82.76405334 61.07547379]
[83.81427765 46.11228561]
[84.86450958 31.14909744]
[77.01995850 20.93957138]
[78.18157959 8.51889038]
[87.18677521 0.47517356]
[88.41168213 -14.47472954]
[89.63658905 -29.42463303]
[90.86149597 -44.37453461]
[92.08640289 -59.32444000]
[93.31130981 -74.27434540]
[94.53621674 -89.22424316]
[84.71003723 -98.40547943]
[81.99436188 -111.37789917]
[87.15917206 -123.37242889]
[98.11858368 -130.11010742]
[99.51799774 -145.04467773]
[100.91741180 -159.97926331]
[102.31682587 -174.91383362]
[99.44418335 -189.63619995]
[92.53306580 -202.94921875]
[85.62194824 -216.26223755]
[78.91452026 -222.40994263]
[78.70888519 -229.77133179]
[71.95372009 -243.16415405]
[65.19854736 -256.55697632]
[58.44337845 -269.94979858]
[51.61011505 -283.30294800]
[44.69899750 -296.61596680]
[37.78787994 -309.92898560]
[24.56245232 -318.61221313]
[25.56559563 -333.47299194]
[18.65447807 -346.78601074]
[11.74336052 -360.09902954]
[4.83224344 -373.41204834]
[-2.07887435 -386.72506714]
[-8.98999214 -400.03808594]
[-22.21542168 -408.72134399]
[-21.21227837 -423.58212280]
[-28.12339592 -436.89514160]
[-43.87433624 -446.46511841]
[-42.36466980 -463.96395874]
[-49.43078995 -477.19537354]
[-56.49691391 -490.42675781]
[-63.56303787 -503.65817261]
[-77.76438141 -511.85900879]
[-77.49234009 -528.25592041]
[-63.02676392 -535.98114014]
[-49.24859619 -527.08764648]
[-50.33163834 -510.72427368]
[-43.26551437 -497.49288940]
[-36.19939423 -484.26150513]
[-29.13327026 -471.03009033]
[-17.67283058 -467.22833252]
[-11.67007065 -456.29263306]
[-14.81037712 -443.80624390]
[-7.89925957 -430.49322510]
[4.83184004 -422.76223755]
[4.32302618 -406.94921875]
[11.23414421 -393.63619995]
[18.14526176 -380.32318115]
[25.05637932 -367.01016235]
[31.96749687 -353.69714355]
[38.87861252 -340.38412476]
[51.60971451 -332.65313721]
[51.10089874 -316.84008789]
[58.01201630 -303.52706909]
[64.92313385 -290.21405029]
[70.77346039 -285.74124146]
[71.83619690 -276.70495605]
[78.59136963 -263.31213379]
[85.34654236 -249.91932678]
[92.10170746 -236.52650452]
[98.93496704 -223.17335510]
[105.84608459 -209.86033630]
[112.75720215 -196.54731750]
[127.64456177 -194.71250916]
[137.58131409 -205.94911194]
[147.51806641 -217.18569946]
[157.45481873 -228.42228699]
[167.39155579 -239.65888977]
[170.71566772 -248.12847900]
[177.51057434 -250.96781921]
[187.57786560 -262.08758545]
[197.64517212 -273.20736694]
[207.71246338 -284.32714844]
[208.79873657 -289.36160278]
[211.42860413 -293.11804199]
[214.86570740 -295.22476196]
[218.33247375 -295.65222168]
[228.78311157 -306.41250610]
[226.28105164 -321.61270142]
[233.12905884 -335.21264648]
[246.51379395 -342.09109497]
[261.20642090 -339.79656982]
[271.65704346 -350.55688477]
[275.72137451 -365.84713745]
[290.13897705 -369.58645630]
[300.58959961 -380.34674072]
[304.07550049 -396.37112427]
[319.77624512 -401.10601807]
[331.54022217 -389.68057251]
[327.26568604 -373.84832764]
[311.34991455 -369.89611816]
[300.89926147 -359.13580322]
[297.58245850 -344.61520386]
[282.41735840 -340.10623169]
[271.96673584 -329.34594727]
[274.68917847 -314.72656250]
[268.20440674 -301.14672852]
[254.81018066 -293.90463257]
[239.54342651 -295.96188354]
[229.09278870 -285.20156860]
[218.83224487 -274.25985718]
[208.76493835 -263.14007568]
[198.69764709 -252.02029419]
[188.63035583 -240.90051270]
[178.62815857 -229.72213745]
[168.69140625 -218.48554993]
[158.75465393 -207.24894714]
[148.81790161 -196.01235962]
[138.88116455 -184.77577209]
[134.24197388 -179.11285400]
[128.67642212 -175.33641052]
[122.81467438 -173.51161194]
[117.25140381 -173.51441956]
[115.85198975 -158.57984924]
[114.45257568 -143.64526367]
[113.05316162 -128.71069336]
[124.33013153 -116.21273041]
[123.03634644 -99.08969116]
[109.48612213 -87.99933624]
[108.26121521 -73.04943848]
[107.03630829 -58.09953308]
[105.81140137 -43.14962769]
[104.58649445 -28.19972610]
[103.36158752 -13.24982262]
[102.13668060 1.70008028]
[110.47723389 17.15725136]
[99.82769775 32.19932938]
[98.77746582 47.16251755]
[97.72724152 62.12570572]
[160.56129456 108.84077454]
[173.40324402 116.59219360]
[186.24517822 124.34361267]
[199.08712769 132.09503174]
[211.92907715 139.84645081]
[224.77101135 147.59785461]
[237.61296082 155.34927368]
[250.45491028 163.10069275]
[263.29684448 170.85211182]
[281.72708130 170.79815674]
[289.56924438 186.51405334]
[302.50085449 194.11497498]
[316.67074585 187.79095459]
[331.84460449 191.03651428]
[342.18777466 202.60366821]
[343.72305298 218.04460144]
[335.86010742 231.42196655]
[321.62243652 237.59188843]
[306.48468018 234.18191528]
[296.26760864 222.50325012]
[294.89993286 207.04655457]
[281.96832275 199.44564819]
[270.20788574 202.18188477]
[259.38122559 195.98461914]
[255.54544067 183.69406128]
[242.70349121 175.94264221]
[229.86154175 168.19122314]
[217.01959229 160.43980408]
[204.17765808 152.68838501]
[191.33570862 144.93696594]
[178.49375916 137.18556213]
[165.65182495 129.43414307]
[152.80987549 121.68272400]
[146.03640747 124.90299225]
[132.48947144 131.34352112]
[125.71599579 134.56378174]
[123.62068939 149.41671753]
[121.52538300 164.26965332]
[119.43007660 179.12258911]
[117.33477020 193.97552490]
[115.23946381 208.82846069]
[113.14415741 223.68139648]
[115.04027557 232.58020020]
[110.93667603 238.69515991]
[108.66805267 253.52261353]
[106.39942932 268.35006714]
[104.13080597 283.17752075]
[101.86218262 298.00497437]
[99.68017578 312.84542847]
[97.58486938 327.69836426]
[106.57661438 315.69216919]
[119.44749451 307.98889160]
[134.27758789 305.73760986]
[148.85472107 309.27413940]
[161.00447083 318.07092285]
[168.91447449 330.81582642]
[171.40480042 345.60763550]
[168.10400391 360.23995972]
[159.50442505 372.53009033]
[146.88887024 380.64474487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 22]
[5 21]
[7 19]
[8 18]
[9 17]
[23 258]
[24 257]
[26 256]
[27 255]
[28 254]
[29 253]
[30 252]
[31 250]
[32 249]
[33 248]
[34 247]
[35 246]
[36 245]
[37 244]
[44 52]
[45 51]
[46 50]
[53 66]
[54 65]
[56 63]
[57 62]
[67 208]
[68 207]
[69 206]
[72 204]
[73 203]
[74 202]
[75 201]
[76 200]
[77 199]
[78 198]
[82 195]
[83 194]
[84 193]
[85 192]
[86 142]
[87 141]
[88 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 134]
[95 133]
[96 132]
[98 130]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[105 123]
[106 122]
[108 119]
[109 118]
[110 117]
[111 116]
[143 188]
[144 187]
[145 186]
[146 185]
[147 184]
[149 183]
[150 182]
[151 181]
[152 180]
[156 179]
[157 178]
[161 174]
[162 173]
[164 171]
[165 170]
[209 241]
[210 240]
[211 239]
[212 238]
[213 237]
[214 236]
[215 235]
[216 234]
[217 233]
[219 230]
[220 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
