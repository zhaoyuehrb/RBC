%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUAAGGGCCCGCCUCUCCUGGCUCACAGCUGCUUGCUGCUCCAGCCUUGCCCUCCCAGAGCUGCCGGACGCUCGCGGGUCUCGGAACGCAUCCCGCCGCGGGGGCUUCGGCCGUGGCAUGGGCGCCGCGGGCCUGCUCGGGGUUUUCUUGGCUCUCGUCGCACCGGGGGUCCUCGGGAUUUCUUGUGGCUCUCCUCCGCCUAUCCUAAAUGGCCGGA\
) } def
/len { sequence length } bind def

/coor [
[135.71360779 115.91506195]
[137.09936523 130.85090637]
[128.07783508 142.83473206]
[113.34124756 145.63351440]
[100.55437469 137.79159546]
[96.36785889 123.38784027]
[85.61087799 133.84190369]
[74.85390472 144.29597473]
[64.09692383 154.75003052]
[53.33995056 165.20410156]
[60.46486282 184.38627625]
[52.91708755 206.13739014]
[31.11635017 219.54200745]
[23.55460167 232.49655151]
[15.99285316 245.45108032]
[20.25248718 260.67050171]
[12.43003464 274.40313721]
[-2.83358097 278.50161743]
[-16.48272705 270.53442383]
[-20.41960907 255.22831726]
[-12.30854321 241.66416931]
[3.03831887 237.88932800]
[10.60006809 224.93479919]
[18.16181564 211.98027039]
[12.67260742 206.86962891]
[-1.66838884 211.26687622]
[1.69418979 196.64836121]
[-3.79501915 191.53771973]
[-16.17709732 200.00437927]
[-28.55917549 208.47102356]
[-40.94125366 216.93766785]
[-45.30365372 232.37623596]
[-60.14913559 238.45826721]
[-74.08952332 230.51815796]
[-76.43093872 214.64689636]
[-65.37725067 203.01953125]
[-49.40790176 204.55558777]
[-37.02582550 196.08894348]
[-24.64374542 187.62229919]
[-12.26166725 179.15565491]
[-7.94590425 165.88642883]
[0.32404238 155.50990295]
[11.12716579 149.05384827]
[22.84049606 146.94058228]
[33.87435150 148.97990417]
[42.88588715 154.44711304]
[53.64286423 143.99305725]
[64.39984131 133.53898621]
[75.15681458 123.08493042]
[85.91379547 112.63086700]
[85.27139282 97.64463043]
[73.65927124 88.14944458]
[62.04714584 78.65425110]
[50.43502045 69.15906525]
[38.82289505 59.66387939]
[27.21077156 50.16869354]
[12.71451187 57.20273209]
[-4.19383144 55.58166122]
[-18.49282837 44.88128281]
[-25.47514153 27.49781227]
[-39.52938843 22.25584793]
[-53.58363342 17.01388550]
[-67.63787842 11.77192307]
[-80.49564362 20.45854759]
[-96.00247955 19.89492226]
[-108.19569397 10.29777241]
[-112.38673401 -4.64260197]
[-106.96407318 -19.18132210]
[-94.01283264 -27.72795105]
[-78.51302338 -26.99613953]
[-66.42463684 -17.26728249]
[-62.39591599 -2.28232265]
[-48.34167099 2.95964003]
[-34.28742599 8.20160294]
[-20.23317909 13.44356537]
[-11.32997990 1.37157106]
[-20.48969841 -10.50696278]
[-29.64941597 -22.38549614]
[-38.80913544 -34.26403046]
[-47.96885300 -46.14256287]
[-63.37051010 -45.83408737]
[-75.85466766 -54.55184174]
[-80.75371552 -68.78079987]
[-76.38705444 -82.99594116]
[-85.54677582 -94.87447357]
[-100.00701141 -103.72533417]
[-95.50504303 -120.07062531]
[-78.55226135 -120.26942444]
[-73.66823578 -104.03419495]
[-64.50852203 -92.15566254]
[-49.65030670 -92.76511383]
[-37.13424301 -84.40975189]
[-31.87659264 -70.11952209]
[-36.09032059 -55.30228043]
[-26.93060112 -43.42374802]
[-17.77088165 -31.54521370]
[-8.61116409 -19.66668129]
[0.54855394 -7.78814697]
[20.03576469 -6.01647377]
[34.75075912 5.44855452]
[40.62155151 22.19009972]
[36.70595932 38.55656815]
[48.31808472 48.05175781]
[59.93020630 57.54694366]
[71.54232788 67.04212952]
[83.15445709 76.53731537]
[94.76657867 86.03250122]
[108.99897003 90.76950073]
[123.98520660 90.12709808]
[138.97145081 89.48469543]
[153.95768738 88.84229279]
[168.94392395 88.19989014]
[183.93016052 87.55748749]
[198.91639709 86.91508484]
[213.90263367 86.27268219]
[228.88887024 85.63027954]
[243.85791016 84.66704559]
[258.80288696 83.38342285]
[267.07879639 79.53335571]
[273.97018433 82.18972778]
[288.93197632 81.11964417]
[303.89373779 80.04955292]
[318.85552979 78.97946930]
[333.81732178 77.90937805]
[348.77908325 76.83929443]
[363.65539551 74.91680145]
[378.39767456 72.14817047]
[393.13992310 69.37954712]
[407.88220215 66.61091614]
[422.62448120 63.84228897]
[437.36676025 61.07366180]
[452.10903931 58.30503464]
[466.85131836 55.53640747]
[472.01943970 41.14065170]
[483.62268066 31.32936096]
[498.48022461 28.66101837]
[512.58416748 33.75368118]
[522.18066406 45.14545441]
[536.92291260 42.37682724]
[551.66522217 39.60820007]
[566.40747070 36.83957291]
[581.14978027 34.07094574]
[595.89202881 31.30231667]
[610.63433838 28.53368950]
[597.68676758 20.95993042]
[591.56268311 7.26705074]
[594.54827881 -7.43281031]
[605.52905273 -17.65156555]
[620.40533447 -19.57411385]
[633.62322998 -12.48268604]
[640.24786377 0.97518241]
[637.80596924 15.77509403]
[627.20916748 26.39169121]
[642.17089844 25.32160378]
[657.13269043 24.25151634]
[672.09448242 23.18142891]
[687.05627441 22.11133957]
[702.01806641 21.04125214]
[716.97985840 19.97116470]
[727.13873291 7.86445236]
[742.88995361 6.57038355]
[754.88854980 16.85670662]
[756.01605225 32.62072754]
[745.60345459 44.50993347]
[729.82836914 45.47066879]
[718.04992676 34.93294525]
[703.08813477 36.00303268]
[688.12634277 37.07312012]
[673.16455078 38.14321136]
[658.20281982 39.21329880]
[643.24102783 40.28338623]
[628.27923584 41.35347366]
[613.40295410 43.27596664]
[598.66064453 46.04459381]
[583.91839600 48.81322098]
[569.17608643 51.58184814]
[554.43383789 54.35047531]
[539.69158936 57.11910248]
[524.94927979 59.88772964]
[520.13964844 73.98500061]
[508.84436035 83.84768677]
[494.03106689 86.75157928]
[479.65881348 81.81854248]
[469.61993408 70.27868652]
[454.87765503 73.04730988]
[440.13537598 75.81594086]
[425.39312744 78.58456421]
[410.65084839 81.35319519]
[395.90856934 84.12181854]
[381.16629028 86.89044952]
[366.42401123 89.65907288]
[379.37152100 97.23283386]
[385.49566650 110.92571259]
[382.51000977 125.62557220]
[371.52926636 135.84432983]
[356.65298462 137.76687622]
[343.43511963 130.67544556]
[336.81048584 117.21758270]
[339.25234985 102.41767120]
[349.84918213 91.80107117]
[334.88739014 92.87116241]
[319.92562866 93.94124603]
[304.96383667 95.01133728]
[290.00204468 96.08142090]
[275.04028320 97.15151215]
[260.08651733 98.32839966]
[245.14154053 99.61202240]
[242.60591125 102.05309296]
[238.76446533 103.39060974]
[234.14720154 103.02529144]
[229.53126526 100.61651611]
[214.54502869 101.25891876]
[199.55879211 101.90132141]
[184.57255554 102.54372406]
[169.58631897 103.18612671]
[154.60008240 103.82852936]
[139.61384583 104.47093201]
[124.62760925 105.11333466]
[109.64137268 105.75573730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 50]
[7 49]
[8 48]
[9 47]
[10 46]
[13 24]
[14 23]
[15 22]
[28 40]
[29 39]
[30 38]
[31 37]
[51 107]
[52 106]
[53 105]
[54 104]
[55 103]
[56 102]
[60 75]
[61 74]
[62 73]
[63 72]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[84 90]
[85 89]
[108 219]
[109 218]
[110 217]
[111 216]
[112 215]
[113 214]
[114 213]
[115 212]
[116 211]
[117 207]
[118 206]
[120 205]
[121 204]
[122 203]
[123 202]
[124 201]
[125 200]
[126 191]
[127 190]
[128 189]
[129 188]
[130 187]
[131 186]
[132 185]
[133 184]
[138 179]
[139 178]
[140 177]
[141 176]
[142 175]
[143 174]
[144 173]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
