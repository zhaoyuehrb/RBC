%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGUCAGACCCCUCCUGCGAGGCCAGGGGCUGUGGCCAUUGGGAGUUUGUCCCCACGGACCCCUCCUCCCCCAGAGGGCACGCCAGUCUUGAAGCAACAUGAGCAGCCCGGAGCCCCCCACAGAGCCCCCCGAGCCCGACAACCCCACCUGGUCGACUCAGCCCACGUAUAGCAACCUUGGUCAGAUCCGUGCCCACC\
) } def
/len { sequence length } bind def

/coor [
[137.77072144 738.11016846]
[142.04362488 723.52209473]
[151.57777405 711.68280029]
[164.91926575 704.39770508]
[163.28140259 689.48736572]
[161.64353943 674.57708740]
[160.00569153 659.66674805]
[150.92495728 647.86041260]
[157.10914612 633.29791260]
[155.47128296 618.38763428]
[153.83341980 603.47729492]
[152.19555664 588.56701660]
[138.09675598 583.69982910]
[127.46557617 573.15057373]
[122.44838715 558.97351074]
[124.09081268 543.96276855]
[132.12033081 531.10144043]
[144.98977661 522.96887207]
[143.35192871 508.05856323]
[141.71406555 493.14822388]
[128.71022034 485.93450928]
[122.37266541 472.28533936]
[125.32191467 457.34695435]
[136.63258362 446.88870239]
[134.99472046 431.97839355]
[123.91053009 425.39877319]
[118.56226349 413.45715332]
[121.10829926 400.42428589]
[130.83857727 391.10406494]
[129.43395996 376.16998291]
[128.02934265 361.23590088]
[126.62471771 346.30178833]
[125.22009277 331.36770630]
[123.81546783 316.43362427]
[122.06114197 301.53656006]
[119.95806885 286.68472290]
[117.85499573 271.83288574]
[115.75192261 256.98104858]
[113.64884949 242.12921143]
[111.54577637 227.27737427]
[99.99768066 214.06799316]
[107.00899506 197.04490662]
[104.67405701 182.22775269]
[102.33911896 167.41059875]
[100.00418091 152.59344482]
[95.85423279 146.47055054]
[97.75042725 137.52664185]
[95.64735413 122.67479706]
[93.54428101 107.82295990]
[89.38283539 100.91148376]
[91.52627563 92.72276306]
[89.65558624 77.83986664]
[87.78488922 62.95697403]
[72.48401642 56.70010376]
[62.48175049 43.65689850]
[60.43151474 27.44301414]
[66.79869843 12.49333000]
[79.75930786 2.84891224]
[77.65623474 -12.00292587]
[75.55316162 -26.85476303]
[61.40430069 -32.66482925]
[52.12456894 -44.69742584]
[50.12686157 -59.65989685]
[55.84843063 -73.52061462]
[67.66011047 -82.59529877]
[65.55703735 -97.44713593]
[63.45396042 -112.29898071]
[60.31235504 -126.96630096]
[56.14775848 -141.37657166]
[51.98315811 -155.78684998]
[47.81855774 -170.19712830]
[39.59923553 -157.64950562]
[24.94500732 -154.44738770]
[12.24111176 -162.42303467]
[8.75679588 -177.01274109]
[16.48580933 -189.86819458]
[31.00555992 -193.63340759]
[44.00731659 -186.15447998]
[41.21041489 -200.89141846]
[38.41351318 -215.62835693]
[35.61661530 -230.36529541]
[25.41087723 -238.26100159]
[23.38824654 -250.59884644]
[30.09523392 -260.67184448]
[27.52900124 -275.45071411]
[14.89038944 -284.55581665]
[12.49839497 -299.58023071]
[21.25662422 -311.57312012]
[18.69039154 -326.35195923]
[8.70620060 -338.62496948]
[14.15201855 -352.48831177]
[11.58578587 -367.26715088]
[9.01955318 -382.04602051]
[0.35256222 -396.61721802]
[11.95504379 -408.97918701]
[27.04580688 -401.25228882]
[23.79840469 -384.61224365]
[26.36463737 -369.83340454]
[28.93087006 -355.05453491]
[38.73150635 -343.83862305]
[33.46924210 -328.91821289]
[36.03547668 -314.13934326]
[48.32405090 -305.80108643]
[51.13710403 -290.84979248]
[42.30785370 -278.01693726]
[44.87408447 -263.23809814]
[56.82939148 -250.39608765]
[50.35354996 -233.16218567]
[53.15045166 -218.42524719]
[55.94735336 -203.68830872]
[58.74425507 -188.95137024]
[62.22883606 -174.36172485]
[66.39343262 -159.95146179]
[70.55803680 -145.54118347]
[74.72263336 -131.13090515]
[80.47695923 -144.98326111]
[92.74306488 -153.61705017]
[107.72464752 -154.36016846]
[120.78495789 -146.98262024]
[127.88186646 -133.76770020]
[126.81891632 -118.80541229]
[117.92508698 -106.72651672]
[103.95298004 -101.26938629]
[89.22691345 -104.12299347]
[78.30580139 -114.40205383]
[80.40887451 -99.55020905]
[82.51194763 -84.69837189]
[96.37874603 -79.25985718]
[105.72366333 -67.53260040]
[107.95867157 -52.60373306]
[102.38449860 -38.46777344]
[90.40500641 -28.95783615]
[92.50807953 -14.10599899]
[94.61115265 0.74583918]
[107.59182739 5.00461721]
[117.51765442 14.48753166]
[122.41109467 27.38417244]
[121.26332855 41.19655609]
[114.24162292 53.22293854]
[102.66778564 61.08628082]
[104.53847504 75.96917725]
[106.40917206 90.85206604]
[108.39611816 105.71988678]
[110.49919128 120.57172394]
[112.60226440 135.42356873]
[114.82133484 150.25851440]
[117.15627289 165.07566833]
[119.49121094 179.89282227]
[121.82614899 194.70997620]
[131.78012085 202.92080688]
[133.41615295 215.31582642]
[126.39761353 225.17430115]
[128.50068665 240.02613831]
[130.60375977 254.87797546]
[132.70683289 269.72982788]
[134.80990601 284.58166504]
[136.91297913 299.43350220]
[140.14294434 303.55456543]
[141.34349060 308.05288696]
[140.71174622 312.09030151]
[138.74955750 315.02899170]
[140.15419006 329.96307373]
[141.55880737 344.89718628]
[142.96342468 359.83126831]
[144.36805725 374.76535034]
[145.77267456 389.69943237]
[159.44679260 400.60369873]
[160.97781372 417.68707275]
[149.90502930 430.34054565]
[151.54289246 445.25085449]
[164.85408020 453.00445557]
[170.97576904 466.94641113]
[167.75221252 481.64584351]
[156.62437439 491.51037598]
[158.26223755 506.42068481]
[159.90010071 521.33099365]
[174.22804260 526.47601318]
[184.85798645 537.28765869]
[189.71971130 551.58392334]
[187.89964294 566.51202393]
[179.81196594 579.11755371]
[167.10588074 586.92913818]
[168.74372864 601.83941650]
[170.38159180 616.74975586]
[172.01945496 631.66009521]
[181.21733093 644.53289795]
[174.91600037 658.02893066]
[176.55386353 672.93920898]
[178.19171143 687.84954834]
[179.82957458 702.75982666]
[194.43435669 706.97515869]
[206.31117249 716.46246338]
[213.64889526 729.77514648]
[215.32856750 744.88299561]
[211.09405518 759.48217773]
[201.59109497 771.34649658]
[188.26881409 778.66674805]
[173.15876770 780.32653809]
[158.56512451 776.07281494]
[146.71331787 766.55426025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[9 185]
[10 184]
[11 183]
[12 182]
[18 176]
[19 175]
[20 174]
[24 170]
[25 169]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[42 149]
[43 148]
[44 147]
[45 146]
[47 145]
[48 144]
[49 143]
[51 142]
[52 141]
[53 140]
[58 134]
[59 133]
[60 132]
[65 127]
[66 126]
[67 125]
[68 115]
[69 114]
[70 113]
[71 112]
[78 111]
[79 110]
[80 109]
[81 108]
[84 106]
[85 105]
[88 102]
[89 101]
[91 99]
[92 98]
[93 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
