%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGACUACAGUUCCCAGGCGCCCCUGCGCGGCCGCGGCGCCGGCGCCGGCGUCGGUUGGGACGCGGAGCUGAGGAGCAGGGCCGGGCGCCAUGGCACCGUGGGGCAAGCGGCUGGCUGGCGUGCGCGGGGUGCUGCUUGACAUCUCGGGCGUGCUGUACGACAGCGGCGCGGGCGGCGGCACGGCCAUCG\
) } def
/len { sequence length } bind def

/coor [
[102.75765228 128.96798706]
[103.80120850 114.00241089]
[99.68238068 128.42584229]
[95.56355286 142.84927368]
[91.44471741 157.27268982]
[87.32588959 171.69612122]
[91.83325958 187.46366882]
[80.23890686 199.06121826]
[64.47011566 194.55819702]
[60.74846268 178.58692932]
[72.90246582 167.57728577]
[77.02129364 153.15386963]
[81.14012146 138.73043823]
[85.25894928 124.30700684]
[89.37778473 109.88358307]
[76.04212952 116.75091553]
[63.99069214 107.81990814]
[66.68020630 93.06299591]
[81.10867310 88.95819855]
[68.24274445 81.24665070]
[55.25236130 73.74665070]
[42.14100647 66.46020508]
[29.02965164 59.17375183]
[15.91829777 51.88730240]
[2.80694222 44.60084915]
[-6.23034859 43.16333008]
[-10.45791149 37.08640289]
[-23.44829178 29.58640289]
[-36.43867493 22.08640289]
[-51.52751923 25.95480156]
[-64.59477234 18.16368103]
[-68.18971252 3.75493407]
[-81.18009186 -3.74506593]
[-94.17047119 -11.24506569]
[-107.16085052 -18.74506569]
[-122.98080444 -18.94445419]
[-130.13429260 -32.00878906]
[-143.12467957 -39.50878906]
[-156.11505127 -47.00878906]
[-169.10543823 -54.50878906]
[-182.09582520 -62.00878906]
[-195.08619690 -69.50878906]
[-208.13751221 -76.90225983]
[-221.24885559 -84.18871307]
[-234.36021423 -91.47516632]
[-243.39750671 -92.91268158]
[-247.62507629 -98.98960876]
[-260.61544800 -106.48960876]
[-277.38363647 -95.92131042]
[-301.45376587 -105.66791534]
[-315.73471069 -110.25646210]
[-330.01562500 -114.84500885]
[-344.29656982 -119.43355560]
[-358.57751465 -124.02209473]
[-372.51940918 -116.57902527]
[-387.61636353 -121.25424957]
[-394.91162109 -135.27404785]
[-390.07702637 -150.32072449]
[-375.98089600 -157.46734619]
[-360.98617554 -152.47395325]
[-353.98898315 -138.30303955]
[-339.70803833 -133.71449280]
[-325.42709351 -129.12594604]
[-311.14614868 -124.53739929]
[-296.86520386 -119.94886017]
[-292.80102539 -126.25222015]
[-299.65460205 -139.59494019]
[-284.67266846 -138.85894775]
[-280.60845947 -145.16230774]
[-290.68185425 -156.27658081]
[-300.75524902 -167.39083862]
[-316.52526855 -171.88951111]
[-320.25134277 -187.85975647]
[-308.10037231 -198.87274170]
[-292.57223511 -193.59927368]
[-289.64096069 -177.46423340]
[-279.56759644 -166.34996033]
[-269.49420166 -155.23568726]
[-251.49082947 -138.33012390]
[-253.11544800 -119.47998810]
[-240.12507629 -111.97998810]
[-227.07376099 -104.58651733]
[-213.96240234 -97.30006409]
[-200.85105896 -90.01361847]
[-193.46530151 -89.51168060]
[-187.58619690 -82.49916840]
[-174.59582520 -74.99916840]
[-161.60543823 -67.49916840]
[-148.61505127 -59.99916840]
[-135.62467957 -52.49916840]
[-122.63429260 -44.99916840]
[-107.74349976 -45.33623123]
[-99.66085052 -31.73544693]
[-86.67047119 -24.23544693]
[-73.68009186 -16.73544693]
[-60.68971252 -9.23544693]
[-46.41389847 -13.32651329]
[-33.13296509 -5.90549946]
[-28.93867302 9.09602261]
[-15.94829273 16.59602356]
[-2.95791173 24.09602356]
[10.09339333 31.48949623]
[23.20474815 38.77594757]
[36.31610489 46.06239700]
[49.42745972 53.34885025]
[62.53881454 60.63529968]
[67.30979919 60.20322418]
[72.40044403 62.77481079]
[75.95428467 68.38072205]
[88.82021332 76.09226990]
[125.25384521 87.16531372]
[140.05349731 89.60874939]
[154.85314941 92.05217743]
[169.65280151 94.49561310]
[184.45243835 96.93904114]
[199.27159119 99.26131439]
[214.10923767 101.46227264]
[228.94688416 103.66323090]
[243.78453064 105.86418915]
[258.57064819 100.23553467]
[270.02487183 109.75656891]
[284.86251831 111.95752716]
[299.70016479 114.15848541]
[314.69210815 113.66770172]
[329.35406494 110.50102997]
[341.20974731 100.02473450]
[355.28363037 104.90077972]
[369.94555664 101.73410034]
[384.60748291 98.56742859]
[399.26940918 95.40075684]
[413.93133545 92.23408508]
[428.59326172 89.06741333]
[443.25518799 85.90073395]
[449.39669800 71.65077209]
[462.75836182 63.76116180]
[478.20233154 65.26562500]
[489.79010010 75.58566284]
[493.06591797 90.75301361]
[486.77020264 104.93552399]
[473.32376099 112.67971802]
[457.89700317 111.00780487]
[446.42187500 100.56266785]
[431.75994873 103.72933960]
[417.09802246 106.89601135]
[402.43609619 110.06269073]
[387.77413940 113.22936249]
[373.11221313 116.39603424]
[358.45028687 119.56270599]
[347.64331055 129.81250000]
[332.52072144 125.16295624]
[317.85879517 128.32963562]
[315.17355347 143.08732605]
[327.78027344 151.21569824]
[340.38699341 159.34407043]
[352.99371338 167.47244263]
[365.60043335 175.60081482]
[378.20718384 183.72918701]
[390.81390381 191.85755920]
[406.20712280 188.27653503]
[419.57962036 196.69982910]
[422.99771118 212.13006592]
[414.43350220 225.41275024]
[398.96798706 228.66751099]
[385.77658081 219.96334839]
[382.68551636 204.46429443]
[370.07879639 196.33592224]
[357.47207642 188.20753479]
[344.86535645 180.07916260]
[332.25860596 171.95079041]
[319.65188599 163.82241821]
[307.04516602 155.69404602]
[299.16455078 147.04393005]
[296.14080811 137.43170166]
[297.49920654 128.99613953]
[282.66156006 126.79517365]
[267.82391357 124.59422302]
[254.09909058 130.38029480]
[241.58357239 120.70183563]
[226.74592590 118.50087738]
[211.90827942 116.29991913]
[197.07063293 114.09896088]
[189.98146057 116.23082733]
[182.00901794 111.73869324]
[167.20936584 109.29526520]
[152.40971375 106.85182953]
[137.61006165 104.40840149]
[122.81041718 101.96496582]
[136.78379822 107.41883087]
[143.49275208 120.83486176]
[139.47343445 135.28633118]
[126.80102539 143.31192017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[19 110]
[20 109]
[21 106]
[22 105]
[23 104]
[24 103]
[25 102]
[27 101]
[28 100]
[29 99]
[32 96]
[33 95]
[34 94]
[35 93]
[37 91]
[38 90]
[39 89]
[40 88]
[41 87]
[42 86]
[43 84]
[44 83]
[45 82]
[47 81]
[48 80]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[69 78]
[70 77]
[71 76]
[111 187]
[112 186]
[113 185]
[114 184]
[115 183]
[116 181]
[117 180]
[118 179]
[119 178]
[121 176]
[122 175]
[123 174]
[124 151]
[125 150]
[127 148]
[128 147]
[129 146]
[130 145]
[131 144]
[132 143]
[133 142]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
[158 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
