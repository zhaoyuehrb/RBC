%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCAGGGUUGGAAAAUGAUGGAAGAGGCGGAGGUGGAGGCGACCGAGUGCUGAGAGGAACCUGCGGAAUCGGCCGAGAUGGGGUCUGGCGCGCGCUUUCCCUCGGGGACCCUUCGUGUCCGGUGGUUGCUGUUGCUUGGCCUGGUGGGCCCAGUCCUCGGUGCGGCGCGGCCAGGCU\
) } def
/len { sequence length } bind def

/coor [
[286.60000610 286.64596558]
[275.76330566 276.27459717]
[264.92657471 265.90319824]
[254.08984375 255.53182983]
[243.25312805 245.16046143]
[232.41639709 234.78907776]
[215.64739990 235.88391113]
[203.01690674 224.29415894]
[202.65493774 206.81840515]
[191.63786316 196.63880920]
[180.62080383 186.45921326]
[169.60372925 176.27961731]
[158.58665466 166.10002136]
[146.47293091 166.25923157]
[137.20901489 157.84323120]
[136.14088440 144.97029114]
[125.30415344 134.59892273]
[114.46743011 124.22753906]
[103.63070679 113.85616302]
[90.09606934 110.34831238]
[85.99791718 96.98056030]
[75.16119385 86.60918427]
[63.15239334 92.71413422]
[49.86802292 94.81006622]
[36.60801315 92.70613861]
[24.66552162 86.62181091]
[15.20080471 77.16399384]
[9.12850857 65.26657867]
[7.02928638 52.09822845]
[9.09430027 38.94755936]
[15.10790348 27.09707642]
[4.64183283 16.35178185]
[-5.82423830 5.60648680]
[-16.29030991 -5.13880777]
[-24.54530334 -9.11846828]
[-26.84370804 -16.16572189]
[-37.11958694 -27.09304047]
[-47.39546967 -38.02035904]
[-57.67134857 -48.94767761]
[-67.94722748 -59.87499619]
[-78.22311401 -70.80231476]
[-88.49899292 -81.72962952]
[-96.80939484 -80.42353821]
[-104.86381531 -82.50193024]
[-111.35591888 -87.55051422]
[-115.26356506 -94.67974854]
[-116.00942230 -102.68082428]
[-113.54520416 -110.23043823]
[-123.02927399 -121.85164642]
[-132.51333618 -133.47285461]
[-141.99740601 -145.09407043]
[-151.48147583 -156.71527100]
[-159.35591125 -161.40309143]
[-161.02784729 -168.62466431]
[-170.30650330 -180.41053772]
[-179.58515930 -192.19639587]
[-191.47286987 -191.27760315]
[-202.21252441 -196.17382812]
[-209.17227173 -205.55763245]
[-210.70857239 -217.01812744]
[-206.55310059 -227.67988586]
[-215.41241455 -239.78411865]
[-234.21110535 -241.94410706]
[-245.29603577 -256.88476562]
[-242.02651978 -274.87521362]
[-251.30516052 -286.66107178]
[-260.58383179 -298.44692993]
[-276.30499268 -300.06573486]
[-286.21188354 -312.37951660]
[-284.42697144 -328.08267212]
[-272.00915527 -337.85885620]
[-256.32571411 -335.90798950]
[-246.68139648 -323.38751221]
[-248.79795837 -307.72558594]
[-239.51930237 -295.93972778]
[-230.24064636 -284.15386963]
[-218.85441589 -285.29174805]
[-208.22817993 -280.73257446]
[-201.05950928 -271.50741577]
[-199.22901917 -259.84710693]
[-203.30819702 -248.64343262]
[-194.44886780 -236.53919983]
[-176.24151611 -234.85456848]
[-164.82875061 -220.16279602]
[-167.79928589 -201.47505188]
[-158.52062988 -189.68919373]
[-149.24198914 -177.90332031]
[-139.86026001 -166.19934082]
[-130.37619019 -154.57812500]
[-120.89212799 -142.95692444]
[-111.40806580 -131.33570862]
[-101.92399597 -119.71450043]
[-81.02306366 -114.13209534]
[-77.57167053 -92.00550842]
[-67.29579163 -81.07819366]
[-57.01991272 -70.15087128]
[-46.74403000 -59.22355652]
[-36.46815109 -48.29623795]
[-26.19227028 -37.36891937]
[-15.91639042 -26.44160271]
[-5.54501486 -15.60487938]
[4.92105627 -4.85958433]
[15.38712692 5.88571024]
[25.85319901 16.63100433]
[41.14372253 10.10199833]
[57.80569077 9.93401146]
[73.29279327 16.18085098]
[85.22749329 27.91384888]
[91.76597595 43.35981369]
[91.88300323 60.16897964]
[85.53256989 75.77246094]
[96.36929321 86.14383698]
[109.90393066 89.65168762]
[114.00208282 103.01943970]
[124.83880615 113.39081573]
[135.67553711 123.76219177]
[146.51225281 134.13357544]
[164.48548889 138.07684326]
[168.76625061 155.08294678]
[179.78332520 165.26254272]
[190.80038452 175.44213867]
[201.81745911 185.62173462]
[212.83453369 195.80133057]
[226.16009521 193.72450256]
[238.07077026 199.62399292]
[244.30828857 211.14015198]
[242.78778076 223.95236206]
[253.62449646 234.32373047]
[264.46121216 244.69511414]
[275.29794312 255.06648254]
[286.13467407 265.43786621]
[296.97140503 275.80923462]
[312.54727173 275.63619995]
[323.38949585 286.30862427]
[323.45846558 301.15890503]
[334.29519653 311.53027344]
[345.13192749 321.90167236]
[355.96862793 332.27304077]
[366.80535889 342.64440918]
[377.64208984 353.01577759]
[388.47882080 363.38714600]
[399.31552124 373.75854492]
[410.24285889 384.03442383]
[421.25991821 394.21401978]
[436.64660645 397.89651489]
[440.74356079 412.21658325]
[451.76065063 422.39617920]
[467.14730835 426.07870483]
[471.24429321 440.39874268]
[482.26135254 450.57833862]
[493.27844238 460.75793457]
[508.46981812 457.59542847]
[522.60491943 463.99682617]
[530.24853516 477.50070190]
[528.46154785 492.91455078]
[517.93103027 504.31140137]
[502.70623779 507.30892944]
[488.64138794 500.75454712]
[481.14471436 487.16854858]
[483.09884644 471.77502441]
[472.08175659 461.59542847]
[461.06469727 451.41583252]
[446.46603394 448.46142578]
[441.58105469 433.41323853]
[430.56396484 423.23364258]
[415.96533203 420.27923584]
[411.08032227 405.23107910]
[400.06326294 395.05148315]
[392.99609375 392.81500244]
[388.94415283 384.59524536]
[378.10742188 374.22387695]
[367.27072144 363.85250854]
[356.43399048 353.48114014]
[345.59725952 343.10974121]
[334.76052856 332.73837280]
[323.92382812 322.36700439]
[313.08709717 311.99563599]
[298.24807739 312.57809448]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[4 129]
[5 128]
[6 127]
[9 123]
[10 122]
[11 121]
[12 120]
[13 119]
[16 117]
[17 116]
[18 115]
[19 114]
[21 112]
[22 111]
[31 104]
[32 103]
[33 102]
[34 101]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[41 95]
[42 94]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
[54 87]
[55 86]
[56 85]
[61 82]
[62 81]
[65 76]
[66 75]
[67 74]
[135 177]
[136 176]
[137 175]
[138 174]
[139 173]
[140 172]
[141 171]
[142 170]
[143 168]
[144 167]
[146 165]
[147 164]
[149 162]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
