%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGAGCCCAGCUCCCCGCGGCGGCCGCUAGCCCCCGGCCCCGAGCCACCACUCCGACCUAGCGGCCGCCGCCCCCGGUGCGGGAUGAGGAGAUCCGCGGCCGCCACUGGGCCCCAUGGAGGAGCCGCAGCCGCCCCGCCCACCAGCGAGCAUGGCCUUACUGGGCAGCCAGCACUCCGGCGCCCCCUCCGCGGCCGGCCCACCUGGCGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[-237.31642151 189.76768494]
[-227.58564758 178.35070801]
[-242.52856445 179.65805054]
[-257.47149658 180.96539307]
[-261.24639893 193.62416077]
[-269.07855225 204.22177124]
[-280.01876831 211.51036072]
[-292.75347900 214.64089966]
[-305.76251221 213.26203918]
[-317.50057983 207.55937195]
[-326.58068848 198.23083496]
[-331.93820190 186.40133667]
[-346.91284180 187.27351379]
[-361.88745117 188.14569092]
[-376.86206055 189.01786804]
[-389.71670532 206.99247742]
[-411.30712891 210.27429199]
[-428.50799561 197.24481201]
[-442.99688721 201.12709045]
[-457.48577881 205.00938416]
[-471.97467041 208.89166260]
[-486.46356201 212.77395630]
[-500.95242310 216.65623474]
[-515.44134521 220.53851318]
[-529.93023682 224.42080688]
[-544.41912842 228.30308533]
[-558.90795898 232.18537903]
[-573.39685059 236.06765747]
[-587.88574219 239.94995117]
[-602.37463379 243.83222961]
[-616.86352539 247.71452332]
[-620.68823242 258.96624756]
[-629.37927246 266.89477539]
[-640.70092773 269.61700439]
[-651.81518555 266.56945801]
[-659.99304199 258.62033081]
[-674.58868408 262.07955933]
[-689.18438721 265.53878784]
[-691.22650146 280.57855225]
[-698.56713867 293.86312866]
[-710.21350098 303.59585571]
[-724.59057617 308.46051025]
[-739.75390625 307.79919434]
[-753.65283203 301.70129395]
[-764.40759277 290.99151611]
[-770.56378174 277.11831665]
[-771.28869629 261.95785522]
[-766.48443604 247.56053162]
[-756.80059814 235.87342834]
[-743.54693604 228.47714233]
[-728.51593018 226.37194824]
[-713.74029541 229.84255981]
[-701.21832275 238.41961670]
[-692.64361572 250.94313049]
[-678.04797363 247.48388672]
[-663.45227051 244.02465820]
[-654.79370117 227.89257812]
[-636.78314209 223.13458252]
[-620.74584961 233.22563171]
[-606.25695801 229.34335327]
[-591.76806641 225.46105957]
[-577.27917480 221.57878113]
[-562.79028320 217.69648743]
[-548.30139160 213.81420898]
[-533.81250000 209.93191528]
[-519.32360840 206.04963684]
[-504.83471680 202.16734314]
[-490.34582520 198.28506470]
[-475.85693359 194.40277100]
[-461.36807251 190.52049255]
[-446.87918091 186.63819885]
[-432.39028931 182.75592041]
[-431.64968872 176.77540588]
[-429.62747192 171.09864807]
[-440.83282471 161.12670898]
[-452.03820801 151.15476990]
[-463.24359131 141.18283081]
[-479.09539795 135.16981506]
[-477.70559692 118.27292633]
[-461.08428955 114.93090820]
[-453.27166748 129.97746277]
[-442.06628418 139.94940186]
[-430.86090088 149.92134094]
[-419.65551758 159.89328003]
[-410.47702026 155.94441223]
[-400.42214966 155.51045227]
[-390.80023193 158.69932556]
[-382.88253784 165.14384460]
[-377.73425293 174.04324341]
[-362.75961304 173.17106628]
[-347.78500366 172.29888916]
[-332.81039429 171.42672729]
[-326.83004761 155.62158203]
[-314.50106812 143.98379517]
[-298.27188110 138.89109802]
[-281.39468384 141.41477966]
[-267.27374268 151.09472656]
[-258.77880859 166.02246094]
[-243.83590698 164.71513367]
[-228.89297485 163.40779114]
[-214.03593445 161.34181213]
[-199.30326843 158.52250671]
[-184.57060242 155.70321655]
[-169.83792114 152.88392639]
[-155.10525513 150.06463623]
[-140.37258911 147.24534607]
[-127.72998810 135.07211304]
[-110.38742065 141.26733398]
[-95.69731140 138.23406982]
[-81.00720215 135.20080566]
[-66.31709290 132.16754150]
[-51.62697983 129.13427734]
[-36.93687057 126.10102081]
[-22.29243088 122.85442352]
[-7.69675827 119.39518738]
[2.90310431 108.93133545]
[18.11563492 113.27753448]
[32.71130753 109.81829834]
[47.30698013 106.35906219]
[61.90265274 102.89981842]
[76.49832916 99.44058228]
[91.09400177 95.98134613]
[85.65837097 77.03385162]
[101.35282898 55.63870621]
[113.38467407 46.68132401]
[125.41652679 37.72394562]
[137.44837952 28.76656723]
[140.08549500 16.14338112]
[150.28810120 8.93017101]
[162.27368164 10.54736805]
[174.43452454 1.76592660]
[186.53120422 -7.10371828]
[198.56304932 -16.06109619]
[210.59489441 -25.01847649]
[208.14437866 -40.12653732]
[213.00660706 -54.63919830]
[224.06428528 -65.22154999]
[238.77644348 -69.44184875]
[253.76234436 -66.33030701]
[265.57830811 -56.60192490]
[271.50912476 -42.49221802]
[270.19195557 -27.24349213]
[261.92947388 -14.35979271]
[248.62030029 -6.80170155]
[233.32281494 -6.30601120]
[219.55227661 -12.98662758]
[207.52043152 -4.02924919]
[195.48858643 4.92812967]
[192.00175476 11.44134521]
[183.21597290 13.92677689]
[171.05513000 22.70821953]
[164.74166870 39.08391571]
[146.40574646 40.79841614]
[134.37390137 49.75579453]
[122.34205627 58.71317291]
[110.31021118 67.67055511]
[111.39719391 75.09136200]
[126.23882294 72.91738892]
[141.08047485 70.74363708]
[143.25399780 85.58532715]
[128.41279602 87.75901031]
[113.57117462 89.93299103]
[114.65816498 97.35380554]
[128.75355530 102.48410034]
[142.84893799 107.61440277]
[156.94433594 112.74470520]
[166.07490540 112.73872375]
[171.20649719 118.05348206]
[185.22578430 123.38824463]
[199.24507141 128.72300720]
[212.15998840 120.12157440]
[227.66275024 120.78770447]
[239.79225159 130.46525574]
[243.88442993 145.43301392]
[238.36576843 159.93556213]
[225.35830688 168.39637756]
[209.86367798 167.56211853]
[197.83987427 157.75355530]
[193.91030884 142.74229431]
[179.89102173 137.40753174]
[165.87173462 132.07276917]
[151.81402588 126.84009552]
[137.71864319 121.70979309]
[123.62325287 116.57949066]
[109.52786255 111.44918823]
[94.55323792 110.57701874]
[79.95756531 114.03625488]
[65.36189270 117.49549103]
[50.76622009 120.95473480]
[36.17054749 124.41397095]
[21.57487297 127.87320709]
[9.93103123 138.58448792]
[-4.23752022 133.99085999]
[-18.83319283 137.45010376]
[-23.89154816 141.69795227]
[-29.49477768 142.61831665]
[-33.90360641 140.79112244]
[-48.59371567 143.82438660]
[-63.28382492 146.85765076]
[-77.97393799 149.89091492]
[-92.66404724 152.92417908]
[-107.35415649 155.95744324]
[-115.07898712 166.28344727]
[-127.37412262 168.50901794]
[-137.55329895 161.97801208]
[-152.28596497 164.79731750]
[-167.01863098 167.61660767]
[-181.75131226 170.43589783]
[-196.48397827 173.25518799]
[-211.21664429 176.07447815]
[-198.74079895 184.40232849]
[-194.41902161 198.76625061]
[-200.22825623 212.59567261]
[-213.51113892 219.56452942]
[-228.19161987 216.48501587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 100]
[3 99]
[4 98]
[12 92]
[13 91]
[14 90]
[15 89]
[18 72]
[19 71]
[20 70]
[21 69]
[22 68]
[23 67]
[24 66]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[31 59]
[36 56]
[37 55]
[38 54]
[74 84]
[75 83]
[76 82]
[77 81]
[101 210]
[102 209]
[103 208]
[104 207]
[105 206]
[106 205]
[108 202]
[109 201]
[110 200]
[111 199]
[112 198]
[113 197]
[114 194]
[115 193]
[117 191]
[118 190]
[119 189]
[120 188]
[121 187]
[122 186]
[124 156]
[125 155]
[126 154]
[127 153]
[130 151]
[131 150]
[132 148]
[133 147]
[134 146]
[163 185]
[164 184]
[165 183]
[166 182]
[168 181]
[169 180]
[170 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
