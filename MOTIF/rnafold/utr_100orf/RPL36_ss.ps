%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCCGCACUGCCGGUAUCCGCCGCCAUCCGGACUCCCGGGUCCUCUGUGCAGGUUGGAGGAUGGUUGGUUGUGGCGAGCGAGGCUGAAGGAGCCGGGACGCGGGGCUCUGGGCCUCGGGAACUGAGCCGGUACUCACCUCCGCCCCUUCUCCCCGUCGCUGUCCGCAGCCAUGGCCCUACGCUACCCUAUGGCCGUGGGCCUCAACAAGGGCCACAAAGUGACCAAGAACGUGAGCAAGCCCAGGCACAGCC\
GACGCCGCGGGCGUCUGA\
) } def
/len { sequence length } bind def

/coor [
[84.06829071 490.77398682]
[70.39734650 483.98663330]
[61.03194427 471.93460083]
[57.83159637 457.01077271]
[61.43173599 442.17831421]
[71.11754608 430.38220215]
[84.96590424 423.96459961]
[85.13788605 408.96560669]
[85.30986786 393.96658325]
[82.25570679 387.26742554]
[85.57078552 378.79684448]
[85.91472626 363.80078125]
[86.25866699 348.80471802]
[86.60260773 333.80868530]
[83.62545776 327.07492065]
[87.03743744 318.64291382]
[87.55329132 303.65179443]
[88.06914520 288.66067505]
[80.77411652 275.67483521]
[88.98143005 262.14892578]
[89.49728394 247.15779114]
[82.20225525 234.17195129]
[90.40956879 220.64602661]
[90.92542267 205.65490723]
[80.63719940 189.25772095]
[91.66984558 172.35743713]
[91.84182739 157.35841370]
[92.01380920 142.35940552]
[86.23519897 142.73712158]
[80.24573517 142.30799866]
[74.15973663 141.02655029]
[63.02024078 151.07202148]
[51.88074493 161.11750793]
[40.74124908 171.16297913]
[36.20303726 186.92167664]
[20.22350502 190.60768127]
[9.24102116 178.42912292]
[14.55342484 162.91427612]
[30.69577026 160.02348328]
[41.83526611 149.97801208]
[52.97476578 139.93252563]
[64.11426544 129.88705444]
[56.49048615 116.96892548]
[42.31206894 121.86508942]
[28.13364983 126.76126099]
[13.95523262 131.65742493]
[-0.22318532 136.55360413]
[-14.40160370 141.44976807]
[-28.58002090 146.34593201]
[-42.75843811 151.24209595]
[-48.18008041 165.90974426]
[-61.78702927 173.61590576]
[-77.15450287 170.72198486]
[-87.02644348 158.59437561]
[-86.74163055 142.95938110]
[-76.43453979 131.19937134]
[-60.97186279 128.86705017]
[-47.65460587 137.06369019]
[-33.47618866 132.16751099]
[-19.29777145 127.27134705]
[-5.11935329 122.37517548]
[9.05906487 117.47901154]
[23.23748207 112.58283997]
[37.41590118 107.68667603]
[51.59431839 102.79050446]
[53.96391296 89.85366058]
[59.62405014 78.38881683]
[67.96367645 69.18531799]
[78.19686890 62.81502914]
[72.97688293 48.75260544]
[67.75690460 34.69018173]
[62.53692245 20.62775612]
[57.31693649 6.56533098]
[52.09695435 -7.49709320]
[46.87697220 -21.55951881]
[41.65699005 -35.62194061]
[36.43700790 -49.68436813]
[22.34910583 -56.33032227]
[17.25562477 -70.66598511]
[23.67834854 -84.05568695]
[18.45836639 -98.11811066]
[13.23838329 -112.18053436]
[8.01840019 -126.24295807]
[2.79841805 -140.30538940]
[-2.50209570 -154.33766174]
[-7.88296652 -168.33930969]
[-16.09085274 -155.78419495]
[-31.01280212 -154.25599670]
[-41.59522629 -164.88671875]
[-39.99908447 -179.80155945]
[-27.40673447 -187.95217896]
[-13.14564133 -183.30050659]
[-17.71542168 -197.58746338]
[-22.28520012 -211.87442017]
[-26.85498047 -226.16137695]
[-40.62337494 -233.44622803]
[-45.05425644 -248.00033569]
[-38.02441788 -261.08151245]
[-42.59419632 -275.36846924]
[-47.16397476 -289.65542603]
[-51.74971008 -294.33410645]
[-53.10876083 -299.80392456]
[-51.67067337 -304.32263184]
[-55.91166306 -318.71060181]
[-60.15264893 -333.09857178]
[-64.39363861 -347.48657227]
[-68.63462830 -361.87454224]
[-72.87561035 -376.26251221]
[-82.67125702 -380.88110352]
[-88.21176147 -389.93048096]
[-87.88466644 -400.31698608]
[-82.03733826 -408.64105225]
[-85.94730377 -423.12249756]
[-89.85726929 -437.60394287]
[-93.76723480 -452.08538818]
[-107.18716431 -459.99380493]
[-110.94613647 -474.73574829]
[-103.32395935 -487.48086548]
[-107.23392487 -501.96231079]
[-111.14389038 -516.44372559]
[-115.05385590 -530.92517090]
[-129.59837341 -536.33227539]
[-138.15884399 -549.27441406]
[-137.44361877 -564.77496338]
[-127.72769165 -576.87377930]
[-112.74704742 -580.91851807]
[-98.26204681 -575.35394287]
[-89.84246826 -562.31970215]
[-90.72581482 -546.82781982]
[-100.57241058 -534.83514404]
[-96.66244507 -520.35369873]
[-92.75247955 -505.87225342]
[-88.84251404 -491.39080811]
[-75.84143066 -484.21395874]
[-71.66987610 -469.58340454]
[-79.28578949 -455.99533081]
[-75.37582397 -441.51388550]
[-71.46585846 -427.03247070]
[-67.55589294 -412.55102539]
[-52.90539932 -399.89883423]
[-58.48762894 -380.50350952]
[-54.24664307 -366.11553955]
[-50.00565338 -351.72753906]
[-45.76466751 -337.33956909]
[-41.52368164 -322.95159912]
[-37.28269196 -308.56359863]
[-32.87701797 -294.22518921]
[-28.30723953 -279.93823242]
[-23.73745918 -265.65127563]
[-10.42101479 -259.07800293]
[-5.58308506 -244.65409851]
[-12.56802368 -230.73115540]
[-7.99824429 -216.44419861]
[-3.42846489 -202.15724182]
[1.14131451 -187.87028503]
[6.11868429 -173.72016907]
[11.49955559 -159.71852112]
[16.81238556 -154.62141418]
[16.86084175 -145.52537537]
[22.08082581 -131.46295166]
[27.30080795 -117.40052032]
[32.52079010 -103.33809662]
[37.74077225 -89.27567291]
[51.34457779 -83.31982422]
[56.83870697 -69.13288879]
[50.49943161 -54.90435028]
[55.71941376 -40.84192657]
[60.93939590 -26.77950096]
[66.15937805 -12.71707630]
[71.37936401 1.34534860]
[76.59934235 15.40777302]
[81.81932831 29.47019768]
[87.03930664 43.53262329]
[92.25929260 57.59504700]
[120.42941284 57.22000504]
[145.39949036 75.24559784]
[159.46191406 70.02561951]
[173.52433777 64.80563354]
[187.58676147 59.58565140]
[201.64918518 54.36566925]
[208.57374573 48.46726990]
[215.90287781 49.16746521]
[230.02423096 44.10905838]
[244.14558411 39.05065155]
[258.23770142 33.91136932]
[272.30014038 28.69138718]
[286.36254883 23.47140503]
[294.32995605 9.54661465]
[310.20581055 7.23632050]
[321.81146240 18.31278229]
[320.24411011 34.27908707]
[306.70602417 42.88725281]
[291.58251953 37.53382874]
[277.52011108 42.75381088]
[263.45767212 47.97379684]
[258.29998779 53.22783661]
[249.20399475 53.17200089]
[235.08264160 58.23040771]
[220.96128845 63.28881454]
[206.86917114 68.42809296]
[192.80674744 73.64807892]
[178.74432373 78.86805725]
[164.68190002 84.08804321]
[150.61947632 89.30802155]
[149.97532654 96.78031158]
[164.91990662 98.06861115]
[179.53118896 94.67591095]
[187.27281189 107.52375793]
[177.44592285 118.85655975]
[163.63160706 113.01318359]
[148.68702698 111.72488403]
[148.04287720 119.19717407]
[161.00450134 126.74676514]
[173.96612549 134.29635620]
[186.92774963 141.84594727]
[200.10041809 149.02096558]
[213.47331238 155.81549072]
[226.84620667 162.61001587]
[231.98466492 162.33682251]
[236.29666138 163.88575745]
[239.23135376 166.64541626]
[240.55615234 169.87510681]
[253.68748474 177.12550354]
[267.68218994 170.42271423]
[282.93786621 173.25904846]
[293.58831787 184.54386902]
[295.53829956 199.93792725]
[288.03793335 213.52191162]
[273.97134399 220.07249451]
[258.74734497 217.07083130]
[248.21992493 205.67114258]
[246.43707275 190.25682068]
[233.30575562 183.00642395]
[220.05168152 175.98291016]
[206.67878723 169.18838501]
[193.30589294 162.39385986]
[195.61857605 177.21450806]
[185.56047058 188.34260559]
[170.58222961 187.53491211]
[161.77914429 175.38972473]
[165.67218018 160.90371704]
[179.37815857 154.80757141]
[166.41653442 147.25798035]
[153.45491028 139.70838928]
[140.49328613 132.15879822]
[124.02815247 140.86730957]
[107.01281738 142.53138733]
[106.84084320 157.53039551]
[106.66886139 172.52941895]
[114.67592621 179.82138062]
[117.31416321 190.09892273]
[113.95085144 199.93125916]
[105.91654968 206.17076111]
[105.40069580 221.16188049]
[112.65882874 235.21998596]
[104.48841095 247.67362976]
[103.97255707 262.66476440]
[111.23069000 276.72286987]
[103.06027222 289.17651367]
[102.54441833 304.16763306]
[102.02857208 319.15878296]
[101.59866333 334.15261841]
[101.25472260 349.14865112]
[100.91078186 364.14471436]
[100.56684875 379.14077759]
[100.30888367 394.13854980]
[100.13690186 409.13757324]
[99.96492004 424.13659668]
[113.66248322 430.87005615]
[123.07527161 442.88513184]
[126.33436584 457.79623413]
[122.79266357 472.64276123]
[113.15338135 484.47689819]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 268]
[8 267]
[9 266]
[11 265]
[12 264]
[13 263]
[14 262]
[16 261]
[17 260]
[18 259]
[20 257]
[21 256]
[23 254]
[24 253]
[26 249]
[27 248]
[28 247]
[31 42]
[32 41]
[33 40]
[34 39]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[69 174]
[70 173]
[71 172]
[72 171]
[73 170]
[74 169]
[75 168]
[76 167]
[77 166]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
[85 157]
[86 156]
[92 155]
[93 154]
[94 153]
[95 152]
[98 149]
[99 148]
[100 147]
[103 146]
[104 145]
[105 144]
[106 143]
[107 142]
[108 141]
[112 139]
[113 138]
[114 137]
[115 136]
[118 133]
[119 132]
[120 131]
[121 130]
[176 204]
[177 203]
[178 202]
[179 201]
[180 200]
[182 199]
[183 198]
[184 197]
[185 195]
[186 194]
[187 193]
[212 245]
[213 244]
[214 243]
[215 242]
[216 236]
[217 235]
[218 234]
[222 233]
[223 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
