%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCUCCGGGUCAGGGCAGCCACACUGCACGCAGGCUGGGCCGACUGGGGAGCUCAUAGGCCAGGCUCUGACACCCAGGCAGGGCCUAGGGUGGGACGAUGGCAGGUGGGGGCAGCGACCUGAGCACCAGGGGGCUGAACGGAGGUGUUUCACAAGUAGCAAAUGAGAUGAACCAUCUUCCUGCACACAGCCAAAGUC\
) } def
/len { sequence length } bind def

/coor [
[454.27410889 297.92434692]
[441.24462891 290.49249268]
[428.21517944 283.06060791]
[415.01422119 275.93774414]
[401.64910889 269.12789917]
[388.28402710 262.31802368]
[374.91891479 255.50817871]
[367.52529907 255.27238464]
[361.39862061 248.48495483]
[348.14215088 241.46600342]
[334.88565063 234.44705200]
[321.62918091 227.42811584]
[308.37268066 220.40916443]
[295.10076904 227.11692810]
[280.24826050 224.69476318]
[269.54479980 213.86473083]
[267.24420166 198.63275146]
[253.98771667 191.61380005]
[239.87139893 196.22523499]
[226.32745361 189.29586792]
[221.58627319 174.45811462]
[208.32978821 167.43916321]
[195.07330322 160.42022705]
[181.81681824 153.40127563]
[174.42779541 153.04937744]
[168.40850830 146.16654968]
[155.26390076 138.94023132]
[142.11930847 131.71392822]
[128.97470093 124.48762512]
[110.96408081 136.31758118]
[89.41605377 136.43017578]
[71.28278351 124.78909302]
[62.41471863 105.15016174]
[47.44431686 104.20830536]
[32.47391891 103.26644897]
[17.49658012 102.44219208]
[2.51323271 101.73559570]
[-12.47011566 101.02899933]
[-26.61944389 108.10763550]
[-38.96810913 99.77938843]
[-53.95145798 99.07279205]
[-68.93480682 98.36619568]
[-83.91815186 97.65959930]
[-92.77484894 107.81429291]
[-105.67536926 110.96514130]
[-117.85366821 106.17886353]
[-124.94258881 95.41268921]
[-139.91299438 94.47082520]
[-154.88339233 93.52896881]
[-169.85379028 92.58711243]
[-186.04132080 97.62697601]
[-195.36538696 83.46723175]
[-184.34016418 70.58775330]
[-168.91194153 77.61671448]
[-153.94152832 78.55857086]
[-138.97113037 79.50042725]
[-124.00073242 80.44228363]
[-111.87700653 68.79245758]
[-94.74122620 69.52571869]
[-83.21155548 82.67624664]
[-68.22821045 83.38284302]
[-53.24486160 84.08943939]
[-38.26151276 84.79604340]
[-25.18389511 77.66686249]
[-11.76351833 86.04565430]
[3.21982956 86.75225067]
[18.20317841 87.45884705]
[25.03879547 84.63115692]
[33.41577530 88.29604340]
[48.38617706 89.23790741]
[63.35657883 90.17976379]
[67.81050110 79.92480469]
[75.06027985 71.41350555]
[67.62839508 58.38402939]
[60.19651794 45.35455704]
[52.76463699 32.32508469]
[45.33275986 19.29561234]
[37.79877472 6.32491016]
[30.16315460 -6.58622026]
[22.52753258 -19.49735069]
[14.89191151 -32.40848160]
[1.62479889 -42.96405029]
[8.09515095 -58.63475037]
[24.94460678 -56.75534821]
[27.80304146 -40.04410172]
[35.43866348 -27.13297081]
[43.07428360 -14.22184086]
[50.70990753 -1.31071091]
[56.82621765 2.85008430]
[58.36223221 11.86373234]
[65.79411316 24.89320374]
[73.22599030 37.92267609]
[80.65787506 50.95214844]
[88.08975220 63.98162460]
[97.13480377 62.17185974]
[106.34925842 62.59860611]
[115.18833160 65.23662567]
[123.12941742 69.92995453]
[129.70303345 76.40111542]
[134.52052307 84.26750946]
[137.29705811 93.06404877]
[137.86848450 102.27066040]
[136.20101929 111.34302521]
[149.34561157 118.56933594]
[162.49021912 125.79563904]
[175.63481140 133.02194214]
[188.83575439 140.14479065]
[202.09223938 147.16374207]
[215.34872437 154.18267822]
[228.60520935 161.20162964]
[243.54217529 156.78291321]
[256.88613892 164.08998108]
[261.00665283 178.35731506]
[274.26315308 185.37626648]
[288.15435791 178.71740723]
[303.12789917 181.48263550]
[313.47958374 192.40541077]
[315.39163208 207.15267944]
[328.64813232 214.17163086]
[341.90460205 221.19056702]
[355.16110229 228.20951843]
[368.41757202 235.22846985]
[381.72879028 242.14308167]
[395.09387207 248.95294189]
[408.45898438 255.76280212]
[421.82406616 262.57266235]
[427.05447388 262.29583740]
[431.42739868 263.89801025]
[434.36950684 266.73571777]
[435.64703369 270.03112793]
[448.67651367 277.46301270]
[461.70599365 284.89489746]
[485.43826294 282.52636719]
[496.63006592 302.76397705]
[510.30111694 308.93667603]
[523.97216797 315.10940552]
[537.64318848 321.28210449]
[551.31427002 327.45483398]
[568.11895752 316.64196777]
[587.90045166 318.14895630]
[602.65728760 331.19183350]
[606.52581787 350.35592651]
[620.55743408 355.65805054]
[634.58911133 360.96017456]
[648.62078857 366.26229858]
[662.65246582 371.56442261]
[676.68408203 376.86654663]
[690.71575928 382.16867065]
[706.35998535 379.80886841]
[715.53070068 391.54544067]
[729.56237793 396.84756470]
[743.59399414 402.14968872]
[757.62567139 407.45181274]
[768.55578613 399.04565430]
[782.10504150 397.15521240]
[794.71734619 402.16867065]
[803.13580322 412.67617798]
[805.24353027 425.86447144]
[819.19018555 431.38635254]
[834.42559814 426.36013794]
[847.77496338 435.25811768]
[848.99780273 451.25448608]
[837.15612793 462.07821655]
[821.33374023 459.42626953]
[813.66833496 445.33300781]
[799.72167969 439.81112671]
[786.15472412 449.04586792]
[769.59063721 448.37075806]
[756.56158447 437.85391235]
[752.32354736 421.48348999]
[738.29187012 416.18136597]
[724.26025391 410.87924194]
[710.22857666 405.57711792]
[695.58801270 408.31616211]
[685.41363525 396.20031738]
[671.38195801 390.89819336]
[657.35034180 385.59606934]
[643.31866455 380.29394531]
[629.28698730 374.99182129]
[615.25531006 369.68972778]
[601.22369385 364.38760376]
[594.02630615 371.84152222]
[584.72277832 376.48931885]
[574.36437988 377.77728271]
[564.13122559 375.53298950]
[555.19757080 369.98791504]
[548.59735107 361.75378418]
[545.10430908 351.75521851]
[545.14154053 341.12588501]
[531.47052002 334.95315552]
[517.79943848 328.78045654]
[504.12838745 322.60772705]
[490.45733643 316.43502808]
[485.24716187 320.34228516]
[479.03424072 322.46066284]
[472.41918945 322.55160522]
[466.05187988 320.57427979]
[460.56777954 316.69259644]
[456.52447510 311.26208496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[4 126]
[5 125]
[6 124]
[7 123]
[9 122]
[10 121]
[11 120]
[12 119]
[13 118]
[17 114]
[18 113]
[21 110]
[22 109]
[23 108]
[24 107]
[26 106]
[27 105]
[28 104]
[29 103]
[33 71]
[34 70]
[35 69]
[36 67]
[37 66]
[38 65]
[40 63]
[41 62]
[42 61]
[43 60]
[47 57]
[48 56]
[49 55]
[50 54]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 88]
[79 87]
[80 86]
[81 85]
[134 193]
[135 192]
[136 191]
[137 190]
[138 189]
[142 181]
[143 180]
[144 179]
[145 178]
[146 177]
[147 176]
[148 175]
[150 173]
[151 172]
[152 171]
[153 170]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
