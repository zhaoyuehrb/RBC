%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GSG1L2)
} def

/sequence { (\
AUGGACAGGGCCAAGCAGCAGCAGGCGCUGCUCCUCCUCCCUGUCUGCCUCGCCCUCACCUUCUCCCUCACCGCCGUGGUCAGCAGCCACUGGUGUGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 47 0.510028494 ubox
2 52 0.018538134 ubox
2 58 0.015679090 ubox
3 45 0.016691806 ubox
3 46 0.961627402 ubox
3 49 0.036942674 ubox
3 50 0.004987662 ubox
3 51 0.020771056 ubox
3 54 0.008399613 ubox
3 55 0.011743374 ubox
3 57 0.016911130 ubox
3 60 0.032878458 ubox
3 63 0.005656093 ubox
3 65 0.003745413 ubox
4 44 0.008798570 ubox
4 45 0.998529665 ubox
4 48 0.030107870 ubox
4 49 0.003791459 ubox
4 50 0.004356742 ubox
4 53 0.006449605 ubox
4 54 0.009372773 ubox
4 56 0.003169182 ubox
4 59 0.032421925 ubox
5 44 0.999263880 ubox
6 43 0.999447938 ubox
7 42 0.999225973 ubox
7 56 0.031789300 ubox
8 40 0.004546100 ubox
8 41 0.999446418 ubox
8 55 0.032485328 ubox
9 39 0.006397546 ubox
9 40 0.999430942 ubox
9 54 0.032487815 ubox
10 36 0.004124136 ubox
10 37 0.006190572 ubox
10 38 0.006592207 ubox
10 39 0.997923842 ubox
10 53 0.032487700 ubox
11 15 0.003244662 ubox
11 52 0.032447550 ubox
14 32 0.053393185 ubox
14 35 0.934176403 ubox
14 38 0.035832538 ubox
14 50 0.008836730 ubox
15 31 0.055418704 ubox
15 34 0.961737106 ubox
15 37 0.036006229 ubox
15 48 0.030750777 ubox
15 49 0.008322293 ubox
16 30 0.055445296 ubox
16 47 0.030988302 ubox
17 29 0.055426935 ubox
17 32 0.974734434 ubox
17 35 0.020526575 ubox
17 46 0.030345616 ubox
18 28 0.055429288 ubox
18 31 0.997725045 ubox
18 34 0.020610745 ubox
18 45 0.029463764 ubox
18 48 0.008990937 ubox
19 27 0.055396611 ubox
19 30 0.997756020 ubox
19 43 0.019671796 ubox
19 47 0.009045593 ubox
20 29 0.997522115 ubox
20 32 0.020867649 ubox
20 42 0.019180971 ubox
20 46 0.009043085 ubox
21 28 0.997741205 ubox
21 31 0.021754764 ubox
21 41 0.018631865 ubox
21 44 0.021068082 ubox
21 45 0.008956276 ubox
22 27 0.996304568 ubox
22 30 0.021867148 ubox
22 43 0.023712053 ubox
23 29 0.021814315 ubox
23 35 0.004716974 ubox
23 38 0.016629834 ubox
23 42 0.023709205 ubox
24 28 0.021337178 ubox
24 34 0.004857139 ubox
24 37 0.017137782 ubox
24 41 0.023688290 ubox
25 33 0.004794910 ubox
25 36 0.016950870 ubox
25 40 0.023473771 ubox
26 30 0.003332439 ubox
46 52 0.011974139 ubox
46 58 0.013566683 ubox
47 51 0.035720866 ubox
47 53 0.304796737 ubox
47 57 0.026178409 ubox
48 52 0.303971856 ubox
48 100 0.032949632 ubox
49 99 0.033577568 ubox
50 98 0.033553383 ubox
51 97 0.033540207 ubox
52 96 0.033252803 ubox
53 95 0.029676883 ubox
53 100 0.004628901 ubox
54 93 0.010098559 ubox
54 99 0.003475053 ubox
54 100 0.074855327 ubox
55 92 0.010073647 ubox
55 99 0.076136468 ubox
56 98 0.076171505 ubox
57 97 0.076165187 ubox
58 94 0.003637676 ubox
58 96 0.075858858 ubox
59 93 0.003660624 ubox
59 95 0.062080098 ubox
59 100 0.005820815 ubox
60 86 0.006374631 ubox
60 92 0.003653035 ubox
60 99 0.005544659 ubox
61 85 0.006264718 ubox
61 98 0.004187163 ubox
62 100 0.011512031 ubox
63 83 0.006576154 ubox
63 86 0.003646158 ubox
63 99 0.018523153 ubox
63 100 0.004746004 ubox
64 82 0.006405279 ubox
64 85 0.003548364 ubox
64 98 0.018521921 ubox
64 100 0.003202067 ubox
65 97 0.018469165 ubox
65 100 0.054065959 ubox
66 99 0.039188117 ubox
66 100 0.978602362 ubox
67 79 0.004492334 ubox
67 83 0.005146441 ubox
67 99 0.995421239 ubox
67 100 0.003483814 ubox
68 79 0.005321778 ubox
68 82 0.005084926 ubox
68 98 0.996169503 ubox
69 78 0.007434604 ubox
69 95 0.042693991 ubox
69 97 0.996303312 ubox
70 77 0.007491759 ubox
70 80 0.005537366 ubox
70 94 0.060175878 ubox
70 96 0.993532426 ubox
71 76 0.007470029 ubox
71 79 0.005636856 ubox
71 93 0.060782717 ubox
71 95 0.705611769 ubox
72 78 0.005634936 ubox
72 92 0.060885618 ubox
72 95 0.702580347 ubox
73 77 0.003476799 ubox
73 91 0.049460776 ubox
73 94 0.992609460 ubox
74 93 0.997833408 ubox
75 92 0.997331516 ubox
76 90 0.972827575 ubox
76 91 0.226622311 ubox
77 89 0.999370347 ubox
78 88 0.999936012 ubox
79 87 0.999839651 ubox
80 86 0.977692522 ubox
3 46 0.9500000 lbox
4 45 0.9500000 lbox
5 44 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
10 39 0.9500000 lbox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
66 100 0.9500000 lbox
67 99 0.9500000 lbox
68 98 0.9500000 lbox
69 97 0.9500000 lbox
70 96 0.9500000 lbox
71 95 0.9500000 lbox
73 94 0.9500000 lbox
74 93 0.9500000 lbox
75 92 0.9500000 lbox
76 90 0.9500000 lbox
77 89 0.9500000 lbox
78 88 0.9500000 lbox
79 87 0.9500000 lbox
80 86 0.9500000 lbox
showpage
end
%%EOF
