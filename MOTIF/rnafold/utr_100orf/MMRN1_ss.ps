%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCUAUCAAAAAGGCCAUAAGGAUUUUGUCCCCAAAUUUCACAUGAGCUACCUUGCUUCAAACUACUGAGAUGAAGGGGGCAAGAUUAUUUGUCCUUCUUUCUAGUUUAUGGAGUGGGGGCAUUGGGCUUAACAACAGUAAGCAUUCUUGGACUAUACCUGAGGAUGGGA\
) } def
/len { sequence length } bind def

/coor [
[197.46092224 317.00198364]
[199.77818298 305.76358032]
[206.16520691 296.16876221]
[198.58625793 283.22427368]
[191.00730896 270.27978516]
[176.22775269 272.39971924]
[161.72326660 268.68957520]
[149.71180725 259.68457031]
[142.04243469 246.73204041]
[139.91062927 231.78984070]
[143.67205811 217.13056946]
[152.78372192 204.99575806]
[145.20477295 192.05128479]
[137.62582397 179.10681152]
[124.51817322 172.03298950]
[124.22247314 156.21455383]
[116.64352417 143.27006531]
[109.06457520 130.32559204]
[96.04526520 131.40332031]
[83.69966888 127.13129425]
[74.13092804 118.23730469]
[68.96913910 106.23648071]
[69.09363556 93.17323303]
[55.63046265 86.55938721]
[42.16728973 79.94554138]
[28.70411682 73.33169556]
[15.24094296 66.71784973]
[1.77776909 60.10400391]
[-11.68540478 53.49015808]
[-25.14857864 46.87631226]
[-38.61175156 40.26246643]
[-52.07492447 33.64862061]
[-65.53810120 27.03477669]
[-79.00127411 20.42093086]
[-95.43141174 26.37517548]
[-110.79042816 18.77071762]
[-115.81391907 2.73811960]
[-129.39564514 -3.62873101]
[-142.97735596 -9.99558163]
[-156.55908203 -16.36243248]
[-170.14080811 -22.72928238]
[-183.72253418 -29.09613228]
[-202.93536377 -20.63732147]
[-221.90809631 -28.91700745]
[-228.58099365 -48.20415115]
[-242.59123230 -53.56261444]
[-256.60147095 -58.92107773]
[-270.66006470 -64.15137482]
[-284.76583862 -69.25305939]
[-298.96762085 -62.31872940]
[-313.88574219 -67.53652954]
[-320.66952515 -81.81083679]
[-315.29428101 -96.67295074]
[-300.94906616 -103.30544281]
[-286.14462280 -97.77337646]
[-279.66415405 -83.35883331]
[-265.55838013 -78.25714111]
[-258.17153931 -78.94168854]
[-251.24301147 -72.93132019]
[-237.23277283 -67.57286072]
[-223.22253418 -62.21439362]
[-216.20683289 -68.52548218]
[-207.31278992 -71.84890747]
[-197.76147461 -71.68302155]
[-188.88090515 -68.00835419]
[-181.92138672 -61.29625702]
[-177.87953186 -52.44883347]
[-177.35568237 -42.67785645]
[-163.77395630 -36.31100464]
[-150.19223022 -29.94415474]
[-136.61051941 -23.57730484]
[-123.02878571 -17.21045494]
[-109.44706726 -10.84360409]
[-98.04103088 -16.88378906]
[-85.04624176 -15.21537209]
[-75.24881744 -6.22640657]
[-72.38742828 6.95775700]
[-58.92425156 13.57160282]
[-45.46107864 20.18544960]
[-31.99790573 26.79929543]
[-18.53473282 33.41313934]
[-5.07155848 40.02698517]
[8.39161491 46.64083099]
[21.85478783 53.25467682]
[35.31796265 59.86852264]
[48.78113556 66.48236847]
[62.24430847 73.09621429]
[75.70748138 79.71006012]
[84.28237152 72.52703094]
[94.82037354 68.77533722]
[106.00530243 68.92357635]
[116.44017792 72.95321655]
[127.04678345 62.34661484]
[137.65338135 51.74001312]
[148.25997925 41.13341141]
[158.86659241 30.52680969]
[169.47319031 19.92020798]
[180.07978821 9.31360722]
[180.86663818 -3.58469057]
[189.95027161 -12.20223141]
[202.06951904 -12.30154991]
[212.86807251 -22.71266365]
[223.66662598 -33.12377548]
[234.46517944 -43.53488922]
[245.26373291 -53.94600296]
[246.99319458 -69.89556122]
[260.61798096 -78.36577606]
[275.68634033 -72.85901642]
[280.63909912 -57.59960556]
[271.67691040 -44.29324722]
[255.67483521 -43.14744949]
[244.87628174 -32.73633575]
[234.07772827 -22.32522392]
[223.27917480 -11.91411114]
[212.48063660 -1.50299799]
[208.56607056 15.58770657]
[190.68638611 19.92020798]
[180.07978821 30.52680969]
[169.47319031 41.13341141]
[158.86659241 51.74001312]
[148.25997925 62.34661484]
[137.65338135 72.95321655]
[127.04678345 83.55982208]
[131.39300537 104.03578186]
[122.00904846 122.74664307]
[129.58799744 135.69111633]
[137.16694641 148.63558960]
[150.81669617 156.63528442]
[150.57029724 171.52786255]
[158.14924622 184.47233582]
[165.72819519 197.41680908]
[180.76974487 195.40998840]
[195.39428711 199.30433655]
[207.38127136 208.47636414]
[214.92298889 221.50363159]
[216.89717102 236.38542175]
[213.03382874 250.84986877]
[203.95179749 262.70083618]
[211.53074646 275.64532471]
[219.10969543 288.58981323]
[238.18185425 289.63244629]
[252.68666077 301.82910156]
[256.91937256 320.14825439]
[249.35641479 337.19854736]
[257.63293457 349.70852661]
[265.90945435 362.21850586]
[274.18597412 374.72845459]
[282.46246338 387.23843384]
[290.73898315 399.74838257]
[299.01550293 412.25836182]
[307.29202271 424.76834106]
[315.56854248 437.27828979]
[331.12472534 438.87179565]
[341.98001099 450.12774658]
[343.00888062 465.73144531]
[333.72552490 478.31530762]
[318.51327515 481.93759155]
[304.55487061 474.88800049]
[298.44104004 460.49511719]
[303.05856323 445.55480957]
[294.78204346 433.04486084]
[286.50555420 420.53488159]
[278.22903442 408.02490234]
[269.95251465 395.51495361]
[261.67599487 383.00497437]
[253.39947510 370.49499512]
[245.12295532 357.98504639]
[236.84645081 345.47506714]
[225.74772644 347.10406494]
[214.79696655 344.44458008]
[205.59805298 337.84655762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 140]
[4 139]
[5 138]
[12 131]
[13 130]
[14 129]
[16 127]
[17 126]
[18 125]
[23 88]
[24 87]
[25 86]
[26 85]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[32 79]
[33 78]
[34 77]
[37 73]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[45 61]
[46 60]
[47 59]
[48 57]
[49 56]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[144 168]
[145 167]
[146 166]
[147 165]
[148 164]
[149 163]
[150 162]
[151 161]
[152 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
