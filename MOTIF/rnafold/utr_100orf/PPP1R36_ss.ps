%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGACGCCCCGCCCCGCUCCGCGCCCCGGGCAGCCGUGUGCAGGCGCCUGCGGGCGGUAUCCUCGGCGACGCCGUAUGGCUUCCAGGGCGAGGCCAUGUACCGGGUGCCCGAGUUUUAUGCGAGGAGGAAGCGGUUAGGUGGGCAGACCCCUUACUUGAUGGAUCAGUUGGGAUUACGAUUAGGGAUGUGGUACU\
) } def
/len { sequence length } bind def

/coor [
[238.34378052 350.09649658]
[248.22760010 337.45965576]
[247.74926758 322.46728516]
[239.61004639 309.99322510]
[246.90333557 295.95333862]
[246.42500305 280.96096802]
[240.93428040 267.00201416]
[231.07034302 255.70144653]
[221.20642090 244.40087891]
[211.34248352 233.10031128]
[204.56764221 230.12504578]
[201.41310120 221.53999329]
[191.73063660 210.08357239]
[182.04815674 198.62713623]
[172.09443665 187.40557861]
[161.87515259 176.42530823]
[151.65588379 165.44503784]
[141.43659973 154.46476746]
[131.21731567 143.48449707]
[120.91081238 132.58607483]
[110.51773834 121.77015686]
[87.17678070 123.93517303]
[70.15276337 104.11692047]
[55.80083466 108.47834015]
[41.44889832 112.83976746]
[27.09696579 117.20118713]
[12.74503326 121.56260681]
[-1.57166827 126.03833008]
[-15.85222721 130.62806702]
[-30.13278580 135.21778870]
[-44.41334534 139.80752563]
[-58.69390488 144.39726257]
[-65.91649628 150.00869751]
[-73.23891449 148.94435120]
[-87.59085083 153.30577087]
[-101.94277954 157.66719055]
[-107.91025543 172.12136841]
[-121.79641724 179.31224060]
[-137.04464722 175.84446716]
[-146.45520020 163.35545349]
[-145.58470154 147.74211121]
[-134.84416199 136.37660217]
[-119.30495453 134.62535095]
[-106.30420685 143.31526184]
[-91.95227051 138.95384216]
[-77.60033417 134.59242249]
[-63.28363419 130.11669922]
[-49.00307846 125.52696228]
[-34.72251892 120.93723297]
[-20.44195938 116.34750366]
[-6.16139984 111.75777435]
[-0.74906111 106.71224976]
[8.38360977 107.21067810]
[22.73554420 102.84925079]
[37.08747482 98.48783112]
[51.43941116 94.12641144]
[65.79134369 89.76498413]
[73.01345825 76.61808014]
[68.99655914 62.16593552]
[64.97966003 47.71378708]
[60.96275711 33.26164246]
[44.77793503 19.22790146]
[50.73427963 -0.52646542]
[46.03082657 -14.76997471]
[41.32737350 -29.01348305]
[36.62392426 -43.25699234]
[31.92047119 -57.50049973]
[18.08441925 -64.65602112]
[13.51735497 -79.16796112]
[20.42431450 -92.31443024]
[15.72086239 -106.55793762]
[10.05200958 -113.73555756]
[11.05793858 -121.06623077]
[6.58221912 -135.38293457]
[2.10649991 -149.69963074]
[-2.71037292 -163.90518188]
[-7.86564255 -177.99145508]
[-13.02091217 -192.07774353]
[-18.17618179 -206.16401672]
[-23.33145142 -220.25028992]
[-28.48672104 -234.33656311]
[-33.64199066 -248.42283630]
[-38.79726028 -262.50912476]
[-43.95252991 -276.59539795]
[-58.39160919 -283.02102661]
[-63.97991180 -297.80432129]
[-57.40199661 -312.17465210]
[-42.56042480 -317.60635376]
[-28.26043701 -310.87689209]
[-22.98596191 -295.97869873]
[-29.86625481 -281.75067139]
[-24.71098518 -267.66439819]
[-19.55571556 -253.57810974]
[-14.40044498 -239.49183655]
[-9.24517536 -225.40556335]
[-4.08990574 -211.31929016]
[1.06536424 -197.23300171]
[6.22063398 -183.14672852]
[11.37590408 -169.06045532]
[14.41485882 -167.25102234]
[16.72393799 -163.87399292]
[17.57334137 -159.29058838]
[16.42320061 -154.17535400]
[20.89892006 -139.85864258]
[25.37463951 -125.54194641]
[29.96437073 -111.26139069]
[34.66782379 -97.01787567]
[48.04527664 -90.56967926]
[53.01815033 -76.19173431]
[46.16397858 -62.20395279]
[50.86743164 -47.96044159]
[55.57088470 -33.71693420]
[60.27433395 -19.47342491]
[64.97778320 -5.22991705]
[73.47129822 -2.57464290]
[79.88337708 3.79283214]
[82.68200684 12.52979660]
[81.11679077 21.70924187]
[75.41490173 29.24474335]
[79.43180084 43.69688797]
[83.44869995 58.14903641]
[87.46559906 72.60118103]
[99.58936310 70.86508179]
[110.98303223 74.08554840]
[119.77600098 81.39254761]
[124.66411591 91.27538300]
[125.09905243 101.88502502]
[121.33364868 111.37707520]
[131.72673035 122.19299316]
[139.93928528 126.21889496]
[142.19758606 133.26522827]
[152.41687012 144.24549866]
[162.63613892 155.22576904]
[172.85542297 166.20603943]
[183.07470703 177.18630981]
[188.08792114 178.72123718]
[191.64862061 181.72967529]
[193.43824768 185.40844727]
[193.50459290 188.94467163]
[203.18705750 200.40109253]
[212.86953735 211.85751343]
[222.64305115 223.23637390]
[232.50698853 234.53694153]
[242.37091064 245.83750916]
[252.23484802 257.13809204]
[256.39559937 252.15887451]
[262.53640747 248.30122375]
[270.31253052 246.21150208]
[279.18899536 246.42546082]
[288.47573853 249.31584167]
[297.37658691 255.05097961]
[309.20980835 264.26913452]
[321.04306030 273.48730469]
[332.87628174 282.70544434]
[344.70953369 291.92361450]
[360.35116577 294.30059814]
[365.63656616 308.22589111]
[377.46981812 317.44406128]
[389.30307007 326.66220093]
[400.01605225 324.69827271]
[409.83676147 328.87460327]
[415.61080933 337.58703613]
[415.62942505 347.81939697]
[427.16268921 357.41021729]
[438.69595337 367.00103760]
[450.22921753 376.59185791]
[465.94216919 374.89529419]
[478.19998169 384.87130737]
[479.73034668 400.60134888]
[469.62527466 412.75302124]
[453.87994385 414.11697388]
[441.83578491 403.88397217]
[440.63839722 388.12512207]
[429.10513306 378.53430176]
[417.57186890 368.94348145]
[406.03860474 359.35266113]
[386.79858398 357.49505615]
[380.08489990 338.49545288]
[368.25164795 329.27728271]
[356.41842651 320.05914307]
[341.62316895 318.34149170]
[335.49136353 303.75686646]
[323.65814209 294.53869629]
[311.82489014 285.32052612]
[299.99166870 276.10238647]
[288.15841675 266.88421631]
[281.47314453 270.28381348]
[268.10263062 277.08300781]
[261.41735840 280.48263550]
[261.89569092 295.47500610]
[270.06915283 309.02142334]
[262.74163818 321.98895264]
[263.21997070 336.98132324]
[273.88922119 348.96240234]
[271.03231812 364.74902344]
[256.84078979 372.23104858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[5 190]
[6 189]
[7 145]
[8 144]
[9 143]
[10 142]
[12 141]
[13 140]
[14 139]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 129]
[21 128]
[23 57]
[24 56]
[25 55]
[26 54]
[27 53]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[34 46]
[35 45]
[36 44]
[58 122]
[59 121]
[60 120]
[61 119]
[63 114]
[64 113]
[65 112]
[66 111]
[67 110]
[70 107]
[71 106]
[73 105]
[74 104]
[75 103]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[151 186]
[152 185]
[153 184]
[154 183]
[155 182]
[157 180]
[158 179]
[159 178]
[163 176]
[164 175]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
