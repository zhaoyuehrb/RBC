%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGCUCCCGCCUCAGUGCGCAUGUUCACUGGGCGUCUUCUGCCCGGCCCCUUCGCCCACGUGAAGAACGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUUAUUGGCCUAGACCAAGGCGCUAUGUACAGCCUCCUGAAAUGAUUGGGCCUAUGCGGCCCGAGCAGUUCAGUG\
) } def
/len { sequence length } bind def

/coor [
[80.10886383 118.72011566]
[72.61253357 118.48547363]
[64.28874207 130.96403503]
[55.96494675 143.44259644]
[47.64115143 155.92114258]
[55.02796936 173.60769653]
[50.26965332 192.01919556]
[35.47462845 203.72489929]
[16.76363373 204.11424255]
[8.91415310 216.89648438]
[1.06467223 229.67872620]
[-6.78480864 242.46096802]
[-8.60088921 251.38598633]
[-14.81337357 255.35319519]
[-22.82222176 268.03619385]
[-30.83106995 280.71917725]
[-38.83992004 293.40219116]
[-46.84876633 306.08517456]
[-40.97917938 320.44927979]
[-44.70628738 335.51208496]
[-56.59693527 345.48165894]
[-72.07893372 346.52444458]
[-85.19912720 338.23953247]
[-90.91254425 323.81259155]
[-87.02225494 308.79110718]
[-75.02415466 298.95111084]
[-59.53176117 298.07632446]
[-51.52291489 285.39334106]
[-43.51406479 272.71032715]
[-35.50521469 260.02734375]
[-27.49636841 247.34434509]
[-19.56704903 234.61148071]
[-11.71756744 221.82923889]
[-3.86808658 209.04699707]
[3.98139429 196.26477051]
[-2.12793660 186.98268127]
[-4.35434294 176.04353333]
[-2.34064174 165.01115417]
[3.66138864 155.47726440]
[12.82179260 148.83172607]
[23.84703064 146.06004333]
[35.16259384 147.59735107]
[43.48638916 135.11878967]
[51.81018066 122.64023590]
[60.13397598 110.16167450]
[52.44509125 97.28219604]
[37.51113510 98.68820953]
[22.57717514 100.09423065]
[11.65660572 113.77608490]
[-5.44465923 115.28397369]
[-18.08280754 104.17055511]
[-32.99799728 105.76337433]
[-47.91318893 107.35619354]
[-62.82838058 108.94901276]
[-77.74356842 110.54183197]
[-92.65876007 112.13465881]
[-105.58386230 122.22791290]
[-120.68393707 115.83106232]
[-122.42533112 99.52463531]
[-109.01664734 90.08329010]
[-94.25158691 97.21946716]
[-79.33639526 95.62664032]
[-64.42120361 94.03382111]
[-49.50601196 92.44100189]
[-34.59082031 90.84818268]
[-19.67562866 89.25536346]
[-13.07672405 78.20565033]
[-1.14352989 72.88745880]
[11.86694527 75.44286346]
[21.17115784 85.16027069]
[36.10511780 83.75424957]
[51.03907394 82.34823608]
[83.94966888 73.83303070]
[101.15974426 90.72336578]
[107.35212708 77.06121826]
[113.54451752 63.39906693]
[114.23222351 54.31715012]
[119.90085602 49.60542679]
[126.26375580 36.02185059]
[132.62664795 22.43827438]
[138.98954773 8.85469723]
[145.35244751 -4.72887897]
[151.71534729 -18.31245422]
[144.18029785 -29.83675766]
[143.32359314 -43.47074890]
[149.26205444 -55.65315247]
[160.35142517 -63.25460815]
[173.64013672 -64.38133240]
[180.17254639 -77.88420868]
[186.70495605 -91.38708496]
[193.23736572 -104.88996124]
[199.76977539 -118.39282990]
[206.30218506 -131.89570618]
[202.15045166 -141.91380310]
[204.14201355 -152.35057068]
[211.38603210 -159.82087708]
[221.32870483 -162.03674316]
[228.19705200 -175.37188721]
[235.06539917 -188.70701599]
[241.93373108 -202.04216003]
[248.80207825 -215.37728882]
[241.98631287 -229.19219971]
[244.58175659 -244.19609070]
[255.38656616 -254.67082214]
[270.11123657 -256.74981689]
[276.97958374 -270.08496094]
[283.84790039 -283.42007446]
[290.71624756 -296.75521851]
[281.38812256 -313.49932861]
[284.04669189 -332.32901001]
[297.43209839 -345.62362671]
[315.98074341 -348.11376953]
[322.34365845 -361.69735718]
[322.16149902 -368.26452637]
[324.89739990 -373.20855713]
[329.03958130 -375.53823853]
[335.74047852 -388.95828247]
[334.21102905 -407.32080078]
[349.24163818 -416.40011597]
[355.77404785 -429.90298462]
[362.30645752 -443.40585327]
[368.83886719 -456.90875244]
[375.37127686 -470.41162109]
[381.90368652 -483.91448975]
[388.43609619 -497.41735840]
[394.96850586 -510.92022705]
[387.90426636 -519.89251709]
[384.70086670 -530.80017090]
[385.78189087 -542.06549072]
[390.95413208 -552.07385254]
[399.44073486 -559.40502930]
[409.99758911 -563.03466797]
[421.09582520 -562.47747803]
[428.13052368 -575.72558594]
[435.16522217 -588.97369385]
[442.19992065 -602.22186279]
[449.23464966 -615.46997070]
[456.26934814 -628.71807861]
[463.30404663 -641.96624756]
[454.61767578 -654.56805420]
[452.79412842 -669.76452637]
[458.25247192 -684.06365967]
[469.73840332 -694.17962646]
[484.61251831 -697.78778076]
[499.45690918 -694.05902100]
[510.86038208 -683.85028076]
[516.20251465 -669.50732422]
[514.25579834 -654.32611084]
[505.46746826 -641.79522705]
[491.85705566 -634.79406738]
[476.55218506 -634.93151855]
[469.51748657 -621.68341064]
[462.48275757 -608.43524170]
[455.44805908 -595.18713379]
[448.41336060 -581.93902588]
[441.37866211 -568.69085693]
[434.34396362 -555.44274902]
[443.49877930 -539.11968994]
[440.91470337 -520.43176270]
[427.46072388 -506.99246216]
[408.47137451 -504.38781738]
[401.93896484 -490.88494873]
[395.40655518 -477.38208008]
[388.87414551 -463.87921143]
[382.34173584 -450.37634277]
[375.80932617 -436.87344360]
[369.27691650 -423.37057495]
[362.74450684 -409.86770630]
[366.42120361 -398.36053467]
[361.11053467 -387.06600952]
[349.16052246 -382.25738525]
[342.45962524 -368.83734131]
[335.92721558 -355.33447266]
[329.56433105 -341.75088501]
[336.67831421 -333.21435547]
[340.12026978 -322.59481812]
[339.35946655 -311.40600586]
[334.46716309 -301.25787354]
[326.11184692 -293.62472534]
[315.46804810 -289.63128662]
[304.05139160 -289.88687134]
[297.18304443 -276.55175781]
[290.31469727 -263.21661377]
[283.44638062 -249.88146973]
[290.30404663 -236.68638611]
[288.05026245 -221.80738831]
[277.34216309 -210.98194885]
[262.13720703 -208.50895691]
[255.26887512 -195.17381287]
[248.40052795 -181.83868408]
[241.53219604 -168.50354004]
[234.66384888 -155.16839600]
[236.97584534 -135.95599365]
[219.80506897 -125.36329651]
[213.27265930 -111.86042023]
[206.74024963 -98.35755157]
[200.20783997 -84.85467529]
[193.67543030 -71.35179901]
[187.14302063 -57.84892654]
[195.35662842 -43.62209320]
[193.44331360 -27.13878632]
[181.96130371 -14.92926121]
[165.29891968 -11.94955826]
[158.93601990 1.63401806]
[152.57312012 15.21759415]
[146.21022034 28.80117035]
[139.84733582 42.38474655]
[133.48443604 55.96832275]
[127.20666504 69.59145355]
[121.01428223 83.25360107]
[114.82189178 96.91575623]
[115.57255554 111.89695740]
[123.09963989 124.87166595]
[130.62672424 137.84637451]
[138.15380859 150.82107544]
[145.68089294 163.79579163]
[159.29850769 171.85005188]
[158.99250793 186.74151611]
[166.51959229 199.71621704]
[180.13720703 207.77047729]
[179.83120728 222.66194153]
[187.35829163 235.63664246]
[194.88536072 248.61135864]
[202.41244507 261.58605957]
[209.93952942 274.56076050]
[217.46661377 287.53546143]
[224.99369812 300.51019287]
[240.06707764 306.00317383]
[245.03378296 321.25805664]
[236.08377075 334.57260132]
[220.08274841 335.73300171]
[209.30531311 323.84915161]
[212.01898193 308.03726196]
[204.49191284 295.06256104]
[196.96482849 282.08786011]
[189.43774414 269.11312866]
[181.91065979 256.13842773]
[174.38357544 243.16372681]
[166.85649109 230.18902588]
[153.77726746 223.06280518]
[153.54487610 207.24330139]
[146.01779175 194.26858521]
[132.93856812 187.14236450]
[132.70617676 171.32287598]
[125.17910004 158.34815979]
[117.65201569 145.37345886]
[110.12493134 132.39874268]
[102.59784698 119.42404175]
[95.10152435 119.18939972]
[94.63198853 134.18205261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 45]
[3 44]
[4 43]
[5 42]
[9 35]
[10 34]
[11 33]
[12 32]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[46 72]
[47 71]
[48 70]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[74 211]
[75 210]
[76 209]
[78 208]
[79 207]
[80 206]
[81 205]
[82 204]
[83 203]
[88 199]
[89 198]
[90 197]
[91 196]
[92 195]
[93 194]
[97 192]
[98 191]
[99 190]
[100 189]
[101 188]
[105 184]
[106 183]
[107 182]
[108 181]
[112 174]
[113 173]
[116 172]
[117 171]
[119 168]
[120 167]
[121 166]
[122 165]
[123 164]
[124 163]
[125 162]
[126 161]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
[138 152]
[139 151]
[212 248]
[213 247]
[214 246]
[215 245]
[216 244]
[218 242]
[219 241]
[221 239]
[222 238]
[223 237]
[224 236]
[225 235]
[226 234]
[227 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
