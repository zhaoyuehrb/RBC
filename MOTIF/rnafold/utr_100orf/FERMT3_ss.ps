%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCCUGCUCGUGAUAAGGCACAAGCAAGGGCUGCCCUGAAGGAAGCUCCAAAGAGAAAGGAGGGCAGGAAGCCCACGGCCCACAGGGGUGUAGCCCGAGACCCACCUGCAGCCCCCAGCCCUUGCCAGGAAAGCAGCAGCCGCAGCCAUGGCGGGGAUGAAGACAGCCUCCGGGGACUACAUCGACUCGUCAUGGGAGCUGCGGGUGUUUGUGGGAGAGGAGGACCCAGAGGCCGAGUCGGUCACCC\
) } def
/len { sequence length } bind def

/coor [
[115.61778259 115.07019043]
[114.72216797 122.13426971]
[111.39627838 129.32687378]
[104.83953857 142.81796265]
[98.28280640 156.30903625]
[91.72606659 169.80010986]
[85.16933441 183.29119873]
[78.69749451 196.82319641]
[72.31079865 210.39561462]
[65.92411041 223.96801758]
[67.04920197 239.74916077]
[54.62927628 247.97076416]
[48.24258804 261.54318237]
[41.85589600 275.11557007]
[47.44455338 289.89874268]
[40.86697769 304.26925659]
[26.02553558 309.70129395]
[11.72538757 302.97216797]
[6.45055914 288.07412720]
[13.33051109 273.84591675]
[28.28349113 268.72888184]
[34.67018127 255.15647888]
[41.05686951 241.58407593]
[39.47496033 226.77371216]
[52.35170746 217.58132935]
[58.73839569 204.00891113]
[65.12508392 190.43650818]
[65.12928009 183.06495667]
[71.67825317 176.73445129]
[78.23499298 163.24337769]
[84.79172516 149.75230408]
[91.34846497 136.26121521]
[97.90519714 122.77014160]
[88.19936371 111.33350372]
[73.82153320 115.60879517]
[59.44370651 119.88407898]
[45.06587982 124.15937042]
[30.68805313 128.43466187]
[16.31022644 132.70994568]
[15.55242252 145.07450867]
[11.05610085 156.59127808]
[3.26657677 166.16067505]
[-7.05719185 172.87399292]
[-18.91653252 176.09960938]
[-31.16966057 175.54244995]
[-42.64160156 171.27088928]
[-52.23686981 163.70875549]
[-59.04407120 153.59333801]
[-73.57281494 157.32368469]
[-88.10156250 161.05403137]
[-99.43334961 172.90826416]
[-115.29901123 168.75941467]
[-119.37731171 152.87547302]
[-107.47284698 141.59648132]
[-91.83191681 146.52528381]
[-77.30316925 142.79493713]
[-62.77441788 139.06459045]
[-59.93247604 121.56989288]
[-49.67605972 107.04975891]
[-34.04450226 98.47212219]
[-16.18152237 97.61524200]
[0.29699254 104.69924164]
[12.03493690 118.33212280]
[26.41276360 114.05683136]
[40.79059219 109.78153992]
[55.16841888 105.50625610]
[69.54624176 101.23096466]
[83.92407227 96.95567322]
[97.02301025 89.64692688]
[108.21212769 79.65674591]
[109.26087952 64.11525726]
[120.75054932 54.14318848]
[135.56051636 55.23879242]
[146.74963379 45.24861526]
[157.93875122 35.25843811]
[158.30413818 16.29727745]
[172.19235229 3.85798240]
[190.44142151 5.51776028]
[201.37594604 -4.75044632]
[212.31047058 -15.01865292]
[223.24501038 -25.28685951]
[234.17953491 -35.55506516]
[230.18501282 -45.42119980]
[229.94073486 -56.33525848]
[233.67079163 -66.88476562]
[241.07261658 -75.63672638]
[251.33317566 -81.33171082]
[242.98004150 -93.79064178]
[234.62690735 -106.24958038]
[220.51536560 -113.40323639]
[219.85441589 -128.28317261]
[211.50128174 -140.74211121]
[203.14814758 -153.20104980]
[194.79501343 -165.65998840]
[186.44187927 -178.11892700]
[171.33937073 -175.91056824]
[156.77687073 -180.48182678]
[145.64578247 -190.92507935]
[140.15620422 -205.16682434]
[141.39805603 -220.37933350]
[149.12481689 -233.54216003]
[161.80229187 -242.04182434]
[176.91339111 -244.19068909]
[191.45776367 -239.56211853]
[202.54765320 -229.07510376]
[207.98110962 -214.81185913]
[206.67935181 -199.60435486]
[198.90081787 -186.47206116]
[207.25395203 -174.01312256]
[215.60708618 -161.55418396]
[223.96022034 -149.09524536]
[232.31335449 -136.63630676]
[245.82743835 -130.37379456]
[247.08584595 -114.60271454]
[255.43898010 -102.14378357]
[263.79211426 -89.68484497]
[278.19653320 -85.49997711]
[291.92514038 -91.54357147]
[295.26080322 -101.86285400]
[303.54519653 -108.51685333]
[313.90460205 -109.50599670]
[322.91070557 -104.74462891]
[336.78683472 -110.44131470]
[350.66299438 -116.13800049]
[364.53915405 -121.83468628]
[375.46929932 -136.66857910]
[392.76174927 -133.61639404]
[406.56521606 -139.48699951]
[420.36871338 -145.35760498]
[430.03988647 -157.87873840]
[444.78009033 -155.73974609]
[458.58358765 -161.61035156]
[445.78332520 -169.43043518]
[443.78839111 -184.29718018]
[454.07421875 -195.21514893]
[469.03341675 -194.10939026]
[477.60214233 -181.79772949]
[473.44296265 -167.38586426]
[487.58782959 -172.37815857]
[501.73266602 -177.37043762]
[512.17095947 -189.25961304]
[526.74780273 -186.19929504]
[540.89263916 -191.19158936]
[555.03753662 -196.18388367]
[569.18237305 -201.17617798]
[583.32720947 -206.16847229]
[597.47210693 -211.16076660]
[611.61694336 -216.15306091]
[625.66522217 -221.41107178]
[639.61187744 -226.93293762]
[653.55847168 -232.45480347]
[667.50512695 -237.97666931]
[681.45178223 -243.49855042]
[695.39843750 -249.02041626]
[709.34509277 -254.54228210]
[723.29174805 -260.06414795]
[737.23840332 -265.58602905]
[751.11456299 -271.28271484]
[764.91802979 -277.15332031]
[778.72149658 -283.02392578]
[792.52496338 -288.89453125]
[802.19616699 -301.41564941]
[816.93640137 -299.27667236]
[830.73986816 -305.14727783]
[832.94592285 -316.79849243]
[840.41656494 -325.85293579]
[851.21423340 -330.14343262]
[862.62432861 -328.71545410]
[871.83770752 -322.03677368]
[885.78436279 -327.55862427]
[895.54107666 -340.73962402]
[911.80163574 -338.61199951]
[917.83856201 -323.36444092]
[907.44158936 -310.68237305]
[891.30621338 -313.61196899]
[877.35955811 -308.09011841]
[871.09130859 -290.87115479]
[853.92260742 -283.60113525]
[836.61047363 -291.34378052]
[822.80700684 -285.47317505]
[814.12310791 -273.37194824]
[798.39556885 -275.09103394]
[784.59210205 -269.22042847]
[770.78863525 -263.34982300]
[756.98516846 -257.47921753]
[754.40722656 -253.48622131]
[749.30493164 -251.05661011]
[742.76025391 -251.63937378]
[728.81359863 -246.11750793]
[714.86694336 -240.59562683]
[700.92028809 -235.07376099]
[686.97363281 -229.55189514]
[673.02703857 -224.03002930]
[659.08038330 -218.50816345]
[645.13372803 -212.98629761]
[631.18707275 -207.46441650]
[629.46118164 -204.41712952]
[626.18621826 -202.04508972]
[621.69134521 -201.06161499]
[616.60925293 -202.00819397]
[602.46441650 -197.01589966]
[588.31951904 -192.02360535]
[574.17468262 -187.03131104]
[560.02984619 -182.03903198]
[545.88494873 -177.04673767]
[531.74011230 -172.05444336]
[522.31353760 -160.52235413]
[506.72497559 -163.22558594]
[492.58010864 -158.23329163]
[478.43524170 -153.24099731]
[464.45419312 -147.80686951]
[450.65069580 -141.93626404]
[441.96685791 -129.83503723]
[426.23931885 -131.55412292]
[412.43582153 -125.68351746]
[398.63235474 -119.81291199]
[393.82986450 -108.72788239]
[382.39895630 -103.71665192]
[370.23583984 -107.95852661]
[356.35968018 -102.26184082]
[342.48352051 -96.56515503]
[328.60739136 -90.86846924]
[317.90859985 -74.74438477]
[297.96875000 -77.81495667]
[284.24011230 -71.77135468]
[290.09649658 -61.62275696]
[291.98095703 -50.23033905]
[289.77032471 -39.06986618]
[283.86431885 -29.54490662]
[275.11947632 -22.81038475]
[264.72677612 -19.63287163]
[254.05020142 -20.30459404]
[244.44773865 -24.62053680]
[233.51321411 -14.35233021]
[222.57868958 -4.08412361]
[211.64414978 6.18408298]
[200.70962524 16.45228958]
[202.82980347 27.63245773]
[199.26368713 38.56464767]
[190.78411865 46.50782776]
[179.41058350 49.41227341]
[167.92893982 46.44755554]
[156.73982239 56.43773270]
[145.55070496 66.42790985]
[144.96789551 81.26691437]
[133.76286316 91.55776215]
[118.20230103 90.84586334]
[107.01318359 100.83604431]
[111.27922058 103.92592621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 33]
[4 32]
[5 31]
[6 30]
[7 29]
[8 27]
[9 26]
[10 25]
[12 23]
[13 22]
[14 21]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[39 63]
[48 57]
[49 56]
[50 55]
[69 248]
[70 247]
[73 244]
[74 243]
[75 242]
[78 237]
[79 236]
[80 235]
[81 234]
[82 233]
[87 116]
[88 115]
[89 114]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[117 225]
[118 224]
[122 222]
[123 221]
[124 220]
[125 219]
[127 216]
[128 215]
[129 214]
[131 212]
[132 211]
[138 210]
[139 209]
[140 208]
[142 206]
[143 205]
[144 204]
[145 203]
[146 202]
[147 201]
[148 200]
[149 196]
[150 195]
[151 194]
[152 193]
[153 192]
[154 191]
[155 190]
[156 189]
[157 188]
[158 185]
[159 184]
[160 183]
[161 182]
[163 180]
[164 179]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
