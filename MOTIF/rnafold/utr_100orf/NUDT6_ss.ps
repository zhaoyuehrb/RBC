%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUGGGCAACGGACGAAUUAAGCGGCGUGGAGAUGCGGCAGCCACUGAGCUGGGGCCGCUGGCGCGCGAUGCUUGCCCGAACCUACGGCCCCGGGCCUUCGGCGGGUUACCGCUGGGCCUCGGGCGCACAGG\
) } def
/len { sequence length } bind def

/coor [
[94.31063843 109.25830841]
[90.35584259 106.75498199]
[87.57613373 102.54750061]
[73.94487000 96.28742218]
[60.31360245 90.02734375]
[46.68233490 83.76727295]
[33.05106735 77.50719452]
[19.41979980 71.24711609]
[5.78853321 64.98703766]
[-7.84273338 58.72696304]
[-0.67621702 71.90425110]
[0.19732960 86.87879944]
[-5.38838434 100.79999542]
[-16.37004852 111.01777649]
[-30.65716362 115.58705902]
[-45.52999878 113.63802338]
[-58.15732574 105.54167938]
[-66.13536835 92.83928680]
[-67.94541168 77.94889832]
[-63.24288559 63.70508194]
[-52.92298126 52.81933212]
[-38.95021820 47.36388779]
[-23.98488998 48.37714005]
[-35.36259460 38.60227966]
[-46.74029541 28.82742310]
[-58.11800003 19.05256462]
[-69.72007751 9.54509926]
[-81.54023743 0.31017718]
[-93.36039734 -8.92474461]
[-105.18055725 -18.15966797]
[-117.00071716 -27.39458847]
[-128.55819702 -22.36336899]
[-141.08453369 -22.75836372]
[-152.17297363 -28.44159698]
[-159.71957397 -38.26499939]
[-162.32238770 -50.30178833]
[-159.54153442 -62.22422791]
[-170.91925049 -71.99908447]
[-182.29695129 -81.77394867]
[-193.67465210 -91.54880524]
[-205.05235291 -101.32366180]
[-218.00903320 -101.14056396]
[-227.29400635 -109.59279633]
[-228.26060486 -121.70816803]
[-239.40777588 -131.74511719]
[-250.55494690 -141.78208923]
[-266.32247925 -140.70477295]
[-278.17849731 -151.15513611]
[-279.08905029 -166.93316650]
[-268.51391602 -178.67803955]
[-252.72714233 -179.42173767]
[-241.09472656 -168.72302246]
[-240.51799011 -152.92926025]
[-229.37081909 -142.89230347]
[-218.22364807 -132.85533142]
[-200.91851807 -130.18557739]
[-195.27749634 -112.70137024]
[-183.89979553 -102.92650604]
[-172.52209473 -93.15164948]
[-161.14437866 -83.37679291]
[-149.76667786 -73.60193634]
[-132.87292480 -78.49179077]
[-116.25548553 -72.27214813]
[-106.55480957 -57.22946548]
[-107.76580048 -39.21475220]
[-95.94563293 -29.97982788]
[-84.12547302 -20.74490547]
[-72.30531311 -11.50998402]
[-60.48515320 -2.27506208]
[-55.63485336 -1.97545314]
[-50.94534302 1.43563783]
[-48.34314346 7.67486000]
[-36.96543884 17.44971848]
[-25.58773422 27.22457695]
[-14.21003056 36.99943542]
[-1.58265662 45.09569550]
[12.04861069 51.35577393]
[25.67987633 57.61584854]
[39.31114578 63.87592697]
[52.94240952 70.13600159]
[66.57367706 76.39608002]
[80.20494843 82.65615845]
[93.83621216 88.91622925]
[107.67765045 94.69676971]
[121.71239471 99.99073029]
[135.74713135 105.28469086]
[147.35159302 98.33998108]
[160.64100647 99.36161804]
[170.74720764 107.74927521]
[174.09880066 120.24594879]
[188.00656128 125.86505127]
[201.97875977 131.32194519]
[216.01350403 136.61590576]
[230.04824829 141.90986633]
[244.08299255 147.20382690]
[258.17837524 152.33412170]
[272.33248901 157.30007935]
[286.48663330 162.26602173]
[300.64074707 167.23197937]
[307.34518433 166.36593628]
[312.64404297 168.72163391]
[315.32864380 172.77230835]
[329.23641968 178.39140320]
[343.14416504 184.01049805]
[357.05191040 189.62960815]
[370.95968628 195.24870300]
[384.86743164 200.86779785]
[401.02285767 198.05090332]
[411.33102417 210.80526733]
[405.18777466 226.01028442]
[388.91278076 228.02435303]
[379.24835205 214.77555847]
[365.34057617 209.15646362]
[351.43283081 203.53736877]
[337.52505493 197.91825867]
[323.61730957 192.29916382]
[309.70956421 186.68006897]
[295.67480469 181.38610840]
[281.52069092 176.42015076]
[267.36654663 171.45420837]
[253.21241760 166.48825073]
[245.79145813 167.24916077]
[238.78903198 161.23857117]
[224.75428772 155.94461060]
[210.71954346 150.65065002]
[196.68479919 145.35668945]
[189.24813843 145.94471741]
[182.38746643 139.77281189]
[168.47970581 134.15370178]
[153.34286499 141.38722229]
[137.32722473 135.35789490]
[130.45317078 119.31943512]
[116.41843414 114.02547455]
[102.38368988 108.73151398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 83]
[4 82]
[5 81]
[6 80]
[7 79]
[8 78]
[9 77]
[10 76]
[23 75]
[24 74]
[25 73]
[26 72]
[27 69]
[28 68]
[29 67]
[30 66]
[31 65]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[44 55]
[45 54]
[46 53]
[84 134]
[85 133]
[86 132]
[90 129]
[91 128]
[92 126]
[93 125]
[94 124]
[95 123]
[96 121]
[97 120]
[98 119]
[99 118]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
