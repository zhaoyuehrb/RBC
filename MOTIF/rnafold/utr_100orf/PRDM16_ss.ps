%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACAAUGCUGGGGAGAUGAAGAUAGUGUGUGGCUGCUUCUGGACUCAAGGAGGAGGAGAGAGAUUCCGCGAGCCGACACCAUGCGAUCCAAGGCGAGGGCGAGGAAGCUAGCCAAAAGUGACGGUGACGUUGUAAAUAAUAUGUAUGAGCCCAACCGGGACCUGCUGGCCAGCCACAGCG\
) } def
/len { sequence length } bind def

/coor [
[104.11550140 435.46112061]
[94.92256927 447.76498413]
[80.80298615 453.80926514]
[65.55486298 451.96801758]
[53.27985382 442.73654175]
[47.27988434 428.59808350]
[49.16891479 413.35580444]
[58.43880081 401.10980225]
[72.59599304 395.15417480]
[74.39421082 380.26235962]
[76.19242859 365.37054443]
[77.99064636 350.47869873]
[71.83490753 336.91567993]
[81.17079163 324.14257812]
[82.96900940 309.25076294]
[69.91926575 301.99584961]
[60.61612701 290.26568604]
[56.50164413 275.82836914]
[58.23274612 260.87542725]
[65.57657623 247.68899536]
[77.44125366 238.29365540]
[92.03811646 234.14550781]
[93.83634186 219.25367737]
[91.51094818 212.21861267]
[95.79537964 204.12246704]
[97.84896851 189.26370239]
[99.90255737 174.40495300]
[97.69828033 167.33100891]
[102.12105560 159.30958557]
[104.42941284 144.48828125]
[67.94256592 116.95580292]
[78.66653442 82.14007568]
[70.18636322 69.76725769]
[61.70619202 57.39443207]
[53.22602081 45.02161026]
[44.74585342 32.64878845]
[36.15979385 20.34921265]
[27.46847534 8.12378883]
[18.77715874 -4.10163641]
[10.08584309 -16.32706261]
[1.39452648 -28.55248642]
[-7.29679012 -40.77791214]
[-18.64834976 -50.58311844]
[-32.00759888 -57.40444565]
[-41.09863281 -58.52560425]
[-45.53612518 -64.45925903]
[-58.77630997 -71.50891113]
[-72.01648712 -78.55855560]
[-86.96365356 -74.17447662]
[-100.29064941 -81.51243591]
[-104.37808990 -95.78928375]
[-117.61827087 -102.83893585]
[-130.85845947 -109.88858795]
[-144.09863281 -116.93824005]
[-156.71023560 -108.26609802]
[-171.90878296 -106.45970917]
[-186.20173645 -111.93418121]
[-196.30470276 -123.43151093]
[-199.89608765 -138.30970764]
[-196.15061951 -153.14985657]
[-185.92897034 -164.54180908]
[-171.58001709 -169.86776733]
[-156.40103149 -167.90388489]
[-143.88002014 -159.10142517]
[-136.89425659 -145.48315430]
[-137.04898071 -130.17842102]
[-123.80879974 -123.12876892]
[-110.56861877 -116.07911682]
[-97.32843781 -109.02947235]
[-83.20147705 -113.60817719]
[-69.67362213 -106.64743805]
[-64.96684265 -91.79874420]
[-51.72665787 -84.74909210]
[-38.48647690 -77.69944000]
[-25.18626976 -70.76369476]
[-11.82702255 -63.94236755]
[-5.49870634 -67.96759033]
[-13.54893875 -80.62435150]
[-0.89203864 -88.67437744]
[7.15792704 -76.01802826]
[13.48624420 -80.04325104]
[12.97132969 -95.03440857]
[4.76486301 -108.56084442]
[12.06070614 -121.54621887]
[11.54579258 -136.53738403]
[11.03087807 -151.52853394]
[-1.90327621 -160.10101318]
[-7.29689980 -174.65052795]
[-3.07603407 -189.58250427]
[9.13631153 -199.15528870]
[24.64424133 -199.68795776]
[37.48464203 -190.97567749]
[42.72011185 -176.36849976]
[38.33751297 -161.48320007]
[26.02203751 -152.04345703]
[26.53695107 -137.05229187]
[27.05186653 -122.06113434]
[35.22150421 -109.60696411]
[27.96249008 -95.54932404]
[28.47740364 -80.55816650]
[27.02791405 -70.41824341]
[23.30758858 -61.87725067]
[17.92204475 -55.38936615]
[11.55685043 -51.22697067]
[4.92863512 -49.46922684]
[13.61995125 -37.24380493]
[22.31126785 -25.01837730]
[31.00258446 -12.79295349]
[39.69390106 -0.56752801]
[48.38521576 11.65789700]
[54.83951950 15.29678726]
[57.11867523 24.16861916]
[65.59884644 36.54144287]
[74.07901001 48.91426468]
[82.55918121 61.28708649]
[91.03935242 73.65990448]
[97.98252869 69.42967987]
[106.51818085 67.19009399]
[116.03889465 67.47412872]
[125.77242279 70.62309265]
[134.84274292 76.73872375]
[142.34426880 85.65466309]
[156.51161194 80.72653198]
[170.67895508 75.79839325]
[184.84629822 70.87025452]
[195.15077209 58.11292267]
[211.30699158 60.92515945]
[216.69480896 76.41397858]
[205.77169800 88.64581299]
[189.77442932 85.03759766]
[175.60708618 89.96572876]
[161.43974304 94.89386749]
[147.27241516 99.82200623]
[146.05467224 107.22248077]
[160.85562134 109.65797424]
[175.65658569 112.09346771]
[190.45753479 114.52896118]
[205.25849915 116.96445465]
[220.05946350 119.39994049]
[234.86041260 121.83543396]
[249.66137695 124.27092743]
[264.46228027 126.70666504]
[262.02630615 141.50753784]
[247.22589111 139.07188416]
[232.42492676 136.63639832]
[217.62396240 134.20089722]
[202.82301331 131.76541138]
[188.02204895 129.32991028]
[173.22108459 126.89442444]
[158.42013550 124.45893097]
[143.61917114 122.02344513]
[142.40142822 129.42391968]
[154.24269104 138.63175964]
[166.08396912 147.83959961]
[182.39393616 149.54753113]
[188.82174683 164.63446045]
[178.75503540 177.58023071]
[162.54956055 175.06736755]
[156.87612915 159.68087769]
[145.03485107 150.47303772]
[133.19358826 141.26518250]
[119.25073242 146.79663086]
[116.94237518 161.61795044]
[114.76132202 176.45854187]
[112.70772552 191.31729126]
[110.65413666 206.17605591]
[108.72816467 221.05189514]
[106.92994690 235.94372559]
[120.11985779 243.44717407]
[129.40710449 255.39665222]
[133.40104675 269.95214844]
[131.52308655 284.88735962]
[124.09030151 297.93032837]
[112.26239014 307.10888672]
[97.86083221 311.04898071]
[96.06261444 325.94079590]
[102.08973694 340.56900024]
[92.88247681 352.27691650]
[91.08425903 367.16876221]
[89.28604126 382.06057739]
[87.48781586 396.95239258]
[99.82045746 406.10671997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 181]
[10 180]
[11 179]
[12 178]
[14 176]
[15 175]
[22 168]
[23 167]
[25 166]
[26 165]
[27 164]
[29 163]
[30 162]
[32 116]
[33 115]
[34 114]
[35 113]
[36 112]
[37 110]
[38 109]
[39 108]
[40 107]
[41 106]
[42 105]
[43 76]
[44 75]
[46 74]
[47 73]
[48 72]
[51 69]
[52 68]
[53 67]
[54 66]
[81 100]
[82 99]
[84 97]
[85 96]
[86 95]
[122 133]
[123 132]
[124 131]
[125 130]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
