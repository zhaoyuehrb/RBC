%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGACGGUGGGCGGGGCCACGCCGUGACGCAUCCGUGCGUCUGUGGAAGGCUGCGUUUCCGGCCUGAGAAACCGUCAUGUUUCUGGGGAGUCACCUCAGCUGGCAGUUACCACCGUGUUAGAAAGCAGCCUCAGGACCGGCCACCUCCAUCACUGGCGUCACCAUGGGGGCUGUGCUGGGUGUCUUCUCCCUCGCCAGCUGGGUUCCAUGCCUCUGCAGCGGUGCCUCAUGUUUGCUGUGUAGUUGCUGUCCU\
AACAGUAAGA\
) } def
/len { sequence length } bind def

/coor [
[206.13282776 387.61288452]
[219.05134583 374.37139893]
[214.51728821 360.07305908]
[209.98324585 345.77471924]
[205.44920349 331.47637939]
[200.91514587 317.17803955]
[196.38110352 302.87969971]
[214.66827393 264.29257202]
[205.45507812 252.45545959]
[196.24188232 240.61836243]
[182.31881714 235.32710266]
[179.94839478 219.68447876]
[170.73519897 207.84736633]
[161.52201843 196.01026917]
[152.30882263 184.17315674]
[143.09562683 172.33604431]
[133.88244629 160.49893188]
[124.66925049 148.66183472]
[109.70088196 147.68815613]
[99.03182983 158.23193359]
[88.36278534 168.77571106]
[77.69373322 179.31950378]
[67.02468109 189.86328125]
[66.03759003 194.01409912]
[64.00040436 197.31747437]
[61.30237579 199.54954529]
[58.36540604 200.63359070]
[55.59397125 200.63815308]
[44.43889999 210.66633606]
[33.28382874 220.69450378]
[22.12875557 230.72268677]
[10.97368431 240.75086975]
[-0.18138786 250.77905273]
[-4.74404526 266.53070068]
[-20.72927856 270.19189453]
[-31.69285202 257.99630737]
[-26.35637856 242.48971558]
[-10.20956707 239.62397766]
[0.94550478 229.59579468]
[12.10057640 219.56761169]
[23.25564766 209.53944397]
[34.41072083 199.51126099]
[45.56579208 189.48307800]
[56.48089600 179.19422913]
[67.14994812 168.65045166]
[77.81900024 158.10665894]
[88.48805237 147.56288147]
[99.15710449 137.01910400]
[95.66564941 130.38134766]
[85.19127655 110.46809387]
[70.45829773 113.28577423]
[55.72532272 116.10345459]
[40.99234009 118.92113495]
[26.25936317 121.73881531]
[11.52638340 124.55649567]
[2.85770774 137.77124023]
[-12.63298798 140.90396118]
[-25.75534821 132.09605408]
[-28.72411156 116.57310486]
[-19.77795982 103.54460144]
[-4.22448969 100.74011993]
[8.70870304 109.82351685]
[23.44168282 107.00583649]
[38.17465973 104.18815613]
[52.90764236 101.37047577]
[67.64061737 98.55279541]
[82.37359619 95.73511505]
[82.90497589 80.74386597]
[83.43632507 65.75394440]
[68.93981934 61.90018845]
[54.44331741 58.04642868]
[39.94681931 54.19267273]
[25.45031738 50.33891296]
[10.95381546 46.48515701]
[-2.59005642 54.63003540]
[-17.90592384 50.73135376]
[-25.90715599 37.10212708]
[-21.84676170 21.82833290]
[-8.13370323 13.97164536]
[7.09630728 18.19329453]
[14.80757332 31.98865318]
[29.30407524 35.84241104]
[43.80057526 39.69617081]
[58.29707718 43.54992676]
[72.79357910 47.40368652]
[87.29007721 51.25744247]
[99.79891205 42.97920990]
[101.91769409 28.12960434]
[104.03646851 13.27999973]
[106.15525055 -1.56960511]
[108.27403259 -16.41921043]
[110.39280701 -31.26881599]
[104.68238831 -46.02353287]
[114.13986206 -57.53028488]
[116.25864410 -72.37989044]
[118.37742615 -87.22949982]
[120.49620819 -102.07910156]
[118.61399841 -110.98235321]
[122.72869873 -117.09116364]
[125.02270508 -131.91471863]
[127.31671906 -146.73825073]
[129.61073303 -161.56179810]
[126.44585419 -176.22412109]
[118.24163055 -188.78161621]
[110.03741455 -201.33911133]
[94.51999664 -204.33670044]
[85.73647308 -217.47538757]
[88.89794159 -232.96023560]
[102.12876129 -241.60437012]
[117.57932281 -238.27935791]
[126.08308411 -224.95788574]
[122.59490967 -209.54333496]
[130.79913330 -196.98583984]
[139.00335693 -184.42834473]
[146.48452759 -184.95936584]
[145.30503845 -199.91293335]
[144.12553406 -214.86648560]
[142.94604492 -229.82003784]
[134.77140808 -242.39682007]
[141.45494080 -255.82553101]
[156.41734314 -256.88687134]
[164.92953491 -244.53605652]
[158.61323547 -230.93212891]
[159.55778503 -215.96189880]
[160.50233459 -200.99165344]
[161.44688416 -186.02142334]
[168.92805481 -186.55245972]
[175.27626038 -200.14291382]
[181.62445068 -213.73336792]
[187.97264099 -227.32382202]
[194.32083130 -240.91427612]
[200.66902161 -254.50473022]
[207.01721191 -268.09518433]
[213.36540222 -281.68563843]
[210.74774170 -301.69537354]
[227.12124634 -312.01721191]
[233.14668274 -325.75381470]
[224.17118835 -338.13879395]
[222.61026001 -353.25369263]
[228.78349304 -367.02893066]
[240.94161987 -375.80596924]
[255.76077271 -377.30874634]
[261.78619385 -391.04534912]
[267.81164551 -404.78195190]
[273.83706665 -418.51855469]
[264.67645264 -430.84652710]
[262.92306519 -446.10498047]
[269.04855347 -460.18951416]
[281.40518188 -469.31143188]
[296.66906738 -471.01699829]
[310.73434448 -464.84741211]
[319.81747437 -452.46224976]
[321.47518921 -437.19308472]
[315.26153564 -423.14721680]
[302.84796143 -414.10293579]
[287.57366943 -412.49310303]
[281.54824829 -398.75650024]
[275.52279663 -385.01989746]
[269.49737549 -371.28332520]
[278.42846680 -359.36270142]
[280.20547485 -344.47317505]
[274.25173950 -330.60165405]
[262.07415771 -321.51300049]
[246.88328552 -319.72839355]
[240.85784912 -305.99179077]
[245.40019226 -296.88452148]
[244.17178345 -286.56103516]
[237.33721924 -278.43844604]
[226.95585632 -275.33743286]
[220.60766602 -261.74697876]
[214.25947571 -248.15653992]
[207.91128540 -234.56608582]
[201.56309509 -220.97563171]
[195.21490479 -207.38517761]
[188.86671448 -193.79472351]
[182.51850891 -180.20426941]
[144.43426514 -159.26779175]
[142.14025879 -144.44424438]
[139.84625244 -129.62069702]
[137.55224609 -114.79715729]
[135.34580994 -99.96031952]
[133.22703552 -85.11071777]
[131.10824585 -70.26110840]
[128.98947144 -55.41150665]
[134.85144043 -41.71893311]
[125.24241638 -29.15003586]
[123.12363434 -14.30043030]
[121.00485229 0.54917490]
[118.88607788 15.39877987]
[116.76729584 30.24838448]
[114.64851379 45.09799194]
[136.50636292 139.44863892]
[145.71954346 151.28575134]
[154.93273926 163.12286377]
[164.14593506 174.95996094]
[173.35911560 186.79707336]
[182.57231140 198.63418579]
[191.78550720 210.47128296]
[206.36755371 216.60920715]
[208.07899475 231.40516663]
[217.29219055 243.24227905]
[226.50537109 255.07937622]
[238.45046997 264.15213013]
[252.32554626 269.85144043]
[266.20062256 275.55075073]
[280.07571411 281.25006104]
[295.78076172 279.33645630]
[304.61373901 291.32925415]
[318.48883057 297.02856445]
[336.69387817 294.16012573]
[346.84512329 308.49261475]
[360.78656006 314.02764893]
[374.72796631 319.56268311]
[390.86608887 316.64834595]
[401.25103760 329.34024048]
[395.19970703 344.58206177]
[378.93716431 346.69433594]
[369.19293213 333.50411987]
[355.25149536 327.96908569]
[341.31008911 322.43402100]
[330.10513306 326.93579102]
[318.45788574 322.46502686]
[312.78952026 310.90365601]
[298.91442871 305.20434570]
[284.20181274 307.52560425]
[274.37640381 295.12515259]
[260.50131226 289.42584229]
[246.62623596 283.72653198]
[232.75115967 278.02722168]
[227.23323059 283.10681152]
[230.51374817 297.74371338]
[216.19737244 293.26605225]
[210.67944336 298.34567261]
[215.21348572 312.64398193]
[219.74754333 326.94232178]
[224.28158569 341.24066162]
[228.81562805 355.53900146]
[233.34968567 369.83734131]
[245.26643372 370.88595581]
[256.10638428 375.86380005]
[264.61846924 384.17077637]
[269.82879639 394.82412720]
[271.15219116 406.57452393]
[268.45779419 418.05270386]
[262.08160400 427.92889404]
[252.78472900 435.06701660]
[256.80941772 449.51699829]
[260.83410645 463.96697998]
[264.85882568 478.41693115]
[268.88351440 492.86691284]
[272.90820312 507.31689453]
[276.93289185 521.76684570]
[289.01486206 532.85552979]
[285.18914795 548.80218506]
[269.39132690 553.20227051]
[257.87283325 541.52941895]
[262.48294067 525.79156494]
[258.45822144 511.34158325]
[254.43353271 496.89160156]
[250.40884399 482.44165039]
[246.38414001 467.99166870]
[242.35945129 453.54168701]
[238.33474731 439.09170532]
[220.56555176 435.35748291]
[207.11000061 423.03881836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 238]
[3 237]
[4 236]
[5 235]
[6 234]
[7 233]
[8 202]
[9 201]
[10 200]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[87 191]
[88 190]
[89 189]
[90 188]
[91 187]
[92 186]
[94 184]
[95 183]
[96 182]
[97 181]
[99 180]
[100 179]
[101 178]
[102 177]
[103 114]
[104 113]
[105 112]
[127 176]
[128 175]
[129 174]
[130 173]
[131 172]
[132 171]
[133 170]
[134 169]
[136 165]
[137 164]
[142 159]
[143 158]
[144 157]
[145 156]
[203 229]
[204 228]
[205 227]
[206 226]
[208 224]
[209 223]
[211 220]
[212 219]
[213 218]
[246 263]
[247 262]
[248 261]
[249 260]
[250 259]
[251 258]
[252 257]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
