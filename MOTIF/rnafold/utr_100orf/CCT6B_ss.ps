%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCUGUAAGGGCGAUGAUUGGCCGAGGCUCAAGAGAGCGUGGCGUCGCAUUGCCGUUUUUGCUCAGAAUCGCGACUAAGGCUUUUUUUUUUUCUCCCUCUGAACGGUUAGGCUAUGGCUGCGAUAAAGGCCGUCAACUCCAAGGCUGAGGUGGCGCGGGCCCGGGCAGCUUUGGCUGUCAAUAUAUGCGCCGCCCGAGGGCUGCAGGAUGUGC\
) } def
/len { sequence length } bind def

/coor [
[30.55092812 315.41256714]
[30.11666679 300.41885376]
[22.01414680 287.92089844]
[29.34867859 273.90252686]
[28.91441727 258.90881348]
[28.48015594 243.91510010]
[28.04589653 228.92138672]
[27.61163521 213.92767334]
[27.17737389 198.93395996]
[26.74311256 183.94024658]
[20.13350868 180.39579773]
[6.91429853 173.30690002]
[0.30469358 169.76243591]
[-12.42497063 177.69689941]
[-25.15463448 185.63136292]
[-37.88429642 193.56582642]
[-50.61396027 201.50028992]
[-63.34362411 209.43473816]
[-76.07328796 217.36920166]
[-75.65933228 232.65893555]
[-82.90622711 246.01481628]
[-95.77970123 253.89770508]
[-110.77012634 254.27595520]
[-123.84908295 247.14808655]
[-136.57875061 255.08255005]
[-149.30841064 263.01699829]
[-162.03807068 270.95147705]
[-165.70715332 283.31369019]
[-176.46934509 289.66091919]
[-188.28039551 287.06140137]
[-201.12358093 294.81076050]
[-213.96678162 302.56008911]
[-226.80998230 310.30944824]
[-234.25585938 324.92077637]
[-250.64448547 325.50778198]
[-259.11666870 311.46661377]
[-250.95692444 297.24160767]
[-234.55932617 297.46624756]
[-221.71612549 289.71688843]
[-208.87292480 281.96755981]
[-196.02973938 274.21820068]
[-188.38772583 258.41842651]
[-169.97253418 258.22180176]
[-157.24287415 250.28733826]
[-144.51319885 242.35287476]
[-131.78353882 234.41842651]
[-132.42308044 219.53700256]
[-125.48178864 206.24510193]
[-112.73509216 198.15882874]
[-97.55263519 197.53437805]
[-84.00775146 204.63954163]
[-71.27808380 196.70507812]
[-58.54842377 188.77061462]
[-45.81875992 180.83616638]
[-33.08909607 172.90170288]
[-20.35943031 164.96723938]
[-7.62976646 157.03277588]
[-0.38715097 152.39830017]
[7.18218517 149.68780518]
[14.62074566 148.83123779]
[21.51452255 149.65736389]
[27.51413918 151.90869141]
[32.35171127 155.26065063]
[35.85266876 159.34370422]
[45.94865799 148.24996948]
[56.04465103 137.15623474]
[66.14064026 126.06250000]
[58.22993469 108.99842834]
[58.41287613 90.19075775]
[66.65401459 73.28379822]
[81.35649872 61.55354309]
[77.28227997 47.11745071]
[73.20806122 32.68136215]
[69.13384247 18.24526978]
[65.05962372 3.80917740]
[60.98540115 -10.62691402]
[49.79064941 -21.80672073]
[53.78015900 -36.15708923]
[49.70594025 -50.59318161]
[45.63172150 -65.02927399]
[34.43696976 -76.20907593]
[38.42647934 -90.55944824]
[34.35226059 -104.99553680]
[30.27804184 -119.43162537]
[26.20382309 -133.86772156]
[22.12960243 -148.30381775]
[8.98940563 -149.64877319]
[-2.88356352 -155.36401367]
[-12.08638477 -164.75012207]
[-17.53983879 -176.67539978]
[-18.61494637 -189.71228027]
[-15.20543957 -202.30821228]
[-7.73782873 -212.97050476]
[2.88181877 -220.44329834]
[-0.77275753 -234.99128723]
[-4.42733383 -249.53927612]
[-18.57249451 -256.20623779]
[-25.07589340 -270.42733765]
[-20.86682701 -285.48782349]
[-7.93268490 -294.27655029]
[7.61942482 -292.64379883]
[18.44627190 -281.36047363]
[19.43574905 -265.75424194]
[10.12065792 -253.19384766]
[13.77523422 -238.64585876]
[17.42981148 -224.09786987]
[34.07454300 -221.17544556]
[47.81101990 -211.23706055]
[55.84564590 -196.24412537]
[56.51832962 -179.19190979]
[49.64527130 -163.51119995]
[36.56569290 -152.37803650]
[40.63991547 -137.94194031]
[44.71413422 -123.50584412]
[48.78835297 -109.06975555]
[52.86257172 -94.63366699]
[63.76591110 -84.48642731]
[60.06781387 -69.10349274]
[64.14202881 -54.66740036]
[68.21625519 -40.23130798]
[79.11959076 -30.08406639]
[75.42149353 -14.70113373]
[79.49571228 -0.26504189]
[83.56993103 14.17104912]
[87.64414978 28.60714149]
[91.71836853 43.04323196]
[95.79258728 57.47932434]
[104.68796539 57.52962112]
[113.38014984 59.42067337]
[121.49241638 63.07052231]
[128.67314148 68.32097626]
[140.53479004 59.13938522]
[152.39642334 49.95779419]
[164.25805664 40.77620316]
[161.52444458 25.71678925]
[166.11347961 11.11544132]
[176.97062683 0.32744372]
[191.60099792 -4.16820145]
[206.64263916 -1.33842731]
[218.63909912 8.16650486]
[224.83366394 22.16242981]
[223.80287170 37.43318939]
[215.78359985 50.46967316]
[202.61862183 58.27619171]
[187.33312988 59.05886459]
[173.43965149 52.63784027]
[161.57800293 61.81943130]
[149.71636963 71.00102234]
[137.85473633 80.18260956]
[141.21514893 88.72959900]
[142.67150879 97.79725647]
[142.15655518 106.96667480]
[156.29678345 111.97206879]
[170.43701172 116.97746277]
[184.57723999 121.98286438]
[198.71746826 126.98825836]
[212.85769653 131.99365234]
[226.99792480 136.99905396]
[241.13815308 142.00445557]
[255.27836609 147.00984192]
[265.47994995 135.77581787]
[279.16848755 129.32080078]
[294.24478149 128.60029602]
[308.40994263 133.69299316]
[319.51599121 143.79351807]
[325.89144897 157.33969116]
[326.59301758 172.25401306]
[340.73324585 177.25939941]
[354.87347412 182.26480103]
[369.01370239 187.27020264]
[383.15393066 192.27560425]
[397.29415894 197.28099060]
[413.31088257 193.76016235]
[424.16705322 206.05143738]
[418.69479370 221.51060486]
[402.52346802 224.23461914]
[392.28875732 211.42121887]
[378.14852905 206.41581726]
[364.00830078 201.41043091]
[349.86807251 196.40502930]
[335.72784424 191.39962769]
[321.58761597 186.39424133]
[311.65921021 197.54573059]
[298.18124390 204.06411743]
[283.19393921 204.92805481]
[268.97943115 199.97482300]
[257.71395874 189.92977905]
[251.13493347 176.30041504]
[250.27297974 161.15007019]
[236.13275146 156.14468384]
[221.99252319 151.13928223]
[207.85229492 146.13388062]
[193.71206665 141.12849426]
[179.57183838 136.12309265]
[165.43161011 131.11769104]
[151.29139709 126.11229706]
[137.15116882 121.10689545]
[125.86288452 134.01206970]
[110.41026306 141.44076538]
[93.28141785 142.19680786]
[77.23437500 136.15849304]
[67.13838959 147.25222778]
[57.04239655 158.34596252]
[46.94640350 169.43969727]
[41.73682404 183.50598145]
[42.17108536 198.49969482]
[42.60534668 213.49340820]
[43.03960800 228.48712158]
[43.47386932 243.48083496]
[43.90813065 258.47454834]
[44.34239197 273.46826172]
[52.47597122 287.03863525]
[45.11037827 299.98458862]
[45.54463959 314.97830200]
[52.04700089 330.63574219]
[38.80148315 341.21841431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[4 211]
[5 210]
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[13 57]
[14 56]
[15 55]
[16 54]
[17 53]
[18 52]
[19 51]
[24 46]
[25 45]
[26 44]
[27 43]
[30 41]
[31 40]
[32 39]
[33 38]
[64 204]
[65 203]
[66 202]
[67 201]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[78 120]
[79 119]
[80 118]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[94 106]
[95 105]
[96 104]
[131 149]
[132 148]
[133 147]
[134 146]
[152 197]
[153 196]
[154 195]
[155 194]
[156 193]
[157 192]
[158 191]
[159 190]
[160 189]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
