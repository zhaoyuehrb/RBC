%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACAGGAGCCCUCAAGCUGAUCUGGUCGGGACCGGAUACAUUAUUAACCCCAGUGCAGUAGGGUCCCCAGGGGCAACCUGCCCCACAGCGCCCAAGAUGCCUAGCAGAACUGCCCGCUAUGCCCGCUACAGCCCACGGCAGCGGCGGCGGCGGAUGCUGGCUGAUCGCAGCGUGCGUUUCCCUAAUGAUGUCCUGU\
) } def
/len { sequence length } bind def

/coor [
[104.74726868 225.93884277]
[91.53120422 215.31941223]
[98.07704163 199.68009949]
[98.55296326 184.68765259]
[99.02888489 169.69520569]
[99.50479889 154.70275879]
[99.98072052 139.71031189]
[79.60737610 134.05789185]
[65.02928162 118.75471497]
[51.19396591 124.54988861]
[37.35865021 130.34506226]
[23.52333641 136.14024353]
[9.68802261 141.93542480]
[6.51619911 146.10789490]
[2.46410942 148.40927124]
[-1.60525584 148.81813049]
[-4.94616032 147.65979004]
[-19.04154968 152.79008484]
[-33.13694000 157.92039490]
[-47.23233032 163.05068970]
[-53.96788788 177.09597778]
[-68.33570099 182.09803772]
[-81.68421936 175.59014893]
[-95.77960968 180.72045898]
[-109.87500000 185.85075378]
[-123.97039032 190.98106384]
[-128.51734924 195.80445862]
[-133.99591064 197.36499023]
[-138.59519958 196.04275513]
[-152.84626770 200.72326660]
[-152.78001404 215.85107422]
[-157.39369202 230.25833130]
[-166.23529053 242.53356934]
[-178.43859863 251.47416687]
[-192.80807495 256.20422363]
[-207.93592834 256.26034546]
[-222.34010315 251.63702393]
[-234.60940552 242.78720093]
[-243.54182434 230.57789612]
[-248.26225281 216.20526123]
[-248.30822754 201.07736206]
[-243.67526245 186.67630005]
[-234.81721497 174.41293335]
[-222.60192871 165.48869324]
[-208.22613525 160.77789307]
[-193.09822083 160.74205017]
[-178.70025635 165.38467407]
[-166.44282532 174.25093079]
[-157.52676392 186.47219849]
[-143.27571106 181.79168701]
[-129.10069275 176.88566589]
[-115.00530243 171.75537109]
[-100.90991211 166.62506104]
[-86.81452179 161.49476624]
[-80.77214813 147.92916870]
[-66.55049896 142.52552795]
[-52.36262894 148.95530701]
[-38.26724243 143.82499695]
[-24.17185211 138.69470215]
[-10.07646275 133.56439209]
[3.89284539 128.10011292]
[17.72815895 122.30493164]
[31.56347466 116.50975037]
[45.39878845 110.71457672]
[59.23410416 104.91940308]
[61.11771393 97.65978241]
[46.14496613 98.56361389]
[40.65856934 84.60297394]
[52.24055099 75.07103729]
[64.88493347 83.14055634]
[66.76853943 75.88093567]
[57.49615860 64.09014130]
[48.22377396 52.29934692]
[38.95138931 40.50854874]
[29.67900276 28.71775436]
[20.40661812 16.92695618]
[5.86277294 8.21415710]
[10.20893574 -8.17325306]
[27.15905762 -8.53342628]
[32.19741440 7.65457249]
[41.46979904 19.44536781]
[50.74218369 31.23616600]
[60.01456833 43.02696228]
[69.28695679 54.81775665]
[78.55934143 66.60855103]
[99.36394501 60.31574249]
[120.36670685 65.92659760]
[135.26652527 81.76197052]
[139.59111023 103.07460022]
[152.46086121 95.36943817]
[165.33061218 87.66427612]
[178.20036316 79.95912170]
[178.39968872 66.17079926]
[185.33343506 54.37648010]
[197.09684753 47.60493851]
[210.56156921 47.53351974]
[222.20732117 54.07387543]
[235.19770813 46.57387543]
[248.18809509 39.07387543]
[261.05783081 31.36871338]
[273.80371094 23.46033096]
[286.54959106 15.55194950]
[292.19937134 8.36044788]
[299.56103516 7.62106276]
[312.43078613 -0.08409803]
[325.30053711 -7.78925896]
[338.17028809 -15.49442005]
[340.20785522 -26.19254303]
[347.64804077 -33.84157944]
[357.85653687 -36.08000183]
[367.40444946 -32.40349579]
[380.51220703 -39.69644928]
[393.61993408 -46.98939896]
[406.72769165 -54.28234863]
[419.83541870 -61.57530212]
[425.82098389 -68.48983002]
[433.20950317 -68.87809753]
[446.43130493 -75.96215820]
[459.65307617 -83.04622650]
[463.46731567 -88.46762085]
[468.66802979 -90.79195404]
[473.40869141 -90.13773346]
[486.84860229 -96.79872894]
[500.28851318 -103.45973206]
[506.59628296 -110.08161926]
[513.99493408 -110.11788940]
[527.53881836 -116.56481171]
[541.08270264 -123.01173401]
[544.05236816 -127.33040619]
[547.99041748 -129.82197571]
[552.03570557 -130.42401123]
[555.42791748 -129.42593384]
[569.26324463 -135.22111511]
[583.09857178 -141.01629639]
[595.37188721 -152.71252441]
[610.00860596 -144.15669250]
[605.83898926 -127.72348022]
[588.89373779 -127.18097687]
[575.05841064 -121.38580322]
[561.22308350 -115.59062195]
[547.52960205 -109.46784210]
[533.98571777 -103.02091217]
[520.44183350 -96.57398987]
[506.94949341 -90.01982117]
[493.50958252 -83.35882568]
[480.06970215 -76.69782257]
[466.73715210 -69.82442474]
[453.51535034 -62.74036026]
[440.29354858 -55.65629578]
[427.12835693 -48.46755981]
[414.02062988 -41.17461014]
[400.91290283 -33.88165665]
[387.80514526 -26.58870697]
[374.69741821 -19.29575539]
[366.01797485 -2.02393532]
[345.87545776 -2.62466860]
[333.00570679 5.08049250]
[320.13595581 12.78565311]
[307.26620483 20.49081421]
[294.45797729 28.29783058]
[281.71209717 36.20621490]
[268.96621704 44.11459351]
[267.02273560 48.48777390]
[262.30575562 51.68150330]
[255.68809509 52.06425476]
[242.69770813 59.56425476]
[229.70732117 67.06425476]
[228.51785278 83.43197632]
[217.70133972 95.99383545]
[201.36753845 99.67354584]
[185.90551758 92.82887268]
[173.03576660 100.53402710]
[160.16601562 108.23918915]
[147.29626465 115.94435120]
[143.07028198 130.33674622]
[149.73127747 143.77665710]
[156.39227295 157.21656799]
[163.05326843 170.65646362]
[169.71427917 184.09637451]
[185.03437805 186.56098938]
[195.95603943 197.58354187]
[198.27967834 212.92565918]
[191.11178589 226.68795776]
[177.20858765 233.57856750]
[161.91612244 230.94792175]
[151.11468506 219.80752563]
[148.95761108 204.44111633]
[156.27436829 190.75737000]
[149.61337280 177.31745911]
[142.95237732 163.87756348]
[136.29136658 150.43765259]
[129.63037109 136.99774170]
[114.97316742 140.18621826]
[114.49725342 155.17868042]
[114.02133179 170.17112732]
[113.54541016 185.16357422]
[113.06949615 200.15602112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[17 60]
[18 59]
[19 58]
[20 57]
[23 54]
[24 53]
[25 52]
[26 51]
[29 50]
[30 49]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[89 174]
[90 173]
[91 172]
[92 171]
[97 167]
[98 166]
[99 165]
[100 162]
[101 161]
[102 160]
[104 159]
[105 158]
[106 157]
[107 156]
[111 154]
[112 153]
[113 152]
[114 151]
[115 150]
[117 149]
[118 148]
[119 147]
[122 146]
[123 145]
[124 144]
[126 143]
[127 142]
[128 141]
[132 140]
[133 139]
[134 138]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
