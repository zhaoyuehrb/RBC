%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGACGCUCCACGUGUCCCUCGCCGCGCCCCGUCUACCCGCCCCUGCCCUGAGGACCCUAGUCCAACAUGGCGGCGCCCAGCGGAGGGUGGAACGGCGUCGGCGCGAGCUUGUGGGCCGCGCUGCUCCUAGGGGCCGUGGCGCUGAGGCCGGCGGAGGCGGUGUCCG\
) } def
/len { sequence length } bind def

/coor [
[104.86801910 587.73822021]
[91.70764160 577.04992676]
[98.33512878 561.44500732]
[98.88940430 546.45526123]
[99.44367981 531.46551514]
[99.99794769 516.47570801]
[100.55222321 501.48599243]
[101.10649109 486.49621582]
[101.66076660 471.50646973]
[102.21504211 456.51672363]
[102.63078308 441.52249146]
[102.90796661 426.52502441]
[93.59381104 411.67150879]
[103.17340851 395.96658325]
[103.17340851 380.96658325]
[103.17340851 365.96658325]
[91.03498840 357.37606812]
[86.22567749 343.11651611]
[90.78842926 328.58950806]
[103.17340851 319.42880249]
[103.17340851 304.42880249]
[103.17340851 289.42880249]
[103.17340851 274.42880249]
[102.75765991 259.43453979]
[101.92649078 244.45759583]
[101.09531403 229.48065186]
[100.26414490 214.50369263]
[99.43296814 199.52673340]
[98.60179901 184.54978943]
[97.63227844 169.58114624]
[96.52449036 154.62211609]
[95.41670227 139.66307068]
[94.30891418 124.70403290]
[76.80897522 110.23983765]
[77.90943909 87.56275940]
[67.60089111 76.66625977]
[57.29233932 65.76975250]
[46.98378754 54.87325287]
[36.67523575 43.97674942]
[26.36668777 33.08024597]
[16.05813599 22.18374062]
[0.95351714 17.47618866]
[-2.17249632 2.91331506]
[-12.48104668 -7.98318863]
[-29.61960030 5.03105116]
[-58.53097153 -3.10313296]
[-70.15903473 -12.57879829]
[-81.78709412 -22.05446243]
[-93.41515350 -31.53012848]
[-105.04321289 -41.00579453]
[-120.62889862 -43.72552872]
[-125.60739136 -57.76347351]
[-137.23545837 -67.23913574]
[-155.46151733 -69.73397827]
[-161.09217834 -86.33748627]
[-172.89334106 -95.59665680]
[-184.69451904 -104.85583496]
[-196.49569702 -114.11500549]
[-212.79809570 -115.89373779]
[-219.16033936 -131.00843811]
[-209.03750610 -143.91036987]
[-192.84309387 -141.32716370]
[-187.23652649 -125.91617584]
[-175.43534851 -116.65700531]
[-163.63417053 -107.39783478]
[-151.83299255 -98.13865662]
[-139.76495361 -99.27185059]
[-129.85185242 -91.62055206]
[-127.75978851 -78.86719513]
[-116.13172913 -69.39153290]
[-101.37775421 -67.34955597]
[-95.56754303 -52.63385391]
[-83.93948364 -43.15818787]
[-72.31142426 -33.68252182]
[-60.68336868 -24.20685768]
[-49.05530930 -14.73119259]
[-36.01839828 -22.15136719]
[-22.98263931 -29.57086754]
[-25.19216537 -44.40724182]
[-33.50568008 -59.18296051]
[-21.60881424 -71.26190186]
[-6.70853806 -63.17375565]
[-10.35579109 -46.61676788]
[-8.14626503 -31.78039360]
[-1.58454299 -18.29173851]
[8.72400761 -7.39523506]
[23.09128952 -3.46707439]
[26.95463943 11.87519073]
[37.26319122 22.77169418]
[47.57173920 33.66819763]
[57.88029099 44.56470108]
[68.18884277 55.46120453]
[78.49739075 66.35771179]
[88.80593872 77.25421143]
[102.57224274 74.77974701]
[115.55554199 79.98243713]
[127.85165405 71.39141083]
[140.14776611 62.80038452]
[152.44386292 54.20935440]
[164.73997498 45.61832809]
[170.00881958 38.10749435]
[177.34362793 36.98463058]
[189.79638672 28.62228775]
[202.24914551 20.25994682]
[214.70190430 11.89760399]
[221.84512329 -2.21922922]
[236.72456360 -2.89116573]
[249.17732239 -11.25350761]
[251.97845459 -26.80758095]
[265.00503540 -35.75653076]
[280.52862549 -32.79110336]
[289.33935547 -19.67063332]
[286.20996094 -4.17926550]
[272.99707031 4.49224854]
[257.53967285 1.19925320]
[245.08689880 9.56159496]
[238.83439636 23.08029747]
[223.06423950 24.35036469]
[210.61148071 32.71270752]
[198.15872192 41.07504654]
[185.70596313 49.43738937]
[173.33099365 57.91443634]
[161.03489685 66.50546265]
[148.73878479 75.09648895]
[136.44267273 83.68751526]
[124.14656830 92.27854156]
[125.23833466 97.61165619]
[125.16635132 103.05490112]
[123.93394470 108.35727692]
[121.59793091 113.27429962]
[118.26603699 117.57924652]
[114.09188080 121.07360077]
[109.26795197 123.59624481]
[110.37574005 138.55528259]
[111.48352814 153.51432800]
[112.59131622 168.47335815]
[116.35868835 176.83877563]
[113.57875061 183.71861267]
[114.40992737 198.69555664]
[115.24109650 213.67251587]
[116.07227325 228.64947510]
[116.90344238 243.62641907]
[117.73461151 258.60339355]
[120.63896179 263.03488159]
[121.44496918 267.67227173]
[120.43116760 271.67242432]
[118.17340851 274.42880249]
[118.17340851 289.42880249]
[118.17340851 304.42880249]
[118.17340851 319.42880249]
[130.55838013 328.58950806]
[135.12113953 343.11651611]
[130.31182861 357.37606812]
[118.17340851 365.96658325]
[118.17340851 380.96658325]
[118.17340851 395.96658325]
[126.73827362 405.64480591]
[126.40737152 418.16287231]
[117.90541077 426.80221558]
[117.62822723 441.79965210]
[120.60766602 450.47698975]
[117.20479584 457.07098389]
[116.65052032 472.06072998]
[116.09625244 487.05050659]
[115.54197693 502.04025269]
[114.98770905 517.03002930]
[114.43343353 532.01977539]
[113.87915802 547.00952148]
[113.32489014 561.99926758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[11 160]
[12 159]
[14 156]
[15 155]
[16 154]
[20 150]
[21 149]
[22 148]
[23 147]
[24 143]
[25 142]
[26 141]
[27 140]
[28 139]
[29 138]
[30 136]
[31 135]
[32 134]
[33 133]
[35 94]
[36 93]
[37 92]
[38 91]
[39 90]
[40 89]
[41 88]
[43 86]
[44 85]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[52 70]
[53 69]
[55 66]
[56 65]
[57 64]
[58 63]
[78 84]
[79 83]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[102 121]
[103 120]
[104 119]
[105 118]
[107 116]
[108 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
