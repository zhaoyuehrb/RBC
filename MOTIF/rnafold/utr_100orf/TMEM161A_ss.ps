%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGGUCGAGUUUCCGCAGAGUGCCCGGAGCCCUAGGCCGGUGGGUGAGUGCACCGCGUUCUCGCACGCGUCAUGGCGGUCCUCGGAGUACAGCUGGUGGUGACCCUGCUCACUGCCACCCUCAUGCACAGGCUGGCGCCACACUGCUCCUUCGCGCGCUGGCUGCUCUGUA\
) } def
/len { sequence length } bind def

/coor [
[21.57540894 315.65832520]
[19.13572884 323.47265625]
[14.47632217 330.51889038]
[7.84437037 336.16326904]
[-0.33176747 339.85284424]
[-5.88383961 353.78747559]
[2.51576519 366.83456421]
[1.60869682 382.32510376]
[-8.25625896 394.30267334]
[-23.28582573 398.16168213]
[-37.70082474 392.41821289]
[-45.95840073 379.28076172]
[-44.88334274 363.80099487]
[-34.88903427 351.93112183]
[-19.81849098 348.23541260]
[-14.26641846 334.30078125]
[-26.90514946 326.22225952]
[-37.22064209 337.11218262]
[-47.53613281 348.00210571]
[-54.03908157 363.65930176]
[-70.88459015 361.74484253]
[-73.70824432 345.02770996]
[-58.42606735 337.68661499]
[-48.11057281 326.79669189]
[-37.79508209 315.90676880]
[-27.81320381 288.61111450]
[-2.93906569 282.85794067]
[3.35927081 269.24432373]
[9.65760708 255.63069153]
[15.95594406 242.01705933]
[22.25428009 228.40342712]
[28.55261612 214.78979492]
[27.68493080 212.08966064]
[27.85343552 208.87756348]
[29.26071930 205.55343628]
[31.95840836 202.58380127]
[35.82829285 200.44650269]
[43.09254074 187.32284546]
[50.35678864 174.19917297]
[57.62103653 161.07550049]
[64.88528442 147.95182800]
[72.14952850 134.82815552]
[79.41378021 121.70449066]
[86.67802429 108.58081818]
[80.75064850 94.80162811]
[66.22730255 91.05029297]
[51.70396042 87.29896545]
[37.18061447 83.54763794]
[21.53257561 88.45384979]
[9.64441681 77.15766907]
[13.74565792 61.27963638]
[29.61729240 57.15371323]
[40.93194580 69.02429199]
[55.45528793 72.77561951]
[69.97863007 76.52695465]
[84.50197601 80.27828217]
[91.04506683 66.78057861]
[79.10367584 57.70296860]
[67.16227722 48.62535477]
[50.83458328 47.09614182]
[44.24193192 32.08051682]
[54.16627121 19.02527046]
[70.39830017 21.36051941]
[76.23989105 36.68395996]
[88.18128967 45.76157379]
[100.12268066 54.83918381]
[100.98450470 73.70791626]
[100.53768921 92.55937195]
[112.47908020 83.48175812]
[124.42047882 74.40414429]
[136.36187744 65.32653046]
[134.53579712 50.14059448]
[140.51658630 36.17180252]
[152.60594177 27.13223839]
[167.49716187 25.36939812]
[181.17921448 31.25727654]
[193.12060547 22.17966270]
[205.06201172 13.10204887]
[217.00340271 4.02443600]
[228.94479370 -5.05317736]
[240.88619995 -14.13079071]
[240.16921997 -26.03895187]
[245.25247192 -36.69860077]
[254.76148987 -43.49742889]
[266.25372314 -44.83186722]
[276.84542847 -40.48402786]
[289.10678101 -49.12461090]
[295.93035889 -63.39868546]
[310.79089355 -64.40544891]
[323.05224609 -73.04602814]
[328.28759766 -80.57444000]
[335.61386108 -81.72956848]
[348.02917480 -90.14737701]
[360.44451904 -98.56518555]
[372.85986328 -106.98298645]
[385.27517700 -115.40079498]
[396.61947632 -125.21440125]
[406.73669434 -136.28878784]
[416.85388184 -147.36318970]
[426.97109985 -158.43759155]
[437.08828735 -169.51197815]
[447.20550537 -180.58638000]
[457.32269287 -191.66076660]
[467.43991089 -202.73516846]
[466.47650146 -218.51005554]
[477.01220703 -230.29029846]
[492.79641724 -231.08688354]
[504.46459961 -220.42720032]
[505.09426880 -204.63546753]
[494.31182861 -193.08062744]
[478.51431274 -192.61796570]
[468.39709473 -181.54356384]
[458.27990723 -170.46917725]
[448.16268921 -159.39477539]
[438.04550171 -148.32038879]
[427.92828369 -137.24598694]
[417.81109619 -126.17159271]
[407.69387817 -115.09719849]
[422.22152710 -118.83184052]
[437.02828979 -116.43190765]
[449.63250732 -108.29964447]
[457.92166138 -95.79804230]
[460.50646973 -81.02243042]
[456.95367432 -66.44924164]
[447.85876465 -54.52101135]
[434.74609375 -47.23695374]
[419.81335449 -45.81789780]
[405.56338501 -50.50169373]
[394.38449097 -60.50331116]
[388.15029907 -74.14644623]
[387.90573120 -89.14444733]
[393.69299316 -102.98545837]
[381.27764893 -94.56765747]
[368.86233521 -86.14984894]
[356.44699097 -77.73204041]
[344.03164673 -69.31423950]
[331.69281006 -60.78469467]
[319.43148804 -52.14411163]
[313.48492432 -38.48806763]
[297.74734497 -36.86327362]
[285.48602295 -28.22269249]
[283.47891235 -10.05208492]
[268.59365845 1.10019147]
[249.96380615 -2.18939447]
[238.02241516 6.88821888]
[226.08100891 15.96583176]
[214.13961792 25.04344559]
[202.19822693 34.12105942]
[190.25682068 43.19867325]
[192.26976013 57.95718384]
[186.58734131 71.83400726]
[174.64302063 81.06436920]
[159.58337402 83.09010315]
[145.43948364 77.26792908]
[133.49809265 86.34554291]
[121.55669403 95.42315674]
[109.61529541 104.50076294]
[99.80169678 115.84506989]
[92.53744507 128.96873474]
[85.27320099 142.09240723]
[78.00894928 155.21607971]
[70.74470520 168.33975220]
[63.48045731 181.46342468]
[56.21620941 194.58708191]
[48.95196533 207.71075439]
[42.16624832 221.08813477]
[35.86791229 234.70176697]
[29.56957436 248.31538391]
[23.27123833 261.92901611]
[16.97290230 275.54266357]
[10.67456532 289.15628052]
[15.92876816 293.99514771]
[19.75926399 300.33074951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[17 25]
[18 24]
[19 23]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[32 166]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[45 56]
[46 55]
[47 54]
[48 53]
[57 66]
[58 65]
[59 64]
[68 157]
[69 156]
[70 155]
[71 154]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[86 141]
[87 140]
[89 138]
[90 137]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
[97 118]
[98 117]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
