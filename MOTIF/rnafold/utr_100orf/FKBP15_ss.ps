%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGCCCUGCCGGAAAGCAGCACGCCGCCGCGGCAUUUUACGACGUCGGCGGUGACAGGCCCUGGGACUCUGGGAAUACCCAGCUUCCUCCCCGCAACCCGGUGAAAGCCAACGCAAUGUUCGGUGCGGGGGACGAGGACGACACCGAUUUCCUCUCGCCGAGCGGCGGUGCCAGAUUGGCCUCACUUUUUGGACUGGAUCAGGCAGCUGCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[133.18830872 301.20553589]
[136.32521057 316.07928467]
[133.52648926 331.02035522]
[125.21891785 343.75033569]
[112.66934204 352.32803345]
[97.79148865 355.44537354]
[82.85411072 352.62698364]
[70.13505554 344.30267334]
[61.57389450 331.74182129]
[58.47612762 316.85989380]
[61.31415558 301.92623901]
[69.65518951 289.21813965]
[82.22728729 280.67349243]
[97.11329651 277.59530640]
[99.89441681 262.85540771]
[91.31171417 250.73628235]
[93.92219543 235.74829102]
[106.69202423 226.82814026]
[109.47315216 212.08821106]
[112.25427246 197.34828186]
[115.03539276 182.60836792]
[117.81652069 167.86843872]
[120.59764099 153.12850952]
[85.14400482 147.07086182]
[65.30728149 123.20425415]
[51.54352570 129.16738892]
[37.77976990 135.13053894]
[24.01601601 141.09367371]
[10.25226116 147.05682373]
[-3.51149321 153.01995850]
[-17.27524757 158.98310852]
[-31.03900146 164.94624329]
[-44.75963211 171.00796509]
[-58.43643188 177.16792297]
[-59.29266357 192.44946289]
[-67.16246033 205.57672119]
[-80.23738861 213.53315735]
[-95.51293182 214.49043274]
[-109.47888184 208.22857666]
[-118.92595673 196.18650818]
[-121.68330383 181.13142395]
[-117.11729431 166.52285767]
[-106.27716827 155.71775818]
[-91.65390015 151.19905090]
[-76.60781860 154.00511169]
[-64.59639740 163.49111938]
[-50.91959763 157.33116150]
[-46.11456299 151.72158813]
[-37.00214386 151.18249512]
[-23.23838997 145.21934509]
[-9.47463512 139.25621033]
[4.28911877 133.29306030]
[18.05287361 127.32992554]
[31.81662750 121.36678314]
[45.58038330 115.40364075]
[59.34413528 109.44049835]
[52.67546463 101.66281128]
[47.68917465 91.66982269]
[33.01250076 88.57219696]
[18.33582878 85.47457123]
[1.58949208 88.11966705]
[-5.58808136 72.76001740]
[7.18435526 61.61097336]
[21.43345261 70.79789734]
[36.11012650 73.89552307]
[50.78680038 76.99314880]
[57.23960876 63.45205307]
[45.58919525 54.00388718]
[33.93877792 44.55572128]
[18.42950821 46.00495529]
[6.74892187 36.25720596]
[5.46287918 21.46255684]
[-6.18753624 12.01439190]
[-17.83795166 2.56622744]
[-29.48836708 -6.88193703]
[-41.13878250 -16.33010101]
[-57.41039658 -18.37134552]
[-63.52822113 -33.58660889]
[-53.19876480 -46.32373428]
[-37.04808426 -43.47985840]
[-31.69061852 -27.98051834]
[-20.04020309 -18.53235245]
[-8.38978767 -9.08418846]
[3.26062846 0.36397651]
[14.91104412 9.81214142]
[29.65237236 8.01524448]
[41.60214233 17.43106270]
[43.38694382 32.90530777]
[55.03735733 42.35347366]
[66.68777466 51.80163574]
[80.49394226 45.93737030]
[81.78341675 30.99289513]
[83.07289124 16.04842377]
[84.36235809 1.10395062]
[85.65183258 -13.84052181]
[86.94130707 -28.78499413]
[88.23077393 -43.72946548]
[89.52024841 -58.67393875]
[87.07305908 -64.80551147]
[87.95333862 -70.41240692]
[91.06710052 -74.02655029]
[92.78474426 -88.92787933]
[94.50239563 -103.82921600]
[96.22003937 -118.73054504]
[83.39430237 -126.93188477]
[75.43373871 -139.83601379]
[73.87168121 -154.85533142]
[78.96468353 -169.00532532]
[89.65217590 -179.49755859]
[103.77684021 -184.28916931]
[105.49448395 -199.19049072]
[98.48217773 -214.01478577]
[108.03546143 -227.34396362]
[124.32674408 -225.46609497]
[130.59693909 -210.31298828]
[120.39581299 -197.47285461]
[118.67816925 -182.57151794]
[131.34225464 -174.69203186]
[139.36236572 -162.04342651]
[141.10249329 -147.10578918]
[136.16430664 -132.83572388]
[125.47665405 -122.08114624]
[111.12136841 -117.01290131]
[109.40372467 -102.11157227]
[107.68608093 -87.21023560]
[105.96843719 -72.30890656]
[104.46472168 -57.38446808]
[103.17524719 -42.43999481]
[101.88578033 -27.49552345]
[100.59630585 -12.55105019]
[99.30683136 2.39342260]
[98.01736450 17.33789444]
[96.72789001 32.28236771]
[95.43841553 47.22684097]
[119.49642181 49.31315231]
[140.70774841 62.06353378]
[154.49099731 83.33769226]
[167.69119263 76.21342468]
[180.89137268 69.08915710]
[194.09155273 61.96489334]
[207.29173279 54.84062958]
[220.33557129 47.43399429]
[233.21704102 39.74842453]
[240.73526001 25.17418861]
[257.12661743 24.66842842]
[265.52905273 38.75142670]
[257.29888916 52.93579865]
[240.90260315 52.62988281]
[228.02114868 60.31545258]
[226.80726624 63.61990738]
[223.93583679 66.50226593]
[219.62187195 68.19136047]
[214.41600037 68.04080963]
[201.21582031 75.16507721]
[188.01564026 82.28934479]
[174.81546021 89.41361237]
[161.61526489 96.53787231]
[165.23713684 111.09404755]
[180.23675537 111.20162964]
[195.23637390 111.30921936]
[210.23597717 111.41680908]
[225.23559570 111.52439880]
[239.22117615 102.96078491]
[253.49913025 111.02752686]
[253.38150024 127.42625427]
[238.98931885 135.28735352]
[225.12800598 126.52400970]
[210.12838745 126.41641998]
[195.12878418 126.30883789]
[180.12916565 126.20124817]
[165.12954712 126.09365845]
[159.66374207 140.06237793]
[170.75314331 150.16313171]
[181.84254456 160.26388550]
[192.93193054 170.36463928]
[208.34448242 173.93731689]
[212.54348755 188.22779846]
[223.63288879 198.32855225]
[234.72229004 208.42930603]
[245.81167603 218.53005981]
[264.69360352 216.92926025]
[278.50830078 229.42857361]
[278.78851318 247.73686218]
[290.16308594 257.51535034]
[304.91873169 253.01263428]
[319.76010132 257.22418213]
[329.95138550 268.80615234]
[332.24053955 284.06271362]
[325.89715576 298.12561035]
[312.94534302 306.50738525]
[297.51800537 306.53347778]
[284.53793335 298.19552612]
[278.14703369 284.15417480]
[280.38461304 268.88992310]
[269.01004028 259.11145020]
[258.09674072 262.41418457]
[246.82704163 260.01644897]
[238.02221680 252.40028381]
[233.94323730 241.36865234]
[235.71092224 229.61946106]
[224.62152100 219.51870728]
[213.53213501 209.41795349]
[202.44273376 199.31718445]
[187.82337952 196.46697998]
[182.83117676 181.45404053]
[171.74177551 171.35328674]
[160.65238953 161.25253296]
[149.56298828 151.15176392]
[135.33757019 155.90963745]
[132.55644226 170.64956665]
[129.77531433 185.38948059]
[126.99419403 200.12940979]
[124.21307373 214.86933899]
[121.43195343 229.60925293]
[130.07344055 242.56929016]
[127.04300690 257.47805786]
[114.63433838 265.63653564]
[111.85321808 280.37643433]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 218]
[15 217]
[18 214]
[19 213]
[20 212]
[21 211]
[22 210]
[23 209]
[25 56]
[26 55]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[32 49]
[33 47]
[34 46]
[58 66]
[59 65]
[60 64]
[67 90]
[68 89]
[69 88]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[101 126]
[102 125]
[103 124]
[104 123]
[110 117]
[111 116]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 149]
[143 148]
[158 171]
[159 170]
[160 169]
[161 168]
[162 167]
[172 208]
[173 207]
[174 206]
[175 205]
[177 203]
[178 202]
[179 201]
[180 200]
[183 195]
[184 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
