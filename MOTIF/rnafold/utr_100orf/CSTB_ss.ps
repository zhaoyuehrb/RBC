%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGUUCCGCCCGCGCGUCACGUGACCCCAGCGCCUACUUGGGCUGAGGAGCCGCCGCGUCCCCUCGCCGAGUCCCCUCGCCAGAUUCCCUCCGUCGCCGCCAAGAUGAUGUGCGGGGCGCCCUCCGCCACGCAGCCGGCCACCGCCGAGACCCAGCACAUCGCCGACCAGGUGAGGUCCCAGCUUGAAGAGAAAGAAAACAAGA\
) } def
/len { sequence length } bind def

/coor [
[-368.76736450 564.82470703]
[-379.03103638 559.19268799]
[-388.13421631 551.83801270]
[-399.69772339 561.39239502]
[-411.26123047 570.94671631]
[-422.82473755 580.50103760]
[-434.38824463 590.05541992]
[-445.95172119 599.60974121]
[-457.51522827 609.16406250]
[-468.85824585 618.97918701]
[-479.97491455 629.04992676]
[-491.09155273 639.12066650]
[-502.20822144 649.19140625]
[-512.85498047 659.75769043]
[-523.00982666 670.79760742]
[-533.16461182 681.83752441]
[-543.31945801 692.87744141]
[-553.13452148 704.22045898]
[-562.60083008 715.85614014]
[-572.06713867 727.49182129]
[-574.13378906 743.76019287]
[-589.35858154 749.85430908]
[-602.07952881 739.50500488]
[-599.21051025 723.35876465]
[-583.70281982 718.02545166]
[-574.23651123 706.38983154]
[-564.77020264 694.75415039]
[-564.92431641 691.95214844]
[-563.97601318 688.92022705]
[-561.83221436 686.07861328]
[-558.55352783 683.87347412]
[-554.35937500 682.72265625]
[-544.20452881 671.68273926]
[-534.04974365 660.64282227]
[-523.89489746 649.60290527]
[-538.88726807 649.12408447]
[-549.25195312 638.28094482]
[-549.05413818 623.28222656]
[-538.40710449 612.71618652]
[-523.40734863 612.63287354]
[-512.64367676 623.08001709]
[-512.27899170 638.07476807]
[-501.16232300 628.00402832]
[-490.04565430 617.93328857]
[-478.92898560 607.86248779]
[-478.39181519 604.37475586]
[-476.13668823 600.97436523]
[-472.22338867 598.46697998]
[-467.06958008 597.60058594]
[-455.50607300 588.04626465]
[-443.94256592 578.49188232]
[-432.37905884 568.93756104]
[-420.81558228 559.38323975]
[-409.25207520 549.82885742]
[-397.68856812 540.27453613]
[-405.52584839 523.55908203]
[-408.42553711 505.31460571]
[-406.15396118 486.96932983]
[-398.88256836 469.96124268]
[-387.17486572 455.62527466]
[-371.94296265 445.08871460]
[-354.37634277 439.18240356]
[-335.84906006 438.37527466]
[-317.81222534 442.73712158]
[-301.68035889 451.93267822]
[-291.19515991 441.20605469]
[-280.70999146 430.47940063]
[-281.13580322 415.63507080]
[-270.65512085 404.60736084]
[-255.08213806 404.26138306]
[-244.59695435 393.53475952]
[-234.11175537 382.80810547]
[-223.62657166 372.08145142]
[-213.14138794 361.35482788]
[-214.79539490 341.94668579]
[-201.44033813 327.35092163]
[-181.35160828 327.27633667]
[-171.36550903 316.08358765]
[-161.37940979 304.89080811]
[-151.39329529 293.69805908]
[-141.40719604 282.50531006]
[-131.42109680 271.31256104]
[-121.43499756 260.11978149]
[-124.50601196 254.18649292]
[-126.14559937 247.69100952]
[-126.25904083 240.97448730]
[-124.83200836 234.39166260]
[-121.93175507 228.29208374]
[-117.70398712 223.00160217]
[-112.36556244 218.80493164]
[-106.19336700 215.93035889]
[-99.51000214 214.53730774]
[-92.66685486 214.70755005]
[-86.02568817 216.44041443]
[-79.93949127 219.65240479]
[-68.52231598 209.92367554]
[-57.10514832 200.19494629]
[-45.68797684 190.46621704]
[-44.42162323 185.85832214]
[-40.24530411 181.99822998]
[-33.77349472 180.62187195]
[-22.06632805 171.24412537]
[-36.81396103 168.50416565]
[-45.42016602 156.21867371]
[-42.95705032 141.42228699]
[-30.83499336 132.58737183]
[-15.99504757 134.77278137]
[-6.93452835 146.72715759]
[-8.84102440 161.60467529]
[3.67040300 153.33036804]
[16.18183136 145.05606079]
[28.69325829 136.78175354]
[41.20468521 128.50744629]
[53.71611404 120.23313141]
[66.22753906 111.95882416]
[78.67581940 103.58981323]
[91.06023407 95.12658691]
[101.78688049 84.64139557]
[110.52982330 72.45284271]
[119.27277374 60.26428604]
[128.01571655 48.07573318]
[126.83914948 32.07588196]
[138.71214294 21.28645706]
[154.52674866 23.98418427]
[162.15135193 38.09959412]
[155.73703003 52.80455780]
[140.20426941 56.81867981]
[131.46133423 69.00723267]
[122.71837616 81.19578552]
[113.97543335 93.38434601]
[118.52984619 99.34314728]
[130.44744873 90.23431396]
[142.36505127 81.12548828]
[157.24040222 79.19577789]
[151.47387695 93.04309082]
[139.55627441 102.15191650]
[127.63867950 111.26074982]
[132.19308472 117.21955109]
[146.24914551 111.98242950]
[160.30519104 106.74531555]
[174.36125183 101.50820160]
[184.38397217 88.52833557]
[200.59788513 90.98619843]
[206.32350159 106.35334778]
[195.67080688 118.82138062]
[179.59835815 115.56425476]
[165.54231262 120.80136871]
[151.48625183 126.03848267]
[137.43020630 131.27560425]
[125.70661163 131.33026123]
[115.46002197 128.33309937]
[107.37245941 122.86734009]
[101.95531464 115.65461731]
[99.52346802 107.51100159]
[87.13905334 115.97422791]
[81.81732941 123.40227509]
[74.50184631 124.47025299]
[61.99042130 132.74456787]
[49.47899246 141.01887512]
[36.96756744 149.29318237]
[24.45613861 157.56748962]
[11.94471169 165.84179688]
[-0.56671637 174.11610413]
[-12.68857670 182.95129395]
[-24.39574432 192.32904053]
[-35.95924377 201.88337708]
[-47.37641525 211.61210632]
[-58.79358673 221.34085083]
[-70.21075439 231.06958008]
[-69.59363556 255.11911011]
[-86.74611664 271.62023926]
[-110.24224091 270.10589600]
[-120.22834015 281.29864502]
[-130.21444702 292.49139404]
[-140.20054626 303.68417358]
[-150.18664551 314.87692261]
[-160.17274475 326.06967163]
[-170.15885925 337.26242065]
[-166.91372681 347.43148804]
[-168.17449951 357.94973755]
[-173.64694214 366.92584229]
[-182.28559875 372.77389526]
[-192.49298096 374.49340820]
[-202.41474915 371.83999634]
[-212.89993286 382.56665039]
[-223.38511658 393.29330444]
[-233.87030029 404.01992798]
[-244.35549927 414.74658203]
[-244.34689331 430.32339478]
[-255.13316345 441.05239868]
[-269.98333740 440.96459961]
[-280.46853638 451.69122314]
[-290.95370483 462.41787720]
[-284.37802124 472.18447876]
[-279.63391113 482.95547485]
[-276.86926270 494.39111328]
[-276.16967773 506.13092041]
[-277.55557251 517.80517578]
[-280.98175049 529.04638672]
[-286.33883667 539.50109863]
[-293.45675659 548.84082031]
[-302.11010742 556.77246094]
[-312.02539062 563.04736328]
[-322.88952637 567.46923828]
[-334.35986328 569.90039062]
[-346.07485962 570.26574707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 55]
[4 54]
[5 53]
[6 52]
[7 51]
[8 50]
[9 49]
[10 45]
[11 44]
[12 43]
[13 42]
[14 35]
[15 34]
[16 33]
[17 32]
[18 27]
[19 26]
[20 25]
[65 193]
[66 192]
[67 191]
[70 188]
[71 187]
[72 186]
[73 185]
[74 184]
[77 178]
[78 177]
[79 176]
[80 175]
[81 174]
[82 173]
[83 172]
[95 169]
[96 168]
[97 167]
[98 166]
[101 165]
[102 164]
[109 163]
[110 162]
[111 161]
[112 160]
[113 159]
[114 158]
[115 157]
[116 155]
[117 154]
[118 130]
[119 129]
[120 128]
[121 127]
[138 149]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
