%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CXorf51A)
} def

/sequence { (\
AAUUCAGUAUGGCAAAGGUGACCAGUGAGCCACAGAAGCCUAAUGAAGAUGUGGACGAACAGACCCCAUCAACCUCAAGUACCAAAGGGAGGAAGAAGGGGAAGACAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.013172932 ubox
2 10 0.012926327 ubox
2 26 0.007639626 ubox
2 44 0.004076477 ubox
2 50 0.050863697 ubox
2 52 0.017714429 ubox
3 7 0.012522226 ubox
3 9 0.014492779 ubox
3 25 0.007776782 ubox
3 28 0.016470238 ubox
3 29 0.358794490 ubox
3 37 0.029072747 ubox
3 43 0.004179567 ubox
3 46 0.016364823 ubox
3 47 0.681776454 ubox
3 48 0.026368516 ubox
3 49 0.044585176 ubox
3 51 0.015358587 ubox
3 55 0.042900496 ubox
3 58 0.005172914 ubox
3 59 0.051464380 ubox
3 62 0.003872748 ubox
3 63 0.007600298 ubox
3 102 0.008765404 ubox
3 103 0.021987298 ubox
3 104 0.007964738 ubox
3 105 0.014820197 ubox
4 12 0.014329522 ubox
4 21 0.021029824 ubox
4 24 0.004557762 ubox
4 27 0.011853212 ubox
4 28 0.470791219 ubox
4 36 0.033414687 ubox
4 42 0.003647012 ubox
4 45 0.006539720 ubox
4 46 0.784406465 ubox
4 47 0.029708227 ubox
4 48 0.027907195 ubox
4 49 0.029426556 ubox
4 54 0.047510427 ubox
4 55 0.008835155 ubox
4 57 0.004356895 ubox
4 58 0.061753726 ubox
4 61 0.003746494 ubox
4 62 0.007041548 ubox
4 63 0.048878213 ubox
4 102 0.023266995 ubox
4 103 0.008146882 ubox
4 104 0.013743141 ubox
4 105 0.084473505 ubox
5 11 0.019110334 ubox
5 17 0.004248964 ubox
5 20 0.022746595 ubox
5 27 0.481104887 ubox
5 35 0.033764882 ubox
5 45 0.795148925 ubox
5 48 0.031372614 ubox
5 51 0.005576568 ubox
5 53 0.049494424 ubox
5 54 0.009310340 ubox
5 57 0.062567767 ubox
5 62 0.052745542 ubox
5 101 0.020138722 ubox
5 104 0.091217077 ubox
6 10 0.015629990 ubox
6 19 0.022173339 ubox
6 26 0.457094335 ubox
6 44 0.785641459 ubox
6 50 0.005559067 ubox
6 52 0.048838035 ubox
7 13 0.016934573 ubox
7 22 0.015130249 ubox
7 26 0.030542590 ubox
7 30 0.003463298 ubox
7 33 0.027343579 ubox
7 39 0.005361899 ubox
7 44 0.062673540 ubox
7 50 0.012452096 ubox
7 52 0.003165558 ubox
7 56 0.046338340 ubox
7 60 0.037497691 ubox
7 64 0.003837703 ubox
7 106 0.100433169 ubox
7 108 0.027996435 ubox
8 12 0.015858883 ubox
8 20 0.010342816 ubox
8 21 0.013459135 ubox
8 25 0.093098177 ubox
8 27 0.044204649 ubox
8 29 0.003683077 ubox
8 32 0.019716637 ubox
8 38 0.005307312 ubox
8 42 0.435633493 ubox
8 43 0.093782097 ubox
8 45 0.025215193 ubox
8 49 0.013608773 ubox
8 51 0.021470740 ubox
8 53 0.003612378 ubox
8 55 0.044885997 ubox
8 59 0.036260280 ubox
8 63 0.004546575 ubox
8 105 0.097463465 ubox
8 107 0.026926833 ubox
9 19 0.012639074 ubox
9 26 0.047314907 ubox
9 41 0.469642076 ubox
9 44 0.026571447 ubox
9 50 0.022794134 ubox
9 52 0.003948588 ubox
10 18 0.012806750 ubox
10 24 0.547971063 ubox
10 25 0.028982702 ubox
10 32 0.043459172 ubox
10 42 0.037753653 ubox
10 43 0.024274318 ubox
10 49 0.021895217 ubox
10 51 0.003923930 ubox
10 57 0.010051529 ubox
10 61 0.003858755 ubox
10 107 0.010861798 ubox
11 19 0.003629716 ubox
11 23 0.587057011 ubox
11 31 0.051463919 ubox
11 40 0.799288964 ubox
11 41 0.009955097 ubox
11 56 0.009947581 ubox
11 60 0.004041635 ubox
11 106 0.012305205 ubox
12 19 0.055309751 ubox
12 22 0.586963797 ubox
12 26 0.008110151 ubox
12 30 0.051511812 ubox
12 39 0.799683763 ubox
12 40 0.007672893 ubox
12 52 0.006486293 ubox
13 18 0.060168000 ubox
13 20 0.573650962 ubox
13 25 0.008452694 ubox
13 27 0.024812741 ubox
13 29 0.051053678 ubox
13 38 0.798554614 ubox
13 45 0.045002593 ubox
13 51 0.006616136 ubox
14 19 0.499204614 ubox
14 26 0.027801104 ubox
14 44 0.043702184 ubox
14 50 0.006295131 ubox
16 41 0.060190237 ubox
17 23 0.084813181 ubox
17 31 0.195680805 ubox
17 40 0.062419627 ubox
18 22 0.083538407 ubox
18 26 0.003181465 ubox
18 30 0.196003075 ubox
18 33 0.770460623 ubox
18 39 0.062433828 ubox
18 60 0.005521156 ubox
18 106 0.006954880 ubox
18 108 0.016817262 ubox
19 25 0.003444005 ubox
19 29 0.194303692 ubox
19 32 0.770889014 ubox
19 34 0.020670714 ubox
19 38 0.062188231 ubox
19 59 0.005493794 ubox
19 61 0.004162714 ubox
19 105 0.006784823 ubox
19 107 0.017077568 ubox
20 26 0.010268146 ubox
20 31 0.769782088 ubox
20 33 0.020422666 ubox
20 60 0.004647614 ubox
20 106 0.017098044 ubox
25 33 0.092363098 ubox
25 56 0.051401344 ubox
25 60 0.285161698 ubox
25 106 0.023664398 ubox
25 108 0.059898755 ubox
26 32 0.092538878 ubox
26 34 0.013879038 ubox
26 55 0.050882855 ubox
26 57 0.033423462 ubox
26 59 0.283984153 ubox
26 61 0.029402944 ubox
26 105 0.023030960 ubox
26 107 0.060570312 ubox
27 31 0.091110826 ubox
27 33 0.014450766 ubox
27 56 0.045783902 ubox
27 60 0.032695766 ubox
27 106 0.060533111 ubox
29 39 0.009456740 ubox
30 38 0.009612871 ubox
30 54 0.592025436 ubox
31 45 0.003834279 ubox
31 53 0.593543971 ubox
32 44 0.003670957 ubox
32 52 0.593430559 ubox
33 45 0.006332565 ubox
33 51 0.593507039 ubox
34 41 0.031021877 ubox
34 44 0.006875459 ubox
34 50 0.581319233 ubox
35 40 0.042470928 ubox
39 54 0.049991975 ubox
40 48 0.080510522 ubox
40 53 0.050160059 ubox
40 54 0.007947426 ubox
40 104 0.003839820 ubox
41 47 0.079970069 ubox
41 51 0.004252064 ubox
41 53 0.008026107 ubox
41 103 0.003764461 ubox
42 50 0.004428642 ubox
42 52 0.007307911 ubox
43 50 0.051256005 ubox
43 52 0.004810417 ubox
44 49 0.054540853 ubox
44 51 0.005142590 ubox
44 107 0.004771143 ubox
45 106 0.005507171 ubox
48 70 0.015808185 ubox
49 69 0.015826391 ubox
50 57 0.023785054 ubox
50 61 0.601919217 ubox
50 68 0.015826073 ubox
50 107 0.064121437 ubox
51 56 0.037935324 ubox
51 60 0.668749682 ubox
51 64 0.008402671 ubox
51 67 0.015821859 ubox
51 106 0.073728508 ubox
51 108 0.086845864 ubox
52 59 0.664800055 ubox
52 61 0.227944026 ubox
52 63 0.010456661 ubox
52 105 0.070651077 ubox
52 107 0.088159576 ubox
53 60 0.255765548 ubox
53 65 0.009318085 ubox
53 66 0.012779716 ubox
53 106 0.088447470 ubox
54 64 0.009414043 ubox
54 65 0.012752209 ubox
64 100 0.026727773 ubox
64 101 0.993289906 ubox
65 99 0.026352556 ubox
65 100 0.997960365 ubox
65 101 0.054951819 ubox
66 98 0.025878556 ubox
66 99 0.998002173 ubox
66 100 0.054952554 ubox
67 98 0.997260842 ubox
67 99 0.054797076 ubox
69 92 0.004317282 ubox
69 93 0.012642237 ubox
69 96 0.976295282 ubox
70 91 0.004828370 ubox
70 92 0.012939977 ubox
70 95 0.988885416 ubox
73 88 0.011245390 ubox
73 89 0.013493636 ubox
73 92 0.998923706 ubox
73 99 0.004383472 ubox
73 101 0.012738192 ubox
74 87 0.011266976 ubox
74 88 0.013482113 ubox
74 89 0.007581523 ubox
74 91 0.999682525 ubox
74 98 0.004396953 ubox
74 100 0.012795168 ubox
75 86 0.010826321 ubox
75 87 0.012151012 ubox
75 88 0.010202409 ubox
75 89 0.021222749 ubox
75 90 0.999104009 ubox
75 93 0.003835989 ubox
75 97 0.003503676 ubox
75 99 0.012763728 ubox
76 87 0.016330667 ubox
76 88 0.048595449 ubox
76 89 0.993796148 ubox
76 92 0.003969225 ubox
76 95 0.003776137 ubox
76 98 0.012660272 ubox
82 88 0.462374822 ubox
82 89 0.084559969 ubox
82 92 0.012572376 ubox
83 87 0.459195369 ubox
83 88 0.103787995 ubox
83 91 0.012587218 ubox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
6 44 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
50 61 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
64 101 0.9500000 lbox
65 100 0.9500000 lbox
66 99 0.9500000 lbox
67 98 0.9500000 lbox
69 96 0.9500000 lbox
70 95 0.9500000 lbox
73 92 0.9500000 lbox
74 91 0.9500000 lbox
75 90 0.9500000 lbox
76 89 0.9500000 lbox
showpage
end
%%EOF
