%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGGAGGCGGGGACCUCGCGUGAGGACCAGACCUCCCUCCGCGCCCCGCACUGCGCGCGCCCUCCCAGGCUCGGGGGUCCCCGCGUCCCAGGCCCAGGGGGAUGGGGGUCGCGAGAGGCCCGGGGAGCCGGGGCCAGCAUCCCCCGCCCCGGCAGCAGGAAGUCUGUGCGGAGGGGCCGCGCGCGCGCCUCCAUCCCGCCC\
) } def
/len { sequence length } bind def

/coor [
[378.26052856 68.34940338]
[367.27484131 55.49168777]
[352.33883667 56.87571335]
[337.40280151 58.25973892]
[322.46679688 59.64376450]
[307.54190063 61.14275360]
[292.62896729 62.75662231]
[280.80804443 71.81835175]
[266.25549316 65.61074066]
[251.34257507 67.22460175]
[236.42964172 68.83847046]
[221.51670837 70.45233917]
[206.60379028 72.06620026]
[191.69085693 73.68006897]
[176.77792358 75.29393768]
[161.86500549 76.90779877]
[146.95207214 78.52166748]
[132.03913879 80.13553619]
[117.12621307 81.74939728]
[104.17243958 148.68040466]
[91.41918182 156.57688904]
[78.66593170 164.47337341]
[65.91267395 172.36985779]
[53.15941238 180.26632690]
[40.46733856 188.26078796]
[27.83719254 196.35272217]
[15.20704937 204.44465637]
[15.99651814 219.78324890]
[8.99663639 233.45428467]
[-3.90966392 241.78031921]
[-19.25065231 242.52171326]
[-32.89968109 235.47900391]
[-41.18522644 222.54667664]
[-41.87852097 207.20344543]
[-34.79307556 193.57655334]
[-21.83483124 185.33158875]
[-6.48949718 184.68638611]
[7.11511135 191.81451416]
[19.74525452 183.72257996]
[32.37540054 175.63063049]
[36.31377411 169.37179565]
[45.26293182 167.51307678]
[58.01618958 159.61659241]
[70.76944733 151.72010803]
[83.52270508 143.82362366]
[96.27596283 135.92713928]
[94.44660950 128.65367126]
[90.78790283 114.10671234]
[88.95854950 106.83323669]
[73.98699951 105.90982819]
[59.01544952 104.98641205]
[42.83414078 110.04621124]
[33.49264526 95.89796448]
[44.50199127 83.00492096]
[59.93886185 90.01486206]
[74.91041565 90.93827820]
[89.88196564 91.86168671]
[93.87569427 77.40312195]
[80.55280304 70.51107025]
[64.74052429 71.04251099]
[56.99130630 58.32249069]
[43.66841125 51.43043518]
[30.34551620 44.53837967]
[15.36281872 49.56772614]
[1.24956989 42.45494080]
[-3.62109137 27.41990662]
[3.64051223 13.38264656]
[18.72620010 8.67121696]
[32.68590164 16.08082581]
[37.23757172 31.21548271]
[50.56046677 38.10754013]
[63.88336563 44.99959564]
[78.74269867 43.97518539]
[87.44485474 57.18817139]
[100.76775360 64.08023071]
[115.51235199 66.83647156]
[130.42527771 65.22260284]
[145.33821106 63.60873795]
[160.25112915 61.99487305]
[175.16406250 60.38100433]
[190.07699585 58.76713943]
[204.98991394 57.15327454]
[219.90284729 55.53940582]
[234.81578064 53.92554092]
[249.72869873 52.31167603]
[264.64163208 50.69780731]
[277.52923584 41.52064514]
[291.01510620 47.84369278]
[305.92800903 46.22982407]
[314.12854004 42.19327927]
[321.08276367 44.70775223]
[336.01879883 43.32372665]
[350.95480347 41.93970108]
[365.89080811 40.55567551]
[372.02978516 28.21101189]
[383.37762451 20.57353020]
[396.90933228 19.55017853]
[409.08093262 25.30168152]
[416.75759888 36.22840118]
[431.71316528 35.07454681]
[446.65939331 33.80556488]
[461.59539795 32.42153931]
[476.53140259 31.03751564]
[491.46743774 29.65349007]
[506.40344238 28.26946449]
[521.33947754 26.88543892]
[536.27545166 25.50141335]
[551.21148682 24.11738968]
[566.14746094 22.73336411]
[581.08349609 21.34933853]
[596.01953125 19.96531296]
[610.94445801 18.46632195]
[625.85736084 16.85245705]
[640.77026367 15.23859024]
[655.68322754 13.62472343]
[663.45825195 0.32602823]
[677.41003418 -5.77321625]
[692.10424805 -2.52602243]
[701.95086670 8.61767292]
[716.86376953 7.00380659]
[731.77673340 5.38994026]
[746.68963623 3.77607393]
[761.60260010 2.16220760]
[775.99792480 -2.05370498]
[789.42535400 -8.73978043]
[802.85284424 -15.42585564]
[816.28027344 -22.11193085]
[819.16772461 -26.47380066]
[823.05249023 -29.03244972]
[827.07916260 -29.71015358]
[830.48583984 -28.78053474]
[844.20776367 -34.83935165]
[857.92962646 -40.89816666]
[871.65155029 -46.95698166]
[885.37347412 -53.01579666]
[888.51464844 -68.21160889]
[900.01037598 -78.63404083]
[915.44042969 -80.27545166]
[928.87152100 -72.50468445]
[935.13916016 -58.30975723]
[931.83337402 -43.14891052]
[920.22521973 -32.85180283]
[904.77832031 -31.37787628]
[891.43225098 -39.29388809]
[877.71038818 -33.23507309]
[863.98846436 -27.17625809]
[850.26654053 -21.11744308]
[836.54467773 -15.05862713]
[822.96636963 -8.68448162]
[809.53887939 -1.99840629]
[796.11145020 4.68766928]
[782.68402100 11.37374401]
[783.31848145 18.84685707]
[785.22198486 41.26619720]
[799.58441162 45.59282684]
[813.94689941 49.91946030]
[823.07214355 49.39862442]
[828.49627686 54.42488098]
[842.79040527 58.97217178]
[857.08453369 63.51946259]
[871.93713379 57.45492554]
[885.86816406 65.41145325]
[888.19085693 81.28547668]
[877.12347412 92.89980316]
[861.15600586 91.34491730]
[852.53723145 77.81359100]
[838.24310303 73.26630402]
[823.94897461 68.71900940]
[809.62023926 64.28192139]
[795.25781250 59.95528793]
[780.89532471 55.62865829]
[771.56732178 49.13660812]
[765.10607910 41.13967133]
[761.66522217 32.54786301]
[761.14654541 24.25514984]
[763.21643066 17.07513618]
[748.30352783 18.68900299]
[733.39056396 20.30286789]
[718.47766113 21.91673470]
[703.56469727 23.53060150]
[696.33007812 36.52281952]
[682.67071533 42.83841324]
[667.73712158 39.86512756]
[657.29705811 28.53765297]
[642.38415527 30.15151787]
[627.47125244 31.76538467]
[612.55828857 33.37924957]
[606.24298096 37.22645569]
[597.40356445 34.90132523]
[582.46752930 36.28535080]
[567.53149414 37.66937637]
[552.59552002 39.05340195]
[537.65948486 40.43742752]
[522.72344971 41.82145309]
[507.78747559 43.20547867]
[492.85144043 44.58950424]
[477.91543579 45.97352982]
[462.97943115 47.35755539]
[448.04342651 48.74158096]
[441.66961670 52.49107742]
[432.86700439 50.03009796]
[417.91146851 51.18395615]
[409.76730347 65.43409729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 94]
[3 93]
[4 92]
[5 91]
[6 89]
[7 88]
[9 86]
[10 85]
[11 84]
[12 83]
[13 82]
[14 81]
[15 80]
[16 79]
[17 78]
[18 77]
[19 76]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[25 40]
[26 39]
[27 38]
[49 57]
[50 56]
[51 55]
[58 75]
[59 74]
[61 72]
[62 71]
[63 70]
[99 202]
[100 201]
[101 199]
[102 198]
[103 197]
[104 196]
[105 195]
[106 194]
[107 193]
[108 192]
[109 191]
[110 190]
[111 189]
[112 187]
[113 186]
[114 185]
[115 184]
[119 180]
[120 179]
[121 178]
[122 177]
[123 176]
[124 152]
[125 151]
[126 150]
[127 149]
[131 148]
[132 147]
[133 146]
[134 145]
[135 144]
[154 171]
[155 170]
[156 169]
[158 168]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
