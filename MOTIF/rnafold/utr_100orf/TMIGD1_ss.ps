%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGGGUUUUCAGGCAGAGGAACAGUUGGCCAAGGAAGUCAGCUUCUCAGAGCUCAAGAGUAGAUCUGAGUUUAACUCAUUAAAGAUGGCAUGGAAGAGCAGUGUCAUAAUGCAAAUGGGAAGAUUUCUUCUCUUAGUAAUUUUAUUUCUGCCACGUGAGAUGACAAGUUCUGUUUUAACUGUGA\
) } def
/len { sequence length } bind def

/coor [
[73.35190582 387.24386597]
[73.35190582 372.24386597]
[73.35190582 357.24386597]
[65.61460876 344.51660156]
[73.35190582 330.71643066]
[73.35190582 315.71643066]
[73.35190582 300.71643066]
[73.35190582 285.71643066]
[65.48775482 279.15026855]
[62.48422623 269.12576294]
[65.56882477 258.89602661]
[73.95108795 251.92137146]
[74.45770264 236.92993164]
[74.96431732 221.93847656]
[75.47092438 206.94703674]
[75.97753906 191.95559692]
[76.48415375 176.96415710]
[76.99076080 161.97271729]
[77.49737549 146.98127747]
[65.04295349 138.62139893]
[51.36045837 144.76870728]
[45.67000580 159.26893616]
[31.70644188 165.30825806]
[17.91776276 159.79393005]
[4.23526859 165.94123840]
[-9.44722557 172.08853149]
[-23.12971878 178.23583984]
[-36.81221390 184.38314819]
[-50.49470901 190.53045654]
[-64.17720032 196.67774963]
[-68.26232910 211.77232361]
[-81.12378693 220.66708374]
[-96.68878937 219.16221619]
[-107.60802460 207.96827698]
[-108.72575378 192.37069702]
[-99.51422882 179.73416138]
[-84.32284546 176.02528381]
[-70.32450867 182.99526978]
[-56.64201355 176.84796143]
[-42.95951843 170.70065308]
[-29.27702522 164.55334473]
[-15.59453011 158.40603638]
[-1.91203654 152.25874329]
[11.77045727 146.11143494]
[16.80466080 132.14030457]
[30.59308434 125.71115112]
[45.21315384 131.08621216]
[58.89564896 124.93891144]
[50.21147919 99.99188232]
[55.97995377 73.27243805]
[42.86475372 65.99290466]
[29.74955559 58.71337509]
[16.63435745 51.43384552]
[3.51915765 44.15431595]
[-9.59604168 36.87478638]
[-22.71124077 29.59525871]
[-31.75502586 28.16098213]
[-35.98496628 22.08041191]
[-48.97534943 14.58041191]
[-64.78153229 17.32707214]
[-76.68785858 6.57444811]
[-75.56081390 -9.42896843]
[-62.26497269 -18.40672493]
[-46.99976349 -13.47185516]
[-41.47534943 1.59003067]
[-28.48496628 9.09003067]
[-15.43171120 16.48005867]
[-2.31651211 23.75958824]
[10.79868698 31.03911781]
[23.91388702 38.31864548]
[37.02908707 45.59817505]
[50.14428329 52.87770462]
[63.25948334 60.15723419]
[69.96488190 56.79753113]
[61.94520569 44.12138367]
[53.92552948 31.44523239]
[45.90584946 18.76908302]
[35.52624512 7.94024372]
[38.07963181 -6.84083223]
[51.49059296 -13.55991936]
[64.85854340 -6.75566864]
[67.31810760 8.04059315]
[72.67063141 22.05310440]
[78.02315521 36.06561279]
[83.37568665 50.07812500]
[90.08108521 46.71842194]
[92.10176086 31.85515022]
[94.12242889 16.99187660]
[96.14310455 2.12860322]
[98.16377258 -12.73466969]
[100.18444824 -27.59794235]
[102.07952118 -42.47774887]
[103.84887695 -57.37303162]
[93.87411499 -69.63189697]
[95.57230377 -85.34468079]
[107.93594360 -95.18927765]
[123.62989807 -93.32505035]
[133.34323120 -80.85802460]
[131.31318665 -65.18465424]
[118.74415588 -55.60367966]
[116.97480774 -40.70840073]
[119.31304169 -33.68000031]
[115.04771423 -25.57727051]
[113.02704620 -10.71399784]
[111.00637054 4.14927530]
[108.98570251 19.01254845]
[106.96502686 33.87582016]
[104.94435883 48.73909378]
[117.52771759 54.38043594]
[127.52302551 62.83955383]
[134.38499451 73.16811371]
[147.62126160 66.11112976]
[160.85754395 59.05414963]
[169.39492798 45.73410797]
[184.26585388 46.57390213]
[197.50212097 39.51691818]
[203.61911011 32.70298386]
[211.02207947 32.45466995]
[224.37565613 25.62224770]
[237.72923279 18.78982544]
[251.08280945 11.95740318]
[264.43640137 5.12498188]
[277.78997803 -1.70744014]
[286.23919678 -15.76242065]
[302.62878418 -15.20216274]
[310.09851074 -0.60301137]
[300.96417236 13.01667786]
[284.62237549 11.64613628]
[271.26879883 18.47855759]
[257.91522217 25.31097984]
[244.56166077 32.14340210]
[231.20808411 38.97582245]
[217.85450745 45.80824661]
[204.55911255 52.75319672]
[191.32283020 59.81017685]
[183.73217773 72.62545776]
[167.91452026 72.29042053]
[154.67825317 79.34740448]
[141.44197083 86.40438843]
[143.03894043 92.93410492]
[143.61355591 99.63166809]
[143.15214539 106.33798218]
[141.66567993 112.89373779]
[155.01925659 119.72615814]
[168.37283325 126.55857849]
[181.72640991 133.39100647]
[195.07998657 140.22341919]
[208.43356323 147.05584717]
[221.78713989 153.88827515]
[235.56338501 146.74720764]
[250.90093994 149.10070801]
[261.90222168 160.04382324]
[264.33697510 175.36868286]
[257.26904297 189.18258667]
[243.41613770 196.17378235]
[228.10501099 193.65403748]
[217.22309875 182.59222412]
[214.95472717 167.24185181]
[201.60115051 160.40942383]
[188.24757385 153.57699585]
[174.89399719 146.74458313]
[161.54042053 139.91215515]
[148.18684387 133.07974243]
[134.83326721 126.24731445]
[128.96659851 133.79162598]
[121.45794678 140.00936890]
[112.61071014 144.54223633]
[102.80651855 147.10208130]
[92.48881531 147.48788452]
[91.98220825 162.47932434]
[91.47559357 177.47076416]
[90.96897888 192.46220398]
[90.46237183 207.45365906]
[89.95575714 222.44509888]
[89.44914246 237.43653870]
[88.94253540 252.42797852]
[99.23117065 269.74649048]
[88.35190582 285.71643066]
[88.35190582 300.71643066]
[88.35190582 315.71643066]
[88.35190582 330.71643066]
[96.08921051 344.51660156]
[88.35190582 357.24386597]
[88.35190582 372.24386597]
[88.35190582 387.24386597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[5 181]
[6 180]
[7 179]
[8 178]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 48]
[21 47]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[58 66]
[59 65]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 101]
[93 100]
[111 139]
[112 138]
[113 137]
[115 135]
[116 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
[148 159]
[149 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
