%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUACUUUUUUCUCCAAUCUGUUUGCAAGUGAGCAGUUGGCAAUGCAUGGACAGACUUUGAGUUUAUGCGAUUCUUUCUUUAGGUACAGGAAAAAUAAGAAUGUUGAUGAAAAAAAAUGCAAGUUUUGAAGACUUCUUUCUUCUACUUGGAUUUUCUAACUGGCCUCAUCUGGAAGUAGUUCUCUUUGUGGUUAUCUUGA\
) } def
/len { sequence length } bind def

/coor [
[157.25195312 182.00842285]
[161.44815063 167.60731506]
[171.03851318 156.07366943]
[184.43235779 149.32052612]
[199.41159058 148.46850586]
[214.17034912 145.78912354]
[199.93376160 141.06477356]
[185.69717407 136.34042358]
[171.46058655 131.61607361]
[157.22399902 126.89171600]
[142.98741150 122.16736603]
[128.75080872 117.44300842]
[107.96896362 137.98936462]
[74.72209167 136.01913452]
[63.51238632 145.98620605]
[52.30268097 155.95327759]
[41.09297943 165.92034912]
[36.75452423 173.96813965]
[29.62930870 175.95391846]
[18.26519775 185.74458313]
[6.90108442 195.53523254]
[-4.46302795 205.32589722]
[-15.82713985 215.11654663]
[-27.19125175 224.90721130]
[-28.11342049 240.68457031]
[-39.97713470 251.12620544]
[-55.74386597 250.03727722]
[-66.05949402 238.06382751]
[-64.80393219 222.30949402]
[-52.72209167 212.12104797]
[-36.98191071 213.54309082]
[-25.61779594 203.75244141]
[-14.25368404 193.96177673]
[-2.88957167 184.17112732]
[8.47454071 174.38046265]
[19.83865356 164.58981323]
[31.12590599 154.71064758]
[42.33560944 144.74357605]
[53.54531479 134.77650452]
[64.75502014 124.80943298]
[62.84219742 117.55745697]
[48.33818817 121.38285828]
[44.51302719 106.87878418]
[59.01655579 103.05351257]
[57.10373688 95.80153656]
[42.43641663 92.65993500]
[27.76909256 89.51833344]
[13.10177135 86.37672424]
[-1.56555009 83.23512268]
[-16.23287201 80.09352112]
[-30.90019417 76.95191193]
[-45.56751633 73.81031036]
[-56.36819458 84.82615662]
[-71.41497803 88.23170471]
[-85.90650177 82.94026184]
[-95.21855927 70.64029694]
[-96.37972260 55.25669479]
[-89.01945496 41.69830322]
[-75.48639679 34.29155350]
[-60.09889984 35.39991379]
[-47.76705551 44.66971207]
[-42.42591095 59.14299011]
[-27.75858879 62.28459167]
[-13.09126759 65.42619324]
[1.57605386 68.56780243]
[16.24337578 71.70940399]
[30.91069794 74.85100555]
[45.57801819 77.99261475]
[60.24534225 81.13421631]
[69.71206665 75.72373199]
[79.31413269 73.48654938]
[72.95716095 59.90019989]
[66.60018158 46.31385040]
[60.24320984 32.72750473]
[53.88623428 19.14115524]
[47.52925873 5.55480623]
[40.64639282 -7.77283907]
[33.24813843 -20.82143402]
[25.84988403 -33.87002945]
[18.45163155 -46.91862488]
[3.04152822 -49.57620621]
[-7.01550341 -61.55076981]
[-6.97084093 -77.18828583]
[3.15442729 -89.10520935]
[18.57946014 -91.67472076]
[32.02102661 -83.68358612]
[37.13243103 -68.90496826]
[31.50022697 -54.31687927]
[38.89847946 -41.26828384]
[46.29673386 -28.21968842]
[53.69498825 -15.17109203]
[60.18771744 -28.69309044]
[74.77109528 -32.20381546]
[86.70629883 -23.11805916]
[87.20455170 -8.12633610]
[75.89896393 1.73184121]
[61.11560822 -0.80216926]
[67.47257996 12.78417969]
[73.82955933 26.37052727]
[80.18653107 39.95687485]
[86.54351044 53.54322433]
[92.90048218 67.12957001]
[101.87254333 66.42378998]
[110.71048737 68.12283325]
[118.78131866 72.10501099]
[125.50697327 78.08510590]
[130.40574646 85.63481140]
[133.12677002 94.21338654]
[133.47517395 103.20642090]
[147.71176147 107.93077087]
[161.94834900 112.65512848]
[176.18493652 117.37947845]
[190.42152405 122.10383606]
[204.65811157 126.82818604]
[218.89471436 131.55253601]
[233.82879639 130.14791870]
[246.93481445 122.85186005]
[260.04083252 115.55580902]
[268.33505249 102.08300781]
[283.21875000 102.65276337]
[296.32476807 95.35670471]
[309.43078613 88.06065369]
[322.53680420 80.76459503]
[335.64282227 73.46853638]
[338.01528931 62.84300995]
[345.68914795 55.43308258]
[355.95938110 53.51480103]
[365.38558960 57.48487091]
[378.71322632 50.60200119]
[392.04086304 43.71913528]
[405.36853027 36.83626556]
[418.69616699 29.95339775]
[423.25827026 14.82188320]
[437.22308350 7.42190266]
[452.30551147 12.14373398]
[459.55743408 26.18599701]
[454.67642212 41.21766663]
[440.55825806 48.32072067]
[425.57904053 43.28104401]
[412.25140381 50.16390991]
[398.92373657 57.04677963]
[385.59609985 63.92964554]
[372.26846313 70.81251526]
[363.05432129 87.80680847]
[342.93887329 86.57455444]
[329.83285522 93.87060547]
[316.72683716 101.16666412]
[303.62081909 108.46271515]
[290.51480103 115.75877380]
[283.15802002 128.70970154]
[267.33688354 128.66181946]
[254.23086548 135.95787048]
[241.12484741 143.25392151]
[239.89952087 150.65315247]
[254.89904785 150.53363037]
[269.89901733 150.49806213]
[275.94641113 164.22500610]
[265.79635620 175.26930237]
[251.60911560 170.40007019]
[237.44886780 165.45161438]
[236.22352600 172.85084534]
[246.27790833 183.98231506]
[256.33227539 195.11378479]
[266.38662720 206.24525452]
[276.44100952 217.37672424]
[291.43298340 222.43156433]
[294.22213745 237.06268311]
[304.27648926 248.19415283]
[319.60769653 246.69076538]
[332.73104858 254.41287231]
[338.72012329 268.21847534]
[335.47036743 282.72976685]
[345.52474976 293.86123657]
[355.57910156 304.99270630]
[365.63348389 316.12417603]
[381.39581299 320.64981079]
[385.09454346 336.62637329]
[372.92477417 347.61859131]
[357.40570068 342.31857300]
[354.50201416 326.17855835]
[344.44763184 315.04708862]
[334.39328003 303.91558838]
[324.33889771 292.78411865]
[309.57284546 294.54541016]
[296.44583130 287.18707275]
[290.09451294 273.34820557]
[293.14501953 258.24853516]
[283.09066772 247.11706543]
[268.81784058 242.85841370]
[265.30953979 227.43109131]
[255.25517273 216.29962158]
[245.20080566 205.16815186]
[235.14642334 194.03668213]
[225.09205627 182.90521240]
[228.57888794 197.49430847]
[220.68505859 210.24922180]
[208.36010742 218.79881287]
[193.64830017 221.72502136]
[178.98980713 218.54249573]
[166.81594849 209.77909851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 115]
[7 114]
[8 113]
[9 112]
[10 111]
[11 110]
[12 109]
[14 40]
[15 39]
[16 38]
[17 37]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[45 69]
[46 68]
[47 67]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 97]
[77 91]
[78 90]
[79 89]
[80 88]
[116 153]
[117 152]
[118 151]
[120 149]
[121 148]
[122 147]
[123 146]
[124 145]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[167 188]
[168 187]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
