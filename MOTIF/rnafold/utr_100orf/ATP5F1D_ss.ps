%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACGUCCCUGCGCGUCGUCCUCCUCGCCCUCCAGGCCGCCCGCGCCGCGCCGGAGUCCGCUGUCCGCCAGCUACCCGCUUCCUGCCGCCCGCCGCUGCCAUGCUGCCCGCCGCGCUGCUCCGCCGCCCGGGACUUGGCCGCCUCGUCCGCCACGCCCGUGCCUAUGCCGAGGCCGCCGCCGCCCCGGCUGCCGCCUCUG\
) } def
/len { sequence length } bind def

/coor [
[75.28507996 131.27416992]
[68.94183350 123.18365479]
[65.03951263 113.98164368]
[63.71286774 104.36281586]
[64.90812683 95.01428223]
[68.39640045 86.56665802]
[56.20653152 77.82553864]
[44.01666260 69.08442688]
[31.82679367 60.34330750]
[19.63692474 51.60219193]
[5.15798092 56.04421997]
[-8.86338902 51.32640457]
[-20.77551270 60.44239807]
[-32.68763733 69.55838776]
[-44.59976196 78.67437744]
[-56.51188660 87.79036713]
[-63.18012238 104.95116425]
[-80.65335083 106.54650879]
[-92.42226410 115.84664917]
[-98.45259857 130.47352600]
[-113.23554230 132.29391479]
[-125.00445557 141.59405518]
[-136.77337646 150.89421082]
[-133.88879395 165.92543030]
[-138.33110046 180.57209778]
[-149.07945251 191.46847534]
[-163.66398621 196.11070251]
[-178.73326111 193.43199158]
[-190.82447815 184.04789734]
[-197.15916443 170.11483765]
[-196.28164673 154.83450317]
[-188.39358521 141.71821594]
[-175.30758667 133.77999878]
[-160.03073120 132.84399414]
[-146.07351685 139.12528992]
[-134.30459595 129.82514954]
[-122.53569031 120.52500153]
[-117.34714508 106.56333160]
[-101.72240448 104.07773590]
[-89.95349121 94.77759552]
[-88.23284149 82.79945374]
[-78.49774933 74.95549011]
[-65.62787628 75.87824249]
[-53.71575546 66.76225281]
[-41.80362701 57.64626312]
[-29.89150429 48.53027344]
[-17.97937965 39.41427994]
[-18.46849442 25.34177971]
[-10.94684601 13.43802547]
[-16.63317108 -0.44238135]
[-22.31949806 -14.32278824]
[-34.71077347 -24.15980148]
[-32.37574387 -38.87023544]
[-38.06206894 -52.75064468]
[-43.74839783 -66.63105011]
[-49.43472290 -80.51145935]
[-55.12104797 -94.39186096]
[-60.80737305 -108.27227020]
[-78.26033783 -108.32514954]
[-94.00241852 -120.22885895]
[-100.17583466 -141.37461853]
[-113.24327850 -148.73953247]
[-126.31072235 -156.10444641]
[-139.37817383 -163.46936035]
[-155.15502930 -160.55895996]
[-167.17219543 -171.18756104]
[-166.21113586 -187.20179749]
[-153.00909424 -196.31692505]
[-137.69354248 -191.54060364]
[-132.01325989 -176.53680420]
[-118.94581604 -169.17189026]
[-105.87837219 -161.80697632]
[-92.81092834 -154.44206238]
[-86.36488342 -158.27592468]
[-94.30171204 -171.00410461]
[-102.23854828 -183.73229980]
[-110.17538452 -196.46047974]
[-120.89431763 -206.95353699]
[-114.72133636 -220.62446594]
[-99.76185608 -219.52268982]
[-95.65849304 -205.09457397]
[-88.26325989 -192.04426575]
[-80.86802673 -178.99395752]
[-73.47279358 -165.94364929]
[-67.02674866 -169.77751160]
[-67.26002502 -184.77569580]
[-67.49330139 -199.77388000]
[-75.44428253 -213.45205688]
[-67.90585327 -226.29812622]
[-68.13912964 -241.29631042]
[-79.20550537 -252.25865173]
[-79.22842407 -267.47225952]
[-68.70930481 -277.95480347]
[-68.94258118 -292.95300293]
[-76.89356232 -306.63116455]
[-69.35512543 -319.47723389]
[-69.58840942 -334.47543335]
[-81.10919189 -345.29425049]
[-81.52203369 -361.09313965]
[-70.58200836 -372.49890137]
[-54.77962875 -372.74468994]
[-43.49017334 -361.68469238]
[-43.41147232 -345.88058472]
[-54.59022141 -334.70870972]
[-54.35694122 -319.71051025]
[-46.42264557 -307.10510254]
[-53.94439316 -293.18627930]
[-53.71111679 -278.18807983]
[-42.87107468 -268.03775024]
[-42.42084503 -252.83079529]
[-53.14094162 -241.52958679]
[-52.90766525 -226.53140259]
[-44.97336578 -213.92599487]
[-52.49511337 -200.00715637]
[-52.26183701 -185.00897217]
[-52.02856064 -170.01078796]
[-34.53278732 -151.74404907]
[-33.88167191 -129.11270142]
[-46.92696762 -113.95859528]
[-41.24064255 -100.07819366]
[-35.55431366 -86.19778442]
[-29.86798859 -72.31737518]
[-24.18166351 -58.43696976]
[-18.49533653 -44.55656052]
[-6.51078463 -35.71236801]
[-8.43909073 -20.00911522]
[-2.75276470 -6.12870741]
[2.93356133 7.75169945]
[17.96096420 11.32388210]
[27.88042450 23.48267555]
[28.37804031 39.41232300]
[40.56790924 48.15343857]
[52.75777817 56.89455414]
[64.94764709 65.63567352]
[77.13751221 74.37678528]
[99.29459381 62.35396194]
[126.10900116 68.43312836]
[143.63975525 92.51062775]
[158.63793945 92.27735138]
[173.63612366 92.04407501]
[188.63204956 91.69417572]
[203.62478638 91.22767639]
[211.66004944 80.41259003]
[224.27369690 76.26283264]
[236.78820801 80.08126068]
[244.69761658 90.25865173]
[259.69580078 90.02537537]
[274.69396973 89.79209137]
[286.84780884 79.32004547]
[302.58566284 82.43455505]
[309.83477783 96.74642944]
[303.03424072 111.27684021]
[287.40090942 114.87928009]
[274.92724609 104.79028320]
[259.92907715 105.02355957]
[244.93089294 105.25683594]
[233.75572205 117.82046509]
[216.61430359 118.42993164]
[204.09129333 106.22042084]
[189.09854126 106.68692017]
[182.50593567 110.03954315]
[173.86940002 107.04225922]
[158.87121582 107.27553558]
[143.87303162 107.50881195]
[140.19058228 114.04253387]
[155.18977356 113.88712311]
[162.82386780 126.79915619]
[155.45866394 139.86643982]
[140.45947266 140.02153015]
[132.82566833 127.10997772]
[129.14320374 133.64369202]
[136.71044922 146.59503174]
[144.27769470 159.54635620]
[151.84494019 172.49768066]
[159.41218567 185.44900513]
[173.05468750 193.46102905]
[172.79481506 208.35337830]
[180.36206055 221.30470276]
[194.00456238 229.31672668]
[193.74470520 244.20907593]
[201.31195068 257.16040039]
[208.87919617 270.11172485]
[216.44644165 283.06304932]
[229.65754700 293.68862915]
[223.10441589 309.32489014]
[206.26513672 307.35641479]
[203.49510193 290.63027954]
[195.92787170 277.67895508]
[188.36062622 264.72763062]
[180.79338074 251.77630615]
[167.69213867 244.69064331]
[167.41073608 228.87194824]
[159.84349060 215.92060852]
[146.74224854 208.83494568]
[146.46086121 193.01625061]
[138.89361572 180.06492615]
[131.32637024 167.11358643]
[123.75912476 154.16226196]
[116.19188690 141.21093750]
[104.89334869 142.89535522]
[93.82962799 141.61441040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 135]
[7 134]
[8 133]
[9 132]
[10 131]
[12 47]
[13 46]
[14 45]
[15 44]
[16 43]
[18 40]
[19 39]
[21 37]
[22 36]
[23 35]
[49 128]
[50 127]
[51 126]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[61 73]
[62 72]
[63 71]
[64 70]
[85 116]
[86 115]
[87 114]
[89 112]
[90 111]
[93 108]
[94 107]
[96 105]
[97 104]
[138 164]
[139 163]
[140 162]
[141 160]
[142 159]
[146 156]
[147 155]
[148 154]
[171 199]
[172 198]
[173 197]
[174 196]
[175 195]
[177 193]
[178 192]
[180 190]
[181 189]
[182 188]
[183 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
