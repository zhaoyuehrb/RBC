%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAGCGCAAGCCCCACGCCACGCGUCGCUGGUCCCAGGCAGCGAGUCGCUCGCGCGCCCCGCCGCCCGCCUGGCGACAGCUCCGCCGCGCACGCACAUGGAGGGGAGCGCGAGCCCCCCGGAAAAGCCCCGCGCCCGCCCUGCGGCUGCCGUGCUGUGCCGGGGCCCGGUAGAGCCGCUGGUCUUCCUGGCCAACU\
) } def
/len { sequence length } bind def

/coor [
[62.68153763 155.52770996]
[55.37718201 153.82583618]
[44.56335068 164.22108459]
[33.74951935 174.61633301]
[32.71336746 187.47924805]
[23.48424530 195.91513062]
[11.38208771 195.80072021]
[0.40550327 206.02395630]
[-10.57108116 216.24719238]
[-11.81016159 229.09214783]
[-21.17130661 237.38128662]
[-33.27014923 237.07583618]
[-44.40675354 247.12452698]
[-55.54335403 257.17321777]
[-52.44801712 272.15206909]
[-57.23418045 286.57391357]
[-68.52142334 296.59710693]
[-83.21190643 299.60467529]
[-97.34021759 294.88699341]
[-108.47682190 304.93569946]
[-119.61342621 314.98437500]
[-130.75003052 325.03305054]
[-135.03056335 333.11380005]
[-142.14265442 335.15075684]
[-153.43650818 345.02239990]
[-161.38301086 359.99868774]
[-177.97383118 356.50860596]
[-179.21292114 339.60000610]
[-163.30813599 333.72854614]
[-152.01428223 323.85693359]
[-140.79870605 313.89645386]
[-129.66210938 303.84777832]
[-118.52550507 293.79907227]
[-107.38890076 283.75039673]
[-110.63453674 269.21316528]
[-106.13796234 254.90802002]
[-95.01127625 244.70687866]
[-80.17503357 241.42318726]
[-65.59204102 246.03660583]
[-54.45543671 235.98791504]
[-43.31883621 225.93923950]
[-38.82652283 208.97929382]
[-20.79431915 205.27059937]
[-9.81773472 195.04736328]
[1.15884888 184.82412720]
[5.38286638 167.79537964]
[23.35427666 163.80249023]
[34.16810608 153.40725708]
[44.98193741 143.01200867]
[47.10600281 128.16316223]
[39.64020920 115.15309143]
[32.17441559 102.14302063]
[24.70862198 89.13294983]
[17.24282646 76.12287903]
[9.77703285 63.11281204]
[2.31123805 50.10274124]
[-5.15455627 37.09267426]
[-18.73402786 28.97426605]
[-18.35778618 14.08441353]
[-25.82357979 1.07434356]
[-33.28937531 -11.93572617]
[-40.75516891 -24.94579506]
[-54.33464050 -33.06420135]
[-53.95840073 -47.95405579]
[-61.42419434 -60.96412659]
[-69.29697418 -73.73202515]
[-77.56890106 -86.24503326]
[-92.79663086 -89.52436066]
[-101.00727844 -102.33216095]
[-97.78710175 -116.82926941]
[-106.05902100 -129.34226990]
[-120.12374115 -136.58755493]
[-120.68788910 -151.47148132]
[-128.95980835 -163.98448181]
[-137.23173523 -176.49748230]
[-145.50364685 -189.01049805]
[-153.77557373 -201.52349854]
[-169.33117676 -203.12269592]
[-180.18234253 -214.38264465]
[-181.20547485 -229.98672485]
[-171.91751099 -242.56716919]
[-156.70391846 -246.18386841]
[-142.74809265 -239.12915039]
[-136.63955688 -224.73402405]
[-141.26257324 -209.79542542]
[-132.99064636 -197.28240967]
[-124.71872711 -184.76940918]
[-116.44680023 -172.25640869]
[-108.17488098 -159.74339294]
[-94.70182037 -153.39312744]
[-93.54601288 -137.61419678]
[-85.27409363 -125.10118866]
[-70.67430115 -122.38426971]
[-62.10714340 -109.81213379]
[-65.05589294 -94.51695251]
[-56.78396988 -82.00395203]
[-54.05709457 -81.31507874]
[-51.44025421 -79.49922180]
[-49.36604691 -76.59336853]
[-48.24548340 -72.79100037]
[-48.41412354 -68.42991638]
[-40.94832993 -55.41984940]
[-27.90286255 -48.23200989]
[-27.74510002 -32.41159058]
[-20.27930450 -19.40151978]
[-12.81351089 -6.39145088]
[-5.34771633 6.61861897]
[7.69775105 13.80645847]
[7.85551310 29.62687874]
[15.32130814 42.63694763]
[22.78710175 55.64701843]
[30.25289726 68.65708923]
[37.71869278 81.66716003]
[45.18448639 94.67723083]
[52.65028000 107.68729401]
[60.11607361 120.69736481]
[83.05457306 69.49390411]
[121.38011932 87.31768036]
[135.98883057 83.91394043]
[150.59754944 80.51019287]
[165.20626831 77.10645294]
[179.81497192 73.70271301]
[194.42369080 70.29897308]
[200.53507996 56.15835190]
[213.64781189 48.41820908]
[228.62669373 49.86634445]
[239.74751282 59.73879623]
[254.35621643 56.33505630]
[268.96493530 52.93131638]
[275.07632446 38.79069519]
[288.18905640 31.05055046]
[303.16793823 32.49868774]
[314.28875732 42.37113953]
[328.89746094 38.96739960]
[343.50619507 35.56365967]
[355.19064331 24.89670944]
[369.34164429 29.54415321]
[383.95034790 26.14041138]
[398.55908203 22.73666954]
[413.16778564 19.33292770]
[427.22174072 9.85015774]
[440.22442627 20.72977829]
[433.36950684 36.23610687]
[416.57153320 33.94164276]
[401.96279907 37.34538651]
[387.35409546 40.74912643]
[372.74539185 44.15286636]
[362.10583496 54.57635880]
[346.90991211 50.17237091]
[332.30120850 53.57611465]
[317.69250488 56.97985458]
[312.08047485 70.75096130]
[299.28421021 78.67053223]
[284.10076904 77.52322388]
[272.36868286 67.54003143]
[257.75994873 70.94377136]
[243.15124512 74.34751129]
[237.53923035 88.11861420]
[224.74296570 96.03819275]
[209.55952454 94.89088440]
[197.82743835 84.90768433]
[183.21871948 88.31142426]
[168.61000061 91.71517181]
[154.00128174 95.11891174]
[139.39257812 98.52265167]
[124.78385925 101.92639160]
[130.29583740 108.80915833]
[133.77201843 117.94274902]
[134.54768372 128.73265076]
[145.19607544 139.29731750]
[155.84445190 149.86196899]
[166.49282837 160.42663574]
[181.99540710 167.29005432]
[179.69175720 184.08676147]
[162.91374207 186.52293396]
[155.92817688 171.07501221]
[145.27980042 160.51034546]
[134.63140869 149.94569397]
[123.98303223 139.38104248]
[117.66201782 143.41770935]
[98.69897461 155.52775574]
[103.80454254 169.63212585]
[108.91011810 183.73648071]
[114.01568604 197.84085083]
[119.12125397 211.94522095]
[132.98086548 220.02549744]
[135.16210938 235.91957092]
[123.99172974 247.43487549]
[108.03868103 245.73785400]
[99.54077911 232.13031006]
[105.01689148 217.05079651]
[99.91131592 202.94642639]
[94.80574799 188.84205627]
[89.70018005 174.73768616]
[84.59461212 160.63331604]
[77.29025269 158.93145752]
[78.56725311 173.87699890]
[64.74774170 179.70974731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 49]
[3 48]
[4 47]
[7 45]
[8 44]
[9 43]
[12 41]
[13 40]
[14 39]
[19 34]
[20 33]
[21 32]
[22 31]
[24 30]
[25 29]
[50 116]
[51 115]
[52 114]
[53 113]
[54 112]
[55 111]
[56 110]
[57 109]
[59 107]
[60 106]
[61 105]
[62 104]
[64 102]
[65 101]
[66 96]
[67 95]
[70 92]
[71 91]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[118 166]
[119 165]
[120 164]
[121 163]
[122 162]
[123 161]
[127 157]
[128 156]
[129 155]
[133 151]
[134 150]
[135 149]
[137 147]
[138 146]
[139 145]
[140 144]
[169 179]
[170 178]
[171 177]
[172 176]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
