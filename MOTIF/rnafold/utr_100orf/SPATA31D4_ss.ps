%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCUCUGUGAUGCAGGCCUGUGCUUACAGUUAAGCCUGGGCACCCUCAGUGCUCAGUUGCUUCAGGCAGCUGAGCUAUUCAGACCAUGGAGAAUAUCCUCUGUUUUCUGAACAGCUAUACUGAGACAGGGCUGAGCCCUGACUCACAUUGUUUGGAUAUUGACCUCAACUUCAUCUGCUUGAGUG\
) } def
/len { sequence length } bind def

/coor [
[39.10020828 325.81506348]
[41.61425400 306.59710693]
[41.86624146 291.59921265]
[42.11822891 276.60134888]
[42.37021637 261.60345459]
[42.62220383 246.60557556]
[33.28625488 231.75648499]
[42.86356354 216.04020691]
[42.86356354 201.04020691]
[42.73756790 186.04074097]
[42.48558044 171.04286194]
[42.23359299 156.04496765]
[41.98160553 141.04708862]
[28.38994789 134.70147705]
[16.73011589 144.13801575]
[5.07028294 153.57455444]
[-6.58954906 163.01109314]
[-18.24938202 172.44763184]
[-29.58562469 182.27055359]
[-40.58548355 192.46873474]
[-51.58534241 202.66693115]
[-62.58520126 212.86512756]
[-66.90558624 228.68493652]
[-82.83274841 232.59101868]
[-93.98219299 220.56512451]
[-88.88432312 204.97846985]
[-72.78339386 201.86526489]
[-61.78353500 191.66706848]
[-50.78367615 181.46888733]
[-39.78381729 171.27069092]
[-39.55334091 168.45704651]
[-38.18269730 165.56640625]
[-35.63733673 163.03785706]
[-32.04370499 161.31466675]
[-27.68592262 160.78781128]
[-16.02609062 151.35125732]
[-4.36625862 141.91471863]
[7.29357338 132.47817993]
[18.95340538 123.04164124]
[14.00771523 108.88041687]
[-0.99175525 108.75441742]
[-15.99122620 108.62842560]
[-30.99069595 108.50242615]
[-45.99016953 108.37642670]
[-58.39132309 118.55438232]
[-74.05004883 115.06385040]
[-80.95431519 100.58245850]
[-73.80774689 86.21909332]
[-58.09259415 82.99210358]
[-45.86417007 93.37695312]
[-30.86469841 93.50295258]
[-15.86522770 93.62895203]
[-0.86575699 93.75495148]
[14.13371372 93.88095093]
[18.48044777 79.52455902]
[5.93020964 71.30923462]
[-6.62002850 63.09391403]
[-19.17026711 54.87858963]
[-31.72050476 46.66326904]
[-44.27074432 38.44794464]
[-56.82098007 30.23262405]
[-69.37121582 22.01730156]
[-85.93505096 18.40126228]
[-87.04565430 1.48372984]
[-71.09671021 -4.26670933]
[-61.15589523 9.46706295]
[-48.60565948 17.68238640]
[-36.05541992 25.89770889]
[-23.50518227 34.11302948]
[-10.95494366 42.32835388]
[1.59529400 50.54367447]
[14.14553165 58.75899887]
[26.69577026 66.97431946]
[40.12321854 60.28824615]
[41.13045883 45.32210159]
[42.13769913 30.35595703]
[43.14493561 15.38981342]
[36.35177231 1.10123479]
[44.92623520 -11.07775688]
[45.93347549 -26.04390144]
[46.94071579 -41.01004410]
[47.94795227 -55.97618866]
[48.95519257 -70.94232941]
[49.96243286 -85.90847778]
[39.84004974 -97.74803162]
[41.07472992 -112.91148376]
[52.42432022 -122.48866272]
[53.43156052 -137.45480347]
[54.43880081 -152.42095947]
[55.44603729 -167.38710022]
[56.45327759 -182.35324097]
[57.46051788 -197.31938171]
[46.87341690 -209.05348206]
[47.76789093 -224.83242798]
[59.61325836 -235.29487610]
[75.38187408 -234.23362732]
[85.71850586 -222.27832031]
[84.49060059 -206.52178955]
[72.42665863 -196.31214905]
[71.41941833 -181.34600830]
[70.41218567 -166.37985229]
[69.40494537 -151.41371155]
[68.39770508 -136.44757080]
[67.39046478 -121.48143005]
[77.35440826 -110.46981812]
[76.54611969 -95.27767181]
[64.92857361 -84.90123749]
[63.92133713 -69.93509674]
[62.91409683 -54.96894836]
[61.90685654 -40.00280762]
[60.89962006 -25.03666115]
[59.89237976 -10.07051754]
[66.75759125 3.14758229]
[58.11108017 16.39705276]
[57.10384369 31.36319733]
[56.09660339 46.32934189]
[55.08936310 61.29548645]
[75.55879974 49.36460114]
[97.87810516 46.87867737]
[118.11093140 53.28615189]
[133.07009888 66.54674530]
[140.81831360 83.63143921]
[155.48876953 80.50454712]
[170.15924072 77.37765503]
[184.82971191 74.25076294]
[196.71379089 63.80666733]
[210.77436829 68.72087097]
[225.44483948 65.59397888]
[240.11529541 62.46708679]
[254.78576660 59.34019470]
[269.45623779 56.21330261]
[284.12670898 53.08641052]
[298.35745239 43.87108612]
[311.15209961 54.99463654]
[304.00515747 70.36856842]
[287.25360107 67.75687408]
[272.58312988 70.88376617]
[257.91265869 74.01065826]
[243.24218750 77.13755035]
[228.57173157 80.26444244]
[213.90126038 83.39133453]
[203.06651306 93.61177063]
[187.95660400 88.92122650]
[173.28613281 92.04811859]
[158.61566162 95.17501068]
[143.94520569 98.30190277]
[143.86749268 103.11571503]
[143.26405334 107.89218903]
[142.14210510 112.57408142]
[140.51510620 117.10527039]
[138.40255737 121.43147278]
[150.06239319 130.86801147]
[161.72222900 140.30455017]
[177.31695557 142.97190857]
[182.34259033 156.99304199]
[194.00242615 166.42958069]
[208.95419312 162.27935791]
[223.47804260 167.74169922]
[231.98927307 180.71623230]
[231.21513367 196.21398926]
[221.45329285 208.27575684]
[206.45739746 212.26354980]
[191.99365234 206.64396667]
[183.62367249 193.57785034]
[184.56588745 178.08941650]
[172.90605164 168.65287781]
[158.14530945 166.66049194]
[152.28567505 151.96438599]
[140.62585449 142.52784729]
[128.96601868 133.09130859]
[110.16900635 148.01615906]
[83.90349579 151.73822021]
[56.97948837 140.79510498]
[57.23147583 155.79298401]
[57.48346329 170.79086304]
[57.73545074 185.78875732]
[61.01418686 194.33735657]
[57.86356354 201.04020691]
[57.86356354 216.04020691]
[66.42233276 225.70780945]
[66.10178375 238.21441650]
[57.62008667 246.85755920]
[57.36809921 261.85543823]
[57.11611176 276.85333252]
[56.86412430 291.85122681]
[56.61213684 306.84909058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[8 179]
[9 178]
[10 176]
[11 175]
[12 174]
[13 173]
[14 39]
[15 38]
[16 37]
[17 36]
[18 35]
[19 30]
[20 29]
[21 28]
[22 27]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[74 117]
[75 116]
[76 115]
[77 114]
[79 112]
[80 111]
[81 110]
[82 109]
[83 108]
[84 107]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[122 146]
[123 145]
[124 144]
[125 143]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[132 136]
[151 170]
[152 169]
[153 168]
[155 166]
[156 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
