%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUACGUCACUUCCUGGAGACUGGUUGAAUCCGGAAGUGACCCUAGAGAAACGAGUUGUGGCUGAGGACCCCGGCGGCAGACGCAGGUUCGGGACCAUGAGCUGGAUUCCUUUUAAGAUUGGGCAGCCCAAGAAACAGAUUGUGCCCAAAACAGUGGAGAGAGACUUUGAAAGGGAGUAUGGAAAACUUCAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[98.82823181 121.69027710]
[92.39344788 122.94395447]
[81.87133026 133.63436890]
[84.27202606 148.85090637]
[77.33351898 162.40489197]
[63.90324402 169.19396973]
[49.22623825 166.80157471]
[38.70411301 177.49198914]
[28.18199158 188.18240356]
[17.65986824 198.87281799]
[7.13774443 209.56323242]
[-3.38437891 220.25364685]
[-13.90650272 230.94406128]
[-24.42862511 241.63446045]
[-34.95074844 252.32487488]
[-38.74580383 260.64566040]
[-45.72563934 263.09976196]
[-56.41605377 273.62188721]
[-67.10646820 284.14401245]
[-62.60809326 298.77355957]
[-65.43506622 313.81570435]
[-74.93775940 325.81393433]
[-88.93253326 332.01110840]
[-104.20348358 330.98318481]
[-117.24145508 322.96633911]
[-125.05043030 309.80279541]
[-125.83595276 294.51745605]
[-119.41751862 280.62277222]
[-107.27003479 271.31164551]
[-92.18490601 268.72369385]
[-77.62858582 273.45361328]
[-66.93817902 262.93148804]
[-56.24776459 252.40936279]
[-45.64116287 241.80274963]
[-35.11903763 231.11235046]
[-24.59691429 220.42193604]
[-14.07479191 209.73152161]
[-3.55266833 199.04110718]
[6.96945524 188.35069275]
[17.49157906 177.66027832]
[28.01370239 166.96986389]
[38.53582382 156.27944946]
[35.91086960 141.64225769]
[42.48601532 128.10595703]
[55.92820740 120.95327759]
[71.18091583 123.11224365]
[81.70304108 112.42183685]
[67.34375000 116.75897980]
[54.01347351 123.63674927]
[39.13805008 121.70756531]
[28.00321007 111.65692902]
[24.56553650 97.05615997]
[30.04654884 83.09340668]
[42.49865723 74.73009491]
[57.49721909 74.93799591]
[69.71228027 83.64262390]
[83.30816650 89.97916412]
[74.41455078 77.90010834]
[65.52093506 65.82105255]
[56.62731171 53.74200058]
[47.73369217 41.66294479]
[38.84007645 29.58389282]
[29.85091019 17.57577324]
[20.76676369 5.63934565]
[8.10750008 3.13215375]
[0.78775805 -7.00570059]
[2.29256392 -19.01503372]
[-6.60105515 -31.09408760]
[-15.49467373 -43.17314148]
[-24.38829231 -55.25219345]
[-33.28190994 -67.33124542]
[-44.12527466 -68.34265137]
[-52.44691086 -75.02207184]
[-55.64557648 -84.97154999]
[-52.89330673 -94.82572174]
[-61.39920425 -107.18087006]
[-69.90510559 -119.53602600]
[-85.35742188 -123.84940338]
[-91.48654175 -138.67552185]
[-83.59071350 -152.64102173]
[-67.72695160 -155.03279114]
[-56.06457138 -144.01606750]
[-57.54995346 -128.04191589]
[-49.04405594 -115.68677521]
[-40.53815842 -103.33161926]
[-22.51951218 -96.33327484]
[-21.20285797 -76.22486877]
[-12.30923939 -64.14581299]
[-3.41562009 -52.06676102]
[5.47799873 -39.98770523]
[14.37161732 -27.90865326]
[30.80168533 -21.75556755]
[32.70319366 -3.44479942]
[41.78733826 8.49162769]
[48.34687042 11.91410542]
[50.91912842 20.69027328]
[59.81274796 32.76932526]
[68.70636749 44.84838104]
[77.59998322 56.92743301]
[86.49360657 69.00648499]
[95.38722229 81.08554077]
[108.82713318 87.74654388]
[123.82524109 87.50855255]
[138.82334900 87.27056122]
[153.82147217 87.03256989]
[168.81958008 86.79458618]
[183.81768799 86.55659485]
[198.73799133 85.01233673]
[213.46691895 82.17356873]
[228.19584656 79.33480072]
[242.92477417 76.49603271]
[257.65371704 73.65726471]
[272.38262939 70.81849670]
[287.11157227 67.97972870]
[301.84051514 65.14096069]
[316.56942749 62.30218887]
[331.29837036 59.46342087]
[327.42987061 46.74052429]
[332.50534058 31.05835152]
[347.69897461 18.05668831]
[361.34347534 11.82546425]
[374.98794556 5.59423876]
[388.63241577 -0.63698637]
[402.27691650 -6.86821175]
[415.92138672 -13.09943676]
[429.56585693 -19.33066177]
[432.60369873 -23.60166931]
[436.58074951 -26.03044891]
[440.63510132 -26.56822014]
[444.01104736 -25.51645470]
[457.93658447 -31.09139061]
[471.86209106 -36.66632843]
[475.53308105 -51.74291992]
[487.38650513 -61.75669479]
[502.86450195 -62.85716248]
[516.01550293 -54.62115860]
[521.78259277 -40.21560669]
[517.94830322 -25.17972565]
[505.98690796 -15.29512310]
[490.49789429 -14.36262989]
[477.43704224 -22.74080849]
[463.51150513 -17.16587257]
[449.58599854 -11.59093571]
[435.79708862 -5.68618202]
[422.15261841 0.54504317]
[408.50814819 6.77626848]
[394.86364746 13.00749397]
[381.21917725 19.23871803]
[367.57470703 25.46994400]
[353.93020630 31.70116997]
[354.10870361 39.19904327]
[367.27401733 46.38750839]
[354.46566772 54.19479752]
[354.64413452 61.69267273]
[368.56967163 67.26760864]
[382.49517822 72.84254456]
[395.55603027 64.46437073]
[411.04507446 65.39685822]
[423.00643921 75.28146362]
[426.84072876 90.31734467]
[421.07363892 104.72290039]
[407.92266846 112.95890045]
[392.44464111 111.85843658]
[380.59121704 101.84465790]
[376.92025757 86.76806641]
[362.99472046 81.19313049]
[349.06921387 75.61819458]
[334.13711548 74.19235229]
[319.40820312 77.03112030]
[304.67926025 79.86988831]
[289.95034790 82.70865631]
[275.22140503 85.54742432]
[260.49246216 88.38619232]
[245.76354980 91.22496033]
[231.03462219 94.06372833]
[216.30567932 96.90250397]
[201.57675171 99.74127197]
[215.29608154 105.80593872]
[224.70233154 117.49022675]
[227.69758606 132.18812561]
[223.61383057 146.62152100]
[213.36184692 157.57127380]
[199.22819519 162.59521484]
[184.36515808 160.57283020]
[172.08769226 151.95518494]
[165.13407898 138.66430664]
[165.05522156 123.66452026]
[171.86871338 110.30126953]
[184.05567932 101.55470276]
[169.05757141 101.79269409]
[154.05944824 102.03068542]
[139.06134033 102.26867676]
[124.06323242 102.50666046]
[109.06511688 102.74465179]
[110.09967041 106.33410645]
[109.73821259 110.56938934]
[107.74311829 114.93370056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[17 33]
[18 32]
[19 31]
[57 101]
[58 100]
[59 99]
[60 98]
[61 97]
[62 96]
[63 94]
[64 93]
[67 91]
[68 90]
[69 89]
[70 88]
[71 87]
[75 85]
[76 84]
[77 83]
[102 194]
[103 193]
[104 192]
[105 191]
[106 190]
[107 189]
[108 177]
[109 176]
[110 175]
[111 174]
[112 173]
[113 172]
[114 171]
[115 170]
[116 169]
[117 168]
[120 150]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[126 144]
[130 143]
[131 142]
[132 141]
[154 167]
[155 166]
[156 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
