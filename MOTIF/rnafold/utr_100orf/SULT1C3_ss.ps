%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGUGUCCUGGAGCUGGACCUGGCUCUGGGUUUCCAGGAAGCAGUUUGACUAAAGGCAGCAAGCUGCUUCCUCUGCUGCCUGAGAUACCAGAUUCCCAAUGGCGAAGAUUGAGAAAAACGCUCCCACGAUGGAAAAAAAGCCAGAACUGUUUAACAUCAUGGAAGUAGAUGGAGUCCCUACGUUGAUAUUAUCAAAAG\
) } def
/len { sequence length } bind def

/coor [
[10.02266884 386.52313232]
[2.52845073 386.22866821]
[-3.21180058 400.08688354]
[-8.95205212 413.94506836]
[-9.34624290 423.08013916]
[-14.89284134 427.97470093]
[-20.85005951 441.74102783]
[-26.80727768 455.50735474]
[-32.76449585 469.27368164]
[-25.60131454 483.17413330]
[-29.09944725 498.41543579]
[-41.60718536 507.80108643]
[-57.21875763 506.89947510]
[-68.56285095 496.13632202]
[-70.28314209 480.59365845]
[-61.56735229 467.61022949]
[-46.53081512 463.31646729]
[-40.57359695 449.55014038]
[-34.61637878 435.78381348]
[-28.65916061 422.01748657]
[-22.81024551 408.20480347]
[-17.06999397 394.34661865]
[-11.32974243 380.48843384]
[-21.45660019 365.29833984]
[-24.80593300 347.96539307]
[-21.31077957 331.27639771]
[-11.96898842 317.73791504]
[1.38072693 309.19995117]
[16.40312195 306.60690308]
[18.28312111 291.72518921]
[20.16311836 276.84347534]
[14.08197975 263.24682617]
[23.48789024 250.52519226]
[25.36788750 235.64347839]
[27.24788666 220.76176453]
[29.12788582 205.88003540]
[31.00788307 190.99832153]
[22.00157928 179.00305176]
[7.18625498 176.65652466]
[-7.62906981 174.31001282]
[-22.44439507 171.96350098]
[-37.25971985 169.61697388]
[-52.07504654 167.27046204]
[-66.89037323 164.92395020]
[-81.70569611 162.57742310]
[-96.52101898 160.23091125]
[-111.33634949 157.88439941]
[-126.15167236 155.53787231]
[-140.96699524 153.19136047]
[-149.94169617 154.94059753]
[-155.99584961 150.68988037]
[-170.77249146 148.11093140]
[-183.55702209 157.40240479]
[-199.15383911 154.84992981]
[-208.30961609 141.96788025]
[-205.59239197 126.39893341]
[-192.61425781 117.37985992]
[-177.07490540 120.26153564]
[-168.19355774 133.33428955]
[-153.41691589 135.91323853]
[-138.62048340 138.37603760]
[-123.80515289 140.72254944]
[-108.98983002 143.06907654]
[-94.17450714 145.41558838]
[-79.35917664 147.76210022]
[-64.54385376 150.10862732]
[-49.72852707 152.45513916]
[-34.91320419 154.80165100]
[-20.09787750 157.14817810]
[-5.28255320 159.49468994]
[9.53277206 161.84120178]
[24.34809685 164.18772888]
[38.33768082 158.77555847]
[47.71632385 147.06910706]
[57.09496307 135.36264038]
[66.47360229 123.65618896]
[75.85224152 111.94973755]
[85.23088074 100.24327850]
[88.27268982 85.55493927]
[84.31459808 71.08657837]
[80.35649872 56.61821365]
[76.17163086 42.21380997]
[71.76102448 27.87691498]
[60.30796432 16.96188354]
[63.96089172 2.52216840]
[59.55028534 -11.81472683]
[44.82674026 -16.71338272]
[35.82189560 -29.35033035]
[35.99829865 -44.86640167]
[45.28812027 -57.29535294]
[60.11923218 -61.85800171]
[74.78877258 -56.79991150]
[83.65599823 -44.06602097]
[83.31128693 -28.55277634]
[73.88717651 -16.22533226]
[78.29778290 -1.88843656]
[89.43537140 8.00112247]
[86.09792328 23.46630859]
[90.50852966 37.80320358]
[94.24294281 40.79334259]
[96.13336182 46.16469193]
[94.82485962 52.66011810]
[98.78295898 67.12847900]
[102.74105072 81.59683990]
[110.15769958 82.71188354]
[112.38778687 67.87858582]
[109.92517090 53.08211899]
[123.23654175 46.16783524]
[133.92572021 56.69120407]
[127.22108459 70.10867310]
[124.99099731 84.94197083]
[132.40765381 86.05701447]
[140.44505310 73.39209747]
[148.48245239 60.72717667]
[143.58197021 45.87728500]
[149.42129517 31.37086296]
[163.24328613 24.05740356]
[178.52160645 27.39009476]
[188.04231262 39.79534531]
[187.31001282 55.41577148]
[176.67047119 66.87588501]
[161.14736938 68.76457977]
[153.10997009 81.42949677]
[145.07257080 94.09441376]
[153.50381470 106.50062561]
[168.23812866 103.68990326]
[182.97242737 100.87918854]
[195.07833862 90.69303894]
[209.02999878 95.90843964]
[223.76431274 93.09771729]
[238.49862671 90.28700256]
[253.23292542 87.47628021]
[262.12741089 74.68856049]
[277.11013794 72.04798889]
[289.24645996 80.60633087]
[303.98077393 77.79560852]
[318.71508789 74.98488617]
[326.60165405 64.77138519]
[338.93820190 62.73755264]
[349.01751709 69.43605042]
[363.79415894 66.85711670]
[372.67550659 53.78435135]
[388.21484375 50.90267944]
[401.19299316 59.92174911]
[403.91021729 75.49069977]
[394.75442505 88.37275696]
[379.15762329 90.92521667]
[366.37307739 81.63375092]
[351.59643555 84.21269226]
[338.76528931 96.17907715]
[321.52581787 89.71920013]
[306.79150391 92.52991486]
[292.05718994 95.34063721]
[283.92364502 107.76566315]
[269.02102661 110.82602692]
[256.04364014 102.21058655]
[241.30934143 105.02130890]
[226.57502747 107.83202362]
[211.84072876 110.64274597]
[200.78871155 120.62785339]
[185.78315735 115.61349487]
[171.04884338 118.42421722]
[156.31452942 121.23493195]
[115.31762695 131.62728882]
[96.93733978 109.62191772]
[87.55870056 121.32837677]
[78.18006134 133.03483582]
[68.80142212 144.74128723]
[59.42277908 156.44773865]
[50.04413986 168.15420532]
[45.88960266 192.87831116]
[44.00960541 207.76004028]
[42.12960815 222.64175415]
[40.24960709 237.52348328]
[38.36960983 252.40519714]
[44.31628036 267.06628418]
[35.04483795 278.72348022]
[33.16484070 293.60519409]
[31.28484344 308.48690796]
[46.69457626 315.69219971]
[58.03341293 329.43002319]
[62.58544922 347.47982788]
[58.81203842 366.52706909]
[46.77116776 382.77120972]
[51.40642548 397.03707886]
[56.04167938 411.30291748]
[60.67693329 425.56875610]
[65.31218719 439.83459473]
[75.95716095 453.03009033]
[66.22418213 466.91192627]
[50.19049072 461.40219116]
[51.04634094 444.46984863]
[46.41108704 430.20401001]
[41.77583313 415.93817139]
[37.14057541 401.67233276]
[32.50532150 387.40646362]
[25.01110458 387.11203003]
[29.08253098 401.54888916]
[16.61027908 409.88214111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[6 20]
[7 19]
[8 18]
[9 17]
[29 179]
[30 178]
[31 177]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[51 60]
[52 59]
[73 170]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 104]
[80 103]
[81 102]
[82 99]
[83 98]
[85 96]
[86 95]
[112 124]
[113 123]
[114 122]
[125 163]
[126 162]
[127 161]
[129 159]
[130 158]
[131 157]
[132 156]
[135 153]
[136 152]
[137 151]
[140 149]
[141 148]
[184 196]
[185 195]
[186 194]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
