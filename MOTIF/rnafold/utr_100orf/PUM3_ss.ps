%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCGGGGGCGGAGCAAGGCAAGGAAGCGGAAGCGGAGAGGCGGUCGGGAUCCGCUGCGCGAGCUGUCUCGGUCCCACGUGUGCGAGUUGCUACGAUGGAAGUUAAAGGGAAAAAGCAAUUCACAGGAAAGAGUACAAAGACAGCACAAGAAAAAAACAGAUUUCAUAAAAAUAGUGAUUCUGGUUCUUCAAAGA\
) } def
/len { sequence length } bind def

/coor [
[65.45283508 156.30947876]
[60.96254349 141.99734497]
[63.91026306 127.28983307]
[73.56915283 115.81351471]
[87.55631256 110.39836121]
[72.90258026 113.60277557]
[58.27487183 116.92392731]
[43.67410660 120.36161041]
[29.07334328 123.79929352]
[14.47257710 127.23697662]
[-0.12818761 130.67465210]
[-11.78783417 141.36872864]
[-25.94958687 136.75418091]
[-40.55035019 140.19186401]
[-55.15111542 143.62954712]
[-60.87755966 155.82827759]
[-72.41764069 162.40238953]
[-85.44366455 161.14457703]
[-95.21739197 152.73764038]
[-109.87112427 155.94206238]
[-124.52484894 159.14646912]
[-127.18119049 168.50483704]
[-133.03375244 176.20280457]
[-141.24198914 181.20465088]
[-150.65225220 182.85690308]
[-159.95985413 180.97337341]
[-167.88993835 175.85519409]
[-173.37208557 168.24354553]
[-188.20027161 170.50732422]
[-203.02847290 172.77111816]
[-211.28878784 182.68701172]
[-223.69396973 184.26191711]
[-233.51850891 177.19224548]
[-248.38092041 179.21929932]
[-263.24331665 181.24633789]
[-278.10574341 183.27337646]
[-292.96813965 185.30043030]
[-307.83053589 187.32746887]
[-312.04730225 201.96095276]
[-321.85641479 213.61001587]
[-335.55844116 220.25639343]
[-350.77941895 220.74856567]
[-364.88217163 215.00123596]
[-375.42337036 204.01019287]
[-380.57666016 189.67968750]
[-379.44921875 174.49255371]
[-372.23635864 161.08007812]
[-360.18774414 151.76603699]
[-345.39093018 148.16415405]
[-330.40948486 150.89848328]
[-317.83908081 159.49525452]
[-309.85757446 172.46505737]
[-294.99517822 170.43801880]
[-280.13278198 168.41098022]
[-265.27035522 166.38392639]
[-250.40795898 164.35688782]
[-235.54556274 162.32984924]
[-222.27943420 150.84922791]
[-205.29225159 157.94293213]
[-190.46406555 155.67913818]
[-175.63587952 153.41534424]
[-164.97694397 135.98590088]
[-144.63815308 132.01078796]
[-127.72926331 144.49273682]
[-113.07553864 141.28833008]
[-98.42180634 138.08390808]
[-89.96364594 123.55384064]
[-73.28668213 119.55258942]
[-58.58879852 129.02879333]
[-43.98803329 125.59110260]
[-29.38726807 122.15341949]
[-18.77196693 111.70523071]
[-3.56587005 116.07389069]
[11.03489494 112.63620758]
[25.63566017 109.19853210]
[40.23642349 105.76084900]
[54.83718872 102.32316589]
[60.63421631 97.72477722]
[69.69816589 98.94904327]
[84.35189819 95.74462891]
[96.47307587 86.90851593]
[104.00757599 73.93811035]
[111.54207611 60.96770859]
[119.07657623 47.99731064]
[126.61107635 35.02690887]
[131.87849426 20.98218346]
[134.73150635 6.25600433]
[137.58450317 -8.47017574]
[140.43751526 -23.19635582]
[143.29051208 -37.92253494]
[146.14350891 -52.64871597]
[148.99652100 -67.37489319]
[151.84951782 -82.10107422]
[138.27931213 -88.69741821]
[126.87937927 -98.58195496]
[118.42700958 -111.08074951]
[113.49848938 -125.34160614]
[112.42985535 -140.39221191]
[115.29396820 -155.20635986]
[121.89554596 -168.77403259]
[131.78448486 -180.17013550]
[144.28654480 -188.61767578]
[158.54930115 -193.54069519]
[173.60031128 -194.60351562]
[188.41336060 -191.73368835]
[201.97848511 -185.12686157]
[213.37077332 -175.23352051]
[221.81349182 -162.72821045]
[226.73098755 -148.46354675]
[227.78800964 -133.41212463]
[224.91244507 -118.60018921]
[218.30039978 -105.03762054]
[208.40266418 -93.64915466]
[195.89407349 -85.21126556]
[181.62751770 -80.29927063]
[166.57569885 -79.24806976]
[163.72270203 -64.52188873]
[160.86968994 -49.79571152]
[158.01669312 -35.06953430]
[155.16368103 -20.34335327]
[152.31068420 -5.61717272]
[149.45768738 9.10900688]
[146.60467529 23.83518791]
[152.17559814 28.85662842]
[161.73945618 17.30099297]
[171.30329895 5.74535608]
[175.36723328 -8.69363499]
[189.77706909 -12.85976601]
[200.91908264 -2.81707358]
[198.26681519 11.94658089]
[184.32548523 17.48312759]
[173.82145691 28.19132042]
[163.31742859 38.89951324]
[168.88835144 43.92095184]
[183.24028015 39.55953217]
[190.46139526 25.50139618]
[205.53343201 20.74650192]
[219.51443481 28.11583900]
[224.10972595 43.23731232]
[216.59297180 57.13961792]
[201.42376709 61.57476807]
[187.60169983 53.91146469]
[173.24977112 58.27288818]
[151.76831055 55.21104050]
[139.58148193 42.56140900]
[132.04698181 55.53181076]
[124.51247406 68.50221252]
[116.97797394 81.47261047]
[109.44347382 94.44301605]
[115.38404083 97.90509033]
[119.41328430 105.18926239]
[130.47468567 115.32066345]
[141.53610229 125.45206451]
[154.64555359 120.55503082]
[168.51956177 121.78070831]
[180.45346069 128.83288574]
[188.14549255 140.28511047]
[190.14068604 153.86883545]
[186.10581970 166.92279053]
[197.00425720 177.22929382]
[207.90269470 187.53579712]
[218.80113220 197.84230042]
[231.69993591 198.26498413]
[240.56587219 207.08335876]
[241.02635193 219.17839050]
[251.75904846 229.65737915]
[262.49176025 240.13636780]
[273.22445679 250.61535645]
[288.76614380 248.88629150]
[301.75448608 257.59475708]
[306.05676270 272.62887573]
[299.64157104 286.88998413]
[285.53796387 293.64443970]
[270.40524292 289.70297241]
[261.38864136 276.92666626]
[262.74545288 261.34805298]
[252.01275635 250.86906433]
[241.28005981 240.39007568]
[230.54736328 229.91108704]
[213.33789062 226.50102234]
[208.49462891 208.74073792]
[197.59619141 198.43423462]
[186.69775391 188.12773132]
[175.79931641 177.82122803]
[160.43684387 182.81475830]
[144.56022644 179.36289978]
[132.51960754 168.31465149]
[127.66276550 152.61343384]
[131.40469360 136.51347351]
[120.34329224 126.38207245]
[109.28188324 116.25066376]
[118.65695953 127.95997620]
[121.24378967 142.73522949]
[116.40450287 156.93316650]
[105.33238220 167.05285645]
[90.75757599 170.59898376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 80]
[6 79]
[7 77]
[8 76]
[9 75]
[10 74]
[11 73]
[13 71]
[14 70]
[15 69]
[19 66]
[20 65]
[21 64]
[28 61]
[29 60]
[30 59]
[33 57]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[134 143]
[135 142]
[151 191]
[152 190]
[153 189]
[159 184]
[160 183]
[161 182]
[162 181]
[165 179]
[166 178]
[167 177]
[168 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
