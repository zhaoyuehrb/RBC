%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGUCAGGAGGUGGUGCGCCUCGCGCGGCAGAUUCGAAGCUAGGGCGGGGCCCGCGGGCUGAGGCAGCGGCUGUGGCGGCGACGCUGGGCGUGAGGUGGCGGCGGCCGCGCCCUGGUUGGGUCCCCACUGCUCUCGGGGGCGCCAUGGACGAGGCCGUGGGCGACCUGAAGCAGGCGCUUCCCUGUGUGGCCGAGUCGCCAACGGUCCACGUGGAGGUGCAUCAGCGCGGCAGCAGCACUGCAA\
) } def
/len { sequence length } bind def

/coor [
[92.99752808 403.79934692]
[85.62127686 417.09066772]
[73.71702576 426.54357910]
[59.10009384 430.71655273]
[43.99945450 428.97326660]
[30.71784210 421.57952881]
[21.28060913 409.66284180]
[17.12686348 395.04043579]
[18.89002037 379.94210815]
[26.30121422 366.67022705]
[38.23028946 357.24868774]
[52.85815048 353.11416626]
[54.57839966 338.21313477]
[56.29865265 323.31210327]
[58.01890564 308.41107178]
[59.73915482 293.51004028]
[61.45940781 278.60900879]
[63.17965698 263.70797729]
[64.80472565 248.79627991]
[66.33454895 233.87449646]
[58.30855179 218.25735474]
[69.24758911 203.43130493]
[70.58673096 188.49119568]
[71.92586517 173.55108643]
[73.26500702 158.61099243]
[74.60414124 143.67088318]
[75.94328308 128.73078918]
[68.27799988 115.83723450]
[54.51320648 109.87650299]
[42.26979446 113.88541412]
[30.93593407 108.65502167]
[26.34746742 97.47817993]
[12.65991306 91.34215546]
[-1.02764094 85.20612335]
[-14.71519566 79.07009125]
[-28.40275002 72.93406677]
[-42.09030533 66.79803467]
[-48.65801620 67.08962250]
[-53.64907837 64.43313599]
[-56.04594421 60.32654190]
[-69.57232666 53.84295273]
[-83.09870911 47.35935974]
[-96.62509155 40.87577057]
[-110.15148163 34.39218140]
[-123.67786407 27.90859222]
[-137.20425415 21.42500305]
[-150.73063660 14.94141388]
[-164.25701904 8.45782375]
[-180.04580688 9.47002697]
[-188.17837524 -3.00837994]
[-201.70475769 -9.49196911]
[-215.23114014 -15.97555923]
[-228.75752258 -22.45914841]
[-243.36296082 -25.87695122]
[-258.36172485 -26.06850624]
[-273.36050415 -26.26006126]
[-283.11096191 -17.83978462]
[-295.58520508 -18.29493713]
[-304.12890625 -26.83782578]
[-319.12399292 -27.22090340]
[-333.26452637 -18.91562271]
[-347.39187622 -27.24326134]
[-346.97308350 -43.63705826]
[-332.43893433 -51.23248291]
[-318.74093628 -42.21601105]
[-303.74581909 -41.83293152]
[-288.78887939 -51.03085709]
[-273.16894531 -41.25883865]
[-258.17016602 -41.06728363]
[-243.17140198 -40.87572861]
[-238.19139099 -55.02491760]
[-250.00369263 -64.26989746]
[-261.81597900 -73.51487732]
[-273.62826538 -82.75986481]
[-285.44058228 -92.00484467]
[-301.07678223 -94.41732025]
[-306.33056641 -108.35456085]
[-318.14285278 -117.59954071]
[-331.06417847 -112.83827972]
[-344.54479980 -115.05979919]
[-355.08682251 -123.57945251]
[-360.00830078 -136.09251404]
[-358.12530518 -149.29685974]
[-369.81857300 -158.69194031]
[-381.51184082 -168.08700562]
[-393.20510864 -177.48208618]
[-409.33956909 -182.68931580]
[-408.80230713 -199.63473511]
[-392.37039185 -203.80944824]
[-383.81002808 -189.17535400]
[-372.11676025 -179.78027344]
[-360.42349243 -170.38520813]
[-348.73022461 -160.99012756]
[-333.02478027 -165.80302429]
[-317.39151001 -160.24266052]
[-308.06747437 -146.31684875]
[-308.89788818 -129.41183472]
[-297.08560181 -120.16685486]
[-282.29428101 -118.41564941]
[-276.19558716 -103.81713867]
[-264.38330078 -94.57215881]
[-252.57099915 -85.32717133]
[-240.75871277 -76.08219147]
[-228.94641113 -66.83721161]
[-222.27394104 -35.98553085]
[-208.74755859 -29.50194359]
[-195.22117615 -23.01835442]
[-181.69477844 -16.53476334]
[-166.87348938 -18.01071739]
[-157.77342224 -5.06856012]
[-144.24703979 1.41502953]
[-130.72065735 7.89861917]
[-117.19427490 14.38220882]
[-103.66789246 20.86579895]
[-90.14150238 27.34938812]
[-76.61511993 33.83297729]
[-63.08873749 40.31656647]
[-49.56235123 46.80015564]
[-35.95427322 53.11048126]
[-22.26671982 59.24650955]
[-8.57916546 65.38253784]
[5.10838842 71.51856995]
[18.79594231 77.65460205]
[32.48349762 83.79062653]
[49.83056259 81.07199097]
[60.47394180 96.11170959]
[74.23873901 102.07244110]
[83.64898682 80.12525940]
[106.93973541 75.32920837]
[117.06181335 64.25926971]
[127.18389130 53.18932724]
[137.30596924 42.11938858]
[147.42803955 31.04944992]
[150.89822388 22.62545204]
[157.75076294 19.90382957]
[168.01338196 8.96405602]
[178.27600098 -1.97571754]
[188.53862000 -12.91549110]
[198.80123901 -23.85526466]
[202.59165955 -41.88599396]
[219.59059143 -46.28464508]
[229.71266174 -57.35458374]
[233.18284607 -65.77857971]
[240.03538513 -68.50020599]
[250.29800415 -79.43997955]
[260.56060791 -90.37975311]
[270.82324219 -101.31952667]
[281.08587646 -112.25930023]
[291.34848022 -123.19907379]
[290.59353638 -138.98532104]
[301.28396606 -150.62535095]
[317.07733154 -151.21334839]
[328.60366821 -140.40045166]
[329.02465820 -124.60176849]
[318.09051514 -113.19037628]
[302.28826904 -112.93645477]
[292.02563477 -101.99668121]
[281.76303101 -91.05690765]
[271.50039673 -80.11713409]
[261.23776245 -69.17736053]
[250.97515869 -58.23758698]
[240.78260803 -47.23250580]
[230.66052246 -36.16256714]
[230.89137268 -24.08273315]
[222.56929016 -14.77916718]
[209.74101257 -13.59264469]
[199.47839355 -2.65287137]
[189.21577454 8.28690243]
[178.95315552 19.22667503]
[168.69053650 30.16644859]
[158.49798584 41.17152786]
[148.37590027 52.24146652]
[138.25382996 63.31140518]
[128.13174438 74.38134766]
[118.00967407 85.45128632]
[121.52066040 100.03459167]
[135.57186890 105.28471375]
[149.62306213 110.53483582]
[163.67427063 115.78495026]
[177.72546387 121.03507233]
[191.77667236 126.28519440]
[205.82786560 131.53530884]
[219.87907410 136.78543091]
[235.51445007 134.36770630]
[244.72856140 146.07025146]
[258.77975464 151.32037354]
[272.83096313 156.57049561]
[286.88217163 161.82061768]
[295.99264526 161.89018250]
[301.07855225 167.22853088]
[315.06158447 172.65766907]
[329.04458618 178.08679199]
[343.02758789 183.51593018]
[357.01058960 188.94506836]
[369.42239380 179.78256226]
[384.81890869 178.80769348]
[398.28723145 186.33154297]
[405.52963257 199.95326233]
[404.23507690 215.32621765]
[394.81668091 227.54495239]
[380.27981567 232.71051025]
[365.26315308 229.17459106]
[354.55841064 218.06549072]
[351.58148193 202.92807007]
[337.59844971 197.49893188]
[323.61544800 192.06980896]
[309.63244629 186.64067078]
[295.64944458 181.21154785]
[281.63204956 175.87181091]
[267.58084106 170.62168884]
[253.52964783 165.37156677]
[239.47843933 160.12144470]
[224.84809875 162.91468811]
[214.62895203 150.83663940]
[200.57774353 145.58651733]
[186.52655029 140.33639526]
[172.47534180 135.08627319]
[158.42414856 129.83615112]
[144.37294006 124.58603668]
[130.32174683 119.33591461]
[116.27054596 114.08579254]
[109.92375183 118.08182526]
[117.91561890 130.77552795]
[105.22179413 138.76719666]
[97.23017883 126.07389069]
[90.88338470 130.06991577]
[89.54425049 145.01002502]
[88.20510864 159.95013428]
[86.86597443 174.89022827]
[85.52683258 189.83033752]
[84.18769836 204.77044678]
[91.83687592 215.13685608]
[90.42816925 227.53964233]
[81.25633240 235.40431213]
[79.72650909 250.32609558]
[81.96092987 259.15859985]
[78.08068848 265.42825317]
[76.36043549 280.32928467]
[74.64019012 295.23031616]
[72.91993713 310.13134766]
[71.19968414 325.03237915]
[69.47943115 339.93341064]
[67.75917816 354.83444214]
[81.06019592 362.19317627]
[90.52875519 374.08499146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 243]
[13 242]
[14 241]
[15 240]
[16 239]
[17 238]
[18 237]
[19 235]
[20 234]
[22 231]
[23 230]
[24 229]
[25 228]
[26 227]
[27 226]
[28 127]
[29 126]
[32 124]
[33 123]
[34 122]
[35 121]
[36 120]
[37 119]
[40 118]
[41 117]
[42 116]
[43 115]
[44 114]
[45 113]
[46 112]
[47 111]
[48 110]
[50 108]
[51 107]
[52 106]
[53 105]
[54 70]
[55 69]
[56 68]
[59 66]
[60 65]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[77 98]
[78 97]
[83 93]
[84 92]
[85 91]
[86 90]
[129 175]
[130 174]
[131 173]
[132 172]
[133 171]
[135 170]
[136 169]
[137 168]
[138 167]
[139 166]
[141 163]
[142 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
[176 221]
[177 220]
[178 219]
[179 218]
[180 217]
[181 216]
[182 215]
[183 214]
[185 212]
[186 211]
[187 210]
[188 209]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
