%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUGACUUCCGGCCUCGGAGGCCGGCGUCGGCUGUUGCAGCCUGCUGCGCGCCCAGGGGUCCCGCGGGUUUUCGGGCGCAGGGUGGCGCCCGCGGCAGGCGGCGGCCAUGAACUUCUCCGAGGUAUUCAAGCUCUCCAGCUUACUCUGCAAGUUCUCCCCGGACGGCAAGUACCUGGCUUCCUGUGUCCAGUACCGGUUAGUGGUCC\
) } def
/len { sequence length } bind def

/coor [
[68.23812866 295.03732300]
[56.79333115 284.87490845]
[51.39303970 270.55374146]
[53.27820206 255.36477661]
[62.01561737 242.79830933]
[75.59749603 235.74201965]
[75.59749603 220.74201965]
[75.59749603 205.74201965]
[66.01654816 191.04000854]
[75.35394287 175.16964722]
[75.12847900 160.17134094]
[74.90300751 145.17303467]
[67.17636871 132.31617737]
[54.03828812 125.07801819]
[40.90021133 117.83985901]
[27.76213264 110.60169983]
[14.62405586 103.36354065]
[1.48597848 96.12538910]
[-11.65209866 88.88722992]
[-24.79017639 81.64907074]
[-37.92825317 74.41091156]
[-51.06632996 67.17276001]
[-64.20937347 74.99629974]
[-79.40342712 75.18952942]
[-92.56668854 67.80068207]
[-100.21298218 54.90145111]
[-100.37494659 40.00717926]
[-113.51302338 32.76902008]
[-126.65110016 25.53086472]
[-135.67913818 24.13039970]
[-139.93106079 18.08388901]
[-152.95886230 10.64907074]
[-165.98666382 3.21425319]
[-179.01445007 -4.22056437]
[-192.04225159 -11.65538216]
[-205.07005310 -19.09020042]
[-218.09783936 -26.52501678]
[-223.32073975 -26.49692345]
[-227.60328674 -28.29601860]
[-230.40675354 -31.25775719]
[-231.53443909 -34.60006332]
[-244.21383667 -42.61460495]
[-256.89321899 -50.62915039]
[-269.57263184 -58.64369583]
[-282.25201416 -66.65824127]
[-294.93142700 -74.67278290]
[-307.61080933 -82.68732452]
[-320.29022217 -90.70187378]
[-332.96960449 -98.71641541]
[-373.58767700 -78.08330536]
[-387.49920654 -83.69310760]
[-401.41070557 -89.30291748]
[-415.32220459 -94.91271973]
[-429.23373413 -100.52252960]
[-443.14523315 -106.13233948]
[-452.27609253 -106.43965912]
[-457.22265625 -111.93243408]
[-471.04827881 -117.75070953]
[-484.87390137 -123.56898499]
[-498.69949341 -129.38725281]
[-514.42041016 -127.60861206]
[-523.15008545 -139.67686462]
[-536.97564697 -145.49513245]
[-553.16986084 -142.91056824]
[-563.29376221 -155.81167603]
[-556.93280029 -170.92689514]
[-540.63055420 -172.70698547]
[-531.15740967 -159.32075500]
[-517.33178711 -153.50247192]
[-502.59976196 -155.69728088]
[-492.88122559 -143.21287537]
[-479.05560303 -137.39459229]
[-465.23001099 -131.57632446]
[-451.40438843 -125.75804901]
[-437.53543091 -120.04384613]
[-423.62393188 -114.43403625]
[-409.71240234 -108.82423401]
[-395.80090332 -103.21442413]
[-381.88940430 -97.60462189]
[-367.97787476 -91.99481201]
[-363.06643677 -97.66293335]
[-348.33206177 -114.66729736]
[-355.86459351 -127.63885498]
[-363.39709473 -140.61039734]
[-370.92962646 -153.58195496]
[-384.11221313 -164.24288940]
[-377.51724243 -179.86154175]
[-360.68328857 -177.84796143]
[-357.95806885 -161.11447144]
[-350.42553711 -148.14292908]
[-342.89303589 -135.17137146]
[-335.36050415 -122.19982147]
[-324.95504761 -111.39581299]
[-312.27566528 -103.38126373]
[-299.59628296 -95.36672211]
[-286.91687012 -87.35218048]
[-274.23748779 -79.33763885]
[-261.55807495 -71.32308960]
[-248.87869263 -63.30854797]
[-236.19929504 -55.29400253]
[-223.51989746 -47.27945709]
[-210.66302490 -39.55281448]
[-197.63523865 -32.11799622]
[-184.60743713 -24.68317795]
[-171.57963562 -17.24836159]
[-158.55184937 -9.81354332]
[-145.52404785 -2.37872577]
[-132.49624634 5.05609179]
[-119.41294098 12.39278603]
[-106.27486420 19.63094330]
[-93.13678741 26.86910057]
[-80.46022797 19.04794884]
[-65.47116089 18.61921692]
[-52.19224930 25.79814339]
[-44.23735428 38.74481964]
[-43.82817459 54.03467941]
[-30.69009590 61.27283859]
[-17.55201912 68.51099396]
[-4.41394186 75.74915314]
[8.72413540 82.98731232]
[21.86221313 90.22546387]
[35.00028992 97.46362305]
[48.13836670 104.70178223]
[61.27644730 111.93994141]
[74.41452026 119.17809296]
[67.02013397 103.85280609]
[68.42943573 86.25463867]
[78.89690399 71.25221252]
[96.08578491 63.31736374]
[115.56557465 65.20299530]
[127.87078857 56.62502289]
[140.17601013 48.04704666]
[152.48121643 39.46907043]
[164.78643799 30.89109612]
[171.25433350 15.82131100]
[187.56877136 14.15673256]
[196.94686890 27.60973549]
[189.74124146 42.34102631]
[173.36441040 43.19631195]
[161.05918884 51.77428818]
[148.75398254 60.35226440]
[136.44876099 68.93023682]
[124.14354706 77.50821686]
[126.20240021 84.72008514]
[140.62622070 80.60263062]
[144.74343872 95.02651215]
[130.32009888 99.14383698]
[132.37895203 106.35571289]
[147.35820007 107.14450836]
[162.33743286 107.93329620]
[172.43023682 99.90058136]
[184.89117432 100.86687469]
[193.08142090 109.77024078]
[208.04711914 110.78410339]
[223.01281738 111.79795837]
[237.97851562 112.81181335]
[250.96052551 103.38594818]
[266.38510132 107.79747009]
[272.41986084 122.66223907]
[264.43542480 136.57727051]
[248.55676270 138.86814880]
[236.96466064 127.77751160]
[221.99896240 126.76364899]
[207.03326416 125.74979401]
[192.06756592 124.73593903]
[176.75158691 133.30126953]
[161.54864502 122.91254425]
[146.56939697 122.12374878]
[131.59014893 121.33496094]
[123.14949799 126.31404877]
[114.37331390 128.56262207]
[124.93998718 139.20901489]
[135.50665283 149.85539246]
[146.07331848 160.50178528]
[161.64849854 160.72900391]
[172.21293640 171.67648315]
[171.90032959 186.52363586]
[182.46699524 197.17001343]
[193.03367615 207.81640625]
[208.60061646 206.33183289]
[221.45046997 215.24336243]
[225.51591492 230.34324646]
[218.87736511 244.50175476]
[204.66935730 251.03370667]
[189.60046387 246.85488892]
[180.78576660 233.93843079]
[182.38728333 218.38307190]
[171.82061768 207.73669434]
[161.25395203 197.09030151]
[146.40486145 197.29132080]
[135.53709412 186.64489746]
[135.42694092 171.06845093]
[124.86026764 160.42207336]
[114.29360199 149.77568054]
[103.72692871 139.12930298]
[89.90131378 144.94757080]
[90.12677765 159.94587708]
[90.35224915 174.94418335]
[99.04876709 184.47096252]
[98.92692566 196.96871948]
[90.59749603 205.74201965]
[90.59749603 220.74201965]
[90.59749603 235.74201965]
[104.17937469 242.79830933]
[112.91679382 255.36477661]
[114.80194855 270.55374146]
[109.40165710 284.87490845]
[97.95686340 295.03732300]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 203]
[7 202]
[8 201]
[10 198]
[11 197]
[12 196]
[13 125]
[14 124]
[15 123]
[16 122]
[17 121]
[18 120]
[19 119]
[20 118]
[21 117]
[22 116]
[27 111]
[28 110]
[29 109]
[31 108]
[32 107]
[33 106]
[34 105]
[35 104]
[36 103]
[37 102]
[41 101]
[42 100]
[43 99]
[44 98]
[45 97]
[46 96]
[47 95]
[48 94]
[49 93]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[55 75]
[57 74]
[58 73]
[59 72]
[60 71]
[62 69]
[63 68]
[82 92]
[83 91]
[84 90]
[85 89]
[130 143]
[131 142]
[132 141]
[133 140]
[134 139]
[148 169]
[149 168]
[150 167]
[153 165]
[154 164]
[155 163]
[156 162]
[171 195]
[172 194]
[173 193]
[174 192]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
