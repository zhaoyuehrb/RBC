%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUGAGACCGGGCAAGAGGGGCGGGACUGGUGCGGCCGAGUGACAGUUGACCGGUUUUAACCAAGUGACUGGUUCUAGCCACGUUAUGUGCGGCCCAGCCAUGUUCCCUGCCGGUCCUCCGUGGCCCAGAGUCCGAGUCGUGCAGGUGCUGUGGGCCCUGCUGGCAGUGCUCCUGGCGUCGUGGA\
) } def
/len { sequence length } bind def

/coor [
[206.26979065 181.67968750]
[200.17428589 182.32075500]
[194.10409546 181.21800232]
[188.55126953 178.43777466]
[183.97235107 174.18328857]
[180.75088501 168.77995300]
[179.16528320 162.65051270]
[179.36499023 156.28204346]
[166.45896912 148.63778687]
[153.55293274 140.99354553]
[140.64691162 133.34928894]
[127.74089050 125.70504761]
[120.36886597 125.00000763]
[114.68460083 117.82369232]
[101.90811157 109.96485138]
[93.92127228 108.75550079]
[88.98533630 101.86643219]
[76.34194946 93.79519653]
[67.40523529 91.80886078]
[63.55630112 85.48197174]
[51.04955292 77.20059204]
[38.54280090 68.91921997]
[26.03605270 60.63784027]
[13.52930260 52.35646439]
[1.02255285 44.07508850]
[-11.55295277 35.89849472]
[-24.19633675 27.82726097]
[-33.13304901 25.84092140]
[-36.98198318 19.51403427]
[-49.48873520 11.23265743]
[-61.99548340 2.95128059]
[-74.50223541 -5.33009672]
[-83.40451050 -7.46548891]
[-87.14718628 -13.85580730]
[-99.51380920 -22.34501457]
[-115.27014923 -23.77622986]
[-121.38413239 -37.35814285]
[-133.75076294 -45.84735107]
[-146.63349915 -41.87614059]
[-159.26490784 -45.99575424]
[-167.09616089 -56.48666000]
[-167.44361877 -69.37876892]
[-179.66667175 -78.07343292]
[-191.88970947 -86.76810455]
[-204.11276245 -95.46276855]
[-216.33580017 -104.15743256]
[-236.45748901 -105.13513947]
[-243.76899719 -123.02323151]
[-256.27572632 -131.30461121]
[-268.78250122 -139.58598328]
[-281.42587280 -147.65722656]
[-294.20236206 -155.51606750]
[-306.97885132 -163.37490845]
[-319.75534058 -171.23373413]
[-332.53182983 -179.09257507]
[-345.30831909 -186.95141602]
[-358.08480835 -194.81025696]
[-370.86129761 -202.66909790]
[-384.33282471 -195.29255676]
[-399.68740845 -195.65609741]
[-412.79473877 -203.66192627]
[-420.12902832 -217.15650940]
[-419.71737671 -232.50988770]
[-411.67050171 -245.59205627]
[-398.15298462 -252.88400269]
[-382.80096436 -252.42422485]
[-369.74407959 -244.33638000]
[-362.49453735 -230.79608154]
[-363.00244141 -215.44558716]
[-350.22595215 -207.58674622]
[-337.44946289 -199.72790527]
[-324.67297363 -191.86906433]
[-311.89648438 -184.01022339]
[-299.11999512 -176.15138245]
[-286.34353638 -168.29255676]
[-273.56704712 -160.43371582]
[-268.77819824 -160.65560913]
[-263.80273438 -157.85789490]
[-260.50109863 -152.09274292]
[-247.99436951 -143.81135559]
[-235.48760986 -135.52998352]
[-225.67352295 -138.46148682]
[-215.65892029 -135.43338013]
[-208.83213806 -127.21726227]
[-207.64112854 -116.38047791]
[-195.41809082 -107.68581390]
[-183.19505310 -98.99114227]
[-170.97200012 -90.29647827]
[-158.74896240 -81.60181427]
[-142.31008911 -85.10908508]
[-128.13648987 -75.45988464]
[-125.26155090 -58.21397400]
[-112.89492798 -49.72476578]
[-98.02313232 -48.90075684]
[-91.02460480 -34.71163559]
[-78.65798187 -26.22243118]
[-66.22085571 -17.83684731]
[-53.71410751 -9.55546951]
[-41.20735931 -1.27409220]
[-28.70060730 7.00728464]
[-16.12510109 15.18387604]
[-3.48171782 23.25511169]
[3.86262870 24.20609474]
[9.30393028 31.56833839]
[21.81068039 39.84971619]
[34.31742859 48.13109207]
[46.82418060 56.41246796]
[59.33092880 64.69384766]
[71.83767700 72.97521973]
[84.41318512 81.15181732]
[97.05657196 89.22305298]
[109.76695251 97.18836212]
[122.54343414 105.04720306]
[135.38514709 112.79901886]
[148.29116821 120.44326782]
[161.19718933 128.08752441]
[174.10321045 135.73176575]
[187.00923157 143.37602234]
[211.31938171 141.09037781]
[222.71531677 161.88510132]
[236.42529297 167.97088623]
[250.13525391 174.05667114]
[263.84524536 180.14244080]
[277.55520630 186.22822571]
[291.26516724 192.31401062]
[304.97512817 198.39978027]
[318.68511963 204.48556519]
[332.44546509 210.45658875]
[346.25518799 216.31242371]
[360.06494141 222.16825867]
[373.87469482 228.02409363]
[387.73287964 233.76435852]
[401.63854980 239.38861084]
[415.54421997 245.01287842]
[426.67089844 236.85820007]
[440.26669312 235.28388977]
[452.76309204 240.59539795]
[460.93319702 251.30479431]
[462.72506714 264.54583740]
[476.53482056 270.40167236]
[490.34457397 276.25750732]
[504.15429688 282.11334229]
[513.29693604 282.58557129]
[518.14459229 288.18414307]
[531.85455322 294.26992798]
[545.56451416 300.35571289]
[559.27447510 306.44149780]
[572.98449707 312.52725220]
[582.11791992 313.15219116]
[586.87133789 318.83099365]
[600.47772217 325.14501953]
[614.08410645 331.45904541]
[630.99670410 332.64169312]
[634.54217529 349.22079468]
[619.59246826 357.21722412]
[607.77008057 345.06539917]
[594.16369629 338.75137329]
[580.55731201 332.43734741]
[566.89868164 326.23724365]
[553.18872070 320.15145874]
[539.47875977 314.06567383]
[525.76879883 307.97988892]
[512.05883789 301.89410400]
[498.29846191 295.92309570]
[484.48870850 290.06726074]
[470.67898560 284.21142578]
[456.86923218 278.35559082]
[443.08947754 287.26046753]
[426.55111694 286.19372559]
[413.77600098 275.37777710]
[409.91995239 258.91854858]
[396.01428223 253.29428101]
[382.10861206 247.67002869]
[374.71417236 248.07748413]
[368.01885986 241.83384705]
[354.20910645 235.97801208]
[340.39935303 230.12217712]
[326.58959961 224.26632690]
[319.18939209 224.55017090]
[312.59933472 218.19554138]
[298.88937378 212.10975647]
[285.17938232 206.02397156]
[271.46942139 199.93820190]
[257.75946045 193.85241699]
[244.04948425 187.76663208]
[230.33950806 181.68084717]
[216.62954712 175.59507751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 118]
[9 117]
[10 116]
[11 115]
[12 114]
[14 113]
[15 112]
[17 111]
[18 110]
[20 109]
[21 108]
[22 107]
[23 106]
[24 105]
[25 104]
[26 102]
[27 101]
[29 100]
[30 99]
[31 98]
[32 97]
[34 96]
[35 95]
[37 93]
[38 92]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[48 81]
[49 80]
[50 79]
[51 76]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[120 187]
[121 186]
[122 185]
[123 184]
[124 183]
[125 182]
[126 181]
[127 180]
[128 178]
[129 177]
[130 176]
[131 175]
[132 173]
[133 172]
[134 171]
[139 167]
[140 166]
[141 165]
[142 164]
[144 163]
[145 162]
[146 161]
[147 160]
[148 159]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
