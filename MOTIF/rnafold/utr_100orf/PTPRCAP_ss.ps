%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCUCGCUCGACACAGCCAGAGCUGGAGGUGGGUGCCCGGCACGGAGGGGCCUGCGGACCAAUGGCUCUGCCCUGCACCUUAGGGCUCGGGAUGCUGCUGGCCCUGCCAGGGGCCUUGGGCUCGGGUGGCAGCGCGGAGGACAGCGUGGGCUCCAGCUCUG\
) } def
/len { sequence length } bind def

/coor [
[66.17203522 263.71383667]
[76.89369965 274.20410156]
[79.54737854 288.96749878]
[73.14999390 302.53488159]
[60.07148361 309.88012695]
[45.15684128 308.28216553]
[33.93125534 298.33297729]
[30.55320549 283.71936035]
[23.13630486 296.75735474]
[15.71940517 309.79537964]
[20.14839745 324.96640015]
[12.47948265 338.78533936]
[-2.73750710 343.05368042]
[-16.47460175 335.23910522]
[-20.58182526 319.97781372]
[-12.62243748 306.32412720]
[2.68139958 302.37847900]
[10.09829903 289.34045410]
[17.51519775 276.30245972]
[23.91228676 262.73495483]
[29.25201988 248.71755981]
[34.59175491 234.70018005]
[39.93148804 220.68278503]
[45.27122498 206.66539001]
[50.61095810 192.64799500]
[55.95069122 178.63061523]
[61.29042435 164.61322021]
[66.63015747 150.59582520]
[71.96989441 136.57844543]
[77.30963135 122.56105042]
[69.52120972 109.74151611]
[54.62017441 108.02126312]
[39.71914673 106.30101013]
[24.81811333 104.58075714]
[9.91708183 102.86051178]
[-4.98394918 101.14025879]
[-13.91543961 103.27116394]
[-20.15293312 99.24167633]
[-35.01828003 97.23631287]
[-49.88362503 95.23094940]
[-60.50296783 106.54506683]
[-75.75074768 109.42341614]
[-89.76387787 102.75920105]
[-97.15402985 89.11496735]
[-95.07954407 73.73718262]
[-84.33808899 62.53893280]
[-69.05998230 59.82616806]
[-55.11996841 66.64199829]
[-47.87826157 80.36560822]
[-33.01291656 82.37097168]
[-18.14756966 84.37633514]
[-3.26369762 86.23922729]
[11.63733387 87.95948029]
[26.53836441 89.67972565]
[41.43939590 91.39997864]
[56.34042740 93.12023163]
[71.24146271 94.84048462]
[78.50415039 83.02843475]
[89.77304077 76.57690430]
[101.87575531 76.34549713]
[111.81627655 81.56235504]
[123.74566650 72.46897888]
[135.67506409 63.37559509]
[142.54693604 44.45716858]
[161.77742004 42.71720505]
[173.34976196 33.17356873]
[179.36689758 15.79307270]
[196.74807739 13.52050400]
[208.13549805 3.75695205]
[219.52290344 -6.00660038]
[230.91030884 -15.77015305]
[242.29771423 -25.53370476]
[253.68511963 -35.29725647]
[259.12542725 -50.15369034]
[273.82369995 -52.56406403]
[285.21112061 -62.32761765]
[296.59851074 -72.09117126]
[307.98593140 -81.85472107]
[319.27929688 -91.72689056]
[330.47760010 -101.70677948]
[341.67590332 -111.68666077]
[352.87420654 -121.66654968]
[355.33596802 -127.88384247]
[359.89920044 -131.36886597]
[364.69784546 -131.80413818]
[376.27020264 -141.34777832]
[387.84252930 -150.89141846]
[399.41485596 -160.43504333]
[410.98721313 -169.97868347]
[422.55953979 -179.52232361]
[434.13186646 -189.06596375]
[445.70422363 -198.60960388]
[457.27655029 -208.15322876]
[459.97463989 -214.27166748]
[464.66802979 -217.57934570]
[469.47982788 -217.83050537]
[481.40921021 -226.92388916]
[493.33862305 -236.01727295]
[499.62326050 -250.53671265]
[514.43572998 -252.09887695]
[526.36511230 -261.19226074]
[538.29449463 -270.28564453]
[550.22387695 -279.37902832]
[562.15325928 -288.47241211]
[571.08459473 -302.88308716]
[587.40454102 -298.29010010]
[587.50885010 -281.33648682]
[571.24664307 -276.54299927]
[559.31726074 -267.44964600]
[547.38787842 -258.35626221]
[535.45849609 -249.26286316]
[523.52911377 -240.16949463]
[518.09771729 -226.30047607]
[502.43200684 -224.08787537]
[490.50259399 -214.99449158]
[478.57321167 -205.90110779]
[466.82019043 -196.58090210]
[455.24786377 -187.03726196]
[443.67550659 -177.49362183]
[432.10317993 -167.94998169]
[420.53085327 -158.40635681]
[408.95849609 -148.86271667]
[397.38616943 -139.31907654]
[385.81381226 -129.77543640]
[374.24148560 -120.23180389]
[362.85409546 -110.46825409]
[351.65579224 -100.48836517]
[340.45748901 -90.50847626]
[329.25918579 -80.52859497]
[326.34423828 -73.69879913]
[317.74948120 -70.46731567]
[306.36206055 -60.70376205]
[294.97467041 -50.94020844]
[283.58724976 -41.17665482]
[278.96145630 -27.01857758]
[263.44866943 -23.90985107]
[252.06126404 -14.14629841]
[240.67385864 -4.38274574]
[229.28645325 5.38080692]
[217.89904785 15.14435959]
[206.51164246 24.90791130]
[205.26217651 36.96911621]
[195.81422424 45.19508743]
[182.89340210 44.74590683]
[171.32106018 54.28954315]
[171.25445557 64.56451416]
[165.39974976 73.27512360]
[155.50424194 77.38620758]
[144.76844788 75.30498505]
[132.83905029 84.39836884]
[120.90965271 93.49175262]
[118.07585907 118.06918335]
[91.32701874 127.90077972]
[85.98728180 141.91816711]
[80.64755249 155.93556213]
[75.30781555 169.95295715]
[69.96807861 183.97035217]
[64.62834930 197.98773193]
[59.28861237 212.00512695]
[53.94887924 226.02252197]
[48.60914612 240.03990173]
[43.26940918 254.05729675]
[37.92967606 268.07467651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 19]
[9 18]
[10 17]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[38 51]
[39 50]
[40 49]
[61 151]
[62 150]
[63 149]
[65 145]
[66 144]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[75 134]
[76 133]
[77 132]
[78 131]
[79 129]
[80 128]
[81 127]
[82 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[96 116]
[97 115]
[98 114]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
