%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCGUGAGGCGCGGGCGGCGGCGACCGCGGCGCCAGUGAGGGGGCCCUGGGGCCCGGGCGGCUCCGGGCCGGGGCCCCGCCGCGGGACGGACCAUGCUACGCUCCACUGGCUUCUUCCGGGCCAUUGACUGCCCCUAUUGGUCUGGGGCGCCCGGGGGGCCCUGCCGGCGGCCCUACUGCCACUUCCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[163.55322266 339.57192993]
[159.05537415 325.26217651]
[147.85775757 315.44064331]
[151.10095215 299.95541382]
[146.60310364 285.64566040]
[142.10525513 271.33587646]
[137.60740662 257.02612305]
[127.02549744 251.14916992]
[123.16577148 239.25440979]
[128.61878967 227.55665588]
[124.35087585 213.17663574]
[120.08296204 198.79661560]
[115.81504822 184.41659546]
[110.89187622 178.89184570]
[111.59595490 169.77180481]
[107.55907440 155.32524109]
[103.52218628 140.87866211]
[99.48530579 126.43208313]
[85.17553711 121.93423462]
[73.59947205 131.47334290]
[62.02340317 141.01246643]
[50.44733429 150.55157471]
[44.71768188 165.29882812]
[29.97510147 167.42144775]
[18.39903259 176.96057129]
[13.16310978 192.50138855]
[-2.96480250 195.47164917]
[-13.39368916 182.81581116]
[-7.39520597 167.55310059]
[8.85992146 165.38450623]
[20.43598938 155.84538269]
[25.33764267 141.78042603]
[40.90822220 138.97550964]
[52.48429108 129.43638611]
[64.06035614 119.89727783]
[75.63642883 110.35816956]
[74.55825043 102.93607330]
[62.78103256 112.22570038]
[48.84733582 106.67123413]
[46.69070816 91.82707214]
[58.46775055 82.53723145]
[72.40189362 88.09187317]
[71.32371521 80.66977692]
[57.51197052 74.81864929]
[43.70022583 68.96752167]
[29.88848305 63.11639023]
[16.07673836 57.26526260]
[2.26499343 51.41413116]
[-11.54675102 45.56300354]
[-25.35849571 39.71187210]
[-31.97601700 40.14337158]
[-37.05037308 37.54987335]
[-39.51436615 33.44548798]
[-53.13147736 27.15467834]
[-66.74858856 20.86386681]
[-80.36569977 14.57305527]
[-93.98281097 8.28224373]
[-107.59992218 1.99143291]
[-121.21702576 -4.29937840]
[-134.83413696 -10.59018898]
[-151.10771179 -8.56468391]
[-160.78147888 -21.80668068]
[-153.90388489 -36.69394684]
[-137.55001831 -37.91173935]
[-128.54333496 -24.20730019]
[-114.92621613 -17.91648865]
[-101.30910492 -11.62567711]
[-87.69199371 -5.33486605]
[-74.07489014 0.95594496]
[-60.45777512 7.24675608]
[-46.84066772 13.53756714]
[-33.22355652 19.82837868]
[-19.50736618 25.90012932]
[-5.69562197 31.75125885]
[8.11612225 37.60238647]
[21.92786789 43.45351791]
[35.73961258 49.30464554]
[49.55135727 55.15577316]
[63.36310196 61.00690460]
[77.17484283 66.85803223]
[89.54580688 58.37515259]
[89.06503296 43.38286209]
[88.58425903 28.39056778]
[88.10348511 13.39827442]
[76.85769653 2.62005711]
[76.58369446 -12.59110928]
[86.92838287 -23.24582863]
[86.44760895 -38.23812103]
[85.96683502 -53.23041534]
[85.36592865 -68.21837616]
[84.64492035 -83.20103455]
[70.95343018 -90.16082001]
[62.58959961 -103.04267120]
[61.80326080 -118.38141632]
[68.80593109 -132.05102539]
[81.71392822 -140.37443542]
[97.05506897 -141.11268616]
[110.70265961 -134.06721497]
[118.98556519 -121.13318634]
[119.67573547 -105.78981018]
[112.58750916 -92.16436768]
[99.62758636 -83.92204285]
[100.34858704 -68.93937683]
[103.81460571 -62.40124130]
[100.95912933 -53.71118927]
[101.43990326 -38.71889496]
[101.92067719 -23.72660255]
[112.92675781 -13.75656033]
[113.62790680 1.44090831]
[103.09577942 12.91750050]
[103.57655334 27.90979385]
[104.05732727 42.90208817]
[104.53810120 57.89437866]
[116.28089142 70.00941467]
[120.08276367 83.64457703]
[116.91974640 94.88682556]
[131.29975891 90.61891174]
[145.67977905 86.35099792]
[160.05979919 82.08308411]
[174.43981934 77.81517029]
[188.81983948 73.54725647]
[203.19985962 69.27934265]
[217.57987976 65.01142883]
[231.95988464 60.74351883]
[218.36940002 54.39540482]
[210.99748230 41.33191681]
[212.58866882 26.41654968]
[222.55058289 15.20225716]
[237.17440796 11.86408615]
[251.01576233 17.64482880]
[258.92153931 30.39233017]
[257.94842529 45.36073303]
[248.45771790 56.97799683]
[263.26544189 54.58399582]
[278.07318115 52.18999863]
[292.88088989 49.79600143]
[307.68862915 47.40200043]
[313.75662231 33.21810532]
[326.54257202 24.58539581]
[341.96646118 24.25853539]
[355.10662842 32.34182739]
[361.77008057 46.25591660]
[359.83053589 61.56087494]
[349.90689087 73.37294006]
[335.16577148 77.92292786]
[320.31097412 73.75895691]
[310.08264160 62.20972824]
[295.27490234 64.60372925]
[280.46716309 66.99772644]
[265.65945435 69.39172363]
[250.85173035 71.78572083]
[236.22779846 75.12353516]
[221.84779358 79.39144897]
[207.46777344 83.65936279]
[193.08775330 87.92727661]
[178.70773315 92.19519043]
[164.32771301 96.46310425]
[149.94769287 100.73101807]
[135.56767273 104.99893188]
[121.18766022 109.26684570]
[113.93187714 122.39519501]
[117.96876526 136.84176636]
[122.00564575 151.28834534]
[126.04253387 165.73492432]
[130.19506836 180.14868164]
[134.46298218 194.52870178]
[138.73089600 208.90872192]
[142.99880981 223.28874207]
[156.65245056 235.63571167]
[151.91717529 252.52827454]
[156.41502380 266.83804321]
[160.91287231 281.14779663]
[165.41072083 295.45755005]
[176.93005371 306.30264282]
[173.36514282 320.76434326]
[177.86299133 335.07409668]
[192.42495728 340.09954834]
[201.13377380 352.58993530]
[200.82157898 367.63543701]
[191.81764221 379.47042847]
[196.31549072 393.78018188]
[200.81333923 408.08993530]
[205.31117249 422.39971924]
[219.43742371 429.48666382]
[224.33557129 444.51275635]
[217.09965515 458.56329346]
[202.02261353 463.30230713]
[188.04937744 455.91824341]
[183.47003174 440.79193115]
[191.00141907 426.89755249]
[186.50357056 412.58779907]
[182.00572205 398.27801514]
[177.50787354 383.96826172]
[163.35209656 379.41284180]
[154.48828125 367.25155640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[4 173]
[5 172]
[6 171]
[7 170]
[10 168]
[11 167]
[12 166]
[13 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 36]
[20 35]
[21 34]
[22 33]
[24 31]
[25 30]
[43 80]
[44 79]
[45 78]
[46 77]
[47 76]
[48 75]
[49 74]
[50 73]
[53 72]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
[81 113]
[82 112]
[83 111]
[84 110]
[87 107]
[88 106]
[89 105]
[90 103]
[91 102]
[116 160]
[117 159]
[118 158]
[119 157]
[120 156]
[121 155]
[122 154]
[123 153]
[124 152]
[133 151]
[134 150]
[135 149]
[136 148]
[137 147]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
