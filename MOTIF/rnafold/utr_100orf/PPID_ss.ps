%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGUCAGCGUCGCUGCCGGUCUCCGGCGGAGACGGACUCUGGAGUUUGGGCGGCCCGGGCGGCCACUAGGUACUCUGAUAUUCCGUACUAAACACGUCUGCAAGUCAAGAUGUCGCACCCGUCCCCCCAAGCCAAGCCCUCCAACCCCAGUAACCCUCGAGUCUUCUUUGACGUGGACAUCGGAGGGGAGCGAGUUGGUCGAAUUGUCU\
) } def
/len { sequence length } bind def

/coor [
[88.09048462 145.65405273]
[83.02794647 131.53417969]
[88.74204254 117.66311646]
[78.98770905 129.05842590]
[69.23337555 140.45373535]
[59.47904587 151.84902954]
[64.47183990 166.30653381]
[61.57684326 181.22349548]
[51.66984558 192.61286926]
[37.48706055 197.48159790]
[22.86999130 194.61683655]
[13.11565876 206.01214600]
[3.36132669 217.40745544]
[-6.39300537 228.80276489]
[-9.48917580 244.31805420]
[-23.64350510 248.95532227]
[-33.39783859 260.35061646]
[-43.15216827 271.74594116]
[-52.90650177 283.14123535]
[-62.66083527 294.53652954]
[-72.41516876 305.93185425]
[-82.16949463 317.32714844]
[-87.87618256 333.29180908]
[-104.79669952 332.22760010]
[-108.45813751 315.67373657]
[-93.56480408 307.57281494]
[-83.81047058 296.17752075]
[-74.05613708 284.78219604]
[-64.30181122 273.38690186]
[-54.54747772 261.99160767]
[-44.79314423 250.59629822]
[-35.03881073 239.20098877]
[-32.64033508 224.50076294]
[-17.78831100 219.04843140]
[-8.03397942 207.65312195]
[1.72035253 196.25781250]
[11.47468472 184.86250305]
[6.38954020 170.86225891]
[9.01232529 156.09822083]
[18.73724747 144.55299377]
[33.02913284 139.39172363]
[48.08374023 142.09471130]
[57.83806992 130.69940186]
[67.59239960 119.30409241]
[77.34673309 107.90878296]
[83.15460968 98.11138153]
[91.60138702 94.74395752]
[84.97946167 81.28475189]
[78.35753632 67.82555389]
[71.73561096 54.36635208]
[65.11368561 40.90715027]
[58.49176025 27.44794846]
[51.86983490 13.98874760]
[45.27442932 7.67132044]
[45.25114441 0.28185198]
[38.82844162 -13.27355003]
[24.21612549 -18.66965294]
[17.89569664 -32.50825119]
[23.13010597 -46.40560913]
[16.70740700 -59.96100998]
[10.28470612 -73.51641083]
[3.86200666 -87.07181549]
[-7.99968433 -92.13514709]
[-13.07046604 -103.55646515]
[-9.13075733 -114.99246216]
[-15.35283375 -128.64111328]
[-24.23800278 -126.97171783]
[-33.82520294 -128.60037231]
[-42.85929489 -133.77423096]
[-50.01456833 -142.25863647]
[-54.07896042 -153.32415771]
[-54.13649368 -165.80320740]
[-64.05783081 -177.05340576]
[-73.97916412 -188.30361938]
[-83.90050507 -199.55381775]
[-93.82184601 -210.80401611]
[-108.67562103 -207.11297607]
[-123.54055023 -210.75886536]
[-135.00076294 -220.90391541]
[-140.42280579 -235.21684265]
[-138.56072998 -250.40866089]
[-129.84240723 -262.98837280]
[-116.27127075 -270.06530762]
[-100.96585083 -270.01318359]
[-87.44322968 -262.84399414]
[-78.81079865 -250.20516968]
[-77.05223083 -235.00102234]
[-82.57164001 -220.72535706]
[-72.65029907 -209.47515869]
[-62.72896576 -198.22494507]
[-52.80762863 -186.97474670]
[-42.88629150 -175.72454834]
[-35.87065506 -178.37612915]
[-41.17358017 -192.40748596]
[-27.14213371 -197.71017456]
[-21.83938599 -183.67927551]
[-14.82375050 -186.33085632]
[-14.82375050 -201.33085632]
[-14.82375050 -216.33085632]
[-14.82375050 -231.33085632]
[-14.82375050 -246.33085632]
[-14.82375050 -261.33087158]
[-27.45601082 -270.34228516]
[-32.34700394 -285.06835938]
[-27.61604691 -299.84664917]
[-15.08228874 -308.99456787]
[0.43478671 -308.99456787]
[12.96854591 -299.84664917]
[17.69950294 -285.06835938]
[12.80850792 -270.34228516]
[0.17624909 -261.33087158]
[0.17624909 -246.33085632]
[0.17624909 -231.33085632]
[0.17624909 -216.33085632]
[0.17624909 -201.33085632]
[0.17624909 -186.33085632]
[12.75109863 -156.92901611]
[-1.70417964 -134.86318970]
[4.51789665 -121.21453857]
[19.33449554 -111.80932617]
[17.41740799 -93.49451447]
[23.84010887 -79.93910980]
[30.26280785 -66.38371277]
[36.68550873 -52.82830811]
[50.75556946 -48.07762527]
[57.46220016 -34.42201233]
[52.38384628 -19.69624901]
[58.80654526 -6.14084768]
[65.32903290 7.36682129]
[71.95095825 20.82602310]
[78.57288361 34.28522491]
[85.19481659 47.74442291]
[91.81674194 61.20362473]
[98.43866730 74.66282654]
[105.06059265 88.12202454]
[116.08856201 98.28981781]
[130.04008484 103.79933929]
[143.99162292 109.30886078]
[155.22837830 99.03771210]
[169.75117493 94.68162537]
[184.66409302 97.05329895]
[197.01766968 105.62944031]
[204.39219666 118.66500092]
[205.37156677 133.54809570]
[219.32308960 139.05761719]
[233.27461243 144.56713867]
[247.22615051 150.07666016]
[261.17767334 155.58618164]
[270.95312500 148.82351685]
[282.65936279 147.63085938]
[293.37719727 152.18937683]
[300.48989868 161.26040649]
[302.32186890 172.51960754]
[316.10482788 178.43821716]
[330.63339233 172.82044983]
[344.52694702 179.01911926]
[349.79309082 192.90447998]
[363.57604980 198.82310486]
[377.35900879 204.74171448]
[391.14196777 210.66033936]
[404.92492676 216.57894897]
[418.75115967 222.39576721]
[432.61990356 228.11045837]
[446.53042603 233.72271729]
[460.48196411 239.23223877]
[474.43350220 244.74176025]
[488.38500977 250.25128174]
[500.36318970 240.63778687]
[515.54577637 238.31719971]
[529.84869385 243.91374207]
[539.42462158 255.92196655]
[541.69757080 271.11172485]
[536.05627441 285.39706421]
[524.01806641 294.93530273]
[508.82122803 297.16064453]
[494.55364990 291.47454834]
[485.05322266 279.40652466]
[482.87548828 264.20281982]
[468.92398071 258.69329834]
[454.97244263 253.18376160]
[441.02090454 247.67424011]
[433.64617920 248.14109802]
[426.90521240 241.97920227]
[413.03646851 236.26451111]
[405.65563965 236.62255859]
[399.00631714 230.36190796]
[385.22335815 224.44329834]
[371.44039917 218.52467346]
[357.65744019 212.60606384]
[343.87448120 206.68743896]
[330.17953491 212.43061829]
[316.11734009 206.62464905]
[310.18621826 192.22117615]
[296.40325928 186.30256653]
[279.83944702 194.09977722]
[262.54028320 187.19367981]
[255.66815186 169.53771973]
[241.71662903 164.02819824]
[227.76509094 158.51866150]
[213.81356812 153.00914001]
[199.86203003 147.49961853]
[188.97796631 157.69778442]
[174.68661499 162.17739868]
[159.80661011 159.99885559]
[147.29702759 151.54125977]
[139.66911316 138.43775940]
[138.48208618 123.26039124]
[124.53056335 117.75086975]
[110.57903290 112.24134064]
[122.11652374 121.82708740]
[124.24771118 136.67491150]
[115.87226105 149.11886597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 45]
[4 44]
[5 43]
[6 42]
[11 37]
[12 36]
[13 35]
[14 34]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[55 128]
[56 127]
[59 124]
[60 123]
[61 122]
[62 121]
[65 119]
[66 118]
[72 92]
[73 91]
[74 90]
[75 89]
[76 88]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[136 209]
[137 208]
[138 207]
[144 201]
[145 200]
[146 199]
[147 198]
[148 197]
[153 194]
[154 193]
[157 190]
[158 189]
[159 188]
[160 187]
[161 186]
[162 184]
[163 183]
[164 181]
[165 180]
[166 179]
[167 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
