%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGCUCUCCUCCCAGUCUCCCCCGCGCUGCGUGCAGUAAGGUAGCCGCCGCCGCCGCCGCCGCCGCGUCCCCUCGCCGGCUCGCUGGUACCGGCAGUGCCAUGGCGGCCUUCAGCAAGUACUUGACGGCGCGAAACUCCUCGCUGGCUGGUGCCGCGUUCCUGCUGCUCUGCCUGCUCCACAAGCGGCGCCGCGCCCUCG\
) } def
/len { sequence length } bind def

/coor [
[255.43331909 301.79818726]
[247.60832214 306.44744873]
[239.26982117 310.10101318]
[230.54394531 312.70309448]
[221.56274414 314.21389771]
[212.46217346 314.61007690]
[203.38006592 313.88519287]
[194.45404053 312.04977417]
[185.81938171 309.13122559]
[177.60699463 305.17330933]
[169.94149780 300.23556519]
[162.93923950 294.39245605]
[156.70654297 287.73211670]
[151.33815002 280.35516357]
[146.91574097 272.37304688]
[143.50668335 263.90643311]
[141.16300964 255.08346558]
[139.92066956 246.03764343]
[139.79890442 236.90591431]
[140.80000305 227.82659912]
[142.90924072 218.93728638]
[146.09510803 210.37269592]
[150.30973816 202.26274109]
[155.48970032 194.73045349]
[161.55688477 187.89018250]
[152.11407471 176.23542786]
[142.67126465 164.58067322]
[133.22845459 152.92591858]
[123.78564453 141.27116394]
[114.34282684 129.61640930]
[104.90001678 117.96165466]
[85.81004333 112.05305481]
[83.06770325 92.25865936]
[73.09415436 81.05471039]
[63.12061310 69.85076904]
[53.14707184 58.64682007]
[39.48411942 65.06583405]
[24.58103943 67.37245941]
[9.64692307 65.38820648]
[-4.10905790 59.28237152]
[-15.57555199 49.55758286]
[-23.82881737 37.00849152]
[-28.20712662 22.65679550]
[-28.36382866 7.66809273]
[-24.29477119 -6.74280930]
[-16.33794594 -19.41033554]
[-26.31148911 -30.61428261]
[-36.28503418 -41.81822968]
[-46.25857544 -53.02217865]
[-56.23212051 -64.22612762]
[-66.20566559 -75.43006897]
[-76.17920685 -86.63401794]
[-95.57964325 -92.09452057]
[-98.68157959 -111.17649841]
[-108.99707031 -122.06643677]
[-119.31256104 -132.95635986]
[-134.42018127 -137.65429688]
[-137.55546570 -152.21516418]
[-147.87095642 -163.10510254]
[-158.18644714 -173.99504089]
[-168.50195312 -184.88496399]
[-184.06758118 -185.47538757]
[-194.37382507 -196.66627502]
[-193.71502686 -211.50209045]
[-204.03051758 -222.39202881]
[-214.34600830 -233.28196716]
[-224.74545288 -244.09175110]
[-235.22824097 -254.82073975]
[-245.71102905 -265.54974365]
[-261.28393555 -265.89920044]
[-271.76211548 -276.92926025]
[-271.33297729 -291.77349854]
[-281.81576538 -302.50250244]
[-297.61990356 -302.43530273]
[-308.78366089 -313.62216187]
[-308.68377686 -329.42614746]
[-297.37951660 -340.47097778]
[-281.57748413 -340.20401001]
[-270.65274048 -328.78359985]
[-271.08679199 -312.98526001]
[-260.60400391 -302.25628662]
[-245.75379944 -302.34072876]
[-234.96992493 -291.60934448]
[-234.98202515 -276.03253174]
[-224.49925232 -265.30352783]
[-214.01646423 -254.57452393]
[-207.08895874 -251.98553467]
[-203.45608521 -243.59745789]
[-193.14059448 -232.70751953]
[-182.82510376 -221.81758118]
[-167.97537231 -221.67222595]
[-157.35885620 -210.77523804]
[-157.61201477 -195.20045471]
[-147.29652405 -184.31053162]
[-136.98103333 -173.42059326]
[-126.66553497 -162.53067017]
[-112.29575348 -158.61166382]
[-108.42263031 -143.27185059]
[-98.10713959 -132.38192749]
[-87.79164124 -121.49199677]
[-77.58576202 -122.13459778]
[-68.52234650 -116.94151306]
[-63.71756363 -107.41970825]
[-64.97525787 -96.60755920]
[-55.00171661 -85.40361786]
[-45.02817535 -74.19966888]
[-35.05463028 -62.99571991]
[-25.08108711 -51.79177475]
[-15.10754299 -40.58782578]
[-5.13399935 -29.38388062]
[8.36976147 -35.82016373]
[23.15493202 -38.19293976]
[38.02463531 -36.30147934]
[51.77272415 -30.29058266]
[63.28158569 -20.63956070]
[71.61302185 -8.12400723]
[76.08472443 6.24652433]
[76.32612610 21.30994987]
[72.30912018 35.84562683]
[64.35102081 48.67327499]
[74.32456207 59.87722397]
[84.29810333 71.08116913]
[94.27164459 82.28511810]
[102.94795227 81.61683655]
[110.98024750 84.96453094]
[116.61380005 91.59687042]
[118.61791992 100.06494904]
[116.55477142 108.51883698]
[125.99758148 120.17359161]
[135.44039917 131.82835388]
[144.88320923 143.48310852]
[154.32601929 155.13786316]
[163.76882935 166.79260254]
[173.21163940 178.44735718]
[193.21737671 169.28993225]
[215.01568604 166.39649963]
[236.69297791 170.01367188]
[256.34844971 179.81686401]
[272.26077271 194.93936157]
[283.03875732 214.04899597]
[287.74316406 235.46543884]
[285.96829224 257.30801392]
[277.87722778 277.66079712]
[290.02612305 286.45877075]
[305.43313599 284.16494751]
[317.62847900 293.26040649]
[319.72036743 307.96276855]
[331.86926270 316.76077271]
[344.01812744 325.55874634]
[356.23474121 334.26248169]
[368.51831055 342.87139893]
[380.80187988 351.48031616]
[393.08547974 360.08926392]
[405.36904907 368.69818115]
[417.65264893 377.30709839]
[429.93621826 385.91604614]
[442.21978760 394.52496338]
[454.50338745 403.13391113]
[465.69265747 397.54364014]
[478.12490845 397.24548340]
[489.43719482 402.23464966]
[497.50552368 411.50729370]
[500.84362793 423.26168823]
[498.87655640 435.24838257]
[510.88784790 444.23333740]
[526.32849121 442.17819214]
[538.38165283 451.46130371]
[540.24572754 466.19427490]
[552.25701904 475.17922974]
[567.43896484 471.43194580]
[581.45489502 478.36648560]
[587.68688965 492.70861816]
[583.19238281 507.68637085]
[570.09356689 516.22778320]
[554.57531738 514.29974365]
[543.96484375 502.81274414]
[543.27209473 487.19052124]
[531.26080322 478.20556641]
[516.60113525 480.57803345]
[504.29196167 471.63714600]
[501.90289307 456.24459839]
[489.89160156 447.25967407]
[473.28854370 453.26235962]
[456.25451660 448.05566406]
[445.65945435 433.54232788]
[445.89443970 415.41748047]
[433.61087036 406.80856323]
[421.32730103 398.19961548]
[409.04370117 389.59069824]
[396.76013184 380.98178101]
[384.47656250 372.37283325]
[372.19296265 363.76391602]
[359.90939331 355.15496826]
[347.62579346 346.54605103]
[340.33938599 345.28070068]
[335.22015381 337.70764160]
[323.07125854 328.90963745]
[310.92236328 320.11166382]
[296.30114746 322.71072388]
[283.85510254 313.96136475]
[281.22811890 298.60766602]
[269.07922363 289.80966187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 134]
[26 133]
[27 132]
[28 131]
[29 130]
[30 129]
[31 128]
[33 123]
[34 122]
[35 121]
[36 120]
[46 110]
[47 109]
[48 108]
[49 107]
[50 106]
[51 105]
[52 104]
[54 100]
[55 99]
[56 98]
[58 96]
[59 95]
[60 94]
[61 93]
[64 90]
[65 89]
[66 88]
[67 86]
[68 85]
[69 84]
[72 81]
[73 80]
[143 202]
[144 201]
[147 198]
[148 197]
[149 196]
[150 194]
[151 193]
[152 192]
[153 191]
[154 190]
[155 189]
[156 188]
[157 187]
[158 186]
[164 182]
[165 181]
[168 178]
[169 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
