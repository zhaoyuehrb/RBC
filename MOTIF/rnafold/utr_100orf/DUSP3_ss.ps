%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:57:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGCCCCCGCCCAGCUGAUCCGCCGCUCUCCGCCUCGCUUGCUCCUGCCGGGCGUGCAGGGCCCCGCCGCCGCCAUGUCGGGCUCGUUCGAGCUCUCGGUGCAGGAUCUCAACGACCUGCUCUCGGACGGCAGCGGCUGCUACAGCCUCCCGAGCCAGCCCUGCAACGAGGUCA\
) } def
/len { sequence length } bind def

/coor [
[-269.36245728 679.99371338]
[-276.74688721 693.05017090]
[-284.13131714 706.10656738]
[-285.64059448 715.14788818]
[-291.76443481 719.32751465]
[-299.37939453 732.25085449]
[-290.37579346 747.31182861]
[-290.22192383 764.76934814]
[-298.87017822 779.83264160]
[-313.86978149 788.41333008]
[-331.06054688 788.23498535]
[-338.21209717 801.42041016]
[-340.44879150 818.22619629]
[-357.21694946 820.72918701]
[-364.26403809 805.30926514]
[-351.39752197 794.26892090]
[-344.24597168 781.08349609]
[-351.99008179 771.05810547]
[-355.36935425 758.80059814]
[-353.84539795 746.13024902]
[-347.61038208 734.94189453]
[-337.56359863 726.92199707]
[-325.18191528 723.29492188]
[-312.30270386 724.63586426]
[-304.68774414 711.71252441]
[-297.18774414 698.72216797]
[-289.80331421 685.66571045]
[-282.41888428 672.60931396]
[-289.05209351 662.40002441]
[-290.71282959 650.26599121]
[-287.02349854 638.51190186]
[-278.62863159 629.39691162]
[-267.08322144 624.70043945]
[-254.56498718 625.37475586]
[-246.72183228 612.58862305]
[-238.87867737 599.80255127]
[-231.03552246 587.01641846]
[-223.19236755 574.23028564]
[-215.34922791 561.44415283]
[-214.52943420 554.07537842]
[-207.25169373 548.50244141]
[-199.18284607 535.85754395]
[-191.11399841 523.21264648]
[-183.04515076 510.56771851]
[-189.06549072 498.63211060]
[-188.38870239 485.17279053]
[-181.08491516 473.71859741]
[-168.97581482 467.32571411]
[-155.18135071 467.76245117]
[-146.88934326 455.26272583]
[-148.97856140 443.32809448]
[-142.14610291 432.83993530]
[-129.60641479 429.73406982]
[-121.09387970 417.38348389]
[-112.58133698 405.03292847]
[-111.72924805 390.16268921]
[-97.52693939 383.19097900]
[-89.01439667 370.84039307]
[-91.95340729 356.28369141]
[-83.49641418 343.63717651]
[-68.20807648 340.65316772]
[-59.69552994 328.30261230]
[-51.18299103 315.95202637]
[-42.67044830 303.60147095]
[-48.62369156 288.31857300]
[-44.26168823 272.33566284]
[-31.10923767 261.99050903]
[-14.21669197 261.50701904]
[-5.92469072 249.00732422]
[-5.33665419 234.12432861]
[8.73968220 226.90162659]
[17.03168297 214.40191650]
[25.32368469 201.90222168]
[33.61568451 189.40251160]
[41.90768433 176.90280151]
[37.86487961 160.59265137]
[47.03691101 146.11193848]
[64.17177582 142.66328430]
[72.24062347 130.01837158]
[80.30947113 117.37347412]
[88.37831879 104.72856140]
[92.83597565 90.40622711]
[93.36833954 75.41567993]
[93.90070343 60.42512512]
[94.43305969 45.43457794]
[94.96542358 30.44402695]
[95.49778748 15.45347691]
[87.33370972 1.23096418]
[95.80158997 -12.81278610]
[112.19040680 -12.23076820]
[119.64074707 2.37828851]
[110.48833466 15.98583794]
[109.95597076 30.97638893]
[109.42361450 45.96693802]
[108.89125061 60.95748901]
[108.35888672 75.94803619]
[107.82653046 90.93859100]
[121.31681061 97.49848175]
[134.80589294 104.05780792]
[146.26799011 94.38204193]
[157.73007202 84.70628357]
[163.55592346 67.25322723]
[180.91885376 64.79774475]
[192.20741272 54.92007828]
[203.49597168 45.04240799]
[214.78453064 35.16473770]
[226.07308960 25.28706551]
[230.48892212 17.25440025]
[237.65077209 15.33643055]
[249.11286926 5.66066694]
[251.89115906 -10.13998699]
[266.04525757 -17.69256401]
[280.71731567 -11.20337296]
[284.65222168 4.34963417]
[274.83145142 17.03552055]
[258.78863525 17.12276077]
[247.32653809 26.79852486]
[235.95075989 36.57562637]
[224.66220093 46.45329666]
[213.37364197 56.33096695]
[202.08508301 66.20864105]
[190.79652405 76.08631134]
[189.67210388 88.15014648]
[180.32089233 96.47113800]
[167.40583801 96.16837311]
[155.94375610 105.84413910]
[144.48165894 115.51990509]
[101.02322388 112.79740906]
[92.95437622 125.44232178]
[84.88552856 138.08721924]
[76.81668091 150.73213196]
[81.21953583 163.48100281]
[77.52011108 176.24879456]
[67.28782654 184.42572021]
[54.40739441 185.19479370]
[46.11539459 197.69450378]
[37.82339478 210.19421387]
[29.53139114 222.69392395]
[21.23939133 235.19363403]
[20.05825424 250.97068787]
[6.57501793 257.29931641]
[-1.71698296 269.79904175]
[4.04901934 282.33822632]
[2.86748767 295.98019409]
[-4.84550953 307.16293335]
[-16.98260307 313.01977539]
[-30.31987572 312.11401367]
[-38.83241653 324.46456909]
[-47.34495926 336.81515503]
[-55.85750198 349.16571045]
[-53.20531845 364.51510620]
[-62.01418304 376.91909790]
[-76.66382599 379.35293579]
[-85.17636108 391.70352173]
[-86.63732910 407.45712280]
[-100.23076630 413.54544067]
[-108.74330139 425.89602661]
[-117.25584412 438.24661255]
[-118.28449249 456.61755371]
[-134.38963318 463.55474854]
[-142.68164062 476.05444336]
[-136.55885315 491.80575562]
[-140.97595215 507.94567871]
[-154.00515747 518.17901611]
[-170.40023804 518.63659668]
[-178.46908569 531.28149414]
[-186.53793335 543.92639160]
[-194.60678101 556.57128906]
[-202.56309509 569.28729248]
[-210.40625000 582.07342529]
[-218.24940491 594.85955811]
[-226.09255981 607.64569092]
[-233.93571472 620.43182373]
[-241.77885437 633.21789551]
[-234.34820557 649.72869873]
[-238.25808716 667.24664307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[5 25]
[6 24]
[11 17]
[12 16]
[34 174]
[35 173]
[36 172]
[37 171]
[38 170]
[39 169]
[41 168]
[42 167]
[43 166]
[44 165]
[49 161]
[50 160]
[53 158]
[54 157]
[55 156]
[57 154]
[58 153]
[61 150]
[62 149]
[63 148]
[64 147]
[68 142]
[69 141]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[78 131]
[79 130]
[80 129]
[81 128]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[99 127]
[100 126]
[101 125]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[109 117]
[110 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
