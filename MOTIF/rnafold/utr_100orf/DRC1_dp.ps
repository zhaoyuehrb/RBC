%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DRC1)
} def

/sequence { (\
AACGGUUUGUUCCUAGCAACCAGCCUGAGGUCUGGAGGUGGUGCGGAGGGAGCCGCCUAGGGACCAGGGACUCCUGCCAUGAAUCCGCCGGGGUCCCUAGAGGCCCUGGACCCGAACGUGGACGAGCACUUGUCCACCCAGAUUCUCGCGCCCUCGGUCCACUCCGACAACUCUCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.010532899 ubox
2 10 0.013377468 ubox
3 9 0.013679338 ubox
4 8 0.008447300 ubox
4 12 0.005389701 ubox
4 13 0.057858825 ubox
4 14 0.003414044 ubox
4 21 0.994382578 ubox
4 25 0.023984778 ubox
5 11 0.005148751 ubox
5 12 0.057832884 ubox
5 13 0.003546301 ubox
5 17 0.017461816 ubox
5 20 0.995326955 ubox
5 24 0.027021378 ubox
6 16 0.017451668 ubox
6 19 0.813241290 ubox
6 23 0.027238765 ubox
7 15 0.017390968 ubox
7 16 0.022171469 ubox
7 18 0.574445459 ubox
7 19 0.568675474 ubox
7 22 0.024383488 ubox
7 23 0.004866685 ubox
8 15 0.036484656 ubox
8 18 0.807494887 ubox
8 22 0.006150004 ubox
9 14 0.034349764 ubox
9 17 0.991252038 ubox
9 20 0.025973945 ubox
9 21 0.005471790 ubox
10 16 0.981729586 ubox
10 19 0.026224815 ubox
11 15 0.748307823 ubox
11 18 0.023791069 ubox
16 24 0.014700869 ubox
17 23 0.015583154 ubox
24 178 0.980425161 ubox
25 177 0.999516967 ubox
25 178 0.004024856 ubox
26 176 0.999586825 ubox
27 173 0.023496397 ubox
27 175 0.999696030 ubox
28 172 0.027695307 ubox
28 174 0.999252427 ubox
29 171 0.033498954 ubox
29 172 0.072951963 ubox
29 173 0.995738247 ubox
30 168 0.718904727 ubox
30 171 0.642317096 ubox
30 172 0.254051519 ubox
30 173 0.004688119 ubox
31 167 0.745563019 ubox
31 170 0.635572912 ubox
32 166 0.736046978 ubox
33 166 0.645346271 ubox
33 169 0.082230567 ubox
34 164 0.019086572 ubox
34 165 0.996016645 ubox
34 168 0.079769175 ubox
35 163 0.009348870 ubox
35 164 0.996396755 ubox
36 163 0.943339883 ubox
37 162 0.678954047 ubox
37 163 0.318889948 ubox
37 164 0.016719812 ubox
37 165 0.066544914 ubox
38 162 0.731388268 ubox
38 164 0.059464678 ubox
39 161 0.982870890 ubox
40 159 0.015109760 ubox
40 160 0.999296776 ubox
40 163 0.027072588 ubox
41 158 0.006949825 ubox
41 159 0.998623079 ubox
41 162 0.028673971 ubox
42 157 0.010589591 ubox
42 161 0.028355844 ubox
43 158 0.957254096 ubox
43 160 0.024798577 ubox
44 156 0.116245265 ubox
44 157 0.987099405 ubox
45 155 0.086776689 ubox
45 159 0.003456623 ubox
46 154 0.037607932 ubox
46 155 0.995181245 ubox
47 154 0.999089870 ubox
48 153 0.999911662 ubox
48 154 0.006100418 ubox
49 152 0.999861499 ubox
49 153 0.011925639 ubox
50 147 0.004349084 ubox
50 151 0.997700073 ubox
50 152 0.015470406 ubox
51 146 0.007369351 ubox
52 104 0.012396717 ubox
52 145 0.007287169 ubox
52 149 0.947258232 ubox
52 151 0.035842183 ubox
53 61 0.004875213 ubox
53 62 0.006189756 ubox
53 103 0.012451079 ubox
53 148 0.938879619 ubox
53 150 0.035763555 ubox
54 60 0.006644824 ubox
54 61 0.008200140 ubox
54 102 0.012505098 ubox
54 108 0.003417400 ubox
54 114 0.662652347 ubox
54 118 0.003805448 ubox
54 148 0.128021746 ubox
54 150 0.303853262 ubox
55 104 0.013077786 ubox
55 113 0.668372094 ubox
55 117 0.010193712 ubox
55 147 0.169302139 ubox
55 149 0.306461476 ubox
56 62 0.009587086 ubox
56 103 0.013102064 ubox
56 109 0.195693607 ubox
56 148 0.305812702 ubox
57 61 0.009555707 ubox
57 100 0.014061668 ubox
57 102 0.012643632 ubox
57 108 0.194140715 ubox
57 109 0.976883767 ubox
58 99 0.016410826 ubox
58 101 0.010757810 ubox
58 108 0.979388976 ubox
59 98 0.018375533 ubox
59 107 0.998205840 ubox
60 97 0.018581981 ubox
60 106 0.999571500 ubox
60 107 0.004643898 ubox
60 113 0.007044903 ubox
61 96 0.018582320 ubox
61 105 0.999595590 ubox
61 106 0.005726321 ubox
61 112 0.007056170 ubox
62 95 0.018581648 ubox
62 104 0.999486911 ubox
62 105 0.006423731 ubox
62 111 0.007047578 ubox
63 94 0.018571307 ubox
64 93 0.018516250 ubox
64 103 0.991922148 ubox
64 109 0.007042313 ubox
65 76 0.003509575 ubox
65 92 0.018178086 ubox
65 102 0.991353172 ubox
65 108 0.007050479 ubox
66 75 0.004349992 ubox
66 98 0.985542090 ubox
66 107 0.006712489 ubox
67 74 0.004421649 ubox
67 89 0.006644744 ubox
67 97 0.999691796 ubox
67 98 0.009484700 ubox
67 106 0.006418298 ubox
68 73 0.004407418 ubox
68 86 0.016098474 ubox
68 88 0.005544504 ubox
68 89 0.005556860 ubox
68 96 0.999769512 ubox
68 97 0.007846295 ubox
68 105 0.006315469 ubox
69 85 0.016519589 ubox
69 88 0.005527109 ubox
69 95 0.999784327 ubox
69 96 0.005561203 ubox
69 104 0.006042196 ubox
70 84 0.016273426 ubox
70 94 0.999680707 ubox
71 93 0.999733114 ubox
71 102 0.003879654 ubox
72 82 0.016219609 ubox
72 92 0.995847455 ubox
72 93 0.009832731 ubox
72 101 0.003930465 ubox
73 81 0.016450624 ubox
73 91 0.996434352 ubox
73 92 0.081308175 ubox
73 100 0.003353720 ubox
74 90 0.995684341 ubox
74 91 0.081606409 ubox
74 100 0.003363673 ubox
75 87 0.014635540 ubox
75 90 0.081406551 ubox
75 99 0.003918481 ubox
76 86 0.017697412 ubox
76 88 0.992639844 ubox
76 89 0.077657565 ubox
76 98 0.003659502 ubox
77 87 0.992687730 ubox
80 87 0.056976643 ubox
81 86 0.201068852 ubox
81 89 0.005415491 ubox
81 95 0.004670148 ubox
82 94 0.003396536 ubox
83 94 0.004161955 ubox
84 93 0.005312788 ubox
85 92 0.006065745 ubox
86 91 0.006110765 ubox
100 147 0.018072857 ubox
101 146 0.018542002 ubox
102 145 0.018593506 ubox
103 144 0.017699348 ubox
106 141 0.026990236 ubox
107 140 0.028022084 ubox
108 113 0.006330645 ubox
108 117 0.013679374 ubox
108 139 0.029715974 ubox
108 145 0.005355096 ubox
108 146 0.011748466 ubox
108 147 0.006958450 ubox
109 138 0.029723066 ubox
109 144 0.005640722 ubox
109 145 0.018407383 ubox
109 146 0.004845101 ubox
109 147 0.020757463 ubox
110 119 0.019995174 ubox
110 143 0.009230217 ubox
110 144 0.021138020 ubox
110 146 0.023151358 ubox
111 118 0.022045801 ubox
113 148 0.013506225 ubox
113 150 0.003555006 ubox
114 144 0.020769823 ubox
114 145 0.207438877 ubox
114 147 0.043692327 ubox
114 149 0.003650107 ubox
115 143 0.023407477 ubox
115 144 0.207255764 ubox
115 146 0.042651100 ubox
116 143 0.194152208 ubox
118 137 0.996044741 ubox
119 136 0.998651280 ubox
119 140 0.011198171 ubox
120 135 0.999940811 ubox
120 139 0.008712215 ubox
121 134 0.999955921 ubox
121 138 0.007722556 ubox
122 133 0.999845970 ubox
123 132 0.999885433 ubox
124 131 0.968293482 ubox
125 130 0.896762481 ubox
125 131 0.031757155 ubox
126 130 0.024706114 ubox
126 133 0.004256225 ubox
127 132 0.004736323 ubox
140 146 0.140350352 ubox
141 145 0.146740708 ubox
141 147 0.378749776 ubox
142 146 0.330007546 ubox
4 21 0.9500000 lbox
5 20 0.9500000 lbox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
11 15 0.9500000 lbox
24 178 0.9500000 lbox
25 177 0.9500000 lbox
26 176 0.9500000 lbox
27 175 0.9500000 lbox
28 174 0.9500000 lbox
29 173 0.9500000 lbox
30 168 0.9500000 lbox
31 167 0.9500000 lbox
32 166 0.9500000 lbox
34 165 0.9500000 lbox
35 164 0.9500000 lbox
36 163 0.9500000 lbox
37 162 0.9500000 lbox
39 161 0.9500000 lbox
40 160 0.9500000 lbox
41 159 0.9500000 lbox
43 158 0.9500000 lbox
44 157 0.9500000 lbox
46 155 0.9500000 lbox
47 154 0.9500000 lbox
48 153 0.9500000 lbox
49 152 0.9500000 lbox
50 151 0.9500000 lbox
52 149 0.9500000 lbox
53 148 0.9500000 lbox
54 114 0.9500000 lbox
55 113 0.9500000 lbox
57 109 0.9500000 lbox
58 108 0.9500000 lbox
59 107 0.9500000 lbox
60 106 0.9500000 lbox
61 105 0.9500000 lbox
62 104 0.9500000 lbox
64 103 0.9500000 lbox
65 102 0.9500000 lbox
66 98 0.9500000 lbox
67 97 0.9500000 lbox
68 96 0.9500000 lbox
69 95 0.9500000 lbox
70 94 0.9500000 lbox
71 93 0.9500000 lbox
72 92 0.9500000 lbox
73 91 0.9500000 lbox
74 90 0.9500000 lbox
76 88 0.9500000 lbox
77 87 0.9500000 lbox
118 137 0.9500000 lbox
119 136 0.9500000 lbox
120 135 0.9500000 lbox
121 134 0.9500000 lbox
122 133 0.9500000 lbox
123 132 0.9500000 lbox
124 131 0.9500000 lbox
125 130 0.9500000 lbox
showpage
end
%%EOF
