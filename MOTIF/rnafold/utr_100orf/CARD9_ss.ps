%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUGUGGAGUUAAGCAGAACCCAUCAGGAAGUGCACAGGCGUCCGGCGUGCUCCUCCCUCCCUGCAGCCCCGGGCAGCAUCUCCCAGAGGCUCCGCGGCCCAGGCUCCUGGUGUGUCUGCAGUGCAGGUGGCUCCUGGAAGACCCUCAGCCUGCCUGCUGAGGCCAUGUCGGACUACGAGAACGAUGACGAGUGCUGGAGCGUCCUGGAGGGCUUCCGGGUGACGCUCACCUCGGUCAUCGACCCCUCACGCAU\
CACACCUUACC\
) } def
/len { sequence length } bind def

/coor [
[248.39324951 46.52922440]
[234.19750977 37.07769394]
[223.60870361 23.68581772]
[209.62725830 29.11896133]
[195.64581299 34.55210495]
[181.66436768 39.98524857]
[167.68290710 45.41839218]
[153.70146179 50.85153580]
[139.72001648 56.28467941]
[125.73855591 61.71782303]
[111.75711060 67.15096283]
[131.13343811 78.98229980]
[140.20648193 101.58793640]
[133.56173706 126.74028015]
[111.92880249 143.99757385]
[103.60442352 156.47575378]
[95.28004456 168.95391846]
[100.49902344 183.44766235]
[96.23277283 198.06451416]
[84.31855774 207.25773621]
[69.45349884 207.66767883]
[61.12911987 220.14584351]
[62.84785461 236.09657288]
[51.34776306 247.28260803]
[35.45073318 245.12298584]
[27.35160065 231.27439880]
[33.26333237 216.36027527]
[48.65094757 211.82147217]
[56.97532654 199.34329224]
[51.64502335 185.46072388]
[55.55772018 170.92955017]
[67.41527557 161.37698364]
[82.80187225 160.62953186]
[91.12625122 148.15136719]
[99.45063782 135.67320251]
[95.36214447 129.38557434]
[82.78675842 137.56234741]
[74.61019135 124.98683167]
[87.18515778 116.81032562]
[83.09666443 110.52269745]
[68.31444550 113.06946564]
[53.54746628 115.70314789]
[38.79623413 118.42366791]
[24.04500580 121.14418030]
[9.29377460 123.86470032]
[-5.45745516 126.58521271]
[-20.20868492 129.30572510]
[-32.37668991 139.41761780]
[-46.29618073 134.11695862]
[-61.04741287 136.83747864]
[-75.78237915 139.64472961]
[-90.50057983 142.53862000]
[-94.29566193 157.32238770]
[-104.13592529 168.98995972]
[-118.06756592 175.22470093]
[-133.32446289 174.78872681]
[-146.87731934 167.76856995]
[-156.03524780 155.55810547]
[-158.97988892 140.58174133]
[-155.12661743 125.81301880]
[-145.24049377 114.18429565]
[-131.28440857 108.00446320]
[-116.02935028 108.50051880]
[-102.50423431 115.57398987]
[-93.39447021 127.82041931]
[-78.67626953 124.92652130]
[-72.73982239 120.56745148]
[-63.76792908 122.08624268]
[-49.01669693 119.36572266]
[-37.90380096 109.44842529]
[-22.92920113 114.55450439]
[-8.17797184 111.83398438]
[6.57325840 109.11347198]
[21.32448769 106.39295197]
[36.07571793 103.67243958]
[50.82695007 100.95191956]
[56.81427765 96.66299438]
[65.76767731 98.28724670]
[80.54989624 95.74047852]
[81.60534668 88.31511688]
[83.71624756 73.46438599]
[84.77169037 66.03902435]
[71.28462982 59.47403336]
[57.79756546 52.90904617]
[40.90972900 51.41328812]
[37.67201233 34.77136612]
[52.76727295 27.05323982]
[64.36255646 39.42198181]
[77.84961700 45.98696899]
[91.33668518 52.55195999]
[106.32396698 53.16951370]
[120.30541229 47.73637009]
[134.28686523 42.30322647]
[148.26831055 36.87008286]
[162.24977112 31.43694115]
[176.23121643 26.00379753]
[190.21266174 20.57065392]
[204.19412231 15.13751030]
[218.17556763 9.70436668]
[216.74974060 -3.36574817]
[218.49172974 -16.38699532]
[223.29533386 -28.60335732]
[230.87680054 -39.30674362]
[240.79148865 -47.87804794]
[252.45997620 -53.82294846]
[265.20196533 -56.80041122]
[278.27581787 -56.64226913]
[290.92190552 -53.36268616]
[302.40658569 -47.15705872]
[312.06481934 -38.39039612]
[319.33871460 -27.57581711]
[333.50317383 -32.51214981]
[347.66766357 -37.44848251]
[361.83215332 -42.38481522]
[375.99664307 -47.32114792]
[390.16113281 -52.25748062]
[396.44961548 -63.49324417]
[408.32235718 -67.32415009]
[419.26583862 -62.22026825]
[433.48742676 -66.98960114]
[447.70901489 -71.75893402]
[454.82080078 -77.43556213]
[462.12606812 -76.49964905]
[476.40280151 -81.10131836]
[490.67950439 -85.70298767]
[497.85760498 -91.29554749]
[505.15133667 -90.27374268]
[519.48120117 -94.70711517]
[533.81109619 -99.14048767]
[541.05450439 -104.64820862]
[548.33569336 -103.54064941]
[562.71673584 -107.80511475]
[574.63049316 -116.91902161]
[582.50927734 -129.68319702]
[590.38812256 -142.44737244]
[591.05267334 -158.25460815]
[604.32177734 -165.02076721]
[612.20062256 -177.78494263]
[620.07940674 -190.54911804]
[615.74493408 -207.51382446]
[624.85607910 -222.06867981]
[641.34692383 -225.44613647]
[649.07501221 -238.30212402]
[656.80310059 -251.15812683]
[664.22656250 -264.19241333]
[671.34124756 -277.39773560]
[678.45593262 -290.60308838]
[685.57061768 -303.80844116]
[692.68530273 -317.01379395]
[699.79998779 -330.21914673]
[706.91467285 -343.42446899]
[702.13751221 -358.48947144]
[709.48614502 -372.48135376]
[724.60083008 -377.09899902]
[738.51422119 -369.60281372]
[742.97180176 -354.44018555]
[735.32897949 -340.60681152]
[720.12005615 -336.30978394]
[713.00537109 -323.10443115]
[705.89068604 -309.89910889]
[698.77593994 -296.69375610]
[691.66125488 -283.48840332]
[684.54656982 -270.28305054]
[677.43188477 -257.07769775]
[678.08068848 -254.38374329]
[677.71984863 -251.27456665]
[676.18750000 -248.12684631]
[673.45874023 -245.36840820]
[669.65911865 -243.43002319]
[661.93103027 -230.57403564]
[654.20294189 -217.71803284]
[659.03332520 -205.79383850]
[656.08001709 -193.07234192]
[646.20068359 -184.23649597]
[632.84356689 -182.67030334]
[624.96478271 -169.90612793]
[617.08593750 -157.14195251]
[616.98492432 -142.24768066]
[603.15228271 -134.56855774]
[595.27343750 -121.80437469]
[587.39465332 -109.04019928]
[590.02874756 -102.01799774]
[595.29705811 -87.97358704]
[597.93115234 -80.95138550]
[612.26104736 -76.51801300]
[626.59088135 -72.08464050]
[640.92077637 -67.65126801]
[655.25067139 -63.21789169]
[669.58050537 -58.78451920]
[683.91040039 -54.35114670]
[698.26611328 -50.00215530]
[712.64715576 -45.73769379]
[727.02819824 -41.47323608]
[734.79534912 -48.70017624]
[744.77935791 -52.04295731]
[755.17193604 -50.96638489]
[764.11962891 -45.72942734]
[770.05450439 -37.32699585]
[771.96850586 -27.30159187]
[786.19012451 -22.53225899]
[800.41168213 -17.76292801]
[814.63323975 -12.99359512]
[828.85485840 -8.22426319]
[843.07641602 -3.45493078]
[857.35314941 1.14674008]
[871.68304443 5.58011293]
[886.01287842 10.01348591]
[900.34277344 14.44685841]
[914.67260742 18.88022995]
[929.00250244 23.31360435]
[943.80639648 17.13104057]
[957.80029297 24.97643089]
[960.24926758 40.83146286]
[949.27471924 52.53351212]
[933.29528809 51.10577011]
[924.56915283 37.64347458]
[910.23925781 33.21010208]
[895.90936279 28.77672958]
[881.57952881 24.34335709]
[867.24963379 19.90998459]
[852.91979980 15.47661114]
[848.37963867 16.85566902]
[842.92486572 15.42119026]
[838.30712891 10.76665401]
[824.08551025 5.99732161]
[809.86395264 1.22798944]
[795.64233398 -3.54134274]
[781.42077637 -8.31067467]
[767.19915771 -13.08000660]
[750.39916992 -3.16151333]
[731.44335938 -8.93729782]
[722.76373291 -27.09219170]
[708.38269043 -31.35665321]
[694.00164795 -35.62111282]
[686.72039795 -34.51356125]
[679.47705078 -40.02127838]
[665.14715576 -44.45465088]
[650.81726074 -48.88802338]
[636.48742676 -53.32139587]
[622.15753174 -57.75476837]
[607.82769775 -62.18814087]
[593.49780273 -66.62151337]
[572.79888916 -76.89328766]
[566.98120117 -93.42407227]
[552.60015869 -89.15960693]
[538.24444580 -84.81061554]
[523.91461182 -80.37724304]
[509.58471680 -75.94387054]
[495.28118896 -71.42627716]
[481.00445557 -66.82460022]
[466.72775269 -62.22293091]
[452.47836304 -57.53734970]
[438.25677490 -52.76801682]
[424.03518677 -47.99868393]
[413.11984253 -34.23894882]
[395.09747314 -38.09299850]
[380.93298340 -33.15666580]
[366.76849365 -28.22033119]
[352.60400391 -23.28399849]
[338.43951416 -18.34766579]
[324.27502441 -13.41133213]
[324.99081421 3.50175381]
[320.43707275 19.82469749]
[311.04937744 33.95471191]
[297.73855591 44.50076294]
[281.80221558 50.42052078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 99]
[4 98]
[5 97]
[6 96]
[7 95]
[8 94]
[9 93]
[10 92]
[11 91]
[15 35]
[16 34]
[17 33]
[21 29]
[22 28]
[40 79]
[41 78]
[42 76]
[43 75]
[44 74]
[45 73]
[46 72]
[47 71]
[49 69]
[50 68]
[51 66]
[52 65]
[82 90]
[83 89]
[84 88]
[111 261]
[112 260]
[113 259]
[114 258]
[115 257]
[116 256]
[119 254]
[120 253]
[121 252]
[123 251]
[124 250]
[125 249]
[127 248]
[128 247]
[129 246]
[131 245]
[132 244]
[133 181]
[134 180]
[135 179]
[137 177]
[138 176]
[139 175]
[142 171]
[143 170]
[144 169]
[145 164]
[146 163]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[184 242]
[185 241]
[186 240]
[187 239]
[188 238]
[189 237]
[190 236]
[191 234]
[192 233]
[193 232]
[199 229]
[200 228]
[201 227]
[202 226]
[203 225]
[204 224]
[205 221]
[206 220]
[207 219]
[208 218]
[209 217]
[210 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
