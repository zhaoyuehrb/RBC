%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGAGUCAUCACUAGAGAGUGGGAAGGGCAGCAGCAGCAGAGAAUCCAAACCCUAAAGCUGAUAUCACAAAGUACCAUUUCUCCAAGUUGGGGGCUCAGAGGGGAGUCAUCAUGAGCGAUGUUACCAUUGUGAAAGAAGGUUGGGUUCAGAAGAGGGGAGAAUAUAUAAAAAACUGGAGGCCAAGAUACUUCCUUUUGAAGACAGAUGGCU\
) } def
/len { sequence length } bind def

/coor [
[65.78495789 178.01287842]
[58.57416916 191.16598511]
[51.36337662 204.31910706]
[44.15258789 217.47222900]
[50.14896774 235.44450378]
[41.25561523 251.81105042]
[23.53229523 256.39797974]
[16.71258354 269.75802612]
[15.59858513 278.82272339]
[9.69249630 283.26376343]
[2.67648196 296.52178955]
[-4.33953190 309.77984619]
[-11.35554600 323.03787231]
[-18.37156105 336.29589844]
[-17.22662163 352.65502930]
[-30.97104263 361.60058594]
[-45.46574402 353.93014526]
[-45.79981613 337.53439331]
[-31.62959671 329.27990723]
[-24.61358261 316.02185059]
[-17.59756851 302.76382446]
[-10.58155537 289.50576782]
[-3.56554079 276.24774170]
[3.35251045 262.93832397]
[10.17222214 249.57826233]
[4.38658667 239.74708557]
[4.06112814 228.22456360]
[9.39229012 217.86933899]
[19.15879250 211.30628967]
[30.99946976 210.26144409]
[38.21025848 197.10832214]
[45.42105103 183.95520020]
[52.63183975 170.80207825]
[41.18165207 161.62045288]
[31.47744751 150.60966492]
[23.80728149 138.09655762]
[18.39884186 124.45258331]
[15.41267395 110.08275604]
[14.93741703 95.41362762]
[16.98718262 80.88064575]
[21.50112152 66.91520691]
[28.34524155 53.93186188]
[37.31638336 42.31601715]
[48.14823914 32.41247940]
[60.51927948 24.51523018]
[74.06227112 18.85869026]
[70.77069855 4.22429562]
[57.69864655 -4.24678993]
[54.56899261 -19.13503647]
[62.72543716 -31.54503441]
[59.43385696 -46.17942810]
[56.14228058 -60.81382370]
[52.85070419 -75.44821930]
[49.55912399 -90.08261108]
[45.36727524 -95.19214630]
[44.51227188 -100.80857086]
[46.39302826 -105.19702911]
[43.53451157 -119.92213440]
[33.30913925 -131.99493408]
[38.47924042 -145.96343994]
[35.62072372 -160.68855286]
[21.19370461 -165.76873779]
[11.31180954 -177.31192017]
[8.55287361 -192.15290833]
[13.55939484 -206.28762817]
[24.89241028 -215.95347595]
[22.03389359 -230.67858887]
[19.17537880 -245.40368652]
[16.31686401 -260.12881470]
[13.45834827 -274.85391235]
[10.59983349 -289.57901001]
[-1.79685080 -303.19628906]
[4.56539869 -319.55206299]
[1.49001789 -334.23339844]
[-1.58536303 -348.91476440]
[-11.98768330 -360.83541870]
[-7.02416277 -374.87866211]
[-10.09954357 -389.56002808]
[-13.17492485 -404.24136353]
[-16.25030518 -418.92272949]
[-29.87652016 -416.32681274]
[-45.38122177 -425.09036255]
[-53.16675949 -437.91165161]
[-60.95229721 -450.73294067]
[-68.73783875 -463.55422974]
[-76.52337646 -476.37551880]
[-89.91258240 -486.77578735]
[-83.62525940 -502.52081299]
[-66.75504303 -500.83786011]
[-63.70209122 -484.16104126]
[-55.91654968 -471.33975220]
[-48.13101196 -458.51849365]
[-40.34547424 -445.69720459]
[-32.55993652 -432.87591553]
[-18.11487770 -436.91821289]
[-18.11487770 -451.91821289]
[-18.11487770 -466.91821289]
[-18.11487770 -481.91821289]
[-18.11487770 -496.91821289]
[-18.22549629 -511.91781616]
[-18.44672775 -526.91619873]
[-18.77855873 -541.91253662]
[-19.22097206 -556.90600586]
[-28.29157829 -570.56823730]
[-20.75372696 -585.13232422]
[-4.36171436 -585.61596680]
[4.02176285 -571.52166748]
[-4.22749853 -557.34838867]
[-3.78508496 -542.35491943]
[-0.44622144 -535.76275635]
[-3.44835949 -527.13739014]
[-3.22712874 -512.13903809]
[0.01414562 -505.49835205]
[-3.11487865 -496.91821289]
[-3.11487865 -481.91821289]
[-3.11487865 -466.91821289]
[-3.11487865 -451.91821289]
[-3.11487865 -436.91821289]
[-1.56895614 -421.99810791]
[1.50642490 -407.31674194]
[4.58180571 -392.63540649]
[7.65718699 -377.95404053]
[17.83953476 -367.08349609]
[13.09598637 -351.99014282]
[16.17136765 -337.30877686]
[19.24674797 -322.62744141]
[29.19670105 -315.74981689]
[31.87968636 -303.54486084]
[25.32494354 -292.43753052]
[28.18345833 -277.71243286]
[31.04197502 -262.98730469]
[33.90048981 -248.26220703]
[36.75900650 -233.53709412]
[39.61751938 -218.81198120]
[53.74387360 -214.08845520]
[63.67528152 -202.85354614]
[66.66949463 -188.05824280]
[61.82423019 -173.65615845]
[50.34583282 -163.54707336]
[53.20434952 -148.82196045]
[63.22526169 -137.80239868]
[58.25962448 -122.78065491]
[61.11813736 -108.05554199]
[64.19351959 -93.37419128]
[67.48509979 -78.73979950]
[70.77667236 -64.10540009]
[74.06825256 -49.47100830]
[77.35983276 -34.83661270]
[90.04446411 -27.11420441]
[93.59106445 -12.31973648]
[85.40509033 0.93271774]
[88.69667053 15.56711292]
[96.83283997 14.87276077]
[104.99810791 14.96061707]
[113.11745453 15.82987404]
[121.11627197 17.47254372]
[128.92105103 19.87353516]
[136.46008301 23.01078224]
[143.66410828 26.85545921]
[150.46690369 31.37224007]
[156.80598450 36.51961899]
[162.62307739 42.25030136]
[167.86476135 48.51162720]
[172.48284912 55.24606323]
[176.43490601 62.39173126]
[179.68464661 69.88296509]
[182.20217896 77.65093994]
[183.96437073 85.62427521]
[184.95504761 93.72969818]
[185.16510010 101.89274597]
[184.59260559 110.03839111]
[183.24279785 118.09180450]
[181.12811279 125.97897339]
[178.26795959 133.62742615]
[174.68862915 140.96690369]
[170.42300415 147.92993164]
[165.51028442 154.45254517]
[159.99560547 160.47482300]
[153.92965698 165.94140625]
[147.36816406 170.80207825]
[154.57894897 183.95520020]
[161.78973389 197.10832214]
[169.00053406 210.26144409]
[176.21131897 223.41455078]
[191.41799927 222.69447327]
[205.37245178 228.62405396]
[215.32788086 239.97790527]
[219.34992981 254.46873474]
[216.69245911 269.20803833]
[207.93528748 281.28189087]
[215.14608765 294.43499756]
[222.35687256 307.58810425]
[229.56765747 320.74124146]
[244.50364685 326.59750366]
[249.09960938 341.96813965]
[239.82992554 355.06213379]
[223.80549622 355.83486938]
[213.31889343 343.69357300]
[216.41455078 327.95202637]
[209.20375061 314.79891968]
[201.99296570 301.64578247]
[194.78218079 288.49267578]
[179.89343262 289.38198853]
[166.03805542 283.69531250]
[155.98454285 272.51104736]
[151.76675415 258.01171875]
[154.27272034 243.05822754]
[163.05819702 230.62535095]
[155.84741211 217.47222900]
[148.63662720 204.31910706]
[141.42582703 191.16598511]
[134.21504211 178.01287842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[7 25]
[8 24]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[46 152]
[47 151]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[57 143]
[58 142]
[60 140]
[61 139]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[71 129]
[73 126]
[74 125]
[75 124]
[77 122]
[78 121]
[79 120]
[80 119]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 112]
[101 111]
[102 109]
[103 108]
[180 212]
[181 211]
[182 210]
[183 209]
[184 208]
[190 202]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
