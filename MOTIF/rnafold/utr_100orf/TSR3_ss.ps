%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCCCAUUGGGAGGCCGAGGGGCGCGGCCGUGGGGUGGGGAGUCCCCGGCACCCCAGGUCCGCGCCAUGGGCCGCAGGAGGGCAGCGCGCGGGCCGGGGGCGGAAGGCGGCCGCCCUCGGCACCUCCCGACGCGCUCCCUGGAGGCCUUCGCCGAGGAGGUCGGCG\
) } def
/len { sequence length } bind def

/coor [
[95.17538452 159.53132629]
[93.78295898 174.46656799]
[78.84775543 173.07391357]
[80.24012756 158.13914490]
[81.63232422 143.20388794]
[74.16469574 142.50779724]
[66.70497894 155.52134705]
[65.14094543 164.56289673]
[58.98371887 168.70561218]
[51.28339005 181.57826233]
[43.58306122 194.45089722]
[35.88273621 207.32354736]
[36.16986465 223.72018433]
[21.97606850 231.93408203]
[7.90270948 223.51550293]
[8.42725182 207.12474060]
[23.01009178 199.62321472]
[30.71041870 186.75057983]
[38.41074753 173.87792969]
[46.11107254 161.00527954]
[53.69142151 148.06163025]
[61.15114212 135.04806519]
[54.42838287 121.63895416]
[39.53775024 119.83090210]
[24.64711761 118.02285004]
[9.75648403 116.21479797]
[-5.13414955 114.40675354]
[-20.02478218 112.59870148]
[-34.91541672 110.79064941]
[-49.82221222 109.12107849]
[-64.74388123 107.59013367]
[-73.64128876 109.83332825]
[-79.92778015 105.88952637]
[-94.81841278 104.08147430]
[-109.70904541 102.27342224]
[-124.59967804 100.46537781]
[-139.49031067 98.65732574]
[-154.38093567 96.84927368]
[-169.27157593 95.04122162]
[-184.19323730 93.51027679]
[-199.14079285 92.25695801]
[-214.08834839 91.00364685]
[-228.68734741 98.47366333]
[-242.30722046 89.33959198]
[-240.93699646 72.99778748]
[-225.98625183 66.25929260]
[-212.83502197 76.05609894]
[-197.88748169 77.30941010]
[-182.93992615 78.56272888]
[-178.75190735 76.19155884]
[-173.02392578 76.45428467]
[-167.46353149 80.15058899]
[-152.57289124 81.95864105]
[-137.68226624 83.76669312]
[-122.79162598 85.57474518]
[-107.90099335 87.38278961]
[-93.01036072 89.19084167]
[-78.11972809 90.99889374]
[-63.21293259 92.66846466]
[-48.29126358 94.19940948]
[-41.28806305 91.74405670]
[-33.10736465 95.90001678]
[-18.21673203 97.70806885]
[-3.32609916 99.51612091]
[11.56453419 101.32416534]
[26.45516777 103.13221741]
[41.34579849 104.94026947]
[56.23643494 106.74832153]
[69.37041473 76.75035858]
[96.11823273 67.60434723]
[116.91477966 79.21138763]
[129.25953674 70.69041443]
[141.60429382 62.16944504]
[153.94905090 53.64847565]
[166.29380798 45.12750244]
[164.94566345 32.65329361]
[169.02091980 20.86321831]
[177.68341064 11.98766422]
[189.23547363 7.67775869]
[201.45042419 8.69842052]
[212.00173950 14.79336643]
[224.65469360 6.73713827]
[237.30764771 -1.31908917]
[249.96060181 -9.37531662]
[255.54730225 -16.65436554]
[262.92446899 -17.46115875]
[275.72500610 -25.28079796]
[288.52551270 -33.10043716]
[301.32601929 -40.92007828]
[314.12655640 -48.73971558]
[326.92706299 -56.55935669]
[339.65435791 -64.49763489]
[352.30728149 -72.55386353]
[364.96023560 -80.61008453]
[377.22528076 -89.24542999]
[389.07589722 -98.44123840]
[400.92651367 -107.63704681]
[412.77713013 -116.83285522]
[424.62774658 -126.02866364]
[436.47836304 -135.22447205]
[448.32897949 -144.42028809]
[460.17959595 -153.61608887]
[472.03021240 -162.81190491]
[483.88082886 -172.00770569]
[495.73144531 -181.20352173]
[496.14797974 -196.83555603]
[506.55380249 -208.50830078]
[522.03558350 -210.71023560]
[535.28332520 -202.40168762]
[540.04180908 -187.50569153]
[534.06420898 -173.05567932]
[520.17303467 -165.87449646]
[504.92724609 -169.35290527]
[493.07662964 -160.15708923]
[481.22601318 -150.96128845]
[469.37539673 -141.76547241]
[457.52478027 -132.56967163]
[445.67416382 -123.37385559]
[433.82354736 -114.17804718]
[421.97293091 -104.98223877]
[410.12231445 -95.78643036]
[398.27169800 -86.59062195]
[386.42108154 -77.39481354]
[400.67864990 -72.73418427]
[406.10253906 -58.74913406]
[398.71569824 -45.69406509]
[383.93450928 -43.14147186]
[372.59707642 -52.96301651]
[373.01647949 -67.95713806]
[360.36352539 -59.90090942]
[347.71057129 -51.84468079]
[343.74111938 -45.57434845]
[334.74670410 -43.75883865]
[321.94616699 -35.93920135]
[309.14566040 -28.11956024]
[296.34515381 -20.29992104]
[283.54461670 -12.48028088]
[270.74411011 -4.66064119]
[258.01681519 3.27763534]
[245.36387634 11.33386326]
[232.71092224 19.39009094]
[220.05796814 27.44631767]
[219.81616211 45.07264709]
[208.97096252 59.16795349]
[191.69340515 64.00341797]
[174.81478882 57.47226334]
[162.47003174 65.99323273]
[150.12527466 74.51420593]
[137.78051758 83.03517151]
[125.43575287 91.55614471]
[132.54801941 114.27481842]
[118.20329285 140.36619568]
[123.12927246 154.53428650]
[128.05525208 168.70237732]
[132.98121643 182.87046814]
[137.90719604 197.03855896]
[142.83317566 211.20663452]
[156.58901978 219.46234131]
[158.56816101 235.38284302]
[147.25239563 246.75531006]
[131.32220459 244.85575867]
[122.99785614 231.14134216]
[128.66508484 216.13261414]
[123.73911285 201.96452332]
[118.81313324 187.79643250]
[113.88715363 173.62835693]
[108.96118164 159.46026611]
[104.03520203 145.29217529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 22]
[7 21]
[9 20]
[10 19]
[11 18]
[12 17]
[23 68]
[24 67]
[25 66]
[26 65]
[27 64]
[28 63]
[29 62]
[30 60]
[31 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 49]
[41 48]
[42 47]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
[81 142]
[82 141]
[83 140]
[84 139]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 131]
[93 130]
[94 129]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
