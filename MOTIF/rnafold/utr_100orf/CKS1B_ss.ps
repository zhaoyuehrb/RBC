%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGUGUUUGAAAGCGAGGCCAAAGUGGGUGGGAGCGCGUGCUGUUGGGAGUUGCUUGGAGGUUGGCGGCGCGGGGCUGAAGGCUAGCAAACCGAGCGAUCAUGUCGCACAAACAAAUUUACUAUUCGGACAAAUACGACGACGAGGAGUUUGAGUAUCGACAUGUCAUGCUGCCCAAGGACAUAGCCAAGCUGGUCCCUA\
) } def
/len { sequence length } bind def

/coor [
[152.81770325 243.11077881]
[146.99790955 229.28579712]
[141.17811584 215.46083069]
[135.35832214 201.63584900]
[129.53852844 187.81086731]
[123.71872711 173.98590088]
[117.89892578 160.16091919]
[112.07913208 146.33593750]
[106.25933075 132.51097107]
[91.27033997 131.93643188]
[84.40933228 145.27532959]
[77.54831696 158.61424255]
[70.68730927 171.95315552]
[72.02283478 188.29783630]
[58.38360977 197.40296936]
[43.80049515 189.90199280]
[43.27534866 173.51124573]
[57.34839630 165.09214783]
[64.20941162 151.75323486]
[71.07041931 138.41432190]
[77.93143463 125.07541656]
[79.12477112 121.05994415]
[80.70715332 117.28337860]
[67.11523438 123.62844086]
[53.52331924 129.97349548]
[39.93140411 136.31855774]
[26.38850212 142.76757812]
[12.89541435 149.32019043]
[-0.59767312 155.87278748]
[-14.09076118 162.42538452]
[-23.12459373 175.41386414]
[-37.95323563 174.01364136]
[-51.44632339 180.56623840]
[-64.93941498 187.11883545]
[-73.67976379 200.99465942]
[-90.05410004 200.09289551]
[-97.21790314 185.34123230]
[-87.80167389 171.91488647]
[-71.49201202 173.62574768]
[-57.99892426 167.07315063]
[-44.50583649 160.52055359]
[-36.43712234 148.00076294]
[-20.64336205 148.93229675]
[-7.15027428 142.37969971]
[6.34281349 135.82710266]
[19.83590126 129.27449036]
[24.48171234 123.52199554]
[33.58634186 122.72664642]
[47.17826080 116.38158417]
[60.77017593 110.03652191]
[74.36209106 103.69146729]
[73.49272156 92.29727173]
[77.74937439 80.92892456]
[86.89437103 71.89916229]
[76.82897186 60.77766037]
[66.76358032 49.65615845]
[56.69817734 38.53466034]
[46.63278198 27.41315842]
[36.56738281 16.29165840]
[26.50198555 5.17015791]
[16.43658829 -5.95134258]
[6.37119007 -17.07284355]
[-11.11131287 -17.62225914]
[-22.56375122 -30.39256859]
[-21.26507568 -47.15801239]
[-31.49971962 -58.12396240]
[-41.73436356 -69.08991241]
[-51.96900940 -80.05586243]
[-62.20365143 -91.02181244]
[-72.43829346 -101.98776245]
[-83.00418854 -112.63491821]
[-93.89138794 -122.95329285]
[-104.77859497 -133.27165222]
[-120.78989410 -134.28054810]
[-129.86555481 -147.50976562]
[-125.04349518 -162.81097412]
[-110.02279663 -168.44641113]
[-96.32604980 -160.09304810]
[-94.46022797 -144.15885925]
[-83.57302094 -133.84049988]
[-72.68581390 -123.52212524]
[-69.87864685 -123.46497345]
[-66.92508698 -122.28974152]
[-64.25209045 -119.93512726]
[-62.30087662 -116.49571991]
[-61.47234726 -112.22240448]
[-51.23770142 -101.25645447]
[-41.00305939 -90.29050446]
[-30.76841354 -79.32455444]
[-20.53376961 -68.35860443]
[-10.29912472 -57.39265823]
[2.51676083 -58.75419998]
[13.94671345 -52.38934708]
[19.70726395 -40.42684555]
[17.49269104 -27.13824081]
[27.55808830 -16.01674080]
[37.62348557 -4.89523983]
[47.68888474 6.22626019]
[57.75428009 17.34776115]
[67.81967926 28.46926117]
[77.88507843 39.59075928]
[87.95047760 50.71226120]
[98.01586914 61.83376312]
[112.85718536 64.00984192]
[125.69161987 56.24599457]
[138.52604675 48.48214722]
[151.36048889 40.71829605]
[164.19491577 32.95444489]
[177.02934265 25.19059563]
[189.86378479 17.42674637]
[198.36352539 1.09411263]
[215.90756226 1.41488457]
[228.62150574 -6.54473162]
[230.44403076 -17.27401733]
[237.72271729 -25.06679344]
[247.87591553 -27.51297569]
[257.49169922 -24.03904533]
[270.44360352 -31.60530472]
[283.39550781 -39.17156601]
[296.34741211 -46.73782730]
[309.29931641 -54.30408478]
[322.25122070 -61.87034607]
[335.20312500 -69.43660736]
[341.03799438 -76.47088623]
[348.41195679 -77.01782990]
[361.47830200 -84.38472748]
[365.82562256 -99.34261322]
[379.18170166 -106.62755585]
[393.41494751 -102.39085388]
[406.48129272 -109.75775146]
[419.54760742 -117.12464142]
[419.02383423 -132.42118835]
[425.67916870 -146.20397949]
[437.98425293 -155.30581665]
[453.11148071 -157.63517761]
[467.58468628 -152.65679932]
[478.07809448 -141.51464844]
[482.18035889 -126.76914215]
[478.94879150 -111.80867767]
[469.12603760 -100.07105255]
[454.96923828 -94.25348663]
[439.73156738 -95.69283295]
[426.91448975 -104.05831909]
[413.84817505 -96.69142151]
[400.78186035 -89.32453156]
[397.03988647 -74.95326233]
[383.89373779 -67.29605103]
[368.84518433 -71.31839752]
[355.77886963 -63.95150375]
[342.76937866 -56.48470688]
[329.81747437 -48.91844559]
[316.86557007 -41.35218811]
[303.91366577 -33.78592682]
[290.96176147 -26.21966553]
[278.00988770 -18.65340614]
[265.05798340 -11.08714581]
[256.73550415 6.36328506]
[236.58111572 6.16921759]
[223.86717224 14.12883377]
[220.84985352 25.84610748]
[210.31867981 32.58069229]
[197.62762451 30.26117706]
[184.79319763 38.02502823]
[171.95877075 45.78887558]
[159.12432861 53.55272675]
[146.28990173 61.31657791]
[133.45547485 69.08042908]
[120.62104034 76.84427643]
[132.17774963 101.32780457]
[120.08431244 126.69116974]
[125.90410614 140.51614380]
[131.72390747 154.34112549]
[137.54370117 168.16610718]
[143.36349487 181.99107361]
[149.18328857 195.81605530]
[155.00309753 209.64102173]
[160.82289124 223.46600342]
[166.64268494 237.29098511]
[183.16104126 240.91911316]
[194.15419006 253.55149841]
[195.44050598 270.08126831]
[186.71064758 283.98074341]
[192.74162292 297.71493530]
[198.77258301 311.44909668]
[204.80355835 325.18325806]
[211.12226868 331.78634644]
[210.81991577 339.17440796]
[216.63972473 352.99938965]
[222.45951843 366.82437134]
[228.27931213 380.64935303]
[239.99737549 392.90182495]
[231.46762085 407.55377197]
[215.02700806 403.41342163]
[214.45433044 386.46914673]
[208.63453674 372.64416504]
[202.81474304 358.81918335]
[196.99494934 344.99420166]
[191.06938171 331.21423340]
[185.03842163 317.48007202]
[179.00744629 303.74591064]
[172.97647095 290.01171875]
[159.72181702 288.39111328]
[148.91281128 280.36734009]
[143.43751526 267.95111084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[4 175]
[5 174]
[6 173]
[7 172]
[8 171]
[9 170]
[10 21]
[11 20]
[12 19]
[13 18]
[23 51]
[24 50]
[25 49]
[26 48]
[27 46]
[28 45]
[29 44]
[30 43]
[32 41]
[33 40]
[34 39]
[54 103]
[55 102]
[56 101]
[57 100]
[58 99]
[59 98]
[60 97]
[61 96]
[62 95]
[65 91]
[66 90]
[67 89]
[68 88]
[69 87]
[70 86]
[71 81]
[72 80]
[73 79]
[104 168]
[105 167]
[106 166]
[107 165]
[108 164]
[109 163]
[110 162]
[112 159]
[113 158]
[117 156]
[118 155]
[119 154]
[120 153]
[121 152]
[122 151]
[123 150]
[125 149]
[126 148]
[129 145]
[130 144]
[131 143]
[182 201]
[183 200]
[184 199]
[185 198]
[187 197]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
