%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGGCGGCGACGGCGGCGGCGGCCUGAACAGUGUGCACCACCACCCCCUGCUCCCCCGUCACGAACUCAACAUGGCCCAUAACGCGGGCGCCGCGGCCGCCGCCGGCACCCACAGCGCCAAGAGCGGCGGCUCCGAGGCGGCUCUCAAGGAGGGUGGAAGCGCCGCCGCGC\
) } def
/len { sequence length } bind def

/coor [
[87.13020325 268.16513062]
[72.64566040 262.27172852]
[65.38379669 248.42256165]
[68.77345276 233.15678406]
[81.21412659 223.68240356]
[81.74951172 208.69197083]
[82.28489685 193.70152283]
[82.82028198 178.71107483]
[83.35566711 163.72064209]
[83.89104462 148.73019409]
[84.42642975 133.73976135]
[84.96181488 118.74931335]
[85.02359009 111.25413513]
[87.59733582 105.15727234]
[91.95306396 101.16441345]
[79.94493866 92.17524719]
[67.93682098 83.18608093]
[55.92870331 74.19691467]
[43.92058563 65.20775604]
[31.91246796 56.21858978]
[19.90434837 47.22942352]
[7.89622974 38.24025726]
[-4.11188841 29.25109291]
[-16.12000656 20.26192856]
[-57.92191315 21.17255783]
[-72.15430450 16.43556404]
[-86.38668823 11.69857025]
[-100.61907959 6.96157646]
[-114.89318085 2.35179353]
[-129.20785522 -2.13041139]
[-141.65081787 6.95137024]
[-156.87754822 6.96477938]
[-169.04850769 -1.88574660]
[-173.61940002 -16.03653908]
[-187.93406677 -20.51874352]
[-202.24873352 -25.00094986]
[-216.64112854 -29.22693825]
[-231.10665894 -33.19536209]
[-245.57220459 -37.16378784]
[-254.70927429 -36.41694641]
[-260.25930786 -41.33429337]
[-274.65170288 -45.56028366]
[-282.98297119 -32.94754410]
[-294.66284180 -23.35212708]
[-308.65274048 -17.62725067]
[-323.70867920 -16.28196716]
[-338.49191284 -19.43589973]
[-351.68792725 -26.80859947]
[-362.12335205 -37.74449158]
[-368.87023926 -51.27116776]
[-371.32867432 -66.18583679]
[-369.28005981 -81.16230774]
[-362.90658569 -94.86887360]
[-352.77493286 -106.08676147]
[-339.78601074 -113.81848145]
[-325.09478760 -117.37653351]
[-310.00762939 -116.44454193]
[-295.86602783 -111.10537720]
[-283.92745972 -101.83379364]
[-275.25350952 -89.45420837]
[-270.61544800 -75.06742096]
[-270.42568970 -59.95267868]
[-256.03329468 -55.72668839]
[-241.60377502 -51.62931824]
[-227.13824463 -47.66089249]
[-212.67271423 -43.69247055]
[-208.12770081 -45.25258255]
[-202.55381775 -43.95111847]
[-197.76654053 -39.31562042]
[-183.45185852 -34.83341599]
[-169.13719177 -30.35121155]
[-157.31204224 -39.36808014]
[-142.26690674 -39.69671631]
[-129.76701355 -31.00155258]
[-124.72564697 -16.44508362]
[-110.41097260 -11.96287823]
[-103.06436920 -12.96807575]
[-95.88208771 -7.27081203]
[-81.64969635 -2.53381824]
[-67.41730499 2.20317554]
[-53.18492126 6.94016933]
[-46.73481369 3.11314416]
[-58.00061798 -6.79047489]
[-52.06301880 -20.56526756]
[-37.12759399 -19.17489624]
[-33.83459854 -4.54090643]
[-27.38449287 -8.36793137]
[-24.72119522 -23.12960052]
[-22.05789566 -37.89126587]
[-19.39459801 -52.65293503]
[-16.73130035 -67.41460419]
[-19.86928177 -84.07561493]
[-4.72806644 -91.70319366]
[6.79292679 -79.26522827]
[-1.96963251 -64.75130463]
[-4.63293028 -49.98963928]
[-7.29622841 -35.22797012]
[-9.95952606 -20.46630096]
[-12.62282467 -5.70463371]
[-7.13084221 8.25380898]
[4.87727642 17.24297523]
[16.88539505 26.23213959]
[28.89351273 35.22130585]
[40.90163040 44.21046829]
[52.90975189 53.19963455]
[64.91786957 62.18880081]
[76.92598724 71.17796326]
[88.93410492 80.16712952]
[100.94222260 89.15629578]
[114.64177704 95.26549530]
[129.35356140 98.19184875]
[142.39817810 89.67859650]
[157.27633667 92.85591125]
[165.31202698 105.34443665]
[180.02380371 108.27079010]
[194.73558044 111.19714355]
[209.44735718 114.12349701]
[218.85966492 104.02875519]
[231.92973328 99.94345093]
[245.20378113 102.83486938]
[255.22937012 111.84129333]
[259.45333862 124.52503967]
[274.11056519 127.71352386]
[287.30505371 119.43445587]
[302.12411499 122.87683105]
[309.93563843 135.50679016]
[324.59283447 138.69526672]
[339.25003052 141.88374329]
[348.33404541 140.64892578]
[354.13931274 145.26216125]
[368.73727417 148.71174622]
[383.33523560 152.16133118]
[398.54489136 147.80508423]
[409.15164185 158.26191711]
[423.74960327 161.71150208]
[438.34756470 165.16110229]
[453.89059448 159.93170166]
[466.01025391 170.97912598]
[462.23889160 186.93872070]
[446.45617676 191.39263916]
[434.89797974 179.75904846]
[420.30001831 176.30946350]
[405.70205688 172.85987854]
[391.53656006 177.46287537]
[379.88562012 166.75929260]
[365.28768921 163.30970764]
[350.68972778 159.86012268]
[336.06155396 156.54095459]
[321.40435791 153.35247803]
[306.74716187 150.16398621]
[294.39486694 158.40759277]
[279.48495483 155.38281250]
[270.92208862 142.37072754]
[256.26486206 139.18225098]
[244.38520813 150.48999023]
[227.94317627 152.52062988]
[213.38040161 144.27946472]
[206.52101135 128.83528137]
[191.80923462 125.90892792]
[177.09744263 122.98256683]
[162.38566589 120.05621338]
[150.18251038 128.51898193]
[135.22097778 125.76081085]
[126.42720032 112.90363312]
[111.71541595 109.97727203]
[99.95226288 119.28469849]
[99.41687775 134.27514648]
[98.88149261 149.26557922]
[98.34610748 164.25602722]
[97.81072235 179.24645996]
[97.27533722 194.23690796]
[96.73995209 209.22735596]
[96.20456696 224.21778870]
[107.93764496 234.55552673]
[110.22961426 250.02424622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[15 109]
[16 108]
[17 107]
[18 106]
[19 105]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 81]
[26 80]
[27 79]
[28 78]
[29 76]
[30 75]
[34 71]
[35 70]
[36 69]
[37 66]
[38 65]
[39 64]
[41 63]
[42 62]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[110 165]
[111 164]
[114 161]
[115 160]
[116 159]
[117 158]
[122 154]
[123 153]
[126 150]
[127 149]
[128 148]
[130 147]
[131 146]
[132 145]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
