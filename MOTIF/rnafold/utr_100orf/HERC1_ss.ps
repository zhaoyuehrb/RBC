%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUUCCCUUUGACAAGUCGCUGCUGCUGCAGCAAAAAUAAAGGACGCGACCGCCGCAGCCUCUGCGGAGCCGGGCUCGGGUCGCCGGAGCCGCGCCCCACCCCGCCAGCUCCAGAGCCACGACUAAUGGCUGAAGGAUAAAUCAACAUGGCAACUAUGAUUCCACCAGUGAAGCUGAAAUGGCUUGAACACUUGAACAGCUCCUGGAUUACAGAGGACAGUGAAUCUAUUGCUACAAGAGAGGGAG\
) } def
/len { sequence length } bind def

/coor [
[147.12835693 411.50650024]
[132.19036865 416.13150024]
[117.79443359 410.02484131]
[110.73787689 396.06994629]
[114.35258484 380.85589600]
[126.93180847 371.56625366]
[127.68849945 356.58535767]
[128.44519043 341.60446167]
[129.20187378 326.62356567]
[129.95855713 311.64266968]
[130.71525574 296.66174316]
[131.47193909 281.68084717]
[113.56265259 267.22000122]
[109.16274261 245.99095154]
[118.61897278 227.98004150]
[110.39391327 215.43618774]
[102.16885376 202.89231873]
[93.94379425 190.34846497]
[85.71873474 177.80461121]
[77.49368286 165.26074219]
[62.51784897 164.40956116]
[52.92444611 175.94068909]
[43.33104324 187.47180176]
[33.73764038 199.00291443]
[24.14423561 210.53402710]
[21.89926720 226.77877808]
[6.60854149 232.70547485]
[-5.99815512 222.21723938]
[-2.95213342 206.10345459]
[12.61312103 200.94062805]
[22.20652390 189.40950012]
[31.79992867 177.87838745]
[41.39333344 166.34727478]
[50.98673630 154.81616211]
[47.03376389 148.44245911]
[34.28636932 156.34841919]
[21.53897667 164.25436401]
[8.79145241 172.16009521]
[0.88593054 159.41242981]
[13.63303185 151.50695801]
[26.38042450 143.60101318]
[39.12781906 135.69506836]
[35.17484665 129.32138062]
[20.58160019 132.79084778]
[5.98835564 136.26031494]
[-2.32298541 149.43450928]
[-17.17203522 152.74514771]
[-29.68039513 144.74037170]
[-44.27363968 148.20983887]
[-58.86688232 151.67930603]
[-68.47000885 164.53074646]
[-84.50900269 164.89143372]
[-94.68013000 152.48468018]
[-91.18096924 136.82786560]
[-76.69577789 129.93159485]
[-62.33635330 137.08605957]
[-47.74310684 133.61659241]
[-33.14986420 130.14712524]
[-25.58242798 117.36943054]
[-10.83222675 113.64301300]
[2.51888776 121.66706848]
[17.11213303 118.19760132]
[31.70537758 114.72813416]
[34.62012863 100.01405334]
[22.45158958 91.24326324]
[10.28305054 82.47248077]
[-1.94057679 73.77864075]
[-14.21880436 65.16207886]
[-26.49703217 56.54551697]
[-40.40908432 62.90177917]
[-55.53492737 61.45066452]
[-67.82189178 52.68157578]
[-74.02831268 39.03107071]
[-72.57853699 24.20664215]
[-84.85676575 15.59008121]
[-97.13499451 6.97352076]
[-109.41322327 -1.64304006]
[-125.15393066 -3.23701906]
[-131.12722778 -16.88139534]
[-143.40545654 -25.49795532]
[-155.68368530 -34.11451721]
[-171.42437744 -35.70849609]
[-177.39767456 -49.35287094]
[-189.67590332 -57.96943283]
[-206.04997253 -58.87612534]
[-213.20932007 -73.62995911]
[-203.78904724 -87.05345917]
[-187.47990417 -85.33767700]
[-181.05934143 -70.24765778]
[-168.78111267 -61.63109970]
[-153.91864014 -60.65343475]
[-147.06712341 -46.39274597]
[-134.78889465 -37.77618408]
[-122.51065826 -29.15962410]
[-107.64817810 -28.18195915]
[-100.79666138 -13.92126846]
[-88.51843262 -5.30470753]
[-76.24020386 3.31185341]
[-63.96197891 11.92841434]
[-50.51392746 5.52407980]
[-35.56640625 6.71890020]
[-23.14176750 15.29180813]
[-16.63368416 29.02285576]
[-17.88047218 44.26728821]
[-5.60224390 52.88385010]
[6.67598391 61.50041199]
[13.93834019 62.76694870]
[19.05383301 70.30394745]
[31.22237396 79.07472992]
[43.39091492 87.84551239]
[57.48915100 57.04487228]
[87.42190552 38.29946518]
[87.80036926 23.30424118]
[88.17883301 8.30901718]
[75.89169312 -4.15933418]
[76.42567444 -21.31813431]
[88.96080017 -32.54688644]
[89.15004730 -47.54569244]
[89.33929443 -62.54449844]
[89.52854156 -77.54330444]
[89.71778870 -92.54210663]
[77.74922943 -102.60628510]
[75.10083771 -118.01796722]
[83.02310944 -131.50024414]
[97.77538300 -136.68717957]
[112.39209747 -131.12966919]
[119.97167206 -117.45181274]
[116.93527222 -102.11185455]
[104.71659088 -92.35285950]
[104.52734375 -77.35405731]
[104.33809662 -62.35525131]
[104.14884949 -47.35644531]
[103.95960236 -32.35763550]
[114.14812469 -24.49302292]
[118.01165009 -12.01206398]
[113.92864227 0.60335654]
[103.17405701 8.68748188]
[102.79559326 23.68270683]
[102.41712952 38.67793274]
[109.36863708 41.49332809]
[114.99943542 27.59030151]
[120.63023376 13.68727589]
[126.26123810 -0.21566388]
[140.16409302 5.41556072]
[134.53326416 19.31807137]
[128.90246582 33.22109604]
[123.27166748 47.12412262]
[130.22317505 49.93952179]
[140.38606262 38.90703583]
[150.54895020 27.87455177]
[160.71183777 16.84206581]
[170.87472534 5.80958128]
[177.15907288 -9.93663597]
[194.02960205 -8.25687313]
[197.08570862 8.41935349]
[181.90721130 15.97246838]
[171.74432373 27.00495338]
[161.58143616 38.03743744]
[151.41854858 49.06992340]
[141.25566101 60.10240936]
[145.40768433 66.34826660]
[157.89939880 58.04424286]
[170.39112854 49.74021912]
[185.36126709 48.79427338]
[178.69514465 62.23194122]
[166.20343018 70.53596497]
[153.71170044 78.83999634]
[157.86372375 85.08585358]
[171.96986389 79.98520660]
[186.07600403 74.88455200]
[200.18215942 69.78390503]
[213.02140808 58.71187210]
[227.21499634 67.98432159]
[222.23410034 84.19009399]
[205.28280640 83.89005280]
[191.17666626 88.99069977]
[177.07051086 94.09135437]
[162.96437073 99.19200134]
[158.44018555 120.57248688]
[147.00898743 138.78160095]
[130.27954102 151.71496582]
[110.45359039 157.97842407]
[90.03754425 157.03569031]
[98.26259613 169.57954407]
[106.48765564 182.12341309]
[114.71271515 194.66726685]
[122.93777466 207.21112061]
[131.16282654 219.75498962]
[145.44917297 217.47195435]
[159.67419434 222.37817383]
[170.30697632 233.83033752]
[174.44473267 249.50038147]
[170.58815002 265.83859253]
[181.55630493 276.07086182]
[192.52445984 286.30316162]
[203.49261475 296.53543091]
[214.29170227 295.53088379]
[223.67407227 300.52014160]
[228.66842651 309.65063477]
[227.84393311 319.80517578]
[238.55043030 330.31091309]
[249.25691223 340.81668091]
[262.60601807 339.13870239]
[274.31698608 345.35748291]
[280.22738647 357.00942993]
[278.38302612 369.74743652]
[288.95611572 380.38745117]
[299.52923584 391.02743530]
[310.10232544 401.66744995]
[320.67541504 412.30746460]
[331.24850464 422.94744873]
[339.49539185 426.81573486]
[341.88681030 433.78903198]
[352.32482910 444.56158447]
[367.66769409 442.24291992]
[381.42767334 449.41528320]
[388.31375122 463.32073975]
[385.67813110 478.61233521]
[374.53424072 489.41015625]
[359.16711426 491.56222534]
[345.48574829 484.24102783]
[338.75091553 470.26171875]
[341.55227661 454.99960327]
[331.11425781 444.22705078]
[320.60848999 433.52053833]
[310.03540039 422.88055420]
[299.46231079 412.24053955]
[288.88922119 401.60052490]
[278.31613159 390.96054077]
[267.74304199 380.32052612]
[250.92695618 380.97915649]
[238.60321045 369.02780151]
[238.75115967 351.52319336]
[228.04466248 341.01742554]
[217.33816528 330.51165771]
[198.30210876 327.03799438]
[193.26033020 307.50360107]
[182.29217529 297.27130127]
[171.32402039 287.03903198]
[160.35586548 276.80673218]
[146.45285034 282.43753052]
[145.69615173 297.41845703]
[144.93946838 312.39935303]
[144.18276978 327.38024902]
[143.42608643 342.36114502]
[142.66940308 357.34204102]
[141.91270447 372.32293701]
[153.49185181 382.83282471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 247]
[7 246]
[8 245]
[9 244]
[10 243]
[11 242]
[12 241]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[21 34]
[22 33]
[23 32]
[24 31]
[25 30]
[43 63]
[44 62]
[45 61]
[48 58]
[49 57]
[50 56]
[64 110]
[65 109]
[66 108]
[67 106]
[68 105]
[69 104]
[74 99]
[75 98]
[76 97]
[77 96]
[79 94]
[80 93]
[81 92]
[83 90]
[84 89]
[112 139]
[113 138]
[114 137]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
[168 178]
[169 177]
[170 176]
[171 175]
[193 240]
[194 239]
[195 238]
[196 237]
[200 235]
[201 234]
[202 233]
[206 230]
[207 229]
[208 228]
[209 227]
[210 226]
[211 225]
[213 224]
[214 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
