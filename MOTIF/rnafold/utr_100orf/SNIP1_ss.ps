%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUUCUGGGAGCCUGGGCACCCCGGAAGCGGAAGUCCAGGAGUUAAACUCGUCAUUUCCUCCAGCUAGAGGAGCUCAACUGAUCUGUUUUCUUUCGCCCAGCCAAAAUCACAGAAUGAAGGCGGUGAAGAGCGAACGGGAGCGAGGGAGCCGGCGAAGACACCGGGACGGGGACGUGGUGCUGCCGGCGGGGGUGGUGGUGAAGCAGGAGCGUC\
) } def
/len { sequence length } bind def

/coor [
[52.39553833 463.85421753]
[54.78971863 448.40100098]
[66.59088898 438.14108276]
[66.15461731 423.14743042]
[65.71834564 408.15374756]
[65.28207397 393.16009521]
[64.84580231 378.16644287]
[64.40953064 363.17279053]
[50.56326294 354.35153198]
[44.64530945 338.85968018]
[49.17362595 322.73345947]
[62.55392456 312.38336182]
[61.89963531 297.39764404]
[61.24534225 282.41192627]
[51.36655807 276.71316528]
[45.40223312 266.85211182]
[44.93217087 255.21726990]
[50.18861389 244.69274902]
[59.96992493 237.94323730]
[59.75176620 222.94482422]
[59.53360748 207.94641113]
[59.31544876 192.94799805]
[59.09729004 177.94958496]
[58.87913132 162.95117188]
[45.37815094 156.41484070]
[33.47784805 165.54626465]
[21.57754898 174.67768860]
[22.11834335 190.18533325]
[13.41279793 203.03030396]
[-1.19162726 208.27343750]
[-16.07923126 203.89863586]
[-25.52542877 191.58810425]
[-25.89796257 176.07550049]
[-17.05358505 163.32574463]
[-2.39314246 158.24134827]
[12.44612789 162.77738953]
[24.34642792 153.64596558]
[36.24672699 144.51454163]
[33.02774429 137.74046326]
[26.58977509 124.19231415]
[23.37079239 117.41822815]
[8.77511883 120.87747192]
[-5.82055426 124.33670807]
[-20.41622734 127.79594421]
[-34.43403244 137.33206177]
[-47.47798538 126.50193787]
[-40.68203354 110.96966553]
[-23.87546539 113.20027161]
[-9.27979279 109.74103546]
[5.31588078 106.28179932]
[19.91155434 102.82255554]
[20.29318047 95.33227539]
[5.31261063 94.56902313]
[-9.66794586 93.80551910]
[-8.90419674 78.82498169]
[6.07586241 79.58845520]
[21.05643082 80.35170746]
[21.43805695 72.86141968]
[7.26954412 67.93666077]
[-6.89896870 63.01190567]
[-21.06748199 58.08714676]
[-35.23599625 53.16239166]
[-49.34988403 60.27390671]
[-64.33213043 55.24320602]
[-71.29402161 41.05491638]
[-66.10520935 26.12669945]
[-51.84410477 19.31519890]
[-36.97158051 24.66155815]
[-30.31123734 38.99387741]
[-16.14272499 43.91863632]
[-1.97421110 48.84339142]
[12.19430161 53.76815033]
[26.36281586 58.69290924]
[38.65009689 50.08926010]
[38.86825562 35.09084702]
[39.08641434 20.09243393]
[39.30456924 5.09402084]
[28.62592697 15.62808704]
[13.68481541 16.95594025]
[1.31583107 8.47017479]
[-2.82301474 -5.94752121]
[3.16153264 -19.70198250]
[16.53192902 -26.50143051]
[31.17208290 -23.23555756]
[40.38545609 -11.39709854]
[42.12685013 -26.29567337]
[43.86824417 -41.19424820]
[45.60963821 -56.09282303]
[47.35103226 -70.99140167]
[49.09242630 -85.88997650]
[43.00954437 -100.49507904]
[52.17207336 -112.23805237]
[53.91346741 -127.13662720]
[55.65486145 -142.03520203]
[57.39625549 -156.93377686]
[59.02925873 -171.84461975]
[60.55378342 -186.76695251]
[62.07830811 -201.68927002]
[63.60283661 -216.61160278]
[61.25119400 -222.78421021]
[62.22148132 -228.37899780]
[65.39488220 -231.94354248]
[67.35277557 -246.81521606]
[69.31066895 -261.68688965]
[55.85359192 -268.66421509]
[45.59674835 -279.82543945]
[39.77869415 -293.82278442]
[39.10198975 -308.96603394]
[43.64835358 -323.42654419]
[52.86878967 -335.45812988]
[65.64987946 -343.60797119]
[80.44824982 -346.89184570]
[95.47692871 -344.91329956]
[108.92111969 -337.91119385]
[119.15738678 -326.73107910]
[124.94963074 -312.72302246]
[125.59842682 -297.57855225]
[121.02542114 -283.12646484]
[111.78282928 -271.11187744]
[98.98674011 -262.98562622]
[84.18234253 -259.72900391]
[82.22444916 -244.85731506]
[80.26655579 -229.98565674]
[78.52516174 -215.08706665]
[77.00063324 -200.16474915]
[75.47611237 -185.24241638]
[73.95158386 -170.32009888]
[76.39797211 -163.34907532]
[72.29483032 -155.19238281]
[70.55343628 -140.29380798]
[68.81204224 -125.39523315]
[67.07064819 -110.49665833]
[73.27808380 -96.95719910]
[63.99100113 -84.14858246]
[62.24960709 -69.25000763]
[60.50821304 -54.35142899]
[58.76681900 -39.45285416]
[57.02542496 -24.55427933]
[55.28403091 -9.65570450]
[54.30298615 5.31217909]
[54.08482742 20.31059265]
[53.86666870 35.30900574]
[53.64850998 50.30741882]
[74.27095795 41.93883896]
[95.06616974 41.14783859]
[113.50318909 47.08507919]
[127.63068390 58.13301468]
[136.28308105 72.19029236]
[139.16593933 87.00071716]
[136.81578064 100.47976685]
[151.46022034 103.72635651]
[166.10466003 106.97295380]
[180.74909973 110.21954346]
[195.39353943 113.46614075]
[210.03797913 116.71273804]
[216.44184875 115.09358978]
[221.88616943 116.70683289]
[225.05819702 120.27259827]
[239.60202026 123.94374847]
[248.68470764 123.00981140]
[254.32989502 127.77549744]
[268.81878662 131.65777588]
[283.30767822 135.54006958]
[297.79656982 139.42234802]
[302.83096313 138.07196045]
[307.42181396 138.72044373]
[310.88259888 140.86486816]
[312.82559204 143.80291748]
[327.13134766 148.31350708]
[341.43710327 152.82409668]
[357.32171631 148.74833679]
[368.59878540 160.65461731]
[363.66748047 176.29475403]
[347.60067749 179.57952881]
[336.92651367 167.12985229]
[322.62078857 162.61926270]
[308.31503296 158.10867310]
[293.91427612 153.91123962]
[279.42538452 150.02894592]
[264.93649292 146.14666748]
[250.44761658 142.26438904]
[235.93087769 138.48756409]
[221.38705444 134.81640625]
[206.79138184 131.35717773]
[192.14694214 128.11058044]
[177.50250244 124.86399078]
[162.85806274 121.61739349]
[148.21362305 118.37079620]
[133.56918335 115.12420654]
[119.25907898 148.71810913]
[73.87754822 162.73301697]
[74.09570312 177.73143005]
[74.31385803 192.72984314]
[74.53202057 207.72825623]
[74.75017548 222.72666931]
[74.96833801 237.72508240]
[89.05214691 250.40069580]
[89.38867188 269.02606201]
[76.23106384 281.75762939]
[76.88536072 296.74334717]
[77.53964996 311.72906494]
[89.56621552 318.45913696]
[96.64158630 330.15954590]
[97.00967407 343.71966553]
[90.68122864 355.59564209]
[79.40318298 362.73654175]
[79.83945465 377.73019409]
[80.27572632 392.72384644]
[80.71199799 407.71749878]
[81.14826965 422.71115112]
[81.58454132 437.70480347]
[93.96230316 447.26119995]
[97.25096130 462.54907227]
[89.89769745 476.34991455]
[75.37451172 482.14743042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 211]
[4 210]
[5 209]
[6 208]
[7 207]
[8 206]
[12 201]
[13 200]
[14 199]
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[24 191]
[25 38]
[26 37]
[27 36]
[41 51]
[42 50]
[43 49]
[44 48]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[74 143]
[75 142]
[76 141]
[77 140]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[92 132]
[93 131]
[94 130]
[95 129]
[96 127]
[97 126]
[98 125]
[99 124]
[102 123]
[103 122]
[104 121]
[150 189]
[151 188]
[152 187]
[153 186]
[154 185]
[155 184]
[158 183]
[159 182]
[161 181]
[162 180]
[163 179]
[164 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
