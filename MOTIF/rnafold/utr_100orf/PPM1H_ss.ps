%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAGGCUCUGGGAGCCGCGCGCGGCGCGUCCCAGUGGCCCGACUCGCCGUGCGCCCGGCGCCCACCGCAGCCUGCAUGCCCCGCGCUGCGCCUUGCCCGGCCCCCGCCGCCUCCUGCUCGCACCGCUGCAGCCGGGCGCCGGAGUAAUAUGCUCACUCGAGUGAAAUCUGCCGUGGCCAAUUUCAUGGGCGGCAUCAUGGCUGGCAGCUCAGGCUCCGAGCACGGCGGCGGCAGCUGCGGAGGCUCGG\
) } def
/len { sequence length } bind def

/coor [
[-66.99311829 266.90051270]
[-77.03083038 264.48608398]
[-85.66857147 258.90142822]
[-98.12751007 267.25454712]
[-110.58644867 275.60769653]
[-123.04538727 283.96081543]
[-135.50431824 292.31396484]
[-147.96325684 300.66708374]
[-156.26896667 320.43875122]
[-176.91705322 320.84423828]
[-189.05230713 329.66101074]
[-201.18756104 338.47778320]
[-213.32281494 347.29455566]
[-219.93952942 361.66571045]
[-234.78398132 362.88699341]
[-246.91923523 371.70379639]
[-259.05447388 380.52056885]
[-271.07800293 389.48913574]
[-282.98785400 398.60809326]
[-294.89770508 407.72705078]
[-306.80755615 416.84600830]
[-318.71740723 425.96496582]
[-330.62725830 435.08392334]
[-342.53713989 444.20285034]
[-354.44699097 453.32180786]
[-366.35684204 462.44076538]
[-378.26669312 471.55972290]
[-384.52017212 486.09262085]
[-399.32922363 487.68655396]
[-411.23907471 496.80551147]
[-423.14895630 505.92446899]
[-434.88479614 515.26629639]
[-446.44250488 524.82763672]
[-454.79269409 539.58270264]
[-471.28262329 535.64343262]
[-472.06219482 518.70739746]
[-456.00387573 513.26995850]
[-444.44616699 503.70858765]
[-443.74639893 500.27709961]
[-441.36474609 497.00915527]
[-437.39373779 494.68481445]
[-432.26788330 494.01461792]
[-420.35803223 484.89566040]
[-408.44818115 475.77670288]
[-403.04660034 461.89605713]
[-387.38565063 459.64987183]
[-375.47579956 450.53091431]
[-363.56594849 441.41195679]
[-351.65606689 432.29299927]
[-339.74621582 423.17404175]
[-327.83636475 414.05508423]
[-315.92651367 404.93615723]
[-304.01666260 395.81719971]
[-292.10681152 386.69824219]
[-280.19692993 377.57928467]
[-278.69302368 373.07061768]
[-274.35528564 369.44845581]
[-267.87127686 368.38531494]
[-255.73600769 359.56854248]
[-243.60075378 350.75173950]
[-237.85205078 337.01123047]
[-222.13960266 335.15930176]
[-210.00434875 326.34252930]
[-197.86909485 317.52575684]
[-185.73384094 308.70898438]
[-185.79435730 299.87445068]
[-181.73371887 291.87393188]
[-174.34439087 286.54687500]
[-165.19903564 285.18209839]
[-156.31639099 288.20816040]
[-143.85745239 279.85501099]
[-131.39851379 271.50189209]
[-118.93958282 263.14874268]
[-106.48064423 254.79562378]
[-94.02170563 246.44248962]
[-94.57260895 226.86198425]
[-83.06645966 210.83042908]
[-64.06212616 205.00097656]
[-45.27352905 211.92359924]
[-33.25002289 202.95501709]
[-21.22651863 193.98643494]
[-9.25960159 184.94250488]
[2.65025449 175.82354736]
[14.56011009 166.70458984]
[26.46996689 157.58563232]
[38.32229233 148.39202881]
[50.11661911 139.12413025]
[61.91094589 129.85624695]
[73.70526886 120.58834839]
[85.49959564 111.32044983]
[86.91122437 96.38702393]
[77.06243896 85.07324982]
[67.21364594 73.75948334]
[51.43176651 72.91821289]
[40.92944717 61.10818100]
[41.93752670 45.33607483]
[53.85793304 34.95920181]
[69.61849976 36.13397980]
[79.86875916 48.16343307]
[78.52742004 63.91069794]
[88.37620544 75.22446442]
[98.22499084 86.53823853]
[99.56253052 71.59799194]
[113.55718231 66.19893646]
[124.58240509 76.36971283]
[120.32645416 90.75431824]
[133.64849854 83.86061859]
[146.97055054 76.96691895]
[160.29260254 70.07322693]
[173.61463928 63.17952728]
[186.93669128 56.28582764]
[200.25874329 49.39212799]
[202.93988037 38.88376236]
[210.79010010 31.72271156]
[221.06695557 30.08504486]
[230.35424805 34.27152252]
[243.84532166 27.71478844]
[257.33639526 21.15805054]
[270.82748413 14.60131454]
[284.31857300 8.04457855]
[297.80963135 1.48784184]
[303.23486328 -15.15576935]
[318.71929932 -22.56864929]
[334.45343018 -16.59711456]
[347.86105347 -23.32286263]
[361.13952637 -30.30012894]
[374.28411865 -37.52643204]
[387.42871094 -44.75273895]
[400.57333374 -51.97904587]
[413.71792603 -59.20534897]
[426.81686401 -66.51409912]
[439.86962891 -73.90501404]
[452.92236328 -81.29592133]
[465.97512817 -88.68682861]
[479.02789307 -96.07774353]
[492.03393555 -103.55052185]
[504.99279785 -111.10486603]
[513.01843262 -124.73938751]
[527.91046143 -124.46470642]
[540.86932373 -132.01905823]
[553.82818604 -139.57339478]
[566.78704834 -147.12774658]
[577.78588867 -157.32704163]
[586.29492188 -169.68003845]
[594.80395508 -182.03302002]
[603.31298828 -194.38601685]
[611.82202148 -206.73899841]
[615.82769775 -223.21295166]
[632.76672363 -223.92424011]
[638.13940430 -207.84411621]
[624.17498779 -198.22996521]
[615.66595459 -185.87698364]
[607.15692139 -173.52398682]
[598.64788818 -161.17100525]
[590.13885498 -148.81800842]
[599.33288574 -136.96516418]
[608.52606201 -125.11336517]
[622.60705566 -130.28300476]
[636.68811035 -135.45265198]
[641.18188477 -140.24620056]
[646.60607910 -141.83201599]
[651.18841553 -140.57040405]
[665.39489746 -145.38456726]
[679.60137939 -150.19871521]
[693.80786133 -155.01287842]
[708.01434326 -159.82702637]
[722.22082520 -164.64117432]
[736.42724609 -169.45533752]
[743.47491455 -183.34664917]
[757.95086670 -188.02651978]
[771.15069580 -181.22207642]
[785.35717773 -186.03622437]
[795.76379395 -198.71035767]
[811.89691162 -195.76841736]
[817.16009521 -180.23680115]
[806.13909912 -168.09312439]
[790.17132568 -171.82975769]
[775.96484375 -167.01559448]
[769.62091064 -153.58836365]
[755.28210449 -148.50375366]
[741.24145508 -155.24885559]
[727.03497314 -150.43470764]
[712.82849121 -145.62055969]
[698.62200928 -140.80639648]
[684.41552734 -135.99224854]
[670.20904541 -131.17808533]
[656.00256348 -126.36393738]
[641.85772705 -121.37164307]
[627.77673340 -116.20199585]
[613.69567871 -111.03235626]
[574.34136963 -134.16889954]
[561.38250732 -126.61454773]
[548.42370605 -119.06019592]
[535.46484375 -111.50585175]
[528.36614990 -98.41166687]
[512.54711914 -98.14601135]
[499.58828735 -90.59166718]
[495.40319824 -84.52333069]
[486.41879272 -83.02498627]
[473.36602783 -75.63407898]
[460.31329346 -68.24316406]
[447.26052856 -60.85225677]
[434.20776367 -53.46134567]
[429.94674683 -47.44607925]
[420.94424438 -46.06074905]
[407.79962158 -38.83444214]
[394.65502930 -31.60813904]
[381.51043701 -24.38183403]
[368.36584473 -17.15552902]
[367.03546143 -13.91595364]
[364.08364868 -11.15215111]
[359.74743652 -9.61307621]
[354.58679199 -9.91524124]
[341.17916870 -3.18949294]
[338.87753296 9.47353745]
[329.56921387 18.64129448]
[316.48904419 20.81384850]
[304.36636353 14.97892094]
[290.87530518 21.53565788]
[277.38421631 28.09239388]
[263.89312744 34.64913177]
[250.40205383 41.20586777]
[236.91098022 47.76260376]
[227.24574280 64.52664948]
[207.15243530 62.71417618]
[193.83038330 69.60787201]
[180.50834656 76.50157166]
[167.18629456 83.39527130]
[153.86424255 90.28897095]
[140.54220581 97.18266296]
[127.22015381 104.07636261]
[94.76749420 123.11477661]
[82.97316742 132.38267517]
[71.17884064 141.65057373]
[59.38451385 150.91845703]
[47.59018707 160.18635559]
[42.79201508 167.92857361]
[35.58892059 169.49549866]
[23.67906570 178.61444092]
[11.76920891 187.73339844]
[-0.14064707 196.85235596]
[-5.03572702 204.53366089]
[-12.25794315 206.00994873]
[-24.28144836 214.97851562]
[-36.30495453 223.94709778]
[-33.99699783 234.24452209]
[-35.22862244 244.68688965]
[-39.83543396 254.09628296]
[-47.27374649 261.41970825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 75]
[4 74]
[5 73]
[6 72]
[7 71]
[8 70]
[10 65]
[11 64]
[12 63]
[13 62]
[15 60]
[16 59]
[17 58]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[26 47]
[27 46]
[29 44]
[30 43]
[31 42]
[32 38]
[33 37]
[79 245]
[80 244]
[81 243]
[82 241]
[83 240]
[84 239]
[85 238]
[86 236]
[87 235]
[88 234]
[89 233]
[90 232]
[91 102]
[92 101]
[93 100]
[106 231]
[107 230]
[108 229]
[109 228]
[110 227]
[111 226]
[112 225]
[116 223]
[117 222]
[118 221]
[119 220]
[120 219]
[121 218]
[124 214]
[125 213]
[126 209]
[127 208]
[128 207]
[129 206]
[130 205]
[131 203]
[132 202]
[133 201]
[134 200]
[135 199]
[136 197]
[137 196]
[139 194]
[140 193]
[141 192]
[142 191]
[143 155]
[144 154]
[145 153]
[146 152]
[147 151]
[157 190]
[158 189]
[159 188]
[162 187]
[163 186]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
