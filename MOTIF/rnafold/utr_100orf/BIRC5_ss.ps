%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGAAGGCCGCGGGGGGUGGACCGCCUAAGAGGGCGUGCGCUCCCGACAUGCCCCGCGGCGCGCCAUUAACCGCCAGAUUUGAAUCGCGGGACCCGUUGGCAGAGGUGGCGGCGGCGGCAUGGGUGCCCCGACGUUGCCCCCUGCCUGGCAGCCCUUUCUCAAGGACCACCGCAUCUCUACAUUCAAGAACUGGCCCUUCUUGGAGGGCUGCGCCUGCA\
) } def
/len { sequence length } bind def

/coor [
[245.49395752 336.10562134]
[230.14891052 335.45376587]
[217.19424438 327.20318604]
[210.11470032 313.57324219]
[210.81463623 298.23028564]
[219.10578918 285.30154419]
[232.75787354 278.26477051]
[233.39448547 263.27828979]
[234.03111267 248.29180908]
[234.66772461 233.30531311]
[215.62333679 216.54306030]
[216.78428650 193.84931946]
[205.11375427 184.42601013]
[193.44322205 175.00271606]
[181.77267456 165.57942200]
[170.10214233 156.15611267]
[158.43161011 146.73281860]
[146.76107788 137.30950928]
[135.09053040 127.88621521]
[123.41999817 118.46291351]
[78.66477966 129.87524414]
[64.45231628 134.67170715]
[57.38739777 148.55424500]
[42.90561676 153.21606445]
[29.71428299 146.39518738]
[15.50182533 151.19165039]
[1.28936613 155.98811340]
[-12.92309284 160.78457642]
[-15.04319763 173.09484863]
[-22.15211105 183.27835083]
[-32.85206604 189.43988037]
[-45.08427429 190.46464539]
[-56.52497864 186.21948242]
[-65.02688599 177.56655884]
[-79.36938477 181.95890808]
[-93.71189117 186.35124207]
[-108.05438995 190.74359131]
[-122.39688873 195.13592529]
[-136.73939514 199.52827454]
[-151.08189392 203.92060852]
[-165.39295959 208.41432190]
[-179.67185974 213.00918579]
[-190.27241516 225.52160645]
[-206.35830688 222.33161926]
[-211.38175964 206.72082520]
[-200.17507935 194.74826050]
[-184.26672363 198.73028564]
[-169.98782349 194.13542175]
[-164.58779907 189.09835815]
[-155.47422791 189.57810974]
[-141.13172913 185.18577576]
[-126.78923035 180.79342651]
[-112.44673157 176.40109253]
[-98.10423279 172.00874329]
[-83.76172638 167.61640930]
[-69.41922760 163.22406006]
[-64.45472717 146.26974487]
[-50.17723465 135.60047913]
[-32.19633484 135.64410400]
[-17.71955109 146.57211304]
[-3.50709271 141.77565002]
[10.70536613 136.97918701]
[24.91782379 132.18273926]
[31.27844238 118.76341248]
[45.62356949 113.69666290]
[59.65585709 120.45925140]
[73.86831665 115.66278839]
[76.61543274 108.68401337]
[61.64320374 107.77162933]
[57.88444138 93.25020599]
[70.53371429 85.18820190]
[82.10965729 94.72644806]
[84.85677338 87.74767303]
[77.72738647 74.55024719]
[70.59800720 61.35282898]
[63.46862030 48.15541077]
[56.33923721 34.95798874]
[49.20985413 21.76057053]
[34.33303452 17.14343262]
[27.29082680 3.65781093]
[31.78424454 -10.49650955]
[24.65486145 -23.69392967]
[17.52547646 -36.89134979]
[10.39609432 -50.08876801]
[-3.35949802 -50.89424133]
[-14.83096695 -58.33063126]
[-21.08184624 -70.36698151]
[-20.57520676 -83.81193542]
[-13.55012035 -95.15968323]
[-20.49203491 -108.45667267]
[-27.43395042 -121.75365448]
[-34.37586594 -135.05064392]
[-47.06599808 -146.29327393]
[-39.77570724 -161.59974670]
[-23.04926682 -158.83161926]
[-21.07887840 -141.99255371]
[-14.13696480 -128.69557190]
[-7.19504976 -115.39858246]
[-0.25313479 -102.10160065]
[16.05740547 -100.21353912]
[28.14772797 -88.85969543]
[31.11476517 -72.37258148]
[23.59351349 -57.21815491]
[30.72289658 -44.02073288]
[37.85227966 -30.82331276]
[44.98166275 -17.62589264]
[59.28290939 -13.62464333]
[66.70111847 -0.34214392]
[62.40727234 14.63118744]
[69.53665924 27.82860756]
[76.66603851 41.02602768]
[83.79542542 54.22344589]
[90.92480469 67.42086792]
[98.05419159 80.61828613]
[113.02378845 79.66371918]
[118.41912079 65.66763306]
[123.81444550 51.67154694]
[123.98020935 42.54687119]
[129.38642883 37.51647186]
[134.97927856 23.59813690]
[140.57211304 9.67980099]
[146.16496277 -4.23853445]
[143.31759644 -20.38859558]
[156.05247498 -30.72081184]
[171.26907349 -24.60628319]
[173.31384277 -8.33511353]
[160.08329773 1.35431290]
[154.49044800 15.27264786]
[148.89761353 29.19098282]
[143.30476379 43.10931778]
[137.81053162 57.06687927]
[132.41520691 71.06296539]
[127.01987457 85.05905151]
[137.81610107 74.64552307]
[152.78616333 75.59274292]
[162.18373108 87.28401184]
[159.89047241 102.10767365]
[147.39942932 110.41271973]
[132.84330750 106.79238129]
[144.51383972 116.21568298]
[156.18437195 125.63897705]
[167.85490417 135.06228638]
[179.52545166 144.48558044]
[191.19598389 153.90887451]
[202.86651611 163.33218384]
[214.53704834 172.75547791]
[226.20759583 182.17878723]
[240.79853821 176.55819702]
[256.82891846 180.79177856]
[267.94708252 194.33764648]
[269.10000610 212.77075195]
[282.58810425 219.33360291]
[296.07623291 225.89643860]
[309.56433105 232.45928955]
[323.05242920 239.02214050]
[336.54055786 245.58497620]
[350.02865601 252.14782715]
[363.51675415 258.71066284]
[377.00488281 265.27352905]
[382.19561768 264.90469360]
[386.57388306 266.40869141]
[389.56344604 269.16433716]
[390.91717529 272.41186523]
[404.11459351 279.54125977]
[417.31201172 286.67062378]
[430.50942993 293.80001831]
[443.70684814 300.92938232]
[456.90426636 308.05877686]
[470.85061646 301.51614380]
[485.80053711 304.40628052]
[496.06066895 315.41510010]
[497.84951782 330.17782593]
[511.04693604 337.30722046]
[524.24438477 344.43658447]
[539.21771240 340.14276123]
[552.50018311 347.56097412]
[556.50146484 361.86221313]
[569.69885254 368.99157715]
[582.89630127 376.12097168]
[596.35314941 368.57666016]
[611.75115967 369.52813721]
[624.17681885 378.67175293]
[629.66522217 393.08984375]
[626.46496582 408.18161011]
[615.59729004 419.13137817]
[600.53002930 422.44506836]
[586.07104492 417.06533813]
[576.83422852 404.70880127]
[575.76690674 389.31838989]
[562.56945801 382.18899536]
[549.37207031 375.05963135]
[535.21777344 379.55303955]
[521.73211670 372.51083374]
[517.11499023 357.63400269]
[503.91757202 350.50463867]
[490.72015381 343.37524414]
[477.39266968 349.97195435]
[462.56091309 347.42587280]
[451.94827271 336.50686646]
[449.77490234 321.25619507]
[436.57748413 314.12680054]
[423.38006592 306.99743652]
[410.18264771 299.86804199]
[396.98522949 292.73867798]
[383.78781128 285.60928345]
[370.44201660 278.76162720]
[356.95391846 272.19879150]
[343.46582031 265.63592529]
[329.97769165 259.07308960]
[316.48959351 252.51023865]
[303.00149536 245.94740295]
[289.51336670 239.38455200]
[276.02526855 232.82170105]
[262.53717041 226.25886536]
[249.65420532 233.94194031]
[249.01759338 248.92842102]
[248.38098145 263.91491699]
[247.74435425 278.90139771]
[260.75048828 287.07058716]
[267.91534424 300.65591431]
[267.31158447 316.00292969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 218]
[8 217]
[9 216]
[10 215]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[21 67]
[22 66]
[25 63]
[26 62]
[27 61]
[28 60]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[41 48]
[42 47]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[81 106]
[82 105]
[83 104]
[84 103]
[89 99]
[90 98]
[91 97]
[92 96]
[115 133]
[116 132]
[117 131]
[119 130]
[120 129]
[121 128]
[122 127]
[151 214]
[152 213]
[153 212]
[154 211]
[155 210]
[156 209]
[157 208]
[158 207]
[159 206]
[163 205]
[164 204]
[165 203]
[166 202]
[167 201]
[168 200]
[172 196]
[173 195]
[174 194]
[177 191]
[178 190]
[179 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
