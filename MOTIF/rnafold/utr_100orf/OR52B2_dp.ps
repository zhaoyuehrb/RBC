%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR52B2)
} def

/sequence { (\
AUGAGUCACACCAAUGUUACCAUCUUCCAUCCUGCAGUUUUUGUCCUUCCUGGCAUCCCUGGGUUGGAGGCUUAUCACAUUUGGCUGUCAAUACCUCUUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.008748919 ubox
1 75 0.004379123 ubox
1 88 0.040040843 ubox
1 92 0.061818976 ubox
2 8 0.017517455 ubox
2 10 0.018446611 ubox
2 22 0.010275835 ubox
2 74 0.005160674 ubox
2 87 0.041863462 ubox
2 90 0.268777997 ubox
2 91 0.058271284 ubox
2 93 0.046242857 ubox
3 7 0.029122450 ubox
3 9 0.021199168 ubox
3 12 0.003699254 ubox
3 21 0.010723986 ubox
3 73 0.005355952 ubox
3 86 0.016377575 ubox
3 89 0.299346126 ubox
3 92 0.049050950 ubox
3 97 0.692718381 ubox
3 99 0.082496061 ubox
3 100 0.009396501 ubox
4 72 0.005379366 ubox
4 86 0.285673665 ubox
4 88 0.251028657 ubox
4 96 0.693641713 ubox
4 98 0.089123644 ubox
4 99 0.009849538 ubox
4 100 0.004185846 ubox
5 11 0.003492780 ubox
5 20 0.011288397 ubox
5 71 0.005378512 ubox
5 85 0.312937407 ubox
5 88 0.018807603 ubox
5 92 0.124228192 ubox
5 94 0.229818121 ubox
5 95 0.658496870 ubox
5 97 0.089474094 ubox
5 98 0.007304763 ubox
5 99 0.004768964 ubox
6 10 0.003637369 ubox
6 19 0.011150987 ubox
6 70 0.005151832 ubox
6 84 0.312189210 ubox
6 87 0.019089608 ubox
6 91 0.173221623 ubox
6 93 0.298321925 ubox
7 69 0.005019811 ubox
7 83 0.311880559 ubox
7 87 0.124909968 ubox
8 17 0.012114422 ubox
8 82 0.309192776 ubox
8 86 0.121935766 ubox
8 88 0.868425808 ubox
9 16 0.012619829 ubox
9 83 0.061188060 ubox
9 87 0.919793446 ubox
10 15 0.010504738 ubox
10 82 0.058987929 ubox
10 86 0.915301795 ubox
10 88 0.010862146 ubox
11 84 0.947208584 ubox
11 87 0.006402487 ubox
12 83 0.947522253 ubox
12 87 0.003305676 ubox
13 81 0.615186683 ubox
13 82 0.779303453 ubox
14 23 0.007197121 ubox
14 80 0.818925029 ubox
14 81 0.558928063 ubox
15 22 0.008236983 ubox
15 77 0.042130387 ubox
15 79 0.982681968 ubox
16 21 0.008496645 ubox
16 75 0.003781615 ubox
16 76 0.042709565 ubox
16 78 0.993723694 ubox
16 80 0.013010330 ubox
17 74 0.006710848 ubox
17 77 0.963501773 ubox
17 79 0.013162311 ubox
18 74 0.097564893 ubox
19 73 0.099800982 ubox
20 70 0.016105746 ubox
21 69 0.016019777 ubox
22 75 0.029408764 ubox
23 70 0.053797870 ubox
23 74 0.030667965 ubox
24 69 0.058710895 ubox
24 70 0.992928416 ubox
25 68 0.042724648 ubox
25 69 0.995883336 ubox
26 67 0.014295635 ubox
26 68 0.998411526 ubox
27 66 0.013727756 ubox
27 67 0.999861618 ubox
27 70 0.005129440 ubox
28 66 0.999835746 ubox
28 69 0.005131930 ubox
29 64 0.098744796 ubox
29 65 0.976794467 ubox
30 63 0.135518102 ubox
30 68 0.005236704 ubox
31 62 0.139434043 ubox
31 63 0.964866947 ubox
31 67 0.005271165 ubox
32 61 0.128280472 ubox
32 62 0.963382278 ubox
32 63 0.167408169 ubox
32 66 0.005272078 ubox
33 55 0.041672173 ubox
33 61 0.467947129 ubox
33 62 0.152982169 ubox
34 44 0.032170878 ubox
34 54 0.046433543 ubox
34 60 0.183765341 ubox
34 64 0.008027583 ubox
35 43 0.034065557 ubox
35 52 0.032752453 ubox
35 53 0.036752977 ubox
35 61 0.862067530 ubox
35 63 0.007864359 ubox
36 42 0.033215042 ubox
36 47 0.008715501 ubox
36 51 0.043275513 ubox
36 60 0.951079346 ubox
37 41 0.022598197 ubox
37 46 0.008915206 ubox
37 50 0.043847704 ubox
37 54 0.011178213 ubox
37 56 0.026611118 ubox
37 59 0.960357615 ubox
38 53 0.011005931 ubox
38 55 0.018481492 ubox
39 52 0.010490436 ubox
42 55 0.982498287 ubox
43 54 0.994468440 ubox
43 56 0.039523837 ubox
44 53 0.737107772 ubox
44 55 0.040669574 ubox
44 68 0.003434158 ubox
45 52 0.723403915 ubox
45 53 0.672288812 ubox
45 67 0.003932751 ubox
46 52 0.676332569 ubox
46 53 0.018689046 ubox
46 66 0.003956859 ubox
47 52 0.021031824 ubox
48 63 0.005201941 ubox
49 62 0.008247315 ubox
49 63 0.006981723 ubox
50 61 0.009178710 ubox
50 62 0.007057908 ubox
51 61 0.006966095 ubox
52 58 0.009623340 ubox
52 59 0.018512180 ubox
52 60 0.006747802 ubox
53 57 0.009532511 ubox
53 58 0.018359843 ubox
53 59 0.006840615 ubox
54 61 0.004584635 ubox
55 60 0.004284963 ubox
69 86 0.004402945 ubox
70 85 0.005546238 ubox
71 84 0.005634762 ubox
72 83 0.005447563 ubox
76 83 0.003527801 ubox
77 88 0.004872491 ubox
78 87 0.005183334 ubox
79 86 0.004739695 ubox
81 91 0.006664531 ubox
82 90 0.009006827 ubox
83 89 0.009355661 ubox
83 95 0.007774365 ubox
84 88 0.006067183 ubox
84 94 0.007820987 ubox
86 93 0.008375590 ubox
87 92 0.008710904 ubox
87 94 0.045362065 ubox
88 93 0.041189773 ubox
90 99 0.025775328 ubox
90 100 0.023298862 ubox
91 98 0.026273142 ubox
91 99 0.028189814 ubox
3 97 0.9500000 lbox
4 96 0.9500000 lbox
5 95 0.9500000 lbox
8 88 0.9500000 lbox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
11 84 0.9500000 lbox
12 83 0.9500000 lbox
13 82 0.9500000 lbox
14 81 0.9500000 lbox
15 79 0.9500000 lbox
16 78 0.9500000 lbox
17 77 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
showpage
end
%%EOF
