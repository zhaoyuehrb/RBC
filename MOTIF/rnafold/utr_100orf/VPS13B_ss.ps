%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCGGUACAGGAGCAGCACUGCCGGCGGGGGCGGGUGCCAGGGACUUGGAGGUGGAGGGGACGCGGCGGUACUCUGGCGUCUUCCGACUUCGACUCCUUACCUUAAAAGAUGCUGGAGUCAUAUGUAACUCCAAUUUUAAUGAGCUAUGUGAAUCGCUACAUCAAGAACUUAAAGCCGUCGGAUCUACAGCUUUCACUAUGGGGUGGAG\
) } def
/len { sequence length } bind def

/coor [
[146.75430298 339.16308594]
[146.24105835 331.02105713]
[149.01860046 323.25042725]
[154.70466614 317.14099121]
[151.39781189 302.51004028]
[141.04505920 291.80163574]
[145.54966736 276.63525391]
[142.24281311 262.00430298]
[138.93597412 247.37335205]
[124.06917572 245.37873840]
[117.02274323 258.62063599]
[109.97630310 271.86251831]
[116.89475250 285.75189209]
[114.29472351 301.04959106]
[103.17598724 311.87332153]
[87.81392670 314.06115723]
[74.11556244 306.77182007]
[67.34819794 292.80822754]
[70.11402130 277.53964233]
[81.34951782 266.83715820]
[96.73441315 264.81610107]
[103.78084564 251.57420349]
[110.82727814 238.33230591]
[114.02563477 223.67724609]
[113.13702393 208.70359802]
[112.24841309 193.72993469]
[111.35980225 178.75628662]
[110.47119141 163.78262329]
[109.58258820 148.80897522]
[108.69397736 133.83531189]
[77.57704163 128.78315735]
[61.96192551 99.83419800]
[48.72002792 106.88063049]
[35.47813416 113.92706299]
[27.25618172 128.11619568]
[10.85971260 127.81977081]
[3.15601182 113.34271240]
[12.06998444 99.57778931]
[28.43170166 100.68517303]
[41.67359543 93.63873291]
[54.91548920 86.59230042]
[55.35998917 71.59888458]
[42.55878830 63.78037262]
[29.75758362 55.96185303]
[16.95638084 48.14333725]
[4.15517855 40.32482147]
[-11.65502262 39.73480988]
[-18.48369980 26.49780083]
[-31.28490257 18.67928314]
[-44.08610535 10.86076641]
[-56.88731003 3.04224968]
[-69.68851471 -4.77626753]
[-82.48971558 -12.59478474]
[-97.66948700 -9.10019398]
[-110.54035187 -17.21164131]
[-113.77835846 -31.70477295]
[-126.57956696 -39.52328873]
[-139.38076782 -47.34180832]
[-145.96852112 -47.88640213]
[-150.59783936 -51.18118286]
[-152.44061279 -55.58646774]
[-165.00450134 -63.78089523]
[-177.56840515 -71.97531891]
[-190.13229370 -80.16974640]
[-202.69618225 -88.36417389]
[-215.26007080 -96.55859375]
[-221.82881165 -97.29817200]
[-226.35844421 -100.72868347]
[-228.06987000 -105.18664551]
[-240.38542175 -113.74977875]
[-252.70097351 -122.31291962]
[-269.07882690 -123.14846802]
[-276.30218506 -137.87106323]
[-266.94030762 -151.33535767]
[-250.62388611 -149.69044495]
[-244.13783264 -134.62846375]
[-231.82228088 -126.06533051]
[-219.50672913 -117.50218964]
[-207.06564331 -109.12248993]
[-194.50175476 -100.92806244]
[-181.93786621 -92.73363495]
[-169.37397766 -84.53921509]
[-156.81008911 -76.34478760]
[-144.24618530 -68.15036011]
[-131.56225586 -60.14300919]
[-118.76104736 -52.32449341]
[-105.95984650 -44.50597382]
[-91.58735657 -48.24324417]
[-78.49373627 -40.49651337]
[-74.67119598 -25.39598656]
[-61.86999512 -17.57747078]
[-49.06879044 -9.75895309]
[-36.26758957 -1.94043589]
[-23.46638680 5.87808132]
[-10.66518402 13.69659805]
[4.22939014 13.72737503]
[11.97369576 27.52361679]
[24.77489853 35.34213257]
[37.57609940 43.16065216]
[50.37730408 50.97916794]
[63.17850494 58.79768753]
[55.69279099 45.79906845]
[48.20707703 32.80044937]
[36.28294373 23.70017242]
[29.55089951 10.29571056]
[29.37182808 -4.70322084]
[35.78192520 -18.26458549]
[47.48539352 -27.64695358]
[62.11637497 -30.95367813]
[76.71721649 -27.51630402]
[88.33634949 -18.02969551]
[94.62496948 -4.41157436]
[94.31182861 10.58515739]
[87.46060181 23.92847443]
[86.29277039 38.88294220]
[85.12493134 53.83741379]
[93.31935883 41.27352142]
[101.51378632 28.70962906]
[109.70821381 16.14573669]
[117.90264130 3.58184505]
[126.09706116 -8.98204708]
[120.43927002 -23.43088722]
[124.38739777 -38.43728256]
[136.42330933 -48.23096848]
[151.91896057 -49.04607010]
[164.91595459 -40.56917191]
[170.41667175 -26.05980492]
[166.30598450 -11.09712219]
[154.16453552 -1.43457949]
[138.66094971 -0.78762126]
[130.46652222 11.77627087]
[122.27210236 24.34016228]
[114.07767487 36.90405655]
[105.88325500 49.46794891]
[97.68882751 62.03184128]
[125.19450378 73.60877991]
[134.93080139 100.50330353]
[149.69425964 97.84994507]
[164.45771790 95.19659424]
[179.22117615 92.54323578]
[191.43507385 82.48683167]
[205.33029175 87.85079193]
[220.09375000 85.19743347]
[234.85720825 82.54408264]
[249.60060120 79.78141022]
[264.32312012 76.90958405]
[279.04565430 74.03775024]
[291.10919189 63.80146027]
[305.08236694 68.95892334]
[319.80487061 66.08709717]
[331.81240845 54.91786957]
[347.40744019 59.99007416]
[350.54711914 76.08586121]
[338.00164795 86.64726257]
[322.67672729 80.80961609]
[307.95419312 83.68144226]
[296.94372559 93.71231842]
[281.91748047 88.76026917]
[267.19494629 91.63210297]
[252.47244263 94.50393677]
[246.50965881 98.86953735]
[237.51055908 97.30754089]
[222.74710083 99.96089935]
[207.98364258 102.61425018]
[196.82572937 112.48086548]
[181.87452698 107.30669403]
[167.11106873 109.96005249]
[152.34761047 112.61340332]
[137.58415222 115.26676178]
[152.41789246 113.03964233]
[165.93995667 119.53223419]
[173.47749329 132.50086975]
[172.42573547 147.46395874]
[163.14813232 159.25065613]
[148.85078430 163.78779602]
[134.47444153 159.50749207]
[124.98719788 147.88888550]
[123.66763306 132.94670105]
[124.55624390 147.92036438]
[125.44485474 162.89401245]
[126.33345795 177.86767578]
[127.22206879 192.84132385]
[128.11067200 207.81498718]
[128.99928284 222.78863525]
[136.34570312 223.33268738]
[143.81956482 227.12446594]
[150.02070618 234.21307373]
[153.56692505 244.06651306]
[156.87376404 258.69744873]
[160.18061829 273.32839966]
[170.76989746 285.08331299]
[166.02876282 299.20318604]
[169.33561707 313.83413696]
[185.70509338 329.13760376]
[178.47964478 349.53955078]
[182.64743042 363.94891357]
[186.81521606 378.35824585]
[190.98300171 392.76760864]
[195.15078735 407.17697144]
[199.31857300 421.58633423]
[211.50990295 432.55462646]
[207.84249878 448.53845215]
[192.08909607 453.09500122]
[180.45542908 441.53689575]
[184.90922546 425.75411987]
[180.74143982 411.34475708]
[176.57365417 396.93539429]
[172.40585327 382.52606201]
[168.23806763 368.11669922]
[164.07028198 353.70733643]
[156.52067566 351.46203613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 193]
[5 192]
[7 190]
[8 189]
[9 188]
[10 23]
[11 22]
[12 21]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[32 41]
[33 40]
[34 39]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[48 95]
[49 94]
[50 93]
[51 92]
[52 91]
[53 90]
[56 87]
[57 86]
[58 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[69 78]
[70 77]
[71 76]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[137 169]
[138 168]
[139 167]
[140 166]
[142 164]
[143 163]
[144 162]
[145 160]
[146 159]
[147 158]
[149 156]
[150 155]
[195 210]
[196 209]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
