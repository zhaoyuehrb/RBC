%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCAAAGCAUGCUGGUCUCAGGCGGUCUCCGCUCAACGAUCCUUCCUCAAAGCAUGGUUGCUGAGUACCCAGAGUUGCGAGGAGUUUUUUAACUGAUUUAGCCAGGUGGCAAUCAUGAGUGAAUGGAUGAAGAAAGGCCCCUUAGAAUGGCAAGAUUACAUUUACAAAGAGGUCCGAGUGACAGCCAGUGAGAAGAAUGAGUAUAAAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[129.79202271 497.76330566]
[124.01328278 483.92434692]
[121.42044067 498.69854736]
[129.41867065 512.60565186]
[123.39867401 527.47637939]
[107.97846985 531.90319824]
[94.98711395 522.49023438]
[94.39047241 506.45828247]
[106.64623260 496.10571289]
[109.23907471 481.33151245]
[110.54039764 466.38806152]
[110.54039764 451.38806152]
[110.54039764 436.38806152]
[110.54039764 421.38806152]
[110.54039764 406.38806152]
[94.92558289 393.19256592]
[94.12628937 372.47009277]
[109.09705353 357.69763184]
[108.22888947 342.72277832]
[107.36073303 327.74792480]
[106.49257660 312.77304077]
[105.62442017 297.79818726]
[104.53956604 282.83749390]
[103.23823547 267.89404297]
[101.93691254 252.95059204]
[93.12462616 240.94255066]
[99.63552094 226.52316284]
[98.33419037 211.57972717]
[97.03286743 196.63627625]
[94.58672333 194.10272217]
[93.24396515 190.26017761]
[93.60570526 185.63909912]
[96.01392365 181.01805115]
[95.36264801 166.03219604]
[94.71136475 151.04634094]
[94.06008911 136.06048584]
[79.83758545 130.48143005]
[69.13849640 119.57571411]
[63.83250427 105.24909973]
[64.84683228 90.00520325]
[72.00424194 76.50791168]
[62.73703003 64.71304321]
[53.46981812 52.91818237]
[44.20260620 41.12332153]
[34.85025787 29.39584732]
[25.41326523 17.73638153]
[15.97627354 6.07691383]
[6.45512915 -5.51393652]
[-3.14966750 -17.03556252]
[-12.75446415 -28.55718994]
[-22.35926056 -40.07881546]
[-26.26850700 -25.59717941]
[-39.96815109 -19.48819351]
[-53.35375214 -26.25765991]
[-56.55249405 -40.91262817]
[-47.20508194 -52.64403152]
[-32.20533371 -52.79889297]
[-40.95169067 -64.98500061]
[-49.69804382 -77.17111206]
[-58.44440079 -89.35721588]
[-67.19075775 -101.54332733]
[-75.93711853 -113.72943878]
[-84.68347168 -125.91554260]
[-93.42983246 -138.10165405]
[-97.43773651 -139.74557495]
[-100.41674042 -142.31890869]
[-102.20117188 -145.38496399]
[-102.78388214 -148.49803162]
[-102.30551147 -151.25582886]
[-110.33190918 -163.92771912]
[-118.35830688 -176.59962463]
[-130.23777771 -176.89477539]
[-140.39678955 -182.82519531]
[-146.37162781 -192.81878662]
[-146.77819824 -204.33525085]
[-141.63113403 -214.51139832]
[-149.28730774 -227.41035461]
[-156.94348145 -240.30931091]
[-164.59965515 -253.20826721]
[-171.66763306 -258.98730469]
[-172.27174377 -266.34985352]
[-179.74037170 -279.35827637]
[-194.73173523 -283.58874512]
[-202.12068176 -296.88757324]
[-197.99517822 -311.15347290]
[-205.46380615 -324.16189575]
[-212.93244934 -337.17034912]
[-220.40107727 -350.17877197]
[-234.84727478 -357.94018555]
[-235.07829285 -374.33770752]
[-220.85647583 -382.50299072]
[-206.81201172 -374.03628540]
[-207.39263916 -357.64739990]
[-199.92401123 -344.63897705]
[-192.45536804 -331.63052368]
[-184.98674011 -318.62210083]
[-170.58670044 -314.99240112]
[-162.82713318 -301.90637207]
[-166.73193359 -286.82690430]
[-159.26330566 -273.81848145]
[-151.70069885 -260.86444092]
[-144.04452515 -247.96548462]
[-136.38835144 -235.06652832]
[-128.73217773 -222.16757202]
[-110.75113678 -218.71554565]
[-100.83734894 -202.94358826]
[-105.68640900 -184.62602234]
[-97.66001129 -171.95411682]
[-89.63361359 -159.28222656]
[-81.24372101 -146.84800720]
[-72.49736023 -134.66189575]
[-63.75100708 -122.47579193]
[-55.00465012 -110.28968048]
[-46.25829315 -98.10357666]
[-37.51193619 -85.91746521]
[-28.76558113 -73.73136139]
[-20.01922417 -61.54524994]
[-10.83763409 -49.68361282]
[-1.23283732 -38.16198730]
[8.37195873 -26.64035988]
[17.97675514 -15.11873341]
[24.67116928 -11.99518681]
[27.63574028 -3.36007881]
[37.07273102 8.29938793]
[46.50972748 19.95885468]
[53.15821838 23.17898750]
[55.99747086 31.85610771]
[65.26467896 43.65097046]
[74.53189087 55.44583511]
[83.79910278 67.24069977]
[90.88175964 64.60934448]
[98.35414886 63.49065781]
[105.89688873 63.93245697]
[113.18757629 65.91585541]
[119.91460419 69.35608673]
[125.79044342 74.10610199]
[130.56393433 79.96286774]
[134.03106689 86.67607117]
[148.82365417 84.19024658]
[163.61624146 81.70441437]
[178.40882874 79.21858978]
[190.73594666 69.30128479]
[204.56947327 74.82241058]
[219.36206055 72.33658600]
[234.15464783 69.85075378]
[249.11077881 56.33060455]
[266.91452026 63.88141251]
[281.62893677 60.96837234]
[296.34335327 58.05532837]
[311.05776978 55.14228821]
[325.77218628 52.22924423]
[331.33786011 37.84081650]
[343.81240845 28.76398659]
[359.21530151 27.89514542]
[372.63146973 35.51153564]
[379.77993774 49.18279266]
[378.37957764 64.54647064]
[368.87728882 76.70007324]
[354.30520630 81.76543427]
[339.31323242 78.12621307]
[328.68524170 66.94366455]
[313.97082520 69.85671234]
[299.25637817 72.76975250]
[284.54196167 75.68279266]
[269.82754517 78.59583282]
[264.93298340 87.55931854]
[255.72024536 92.45399475]
[245.11569214 91.45187378]
[236.64047241 84.64334106]
[221.84788513 87.12917328]
[207.05529785 89.61499786]
[195.78625488 99.35449982]
[180.89466858 94.01117706]
[166.10208130 96.49700165]
[151.30949402 98.98283386]
[136.51690674 101.46865845]
[128.40745544 122.99255371]
[109.04594421 135.40921021]
[109.69721985 150.39506531]
[110.34850311 165.38092041]
[110.99977875 180.36677551]
[111.97631073 195.33494568]
[113.27763367 210.27839661]
[114.57896423 225.22183228]
[123.48432922 238.29872131]
[116.88035583 251.64926147]
[118.18167877 266.59271240]
[119.48300934 281.53616333]
[122.95001221 287.15713501]
[123.04675293 292.83370972]
[120.59927368 296.93005371]
[121.46743011 311.90490723]
[122.33559418 326.87976074]
[123.20375061 341.85461426]
[124.07190704 356.82946777]
[132.86570740 360.90417480]
[139.53323364 367.85830688]
[143.19027710 376.70874023]
[143.37408447 386.22531128]
[140.10156250 395.10174561]
[133.86114502 402.13494873]
[125.54039764 406.38806152]
[125.54039764 421.38806152]
[125.54039764 436.38806152]
[125.54039764 451.38806152]
[125.54039764 466.38806152]
[133.62646484 453.75415039]
[146.34907532 445.80838013]
[161.24987793 444.08609009]
[175.44961548 448.92007446]
[186.20452881 459.37628174]
[191.43646240 473.43426514]
[190.13446045 488.37765503]
[182.55012512 501.31896973]
[170.14894104 509.75759888]
[155.32714844 512.06298828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[18 195]
[19 194]
[20 193]
[21 192]
[22 191]
[23 188]
[24 187]
[25 186]
[27 184]
[28 183]
[29 182]
[33 181]
[34 180]
[35 179]
[36 178]
[41 130]
[42 129]
[43 128]
[44 127]
[45 125]
[46 124]
[47 123]
[48 121]
[49 120]
[50 119]
[51 118]
[57 117]
[58 116]
[59 115]
[60 114]
[61 113]
[62 112]
[63 111]
[64 110]
[69 109]
[70 108]
[71 107]
[76 104]
[77 103]
[78 102]
[79 101]
[81 100]
[82 99]
[85 96]
[86 95]
[87 94]
[88 93]
[138 176]
[139 175]
[140 174]
[141 173]
[143 171]
[144 170]
[145 169]
[147 165]
[148 164]
[149 163]
[150 162]
[151 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
