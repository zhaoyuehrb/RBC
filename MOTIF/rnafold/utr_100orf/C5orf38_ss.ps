%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAGGCAGAGGCCGCCCGCGGUCAGGCCAGGCCGGGUCCAAUUAGGGGACUCACAGCCUGCCCCGCUGUGCACCCCGAGGAGGCCCGGCCCCUGUGUCCAAUCCGGAAGUCGCAGGGAAGUGGGGAGGUCAGGAUGGUGGCGCCCGCGGCUCGGGUCUUCCUCCGGGCAGUGCGCGCGGCUCUCACUUCCACGGUCCCGGACCUGCUCUGCCUCCUGGCCCGAGGCUCCCCGC\
) } def
/len { sequence length } bind def

/coor [
[130.00096130 344.93679810]
[115.03379822 345.92886353]
[101.08956146 340.40090942]
[90.86765289 329.42306519]
[86.34679413 315.11959839]
[82.57761383 329.63830566]
[78.80843353 344.15704346]
[83.69540405 359.81109619]
[72.38461304 371.68536377]
[56.51163864 367.56460571]
[52.40522766 351.68789673]
[64.28971100 340.38784790]
[68.05889130 325.86914062]
[71.82807159 311.35040283]
[74.42182159 296.57635498]
[75.82346344 281.64199829]
[77.22510529 266.70761108]
[78.52689362 251.76422119]
[79.72876740 236.81245422]
[77.13606262 229.90484619]
[81.04795837 221.66928101]
[82.44960022 206.73490906]
[83.85124207 191.80053711]
[85.25288391 176.86616516]
[86.65452576 161.93179321]
[88.05616760 146.99742126]
[89.45780945 132.06304932]
[80.62490082 128.96931458]
[72.72399139 123.41989899]
[66.44146729 115.70261383]
[62.37309265 106.29735565]
[60.97042847 95.84725952]
[45.99756241 94.94543457]
[31.02469635 94.04360199]
[16.05183029 93.14177704]
[1.07896459 92.23995209]
[-13.89390087 91.33811951]
[-28.86676598 90.43629456]
[-43.83963394 89.53446198]
[-50.24484634 102.12303162]
[-60.92985916 111.29408264]
[-74.26177979 115.68955231]
[-88.21969604 114.67787933]
[-100.70097351 108.44454193]
[-109.83805084 97.95909882]
[-114.27782440 84.82453156]
[-129.23728943 83.72262573]
[-144.19676208 82.62071228]
[-159.15623474 81.51880646]
[-168.26539612 91.42687988]
[-181.22744751 94.24367523]
[-193.26872253 89.16087341]
[-200.08569336 78.23796844]
[-215.02909851 76.93618774]
[-229.97250366 75.63439941]
[-244.91590881 74.33261108]
[-259.85931396 73.03082275]
[-274.80273438 71.72903442]
[-285.72732544 82.91773224]
[-301.29306030 84.41511536]
[-314.15023804 75.51417542]
[-318.22811890 60.41765213]
[-311.60122681 46.25366974]
[-297.39859009 39.71002579]
[-282.32626343 43.87643051]
[-273.50094604 56.78563309]
[-258.55752563 58.08741760]
[-243.61412048 59.38920593]
[-228.67071533 60.69099426]
[-213.72731018 61.99277878]
[-198.78392029 63.29456711]
[-186.36975098 51.93768692]
[-169.24613953 53.10422134]
[-158.05433655 66.55934143]
[-143.09486389 67.66124725]
[-128.13539124 68.76315308]
[-113.17591095 69.86505890]
[-105.46472168 55.86034775]
[-92.36815643 46.58998489]
[-76.48168945 43.95339584]
[-60.98095703 48.52912903]
[-48.98698807 59.44884872]
[-42.93780518 74.56159973]
[-27.96493912 75.46342468]
[-12.99207306 76.36525726]
[1.98079276 77.26708221]
[16.95365906 78.16891479]
[31.92652321 79.07073975]
[46.89939117 79.97256470]
[61.87225723 80.87439728]
[70.85047150 68.85808563]
[65.74111176 54.75509644]
[60.63175201 40.65209961]
[55.52239227 26.54910660]
[50.41303253 12.44611263]
[45.30367279 -1.65688193]
[40.19431686 -15.75987625]
[34.80319977 -29.75758553]
[29.13249207 -43.64438248]
[23.46178627 -57.53117752]
[9.28732967 -65.04544830]
[6.46632624 -80.83853912]
[17.16280746 -92.79532623]
[33.17134857 -91.74359894]
[42.21157074 -78.49014282]
[37.34858322 -63.20188141]
[43.01928711 -49.31508636]
[48.68999481 -35.42829132]
[51.76454544 -33.73431778]
[54.17738724 -30.47540665]
[55.20564651 -25.97592735]
[54.29730988 -20.86923599]
[59.40666962 -6.76624155]
[64.51602936 7.33675289]
[69.62538910 21.43974686]
[74.73474884 35.54273987]
[79.84410858 49.64573669]
[84.95346832 63.74872971]
[103.72534180 62.76876450]
[119.88282013 70.48856354]
[129.86294556 84.27163696]
[144.35615540 80.40549469]
[158.84934998 76.53935242]
[173.34255981 72.67321014]
[187.83576965 68.80706787]
[202.32896423 64.94092560]
[216.79600525 60.97799301]
[231.23623657 56.91844940]
[245.67645264 52.85890579]
[260.11666870 48.79936218]
[274.55691528 44.73982239]
[287.11828613 31.26481628]
[303.94302368 36.27898026]
[318.32769775 32.02676010]
[332.71237183 27.77454376]
[347.09704590 23.52232552]
[358.13772583 12.19033623]
[372.53625488 16.00229263]
[386.92092896 11.75007439]
[401.30560303 7.49785662]
[415.69027710 3.24563813]
[430.68725586 -15.99691486]
[453.55245972 -9.83329964]
[467.47686768 -15.41105652]
[481.40124512 -20.98881340]
[495.28805542 -26.65951920]
[509.13662720 -32.42292023]
[522.98522949 -38.18632126]
[536.83380127 -43.94972229]
[550.52337646 -50.08129120]
[564.04406738 -56.57663727]
[577.56481934 -63.07198715]
[591.08557129 -69.56733704]
[604.60632324 -76.06268311]
[618.12707520 -82.55802917]
[631.64776611 -89.05338287]
[636.64471436 -104.04692078]
[650.81726074 -111.04077911]
[665.75714111 -105.88562012]
[672.60076904 -91.63990021]
[667.28796387 -76.75536346]
[652.97070312 -70.06273651]
[638.14312744 -75.53263855]
[624.62237549 -69.03729248]
[611.10168457 -62.54194260]
[597.58093262 -56.04659271]
[584.06018066 -49.55124664]
[570.53942871 -43.05589676]
[557.01867676 -36.56055069]
[555.96154785 -33.98128510]
[553.82745361 -31.66170311]
[550.70904541 -30.01095200]
[546.84399414 -29.39766502]
[542.59716797 -30.10114288]
[528.74859619 -24.33774185]
[514.90002441 -18.57434082]
[501.05145264 -12.81093884]
[496.09204102 -7.34823036]
[486.97900391 -7.06442451]
[473.05462646 -1.48666728]
[459.13021851 4.09109020]
[458.54336548 9.99319458]
[456.32635498 15.53786087]
[452.63265991 20.28103256]
[447.73495483 23.83621597]
[442.00500488 25.90593338]
[435.88555908 26.30651474]
[429.85604858 24.98418808]
[424.39508057 22.02104568]
[419.94247437 17.63030434]
[405.55780029 21.88252258]
[391.17315674 26.13474083]
[376.78848267 30.38695908]
[366.77670288 41.41480255]
[351.34924316 37.90699387]
[336.96459961 42.15921021]
[322.57992554 46.41143036]
[308.19525146 50.66364670]
[302.15155029 61.13018036]
[290.21533203 64.79686737]
[278.61645508 59.18004608]
[264.17623901 63.23958969]
[249.73599243 67.29913330]
[235.29577637 71.35867310]
[220.85554504 75.41822052]
[215.27630615 80.24617767]
[206.19511414 79.43412781]
[191.70190430 83.30027008]
[177.20870972 87.16641235]
[162.71549988 91.03255463]
[148.22229004 94.89869690]
[133.72909546 98.76483917]
[130.30751038 114.85368347]
[119.68780518 127.41473389]
[104.39218140 133.46469116]
[102.99053955 148.39906311]
[101.58889771 163.33343506]
[100.18725586 178.26780701]
[98.78561401 193.20217896]
[97.38397217 208.13655090]
[95.98232269 223.07092285]
[94.68054199 238.01432800]
[93.47866821 252.96609497]
[95.90756989 261.75405884]
[92.15947723 268.10928345]
[90.75783539 283.04364014]
[89.35619354 297.97799683]
[98.47808075 286.07040405]
[111.82783508 279.23049927]
[126.82114410 278.78247070]
[140.55551147 284.81295776]
[150.37217712 296.15460205]
[154.37077332 310.61184692]
[151.77723694 325.38592529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 14]
[6 13]
[7 12]
[15 227]
[16 226]
[17 225]
[18 223]
[19 222]
[21 221]
[22 220]
[23 219]
[24 218]
[25 217]
[26 216]
[27 215]
[32 90]
[33 89]
[34 88]
[35 87]
[36 86]
[37 85]
[38 84]
[39 83]
[46 77]
[47 76]
[48 75]
[49 74]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 108]
[99 107]
[100 106]
[121 212]
[122 211]
[123 210]
[124 209]
[125 208]
[126 207]
[127 205]
[128 204]
[129 203]
[130 202]
[131 201]
[133 198]
[134 197]
[135 196]
[136 195]
[138 193]
[139 192]
[140 191]
[141 190]
[143 181]
[144 180]
[145 179]
[146 177]
[147 176]
[148 175]
[149 174]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
