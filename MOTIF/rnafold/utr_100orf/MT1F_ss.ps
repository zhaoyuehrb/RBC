%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:15:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCUCCCCUGACUAUCAAAGCAGCGGCCGGCUGUUGGGGUCCACCACGCCUUCCACCUGCCCCACUGCUUCUUCGCUUCUCUCUUGGAAAGUCCAGUCUCUCCUCGGCUUGCAAUGGACCCCAACUGCUCCUGCGCCGCUGGUGUCUCCUGCACCUGCGCUGGUUCCUGCAAGUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAGAGUGAGU\
) } def
/len { sequence length } bind def

/coor [
[194.16741943 511.72634888]
[188.89062500 526.04833984]
[177.91636658 536.65625000]
[163.42358398 541.44396973]
[148.28984070 539.46087646]
[135.51995850 531.10064697]
[127.64939117 518.02331543]
[126.24085236 502.82534790]
[131.57400513 488.52429199]
[142.58995056 477.95965576]
[157.10147095 473.22903442]
[159.05039978 458.35617065]
[153.03231812 444.73150635]
[162.49705505 432.05358887]
[164.44598389 417.18075562]
[166.39489746 402.30789185]
[158.80683899 386.48211670]
[170.13479614 371.96197510]
[171.86819458 357.06243896]
[158.53115845 347.27688599]
[152.32353210 331.80740356]
[155.24069214 315.26751709]
[166.53492737 302.66641235]
[162.04447937 288.35433960]
[157.55403137 274.04223633]
[153.06358337 259.73016357]
[141.87104797 249.90283203]
[145.12223816 234.41928101]
[140.63179016 220.10719299]
[136.14134216 205.79510498]
[131.65090942 191.48301697]
[127.16045380 177.17092896]
[122.67000580 162.85882568]
[118.17956543 148.54673767]
[74.11139679 125.63750458]
[80.37769318 92.43305969]
[69.96475983 81.63626099]
[59.55183411 70.83946228]
[49.13890076 60.04266357]
[38.72597122 49.24586487]
[28.31304169 38.44906616]
[17.90011024 27.65226555]
[7.48717976 16.85546494]
[-2.92575097 6.05866623]
[-13.33868122 -4.73813295]
[-23.75161171 -15.53493214]
[-43.35895920 -20.22880173]
[-47.19512939 -39.18324661]
[-57.91626740 -49.67405701]
[-73.19121552 -53.79554749]
[-76.87656403 -68.22702026]
[-87.59770966 -78.71783447]
[-98.31884766 -89.20864105]
[-91.59969330 -75.79771423]
[-89.72949219 -60.91476440]
[-92.92169189 -46.25836945]
[-100.81195831 -33.50127029]
[-112.49979401 -24.09942818]
[-126.65125275 -19.12587929]
[-141.65122986 -19.14824867]
[-155.78779602 -24.16398811]
[-167.44752502 -33.60065079]
[-175.29971313 -46.38122940]
[-178.44818115 -61.04707718]
[-176.53359985 -75.92438507]
[-169.77447510 -89.31521606]
[-158.94221497 -99.69126129]
[-145.27313232 -105.86830902]
[-130.32725525 -107.14138031]
[-115.80805206 -103.36413574]
[-128.30267334 -111.66380310]
[-143.74334717 -108.29318237]
[-156.99963379 -116.89820099]
[-160.20681763 -132.37364197]
[-151.46212769 -145.53822327]
[-135.95364380 -148.58160400]
[-122.88225555 -139.69822693]
[-120.00299835 -124.15841675]
[-107.50838470 -115.85874939]
[-101.54448700 -120.40649414]
[-110.63997650 -132.33428955]
[-119.73546600 -144.26206970]
[-132.07156372 -152.79556274]
[-127.76761627 -167.16484070]
[-112.77162933 -167.51170349]
[-107.80767822 -153.35755920]
[-98.71218872 -141.42976379]
[-89.61669922 -129.50198364]
[-83.65280914 -134.04972839]
[-88.34997559 -148.29530334]
[-93.04714966 -162.54089355]
[-104.71675873 -173.22409058]
[-101.35408020 -187.73414612]
[-106.05124664 -201.97973633]
[-120.27503967 -208.86878967]
[-125.38248444 -223.82505798]
[-118.34341431 -237.97521973]
[-103.33399963 -242.92424011]
[-89.25904846 -235.73596191]
[-84.46898651 -220.67506409]
[-91.80566406 -206.67689514]
[-87.10849762 -192.43132019]
[-75.77486420 -182.76705933]
[-78.80156708 -167.23806763]
[-74.10439301 -152.99247742]
[-69.40722656 -138.74690247]
[-69.46002197 -120.29614258]
[-76.75604248 -106.59794617]
[-87.82804108 -99.92978668]
[-77.10689545 -89.43897247]
[-66.38575745 -78.94815826]
[-51.87765884 -75.57704926]
[-47.42545700 -60.39519882]
[-36.70431519 -49.90438843]
[-26.54359055 -50.93414688]
[-17.29800987 -46.10178375]
[-12.12975502 -36.78782272]
[-12.95481300 -25.94786263]
[-2.54188228 -15.15106392]
[7.87104845 -4.35426426]
[18.28397942 6.44253492]
[28.69690895 17.23933411]
[39.10984039 28.03613472]
[49.52276993 38.83293152]
[59.93570328 49.62973404]
[70.34863281 60.42653275]
[80.76156616 71.22332764]
[91.17449188 82.02013397]
[106.17095947 81.69441223]
[116.10528564 70.45568085]
[126.03961945 59.21695328]
[128.76992798 43.04668808]
[144.23123169 37.58043289]
[156.51828003 48.44140244]
[152.99119568 64.45676422]
[137.27835083 69.15128326]
[127.34401703 80.39001465]
[117.40969086 91.62874603]
[121.60463715 97.84585571]
[129.99452209 110.28006744]
[134.18946838 116.49716949]
[148.32969666 111.49177551]
[158.75698853 99.59294128]
[173.33663940 102.63974762]
[187.47686768 97.63435364]
[201.61709595 92.62895966]
[215.75732422 87.62355804]
[229.89755249 82.61816406]
[238.07592773 68.81622314]
[253.98507690 66.74776459]
[265.42086792 77.99954987]
[263.61071777 93.94015503]
[249.94323730 102.34131622]
[234.90293884 96.75839233]
[220.76271057 101.76378632]
[206.62248230 106.76918030]
[192.48226929 111.77458191]
[178.34204102 116.77997589]
[168.92614746 128.32078552]
[153.33509827 125.63200378]
[139.19487000 130.63740540]
[132.49165344 144.05628967]
[136.98210144 158.36839294]
[141.47254944 172.68048096]
[145.96299744 186.99256897]
[150.45344543 201.30465698]
[154.94387817 215.61674500]
[159.43432617 229.92883301]
[170.94805908 240.77986145]
[167.37567139 255.23970032]
[171.86611938 269.55178833]
[176.35656738 283.86389160]
[180.84701538 298.17596436]
[197.02154541 301.90908813]
[208.82470703 313.40380859]
[212.92242432 329.23333740]
[208.25073242 344.77340698]
[218.66366577 355.57022095]
[229.07659912 366.36700439]
[239.48951721 377.16381836]
[257.30187988 381.84115601]
[260.86416626 399.02673340]
[271.43231201 409.67163086]
[279.69531250 413.55450439]
[282.07501221 420.54800415]
[292.48794556 431.34478760]
[302.90087891 442.14160156]
[313.31381226 452.93838501]
[329.21566772 456.94625854]
[333.43478394 472.79336548]
[321.63088989 484.17758179]
[305.94683838 479.38778687]
[302.51699829 463.35131836]
[292.10406494 452.55453491]
[281.69113159 441.75772095]
[271.27819824 430.96093750]
[260.78741455 420.23977661]
[250.21925354 409.59487915]
[238.13078308 409.23840332]
[229.23931885 400.46038818]
[228.69271851 387.57672119]
[218.27978516 376.77993774]
[207.86686707 365.98312378]
[197.45393372 355.18634033]
[192.28189087 357.49755859]
[186.76771545 358.79586792]
[185.03430176 373.69537354]
[192.41184998 384.27169800]
[190.66419983 396.64334106]
[181.26774597 404.25683594]
[179.31883240 419.12966919]
[177.36990356 434.00253296]
[183.24859619 448.69100952]
[173.92324829 460.30511475]
[171.97431946 475.17794800]
[184.77703857 483.48779297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 215]
[12 214]
[14 212]
[15 211]
[16 210]
[18 207]
[19 206]
[23 173]
[24 172]
[25 171]
[26 170]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[36 128]
[37 127]
[38 126]
[39 125]
[40 124]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[48 114]
[49 113]
[51 111]
[52 110]
[53 109]
[70 79]
[71 78]
[89 106]
[90 105]
[91 104]
[93 102]
[94 101]
[129 138]
[130 137]
[131 136]
[141 161]
[142 160]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
[177 204]
[178 203]
[179 202]
[180 201]
[182 198]
[183 197]
[185 196]
[186 195]
[187 194]
[188 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
