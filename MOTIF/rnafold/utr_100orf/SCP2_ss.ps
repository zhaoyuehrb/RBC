%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCCACCCCGCCCCCUCCUCCUGCCCCUACGCACGCGCACUCUCACGCGCCUGUGUUGCCGCCCGCGGCCCUGGCUUCGGGCUUCAGGGAGCUCUGGUGCAGUCUCCGCCUGUCAGUGCCGGCAGUCGUCCGCGGCGCCCGCCCCGGUCCCGCACUGGUGCAGCCAUGUCCUCUUCCCCGUGGGAGCCUGCGACCCUGCGCCGGGUGUUCGUGGUGGGGGUUGGCAUGACCAAGUUUGUGAAGCCUGGAGCU\
GAGAAUUCAAGAG\
) } def
/len { sequence length } bind def

/coor [
[88.26971436 240.78958130]
[85.65541077 255.55999756]
[83.04109955 270.33041382]
[93.90944672 281.40554810]
[96.15901947 296.75869751]
[88.92480469 310.48626709]
[74.98851013 317.30969238]
[59.70892715 314.60528564]
[48.96136093 303.41290283]
[46.87847900 288.03625488]
[54.26118469 274.38796997]
[68.27067566 267.71612549]
[70.88498688 252.94569397]
[73.49929047 238.17526245]
[57.38975143 228.79542542]
[46.11557007 213.90830994]
[41.43651199 195.79544067]
[44.09916306 177.24501038]
[53.71793365 161.12271118]
[68.83065033 149.92904663]
[87.12080383 145.41154480]
[88.86863708 130.51371765]
[90.61647797 115.61589813]
[84.38349915 111.44457245]
[76.04084015 123.91053009]
[67.69818878 136.37649536]
[59.35532379 148.84230042]
[46.88964462 140.49923706]
[55.23222733 128.03382874]
[63.57488251 115.56787872]
[71.91754150 103.10191345]
[65.68456268 98.93058777]
[52.57897186 106.22740936]
[39.47338104 113.52422333]
[26.36779213 120.82103729]
[13.26220322 128.11785889]
[4.96875429 141.59114075]
[-9.91498280 141.02224731]
[-23.02057266 148.31906128]
[-36.12616348 155.61587524]
[-49.23175049 162.91270447]
[-50.96006012 178.33322144]
[-61.44709015 189.77008057]
[-76.66036224 192.82557678]
[-90.75006104 186.32481384]
[-98.29840851 172.76745605]
[-96.40291595 157.36657715]
[-85.79243469 146.04415894]
[-70.54691315 143.15386963]
[-56.52856827 149.80711365]
[-43.42297745 142.51028442]
[-30.31738853 135.21347046]
[-17.21179962 127.91665649]
[-9.85575008 114.96529388]
[5.96538639 115.01226807]
[19.07097626 107.71544647]
[32.17656326 100.41863251]
[45.28215408 93.12181854]
[58.38774490 85.82499695]
[56.43955231 78.58245087]
[50.59497452 56.85479736]
[35.59727478 57.11755371]
[20.59957695 57.38031387]
[5.60187817 57.64307404]
[-8.16802406 66.54935455]
[-22.64076805 58.83756638]
[-22.92803764 42.44093323]
[-8.73431206 34.22690964]
[5.33911943 42.64537430]
[20.33681679 42.38261795]
[35.33451462 42.11985779]
[50.33221436 41.85709763]
[71.01644135 48.69993591]
[86.92241669 60.74701691]
[96.93675995 76.37094116]
[100.40008545 93.73332214]
[110.33683014 82.49672699]
[120.27358246 71.26013947]
[130.21032715 60.02354431]
[140.14707947 48.78695297]
[150.08383179 37.55036163]
[160.02058411 26.31376839]
[169.95733643 15.07717514]
[179.89407349 3.84058237]
[189.83082581 -7.39600992]
[199.76757812 -18.63260269]
[209.70433044 -29.86919594]
[219.64108276 -41.10578918]
[229.57781982 -52.34238052]
[229.56323242 -65.21759796]
[238.04158020 -74.36856079]
[250.08215332 -75.27391815]
[260.14944458 -86.39369202]
[270.21673584 -97.51347351]
[280.28405762 -108.63325500]
[290.35134888 -119.75303650]
[293.77413940 -128.18324280]
[300.60171509 -130.94300842]
[310.79821777 -141.94445801]
[320.99468994 -152.94590759]
[331.19116211 -163.94737244]
[334.71215820 -172.33702087]
[341.57153320 -175.01687622]
[351.89578247 -185.89849854]
[362.15634155 -196.84020996]
[372.35281372 -207.84165955]
[382.54928589 -218.84310913]
[372.76870728 -221.09407043]
[363.62728882 -227.34757996]
[356.39678955 -237.34193420]
[351.57864380 -251.54705811]
[339.81860352 -262.13064575]
[343.05780029 -276.66876221]
[338.23965454 -290.87390137]
[333.42150879 -305.07901001]
[328.60336304 -319.28414917]
[323.78524780 -333.48925781]
[309.50338745 -340.25714111]
[304.26895142 -355.16943359]
[311.18743896 -369.37893677]
[326.15423584 -374.45541382]
[340.28979492 -367.38708496]
[345.20776367 -352.36746216]
[337.99035645 -338.30740356]
[342.80850220 -324.10229492]
[347.62664795 -309.89715576]
[352.44476318 -295.69204712]
[357.26290894 -281.48690796]
[368.67831421 -271.91937256]
[365.78375244 -256.36520386]
[370.60189819 -242.16007996]
[377.56811523 -239.38122559]
[378.54846191 -254.34916687]
[393.08676147 -258.04211426]
[401.09152222 -245.35655212]
[391.50051880 -233.82354736]
[398.46673584 -231.04470825]
[411.73916626 -238.03344727]
[425.01159668 -245.02218628]
[433.61746216 -258.29809570]
[448.48385620 -257.38174438]
[461.75628662 -264.37048340]
[475.02871704 -271.35922241]
[488.30114746 -278.34796143]
[501.57357788 -285.33670044]
[514.84600830 -292.32543945]
[523.45190430 -305.60134888]
[538.31829834 -304.68499756]
[551.59069824 -311.67373657]
[564.86315918 -318.66247559]
[567.46520996 -329.17810059]
[575.25091553 -336.39154053]
[585.50207520 -338.11196899]
[594.81481934 -334.01181030]
[608.24688721 -340.68865967]
[621.67889404 -347.36550903]
[627.94317627 -353.96423340]
[635.30700684 -354.04086304]
[648.81616211 -360.56039429]
[662.32525635 -367.07992554]
[675.83435059 -373.59945679]
[689.34344482 -380.11898804]
[702.85253906 -386.63851929]
[716.36163330 -393.15805054]
[729.87072754 -399.67758179]
[743.37982178 -406.19708252]
[746.24707031 -421.33264160]
[757.34710693 -431.75585938]
[772.27960205 -433.62225342]
[785.29205322 -426.42404175]
[798.80114746 -432.94357300]
[812.31024170 -439.46310425]
[815.17749023 -454.59866333]
[826.27752686 -465.02188110]
[841.21008301 -466.88827515]
[854.22253418 -459.69006348]
[867.73162842 -466.20959473]
[881.24072266 -472.72912598]
[894.74981689 -479.24865723]
[908.25891113 -485.76818848]
[917.03320312 -499.62255859]
[933.40527344 -498.68069458]
[940.53295898 -483.91149902]
[931.08386230 -470.50827026]
[914.77844238 -472.25909424]
[901.26934814 -465.73956299]
[887.76025391 -459.22003174]
[874.25115967 -452.70050049]
[860.74200439 -446.18096924]
[858.28112793 -431.51528931]
[847.52923584 -420.98629761]
[832.46295166 -418.78158569]
[818.82977295 -425.95401001]
[805.32067871 -419.43447876]
[791.81158447 -412.91494751]
[789.35070801 -398.24926758]
[778.59875488 -387.72027588]
[763.53247070 -385.51556396]
[749.89935303 -392.68798828]
[736.39025879 -386.16845703]
[722.88116455 -379.64895630]
[709.37207031 -373.12942505]
[695.86297607 -366.60989380]
[682.35388184 -360.09036255]
[668.84478760 -353.57083130]
[655.33569336 -347.05130005]
[641.82653809 -340.53176880]
[628.35577393 -333.93347168]
[614.92370605 -327.25662231]
[601.49169922 -320.57977295]
[591.96466064 -303.73043823]
[571.85186768 -305.39004517]
[558.57946777 -298.40130615]
[545.30700684 -291.41256714]
[537.65051270 -278.63653564]
[521.83477783 -279.05300903]
[508.56231689 -272.06427002]
[495.28988647 -265.07553101]
[482.01745605 -258.08679199]
[468.74502563 -251.09805298]
[455.47259521 -244.10931396]
[447.81607056 -231.33328247]
[432.00033569 -231.74975586]
[418.72790527 -224.76101685]
[405.45547485 -217.77227783]
[393.55072021 -208.64663696]
[383.35424805 -197.64518738]
[373.15777588 -186.64373779]
[370.92373657 -179.62651062]
[362.77740479 -175.57423401]
[352.45315552 -164.69261169]
[342.19259644 -153.75088501]
[331.99612427 -142.74943542]
[321.79965210 -131.74798584]
[311.60317993 -120.74653625]
[301.47113037 -109.68573761]
[291.40380859 -98.56595612]
[281.33651733 -87.44617462]
[271.26922607 -76.32639313]
[261.20193481 -65.20661926]
[258.41763306 -47.86485291]
[240.81442261 -42.40563202]
[230.87767029 -31.16903877]
[220.94091797 -19.93244553]
[211.00416565 -8.69585323]
[201.06741333 2.54073906]
[191.13067627 13.77733135]
[181.19392395 25.01392365]
[171.25717163 36.25051880]
[161.32041931 47.48711014]
[151.38366699 58.72370148]
[141.44692993 69.96029663]
[131.51017761 81.19688416]
[121.57342529 92.43347931]
[111.63668060 103.67007446]
[105.51429749 117.36373901]
[103.76645660 132.26155090]
[102.01862335 147.15937805]
[112.62406921 151.61927795]
[121.85348511 158.46859741]
[129.17955017 167.30903625]
[134.18539429 177.62872314]
[136.58821106 188.83187866]
[136.25535583 200.27319336]
[133.21157837 211.29501343]
[127.63726044 221.26510620]
[119.85781097 229.61299133]
[110.32462311 235.86250305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[21 258]
[22 257]
[23 256]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[38 53]
[39 52]
[40 51]
[41 50]
[61 72]
[62 71]
[63 70]
[64 69]
[76 255]
[77 254]
[78 253]
[79 252]
[80 251]
[81 250]
[82 249]
[83 248]
[84 247]
[85 246]
[86 245]
[87 244]
[88 243]
[89 242]
[92 240]
[93 239]
[94 238]
[95 237]
[96 236]
[98 235]
[99 234]
[100 233]
[101 232]
[103 231]
[104 230]
[105 228]
[106 227]
[107 226]
[110 131]
[111 130]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[137 225]
[138 224]
[139 223]
[141 221]
[142 220]
[143 219]
[144 218]
[145 217]
[146 216]
[148 214]
[149 213]
[150 212]
[154 210]
[155 209]
[156 208]
[158 207]
[159 206]
[160 205]
[161 204]
[162 203]
[163 202]
[164 201]
[165 200]
[166 199]
[170 195]
[171 194]
[172 193]
[176 189]
[177 188]
[178 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
