%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUCAAGGCCGUUCCUUCAGUGUUUUCAGACGCCCUGGGAACGCGGCUGCAGGGUCCGGUCUUCGGUUUGCACAGCUAGAGGCCGCGCAGCAGCAAAGGAUGAGCGGAACCUUGGAAAAGGUGCUGUGCCUGAGGAACAAUACCAUUUUUAAGCAAGCCUUUUCUCUCUUAAGGUUUAGAACUUCAGGAGAGAAGCCCA\
) } def
/len { sequence length } bind def

/coor [
[66.99752045 166.20524597]
[75.44254303 152.14773560]
[75.20810699 137.14956665]
[74.97367096 122.15139771]
[66.00584412 110.12733459]
[51.69715881 105.62606812]
[37.38846970 101.12479401]
[23.07978058 96.62352753]
[8.77109241 92.12225342]
[-5.60619974 87.84516907]
[-20.04858398 83.79331207]
[-34.49096680 79.74145508]
[-48.93334961 75.68959045]
[-63.37573242 71.63773346]
[-77.81811523 67.58587646]
[-93.19530487 71.30778503]
[-103.35942078 60.42017746]
[-117.80180359 56.36831665]
[-132.24418640 52.31645966]
[-150.37652588 63.34586334]
[-170.10963440 56.90925598]
[-182.98121643 64.61136627]
[-195.85279846 72.31347656]
[-208.72436523 80.01559448]
[-221.59594727 87.71770477]
[-234.46751404 95.41981506]
[-247.33909607 103.12193298]
[-260.21066284 110.82404327]
[-273.08224487 118.52616119]
[-285.95382690 126.22827148]
[-291.24215698 141.37466431]
[-306.42837524 146.54750061]
[-319.86291504 137.77865601]
[-321.23992920 121.79480743]
[-309.50311279 110.85740662]
[-293.65594482 113.35669708]
[-280.78436279 105.65457916]
[-267.91278076 97.95246887]
[-255.04119873 90.25035858]
[-242.16963196 82.54824066]
[-229.29804993 74.84613037]
[-216.42648315 67.14402008]
[-203.55490112 59.44190598]
[-190.68333435 51.73979187]
[-177.81175232 44.03767776]
[-178.41702271 37.11343384]
[-177.05931091 30.29668045]
[-189.01292419 21.23516464]
[-200.96653748 12.17364979]
[-212.92016602 3.11213470]
[-224.87377930 -5.94938040]
[-235.55563354 -3.84501290]
[-245.42733765 -7.88789129]
[-251.31665039 -16.51766396]
[-251.47584534 -26.74457550]
[-263.14041138 -36.17527008]
[-278.73648071 -38.83480072]
[-283.76913452 -52.85341263]
[-295.43371582 -62.28410721]
[-307.09826660 -71.71479797]
[-318.76284790 -81.14549255]
[-330.42739868 -90.57618713]
[-342.09194946 -100.00688171]
[-353.75653076 -109.43756866]
[-369.35260010 -112.09709930]
[-374.38525391 -126.11571503]
[-386.04983521 -135.54641724]
[-397.71438599 -144.97709656]
[-409.37893677 -154.40779114]
[-425.42001343 -154.15504456]
[-435.50741577 -166.62997437]
[-431.90298462 -182.26286316]
[-417.37170410 -189.06152344]
[-403.06076050 -181.81059265]
[-399.94824219 -166.07235718]
[-388.28369141 -156.64166260]
[-376.61914062 -147.21096802]
[-364.95455933 -137.78027344]
[-350.19281006 -135.79530334]
[-344.32583618 -121.10213470]
[-332.66125488 -111.67144012]
[-320.99670410 -102.24074554]
[-309.33215332 -92.81005859]
[-297.66757202 -83.37936401]
[-286.00302124 -73.94866943]
[-274.33843994 -64.51797485]
[-259.57672119 -62.53299332]
[-253.70971680 -47.83983231]
[-242.04515076 -38.40913773]
[-222.77963257 -36.81345367]
[-215.81225586 -17.90299606]
[-203.85864258 -8.84148121]
[-191.90502930 0.22003366]
[-179.95141602 9.28154850]
[-167.99778748 18.34306335]
[-155.66688538 13.66718388]
[-142.54026794 16.02615547]
[-132.38412476 24.89905739]
[-128.19232178 37.87407684]
[-113.74993896 41.92593384]
[-99.30755615 45.97779465]
[-84.96338654 41.96606445]
[-73.76625824 53.14348984]
[-59.32387543 57.19535065]
[-44.88149261 61.24721146]
[-30.43910789 65.29907227]
[-15.99672413 69.35092926]
[-1.55434096 73.40278625]
[2.98060966 71.88175201]
[8.51932526 73.19911957]
[13.27236176 77.81356812]
[27.58105087 82.31483459]
[41.88973999 86.81610870]
[56.19842911 91.31737518]
[70.50711823 95.81864929]
[113.07467651 64.79911804]
[125.94625092 57.09700775]
[138.81782532 49.39489365]
[151.68940735 41.69277954]
[164.56097412 33.99066925]
[177.37196350 26.18820190]
[190.12159729 18.28585815]
[202.87121582 10.38351345]
[215.62084961 2.48116875]
[223.27445984 -11.36559105]
[238.16851807 -11.49409771]
[250.91813660 -19.39644241]
[263.66775513 -27.29878616]
[271.32138062 -41.14554596]
[286.21542358 -41.27405167]
[298.96505737 -49.17639542]
[309.24258423 -62.66005325]
[325.04437256 -56.51683426]
[323.51562500 -39.63195038]
[306.86740112 -36.42677307]
[294.11776733 -28.52442741]
[287.37609863 -15.24289608]
[271.57009888 -14.54916096]
[258.82049561 -6.64681625]
[246.07086182 1.25552797]
[239.32917786 14.53705883]
[223.52319336 15.23079491]
[210.77355957 23.13313866]
[198.02394104 31.03548241]
[185.27430725 38.93782806]
[181.24188232 45.13875580]
[172.26309204 46.86224365]
[159.39151001 54.56435776]
[146.51994324 62.26646805]
[133.64836121 69.96858215]
[120.77678680 77.67069244]
[119.49367523 85.06011963]
[134.48213196 84.47183990]
[149.47059631 83.88356781]
[164.09652710 80.55461884]
[176.78288269 88.55814362]
[180.07646179 103.19208527]
[172.04228210 115.85905457]
[157.40042114 119.11723328]
[144.75292969 111.05246735]
[130.84017944 105.44571686]
[116.92743683 99.83897400]
[115.64432526 107.22840118]
[125.16588593 118.81890869]
[134.68743896 130.40940857]
[144.20901489 141.99992371]
[153.73057556 153.59042358]
[163.25213623 165.18093872]
[172.77369690 176.77143860]
[182.29525757 188.36195374]
[191.81681824 199.95245361]
[206.55537415 205.70445251]
[208.65565491 220.45022583]
[218.17721558 232.04074097]
[227.69879150 243.63124084]
[237.22035217 255.22175598]
[246.74191284 266.81225586]
[261.46813965 275.21313477]
[257.47219849 291.68942261]
[240.53361511 292.41076660]
[235.15139771 276.33383179]
[225.62983704 264.74331665]
[216.10827637 253.15280151]
[206.58671570 241.56230164]
[197.06515503 229.97178650]
[183.00764465 225.04882812]
[180.22630310 209.47401428]
[170.70474243 197.88351440]
[161.18318176 186.29299927]
[151.66162109 174.70249939]
[142.14006042 163.11198425]
[132.61849976 151.52148438]
[123.09693909 139.93096924]
[113.57537842 128.34046936]
[104.05381775 116.74996185]
[89.97183990 121.91696167]
[90.20627594 136.91513062]
[90.44071198 151.91329956]
[99.32097626 165.69999695]
[91.58187103 180.15815735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[5 115]
[6 114]
[7 113]
[8 112]
[9 111]
[10 108]
[11 107]
[12 106]
[13 105]
[14 104]
[15 103]
[17 101]
[18 100]
[19 99]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[47 95]
[48 94]
[49 93]
[50 92]
[51 91]
[55 89]
[56 88]
[58 86]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[66 78]
[67 77]
[68 76]
[69 75]
[116 151]
[117 150]
[118 149]
[119 148]
[120 147]
[121 145]
[122 144]
[123 143]
[124 142]
[126 140]
[127 139]
[128 138]
[130 136]
[131 135]
[163 195]
[164 194]
[165 193]
[166 192]
[167 191]
[168 190]
[169 189]
[170 188]
[171 187]
[173 185]
[174 184]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
