%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCCACAGGUUUCCGCUUGCCUCUGGCCGGGGGUCGGCAACUGCAGGCGUCAGUUUCCCUCAAGAUGGCGGACGAGGAGGCUGGAGGUACUGAGAGGAUGGAAAUCAGCGCGGAGUUACCCCAGACCCCUCAGCGUCUGGCAUCUUGGUGGGAUCAGCAAGUUG\
) } def
/len { sequence length } bind def

/coor [
[80.83410645 139.69506836]
[72.10889435 151.89631653]
[63.38367844 164.09756470]
[54.65846252 176.29882812]
[45.93324661 188.50007629]
[37.20803070 200.70133972]
[28.48281670 212.90258789]
[26.74917030 228.62852478]
[13.05230713 234.48046875]
[4.32709169 246.68171692]
[-4.39812326 258.88296509]
[-13.12333870 271.08422852]
[-8.08981419 285.76220703]
[-12.67728424 300.58566284]
[-25.12177277 309.85467529]
[-40.63811874 310.00509644]
[-53.25997162 300.97909546]
[-58.13397217 286.24737549]
[-53.38596344 271.47457886]
[-40.84165955 262.34112549]
[-25.32459259 262.35900879]
[-16.59937859 250.15776062]
[-7.87416315 237.95651245]
[0.85105169 225.75524902]
[1.96061230 210.90202332]
[16.28156281 204.17738342]
[25.00677681 191.97612000]
[33.73199081 179.77487183]
[42.45720673 167.57360840]
[51.18242264 155.37236023]
[59.90763855 143.17109680]
[68.63285065 130.96984863]
[62.81647110 123.67307281]
[58.66639709 115.31543732]
[56.36861038 106.27147675]
[41.37458420 105.84825897]
[26.38055611 105.42504883]
[12.36757565 112.76991272]
[-0.13632853 104.67659760]
[-15.13035679 104.25338745]
[-29.29305649 112.52079010]
[-43.39808273 104.15537262]
[-42.93539429 87.76275635]
[-28.38096619 80.20626068]
[-14.70714474 89.25936127]
[0.28688377 89.68257141]
[13.22739029 82.30744171]
[26.80376816 90.43102264]
[41.79779434 90.85423279]
[56.79182434 91.27744293]
[64.12221527 74.39113617]
[77.71001434 61.97124863]
[95.18538666 56.18391800]
[113.50047302 58.03850937]
[129.46095276 67.21156311]
[141.23852539 57.92238617]
[153.01609802 48.63320541]
[164.61685181 39.12412643]
[176.03666687 29.39850807]
[187.45649719 19.67288971]
[198.87631226 9.94727135]
[210.20414734 0.11467007]
[221.43901062 -9.82404327]
[232.67385864 -19.76275635]
[243.90872192 -29.70147133]
[255.14356995 -39.64018631]
[266.37841797 -49.57889938]
[277.61328125 -59.51761246]
[288.84814453 -69.45632172]
[294.05773926 -84.39521790]
[308.71694946 -87.03290558]
[319.95178223 -96.97161865]
[331.18664551 -106.91033173]
[342.42150879 -116.84904480]
[353.65637207 -126.78775787]
[364.89120483 -136.72647095]
[366.01129150 -152.26298523]
[377.54663086 -162.18220520]
[392.35140991 -161.01863098]
[403.58624268 -170.95735168]
[414.82110596 -180.89605713]
[426.05596924 -190.83477783]
[437.00595093 -201.08651733]
[447.66229248 -211.64311218]
[458.31866455 -222.19972229]
[468.97503662 -232.75631714]
[472.89205933 -241.05683899]
[479.93255615 -243.40892029]
[490.78561401 -253.76319885]
[501.63867188 -264.11746216]
[512.49169922 -274.47174072]
[523.04833984 -285.12811279]
[533.30004883 -296.07809448]
[543.55181885 -307.02807617]
[539.20727539 -321.69342041]
[542.76318359 -336.46676636]
[553.16717529 -347.40402222]
[567.55255127 -351.63684082]
[582.02770996 -348.12448120]
[592.27941895 -359.07443237]
[602.53118896 -370.02441406]
[605.72290039 -386.10995483]
[621.33422852 -391.13171387]
[633.30560303 -379.92373657]
[629.32183838 -364.01580811]
[613.48114014 -359.77267456]
[603.22937012 -348.82269287]
[592.97766113 -337.87274170]
[597.43475342 -323.66006470]
[594.15759277 -309.02737427]
[583.92858887 -297.92630005]
[569.42120361 -293.40612793]
[554.50177002 -296.77633667]
[544.25006104 -285.82635498]
[533.99829102 -274.87637329]
[533.76397705 -271.31765747]
[531.76757812 -267.70074463]
[528.00329590 -264.86489868]
[522.84600830 -263.61868286]
[511.99295044 -253.26441956]
[501.13989258 -242.91014099]
[490.28683472 -232.55586243]
[479.53164673 -222.09996033]
[468.87527466 -211.54335022]
[458.21890259 -200.98675537]
[447.56253052 -190.43014526]
[447.19451904 -186.88273621]
[445.06347656 -183.34349060]
[441.19522095 -180.65126038]
[435.99468994 -179.59991455]
[424.75982666 -169.66120911]
[413.52496338 -159.72248840]
[402.29013062 -149.78378296]
[401.63922119 -134.94761658]
[390.38705444 -124.70829773]
[374.82992554 -125.49161530]
[363.59506226 -115.55290222]
[352.36022949 -105.61418915]
[341.12536621 -95.67547607]
[329.89050293 -85.73676300]
[318.65563965 -75.79804993]
[314.24963379 -61.57003784]
[298.78686523 -58.22146988]
[287.55200195 -48.28275681]
[276.31713867 -38.34404373]
[265.08227539 -28.40532875]
[253.84742737 -18.46661568]
[242.61257935 -8.52790165]
[231.37771606 1.41081154]
[220.14286804 11.34952545]
[217.20391846 18.16593170]
[208.60192871 21.36709404]
[197.18211365 31.09271240]
[185.76228333 40.81832886]
[174.34246826 50.54394913]
[173.07493591 55.18902206]
[168.85029602 59.07058334]
[162.30526733 60.41077805]
[150.52770996 69.69995880]
[138.75013733 78.98913574]
[143.35046387 92.01460266]
[143.69332886 105.82431793]
[139.74504089 119.06202698]
[131.89338684 130.42764282]
[120.90946198 138.80494690]
[107.87200928 143.37120056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[4 29]
[5 28]
[6 27]
[7 26]
[9 24]
[10 23]
[11 22]
[12 21]
[35 50]
[36 49]
[37 48]
[39 46]
[40 45]
[55 160]
[56 159]
[57 158]
[58 155]
[59 154]
[60 153]
[61 152]
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[71 141]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[79 133]
[80 132]
[81 131]
[82 130]
[83 126]
[84 125]
[85 124]
[86 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 115]
[93 114]
[94 113]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
