%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGUCUCAGGCUCGGGUGCAAUCCGUACCCUCAGUGGGUUCCCUUUCAGUGGGUUCCUUUGUCCCCAGGCCCAUUAUUCCGUCCUCCCCUCUUCCCUGAUGUAUUUUGGCGCGGUCUCCUGGCUCUGCGGGCCCAGGGCUCCGGAUGAGGUCUCCCGCCGUCCCGACCCCCGCAAGGGGCCAGCUUGGUGUCGCCUUCGUUCUUCUGCCACCCCAUUCGGAAGGUGCUCGGGUCUUCGGGGCAC\
) } def
/len { sequence length } bind def

/coor [
[124.77590942 148.24382019]
[121.93146515 162.97166443]
[119.08702087 177.69949341]
[116.24257660 192.42733765]
[125.30245972 205.37701416]
[122.46972656 220.92535400]
[109.42498779 229.84782410]
[93.90745544 226.85086060]
[85.12340546 213.71250916]
[88.28426361 198.22753906]
[101.51473999 189.58288574]
[104.35918427 174.85505676]
[107.20362854 160.12721252]
[110.04808044 145.39938354]
[103.14201355 142.47425842]
[82.42382812 133.69891357]
[73.82452393 145.98922729]
[65.22521973 158.27955627]
[56.62591553 170.56987000]
[48.02660751 182.86019897]
[39.42730331 195.15051270]
[40.79156113 211.13545227]
[29.04600906 222.06347656]
[13.20083046 219.55152893]
[5.41109037 205.52656555]
[11.65241051 190.74734497]
[27.13698387 186.55120850]
[35.73628998 174.26089478]
[44.33559418 161.97056580]
[52.93489838 149.68025208]
[61.53420258 137.38992310]
[70.13350677 125.09960938]
[65.64066315 119.09425354]
[56.99450302 131.35165405]
[42.66521835 126.91638947]
[42.45543289 111.91786194]
[56.65496826 107.08353424]
[52.16212082 101.07817841]
[37.94417572 105.85834503]
[23.72623062 110.63851929]
[16.64540863 124.51294708]
[2.15829420 129.15817261]
[-11.02521420 122.32218933]
[-25.24316025 127.10236359]
[-39.46110535 131.88253784]
[-45.00239563 146.50538635]
[-58.67184830 154.10012817]
[-74.01516724 151.08074951]
[-83.78769684 138.87289429]
[-83.37516022 123.24076080]
[-72.97233582 111.56534576]
[-57.49112320 109.35943604]
[-44.24127579 117.66458893]
[-30.02332878 112.88441467]
[-15.80538464 108.10424805]
[-9.42939472 94.69222260]
[4.92152882 89.64190674]
[18.94606018 96.42057037]
[33.16400528 91.64040375]
[47.38195038 86.86022949]
[83.25846100 65.53259277]
[109.17088318 79.56070709]
[119.53879547 68.72066498]
[129.90670776 57.88062668]
[140.27461243 47.04058838]
[150.64251709 36.20055008]
[161.01043701 25.36050987]
[164.97529602 7.36706877]
[182.01634216 3.13353777]
[192.24552917 -7.83749056]
[202.47473145 -18.80851936]
[212.70393372 -29.77954674]
[222.93313599 -40.75057602]
[233.16233826 -51.72160339]
[227.53500366 -64.67250824]
[227.26516724 -78.74729156]
[232.36053467 -91.82371521]
[242.02233887 -101.94261932]
[254.77030945 -107.60146332]
[268.66946411 -107.97737885]
[281.62374878 -103.04665375]
[291.99166870 -113.88669586]
[295.93875122 -129.20762634]
[310.32727051 -133.05726624]
[320.69519043 -143.89729309]
[331.06311035 -154.73733521]
[322.60430908 -167.18835449]
[316.92150879 -181.12063599]
[314.26077271 -195.92425537]
[314.73608398 -210.95173645]
[318.32421875 -225.54626465]
[324.86593628 -239.07051086]
[334.07315063 -250.93437195]
[345.54144287 -260.62072754]
[358.76800537 -267.70809937]
[373.17352295 -271.88879395]
[388.12765503 -272.98242188]
[402.97653198 -270.94360352]
[417.07147217 -265.86386108]
[429.79714966 -257.96752930]
[440.16506958 -268.80755615]
[433.04519653 -282.14041138]
[430.39852905 -297.00100708]
[432.47189331 -311.93182373]
[439.04977417 -325.47238159]
[449.47668457 -336.30209351]
[462.72238159 -343.36907959]
[477.48376465 -345.99237061]
[492.31298828 -343.92749023]
[505.75955200 -337.38903809]
[516.12744141 -348.22909546]
[526.49536133 -359.06912231]
[536.86328125 -369.90914917]
[547.16204834 -380.81491089]
[557.39123535 -391.78594971]
[551.93981934 -406.00015259]
[553.19537354 -421.11010742]
[560.85552979 -434.12326050]
[573.35473633 -442.48571777]
[588.18408203 -444.58334351]
[602.39477539 -440.05313110]
[612.62396240 -451.02416992]
[622.85314941 -461.99517822]
[633.08233643 -472.96621704]
[643.31152344 -483.93725586]
[653.54077148 -494.90826416]
[663.76995850 -505.87930298]
[673.99914551 -516.85034180]
[684.08801270 -527.95056152]
[694.03485107 -539.17822266]
[703.98168945 -550.40588379]
[713.92852783 -561.63354492]
[723.87536621 -572.86120605]
[719.12933350 -587.40161133]
[722.27770996 -602.26715088]
[732.37713623 -613.48626709]
[746.64068604 -618.11291504]
[761.20690918 -614.99981689]
[771.15374756 -626.22747803]
[781.10058594 -637.45513916]
[779.81860352 -648.22625732]
[784.56622314 -657.73474121]
[793.56707764 -662.96179199]
[803.74072266 -662.39672852]
[813.96990967 -673.36773682]
[824.19909668 -684.33880615]
[827.75073242 -692.72814941]
[834.62890625 -695.38323975]
[844.99676514 -706.22332764]
[848.65484619 -714.56683350]
[855.56616211 -717.13421631]
[866.07110596 -727.84149170]
[872.84771729 -743.38220215]
[889.65704346 -741.17254639]
[892.18701172 -724.40844727]
[876.77838135 -717.33654785]
[866.27343750 -706.62927246]
[855.83685303 -695.85540771]
[845.46893311 -685.01531982]
[835.17016602 -674.10961914]
[824.94097900 -663.13854980]
[814.71173096 -652.16754150]
[811.72613525 -633.04949951]
[792.32824707 -627.50830078]
[782.38140869 -616.28063965]
[772.43457031 -605.05297852]
[777.28070068 -590.96826172]
[774.40704346 -576.25097656]
[764.48706055 -564.87292480]
[750.10943604 -559.95556641]
[735.10302734 -562.91436768]
[725.15618896 -551.68670654]
[715.20935059 -540.45904541]
[705.26251221 -529.23138428]
[695.31567383 -518.00372314]
[694.70159912 -513.28918457]
[691.13458252 -508.90332031]
[684.97015381 -506.62112427]
[674.74096680 -495.65011597]
[664.51177979 -484.67907715]
[654.28259277 -473.70803833]
[644.05340576 -462.73703003]
[633.82415771 -451.76599121]
[623.59497070 -440.79495239]
[613.36578369 -429.82394409]
[618.87817383 -415.96469116]
[617.82220459 -401.02499390]
[610.35388184 -387.97186279]
[597.90795898 -379.42086792]
[582.92272949 -377.11221313]
[568.36224365 -381.55673218]
[558.13305664 -370.58572388]
[555.87579346 -363.56695557]
[547.70330811 -359.54125977]
[537.33538818 -348.70120239]
[526.96746826 -337.86117554]
[516.59960938 -327.02111816]
[523.72991943 -313.87887573]
[526.45269775 -299.15621948]
[524.48895264 -284.29272461]
[518.01837158 -270.74563599]
[507.66342163 -259.84713745]
[494.42901611 -252.67320251]
[479.60525513 -249.93742371]
[464.64160156 -251.92015076]
[451.00512695 -258.43963623]
[440.63720703 -247.59960938]
[449.09204102 -235.23791504]
[454.79400635 -221.38299561]
[457.49160767 -206.63955688]
[457.06454468 -191.65158081]
[453.52905273 -177.07429504]
[447.03732300 -163.54544067]
[437.87091064 -151.65744019]
[426.42855835 -141.93138123]
[413.20883179 -134.79428101]
[398.78842163 -130.56024170]
[383.79699707 -129.41665649]
[368.88961792 -131.41593933]
[354.71826172 -136.47311401]
[341.90313721 -144.36943054]
[331.53521729 -133.52938843]
[321.16732788 -122.68935394]
[317.96182251 -108.14376831]
[302.83172607 -103.51878357]
[292.46380615 -92.67874146]
[298.36245728 -77.81589508]
[297.17901611 -61.81077194]
[289.10009766 -47.87635422]
[275.70159912 -38.83215714]
[259.64169312 -36.53378296]
[244.13336182 -41.49240494]
[233.90415955 -30.52137566]
[223.67495728 -19.55034637]
[213.44577026 -8.57931900]
[203.21656799 2.39170957]
[192.98736572 13.36273766]
[193.10089111 25.44389153]
[184.68925476 34.66608810]
[171.85047913 35.72842026]
[161.48255920 46.56845856]
[151.11465454 57.40849686]
[140.74674988 68.24853516]
[130.37882996 79.08857727]
[120.01092529 89.92861938]
[132.96372986 101.80165100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[38 60]
[39 59]
[40 58]
[43 55]
[44 54]
[45 53]
[62 245]
[63 244]
[64 243]
[65 242]
[66 241]
[67 240]
[69 237]
[70 236]
[71 235]
[72 234]
[73 233]
[74 232]
[81 226]
[82 225]
[84 223]
[85 222]
[86 221]
[100 207]
[101 206]
[110 197]
[111 196]
[112 195]
[113 194]
[114 192]
[115 191]
[121 185]
[122 184]
[123 183]
[124 182]
[125 181]
[126 180]
[127 179]
[128 178]
[129 175]
[130 174]
[131 173]
[132 172]
[133 171]
[138 166]
[139 165]
[140 164]
[144 162]
[145 161]
[146 160]
[148 159]
[149 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
