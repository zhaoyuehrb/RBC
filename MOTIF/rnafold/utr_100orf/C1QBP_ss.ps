%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCGGCGCCUCAGGUCGCGGGGCGCCUAGGCCUGGGUUGUCCUUUGCAUCUGCACGUGUUCGCAGUCGUUUCCGCGAUGCUGCCUCUGCUGCGCUGCGUGCCCCGUGUGCUGGGCUCCUCCGUCGCCGGCCUCCGCGCUGCCGCGCCCGCCUCGCCUUUCCGGCAGCUCCUGCAGC\
) } def
/len { sequence length } bind def

/coor [
[384.92367554 338.24468994]
[373.90661621 328.06509399]
[362.88952637 317.88549805]
[351.87246704 307.70590210]
[340.85540771 297.52630615]
[329.83831787 287.34671021]
[318.82125854 277.16711426]
[307.80416870 266.98751831]
[296.26663208 257.40182495]
[284.24063110 248.43663025]
[272.21459961 239.47143555]
[264.95150757 237.99018860]
[260.05804443 230.24186707]
[248.19120789 221.06698608]
[236.32437134 211.89212036]
[221.62878418 214.03109741]
[209.46342468 204.89552307]
[207.31950378 189.46693420]
[195.45268250 180.29205322]
[183.58584595 171.11718750]
[171.71900940 161.94230652]
[159.85217285 152.76744080]
[147.98535156 143.59257507]
[136.11851501 134.41769409]
[124.25167847 125.24282074]
[112.38484955 116.06794739]
[100.51802063 106.89307404]
[98.99496460 113.51724243]
[95.52471924 119.69451904]
[90.22808075 124.99642944]
[83.30922699 129.02366638]
[75.04930115 131.42123413]
[60.21590805 133.65068054]
[50.82568359 146.07893372]
[35.75075150 148.12858582]
[23.96018219 139.09985352]
[9.12678623 141.32928467]
[-5.70660925 143.55873108]
[-18.18808365 154.19567871]
[-33.54799652 148.45066833]
[-35.98538589 132.23367310]
[-22.99287415 122.22733307]
[-7.93604469 128.72532654]
[6.89735031 126.49589539]
[21.73074532 124.26645660]
[30.34634209 112.17070770]
[45.35775375 109.69844055]
[57.98646927 118.81728363]
[72.81986237 116.58784485]
[76.30080414 109.94457245]
[63.01436996 102.98249054]
[69.97666168 89.69615936]
[83.26268768 96.65802765]
[86.74362946 90.01476288]
[80.13390350 76.54956055]
[73.52417755 63.08436584]
[66.91412354 56.73693848]
[66.91894531 49.32435226]
[60.54655075 35.74522781]
[54.17415619 22.16610527]
[47.80176163 8.58698082]
[35.94218826 3.46799803]
[30.92124557 -7.99670696]
[34.93659592 -19.42669296]
[28.80349731 -33.11556244]
[22.67039871 -46.80442810]
[16.53729820 -60.49329376]
[2.04298782 -66.19879150]
[-3.98184443 -80.16861725]
[1.54680037 -93.95156860]
[-4.58629942 -107.64043427]
[-19.84494591 -108.00983429]
[-33.42832184 -114.97077179]
[-42.63943863 -127.14115143]
[-45.64941788 -142.10453796]
[-41.86063385 -156.88992310]
[-32.02534485 -168.56167603]
[-18.09635925 -174.80236816]
[-2.83928537 -174.37287903]
[10.71657276 -167.35850525]
[19.87969017 -155.15194702]
[22.83072281 -140.17683411]
[18.98374176 -125.40647125]
[9.10256767 -113.77353668]
[15.23566723 -100.08467102]
[29.20156288 -95.03596497]
[35.61640167 -81.24087524]
[30.22616577 -66.62639618]
[36.35926437 -52.93752670]
[42.49236679 -39.24866104]
[48.62546539 -25.55979347]
[63.37737656 -16.07750511]
[61.38088608 2.21458769]
[67.75328064 15.79371166]
[74.12567139 29.37283516]
[80.49806976 42.95195770]
[86.98937225 56.47463989]
[93.59909821 69.93983459]
[100.20882416 83.40503693]
[109.69289398 95.02624512]
[121.55972290 104.20111847]
[133.42655945 113.37599182]
[145.29338074 122.55086517]
[157.16021729 131.72573853]
[169.02705383 140.90060425]
[180.89389038 150.07548523]
[192.76071167 159.25035095]
[204.62754822 168.42523193]
[216.49438477 177.60009766]
[231.96578979 175.79084778]
[243.86973572 185.26451111]
[245.49925232 200.02528381]
[257.36608887 209.20016479]
[269.23291016 218.37503052]
[281.17980957 227.44541931]
[293.20581055 236.41061401]
[305.23184204 245.37580872]
[304.33758545 230.40249634]
[314.17080688 219.07518005]
[329.12121582 217.85658264]
[340.65899658 227.44195557]
[342.20138550 242.36244202]
[332.86834717 254.10530090]
[317.98376465 255.97044373]
[329.00085449 266.15002441]
[340.01791382 276.32962036]
[351.03500366 286.50921631]
[362.05206299 296.68881226]
[373.06912231 306.86840820]
[384.08621216 317.04800415]
[395.10327148 327.22760010]
[410.26708984 319.02969360]
[427.29351807 316.49990845]
[444.13754272 319.92504883]
[458.78186035 328.87786865]
[469.47842407 342.27001953]
[474.95709229 358.48443604]
[474.57656860 375.57058716]
[468.39926147 391.47918701]
[479.93679810 401.06484985]
[491.47433472 410.65054321]
[503.01187134 420.23620605]
[514.54937744 429.82189941]
[526.08691406 439.40759277]
[537.62445068 448.99325562]
[551.50402832 442.73864746]
[566.66101074 443.12890625]
[580.09057617 450.03305054]
[589.15350342 462.03405762]
[592.09497070 476.71932983]
[588.38403320 491.16558838]
[599.92156982 500.75128174]
[615.96844482 506.22253418]
[615.15319824 523.15686035]
[598.65496826 527.06140137]
[590.33587646 512.28881836]
[578.79833984 502.70312500]
[565.27667236 508.99838257]
[550.30108643 508.79766846]
[536.84252930 502.08731079]
[527.59442139 490.15026855]
[524.43341064 475.32141113]
[528.03881836 460.53079224]
[516.50128174 450.94512939]
[504.96371460 441.35943604]
[493.42617798 431.77374268]
[481.88864136 422.18807983]
[470.35110474 412.60238647]
[458.81359863 403.01672363]
[448.14126587 410.27450562]
[435.93734741 414.51565552]
[423.03720093 415.44250488]
[410.32577515 412.98434448]
[398.67691040 407.30303955]
[388.89324951 398.78222656]
[381.65097046 388.00146484]
[377.45300293 375.69686890]
[376.59411621 362.71066284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 131]
[2 130]
[3 129]
[4 128]
[5 127]
[6 126]
[7 125]
[8 124]
[9 117]
[10 116]
[11 115]
[13 114]
[14 113]
[15 112]
[18 109]
[19 108]
[20 107]
[21 106]
[22 105]
[23 104]
[24 103]
[25 102]
[26 101]
[27 100]
[32 49]
[33 48]
[36 45]
[37 44]
[38 43]
[54 99]
[55 98]
[56 97]
[58 96]
[59 95]
[60 94]
[61 93]
[64 91]
[65 90]
[66 89]
[67 88]
[70 85]
[71 84]
[139 169]
[140 168]
[141 167]
[142 166]
[143 165]
[144 164]
[145 163]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
