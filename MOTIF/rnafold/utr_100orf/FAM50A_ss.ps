%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGGCGCGGGCGUCAGCUGACUGUUCGGCCGCCACCGCCGCUGCCGCUGCCGCUGUCGCUGUCGCCGCCGCCGCCGCCCGCCGCCGCCGCCGCCGCCGCCGCCGCUGCCAUGGCUCAAUACAAGGGCGCCGCGAGCGAGGCCGGCCGCGCCAUGCACCUGAUGAAGAAGCGGGAGAAGCAGCGCGAGCAGAUGGAGCAGAUGAAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[-204.86187744 546.21295166]
[-219.85707092 555.83557129]
[-237.46952820 554.54205322]
[-246.60833740 566.43670654]
[-255.74713135 578.33129883]
[-264.88592529 590.22595215]
[-274.02474976 602.12060547]
[-272.16851807 617.58642578]
[-281.60601807 629.51910400]
[-296.36175537 631.19342041]
[-305.50057983 643.08801270]
[-314.63937378 654.98266602]
[-323.77816772 666.87731934]
[-324.46096802 672.05230713]
[-326.82421875 676.04833984]
[-330.13742065 678.42272949]
[-333.60025024 679.08691406]
[-343.26107788 690.56158447]
[-352.92187500 702.03631592]
[-362.58267212 713.51098633]
[-372.24349976 724.98571777]
[-374.58361816 741.21704102]
[-389.90881348 747.05401611]
[-402.45382690 736.49206543]
[-399.31344604 720.39642334]
[-383.71820068 715.32489014]
[-374.05737305 703.85015869]
[-364.39657593 692.37548828]
[-354.73577881 680.90075684]
[-345.07495117 669.42608643]
[-335.67279053 657.73852539]
[-326.53399658 645.84387207]
[-317.39520264 633.94921875]
[-308.25640869 622.05462646]
[-310.43997192 607.36560059]
[-301.34136963 595.17254639]
[-285.91937256 592.98181152]
[-276.78057861 581.08715820]
[-267.64175415 569.19250488]
[-258.50296021 557.29791260]
[-249.36416626 545.40325928]
[-254.49281311 534.39996338]
[-254.45631409 522.18804932]
[-249.20022583 511.08511353]
[-239.66656494 503.22454834]
[-227.62550354 500.14535522]
[-215.34690857 502.49136353]
[-205.85800171 490.87411499]
[-196.36911011 479.25683594]
[-186.88020325 467.63958740]
[-177.39131165 456.02230835]
[-168.07643127 444.26507568]
[-158.93762207 432.37045288]
[-149.88761902 420.40811157]
[-140.92692566 408.37872314]
[-131.96623230 396.34933472]
[-123.00553894 384.31997681]
[-124.44455719 372.30932617]
[-117.07770538 362.21411133]
[-104.41365814 359.76773071]
[-95.27485657 347.87310791]
[-86.13605499 335.97848511]
[-76.99725342 324.08383179]
[-67.85845184 312.18920898]
[-58.80844879 300.22686768]
[-49.84775162 288.19750977]
[-40.97685623 276.10174561]
[-32.19625473 263.94027710]
[-23.41565132 251.77883911]
[-22.04883385 244.51567078]
[-14.41267776 239.50299072]
[-5.45198202 227.47361755]
[-4.05396175 212.64476013]
[10.39497566 206.19970703]
[19.35567093 194.17031860]
[15.62203026 176.24894714]
[26.35777855 161.02868652]
[45.12585831 158.44535828]
[53.72442245 146.15452576]
[62.32298660 133.86369324]
[70.92154694 121.57285309]
[79.52011108 109.28201294]
[79.85239410 63.26440430]
[84.67839050 49.06195068]
[89.50438690 34.85949326]
[86.61844635 19.30372620]
[98.03914642 9.74250412]
[102.86514282 -4.45995188]
[107.69113922 -18.66240692]
[112.51713562 -32.86486435]
[111.60596466 -39.41324234]
[113.80805206 -44.65230942]
[117.70404053 -47.41461182]
[122.95075989 -61.46708298]
[128.19747925 -75.51955414]
[123.56317902 -87.55641937]
[128.22248840 -99.15274048]
[139.17150879 -104.29524231]
[144.62686157 -118.26804352]
[150.08222961 -132.24084473]
[155.43341064 -146.25386047]
[160.68013000 -160.30633545]
[165.92684937 -174.35881042]
[163.50534058 -189.99360657]
[175.20564270 -199.21055603]
[180.45236206 -213.26301575]
[180.52233887 -222.39718628]
[185.88322449 -227.48468018]
[191.33857727 -241.45747375]
[196.79394531 -255.43028259]
[193.59547424 -273.56454468]
[207.71379089 -283.98757935]
[212.96051025 -298.04006958]
[204.27824402 -310.90075684]
[204.84710693 -326.40740967]
[214.44839478 -338.59738159]
[229.39018250 -342.78335571]
[243.92706299 -337.35577393]
[252.46931458 -324.40164185]
[251.73225403 -308.90209961]
[241.99931335 -296.81698608]
[227.01298523 -292.79333496]
[221.76626587 -278.74087524]
[226.50067139 -267.60931396]
[222.24455261 -255.85900879]
[210.76673889 -249.97491455]
[205.31138611 -236.00212097]
[199.85601807 -222.02932739]
[194.50483704 -208.01629639]
[189.25811768 -193.96383667]
[192.05490112 -179.33416748]
[179.97932434 -169.11209106]
[174.73260498 -155.05961609]
[169.48588562 -141.00714111]
[170.09118652 -133.64132690]
[164.05502319 -126.78548431]
[158.59967041 -112.81268311]
[153.14430237 -98.83988953]
[156.72158813 -81.65937805]
[142.24995422 -70.27283478]
[137.00323486 -56.22036743]
[131.75651550 -42.16789627]
[126.71959686 -28.03886604]
[121.89360046 -13.83640957]
[117.06759644 0.36604589]
[112.24160004 14.56850147]
[115.47272491 29.10841560]
[103.70684052 39.68549347]
[98.88084412 53.88794708]
[94.05484772 68.09040070]
[98.44515228 74.17112732]
[111.61605072 92.41331482]
[126.61563873 92.30165100]
[141.61521912 92.18997955]
[151.43728638 80.02194214]
[166.79273987 77.06492615]
[180.43121338 84.71514893]
[185.91304016 99.36040497]
[180.64987183 114.08565521]
[167.12680054 121.93808746]
[151.72901917 119.21002197]
[141.72688293 107.18956757]
[126.72730255 107.30123138]
[111.72772217 107.41289520]
[124.26359558 115.65012360]
[126.63715363 130.46113586]
[117.30309296 142.20317078]
[102.33837891 143.23150635]
[91.48587036 132.87664795]
[91.81095123 117.88057709]
[83.21238708 130.17141724]
[74.61382294 142.46224976]
[66.01525879 154.75309753]
[57.41669464 167.04393005]
[61.72507858 178.12429810]
[60.16574860 189.78916931]
[53.24074173 199.15603638]
[42.76344681 203.96665955]
[31.38504982 203.13102722]
[22.42435265 215.16040039]
[20.38540459 230.84967041]
[6.57739544 236.43431091]
[-2.38330030 248.46368408]
[-11.25419617 260.55944824]
[-20.03479958 272.72088623]
[-28.81540298 284.88235474]
[-31.30165863 293.67190552]
[-37.81837463 297.15820312]
[-46.77907181 309.18756104]
[-49.39591599 317.93914795]
[-55.96381760 321.32800293]
[-65.10261536 333.22265625]
[-74.24142456 345.11727905]
[-83.38022614 357.01190186]
[-92.51902771 368.90655518]
[-94.50959015 387.21279907]
[-110.97615814 393.28067017]
[-119.93685913 405.31002808]
[-128.89755249 417.33941650]
[-137.85824585 429.36880493]
[-140.47509766 438.12036133]
[-147.04299927 441.50924683]
[-156.18179321 453.40386963]
[-157.42590332 459.89724731]
[-161.19648743 464.14926147]
[-165.77404785 465.51123047]
[-175.26293945 477.12847900]
[-184.75184631 488.74575806]
[-194.24073792 500.36300659]
[-203.72964478 511.98028564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[7 37]
[10 34]
[11 33]
[12 32]
[13 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[47 210]
[48 209]
[49 208]
[50 207]
[51 206]
[52 203]
[53 202]
[54 200]
[55 199]
[56 198]
[57 197]
[60 195]
[61 194]
[62 193]
[63 192]
[64 191]
[65 189]
[66 188]
[67 186]
[68 185]
[69 184]
[71 183]
[72 182]
[74 180]
[75 179]
[78 174]
[79 173]
[80 172]
[81 171]
[82 170]
[83 150]
[84 149]
[85 148]
[87 146]
[88 145]
[89 144]
[90 143]
[93 142]
[94 141]
[95 140]
[98 138]
[99 137]
[100 136]
[101 134]
[102 133]
[103 132]
[105 130]
[106 129]
[108 128]
[109 127]
[110 126]
[112 123]
[113 122]
[152 164]
[153 163]
[154 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
