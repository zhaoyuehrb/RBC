%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNFSF18)
} def

/sequence { (\
CAUGACAUUGCAUCCUUCACCCAUCACUUGUGAAUUUUUGUUUUCCACAGCUCUCAUUUCUCCAAAAAUGUGUUUGAGCCACUUGGAAAAUAUGCCUUUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.146288620 ubox
1 30 0.011894978 ubox
1 32 0.036720150 ubox
1 40 0.011291296 ubox
1 94 0.048491390 ubox
2 8 0.023026638 ubox
2 9 0.148007466 ubox
2 13 0.295028402 ubox
2 24 0.018301912 ubox
2 29 0.011515610 ubox
2 31 0.036777270 ubox
2 35 0.009816695 ubox
2 39 0.012147721 ubox
2 93 0.044983573 ubox
3 7 0.022408472 ubox
3 10 0.012552850 ubox
3 12 0.318836650 ubox
3 19 0.034336053 ubox
3 23 0.020040172 ubox
3 26 0.024039903 ubox
3 30 0.036167003 ubox
3 34 0.010007018 ubox
3 92 0.036979630 ubox
3 94 0.004387082 ubox
3 100 0.136274734 ubox
4 9 0.020109666 ubox
4 11 0.325441765 ubox
4 14 0.066780477 ubox
4 18 0.039483937 ubox
4 22 0.020527891 ubox
4 25 0.027466815 ubox
4 29 0.034284180 ubox
4 36 0.013709457 ubox
4 37 0.025250249 ubox
4 38 0.016096113 ubox
4 39 0.004267572 ubox
4 42 0.014385474 ubox
4 91 0.020688645 ubox
4 93 0.003506575 ubox
4 98 0.031023004 ubox
4 99 0.148192681 ubox
5 13 0.063808611 ubox
5 16 0.004156442 ubox
5 17 0.037336975 ubox
5 24 0.026038937 ubox
5 28 0.032754946 ubox
5 31 0.039352285 ubox
5 35 0.014403770 ubox
5 36 0.026886927 ubox
5 37 0.017011133 ubox
5 38 0.004930038 ubox
5 41 0.019045247 ubox
5 97 0.031996329 ubox
5 98 0.143860336 ubox
6 30 0.041391038 ubox
6 32 0.019203473 ubox
6 40 0.020361390 ubox
6 94 0.060792764 ubox
7 13 0.016308673 ubox
7 24 0.005392863 ubox
7 29 0.040597952 ubox
7 31 0.018909415 ubox
7 35 0.027298594 ubox
7 39 0.020166254 ubox
7 91 0.003370770 ubox
7 93 0.056700880 ubox
8 12 0.015735171 ubox
8 23 0.005124747 ubox
8 30 0.018465858 ubox
8 33 0.085119800 ubox
8 34 0.026911167 ubox
8 90 0.003706146 ubox
8 92 0.040298746 ubox
8 101 0.027619811 ubox
9 19 0.018257696 ubox
9 23 0.023769573 ubox
9 26 0.024556443 ubox
9 32 0.091792827 ubox
9 33 0.024396931 ubox
9 92 0.003795992 ubox
9 94 0.005352412 ubox
9 100 0.035486595 ubox
10 18 0.019301657 ubox
10 22 0.024245432 ubox
10 25 0.024934215 ubox
10 31 0.102791639 ubox
10 39 0.006453243 ubox
10 41 0.085005384 ubox
10 93 0.004878273 ubox
10 95 0.715834135 ubox
10 99 0.017069223 ubox
11 30 0.104157706 ubox
11 32 0.017664012 ubox
11 40 0.096896804 ubox
11 94 0.718152669 ubox
12 24 0.018088347 ubox
12 29 0.101862318 ubox
12 31 0.017505975 ubox
12 35 0.024845511 ubox
12 39 0.096852509 ubox
12 93 0.664630154 ubox
13 23 0.017399677 ubox
13 30 0.016364473 ubox
13 33 0.008830914 ubox
13 34 0.021120764 ubox
13 87 0.006589713 ubox
13 92 0.459864321 ubox
14 32 0.009500682 ubox
14 86 0.007120749 ubox
15 85 0.007107448 ubox
16 33 0.022493082 ubox
16 34 0.834729650 ubox
16 89 0.006988225 ubox
16 90 0.003731265 ubox
17 32 0.006045127 ubox
17 33 0.959183993 ubox
17 87 0.003413909 ubox
17 88 0.005441344 ubox
18 30 0.013671219 ubox
18 32 0.971918339 ubox
18 40 0.004171854 ubox
18 86 0.003335121 ubox
18 94 0.004720821 ubox
19 29 0.012643959 ubox
19 31 0.969216019 ubox
19 39 0.004329437 ubox
19 93 0.004311252 ubox
20 30 0.954815850 ubox
21 86 0.006863851 ubox
22 30 0.169018729 ubox
22 32 0.076031292 ubox
22 40 0.004217158 ubox
22 85 0.006911084 ubox
22 94 0.006244780 ubox
23 29 0.230298335 ubox
23 31 0.075835522 ubox
23 35 0.011924636 ubox
23 39 0.004365782 ubox
23 84 0.006242236 ubox
23 93 0.006014427 ubox
24 30 0.073280595 ubox
24 33 0.086968389 ubox
24 34 0.009223838 ubox
24 92 0.003843631 ubox
25 32 0.093538109 ubox
25 94 0.003714066 ubox
26 31 0.077862217 ubox
26 93 0.003724708 ubox
28 34 0.003447905 ubox
28 50 0.003941905 ubox
28 101 0.008606655 ubox
29 33 0.003295572 ubox
29 49 0.010234659 ubox
29 100 0.011432441 ubox
30 48 0.011017773 ubox
30 95 0.010327012 ubox
30 99 0.010813662 ubox
31 47 0.010995413 ubox
31 94 0.010250633 ubox
31 100 0.103674730 ubox
32 38 0.004413233 ubox
32 39 0.006080433 ubox
32 45 0.007310490 ubox
32 46 0.008604636 ubox
32 93 0.009251121 ubox
32 98 0.011282612 ubox
32 99 0.115789917 ubox
33 37 0.004974509 ubox
33 38 0.008390972 ubox
33 39 0.008733540 ubox
33 42 0.004844753 ubox
33 44 0.009958346 ubox
33 97 0.012740532 ubox
33 98 0.117912126 ubox
33 99 0.031453080 ubox
34 38 0.010837026 ubox
34 41 0.010748638 ubox
34 43 0.009952425 ubox
34 91 0.003506181 ubox
34 93 0.016530924 ubox
34 97 0.112182339 ubox
34 98 0.038647737 ubox
35 40 0.013669254 ubox
35 90 0.003609439 ubox
35 92 0.014150270 ubox
35 101 0.009537299 ubox
36 100 0.012139598 ubox
36 101 0.004702725 ubox
37 90 0.003871308 ubox
37 100 0.005543070 ubox
37 101 0.008525678 ubox
38 50 0.003214508 ubox
38 89 0.003596126 ubox
38 90 0.004236797 ubox
38 100 0.011394356 ubox
38 101 0.005633992 ubox
39 49 0.006002164 ubox
39 89 0.003449695 ubox
39 92 0.798169786 ubox
39 94 0.013564433 ubox
39 100 0.005767296 ubox
40 48 0.006361128 ubox
40 91 0.975388821 ubox
40 93 0.010767085 ubox
40 95 0.012830518 ubox
40 99 0.003515932 ubox
41 47 0.006100427 ubox
41 89 0.008133534 ubox
41 90 0.987968848 ubox
41 92 0.009403530 ubox
41 94 0.011913700 ubox
42 88 0.008455621 ubox
42 89 0.995744861 ubox
42 90 0.009250801 ubox
43 87 0.006976951 ubox
43 88 0.997801450 ubox
43 89 0.008694659 ubox
44 86 0.004328084 ubox
44 87 0.999391311 ubox
44 88 0.006380921 ubox
45 85 0.004415888 ubox
45 86 0.999864629 ubox
46 85 0.999743906 ubox
47 84 0.969809230 ubox
48 76 0.018163400 ubox
48 85 0.006032050 ubox
49 74 0.009325115 ubox
49 75 0.016786443 ubox
49 83 0.170181914 ubox
49 84 0.011913150 ubox
50 73 0.012075304 ubox
50 74 0.014169438 ubox
50 79 0.979089352 ubox
50 82 0.133681115 ubox
50 83 0.005063935 ubox
50 95 0.003970934 ubox
51 72 0.013887347 ubox
51 78 0.981900906 ubox
51 94 0.004002976 ubox
52 77 0.981414187 ubox
53 76 0.978323577 ubox
53 78 0.186699360 ubox
54 77 0.188115510 ubox
55 70 0.632174512 ubox
55 72 0.611483545 ubox
55 76 0.188390623 ubox
56 69 0.638794657 ubox
56 71 0.609782156 ubox
56 73 0.225215434 ubox
56 75 0.184699493 ubox
56 91 0.005500983 ubox
57 65 0.011304619 ubox
57 66 0.036495542 ubox
57 67 0.046910982 ubox
57 68 0.642345421 ubox
57 70 0.596161038 ubox
57 72 0.223842131 ubox
57 90 0.005800693 ubox
58 64 0.016532782 ubox
58 65 0.058407565 ubox
58 66 0.076292505 ubox
58 67 0.647984634 ubox
58 68 0.104809324 ubox
58 89 0.005884297 ubox
59 64 0.051792581 ubox
59 65 0.075604828 ubox
59 66 0.594466956 ubox
59 67 0.111430297 ubox
59 88 0.005735690 ubox
60 78 0.007557994 ubox
61 77 0.007815082 ubox
61 87 0.008757196 ubox
62 76 0.006270242 ubox
62 86 0.008992462 ubox
63 70 0.103209660 ubox
63 72 0.055395724 ubox
63 76 0.019457956 ubox
63 85 0.008996424 ubox
64 69 0.090822471 ubox
64 71 0.051124392 ubox
64 74 0.005951985 ubox
64 75 0.030953261 ubox
64 84 0.008927734 ubox
65 73 0.005930605 ubox
65 74 0.031970437 ubox
65 75 0.016710907 ubox
65 83 0.008585517 ubox
66 73 0.028535043 ubox
66 74 0.017649405 ubox
66 75 0.016977550 ubox
67 73 0.016364350 ubox
67 74 0.017494228 ubox
67 75 0.013386674 ubox
68 73 0.013981272 ubox
68 74 0.014053696 ubox
69 81 0.005513586 ubox
70 75 0.005435757 ubox
70 79 0.003915889 ubox
70 80 0.005557621 ubox
70 82 0.006927870 ubox
71 78 0.003970093 ubox
71 81 0.007092005 ubox
72 79 0.006284035 ubox
72 80 0.006902449 ubox
73 78 0.006219866 ubox
89 98 0.003537704 ubox
89 99 0.003304302 ubox
90 97 0.003704125 ubox
90 98 0.004088656 ubox
91 100 0.016298281 ubox
92 99 0.020513379 ubox
93 100 0.027927331 ubox
94 99 0.026591787 ubox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
39 92 0.9500000 lbox
40 91 0.9500000 lbox
41 90 0.9500000 lbox
42 89 0.9500000 lbox
43 88 0.9500000 lbox
44 87 0.9500000 lbox
45 86 0.9500000 lbox
46 85 0.9500000 lbox
47 84 0.9500000 lbox
50 79 0.9500000 lbox
51 78 0.9500000 lbox
52 77 0.9500000 lbox
53 76 0.9500000 lbox
55 72 0.9500000 lbox
56 71 0.9500000 lbox
57 70 0.9500000 lbox
showpage
end
%%EOF
