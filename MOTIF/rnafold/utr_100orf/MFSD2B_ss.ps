%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGUGGCAAUGGCGGCGCCCCCUGCACCAGCCGCCAAGGGGUCCCCGCAGCCGGAGCCGCACGCCCCAGAGCCCGGCCCGGGGAGCGCCAAGCGAGGGCGAGAGGACA\
) } def
/len { sequence length } bind def

/coor [
[121.51420593 129.53659058]
[133.33753967 120.30741882]
[119.26650238 115.11067963]
[105.19547272 109.91394806]
[91.05230713 104.91685486]
[76.83985138 100.12039185]
[62.62739182 95.32393646]
[48.41493225 90.52747345]
[34.20247650 85.73101807]
[20.17018509 92.49360657]
[5.82505846 87.42684937]
[-0.53555882 74.00753021]
[-14.74801731 69.21107483]
[-28.96047592 64.41461182]
[-43.17293549 59.61815262]
[-58.72267151 62.53642654]
[-68.30761719 51.13563538]
[-82.52007294 46.33917618]
[-96.73253632 41.54271698]
[-117.28786469 47.23993683]
[-130.64199829 31.61163902]
[-145.21002197 28.03776169]
[-159.77806091 24.46388245]
[-174.34608459 20.89000320]
[-188.91410828 17.31612396]
[-203.57743835 14.15593529]
[-218.32432556 11.41196728]
[-230.28190613 21.48918152]
[-245.91947937 21.47089195]
[-257.85345459 11.36573696]
[-260.44897461 -4.05493975]
[-252.48052979 -17.50996590]
[-237.71055603 -22.64628983]
[-223.11299133 -17.03869438]
[-215.58035278 -3.33491826]
[-200.83346558 -0.59095037]
[-196.35093689 -2.59535527]
[-190.55067444 -1.69900370]
[-185.34022522 2.74809813]
[-170.77220154 6.32197714]
[-156.20417786 9.89585590]
[-141.63615417 13.46973515]
[-127.06812286 17.04361343]
[-120.12071228 11.11391640]
[-111.06906128 9.10021591]
[-101.99482727 11.59898472]
[-95.04764557 18.15331459]
[-91.93607330 27.33025742]
[-77.72361755 32.12671661]
[-63.51115799 36.92317581]
[-48.97799301 33.66182709]
[-38.37647629 45.40569687]
[-24.16401672 50.20215225]
[-9.95155907 54.99861145]
[4.26090002 59.79507065]
[17.45223236 52.97419739]
[31.93401337 57.63602448]
[38.99893570 71.51855469]
[53.21139145 76.31501770]
[67.42385101 81.11147308]
[81.63630676 85.90793610]
[95.84877014 90.70439148]
[104.01478577 90.09619141]
[110.39220428 95.84291840]
[124.46324158 101.03964996]
[138.53427124 106.23638153]
[152.93748474 110.42533112]
[167.60081482 113.58551788]
[177.94340515 102.31705475]
[192.44192505 97.76845551]
[207.17265320 101.06575775]
[218.20130920 111.22570801]
[222.63386536 125.44604492]
[237.29719543 128.60623169]
[251.96052551 131.76641846]
[266.62384033 134.92660522]
[283.93212891 128.84402466]
[296.54135132 140.95903015]
[311.28823853 143.70298767]
[324.22644043 135.02886963]
[339.14279175 138.02171326]
[347.33251953 150.40979004]
[362.07940674 153.15374756]
[374.96701050 144.00579834]
[390.53430176 146.73245239]
[399.54550171 159.71606445]
[396.65441895 175.25366211]
[383.57626343 184.12709045]
[368.07009888 181.07186890]
[359.33544922 167.90063477]
[344.58856201 165.15667725]
[332.49111938 173.76988220]
[317.49658203 171.19718933]
[308.54428101 158.44987488]
[293.79739380 155.70590210]
[283.55841064 162.31767273]
[271.17343140 160.04928589]
[263.46365356 149.58993530]
[248.80033875 146.42974854]
[234.13700867 143.26956177]
[219.47367859 140.10937500]
[209.57722473 151.24157715]
[195.34269714 155.95689392]
[180.56149292 152.89387512]
[169.22360229 142.77711487]
[164.44062805 128.24884033]
[149.77729797 125.08865356]
[154.80671692 139.22035217]
[147.14115906 152.11373901]
[132.32353210 154.44566345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 66]
[3 65]
[4 64]
[5 62]
[6 61]
[7 60]
[8 59]
[9 58]
[12 55]
[13 54]
[14 53]
[15 52]
[17 50]
[18 49]
[19 48]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[26 36]
[27 35]
[67 107]
[68 106]
[73 101]
[74 100]
[75 99]
[76 98]
[78 95]
[79 94]
[82 91]
[83 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
