%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUUCCCGCCCGCCCGCAGACGACCGCCGUUCUGUUGCCGCGUCCUAGGAGGGCCAGAUUGGUGGCUGUGGGGACUUUUGGAUGAGGGUGUUGCCUGAGCUGGGGGAGUCGUGUCUGAACUCCAUUGCUUGGCCUUUGUGUGGUGAUCCCGAGGCCUCCACACUUGAACCGGGCCAAAGCU\
) } def
/len { sequence length } bind def

/coor [
[76.17556000 339.78155518]
[78.69487000 320.56430054]
[78.95096588 305.56649780]
[79.20706177 290.56866455]
[79.46315765 275.57086182]
[79.71925354 260.57305908]
[69.54770660 252.64042664]
[65.75273895 240.10861206]
[69.93712616 227.49603271]
[80.78347015 219.48625183]
[81.29558563 204.49499512]
[81.80770111 189.50373840]
[82.31981659 174.51248169]
[82.83193970 159.52124023]
[72.13517761 149.00556946]
[57.15484619 149.77355957]
[42.17452240 150.54153442]
[27.19419479 151.30952454]
[12.21386719 152.07751465]
[-2.76645994 152.84550476]
[-17.74678612 153.61349487]
[-21.34664536 156.13714600]
[-25.17775345 157.25624084]
[-28.76564026 157.07237244]
[-31.71870232 155.83215332]
[-33.76868439 153.88708496]
[-48.76649857 153.63098145]
[-63.76431274 153.37489319]
[-78.76212311 153.11878967]
[-93.75994110 152.86270142]
[-108.75775146 152.60659790]
[-122.68801117 160.10716248]
[-135.28132629 152.15370178]
[-150.27914429 151.89759827]
[-165.27696228 151.64151001]
[-180.27476501 151.38540649]
[-186.26637268 154.27052307]
[-191.95626831 153.75611877]
[-195.77792358 150.85580444]
[-210.75823975 150.08781433]
[-225.73857117 149.31982422]
[-233.01112366 162.73895264]
[-245.39082336 171.66674805]
[-260.41967773 174.33061218]
[-275.11370850 170.20162964]
[-286.55538940 160.09962463]
[-292.47296143 146.03031921]
[-291.69149780 130.78723145]
[-284.36614990 117.39685059]
[-271.95138550 108.51786041]
[-256.91217041 105.91320038]
[-242.23451233 110.10001373]
[-230.83271790 120.24701691]
[-224.97058105 134.33950806]
[-209.99026489 135.10748291]
[-195.00993347 135.87547302]
[-180.01867676 136.38758850]
[-165.02085876 136.64369202]
[-150.02305603 136.89978027]
[-135.02523804 137.15588379]
[-122.16771698 129.63700867]
[-108.50165558 137.60877991]
[-93.50384521 137.86488342]
[-78.50602722 138.12097168]
[-63.50821686 138.37707520]
[-48.51040268 138.63316345]
[-33.51258850 138.88926697]
[-18.51477432 138.63316345]
[-3.53444839 137.86517334]
[11.44587898 137.09719849]
[26.42620468 136.32920837]
[41.40653229 135.56121826]
[56.38685989 134.79322815]
[71.36718750 134.02523804]
[61.42786789 96.52046204]
[83.61994171 71.36629486]
[79.32698059 56.99373627]
[75.03401947 42.62117386]
[70.74105835 28.24861336]
[66.44809723 13.87605381]
[62.15513992 -0.49650663]
[49.86887741 -11.35835743]
[53.39710999 -27.37346458]
[69.11029053 -32.06685638]
[80.84404755 -20.61037636]
[76.52770233 -4.78946733]
[80.82066345 9.58309269]
[85.11361694 23.95565414]
[89.40657806 38.32821274]
[93.69953918 52.70077515]
[97.99250031 67.07333374]
[103.07457733 67.15578461]
[108.08365631 68.01797485]
[112.90083313 69.63943481]
[117.41172791 71.98166656]
[128.01832581 61.37506485]
[138.62493896 50.76846313]
[142.49284363 42.46640778]
[149.50433350 40.07325363]
[160.29046631 29.64928627]
[171.07661438 19.22531700]
[181.86276245 8.80134773]
[178.92849731 -4.68024254]
[183.01243591 -17.74573898]
[192.94380188 -27.00856018]
[206.05101013 -30.12343788]
[218.87979126 -26.37957001]
[229.84233093 -36.61786652]
[240.80487061 -46.85616302]
[251.76741028 -57.09445953]
[262.72994995 -67.33275604]
[273.60467529 -77.66426849]
[284.39083862 -88.08823395]
[288.38241577 -103.99418640]
[304.22521973 -108.22950745]
[315.62149048 -96.43727112]
[310.84774780 -80.74831390]
[294.81478882 -77.30209351]
[284.02865601 -66.87812805]
[281.39752197 -59.95243073]
[272.96826172 -56.37022018]
[262.00570679 -46.13191986]
[251.04316711 -35.89362335]
[240.08062744 -25.65532684]
[229.11808777 -15.41703033]
[231.65522766 0.79043370]
[223.96252441 15.46752262]
[208.89172363 22.74736977]
[192.28672791 19.58749008]
[181.50057983 30.01145935]
[170.71444702 40.43542862]
[159.92829895 50.85939789]
[149.23153687 61.37506485]
[138.62493896 71.98166656]
[128.01832581 82.58827209]
[133.86311340 90.08718872]
[137.57713318 99.49209595]
[138.55970764 110.16464996]
[136.40864563 121.28380585]
[130.97389221 131.90882874]
[144.17240906 139.03617859]
[157.37092590 146.16352844]
[170.56944275 153.29089355]
[183.76795959 160.41824341]
[196.96646118 167.54559326]
[208.92871094 160.67044067]
[222.61747742 160.61051941]
[234.45066833 167.27441406]
[241.38471985 178.82518005]
[241.69717407 192.18544006]
[254.77207947 199.53709412]
[271.54177856 202.02966309]
[273.78897095 218.83403015]
[258.26339722 225.64527893]
[247.42042542 212.61199951]
[234.34552002 205.26036072]
[219.66497803 212.58160400]
[203.34843445 209.68937683]
[191.85055542 197.52699280]
[189.83911133 180.74411011]
[176.64059448 173.61676025]
[163.44207764 166.48939514]
[150.24356079 159.36204529]
[137.04504395 152.23469543]
[123.84653473 145.10734558]
[117.34069824 148.83885193]
[130.30973816 156.37570190]
[130.26722717 171.37564087]
[117.25569916 178.83888245]
[104.28652954 171.30226135]
[104.32902527 156.30184937]
[97.82318878 160.03335571]
[97.31107330 175.02461243]
[96.79895782 190.01585388]
[96.28684235 205.00711060]
[95.77472687 219.99836731]
[107.94389343 232.54953003]
[107.29536438 249.68179321]
[94.71706390 260.82913208]
[94.46096802 275.82696533]
[94.20487213 290.82476807]
[93.94877625 305.82257080]
[93.69268036 320.82040405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[15 74]
[16 73]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[26 67]
[27 66]
[28 65]
[29 64]
[30 63]
[31 62]
[33 60]
[34 59]
[35 58]
[36 57]
[39 56]
[40 55]
[41 54]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[95 135]
[96 134]
[97 133]
[99 132]
[100 131]
[101 130]
[102 129]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 119]
[113 118]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
