%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUCUGCGCACGCGCAUCUCGGUGCAUCUGUUGGGCGGGACCGCGGGGCCUGUGACACCGCACGCUGAGCUCUGUGAUGUAGCCGCUUGCGGAGACUGCAAGCAGCCGCGGCGCGCCCGGCCCUCCCUCUUCCGCUGCCGCCGUGGGAAUGGAAACAUCUGCCCCACGUGCCGGAAGCCAAGUGGUGGCGACAACUGCGCGCCACUCCGCGGCCUACCGCGCAGAUCCUCUACGUGUGUCCUCGCGAG\
) } def
/len { sequence length } bind def

/coor [
[-130.46179199 516.86682129]
[-136.12452698 521.26928711]
[-142.89297485 523.42962646]
[-149.92344666 523.12756348]
[-158.09040833 535.70928955]
[-166.25737000 548.29107666]
[-174.42433167 560.87280273]
[-182.59129333 573.45458984]
[-190.75825500 586.03637695]
[-191.78202820 601.82440186]
[-205.20149231 608.28717041]
[-213.36845398 620.86889648]
[-221.45651245 633.50152588]
[-229.46536255 646.18450928]
[-229.38021851 666.35961914]
[-246.91098022 674.55316162]
[-254.59986877 687.43261719]
[-262.28875732 700.31213379]
[-269.97763062 713.19158936]
[-269.67593384 729.58795166]
[-283.86242676 737.81445312]
[-297.94326782 729.40838623]
[-297.43328857 713.01721191]
[-282.85711670 705.50268555]
[-275.16824341 692.62322998]
[-267.47933960 679.74371338]
[-259.79046631 666.86425781]
[-263.16543579 657.25299072]
[-260.65353394 647.15490723]
[-252.84700012 639.94720459]
[-242.14836121 638.17565918]
[-234.13951111 625.49267578]
[-233.22796631 618.17810059]
[-225.95021057 612.70196533]
[-217.78324890 600.12017822]
[-217.34362793 585.23205566]
[-203.34001160 577.86938477]
[-195.17304993 565.28759766]
[-187.00608826 552.70587158]
[-178.83912659 540.12408447]
[-170.67216492 527.54235840]
[-162.50520325 514.96057129]
[-163.67370605 492.53991699]
[-142.82270813 482.36666870]
[-135.45860291 469.29879761]
[-128.09449768 456.23089600]
[-120.73040009 443.16299438]
[-113.36630249 430.09509277]
[-106.00219727 417.02719116]
[-98.63809967 403.95928955]
[-112.62964630 409.36636353]
[-127.49709320 407.37661743]
[-139.57441711 398.48068237]
[-145.88362122 384.87207031]
[-144.86895752 369.90643311]
[-136.78063965 357.27395630]
[-123.61308289 350.08959961]
[-108.61312103 350.12481689]
[-95.47945404 357.37097168]
[-87.45056915 370.04129028]
[-86.50600433 385.01034546]
[-77.71962738 372.85305786]
[-68.93325806 360.69577026]
[-60.14688492 348.53848267]
[-51.36051178 336.38119507]
[-42.57413864 324.22390747]
[-45.18716431 309.60516357]
[-36.44971848 297.15078735]
[-21.09851837 294.50912476]
[-12.31214523 282.35183716]
[-3.52577138 270.19454956]
[-2.66565633 252.65563965]
[14.22380066 245.28897095]
[22.85732651 233.02265930]
[31.49085045 220.75634766]
[40.12437439 208.49005127]
[48.75790024 196.22373962]
[57.39142609 183.95744324]
[54.59563446 169.37254333]
[63.17651749 156.80978394]
[78.49345398 153.97618103]
[87.12697601 141.70988464]
[95.76050568 129.44357300]
[104.39402771 117.17726898]
[92.56227875 115.06159210]
[85.40534973 106.22182465]
[85.76125336 95.49934387]
[75.66398621 84.40677643]
[65.56671143 73.31420135]
[55.46944046 62.22163391]
[45.37216949 51.12906265]
[35.27490234 40.03649139]
[25.17762947 28.94392204]
[15.08035946 17.85135078]
[-0.05307060 10.20833874]
[3.10189867 -6.44946718]
[19.98209381 -8.02913475]
[26.17292976 7.75407982]
[36.27020264 18.84665108]
[46.36746979 29.93922234]
[56.46474075 41.03179169]
[66.56201172 52.12436295]
[76.65928650 63.21693420]
[86.75655365 74.30950165]
[96.85382080 85.40207672]
[111.36978149 88.27592468]
[117.43882751 103.20207214]
[129.08221436 93.74525452]
[140.72561646 84.28843689]
[152.36900330 74.83161926]
[164.01240540 65.37480164]
[175.35423279 55.55834198]
[186.38339233 45.39185333]
[197.41255188 35.22536087]
[208.44172668 25.05887032]
[219.47088623 14.89237785]
[230.50004578 4.72588682]
[241.52920532 -5.44060421]
[238.18511963 -25.18336296]
[247.41587830 -42.78918076]
[265.29354858 -51.14469528]
[284.43771362 -46.99441910]
[294.94427490 -57.70011902]
[305.45083618 -68.40582275]
[304.71987915 -79.22547913]
[309.94366455 -88.47774506]
[319.19583130 -93.23999023]
[329.32510376 -92.16077423]
[340.09634399 -102.60013580]
[344.62118530 -117.76049805]
[359.14523315 -121.06211853]
[369.91647339 -131.50148010]
[380.68771362 -141.94085693]
[381.66473389 -154.78495789]
[390.82922363 -163.25730896]
[402.90948486 -163.22575378]
[413.81054688 -173.52947998]
[424.71160889 -183.83322144]
[429.42584229 -198.93576050]
[443.99008179 -202.05534363]
[454.89114380 -212.35906982]
[465.72750854 -222.73083496]
[476.49874878 -233.17019653]
[487.20443726 -243.67675781]
[497.84417725 -254.25012207]
[508.48391724 -264.82348633]
[519.12365723 -275.39685059]
[529.76336670 -285.97021484]
[540.40313721 -296.54357910]
[541.21929932 -309.39889526]
[550.27703857 -317.98529053]
[562.35675049 -318.10491943]
[573.12799072 -328.54428101]
[583.89923096 -338.98364258]
[594.67047119 -349.42303467]
[598.63934326 -365.33465576]
[614.47607422 -369.59262085]
[625.88922119 -357.81665039]
[621.13787842 -342.12091064]
[605.10986328 -338.65179443]
[594.33862305 -328.21240234]
[583.56738281 -317.77304077]
[572.79614258 -307.33367920]
[568.89160156 -290.21328735]
[550.97650146 -285.90383911]
[540.33673096 -275.33047485]
[529.69702148 -264.75711060]
[519.05725098 -254.18374634]
[508.41754150 -243.61038208]
[497.77780151 -233.03701782]
[495.25527954 -226.11094666]
[486.93811035 -222.39895630]
[476.16687012 -211.95957947]
[473.55786133 -205.06561279]
[465.19488525 -201.45802307]
[454.29382324 -191.15428162]
[450.35931396 -176.78874207]
[435.01535034 -172.93215942]
[424.11428833 -162.62843323]
[413.21322632 -152.32469177]
[409.09469604 -135.25451660]
[391.12710571 -131.16961670]
[380.35586548 -120.73024750]
[369.58462524 -110.29087830]
[365.83020020 -95.87721252]
[350.53570557 -91.82889557]
[339.76446533 -81.38953400]
[335.81271362 -62.44630814]
[316.15652466 -57.89925003]
[305.64996338 -47.19355011]
[295.14340210 -36.48785019]
[299.03976440 -26.96984100]
[299.56283569 -16.66030121]
[296.62820435 -6.72364044]
[290.54345703 1.70944822]
[281.97607422 7.67065144]
[271.88031006 10.46518803]
[261.39096069 9.75271416]
[251.69570923 5.58855963]
[240.66653442 15.75505066]
[229.63737488 25.92154312]
[218.60821533 36.08803177]
[207.57904053 46.25452423]
[196.54988098 56.42101669]
[185.52072144 66.58750916]
[200.20475769 69.65005493]
[207.08027649 82.98149109]
[201.06175232 96.72111511]
[186.60083008 100.70630646]
[174.39364624 91.98938751]
[173.46922302 77.01819611]
[161.82582092 86.47501373]
[150.18243408 95.93183136]
[138.53903198 105.38864899]
[126.89564514 114.84546661]
[116.66033173 125.81079102]
[108.02680969 138.07710266]
[99.39328003 150.34339905]
[90.75975800 162.60971069]
[93.26094818 177.98442078]
[84.33058167 190.30120850]
[69.65773010 192.59095764]
[61.02420425 204.85726929]
[52.39068222 217.12358093]
[43.75715637 229.38987732]
[35.12363052 241.65618896]
[26.49010658 253.92248535]
[27.92754173 266.72323608]
[20.50538635 276.75723267]
[8.63151646 278.98092651]
[-0.15485726 291.13821411]
[-8.94123077 303.29550171]
[-6.63266945 318.70028687]
[-15.71648693 330.90435791]
[-30.41684914 333.01028442]
[-39.20322418 345.16757202]
[-47.98959732 357.32485962]
[-56.77597046 369.48214722]
[-65.56233978 381.63943481]
[-74.34871674 393.79672241]
[-76.11077118 405.90222168]
[-85.57019806 411.32339478]
[-92.93430328 424.39129639]
[-100.29840088 437.45919800]
[-107.66250610 450.52709961]
[-115.02660370 463.59497070]
[-122.39070892 476.66287231]
[-129.75480652 489.73077393]
[-126.20185089 496.27261353]
[-125.13109589 503.57095337]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[11 35]
[12 34]
[13 32]
[14 31]
[16 27]
[17 26]
[18 25]
[19 24]
[44 248]
[45 247]
[46 246]
[47 245]
[48 244]
[49 243]
[50 242]
[61 240]
[62 239]
[63 238]
[64 237]
[65 236]
[66 235]
[69 232]
[70 231]
[71 230]
[73 227]
[74 226]
[75 225]
[76 224]
[77 223]
[78 222]
[81 219]
[82 218]
[83 217]
[84 216]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[94 98]
[107 215]
[108 214]
[109 213]
[110 212]
[111 211]
[112 205]
[113 204]
[114 203]
[115 202]
[116 201]
[117 200]
[118 199]
[122 191]
[123 190]
[124 189]
[128 187]
[129 186]
[131 184]
[132 183]
[133 182]
[136 180]
[137 179]
[138 178]
[140 176]
[141 175]
[142 173]
[143 172]
[144 170]
[145 169]
[146 168]
[147 167]
[148 166]
[149 165]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
