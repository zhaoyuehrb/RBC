%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAAGAGCACGCGGCGCUGGCCGCCGGCACUCGCGCCCUGAGGCUGCGGCCCCGGAGCGCCCGGCGGCGGUUUCGGCGCGCGGCCGGGCUGGCGAUGGAAGAUGGAAGGAAGGAGCGCAGCGGCAGAGACAUUUGUUUGGGUGAACAAUGCAUCUGCACAUUCCCAGAGUGUUGCCAAGGCCAAAUAUGAAUUUUUAUUUG\
) } def
/len { sequence length } bind def

/coor [
[92.07772064 255.07975769]
[81.33977509 248.43310547]
[72.89183044 239.02214050]
[67.42295074 227.59942627]
[65.38346100 215.08216858]
[66.94783783 202.47866821]
[71.99984741 190.80700684]
[80.14114380 181.01284790]
[90.72263336 173.89282227]
[86.61769104 159.46543884]
[82.51274109 145.03805542]
[87.87202454 100.02190399]
[74.88164520 92.52190399]
[61.89126205 85.02190399]
[46.07131195 84.82251740]
[38.91781998 71.75818634]
[25.92744064 64.25818634]
[12.93705940 56.75818253]
[-0.05332180 49.25818253]
[-13.04370308 41.75818253]
[-28.02769661 41.06542969]
[-41.65467834 47.33483505]
[-55.28165436 53.60424042]
[-68.90863800 59.87364578]
[-82.53561401 66.14305115]
[-96.16259003 72.41246033]
[-102.65522003 78.84580994]
[-110.04803467 78.67167664]
[-123.76994324 84.73049164]
[-137.49185181 90.78930664]
[-144.08277893 97.12191772]
[-151.47203064 96.83396149]
[-165.28561401 102.68074799]
[-179.09919739 108.52754211]
[-192.91278076 114.37432861]
[-200.24624634 128.64315796]
[-216.00219727 131.66471863]
[-228.09399414 121.12110138]
[-227.24586487 105.10048676]
[-214.10841370 95.89250946]
[-198.75956726 100.56074524]
[-184.94598389 94.71395874]
[-171.13240051 88.86716461]
[-157.31881714 83.02037811]
[-143.55065918 77.06739807]
[-129.82875061 71.00858307]
[-116.10684967 64.94976807]
[-102.43199921 58.78547668]
[-88.80501556 52.51607132]
[-75.17803955 46.24666977]
[-61.55105972 39.97726440]
[-47.92407990 33.70785904]
[-34.29710388 27.43845177]
[-31.54085922 12.69385624]
[-41.98286819 1.92517710]
[-52.42487717 -8.84350204]
[-67.99635315 -9.25203609]
[-78.43263245 -20.32175827]
[-77.94719696 -35.16426468]
[-88.38920593 -45.93294144]
[-98.99580383 -56.53954315]
[-109.76448822 -66.98155212]
[-120.53316498 -77.42356110]
[-131.30184937 -87.86557007]
[-142.07052612 -98.30757904]
[-152.83920288 -108.74958801]
[-163.60787964 -119.19159698]
[-178.90138245 -123.24366760]
[-182.65225220 -137.65824890]
[-193.42092896 -148.10026550]
[-204.18960571 -158.54226685]
[-215.03836060 -168.90104675]
[-225.96656799 -179.17599487]
[-242.04531860 -182.40182495]
[-247.03395081 -198.02378845]
[-235.80059814 -209.97132874]
[-219.90116882 -205.95385742]
[-215.69163513 -190.10420227]
[-204.76342773 -179.82925415]
[-197.73298645 -177.53645325]
[-193.74758911 -169.31094360]
[-182.97891235 -158.86894226]
[-172.21023560 -148.42692566]
[-157.68698120 -145.12174988]
[-153.16586304 -129.96028137]
[-142.39718628 -119.51826477]
[-131.62850952 -109.07625580]
[-120.85983276 -98.63424683]
[-110.09115601 -88.19223785]
[-99.32247925 -77.75022888]
[-88.55379486 -67.30821991]
[-83.84420776 -66.48526001]
[-79.60340881 -62.69150925]
[-77.62052155 -56.37495041]
[-67.17851257 -45.60627365]
[-52.32810211 -45.63440323]
[-41.58501434 -34.86218262]
[-41.65620041 -19.28551102]
[-31.21418953 -8.51683235]
[-20.77218056 2.25184679]
[-20.57981491 -12.74691963]
[-15.28896046 -26.78283310]
[-5.53268003 -38.17647171]
[7.52167082 -45.56456375]
[22.31211472 -48.06311417]
[37.06895065 -45.37316513]
[50.02649307 -37.81657410]
[59.63434982 -26.29750061]
[64.74292755 -12.19422150]
[64.74096680 2.80577826]
[59.62871170 16.90772247]
[50.01784897 28.42428970]
[37.05833435 35.97749710]
[22.30079842 38.66359711]
[7.51100636 36.16118622]
[-5.54370308 28.76780319]
[7.44667816 36.26780319]
[20.43705940 43.76780319]
[33.42744064 51.26780319]
[46.41781998 58.76780319]
[61.30861282 58.43074036]
[69.39125824 72.03152466]
[82.38164520 79.53152466]
[95.37202454 87.03152466]
[110.30803680 88.41555023]
[124.45535278 83.43022919]
[138.60267639 78.44490814]
[152.74998474 73.45958710]
[166.89730835 68.47425842]
[173.77670288 54.49886703]
[188.19511414 49.64457703]
[201.47612000 56.28915787]
[215.62342834 51.30383682]
[229.77075195 46.31851578]
[243.91806030 41.33319092]
[250.97659302 35.52634811]
[258.32180786 36.38185883]
[272.54421997 31.61498642]
[286.76663208 26.84811592]
[300.98904419 22.08124352]
[311.43777466 9.44179630]
[327.56100464 12.43739223]
[332.77252197 27.98641777]
[321.71115112 40.09336853]
[305.75588989 36.30365372]
[291.53347778 41.07052612]
[277.31109619 45.83739471]
[263.08868408 50.60426712]
[248.90338135 55.48050690]
[234.75607300 60.46583176]
[220.60874939 65.45114899]
[206.46144104 70.43647766]
[200.28010559 83.93931580]
[186.00373840 89.19667816]
[171.88262939 82.62158203]
[157.73530579 87.60690308]
[143.58799744 92.59222412]
[129.44067383 97.57754517]
[115.29335785 102.56286621]
[114.60060883 117.54685974]
[128.22758484 123.81626892]
[141.85456848 130.08567810]
[155.48153687 136.35507202]
[169.10852051 142.62448120]
[182.73550415 148.89389038]
[199.65193176 150.02113342]
[203.25167847 166.58851624]
[188.32826233 174.63388062]
[176.46609497 162.52085876]
[162.83911133 156.25146484]
[149.21214294 149.98205566]
[135.58515930 143.71264648]
[121.95818329 137.44325256]
[108.33119965 131.17384338]
[96.94012451 140.93312073]
[101.04507446 155.36050415]
[105.15001678 169.78788757]
[122.64447021 171.41067505]
[138.14479065 179.60774231]
[149.28897095 193.09938049]
[154.39057922 209.80143738]
[152.69390869 227.14723206]
[144.48583984 242.48200989]
[131.04768372 253.46923828]
[135.81454468 267.69165039]
[140.58142090 281.91406250]
[145.34829712 296.13647461]
[150.11515808 310.35888672]
[154.88203430 324.58129883]
[169.72319031 329.11114502]
[179.04046631 341.51953125]
[179.25117493 357.03515625]
[170.27429199 369.69198608]
[155.56161499 374.62316895]
[140.77046204 369.93258667]
[131.58834839 357.42385864]
[131.54595947 341.90686035]
[140.65962219 329.34814453]
[135.89274597 315.12576294]
[131.12588501 300.90335083]
[126.35900879 286.68093872]
[121.59214020 272.45852661]
[116.82526398 258.23611450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 177]
[10 176]
[11 175]
[12 124]
[13 123]
[14 122]
[16 120]
[17 119]
[18 118]
[19 117]
[20 116]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[28 47]
[29 46]
[30 45]
[32 44]
[33 43]
[34 42]
[35 41]
[54 100]
[55 99]
[56 98]
[59 95]
[60 94]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[69 83]
[70 82]
[71 81]
[72 79]
[73 78]
[125 159]
[126 158]
[127 157]
[128 156]
[129 155]
[132 152]
[133 151]
[134 150]
[135 149]
[137 148]
[138 147]
[139 146]
[140 145]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
[165 169]
[184 203]
[185 202]
[186 201]
[187 200]
[188 199]
[189 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
