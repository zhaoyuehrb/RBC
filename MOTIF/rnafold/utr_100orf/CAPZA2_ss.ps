%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUCCCUUAGCGGGGGCGCGCGGCGCUGAGGACCGCACGGAAACGGGGAAGUCAGGUGGCCGCUGCCGCCGCCGCCGCCGCGGUUUGUCGCCAGAAGGAAGAUGGCGGAUCUGGAGGAGCAGUUGUCUGAUGAAGAGAAGGUGCGUAUAGCAGCAAAAUUCAUCAUUCAUGCCCCUCCUGGAGAAUUUAAUGAGGUUUUCA\
) } def
/len { sequence length } bind def

/coor [
[80.47041321 222.19610596]
[86.07769775 207.82383728]
[98.57848358 198.78315735]
[97.65507507 183.81161499]
[96.73165894 168.84005737]
[95.80824280 153.86851501]
[84.79114532 151.84667969]
[74.42766571 147.59667969]
[65.16319275 141.30114746]
[57.39587021 133.23063660]
[51.45951462 123.73201752]
[47.60924149 113.21347809]
[32.69631195 114.82734680]
[17.78338432 116.44121552]
[2.87045670 118.05507660]
[-10.01714420 127.23223877]
[-23.50300217 120.90919495]
[-38.41593170 122.52306366]
[-53.32885742 124.13692474]
[-68.24179077 125.75079346]
[-76.44230652 129.78733826]
[-83.39653778 127.27286530]
[-98.33255005 128.65689087]
[-113.26856995 130.04092407]
[-128.20457458 131.42494202]
[-143.14059448 132.80897522]
[-158.06550598 134.30795288]
[-172.97843933 135.92182922]
[-180.75344849 149.22052002]
[-194.70524597 155.31976318]
[-209.39945984 152.07257080]
[-219.24607849 140.92887878]
[-234.15901184 142.54273987]
[-242.35952759 146.57928467]
[-249.31376648 144.06481934]
[-264.24978638 145.44883728]
[-279.18579102 146.83287048]
[-294.12179565 148.21688843]
[-298.17544556 158.95001221]
[-305.90869141 167.35557556]
[-316.17480469 172.24368286]
[-327.47238159 172.94190979]
[-338.16485596 169.38752747]
[-346.71774292 162.13102722]
[-351.91867065 152.25123596]
[-366.90264893 152.94398499]
[-377.36337280 164.79087830]
[-393.14221191 165.68765259]
[-404.87783813 155.10226440]
[-405.60772705 139.31483459]
[-394.89886475 127.69178009]
[-379.10461426 127.12883759]
[-367.59539795 137.95999146]
[-352.61141968 137.26724243]
[-343.26354980 121.09002686]
[-325.91848755 113.75083923]
[-307.50729370 118.37870789]
[-295.50582886 133.28088379]
[-280.56982422 131.89685059]
[-265.63378906 130.51283264]
[-250.69778442 129.12879944]
[-235.77287292 127.62981415]
[-220.85993958 126.01594543]
[-213.62528992 113.02372742]
[-199.96595764 106.70813751]
[-185.03234863 109.68141937]
[-174.59230042 121.00889587]
[-159.67936707 119.39503479]
[-153.36407471 115.54782867]
[-144.52461243 117.87295532]
[-129.58860779 116.48892975]
[-114.65259552 115.10490417]
[-99.71657562 113.72087860]
[-84.78056335 112.33685303]
[-69.85565186 110.83786774]
[-54.94272614 109.22399902]
[-40.02979660 107.61013031]
[-25.11686897 105.99626923]
[-13.29593945 96.93453979]
[1.25659049 103.14215088]
[16.16951942 101.52828217]
[31.08244705 99.91442108]
[45.99537659 98.30055237]
[47.30260468 88.06803131]
[50.53068161 78.27043915]
[55.56194305 69.26490021]
[62.21299744 61.37966919]
[70.24140930 54.90217590]
[79.35453796 50.06852341]
[89.22020721 47.05490112]
[88.29679108 32.08335114]
[87.37338257 17.11180115]
[86.44996643 2.14025044]
[85.52655029 -12.83129978]
[84.60314178 -27.80284882]
[71.08610535 -35.23880386]
[63.75513840 -48.81306076]
[64.94951630 -64.19412231]
[74.28811646 -76.47394562]
[88.79102325 -81.73408508]
[103.83042145 -78.29605103]
[114.60728455 -67.25690460]
[117.68276215 -52.13920212]
[112.07547760 -37.76694107]
[99.57468414 -28.72626305]
[100.49810028 -13.75471306]
[101.42151642 1.21683681]
[102.34492493 16.18838692]
[103.26834106 31.15993690]
[104.19175720 46.13148499]
[133.87355042 57.90522003]
[151.72460938 84.38103485]
[166.54708862 82.08016205]
[181.36958313 79.77928162]
[196.17390442 77.36434174]
[210.95919800 74.83548737]
[225.74449158 72.30662537]
[240.52978516 69.77777100]
[255.31507874 67.24890900]
[267.61328125 57.29578018]
[281.46279907 62.77663422]
[296.24810791 60.24777603]
[311.03338623 57.71891785]
[316.36248779 53.79061890]
[322.02502441 53.23152924]
[326.31237793 55.34717560]
[341.16854858 53.27483368]
[350.68975830 40.94664001]
[365.78552246 39.05662155]
[377.47988892 48.20961380]
[392.33605957 46.13726807]
[407.19219971 44.06492233]
[422.04837036 41.99257660]
[436.90454102 39.92023087]
[451.76068115 37.84788895]
[466.61685181 35.77554321]
[469.79357910 21.88880539]
[477.50421143 9.94606113]
[488.80505371 1.37134230]
[502.32577515 -2.82121778]
[516.43566895 -2.14730167]
[529.44018555 3.29173660]
[539.78442383 12.82349777]
[546.23931885 25.28759766]
[561.12561035 23.44427299]
[576.01190186 21.60094833]
[586.97027588 9.88371277]
[602.95166016 11.28932667]
[611.69647217 24.73952484]
[606.49645996 39.91646576]
[591.34063721 45.17769623]
[577.85522461 36.48725510]
[562.96893311 38.33058167]
[548.08264160 40.17390442]
[544.10003662 55.50960159]
[534.51489258 68.17424011]
[520.77093506 76.21141052]
[504.95697021 78.36534119]
[489.48962402 74.27702332]
[476.74404907 64.54368591]
[468.68917847 50.63169861]
[453.83303833 52.70404434]
[438.97686768 54.77639008]
[424.12072754 56.84873581]
[409.26455688 58.92108154]
[394.40841675 60.99342346]
[379.55224609 63.06576920]
[370.80914307 75.06967163]
[355.77239990 77.38295746]
[343.24087524 68.13098907]
[328.38473511 70.20333099]
[313.56225586 72.50421143]
[298.77694702 75.03306580]
[283.99166870 77.56192780]
[272.75100708 87.33417511]
[257.84393311 82.03420258]
[243.05863953 84.56306458]
[228.27334595 87.09191895]
[213.48805237 89.62078094]
[198.70275879 92.14963531]
[192.63627625 96.37831879]
[183.67045593 94.60176849]
[168.84796143 96.90264130]
[154.02548218 99.20351410]
[153.61831665 106.66806030]
[152.18475342 114.00495911]
[149.75222778 121.07376099]
[146.36730957 127.73915100]
[142.09478760 133.87355042]
[137.01644897 139.35949707]
[131.22952271 144.09201050]
[124.84476471 147.98046875]
[117.98441315 150.95045471]
[110.77979279 152.94509888]
[111.70320892 167.91665649]
[112.62661743 182.88819885]
[113.55003357 197.85975647]
[127.06706238 205.29570007]
[134.39804077 218.86996460]
[133.20365906 234.25102234]
[123.86505890 246.53083801]
[109.36214447 251.79098511]
[94.32275391 248.35295105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[6 194]
[12 83]
[13 82]
[14 81]
[15 80]
[17 78]
[18 77]
[19 76]
[20 75]
[22 74]
[23 73]
[24 72]
[25 71]
[26 70]
[27 68]
[28 67]
[32 63]
[33 62]
[35 61]
[36 60]
[37 59]
[38 58]
[45 54]
[46 53]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[112 184]
[113 183]
[114 182]
[115 180]
[116 179]
[117 178]
[118 177]
[119 176]
[121 174]
[122 173]
[123 172]
[126 171]
[127 170]
[130 167]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[144 154]
[145 153]
[146 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
