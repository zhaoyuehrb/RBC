%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGUCACUAGGCCGGCUGGGGGCCCUGGGUACGCUGUAGACCAGACCGCGACAGGCCAGAACACGGGCGGCGGCUUCGGGCCGGGAGACCCGCGCAGCCCUCGGGGCAUCUCAGUGCCUCACUCCCCACCCCCUCCCCCGGGUCGGGGGAGGCGGCGCGUCCGGCGGAGGGUUGAGGGGAGCGGGGCAGGCCUGGAGCGCCAUGAGCAGCCCGGAUGCGGGAUACGCCAGUGACGACCAGAGCCAGACCCAG\
AGCGCGCUGCCCGCGGUGAUGGCCGGGCUGGGCCCCUGCCCCUGGGCCG\
) } def
/len { sequence length } bind def

/coor [
[-12.49072552 831.25231934]
[-14.18949032 846.35803223]
[-21.54402733 859.66137695]
[-33.43281937 869.13372803]
[-48.04291916 873.33056641]
[-63.14638519 871.61193848]
[-76.44005585 864.23986816]
[-85.89673615 852.33862305]
[-90.07435608 837.72302246]
[-88.33585358 822.62182617]
[-80.94634247 809.33789062]
[-69.03266907 799.89685059]
[-54.41157913 795.73846436]
[-52.71566391 780.83465576]
[-51.01974869 765.93084717]
[-49.32382965 751.02703857]
[-47.93527985 736.09143066]
[-46.85468674 721.13037109]
[-45.77408981 706.16937256]
[-48.41297531 699.30627441]
[-44.60453415 691.06005859]
[-43.36989594 676.11096191]
[-42.13525772 661.16186523]
[-40.90061951 646.21276855]
[-39.66598129 631.26367188]
[-38.43134308 616.31457520]
[-37.19670486 601.36547852]
[-35.96206665 586.41632080]
[-42.68790054 583.09771729]
[-56.13956833 576.46051025]
[-62.86540222 573.14190674]
[-73.97805023 583.21710205]
[-85.09069061 593.29223633]
[-86.65943146 598.16668701]
[-89.62448120 601.63262939]
[-93.22846222 603.39605713]
[-96.70581818 603.50048828]
[-108.12444305 613.22753906]
[-119.54306793 622.95458984]
[-122.25051880 638.76751709]
[-136.37062073 646.38342285]
[-151.07164001 639.96008301]
[-155.07620239 624.42486572]
[-145.31236267 611.69506836]
[-129.27009583 611.53594971]
[-117.85147095 601.80889893]
[-106.43284607 592.08190918]
[-95.16586304 582.17962646]
[-84.05322266 572.10443115]
[-72.94057465 562.02929688]
[-64.89012909 549.37261963]
[-60.47583771 535.03686523]
[-67.83877563 526.39849854]
[-70.16374969 515.16656494]
[-66.76506805 504.08651733]
[-58.37063599 495.92333984]
[-46.96954727 492.77169800]
[-42.26088333 478.52990723]
[-37.55221558 464.28811646]
[-32.84355164 450.04632568]
[-28.13488770 435.80456543]
[-35.03703690 422.65554810]
[-30.46466064 408.14529419]
[-16.62598991 400.99484253]
[-11.91732597 386.75305176]
[-16.38084793 369.75924683]
[-2.47289205 357.65551758]
[2.08883047 343.36596680]
[6.65055275 329.07644653]
[11.21227551 314.78692627]
[15.77399826 300.49737549]
[20.33572006 286.20785522]
[24.89744377 271.91833496]
[29.45916557 257.62878418]
[34.02088928 243.33926392]
[38.50895691 229.02642822]
[42.92325211 214.69067383]
[47.33755112 200.35490417]
[51.75184631 186.01914978]
[48.10263824 171.57849121]
[59.55851364 160.66641235]
[63.97280884 146.33065796]
[56.92316055 133.09046936]
[42.56485748 128.75006104]
[28.18438911 124.48366547]
[13.78214169 120.29137421]
[-0.62010640 116.09909058]
[-15.02235413 111.90680695]
[-31.92016029 113.28539276]
[-37.92264557 97.42958832]
[-24.34814644 87.27236176]
[-10.83006954 97.50456238]
[3.57217813 101.69684601]
[17.97442627 105.88912964]
[32.37667465 110.08141327]
[39.64043045 108.93958282]
[46.90526199 114.39176178]
[61.26356506 118.73217010]
[64.47786713 111.95586395]
[74.12076569 91.62696075]
[61.67560959 83.25330353]
[49.23045349 74.87964630]
[36.78529739 66.50598907]
[20.26860237 62.68040085]
[19.37240791 45.75015640]
[35.39292145 40.20222855]
[45.15895462 54.06083298]
[57.60411072 62.43449020]
[70.04926300 70.80814362]
[82.49442291 79.18180084]
[89.18571472 75.79409027]
[82.27861023 62.47899246]
[71.79116821 51.75455475]
[78.67371368 38.42674637]
[93.48969269 40.76912308]
[95.92523193 55.56989670]
[102.56830597 69.01867676]
[109.25959778 65.63096619]
[109.87744141 50.64369583]
[110.49528503 35.65642548]
[111.11312866 20.66915321]
[111.73097229 5.68188334]
[112.34881592 -9.30538654]
[105.18650818 -23.41254425]
[113.44146729 -35.81031799]
[114.05931091 -50.79758835]
[114.67715454 -65.78485870]
[115.29499817 -80.77213287]
[115.91284180 -95.75939941]
[116.53068542 -110.74667358]
[116.91690826 -125.74169922]
[117.07140350 -140.74090576]
[117.22590637 -155.74011230]
[117.38040924 -170.73930359]
[116.29981232 -185.70033264]
[113.99145508 -200.52165222]
[111.68309784 -215.34297180]
[109.37474060 -230.16429138]
[107.06638336 -244.98561096]
[104.75801849 -259.80691528]
[102.44966125 -274.62823486]
[100.14130402 -289.44955444]
[97.83294678 -304.27087402]
[89.42113495 -318.99087524]
[101.23723602 -331.14883423]
[116.19108582 -323.16018677]
[112.65426636 -306.57925415]
[114.96262360 -291.75793457]
[117.27098083 -276.93661499]
[119.57933807 -262.11529541]
[121.88769531 -247.29397583]
[124.19606018 -232.47265625]
[126.50441742 -217.65133667]
[128.81277466 -202.83001709]
[131.12113953 -188.00869751]
[138.61476135 -187.69976807]
[146.64344788 -200.37022400]
[153.60203552 -187.08192444]
[161.09567261 -186.77301025]
[164.61613464 -201.35403442]
[168.13658142 -215.93505859]
[161.03234863 -230.31941223]
[167.97923279 -244.78041077]
[183.64816284 -248.22482300]
[196.01930237 -238.01039124]
[195.60255432 -221.97274780]
[182.71762085 -212.41461182]
[179.19715881 -197.83357239]
[175.67669678 -183.25254822]
[161.32041931 -170.08033752]
[145.43080139 -166.18588257]
[132.37960815 -170.58480835]
[132.22511292 -155.58560181]
[132.07061768 -140.58639526]
[131.91610718 -125.58719635]
[134.06344604 -122.85006714]
[135.01803589 -118.95301056]
[134.25601196 -114.45594788]
[131.51795959 -110.12882996]
[130.90011597 -95.14155579]
[130.28227234 -80.15428925]
[129.66442871 -65.16701508]
[129.04658508 -50.17974472]
[128.42874146 -35.19247437]
[135.63523865 -22.15730858]
[127.33608246 -8.68754387]
[126.71823883 6.29972696]
[126.10039520 21.28699684]
[125.48255920 36.27426910]
[124.86471558 51.26153564]
[124.24687195 66.24880981]
[135.61524963 76.03451538]
[150.34373474 73.19344330]
[165.07221985 70.35237885]
[179.78587341 67.43549347]
[194.48432922 64.44287109]
[209.18276978 61.45025253]
[223.88121033 58.45763016]
[231.61137390 48.17356110]
[243.87890625 45.96233749]
[254.03884888 52.46945190]
[268.76733398 49.62838745]
[280.85223389 39.41732407]
[294.81460571 44.60396957]
[309.54309082 41.76290131]
[324.27157593 38.92183304]
[333.13970947 26.11581802]
[348.11697388 23.44438553]
[360.27090454 31.97770882]
[374.99938965 29.13664246]
[385.05789185 13.03669071]
[403.38531494 9.51407242]
[418.17794800 20.35880089]
[432.84478760 17.21494293]
[447.51162720 14.07108402]
[462.17846680 10.92722511]
[473.97717285 -0.46234795]
[489.66342163 4.32031918]
[493.10052490 20.35522842]
[480.75268555 31.14704132]
[465.32232666 25.59406471]
[450.65548706 28.73792267]
[435.98864746 31.88178062]
[421.32180786 35.02563858]
[417.37570190 45.66811752]
[408.70709229 53.17923737]
[397.37753296 55.62055969]
[386.15563965 52.27792358]
[377.84045410 43.86512756]
[363.11196899 46.70619583]
[355.00402832 59.14794922]
[340.10772705 62.23900986]
[327.11264038 53.65032196]
[312.38415527 56.49139023]
[297.65567017 59.33245468]
[286.62426758 69.34030914]
[271.60839844 64.35687256]
[256.87991333 67.19793701]
[244.22599792 79.38774109]
[226.87382507 73.15607452]
[212.17538452 76.14869690]
[197.47694397 79.14131927]
[182.77850342 82.13393402]
[176.88087463 86.52528381]
[167.91328430 85.08086395]
[153.18479919 87.92193604]
[138.45631409 90.76300049]
[141.77188110 108.74481201]
[136.50698853 127.66428375]
[122.60615540 143.39707947]
[101.98522949 152.02148438]
[78.30857086 150.74494934]
[73.89427185 165.08070374]
[77.22773743 180.54675293]
[66.08760834 190.43344116]
[61.67330933 204.76921082]
[57.25901413 219.10496521]
[52.84471512 233.44071960]
[53.31271362 242.51182556]
[48.31041718 247.90098572]
[43.74869537 262.19052124]
[39.18697357 276.48004150]
[34.62525177 290.76956177]
[30.06352806 305.05911255]
[25.50180626 319.34863281]
[20.94008446 333.63815308]
[16.37836075 347.92770386]
[11.81663895 362.21722412]
[17.01989746 373.98342896]
[12.96259022 385.76986694]
[2.32446074 391.46170044]
[-2.38420367 405.70349121]
[4.46484613 419.69378662]
[-0.51328868 434.06991577]
[-13.89310265 440.51321411]
[-18.60176659 454.75500488]
[-23.31043053 468.99679565]
[-28.01909637 483.23858643]
[-32.72776031 497.48037720]
[-23.58470345 514.11724854]
[-29.45499611 531.83288574]
[-46.14007568 539.45117188]
[-50.55437469 553.78692627]
[-30.84859467 560.72283936]
[-21.01296616 587.65100098]
[-22.24760437 602.60009766]
[-23.48224258 617.54919434]
[-24.71688080 632.49829102]
[-25.95151901 647.44738770]
[-27.18615723 662.39648438]
[-28.42079353 677.34558105]
[-29.65543175 692.29467773]
[-30.81306458 707.24993896]
[-31.89365959 722.21099854]
[-32.97425461 737.17199707]
[-31.00200844 740.91394043]
[-30.35741234 744.70947266]
[-30.89886475 748.14288330]
[-32.36658478 750.88488770]
[-34.42000961 752.72296143]
[-36.11592865 767.62677002]
[-37.81184387 782.53057861]
[-39.50775909 797.43438721]
[-26.19474220 804.77142334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 303]
[14 302]
[15 301]
[16 300]
[17 295]
[18 294]
[19 293]
[21 292]
[22 291]
[23 290]
[24 289]
[25 288]
[26 287]
[27 286]
[28 285]
[31 50]
[32 49]
[33 48]
[37 47]
[38 46]
[39 45]
[51 283]
[52 282]
[57 279]
[58 278]
[59 277]
[60 276]
[61 275]
[64 272]
[65 271]
[67 268]
[68 267]
[69 266]
[70 265]
[71 264]
[72 263]
[73 262]
[74 261]
[75 260]
[76 258]
[77 257]
[78 256]
[79 255]
[81 253]
[82 252]
[83 98]
[84 97]
[85 95]
[86 94]
[87 93]
[88 92]
[100 110]
[101 109]
[102 108]
[103 107]
[118 191]
[119 190]
[120 189]
[121 188]
[122 187]
[123 186]
[125 184]
[126 183]
[127 182]
[128 181]
[129 180]
[130 179]
[131 175]
[132 174]
[133 173]
[134 172]
[135 155]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
[159 169]
[160 168]
[161 167]
[192 247]
[193 246]
[194 245]
[195 243]
[196 242]
[197 241]
[198 240]
[201 238]
[202 237]
[204 235]
[205 234]
[206 233]
[209 230]
[210 229]
[213 224]
[214 223]
[215 222]
[216 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
