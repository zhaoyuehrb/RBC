%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCGCAGCCACCCCUCCUGCGUCUCCACAAAUGGUCCGACCCGCAAGCAAGGGGGCGGGUCCGGCUUUGAAAAGCCGGCGGGUCGGGCCUUGAGGUGGAAGGCGGGAAAAUGGCGGAUUCCUCGGGGCGAGGCGCUGGGAAGCCUGCAACCGGCCCCACAAAUUCUAGCAGUGCCAAGAAGAAGGAUAAAAGAGUUCAAGGUGGAAGAG\
) } def
/len { sequence length } bind def

/coor [
[87.05501556 79.49777985]
[73.51304626 73.04680634]
[59.97107697 66.59582520]
[46.42911148 60.14484787]
[32.88714218 53.69387054]
[19.34517479 47.24288940]
[5.80320787 40.79191208]
[-15.14450264 45.88736725]
[-29.96277237 27.60892677]
[-44.37212753 23.44114113]
[-58.78148651 19.27335358]
[-73.19084167 15.10556602]
[-83.41200256 24.35255051]
[-96.76158142 27.31825447]
[-109.72967529 23.33247566]
[-118.96060944 13.53847218]
[-122.12119293 0.56767642]
[-136.46720886 -3.81317520]
[-150.81321716 -8.19402695]
[-165.15924072 -12.57487869]
[-179.50524902 -16.95573044]
[-193.85127258 -21.33658218]
[-204.93380737 -13.68284798]
[-218.20718384 -13.80739880]
[-228.82804871 -21.44073296]
[-233.04981995 -33.61425400]
[-247.32934570 -38.20720673]
[-261.60885620 -42.80016327]
[-275.88839722 -47.39311600]
[-290.16790771 -51.98606873]
[-302.30792236 -40.76004028]
[-318.36080933 -37.20864868]
[-333.92446899 -42.20878601]
[-344.77972412 -54.30549622]
[-348.03414917 -70.13372040]
[-362.38015747 -74.51457214]
[-376.72619629 -78.89542389]
[-391.07220459 -83.27627563]
[-405.41821289 -87.65712738]
[-419.76422119 -92.03797913]
[-434.11022949 -96.41883087]
[-448.45626831 -100.79968262]
[-462.80227661 -105.18053436]
[-477.14828491 -109.56138611]
[-491.49429321 -113.94223785]
[-505.84030151 -118.32308960]
[-505.90979004 -104.86290741]
[-514.61517334 -91.32931519]
[-531.51782227 -82.19922638]
[-546.51617432 -82.42150116]
[-557.67987061 -71.23455811]
[-573.48400879 -71.30166626]
[-584.55230713 -82.58300781]
[-584.31811523 -98.38555908]
[-572.92041016 -109.33395386]
[-557.12121582 -108.93270111]
[-546.29388428 -97.41985321]
[-531.29553223 -97.19757843]
[-529.21166992 -104.40225983]
[-543.62103271 -108.57004547]
[-554.01623535 -119.38391876]
[-539.45324707 -122.97940063]
[-525.04388428 -118.81161499]
[-522.95996094 -126.01629639]
[-535.76116943 -133.83480835]
[-548.56237793 -141.65332031]
[-561.36358643 -149.47184753]
[-574.16479492 -157.29035950]
[-586.96600342 -165.10887146]
[-603.36456299 -164.97271729]
[-611.44744873 -179.24154663]
[-602.89965820 -193.23680115]
[-586.51440430 -192.56137085]
[-579.14746094 -177.91007996]
[-566.34625244 -170.09156799]
[-553.54510498 -162.27304077]
[-540.74389648 -154.45452881]
[-527.94268799 -146.63601685]
[-515.14147949 -138.81748962]
[-501.45947266 -132.66909790]
[-487.11346436 -128.28825378]
[-472.76742554 -123.90739441]
[-458.42141724 -119.52654266]
[-444.07540894 -115.14569092]
[-429.72940063 -110.76483917]
[-415.38336182 -106.38399506]
[-401.03735352 -102.00314331]
[-386.69134521 -97.62229156]
[-372.34533691 -93.24143982]
[-357.99932861 -88.86058807]
[-343.65328979 -84.47973633]
[-334.30444336 -94.43486786]
[-321.51702881 -99.41481018]
[-307.76577759 -98.39464569]
[-295.73834229 -91.51660919]
[-287.81005859 -80.07339478]
[-285.57495117 -66.26559448]
[-271.29544067 -61.67263794]
[-257.01589966 -57.07968521]
[-242.73638916 -52.48673248]
[-228.45686340 -47.89377594]
[-213.83616638 -56.20555115]
[-197.40434265 -51.27377319]
[-189.47041321 -35.68259430]
[-175.12440491 -31.30174446]
[-160.77838135 -26.92089272]
[-146.43237305 -22.54004097]
[-132.08634949 -18.15918922]
[-117.74034119 -13.77833843]
[-104.95629883 -24.07674789]
[-88.38692474 -24.73219872]
[-74.55477142 -15.28842354]
[-69.02305603 0.69620979]
[-54.61369705 4.86399698]
[-40.20434189 9.03178406]
[-25.79498482 13.19957161]
[-35.52556229 1.78397298]
[-31.85491180 -12.75997162]
[-17.87257004 -18.19082260]
[-5.34728527 -9.93750572]
[-4.82145357 5.05334806]
[2.99706364 -7.74785471]
[2.86090922 -24.14643669]
[17.12972641 -32.22931290]
[31.12498093 -23.68151093]
[30.44955444 -7.29627848]
[15.79826641 0.07066260]
[7.97974920 12.87186527]
[12.25418568 27.24994469]
[25.79615402 33.70092392]
[39.33811951 40.15190125]
[52.88008881 46.60287857]
[66.42205811 53.05385590]
[79.96401978 59.50483704]
[93.50598907 65.95581055]
[108.49940491 66.40031433]
[122.39974976 60.76290131]
[136.30009460 55.12548447]
[150.20043945 49.48807144]
[164.10078430 43.85065842]
[165.53532410 28.61252594]
[173.89677429 15.79282761]
[187.26373291 8.33743572]
[202.56459045 7.95954418]
[216.28327942 14.74599075]
[225.26737976 27.13729858]
[227.45240784 42.28603745]
[222.33624268 56.71113586]
[211.09455872 67.09781647]
[196.31060791 71.05928802]
[181.38162231 67.68524170]
[169.73818970 57.75100327]
[155.83784485 63.38841629]
[141.93750000 69.02583313]
[128.03715515 74.66324615]
[114.13681793 80.30065918]
[121.02127838 92.93022919]
[119.21456909 105.93267822]
[130.86242676 115.38399506]
[142.51028442 124.83531952]
[154.15814209 134.28663635]
[175.48660278 136.36775208]
[182.03445435 155.94087219]
[194.09083557 164.86520386]
[206.14721680 173.78952026]
[218.20361328 182.71385193]
[230.25999451 191.63818359]
[242.31637573 200.56250000]
[253.53564453 193.58340454]
[266.42764282 190.83869934]
[279.45352173 192.63381958]
[291.06600952 198.73361206]
[299.89312744 208.39291382]
[304.90039062 220.44750977]
[305.51190186 233.45440674]
[301.67654419 245.86457825]
[313.46316528 255.14225769]
[328.35733032 250.78981018]
[342.95385742 256.05484009]
[351.64010620 268.91287231]
[351.07604980 284.41967773]
[341.47854614 296.61260986]
[326.53805542 300.80325317]
[311.99951172 295.38015747]
[303.45324707 282.42868042]
[304.18548584 266.92889404]
[292.39886475 257.65121460]
[277.44409180 265.51483154]
[260.50103760 266.05184937]
[244.97723389 259.10580444]
[234.01597595 246.03016663]
[229.85984802 229.42472839]
[233.39204407 212.61889648]
[221.33566284 203.69456482]
[209.27928162 194.77023315]
[197.22290039 185.84590149]
[185.16651917 176.92158508]
[173.11012268 167.99725342]
[164.66072083 170.72064209]
[155.77008057 169.22827148]
[148.45300293 163.73010254]
[144.42626953 155.35800171]
[144.70683289 145.93449402]
[133.05897522 136.48316956]
[121.41110992 127.03186035]
[109.76325226 117.58053589]
[101.36883545 120.65534973]
[92.20955658 119.81528473]
[84.07005310 115.00305176]
[78.62976074 106.95589447]
[77.11825562 97.09957886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 135]
[2 134]
[3 133]
[4 132]
[5 131]
[6 130]
[7 129]
[9 116]
[10 115]
[11 114]
[12 113]
[17 109]
[18 108]
[19 107]
[20 106]
[21 105]
[22 104]
[26 101]
[27 100]
[28 99]
[29 98]
[30 97]
[35 91]
[36 90]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[49 58]
[50 57]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[121 128]
[122 127]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[158 206]
[159 205]
[160 204]
[161 203]
[163 198]
[164 197]
[165 196]
[166 195]
[167 194]
[168 193]
[176 187]
[177 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
