%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCUUUCUUCCCGAGGGCGGCACGAGGGCUGGGCGGUGGGGUGCGGGUGCCCGGGUGAGGGGCGGAGCUGGGGGCAUGGCGUCCGGAGCGGCUCGCUGGCUAGUAUUGGCACCCGUCAGGUCCGGGGCUCUCCGGAGCGGGCCUAGCUUGAGGAAAGAUGGCGAUGUCUCCGCCG\
) } def
/len { sequence length } bind def

/coor [
[93.75075531 171.32344055]
[93.48751068 156.32574463]
[93.22425842 141.32804871]
[92.96101379 126.33036804]
[92.69776154 111.33267212]
[90.85955811 96.44573212]
[87.46677399 81.83447266]
[84.07398224 67.22321320]
[80.68119049 52.61194611]
[77.28840637 38.00068665]
[73.89561462 23.38942337]
[70.50282288 8.77816105]
[67.11003876 -5.83310080]
[51.25497055 -10.47564697]
[39.96305847 -22.40623093]
[36.24172592 -38.30984497]
[41.01269150 -53.83260345]
[52.88593674 -64.77365875]
[49.23724365 -79.32312775]
[45.58855057 -93.87259674]
[41.93985748 -108.42205811]
[28.82752228 -121.33148956]
[34.26115036 -138.00506592]
[30.35767746 -152.48826599]
[17.02080154 -165.16558838]
[22.16097069 -181.93196106]
[18.00392151 -196.34442139]
[13.72055817 -210.71983337]
[9.31121159 -225.05711365]
[4.90186453 -239.39440918]
[0.49251780 -253.73168945]
[-3.91682887 -268.06896973]
[-8.32617569 -282.40625000]
[-12.98646069 -296.66394043]
[-17.89624977 -310.83764648]
[-22.80603790 -325.01135254]
[-27.71582794 -339.18505859]
[-43.97104645 -342.13537598]
[-56.45443344 -352.81295776]
[-61.82678604 -368.23733521]
[-58.71385193 -384.17556763]
[-48.05639267 -396.30401611]
[-53.21417236 -410.38937378]
[-58.37195206 -424.47473145]
[-63.52973175 -438.56008911]
[-68.68750763 -452.64544678]
[-73.84529114 -466.73080444]
[-85.85601807 -477.02902222]
[-82.96680450 -491.64071655]
[-88.12458038 -505.72607422]
[-93.28236389 -519.81140137]
[-98.44013977 -533.89678955]
[-103.59792328 -547.98211670]
[-113.74578857 -551.99804688]
[-119.86878204 -560.76519775]
[-120.13379669 -571.23553467]
[-114.69519806 -579.92816162]
[-119.35548401 -594.18585205]
[-124.01576233 -608.44354248]
[-135.65768433 -619.15692139]
[-132.25746155 -633.65820312]
[-136.91775513 -647.91589355]
[-141.70297241 -662.13214111]
[-146.61276245 -676.30584717]
[-151.52255249 -690.47955322]
[-156.43234253 -704.65325928]
[-171.43229675 -707.64471436]
[-182.84559631 -717.67633057]
[-187.67315674 -731.97882080]
[-184.71337891 -746.67901611]
[-174.85929871 -757.84875488]
[-179.76908875 -772.02246094]
[-184.67887878 -786.19616699]
[-189.58866882 -800.36987305]
[-194.49845886 -814.54357910]
[-206.32659912 -825.05096436]
[-203.18139648 -839.60968018]
[-208.09118652 -853.78338623]
[-218.98890686 -866.77093506]
[-209.52572632 -880.83807373]
[-193.38865662 -875.63891602]
[-193.91748047 -858.69317627]
[-189.00769043 -844.51947021]
[-177.53073120 -835.02587891]
[-180.32475281 -819.45336914]
[-175.41496277 -805.27966309]
[-170.50517273 -791.10595703]
[-165.59538269 -776.93225098]
[-160.68559265 -762.75854492]
[-146.03367615 -760.07769775]
[-134.61489868 -750.35827637]
[-129.56085205 -736.13421631]
[-132.32322693 -721.19213867]
[-142.25863647 -709.56304932]
[-137.34884644 -695.38934326]
[-132.43905640 -681.21563721]
[-127.52926636 -667.04193115]
[-122.35376740 -661.73529053]
[-122.66005707 -652.57623291]
[-117.99977112 -638.31854248]
[-106.69119263 -628.62493896]
[-109.75807190 -613.10382080]
[-105.09779358 -598.84613037]
[-100.43750763 -584.58843994]
[-85.13362885 -572.79748535]
[-89.51256561 -553.13995361]
[-84.35478210 -539.05456543]
[-79.19700623 -524.96923828]
[-74.03922272 -510.88385010]
[-68.88144684 -496.79849243]
[-57.23963928 -487.50778198]
[-59.75993347 -471.88858032]
[-54.60215378 -457.80322266]
[-49.44437408 -443.71786499]
[-44.28659439 -429.63250732]
[-39.12881470 -415.54714966]
[-33.97103500 -401.46179199]
[-20.37632942 -400.00402832]
[-8.68313026 -392.79116821]
[-1.20796120 -381.18502808]
[0.53943747 -367.42422485]
[-3.83928514 -354.19238281]
[-13.54211998 -344.09484863]
[-8.63233185 -329.92114258]
[-3.72254276 -315.74743652]
[1.18724597 -301.57373047]
[5.04176903 -298.70928955]
[7.12103462 -293.38092041]
[6.01110649 -286.81558228]
[10.42045307 -272.47830200]
[14.82979965 -258.14102173]
[19.23914719 -243.80375671]
[23.64849281 -229.46646118]
[28.05784035 -215.12918091]
[33.04391098 -209.64414978]
[32.41637802 -200.50146484]
[36.57342911 -186.08900452]
[47.02042389 -179.95484924]
[50.59034348 -167.95880127]
[44.84086990 -156.39173889]
[48.74434280 -141.90853882]
[59.08207703 -135.59197998]
[62.44091415 -123.53514099]
[56.48932648 -112.07075500]
[60.13801956 -97.52128601]
[63.78671265 -82.97181702]
[67.43540192 -68.42234802]
[80.80157471 -65.54370880]
[91.67185211 -57.14171982]
[97.88569641 -44.81416321]
[98.17700958 -30.94591522]
[92.43173981 -18.24761963]
[81.72129822 -9.22589016]
[85.11408997 5.38537216]
[88.50687408 19.99663544]
[91.89966583 34.60789490]
[95.29245758 49.21915817]
[98.68524170 63.83042145]
[102.07803345 78.44168091]
[105.47082520 93.05294800]
[118.64260101 86.88814545]
[134.85052490 88.36617279]
[150.66526794 98.40744781]
[156.79837036 112.09631348]
[162.93145752 125.78517914]
[174.92549133 137.76763916]
[166.73159790 152.61003113]
[150.20095825 148.84512329]
[149.24259949 131.91827393]
[143.10949707 118.22941589]
[136.97639465 104.54054260]
[129.65615845 106.17276764]
[107.69544983 111.06942749]
[107.95870209 126.06711578]
[108.22194672 141.06480408]
[108.48519897 156.06250000]
[108.74844360 171.06018066]
[111.27692413 190.27624512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 173]
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[12 154]
[13 153]
[18 147]
[19 146]
[20 145]
[21 144]
[23 141]
[24 140]
[26 137]
[27 136]
[28 134]
[29 133]
[30 132]
[31 131]
[32 130]
[33 129]
[34 126]
[35 125]
[36 124]
[37 123]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
[47 112]
[49 110]
[50 109]
[51 108]
[52 107]
[53 106]
[57 104]
[58 103]
[59 102]
[61 100]
[62 99]
[63 97]
[64 96]
[65 95]
[66 94]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[77 83]
[78 82]
[163 171]
[164 170]
[165 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
