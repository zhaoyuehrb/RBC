%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGAUAGGACGCAGCAACUCACAGAGCAACCAGGACCCAGAAAUCGCUUAAGAGACCGCGGCAAAGUAACUUAACUGAGUUGCCUUCUUCCAUAUUUUCACGCCCCUUUCAUCCAGAACAUUUUUUUUCUUGAACUGCUUCCAUGGAGGACUCAACCUCCCCGAAGCAAGAAAAAGAAAACCAAGAAGAACUAGGGGAAACAAGGCGGCCAUGGGAAGGAAAGACAGCAGCUUCUCCCCAAU\
) } def
/len { sequence length } bind def

/coor [
[82.88635254 116.78857422]
[79.53763580 112.49098969]
[64.93220520 115.90879059]
[50.32677460 119.32659912]
[35.72134399 122.74440002]
[21.11591339 126.16220093]
[6.51048136 129.58000183]
[-8.09494972 132.99780273]
[-22.70038223 136.41560364]
[-37.28369141 139.92660522]
[-51.84428406 143.53063965]
[-66.40487671 147.13468933]
[-70.83200836 163.07690430]
[-82.63189697 174.54055786]
[-98.51292419 178.46003723]
[-114.11122131 173.85603333]
[-125.18976593 162.07801819]
[-139.70315552 165.86772156]
[-154.21653748 169.65740967]
[-168.72991943 173.44709778]
[-183.24330139 177.23678589]
[-197.75668335 181.02647400]
[-212.27006531 184.81616211]
[-226.78343201 188.60585022]
[-235.35990906 203.86528015]
[-251.99421692 208.10586548]
[-266.25607300 199.17344666]
[-280.71987915 203.14816284]
[-295.18368530 207.12287903]
[-303.03198242 220.57806396]
[-317.75695801 224.40295410]
[-330.53604126 216.83789062]
[-344.99984741 220.81260681]
[-347.82220459 234.50001526]
[-356.22244263 245.58619690]
[-368.51840210 251.94551086]
[-382.28826904 252.38946533]
[-394.84719849 246.88844299]
[-403.77108765 236.56643677]
[-418.28448486 240.35612488]
[-420.42660522 255.37901306]
[-428.13641357 268.40213013]
[-440.21224976 277.45684814]
[-454.79525757 281.18829346]
[-469.65548706 279.05798340]
[-482.53292847 271.42138672]
[-491.48107910 259.46899414]
[-505.99447632 263.25869751]
[-513.76660156 277.01986694]
[-529.01513672 281.17419434]
[-542.69335938 273.25701904]
[-546.68621826 257.96545410]
[-538.62487793 244.37168884]
[-523.29193115 240.54069519]
[-509.78417969 248.74531555]
[-495.27078247 244.95562744]
[-493.30844116 230.15432739]
[-485.80850220 217.19685364]
[-473.88681030 208.07334900]
[-459.34118652 204.19879150]
[-444.38009644 206.19371033]
[-431.28753662 213.78497314]
[-422.07415771 225.84274292]
[-407.56079102 222.05305481]
[-403.65478516 206.36231995]
[-392.29867554 194.72006226]
[-376.52877808 190.37495422]
[-360.63067627 194.60618591]
[-348.97457886 206.34880066]
[-334.51077271 202.37408447]
[-327.39215088 189.34101868]
[-312.78042603 185.10404968]
[-299.15841675 192.65908813]
[-284.69461060 188.68435669]
[-270.23080444 184.70964050]
[-265.49716187 172.73985291]
[-254.57446289 165.56893921]
[-241.32067871 165.99732971]
[-230.57313538 174.09246826]
[-216.05975342 170.30278015]
[-201.54637146 166.51309204]
[-187.03298950 162.72340393]
[-172.51960754 158.93371582]
[-158.00622559 155.14402771]
[-143.49284363 151.35433960]
[-128.97946167 147.56463623]
[-126.24122620 134.19744873]
[-117.97499847 123.25862885]
[-105.74596405 116.91383362]
[-91.91062164 116.44981384]
[-79.16275024 122.01387024]
[-70.00891876 132.57409668]
[-55.44832611 128.97004700]
[-40.88773346 125.36601257]
[-35.16334534 120.71886444]
[-26.11818314 121.81018066]
[-11.51275253 118.39237213]
[3.09267879 114.97457123]
[17.69811058 111.55677032]
[32.30354309 108.13896942]
[46.90897369 104.72116852]
[61.51440430 101.30335999]
[76.11983490 97.88555908]
[89.63767242 78.38159943]
[113.30874634 80.05982971]
[125.12104034 70.81484985]
[136.93333435 61.56986618]
[148.68635559 52.24964905]
[160.37962341 42.85457230]
[172.07290649 33.45949554]
[183.76617432 24.06442070]
[183.15022278 8.67199516]
[191.61695862 -3.98374200]
[205.74526978 -9.16593552]
[220.04476929 -5.08398056]
[231.73803711 -14.47905636]
[243.43130493 -23.87413216]
[239.61676025 -28.18579865]
[236.83363342 -33.84292984]
[235.48400879 -40.57376099]
[235.89469910 -47.99687958]
[238.28923035 -55.64229965]
[242.76550293 -62.97940826]
[249.28102112 -69.45018768]
[259.54364014 -80.38996124]
[269.80627441 -91.32973480]
[280.06887817 -102.26950836]
[290.33151245 -113.20928192]
[300.59411621 -124.14905548]
[310.85675049 -135.08883667]
[321.11935425 -146.02861023]
[331.38198853 -156.96838379]
[341.64459229 -167.90815735]
[326.77923584 -169.91345215]
[318.96643066 -182.71813965]
[323.98297119 -196.85443115]
[338.11959839 -201.86993408]
[350.92373657 -194.05621338]
[352.92834473 -179.19190979]
[363.86813354 -189.45452881]
[374.80789185 -199.71714783]
[385.74768066 -209.97976685]
[396.68743896 -220.24238586]
[407.62722778 -230.50500488]
[406.50314331 -243.91311646]
[413.20230103 -255.35722351]
[425.09024048 -260.77972412]
[437.74163818 -258.40798950]
[448.81158447 -268.53005981]
[459.88153076 -278.65213013]
[470.95147705 -288.77423096]
[482.02139282 -298.89630127]
[482.47711182 -314.69400024]
[494.02719116 -325.48153687]
[509.81921387 -324.85885620]
[520.48400879 -313.19534302]
[519.69439697 -297.41079712]
[507.91879272 -286.86990356]
[492.14349365 -287.82635498]
[481.07354736 -277.70428467]
[470.00360107 -267.58221436]
[458.93365479 -257.46011353]
[447.86373901 -247.33804321]
[447.82391357 -230.50987244]
[435.37252808 -218.69268799]
[417.88983154 -219.56523132]
[406.95007324 -209.30261230]
[396.01028442 -199.03999329]
[385.07052612 -188.77737427]
[374.13073730 -178.51475525]
[363.19097900 -168.25213623]
[352.58438110 -157.64552307]
[342.32174683 -146.70574951]
[332.05914307 -135.76599121]
[321.79650879 -124.82621002]
[311.53390503 -113.88643646]
[301.27127075 -102.94666290]
[291.00866699 -92.00688934]
[280.74603271 -81.06711578]
[270.48342896 -70.12734222]
[260.22079468 -59.18757248]
[262.62023926 -52.08175659]
[267.41915894 -37.87012482]
[269.81863403 -30.76430893]
[284.61236572 -28.28544617]
[299.50146484 -33.63578033]
[310.77508545 -23.90158653]
[325.56884766 -21.42272377]
[339.41387939 -29.52793884]
[354.33059692 -23.62276459]
[358.87615967 -8.23714161]
[349.56359863 4.82639360]
[333.53674316 5.54661608]
[323.08996582 -6.62896681]
[308.29623413 -9.10783005]
[294.46530151 -3.58019137]
[282.13351440 -13.49168968]
[267.33975220 -15.97055244]
[252.82637024 -12.18086243]
[241.13310242 -2.78578663]
[229.43983459 6.60928917]
[230.34585571 21.45237350]
[222.24206543 34.13277435]
[208.05967712 39.67471313]
[193.16123962 35.75769043]
[181.46797180 45.15276718]
[169.77470398 54.54784393]
[158.08143616 63.94291687]
[154.84324646 70.56701660]
[146.17831421 73.38216400]
[134.36602783 82.62714386]
[122.55373383 91.87212372]
[123.95223999 101.01158905]
[121.78810120 110.00058746]
[116.38320923 117.50210571]
[122.69352722 131.11018372]
[129.00386047 144.71826172]
[135.31417847 158.32633972]
[148.13906860 167.59094238]
[146.47396851 182.39218140]
[152.78428650 196.00025940]
[159.09460449 209.60833740]
[165.40493774 223.21641541]
[180.69497681 223.90417480]
[193.90817261 231.62881470]
[202.00822449 244.61526489]
[203.13380432 259.87933350]
[197.02624512 273.91345215]
[185.08903503 283.49267578]
[170.06524658 286.41577148]
[155.40724182 282.01104736]
[144.48333740 271.29064941]
[139.80374146 256.71807861]
[142.44380188 241.64198303]
[151.79685974 229.52673340]
[145.48652649 215.91865540]
[139.17620850 202.31057739]
[132.86589050 188.70249939]
[120.49234772 180.41123962]
[121.70610046 164.63667297]
[115.39577484 151.02857971]
[109.08544922 137.42050171]
[102.77512360 123.81243134]
[97.32691956 123.82410431]
[92.01676941 122.60533142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 103]
[3 102]
[4 101]
[5 100]
[6 99]
[7 98]
[8 97]
[9 96]
[10 94]
[11 93]
[12 92]
[17 86]
[18 85]
[19 84]
[20 83]
[21 82]
[22 81]
[23 80]
[24 79]
[27 75]
[28 74]
[29 73]
[32 70]
[33 69]
[39 64]
[40 63]
[47 56]
[48 55]
[105 212]
[106 211]
[107 210]
[108 208]
[109 207]
[110 206]
[111 205]
[115 201]
[116 200]
[117 199]
[124 181]
[125 180]
[126 179]
[127 178]
[128 177]
[129 176]
[130 175]
[131 174]
[132 173]
[133 172]
[139 171]
[140 170]
[141 169]
[142 168]
[143 167]
[144 166]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[184 198]
[185 197]
[187 195]
[188 194]
[215 243]
[216 242]
[217 241]
[218 240]
[220 238]
[221 237]
[222 236]
[223 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
