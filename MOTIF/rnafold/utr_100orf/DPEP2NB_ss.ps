%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUAGGUGACUUCACAGGGUAGUGAUGACCUCACAAGCUUCCAAAGUUUCCAUGGCAGCGUGACUACACACCUGCGUCCUAGAGAAGCCUCCCUACCAUUUCUCUGUAAGAUACCAAUCUGUUUGGUUGGCUGAGAGAGAAUGACUGACCGGAUCCUCUAUAUUGUCUCUAACAUGUCCUCUGUCCCCUGGGAGGGCAGCGCAGCAGCUGCAGUGCCUGCCACUUCUCCUCCCACACCUG\
) } def
/len { sequence length } bind def

/coor [
[156.75173950 457.91784668]
[140.36503601 457.27932739]
[132.96510315 442.64468384]
[142.16436768 429.06875610]
[142.74839783 414.08013916]
[143.33242798 399.09149170]
[143.91645813 384.10287476]
[144.50050354 369.11425781]
[145.08453369 354.12564087]
[131.44642639 348.03164673]
[121.14534760 337.65063477]
[115.40869141 324.53924561]
[114.80295563 310.55398560]
[119.18482208 297.58914185]
[127.75034332 287.32028198]
[119.97106171 274.49520874]
[112.19177246 261.67010498]
[104.41248322 248.84503174]
[96.63320160 236.01995850]
[88.85391235 223.19487000]
[84.61153412 226.65962219]
[79.39459991 229.36349487]
[73.35114288 231.07690430]
[63.09429550 242.02209473]
[52.83745193 252.96728516]
[42.58060837 263.91247559]
[41.66197586 279.92919922]
[28.48412323 289.07925415]
[13.15596962 284.34353638]
[7.43596268 269.35482788]
[15.71200275 255.61122131]
[31.63541985 253.65562439]
[41.89226532 242.71043396]
[52.14910889 231.76524353]
[62.40595245 220.82005310]
[53.49492264 208.75384521]
[40.01680756 215.33718872]
[26.53869247 221.92053223]
[13.06057835 228.50387573]
[-0.41753668 235.08721924]
[-13.89565086 241.67056274]
[-25.47408485 254.05508423]
[-40.57983780 246.35751343]
[-37.36478043 229.71119690]
[-20.47899628 228.19245911]
[-7.00088120 221.60911560]
[6.47723293 215.02577209]
[19.95534706 208.44242859]
[33.43346405 201.85906982]
[46.91157532 195.27572632]
[55.70887375 179.57760620]
[69.90516663 171.82176208]
[67.38571930 157.03486633]
[64.86626434 142.24797058]
[62.34681702 127.46106720]
[51.60342026 116.99304962]
[36.75609970 114.85832214]
[21.90877724 112.72360229]
[7.06145668 110.58888245]
[-1.85688984 112.46289825]
[-7.96425581 108.32886505]
[-22.78261375 106.00158691]
[-37.60097504 103.67430115]
[-50.22565460 113.18182373]
[-65.86361694 110.89496613]
[-75.23712921 98.17047119]
[-72.78505707 82.55756378]
[-59.96217728 73.31909943]
[-44.37606430 75.93610382]
[-35.27369308 88.85594177]
[-20.45533180 91.18322754]
[-5.63697338 93.51050568]
[9.19617939 95.74155426]
[24.04350090 97.87628174]
[38.89082336 100.01100159]
[53.73814392 102.14572144]
[61.18186188 89.12300873]
[51.80778122 77.41290283]
[42.43370056 65.70279694]
[23.33736610 59.20372009]
[21.30273819 39.96287918]
[11.62781620 28.50007439]
[1.95289361 17.03726959]
[-7.72202921 5.57446623]
[-17.39695168 -5.88833761]
[-27.07187462 -17.35114098]
[-36.74679565 -28.81394577]
[-46.42171860 -40.27674866]
[-61.35208130 -36.90882874]
[-76.13440704 -40.87637329]
[-87.37183380 -51.26766205]
[-92.48207092 -65.69486237]
[-90.29083252 -80.84270477]
[-81.30164337 -93.23032379]
[-67.58016205 -100.01113892]
[-52.27947235 -99.62696075]
[-38.91556931 -92.16608429]
[-30.55937958 -79.34295654]
[-29.13109207 -64.10423279]
[-34.95891571 -49.95167160]
[-25.28399277 -38.48886871]
[-15.60907078 -27.02606392]
[-5.93414783 -15.56326008]
[3.74077463 -4.10045624]
[13.41569710 7.36234713]
[23.09062004 18.82515144]
[32.76554108 30.28795433]
[42.95817184 30.22646523]
[51.69180298 35.89530945]
[55.96208572 45.63141632]
[54.14381027 56.32871628]
[63.51788712 68.03882599]
[72.89196777 79.74893188]
[77.57073212 71.77982330]
[84.61185455 64.97243500]
[85.39041138 49.99265671]
[86.16896820 35.01287460]
[86.94753265 20.03309441]
[87.72608948 5.05331326]
[88.50464630 -9.92646790]
[78.87593842 -22.75875664]
[83.04453278 -38.25076675]
[97.81263733 -44.51835251]
[111.85142517 -36.75355911]
[114.39154053 -20.91287422]
[103.48442841 -9.14791107]
[102.70586395 5.83187056]
[101.92730713 20.81165123]
[101.14875031 35.79143143]
[100.37019348 50.77121353]
[99.59163666 65.75099945]
[106.37285614 68.95491028]
[118.70323944 60.41314697]
[119.93529510 75.36273193]
[126.71652222 78.56664276]
[137.79393005 68.45275116]
[148.87135315 58.33885193]
[159.94876099 48.22495651]
[171.02616882 38.11105728]
[176.00056458 23.09220695]
[190.61653137 20.22467041]
[201.69395447 10.11077309]
[212.77136230 -0.00312322]
[223.84878540 -10.11701965]
[222.90609741 -23.54049873]
[229.76080322 -34.89371490]
[241.72285461 -40.15410995]
[254.34190369 -37.60905075]
[265.54968262 -47.57829666]
[263.88726807 -63.00606537]
[271.63973999 -76.44773865]
[285.82611084 -82.73472595]
[300.99145508 -79.44955444]
[311.30435181 -67.85543060]
[312.79931641 -52.41053391]
[304.90145874 -39.05374908]
[290.64770508 -32.92102432]
[275.51892090 -36.37052155]
[264.31115723 -26.40127945]
[264.04113770 -9.57626534]
[251.43084717 2.06961131]
[233.96267700 0.96039373]
[222.88526917 11.07429028]
[211.80784607 21.18818665]
[200.73043823 31.30208397]
[196.54837036 45.59752274]
[181.14007568 49.18847275]
[170.06265259 59.30236816]
[158.98524475 69.41626740]
[147.90782166 79.53015900]
[136.83041382 89.64405823]
[130.60273743 120.41067505]
[104.23728180 135.05581665]
[77.13372040 124.94161987]
[79.65316772 139.72851562]
[82.17261505 154.51541138]
[84.69206238 169.30230713]
[102.41944122 178.68951416]
[109.14311218 197.32737732]
[101.67899323 215.41558838]
[109.45828247 228.24066162]
[117.23756409 241.06575012]
[125.01685333 253.89082336]
[132.79614258 266.71591187]
[140.57542419 279.54098511]
[159.03544617 277.08761597]
[176.79008484 284.24975586]
[189.03225708 299.64236450]
[192.17864990 319.58554077]
[184.90419006 338.97851562]
[195.30226135 349.78964233]
[205.70033264 360.60073853]
[216.09838867 371.41186523]
[226.49645996 382.22299194]
[236.89451599 393.03408813]
[247.29258728 403.84521484]
[258.75540161 413.52014160]
[271.15942383 421.95462036]
[283.56341553 430.38909912]
[295.96743774 438.82354736]
[308.37145996 447.25802612]
[323.84774780 444.05480957]
[337.01007080 452.80285645]
[340.04949951 468.31210327]
[331.16278076 481.38122559]
[315.62225342 484.25650024]
[302.64782715 475.23211670]
[299.93698120 459.66204834]
[287.53298950 451.22756958]
[275.12896729 442.79309082]
[262.72494507 434.35864258]
[250.32092285 425.92416382]
[239.71430969 436.53076172]
[248.14878845 448.93478394]
[256.58325195 461.33880615]
[265.01773071 473.74282837]
[280.44491577 478.14529419]
[286.48837280 493.00650024]
[278.51211548 506.92623901]
[262.63482666 509.22644043]
[251.03619385 498.14260864]
[252.61370850 482.17727661]
[244.17924500 469.77328491]
[235.74476624 457.36926270]
[227.31030273 444.96524048]
[225.30018616 434.69702148]
[226.74888611 425.54067993]
[230.83647156 418.51022339]
[236.48147583 414.24328613]
[226.08340454 403.43215942]
[215.68533325 392.62106323]
[205.28727722 381.80993652]
[194.88920593 370.99880981]
[184.49114990 360.18771362]
[174.09307861 349.37658691]
[160.07315063 354.70965576]
[159.48912048 369.69827271]
[158.90509033 384.68692017]
[158.32106018 399.67553711]
[157.73703003 414.66415405]
[157.15298462 429.65280151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 241]
[5 240]
[6 239]
[7 238]
[8 237]
[9 236]
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[23 35]
[24 34]
[25 33]
[26 32]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[52 177]
[53 176]
[54 175]
[55 174]
[56 76]
[57 75]
[58 74]
[59 73]
[61 72]
[62 71]
[63 70]
[77 113]
[78 112]
[79 111]
[81 107]
[82 106]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[135 171]
[136 170]
[137 169]
[138 168]
[139 167]
[141 165]
[142 164]
[143 163]
[144 162]
[148 159]
[149 158]
[190 235]
[191 234]
[192 233]
[193 232]
[194 231]
[195 230]
[196 229]
[197 212]
[198 211]
[199 210]
[200 209]
[201 208]
[213 225]
[214 224]
[215 223]
[216 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
