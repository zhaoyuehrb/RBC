%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGCCGCGGCGAGCGGCGCUGCCCGGGCCGGGCGCGCACGGCGGGCGCCCUGUGAGCGGCCCCGAUGUGGCAGGAGGCGAUGCGGCGCCGCCGCUACCUGCGGGACCGCUCCGAGGAGGCGGCGGGCGGCGGAGACGGGCUGCCGCGGUCCCGGGACUGGCUCU\
) } def
/len { sequence length } bind def

/coor [
[185.55136108 536.87359619]
[187.21487427 531.83801270]
[184.15109253 517.15423584]
[179.68803406 511.22396851]
[181.17001343 502.16735840]
[178.38134766 487.42886353]
[175.59266663 472.69036865]
[172.80400085 457.95184326]
[170.01531982 443.21334839]
[167.22665405 428.47485352]
[164.43797302 413.73635864]
[161.64930725 398.99786377]
[158.86062622 384.25936890]
[154.50923157 378.24667358]
[156.16030884 369.21936035]
[153.64772034 354.43130493]
[151.13511658 339.64324951]
[132.72434998 329.10656738]
[127.94479370 308.15063477]
[140.28503418 290.20935059]
[136.40275574 275.72045898]
[132.52046204 261.23156738]
[128.63818359 246.74267578]
[124.75589752 232.25379944]
[120.87361145 217.76490784]
[116.99132538 203.27601624]
[113.10903931 188.78712463]
[109.22675323 174.29824829]
[96.16722107 162.60237122]
[101.02542877 144.86061096]
[96.87290192 130.44685364]
[92.72036743 116.03308868]
[80.90596008 106.79080200]
[65.91645050 106.22993469]
[50.92694092 105.66906738]
[35.93743134 105.10819244]
[20.94792175 104.54732513]
[5.95841074 103.98645782]
[-2.77713275 116.70234680]
[-17.00950241 122.65576935]
[-32.19720078 119.94700623]
[-43.49388504 109.44041443]
[-47.29483032 94.48861694]
[-42.38716507 79.86267090]
[-30.33690643 70.22966003]
[-14.98925209 68.66345215]
[-1.24157894 75.66381073]
[6.51927853 88.99694824]
[21.50878906 89.55781555]
[36.49829865 90.11868286]
[51.48781204 90.67955017]
[66.47731781 91.24042511]
[81.46683502 91.80129242]
[92.46260834 81.59870148]
[93.02347565 66.60918427]
[90.20822144 57.87461090]
[93.73757935 51.34538651]
[94.57863617 36.36898422]
[95.41969299 21.39258385]
[96.26074982 6.41618109]
[97.10180664 -8.56022167]
[97.94286346 -23.53662300]
[90.99151611 -37.74892044]
[99.43026733 -50.02233505]
[100.27132416 -64.99874115]
[101.11238098 -79.97514343]
[101.95343781 -94.95153809]
[90.06484222 -107.75717163]
[91.07512665 -124.86362457]
[103.87471008 -135.74378967]
[104.43557739 -150.73330688]
[104.99644470 -165.72282410]
[105.55731201 -180.71232605]
[106.11817932 -195.70184326]
[103.30292511 -204.43641663]
[106.83228302 -210.96563721]
[107.67333984 -225.94204712]
[100.72199249 -240.15434265]
[109.16074371 -252.42774963]
[110.00180054 -267.40414429]
[110.84285736 -282.38055420]
[111.68391418 -297.35696411]
[100.96722412 -308.97280884]
[101.68650055 -324.76071167]
[113.41500854 -335.35400391]
[129.19442749 -334.46786499]
[139.66311646 -322.62799072]
[138.61018372 -306.85882568]
[126.66031647 -296.51589966]
[125.81925964 -281.53948975]
[124.97820282 -266.56311035]
[124.13714600 -251.58670044]
[131.14865112 -238.44561768]
[122.64974213 -225.10098267]
[121.80868530 -210.12458801]
[121.10768890 -195.14097595]
[120.54682159 -180.15145874]
[119.98595428 -165.16195679]
[119.42508698 -150.17243958]
[118.86421967 -135.18292236]
[128.87887573 -127.03681946]
[132.41337585 -114.41823578]
[127.95688629 -101.88805389]
[116.92984009 -94.11048889]
[116.08878326 -79.13408661]
[115.24772644 -64.15768433]
[114.40666962 -49.18127823]
[121.41817474 -36.04019547]
[112.91926575 -22.69556618]
[112.07820892 -7.71916437]
[111.23715210 7.25723743]
[110.39609528 22.23364067]
[109.55503845 37.21004105]
[108.71398163 52.18644333]
[108.01298523 67.17005920]
[107.45211792 82.15956879]
[113.54140472 87.78145599]
[116.41281891 95.04740906]
[115.87314606 102.36595154]
[112.43363953 108.30686188]
[107.13412476 111.88055420]
[111.28665924 126.29431152]
[115.43919373 140.70806885]
[126.34974670 147.63809204]
[129.49633789 159.76036072]
[123.71564484 170.41595459]
[127.59793091 184.90484619]
[131.48020935 199.39373779]
[135.36250305 213.88261414]
[139.24478149 228.37150574]
[143.12707520 242.86039734]
[147.00935364 257.34927368]
[150.89164734 271.83816528]
[154.77392578 286.32705688]
[163.62918091 288.10092163]
[171.37872314 292.65295410]
[177.18356323 299.45730591]
[180.42608643 307.74603271]
[180.77577209 316.59594727]
[178.22261047 325.03125000]
[173.07507324 332.13119507]
[165.92318726 337.13064575]
[168.43577576 351.91870117]
[170.94837952 366.70678711]
[173.59912109 381.47070312]
[176.38780212 396.20919800]
[179.17646790 410.94769287]
[181.96514893 425.68618774]
[184.75381470 440.42468262]
[187.54249573 455.16317749]
[190.33116150 469.90167236]
[193.11984253 484.64016724]
[195.90852356 499.37866211]
[198.83486938 514.09045410]
[201.89865112 528.77423096]
[205.37304688 543.36627197]
[209.25534058 557.85516357]
[213.13761902 572.34405518]
[226.25646973 581.57855225]
[227.07225037 597.60083008]
[214.95918274 608.12005615]
[199.20938110 605.06671143]
[191.90472412 590.78308105]
[198.64872742 576.22637939]
[194.76644897 561.73748779]
[190.88417053 547.24859619]
[187.98747253 545.17004395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[5 153]
[6 152]
[7 151]
[8 150]
[9 149]
[10 148]
[11 147]
[12 146]
[13 145]
[15 144]
[16 143]
[17 142]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 126]
[30 123]
[31 122]
[32 121]
[33 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[54 116]
[55 115]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[64 107]
[65 106]
[66 105]
[67 104]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[76 95]
[77 94]
[79 92]
[80 91]
[81 90]
[82 89]
[156 166]
[157 165]
[158 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
