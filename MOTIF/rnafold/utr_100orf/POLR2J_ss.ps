%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGCCUCUUAUUAGGGCUCUGGUGGCGGCGGCGGCGGACCCUUGGGGUCUGGACGCAACGGCGGCGGGAGCAUGAACGCCCCUCCAGCCUUCGAGUCGUUCUUGCUCUUCGAGGGCGAGAAGAAGAUCACCAUUAACAAGGACACCAAGGUACCCAAUGCCUGUUUAUUCA\
) } def
/len { sequence length } bind def

/coor [
[100.24214935 225.00331116]
[92.76660919 225.60853577]
[86.25835419 239.12306213]
[79.75009918 252.63758850]
[73.24184418 266.15213013]
[74.22524261 281.94274902]
[61.73201752 290.05252075]
[55.22375870 303.56707764]
[48.71550369 317.08160400]
[54.17124176 331.91433716]
[47.46494675 346.22521973]
[32.57534409 351.52383423]
[18.33617210 344.66659546]
[13.19527817 329.72183228]
[20.20266342 315.55593872]
[35.20096970 310.57333374]
[41.70922852 297.05880737]
[48.21748352 283.54428101]
[46.76857376 268.72030640]
[59.72731018 259.64385986]
[66.23556519 246.12933350]
[72.74382019 232.61480713]
[79.25207520 219.10028076]
[82.32684326 204.41879272]
[81.78839874 189.42846680]
[81.24995422 174.43812561]
[80.71150970 159.44779968]
[82.64716339 94.43401337]
[71.80524445 84.06807709]
[60.96331787 73.70213318]
[50.12139511 63.33619690]
[39.27947235 52.97025681]
[13.61708069 53.94291687]
[-1.56023514 33.81677628]
[-16.48717880 32.33814621]
[-31.41412354 30.85951424]
[-47.99036026 38.84326553]
[-61.85133743 28.10360146]
[-76.80242157 26.89316177]
[-91.75350189 25.68272209]
[-106.70458221 24.47228241]
[-121.65566254 23.26184273]
[-136.60675049 22.05140305]
[-151.55783081 20.84096336]
[-167.83322144 25.58943176]
[-176.90159607 11.26459312]
[-165.64694214 -1.41489255]
[-150.34738159 5.88988256]
[-135.39630127 7.10032225]
[-120.44522095 8.31076145]
[-105.49414062 9.52120113]
[-90.54306030 10.73164082]
[-75.59197998 11.94208050]
[-60.64089584 13.15252018]
[-51.20497894 5.55004692]
[-38.71915436 6.45761824]
[-29.93549156 15.93257046]
[-15.00854778 17.41120148]
[-0.08160385 18.88983345]
[1.52633941 15.55408001]
[3.57596993 12.46996784]
[6.02866316 9.69561577]
[8.83819866 7.28330612]
[3.56757665 -6.76021719]
[-1.70304561 -20.80373955]
[-7.09950829 -34.79938889]
[-12.62137699 -48.74603653]
[-24.89551926 -58.72882080]
[-22.38677979 -73.41062927]
[-27.90864754 -87.35727692]
[-33.43051529 -101.30392456]
[-39.51940536 -108.15887451]
[-38.92385483 -115.55081940]
[-44.19447708 -129.59434509]
[-58.68576813 -135.90132141]
[-64.39512634 -150.63830566]
[-57.93528748 -165.06211853]
[-43.13875961 -170.61534119]
[-28.78406334 -164.00337219]
[-23.38758278 -149.14895630]
[-30.15095520 -134.86495972]
[-24.88033295 -120.82144165]
[-19.48386955 -106.82579041]
[-13.96200085 -92.87914276]
[-8.44013309 -78.93249512]
[3.43904829 -69.94727325]
[1.32527065 -54.26790619]
[6.84713888 -40.32125854]
[12.25111485 -35.24261856]
[12.34047699 -26.07436180]
[17.61109924 -12.03083897]
[22.88172150 2.01268363]
[32.44969177 2.81391430]
[41.19012070 6.93194389]
[47.98432922 13.88640213]
[51.94652939 22.83104515]
[52.53915405 32.65660477]
[49.64541245 42.12833405]
[60.48733521 52.49427414]
[71.32925415 62.86021423]
[82.17118073 73.22615051]
[93.01310730 83.59209442]
[107.99135590 84.39953613]
[119.88481903 75.25921631]
[131.77828979 66.11889648]
[143.67175293 56.97858047]
[155.56521606 47.83825684]
[167.45869446 38.69793701]
[179.35215759 29.55761909]
[191.24562073 20.41729736]
[203.13908386 11.27697754]
[212.01353455 -3.16880107]
[228.35145569 1.35983980]
[228.52258301 18.31292343]
[212.27940369 23.17044449]
[200.38594055 32.31076431]
[188.49247742 41.45108414]
[176.59901428 50.59140396]
[164.70553589 59.73172379]
[152.81207275 68.87204742]
[140.91860962 78.01236725]
[129.02514648 87.15268707]
[117.13167572 96.29300690]
[118.60310364 103.64724731]
[133.31159973 100.70439148]
[148.02008057 97.76152802]
[161.09930420 90.41755676]
[172.12551880 100.58723450]
[165.86083984 114.21639252]
[150.96293640 112.47001648]
[136.25445557 115.41287994]
[121.54596710 118.35573578]
[123.01739502 125.70997620]
[137.51206970 129.57058716]
[149.47113037 119.68318176]
[164.95994568 118.74707031]
[178.02275085 127.12219238]
[183.63662720 141.58815002]
[179.64294434 156.58248901]
[167.57733154 166.33956909]
[152.07928467 167.10760498]
[139.10809326 158.59126282]
[133.65147400 144.06526184]
[119.15679169 140.20466614]
[113.29305267 144.88082886]
[95.70184326 158.90934753]
[96.24028778 173.89968872]
[96.77873230 188.89001465]
[97.31717682 203.88035583]
[115.38964844 201.16102600]
[134.96034241 214.59013367]
[143.55786133 226.88169861]
[152.15538025 239.17327881]
[160.75289917 251.46484375]
[169.35041809 263.75640869]
[184.83438110 267.95480347]
[191.07354736 282.73492432]
[183.28176880 296.75875854]
[167.43623352 299.26840210]
[155.69226074 288.33868408]
[157.05885315 272.35394287]
[148.46133423 260.06234741]
[139.86381531 247.77078247]
[131.26629639 235.47921753]
[122.66877747 223.18765259]
[115.19323730 223.79287720]
[116.84537506 238.70161438]
[118.49751282 253.61035156]
[120.14965057 268.51907349]
[124.84075928 282.76666260]
[113.21002960 292.23904419]
[100.20706940 284.76089478]
[102.54519653 269.94433594]
[101.77751160 254.96398926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[5 20]
[7 18]
[8 17]
[9 16]
[24 149]
[25 148]
[26 147]
[27 146]
[28 102]
[29 101]
[30 100]
[31 99]
[32 98]
[34 59]
[35 58]
[36 57]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[44 48]
[63 92]
[64 91]
[65 90]
[66 88]
[67 87]
[69 85]
[70 84]
[71 83]
[73 82]
[74 81]
[103 123]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[111 115]
[133 144]
[134 143]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
