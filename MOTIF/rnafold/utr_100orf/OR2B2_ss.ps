%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGACAAAAUCAGGAAGUGUGUUGUUAACUUCCUGACUUCUUAUAUUUCAGAGAACGAAGAGUUGAACCAUUUAACAUGAAUUGGGUAAAUAAGAGUGUCCCACAGGAGUUCAUUCUGUUAGUUUUCUCAGAUCAACCAUGGCUAGAGAUUCCACCCUUUGUGAUGUUUCUGUUUU\
) } def
/len { sequence length } bind def

/coor [
[198.10728455 181.66134644]
[186.03457642 172.75912476]
[173.96186829 163.85688782]
[161.88916016 154.95466614]
[149.81645203 146.05242920]
[137.74374390 137.15019226]
[125.67103577 128.24797058]
[114.54295349 135.29096985]
[101.68364716 138.13285828]
[88.62391663 136.43534851]
[76.91841888 130.40049744]
[65.67726135 140.33209229]
[54.43610764 150.26367188]
[43.19495010 160.19526672]
[31.95379639 170.12684631]
[20.71264076 180.05844116]
[9.47148609 189.99002075]
[-1.76966894 199.92161560]
[-13.01082420 209.85319519]
[-10.56679440 225.08573914]
[-16.76700974 239.21234131]
[-29.63300514 247.72526550]
[-45.05928421 247.90805054]
[-58.12338257 239.70239258]
[-64.65659332 225.72666931]
[-62.57418442 210.44049072]
[-52.54065704 198.72161865]
[-37.75766754 194.30950928]
[-22.94241142 198.61204529]
[-11.70125675 188.68046570]
[-0.46010128 178.74887085]
[10.78105354 168.81729126]
[22.02220917 158.88569641]
[33.26336288 148.95411682]
[44.50452042 139.02252197]
[55.74567413 129.09092712]
[66.98683167 119.15934753]
[55.23144150 110.28949738]
[46.44546509 96.02859497]
[31.52949142 94.44311523]
[16.61351776 92.85763550]
[1.69754541 91.27215576]
[-13.21842766 89.68667603]
[-23.51457787 101.29567719]
[-38.67514801 104.60275269]
[-52.87059402 98.33625031]
[-60.64247131 84.90578461]
[-59.00233841 69.47563171]
[-48.58086014 57.97900391]
[-33.38530350 54.83659363]
[-19.25867462 61.25671387]
[-11.63294888 74.77070618]
[3.28302383 76.35618591]
[18.19899750 77.94166565]
[33.11497116 79.52713776]
[48.03094482 81.11261749]
[51.64641571 74.54159546]
[38.50436783 67.31065369]
[25.36243820 60.07948685]
[32.59381866 46.93767929]
[45.73531342 54.16860199]
[58.87736130 61.39954758]
[62.49283218 54.82852173]
[53.17008591 43.07750702]
[43.84733582 31.32649231]
[34.52458954 19.57547569]
[25.20183945 7.82446051]
[15.87909126 -3.92655468]
[1.29809928 -12.57704735]
[5.57410669 -28.98290253]
[22.52253151 -29.41559601]
[27.63010597 -13.24930286]
[36.95285416 -1.49828768]
[46.27560425 10.25272751]
[55.59835052 22.00374222]
[64.92109680 33.75475693]
[74.24385071 45.50577545]
[88.93593597 42.48211288]
[92.86082458 28.00470924]
[96.78571320 13.52730370]
[100.71060181 -0.95010054]
[104.63549042 -15.42750549]
[108.56037903 -29.90490913]
[111.84286499 -44.54134750]
[114.47654724 -59.30832672]
[117.11023712 -74.07530975]
[119.74391937 -88.84228516]
[107.11168671 -97.34796143]
[99.03663635 -110.25971985]
[96.91782379 -125.34051514]
[101.12234497 -139.97752380]
[110.92174530 -151.63478088]
[124.61821747 -158.29260254]
[139.83876038 -158.79748535]
[153.94631958 -153.06193542]
[164.49670410 -142.07969666]
[169.66195679 -127.75350189]
[168.54718018 -112.56543732]
[161.34553528 -99.14694214]
[149.30471802 -89.82284546]
[134.51091003 -86.20860291]
[131.87721252 -71.44161987]
[129.24353027 -56.67464066]
[126.60984039 -41.90766144]
[140.29153442 -48.05676651]
[153.71136475 -41.35543060]
[157.01606750 -26.72399139]
[147.77920532 -14.90534210]
[132.78280640 -14.57712364]
[123.03778839 -25.98002052]
[119.11289978 -11.50261688]
[115.18801117 2.97478819]
[111.26312256 17.45219231]
[107.33823395 31.92959785]
[103.41334534 46.40700150]
[131.69856262 63.26012802]
[142.38891602 90.93575287]
[134.57327271 116.17526245]
[146.64598083 125.07749176]
[158.71868896 133.97972107]
[170.79139709 142.88195801]
[182.86410522 151.78417969]
[194.93681335 160.68641663]
[207.00952148 169.58863831]
[220.50399780 162.54162598]
[235.65820312 162.05445862]
[249.46464539 168.17019653]
[259.20660400 179.62686157]
[262.99261475 194.11738586]
[260.12356567 208.75413513]
[272.19628906 217.65635681]
[284.26898193 226.55859375]
[296.34170532 235.46081543]
[306.20919800 231.26785278]
[316.84558105 231.56323242]
[326.31994629 236.22592163]
[332.94039917 244.34817505]
[335.55618286 254.41148376]
[333.75711060 264.57019043]
[345.34176636 274.09887695]
[356.92642212 283.62756348]
[372.49951172 286.41845703]
[377.41384888 300.47900391]
[388.99850464 310.00769043]
[397.64218140 313.05551147]
[400.70156860 319.80819702]
[412.11624146 329.53985596]
[423.53094482 339.27148438]
[434.94561768 349.00314331]
[449.99862671 345.23666382]
[464.37805176 351.06866455]
[472.55465698 364.25662231]
[471.38442993 379.72952271]
[461.31732178 391.53768921]
[446.22433472 395.14065552]
[431.90902710 389.15298462]
[423.87594604 375.87710571]
[425.21395874 360.41781616]
[413.79928589 350.68618774]
[402.38461304 340.95452881]
[390.96990967 331.22286987]
[379.46981812 321.59234619]
[367.88516235 312.06365967]
[353.14065552 309.95431519]
[347.39773560 295.21221924]
[335.81307983 285.68353271]
[324.22842407 276.15484619]
[305.06069946 279.48962402]
[289.34951782 267.50613403]
[287.43945312 247.53352356]
[275.36676025 238.63130188]
[263.29403687 229.72906494]
[251.22134399 220.82684326]
[238.08647156 227.89370728]
[223.12432861 228.55963135]
[209.30017090 222.63900757]
[199.37704468 211.25692749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 124]
[2 123]
[3 122]
[4 121]
[5 120]
[6 119]
[7 118]
[11 37]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[78 115]
[79 114]
[80 113]
[81 112]
[82 111]
[83 110]
[84 104]
[85 103]
[86 102]
[87 101]
[130 173]
[131 172]
[132 171]
[133 170]
[139 167]
[140 166]
[141 165]
[143 163]
[144 162]
[146 161]
[147 160]
[148 159]
[149 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
