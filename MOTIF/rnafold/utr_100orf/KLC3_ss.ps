%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGUCCCAGACGCCCGGCGCAGCGGGAGCGGCGGGGCGUGCCUGGCCUGCGGGACGCGACUGAUCGCAGUGGGGCGAAGCGGGGCCGGAGCCGCCCGCGGUCAGGAGCAGCAAUGUCUGUGCAGGUAGCGGCUCCUGGAAGUGCAGGGCUGGGCCCAGAGCGCCUGAGCCCUGAGGAGCUGGUGCGGCAGACGCGGCAAGUGGUCCAGGGGC\
) } def
/len { sequence length } bind def

/coor [
[23.34375381 278.05947876]
[25.59990311 292.88885498]
[16.81816292 305.04946899]
[2.03172326 307.57162476]
[-10.28468323 299.00970459]
[-13.07219696 284.27191162]
[-22.37573051 296.03814697]
[-31.67926216 307.80438232]
[-40.98279572 319.57061768]
[-50.28632736 331.33685303]
[-47.19317245 344.44357300]
[-52.14014435 356.75936890]
[-63.11389160 363.87283325]
[-75.98735046 363.37561035]
[-85.46102905 375.00531006]
[-94.93470001 386.63497925]
[-104.32355499 398.33325195]
[-113.62708282 410.09948730]
[-116.11717987 425.72351074]
[-130.08035278 430.90802002]
[-139.38388062 442.67425537]
[-144.46502686 458.84887695]
[-161.41413879 458.44387817]
[-165.71694946 442.04504395]
[-151.15011597 433.37072754]
[-141.84658813 421.60449219]
[-140.02194214 406.82208252]
[-125.39331818 400.79595947]
[-116.08979034 389.02972412]
[-114.40752411 381.83596802]
[-106.56438446 377.16131592]
[-97.09070587 365.53161621]
[-87.61703491 353.90194702]
[-90.03876495 337.25769043]
[-79.46364594 323.74688721]
[-62.05256271 322.03332520]
[-52.74903107 310.26708984]
[-43.44549561 298.50085449]
[-34.14196396 286.73461914]
[-24.83843231 274.96838379]
[-16.05699158 262.80752563]
[-7.81435585 250.27522278]
[-7.28502607 235.39001465]
[6.76271296 228.11186218]
[15.00534725 215.57954407]
[23.24798203 203.04722595]
[31.49061584 190.51490784]
[39.73324966 177.98258972]
[40.26258087 163.09739685]
[54.31032181 155.81922913]
[62.55295563 143.28691101]
[70.79559326 130.75459290]
[79.03822327 118.22228241]
[75.51432800 113.11104584]
[73.21376801 107.34476471]
[72.25148773 101.21152496]
[72.67556000 95.01776123]
[74.46479797 89.07291412]
[77.52981567 83.67399597]
[68.22628021 71.90776062]
[52.77526474 69.93195343]
[43.50777435 57.86678696]
[45.48662567 43.14877701]
[36.18309402 31.38254356]
[26.87956047 19.61630821]
[17.57602692 7.85007334]
[8.27249527 -3.91616154]
[-1.03103697 -15.68239689]
[-10.33456898 -27.44863129]
[-19.63810158 -39.21486664]
[-23.71971893 -40.67108154]
[-26.81608200 -43.10420990]
[-28.74124146 -46.08528900]
[-29.46738625 -49.16900253]
[-29.11652565 -51.94660187]
[-37.72017288 -64.23387909]
[-46.32381821 -76.52116394]
[-54.92746735 -88.80844116]
[-63.53111267 -101.09572601]
[-80.44715118 -101.16159058]
[-93.85672760 -111.19871521]
[-98.59253693 -127.09185028]
[-92.97760773 -142.51931763]
[-101.75904846 -154.68016052]
[-116.93431854 -160.89653015]
[-118.87000275 -177.18103027]
[-105.57482910 -186.78158569]
[-90.72573853 -179.82194519]
[-89.59819794 -163.46160889]
[-80.81675720 -151.30075073]
[-67.52218628 -152.50114441]
[-55.27186584 -146.93180847]
[-47.30900574 -135.94976807]
[-45.79951096 -122.35999298]
[-51.24383163 -109.69937134]
[-42.64018631 -97.41208649]
[-34.03653717 -85.12480927]
[-25.43289185 -72.83752441]
[-16.82924652 -60.55024719]
[-7.87186670 -48.51839828]
[1.43166566 -36.75216293]
[10.73519802 -24.98592949]
[20.03873062 -13.21969414]
[29.34226227 -1.45345902]
[38.64579391 10.31277561]
[47.94932556 22.07901192]
[57.25286102 33.84524536]
[72.03049469 35.31394196]
[81.63321686 47.11404419]
[79.99251556 62.60422897]
[89.29605103 74.37046814]
[110.06669617 74.11353302]
[125.20684052 88.33541107]
[140.01527405 85.94580841]
[149.27064514 73.41680145]
[164.32255554 71.20436096]
[176.21000671 80.10514832]
[191.01843262 77.71554565]
[205.82687378 75.32594299]
[220.63531494 72.93634033]
[235.44375610 70.54673767]
[250.25218201 68.15713501]
[265.06060791 65.76753235]
[269.51086426 57.46234512]
[277.16867065 52.21196747]
[286.24670410 51.08855438]
[294.69540405 54.21839905]
[300.66537476 60.78163528]
[315.56396484 59.04024124]
[330.46252441 57.29884720]
[343.27114868 48.01176453]
[356.81060791 54.21920013]
[371.70919800 52.47780609]
[386.60775757 50.73641205]
[401.50634766 48.99501801]
[416.40490723 47.25362778]
[431.30349731 45.51223373]
[446.20205688 43.77083969]
[461.10064697 42.02944565]
[449.26284790 32.81712723]
[445.99615479 18.17716026]
[452.79483032 4.80638027]
[466.54895020 -1.17894423]
[480.96688843 2.95908737]
[489.45336914 15.32759190]
[488.12634277 30.26877785]
[477.59176636 40.94855881]
[492.59017944 40.73040009]
[507.58859253 40.51224136]
[522.58697510 40.29408264]
[537.58538818 40.07592773]
[552.58380127 39.85776901]
[567.58221436 39.63961029]
[582.57867432 39.31238556]
[597.57232666 38.87611389]
[612.56597900 38.43984222]
[627.55963135 38.00357437]
[637.11602783 25.62580872]
[652.40393066 22.33715439]
[666.20477295 29.69041252]
[672.00225830 44.21360016]
[667.05902100 59.04930878]
[653.70904541 67.19257355]
[638.25585938 64.79839325]
[627.99591064 52.99722672]
[613.00225830 53.43349838]
[598.00860596 53.86977005]
[583.01495361 54.30604172]
[576.42285156 57.64139557]
[567.80041504 54.63802338]
[552.80200195 54.85618210]
[537.80358887 55.07434082]
[522.80517578 55.29249954]
[507.80673218 55.51065445]
[492.80831909 55.72881317]
[477.80990601 55.94697189]
[462.84204102 56.92802048]
[447.94345093 58.66941452]
[433.04489136 60.41080856]
[418.14630127 62.15220261]
[403.24774170 63.89359665]
[388.34915161 65.63498688]
[373.45059204 67.37638092]
[358.55200195 69.11777496]
[346.80902100 78.28030396]
[332.20391846 72.19742584]
[317.30535889 73.93881989]
[302.40676880 75.68021393]
[286.98257446 89.39661407]
[267.45022583 80.57596588]
[252.64178467 82.96556854]
[237.83335876 85.35517120]
[223.02491760 87.74477386]
[208.21647644 90.13437653]
[193.40803528 92.52397919]
[178.59960938 94.91358185]
[170.11521912 107.10173035]
[155.13140869 109.73607635]
[142.40487671 100.75424194]
[127.59644318 103.14384460]
[121.20751953 117.93568420]
[107.68157959 126.69158936]
[91.57054138 126.46492004]
[83.32790375 138.99723816]
[75.08527374 151.52955627]
[66.84263611 164.06187439]
[65.72373962 179.84346008]
[52.26556778 186.22521973]
[44.02293396 198.75753784]
[35.78030014 211.28985596]
[27.53766441 223.82217407]
[19.29503059 236.35449219]
[18.17613220 252.13609314]
[4.71796131 258.51785278]
[-3.52467346 271.05017090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[14 33]
[15 32]
[16 31]
[17 29]
[18 28]
[20 26]
[21 25]
[41 215]
[42 214]
[44 212]
[45 211]
[46 210]
[47 209]
[48 208]
[50 206]
[51 205]
[52 204]
[53 203]
[59 111]
[60 110]
[63 107]
[64 106]
[65 105]
[66 104]
[67 103]
[68 102]
[69 101]
[70 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[83 90]
[84 89]
[113 200]
[114 199]
[117 196]
[118 195]
[119 194]
[120 193]
[121 192]
[122 191]
[123 190]
[128 188]
[129 187]
[130 186]
[132 184]
[133 183]
[134 182]
[135 181]
[136 180]
[137 179]
[138 178]
[139 177]
[147 176]
[148 175]
[149 174]
[150 173]
[151 172]
[152 171]
[153 170]
[154 168]
[155 167]
[156 166]
[157 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
