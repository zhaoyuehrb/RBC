%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUCCGGUAGAGGCUGGUAGGGUAAGGGAGCUCAGUAAGUCACUUCUGGGCGACUGUUGUUUUAUUUCCGGUCUAUGGGACCCGGCUGCGAUUUGCUGCUGCGGACAGCAGCUACCAUCACUGCUGCCGCCAUCAUGUCAGACACGGACAGCGACGAAGAUUCCGCUGGAGGCG\
) } def
/len { sequence length } bind def

/coor [
[95.96714020 366.96768188]
[102.01348114 351.12857056]
[102.01348114 336.12857056]
[102.01348114 321.12857056]
[102.01348114 306.12857056]
[102.01348114 291.12857056]
[102.01348114 276.12857056]
[102.01348114 261.12857056]
[102.01348114 246.12855530]
[102.01348114 231.12855530]
[94.27617645 218.40129089]
[102.01348114 204.60112000]
[102.01348114 189.60112000]
[102.01348114 174.60112000]
[100.94942474 159.63890076]
[98.82668304 144.78987122]
[96.70394135 129.94082642]
[94.58119965 115.09178925]
[83.03369141 105.51812744]
[68.04845428 106.18350220]
[53.06321716 106.84886932]
[38.07798004 107.51424408]
[23.09274673 108.17961884]
[8.10751152 108.84499359]
[-6.87772417 109.51036835]
[-21.86295891 110.17573547]
[-36.84819412 110.84111023]
[-50.29156876 119.18294525]
[-63.34952927 112.01782227]
[-78.33476257 112.68319702]
[-93.60428619 122.94923401]
[-108.85484314 114.29356384]
[-123.82591248 115.22479248]
[-138.79698181 116.15602112]
[-153.76803589 117.08724976]
[-168.73910522 118.01847839]
[-183.71017456 118.94970703]
[-192.11161804 122.61563110]
[-198.95477295 119.76220703]
[-213.94000244 120.42758179]
[-228.92524719 121.09295654]
[-244.48057556 127.83593750]
[-255.26618958 114.75515747]
[-245.68235779 100.76992798]
[-229.59060669 106.10771942]
[-214.60537720 105.44234467]
[-199.62014771 104.77696991]
[-184.64140320 103.97863770]
[-169.67033386 103.04740906]
[-154.69926453 102.11618042]
[-139.72821045 101.18495178]
[-124.75714111 100.25372314]
[-109.78607178 99.32249451]
[-101.53031921 90.45440674]
[-89.04402161 89.57327271]
[-79.00013733 97.69795990]
[-64.01490021 97.03258514]
[-51.64336777 88.73834229]
[-37.51356888 95.85587311]
[-22.52833366 95.19050598]
[-7.54309750 94.52513123]
[7.44213820 93.85975647]
[22.42737389 93.19438171]
[37.41260910 92.52900696]
[52.39784241 91.86363983]
[67.38307953 91.19826508]
[82.36831665 90.53289032]
[93.53916931 85.42176819]
[102.86627960 88.47203064]
[113.04096222 77.45041656]
[123.21563721 66.42881012]
[133.39031982 55.40719604]
[143.46678162 44.29572296]
[153.44424438 33.09526443]
[163.42170715 21.89480591]
[173.39916992 10.69434738]
[183.07493591 -0.76774651]
[192.44213867 -12.48335266]
[201.80934143 -24.19895935]
[211.17654419 -35.91456604]
[206.54457092 -48.91545105]
[208.93054199 -62.39901733]
[217.60429382 -72.85414124]
[230.21270752 -77.61224365]
[243.41722107 -75.52796936]
[252.99089050 -87.07547760]
[262.56454468 -98.62299347]
[272.13821411 -110.17050171]
[274.98965454 -125.73262787]
[289.06918335 -130.59222412]
[298.64285278 -142.13973999]
[307.90573120 -153.93801880]
[316.85122681 -165.97868347]
[325.79675293 -178.01936340]
[322.30380249 -196.61482239]
[333.29742432 -211.62075806]
[351.44833374 -213.81935120]
[359.96087646 -226.16992188]
[368.47341919 -238.52049255]
[376.98593140 -250.87106323]
[385.49847412 -263.22164917]
[394.01101685 -275.57220459]
[402.52355957 -287.92279053]
[403.29193115 -304.30392456]
[417.98477173 -311.58764648]
[431.48733521 -302.28106689]
[429.90939331 -285.95803833]
[414.87414551 -279.41024780]
[406.36160278 -267.05966187]
[397.84906006 -254.70909119]
[389.33651733 -242.35852051]
[380.82397461 -230.00794983]
[372.31143188 -217.65737915]
[363.79888916 -205.30680847]
[368.25567627 -194.76469421]
[367.04336548 -183.26287842]
[360.34909058 -173.68476868]
[349.74877930 -168.48791504]
[337.83743286 -169.07385254]
[328.89190674 -157.03317261]
[319.94641113 -144.99250793]
[320.11111450 -141.44087219]
[318.54400635 -137.63452148]
[315.14517212 -134.39735413]
[310.19036865 -132.56607056]
[300.61669922 -121.01856232]
[298.45004272 -106.28239441]
[283.68572998 -100.59683990]
[274.11206055 -89.04933167]
[264.53839111 -77.50181580]
[254.96473694 -65.95430756]
[259.54003906 -50.20392609]
[253.77864075 -34.67050171]
[239.76107788 -25.53176880]
[222.89215088 -26.54735756]
[213.52494812 -14.83175087]
[204.15774536 -3.11614490]
[194.79052734 8.59946060]
[194.82908630 12.15469837]
[193.12789917 15.90303040]
[189.61628723 19.01753235]
[184.59962463 20.67180824]
[174.62216187 31.87226677]
[164.64469910 43.07272720]
[154.66723633 54.27318192]
[152.55929565 61.38143921]
[144.41192627 65.58187103]
[134.23724365 76.60348511]
[124.06256866 87.62509918]
[113.88789368 98.64671326]
[109.43023682 112.96904755]
[111.55297852 127.81808472]
[113.67572021 142.66712952]
[115.79846954 157.51615906]
[124.19248199 145.08473206]
[138.24293518 139.83259583]
[152.73318481 143.70977783]
[162.28334045 155.27673340]
[163.34761047 170.23893738]
[155.53086853 183.04122925]
[141.73529053 188.93038940]
[127.08289337 185.71990967]
[117.01348114 174.60112000]
[117.01348114 189.60112000]
[117.01348114 204.60112000]
[124.75077820 218.40129089]
[117.01348114 231.12855530]
[117.01348114 246.12855530]
[117.01348114 261.12857056]
[117.01348114 276.12857056]
[117.01348114 291.12857056]
[117.01348114 306.12857056]
[117.01348114 321.12857056]
[117.01348114 336.12857056]
[117.01348114 351.12857056]
[123.05982208 366.96768188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[10 167]
[12 165]
[13 164]
[14 163]
[15 154]
[16 153]
[17 152]
[18 151]
[19 67]
[20 66]
[21 65]
[22 64]
[23 63]
[24 62]
[25 61]
[26 60]
[27 59]
[29 57]
[30 56]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[39 47]
[40 46]
[41 45]
[69 150]
[70 149]
[71 148]
[72 147]
[73 145]
[74 144]
[75 143]
[76 142]
[77 138]
[78 137]
[79 136]
[80 135]
[85 131]
[86 130]
[87 129]
[88 128]
[90 126]
[91 125]
[92 121]
[93 120]
[94 119]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
