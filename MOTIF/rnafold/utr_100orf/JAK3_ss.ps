%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:44:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACAGGAAGGAGCCGAGUGGGACUUUCCUCUCGCUGCCUCCCGGCUCUGCCCGCCCUUCGAAAGUCCAGGGUCCCUGCCCGCUAGGCAAGUUGCACUCAUGGCACCUCCAAGUGAAGAGACGCCCCUGAUCCCUCAGCGUUCAUGCAGCCUCUUGUCCACGGAGGCUGGUGCCCUGCAUGUGCUGCUGCCCGCUCGGG\
) } def
/len { sequence length } bind def

/coor [
[-266.42016602 266.02066040]
[-275.11584473 277.08117676]
[-287.16403198 284.69134521]
[-301.24060059 287.87170410]
[-315.74966431 286.13775635]
[-329.00469971 279.56927490]
[-339.42440796 268.81484985]
[-351.65539551 277.49832153]
[-354.42648315 292.82669067]
[-366.95416260 301.45874023]
[-381.55032349 298.72247314]
[-393.78131104 307.40594482]
[-406.01229858 316.08941650]
[-418.24328613 324.77291870]
[-430.47430420 333.45639038]
[-442.70529175 342.13989258]
[-454.93627930 350.82336426]
[-466.74679565 360.07058716]
[-478.11090088 369.86126709]
[-489.47503662 379.65191650]
[-500.83914185 389.44256592]
[-512.20324707 399.23321533]
[-523.56738281 409.02386475]
[-534.93145752 418.81454468]
[-535.85363770 434.59188843]
[-547.71734619 445.03353882]
[-563.48406982 443.94461060]
[-573.79974365 431.97116089]
[-572.54412842 416.21682739]
[-560.46234131 406.02838135]
[-544.72210693 407.45040894]
[-533.35803223 397.65975952]
[-521.99389648 387.86911011]
[-510.62979126 378.07846069]
[-499.26568604 368.28781128]
[-487.90158081 358.49713135]
[-476.53744507 348.70648193]
[-491.36880493 346.46347046]
[-500.38619995 334.47653198]
[-498.42980957 319.60464478]
[-486.61911011 310.35763550]
[-471.71224976 312.02667236]
[-462.23901367 323.65673828]
[-463.61975098 338.59237671]
[-451.38876343 329.90890503]
[-439.15777588 321.22540283]
[-426.92678833 312.54193115]
[-414.69580078 303.85842896]
[-402.46481323 295.17495728]
[-390.23382568 286.49148560]
[-388.00393677 271.80941772]
[-375.72366333 262.82888794]
[-360.33886719 265.26733398]
[-348.10787964 256.58386230]
[-349.39575195 241.63923645]
[-362.93200684 235.17628479]
[-376.46826172 228.71333313]
[-390.00451660 222.25038147]
[-403.54077148 215.78741455]
[-416.15625000 224.54786682]
[-431.46310425 225.81091309]
[-445.34393311 219.23680115]
[-454.06478882 206.59393311]
[-455.27984619 191.28318787]
[-448.66226196 177.42304993]
[-435.99212646 168.74186707]
[-420.67761230 167.57479858]
[-406.83831787 174.23580933]
[-398.19686890 186.93309021]
[-397.07781982 202.25115967]
[-383.54156494 208.71412659]
[-370.00531006 215.17707825]
[-356.46905518 221.64002991]
[-342.93280029 228.10298157]
[-333.47668457 214.87611389]
[-320.08279419 206.12915039]
[-304.68362427 202.89697266]
[-289.42080688 205.43478394]
[-276.34735107 213.20841980]
[-267.15151978 224.99278259]
[-252.99050903 220.04649353]
[-238.82949829 215.10020447]
[-224.66848755 210.15393066]
[-220.44711304 194.29405212]
[-207.47612000 183.96977234]
[-190.74136353 183.40263367]
[-176.82771301 193.01388550]
[-162.74574280 187.84687805]
[-148.66375732 182.67987061]
[-134.58178711 177.51287842]
[-129.38101196 172.25321960]
[-120.23913574 172.37704468]
[-106.07812500 167.43075562]
[-96.61411285 155.92938232]
[-81.03442383 158.68327332]
[-66.87341309 153.73699951]
[-52.71239853 148.79071045]
[-38.55138779 143.84443665]
[-27.04557610 128.30986023]
[-7.30158758 132.35023499]
[6.69791365 126.96377563]
[15.79783249 115.17221832]
[31.45598030 117.43783569]
[45.45548248 112.05137634]
[59.45498276 106.66490936]
[73.45448303 101.27845001]
[87.45398712 95.89199066]
[98.42695618 85.66487122]
[104.78392792 72.07852173]
[111.14090729 58.49217606]
[103.51818085 44.97649384]
[105.32901764 29.56544304]
[115.87712860 18.18488693]
[131.10653687 15.21088219]
[145.16122437 21.78699303]
[152.63688660 35.38457108]
[150.65896606 50.77507019]
[139.98802185 62.04053116]
[124.72725677 64.84915161]
[118.37027740 78.43550110]
[112.01330566 92.02185059]
[123.37741852 101.81250000]
[135.87382507 93.51553345]
[148.37023926 85.21856689]
[160.86665344 76.92160034]
[163.19390869 72.23120880]
[166.73599243 69.20964050]
[170.65161133 68.04016876]
[174.14898682 68.54470062]
[187.02056885 60.84258652]
[199.89213562 53.14047241]
[207.39163208 38.55659485]
[223.78231812 38.02977753]
[232.20286560 52.10196686]
[223.99092102 66.29690552]
[207.59425354 66.01204681]
[194.72267151 73.71416473]
[181.85110474 81.41627502]
[169.16362000 89.41801453]
[156.66720581 97.71498108]
[144.17079163 106.01194763]
[131.67437744 114.30891418]
[132.89971924 121.70814514]
[146.21667480 114.80461884]
[156.89735413 125.33662415]
[150.18115234 138.74903870]
[135.35037231 136.50659180]
[136.57569885 143.90582275]
[151.07965088 147.73146057]
[165.58360291 151.55711365]
[180.08753967 155.38275146]
[194.59149170 159.20838928]
[209.09544373 163.03402710]
[223.59938049 166.85968018]
[238.10333252 170.68531799]
[250.77253723 161.51878357]
[266.36605835 162.69197083]
[277.52108765 173.65093994]
[278.97058105 189.22120667]
[270.03015137 202.05094910]
[254.92115784 206.08236694]
[240.77761841 199.41195679]
[234.27769470 185.18927002]
[219.77374268 181.36361694]
[205.26979065 177.53797913]
[190.76585388 173.71234131]
[176.26190186 169.88670349]
[161.75794983 166.06105042]
[147.25401306 162.23541260]
[132.75006104 158.40977478]
[92.84044647 109.89148712]
[78.84094238 115.27795410]
[64.84144592 120.66441345]
[50.84194183 126.05087280]
[36.84244156 131.43733215]
[26.74118423 143.61416626]
[12.08437538 140.96327209]
[-1.91512620 146.34973145]
[-5.75391531 156.53767395]
[-14.39090061 162.79849243]
[-24.82861519 163.25790405]
[-33.60510254 158.00544739]
[-47.76611710 162.95172119]
[-61.92713165 167.89801025]
[-76.08814240 172.84428406]
[-86.56504822 184.69946289]
[-101.13184357 181.59176636]
[-115.29285431 186.53805542]
[-129.41477966 191.59484863]
[-143.49676514 196.76185608]
[-157.57873535 201.92884827]
[-171.66072083 207.09585571]
[-174.43017578 220.60316467]
[-183.44226074 230.89515686]
[-196.26116943 235.35252380]
[-209.50149536 232.91136169]
[-219.72221375 224.31494141]
[-233.88322449 229.26123047]
[-248.04423523 234.20750427]
[-262.20526123 239.15379333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 54]
[8 53]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[17 44]
[18 37]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[80 200]
[81 199]
[82 198]
[83 197]
[87 192]
[88 191]
[89 190]
[90 189]
[92 188]
[93 187]
[95 185]
[96 184]
[97 183]
[98 182]
[100 178]
[101 177]
[103 175]
[104 174]
[105 173]
[106 172]
[107 171]
[108 121]
[109 120]
[110 119]
[122 142]
[123 141]
[124 140]
[125 139]
[129 138]
[130 137]
[131 136]
[148 170]
[149 169]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
