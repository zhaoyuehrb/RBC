%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCAUGCGCCUGUUUGCUCGGUGCUGUUCUCUCGAUAAAUCACAACAAAGCUUCCAGAGGGAGAGGAAGGAUGGACGGCACCACUGCCCCUGUCACUAAAUCUGGAGCUGCCAAGUUAGUUAAGAGAAAUUUCCUUGAGGCGCUAAAGUCCAAUGACUUCGGAAAAUUGA\
) } def
/len { sequence length } bind def

/coor [
[146.81172180 531.05438232]
[156.42718506 519.54168701]
[169.06724548 511.46524048]
[183.55462646 507.57733154]
[198.53997803 508.24005127]
[212.62757874 513.39172363]
[224.50585938 522.55297852]
[218.89241028 508.64294434]
[213.27894592 494.73291016]
[207.66549683 480.82287598]
[202.05204773 466.91284180]
[196.43859863 453.00280762]
[186.68017578 453.02340698]
[177.34394836 450.08389282]
[169.30909729 444.44229126]
[163.33790588 436.61199951]
[160.00347900 427.31500244]
[159.63473511 417.41540527]
[162.28407288 407.83905029]
[167.72079468 399.48696899]
[175.45106506 393.15066528]
[171.12957764 378.78665161]
[157.63999939 376.53140259]
[146.38867188 368.63970947]
[139.60971069 356.60885620]
[138.67919922 342.76455688]
[143.83621216 329.81164551]
[154.12486267 320.30548096]
[150.06643677 305.86492920]
[146.00802612 291.42440796]
[141.94960022 276.98385620]
[137.89117432 262.54330444]
[133.83276367 248.10278320]
[122.94052887 237.94361877]
[126.65545654 222.56472778]
[122.59703827 208.12419128]
[118.53862000 193.68365479]
[107.64638519 183.52449036]
[111.36131287 168.14561462]
[107.30289459 153.70506287]
[103.24447632 139.26452637]
[91.01239777 138.35952759]
[79.65140533 133.73669434]
[70.26261139 125.84409332]
[63.75596619 115.44667816]
[60.76211166 103.55216217]
[61.57120514 91.31336975]
[66.10483551 79.91648865]
[73.92359161 70.46611023]
[84.26969147 63.87816238]
[81.00823975 49.23702621]
[77.74678040 34.59588623]
[74.48532867 19.95475006]
[69.54782104 12.22492695]
[71.30059814 5.01648617]
[68.30709839 -9.68177700]
[65.31359100 -24.38004112]
[62.32009125 -39.07830429]
[59.32659149 -53.77656555]
[55.93156433 -68.38730621]
[52.13756561 -82.89956665]
[48.21118927 -97.37656403]
[44.15276718 -111.81710815]
[32.97025681 -123.00915527]
[36.97546768 -137.35514832]
[32.91704559 -151.79568481]
[28.85862541 -166.23623657]
[13.45993042 -174.49955750]
[8.87415600 -191.01313782]
[17.46252251 -205.45333862]
[13.14103603 -219.81735229]
[7.65245390 -227.16613770]
[8.87437630 -234.48329163]
[4.81595516 -248.92382812]
[0.75753474 -263.36437988]
[-13.14551735 -270.87973022]
[-17.58216858 -286.04849243]
[-9.92023277 -299.87133789]
[5.29459906 -304.14736938]
[19.03563690 -296.33969116]
[23.15056801 -281.08050537]
[15.19807529 -267.42279053]
[19.25649643 -252.98225403]
[23.31491661 -238.54170227]
[27.50504494 -224.13883972]
[31.82653236 -209.77482605]
[43.93655396 -205.31065369]
[51.36563110 -194.51913452]
[51.20890427 -181.22378540]
[43.29916763 -170.29464722]
[47.35758591 -155.85411072]
[51.41600800 -141.41357422]
[62.30823517 -131.25440979]
[58.59331131 -115.87552643]
[62.65172958 -101.43498993]
[67.50655365 -95.82566071]
[66.64981842 -86.69356537]
[70.44381714 -72.18131256]
[73.32294464 -70.08612061]
[75.31430054 -66.47523499]
[75.70891571 -61.78876114]
[74.02485657 -56.77006912]
[77.01835632 -42.07180405]
[80.01185608 -27.37354279]
[83.00535583 -12.67527866]
[85.99886322 2.02298427]
[89.12647247 16.69329643]
[92.38792419 31.33443451]
[95.64937592 45.97557449]
[98.91082764 60.61671066]
[116.17198944 64.07373047]
[130.20445251 74.70333862]
[138.20668030 90.38336182]
[138.58103943 107.98331451]
[131.25279236 123.98942566]
[117.68501282 135.20610046]
[121.74343872 149.64665222]
[125.80185699 164.08718872]
[136.98437500 175.27923584]
[132.97915649 189.62522888]
[137.03758240 204.06576538]
[141.09599304 218.50631714]
[152.27851868 229.69836426]
[148.27330017 244.04435730]
[152.33172607 258.48489380]
[156.39013672 272.92544556]
[160.44856262 287.36596680]
[164.50698853 301.80651855]
[168.56539917 316.24707031]
[184.61315918 320.15649414]
[196.43943787 331.55227661]
[200.88983154 347.26370239]
[196.84347534 362.98715210]
[185.49359131 374.46517944]
[189.81507874 388.82916260]
[209.74023438 394.37942505]
[222.23519897 410.68890381]
[222.40545654 431.09570312]
[210.34863281 447.38934326]
[215.96208191 461.29937744]
[221.57553101 475.20944214]
[227.18899536 489.11947632]
[232.80244446 503.02951050]
[238.41589355 516.93951416]
[244.59051514 520.85046387]
[247.72138977 526.67266846]
[247.57731628 532.58679199]
[256.96023560 544.28979492]
[266.34313965 555.99285889]
[275.72607422 567.69586182]
[285.10897827 579.39892578]
[300.57812500 584.84289551]
[303.33172607 601.00921631]
[290.53707886 611.26733398]
[275.35623169 605.06457520]
[273.40594482 588.78179932]
[264.02304077 577.07879639]
[254.64012146 565.37579346]
[245.25720215 553.67272949]
[235.87428284 541.96972656]
[238.04994202 556.81109619]
[235.64793396 571.61749268]
[228.89198303 585.00994873]
[218.41131592 595.74102783]
[205.18209839 602.81121826]
[190.43650818 605.56207275]
[175.54789734 603.73736572]
[161.90301514 597.50701904]
[150.77270508 587.45135498]
[143.19366455 574.50695801]
[139.87176514 559.87939453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 144]
[8 143]
[9 142]
[10 141]
[11 140]
[12 139]
[21 135]
[22 134]
[28 129]
[29 128]
[30 127]
[31 126]
[32 125]
[33 124]
[35 122]
[36 121]
[37 120]
[39 118]
[40 117]
[41 116]
[50 110]
[51 109]
[52 108]
[53 107]
[55 106]
[56 105]
[57 104]
[58 103]
[59 102]
[60 98]
[61 97]
[62 95]
[63 94]
[65 92]
[66 91]
[67 90]
[70 86]
[71 85]
[73 84]
[74 83]
[75 82]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
