%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:19:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCAGCGGGGAGCGGUUAGAGGUGGGAGUUGGCGCUGCGGGCCGGGCGGGGGCCGCGGAAGCUGCGAUGCGGACAGGGCAGCGGCGGUGACCCGAGCUGCCGCCCGACAUGAACUCGCUGGAGCAGGCGGAAGCCCCGCGAGUUGUAUCCCUGAUUCCUGCGGUGGUUUCCGGUAACUGCCAAGAUCUCAAGGCUUUUGAGAGGAGAC\
) } def
/len { sequence length } bind def

/coor [
[168.05664062 237.33804321]
[182.84761047 234.84254456]
[197.28742981 238.90608215]
[211.01007080 244.96322632]
[201.87127686 233.06858826]
[192.73246765 221.17396545]
[183.59367371 209.27932739]
[174.10476685 197.66206360]
[164.27418518 186.33247375]
[154.44360352 175.00288391]
[144.61302185 163.67327881]
[134.78244019 152.34368896]
[124.95186615 141.01409912]
[115.03721619 129.75801086]
[105.03903961 118.57602692]
[90.09885406 117.23779297]
[78.27259064 126.46489716]
[66.44631958 135.69198608]
[54.62004852 144.91908264]
[55.01607513 160.31874084]
[46.36943054 172.85224915]
[32.16855240 177.83212280]
[17.92881966 173.54634094]
[6.10254908 182.77343750]
[-5.72372103 192.00053406]
[-17.54998970 201.22763062]
[-16.88414764 216.73042297]
[-25.48581886 229.64517212]
[-40.04748154 235.00590515]
[-54.96988678 230.75132751]
[-64.51506042 218.51737976]
[-65.01268768 203.00828552]
[-56.27141953 190.18760681]
[-41.65245819 184.98515320]
[-26.77708817 189.40136719]
[-14.95081902 180.17427063]
[-3.12454939 170.94717407]
[8.70172024 161.72006226]
[8.00780582 146.86555481]
[16.29188728 134.30220032]
[30.55199051 128.96339417]
[45.39294815 133.09281921]
[57.21921921 123.86572266]
[69.04548645 114.63862610]
[80.87175751 105.41152191]
[81.20673370 90.41526794]
[69.80427551 80.66930389]
[58.40180969 70.92333221]
[46.99934769 61.17736816]
[35.59688568 51.43140411]
[24.19442177 41.68543625]
[8.67686081 38.60065460]
[4.02920961 24.44973373]
[-7.37325335 14.70376778]
[-18.77571487 4.95780230]
[-30.25041580 -4.70300817]
[-41.79671860 -14.27812767]
[-50.40009689 -17.34727287]
[-53.44226456 -24.08277702]
[-64.84472656 -33.82874298]
[-80.38626099 -32.78063202]
[-91.81114197 -42.82685852]
[-92.71457672 -57.64979172]
[-104.11704254 -67.39575958]
[-115.51950073 -77.14172363]
[-126.92196655 -86.88768768]
[-138.32443237 -96.63365936]
[-155.73648071 -94.94850159]
[-168.72434998 -106.15699005]
[-169.57017517 -122.95352173]
[-181.11647034 -132.52864075]
[-192.66278076 -142.10375977]
[-208.01333618 -139.12138367]
[-221.66442871 -146.74906921]
[-227.17044067 -161.38525391]
[-221.93157959 -176.11918640]
[-208.42150879 -183.99394226]
[-193.01924133 -181.29130554]
[-182.99726868 -169.28738403]
[-183.08766174 -153.65005493]
[-171.54135132 -144.07493591]
[-159.99505615 -134.49981689]
[-147.45927429 -137.48039246]
[-135.31439209 -132.62406921]
[-128.07749939 -121.49581909]
[-128.57846069 -108.03611755]
[-117.17600250 -98.29015350]
[-105.77353668 -88.54418945]
[-94.37107849 -78.79821777]
[-82.96861267 -69.05225372]
[-68.18578339 -70.46775055]
[-56.48323441 -60.74639130]
[-55.09875870 -45.23120499]
[-43.69629669 -35.48524094]
[-32.22159958 -25.82442856]
[-20.67529678 -16.24930954]
[-13.51993465 -14.39928532]
[-9.02974987 -6.44466019]
[2.37271261 3.30130553]
[13.77517509 13.04727077]
[28.47715569 15.43495655]
[33.94038773 30.28297615]
[45.34284973 40.02894211]
[56.74531174 49.77490616]
[68.14777374 59.52087402]
[79.55023956 69.26683807]
[90.95269775 79.01280212]
[81.27599335 67.55150604]
[81.78290558 52.56007767]
[92.21171570 41.77861786]
[107.17800903 40.77362061]
[118.95465851 50.06397247]
[121.46134186 64.85303497]
[113.40221405 77.50641632]
[123.40039062 66.32444000]
[133.39855957 55.14246368]
[143.39672852 43.96049118]
[153.39491272 32.77851486]
[163.39308167 21.59654045]
[173.39125061 10.41456604]
[176.77844238 1.93135977]
[183.62248230 -0.85804242]
[193.78602600 -11.88991928]
[194.58578491 -16.15774918]
[196.50862122 -19.60262871]
[199.15794373 -21.97254372]
[202.09602356 -23.17017746]
[204.89804077 -23.25290871]
[215.70019531 -33.66028214]
[226.50234985 -44.06765366]
[230.51840210 -59.96744919]
[246.36767578 -64.17841339]
[257.74581909 -52.36866760]
[252.94795227 -36.68706894]
[236.90972900 -33.26549911]
[226.10757446 -22.85812569]
[215.30540466 -12.45075226]
[204.81791687 -1.72637284]
[194.65435791 9.30550480]
[184.57322693 20.41273880]
[174.57505798 31.59471321]
[164.57687378 42.77668762]
[154.57870483 53.95866013]
[144.58053589 65.14064026]
[134.58236694 76.32260895]
[124.58419037 87.50458527]
[116.22101593 108.57785797]
[126.21919250 119.75983429]
[134.27210999 124.07125854]
[136.28146362 131.18351746]
[146.11204529 142.51310730]
[155.94262695 153.84271240]
[165.77320862 165.17230225]
[175.60377502 176.50189209]
[185.43435669 187.83148193]
[189.58648682 189.10183716]
[192.79563904 191.39659119]
[194.85556030 194.29350281]
[195.71832275 197.34674072]
[195.48829651 200.14053345]
[204.62710571 212.03515625]
[213.76589966 223.92979431]
[222.90470886 235.82443237]
[234.52197266 245.31332397]
[248.00170898 251.89335632]
[261.48144531 258.47338867]
[274.96118164 265.05340576]
[288.44091797 271.63342285]
[301.92065430 278.21347046]
[315.40039062 284.79348755]
[330.26193237 279.41668701]
[344.53692627 286.19900513]
[349.75631714 301.11657715]
[342.82345581 315.31906128]
[327.85153198 320.38043213]
[313.72311401 313.29782104]
[308.82034302 298.27322388]
[295.34060669 291.69320679]
[281.86087036 285.11315918]
[268.38113403 278.53314209]
[254.90141296 271.95312500]
[241.42167664 265.37307739]
[227.94194031 258.79306030]
[222.61894226 264.07656860]
[233.18582153 274.72274780]
[222.53948975 285.28945923]
[211.97293091 274.64361572]
[206.64993286 279.92715454]
[213.12942505 293.45550537]
[219.60891724 306.98385620]
[226.08840942 320.51217651]
[232.56791687 334.04052734]
[239.04740906 347.56887817]
[253.64019775 354.23446655]
[257.38732910 369.83380127]
[247.41432190 382.40036011]
[231.37161255 382.29418945]
[221.56579590 369.59674072]
[225.51905823 354.04837036]
[219.03956604 340.52001953]
[212.56007385 326.99169922]
[206.08056641 313.46334839]
[199.60107422 299.93499756]
[193.12158203 286.40664673]
[192.32203674 301.38531494]
[177.42234802 303.11718750]
[163.21112061 298.31710815]
[152.41313171 287.90539551]
[147.09877014 273.87838745]
[148.28695679 258.92550659]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 163]
[5 162]
[6 161]
[7 160]
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[14 148]
[15 147]
[16 45]
[17 44]
[18 43]
[19 42]
[23 38]
[24 37]
[25 36]
[26 35]
[46 107]
[47 106]
[48 105]
[49 104]
[50 103]
[51 102]
[53 100]
[54 99]
[55 98]
[56 96]
[57 95]
[59 94]
[60 93]
[63 90]
[64 89]
[65 88]
[66 87]
[67 86]
[70 82]
[71 81]
[72 80]
[114 146]
[115 145]
[116 144]
[117 143]
[118 142]
[119 141]
[120 140]
[122 139]
[123 138]
[128 137]
[129 136]
[130 135]
[164 183]
[165 182]
[166 181]
[167 180]
[168 179]
[169 178]
[170 177]
[188 204]
[189 203]
[190 202]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
