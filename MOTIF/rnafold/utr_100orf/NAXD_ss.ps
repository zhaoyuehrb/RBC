%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCGGAAUGCUGCCCGAUGGCCCUGGGUCCUCGCUGUGGGGCAAUCCGGGCUUGCAGACGAGGUAAGGUCGAUUCCAUUUGGCCCGGGGAUGGUCACACGCGCGGGGGCCGGAACUGCCGUCGCCGGCGCGGUCGUUGUCGCAUUGCUCUCGGCCGCACUCGCGCUGUACGGGCCGCCACUGGACGCAG\
) } def
/len { sequence length } bind def

/coor [
[84.13349152 328.24127197]
[88.29601288 313.29293823]
[100.47089386 303.67254639]
[99.73487854 288.69061279]
[98.99886322 273.70867920]
[98.26284790 258.72674561]
[97.52683258 243.74481201]
[86.85622406 236.50543213]
[82.23933411 224.25743103]
[85.57366943 211.39874268]
[95.85756683 202.68577576]
[95.36678314 187.69381714]
[87.21720123 175.22651672]
[94.49882507 161.18057251]
[94.00804138 146.18859863]
[93.51725769 131.19662476]
[93.02646637 116.20466614]
[86.83586121 102.54170227]
[75.88790131 92.28781891]
[64.93994141 82.03393555]
[53.99197769 71.78005219]
[43.04401779 61.52616882]
[32.09605789 51.27228165]
[15.41810322 56.76757812]
[-1.66091394 53.08741760]
[-14.46464062 41.33153534]
[-19.53398132 24.79812622]
[-15.56133461 8.05890846]
[-26.83893204 -1.83127868]
[-38.11652756 -11.72146606]
[-49.39412689 -21.61165237]
[-60.67172241 -31.50184059]
[-71.94931793 -41.39202881]
[-83.22692108 -51.28221512]
[-94.50451660 -61.17240143]
[-105.78211212 -71.06259155]
[-117.14024353 -80.86018372]
[-128.57815552 -90.56452179]
[-140.01606750 -100.26886749]
[-151.45396423 -109.97320557]
[-162.97088623 -119.58364868]
[-174.56604004 -129.09954834]
[-190.14221191 -131.87327576]
[-195.07203674 -145.92839050]
[-206.66719055 -155.44427490]
[-224.89372253 -158.01356506]
[-230.44506836 -174.65415955]
[-242.19436646 -183.97906494]
[-253.94366455 -193.30397034]
[-265.69296265 -202.62887573]
[-277.44226074 -211.95379639]
[-289.19155884 -221.27870178]
[-300.94085693 -230.60360718]
[-312.69018555 -239.92851257]
[-324.66476440 -248.96228027]
[-336.85748291 -257.69943237]
[-356.46118164 -253.36642456]
[-372.69616699 -264.65209961]
[-375.38061523 -283.93368530]
[-387.98733521 -292.06207275]
[-400.59405518 -300.19042969]
[-415.01300049 -294.45690918]
[-430.03991699 -298.32620239]
[-439.89663696 -310.31057739]
[-440.79306030 -325.80172729]
[-432.38449097 -338.84301758]
[-417.90420532 -344.41983032]
[-402.92013550 -340.38772583]
[-393.19400024 -328.29714966]
[-392.46569824 -312.79718018]
[-379.85897827 -304.66879272]
[-367.25222778 -296.54043579]
[-358.14776611 -301.34115601]
[-347.79074097 -301.92568970]
[-338.05328369 -298.12100220]
[-330.72354126 -290.55361938]
[-327.17733765 -280.54739380]
[-328.12030029 -269.89215088]
[-315.92761230 -261.15496826]
[-312.39321899 -261.37332153]
[-308.57809448 -259.88046265]
[-305.29226685 -256.56353760]
[-303.36526489 -251.67781067]
[-291.61596680 -242.35290527]
[-279.86666870 -233.02799988]
[-268.11737061 -223.70309448]
[-256.36804199 -214.37818909]
[-244.61875916 -205.05326843]
[-232.86946106 -195.72836304]
[-221.12014771 -186.40345764]
[-209.06076050 -187.47203064]
[-199.19369507 -179.78553772]
[-197.15129089 -167.03944397]
[-185.55613708 -157.52354431]
[-170.80932617 -155.43045044]
[-165.05014038 -140.69470215]
[-153.45498657 -131.17880249]
[-146.27839661 -129.36280823]
[-141.74963379 -121.41111755]
[-130.31172180 -111.70677185]
[-118.87380981 -102.00243378]
[-107.43590546 -92.29808807]
[-100.28998566 -90.36490631]
[-95.89192200 -82.34018707]
[-84.61432648 -72.44999695]
[-73.33673096 -62.55981064]
[-62.05913162 -52.66962433]
[-50.78153610 -42.77943802]
[-39.50394058 -32.88925171]
[-28.22634125 -22.99906349]
[-16.94874382 -13.10887623]
[-5.67114735 -3.21868849]
[5.80267096 -8.54907990]
[18.48718452 -9.14069557]
[30.49544907 -4.87008429]
[40.02769852 3.66026068]
[45.64107895 15.20664406]
[46.46797562 28.06541634]
[42.34994125 40.32432175]
[53.29790115 50.57820511]
[64.24586487 60.83209229]
[75.19382477 71.08597565]
[86.14178467 81.33985901]
[97.08974457 91.59374237]
[102.23403168 81.68941498]
[115.25160217 76.52195740]
[132.20486450 80.69543457]
[147.07653809 82.65332794]
[161.94821167 84.61122131]
[176.81988525 86.56911469]
[191.69155884 88.52700806]
[206.56323242 90.48490143]
[221.43490601 92.44279480]
[236.32209778 94.27895355]
[251.22381592 95.99325562]
[260.12329102 93.86293030]
[266.35458374 97.85945892]
[281.22625732 99.81735229]
[295.91830444 93.94753265]
[307.52676392 103.27987671]
[322.39843750 105.23777008]
[337.27011108 107.19566345]
[352.14178467 109.15355682]
[362.02636719 97.30879211]
[376.75241089 92.71015930]
[391.62088013 96.82507324]
[401.88726807 108.34046936]
[404.27566528 123.58183289]
[398.02389526 137.68569946]
[385.12692261 146.15158081]
[369.70007324 146.27803040]
[356.66601562 138.02471924]
[350.18389893 124.02523041]
[335.31222534 122.06733704]
[320.44055176 120.10944366]
[305.56887817 118.15155029]
[291.94055176 124.16141510]
[279.26837158 114.68902588]
[264.39669800 112.73113251]
[249.50950623 110.89497375]
[234.60778809 109.18067169]
[227.59216309 111.54334259]
[219.47700500 107.31446838]
[204.60533142 105.35657501]
[189.73365784 103.39868164]
[174.86198425 101.44078827]
[159.99031067 99.48289490]
[145.11863708 97.52500153]
[130.24696350 95.56710815]
[124.68983459 100.60379791]
[127.85681152 115.26566315]
[113.57556915 110.67718506]
[108.01844025 115.71387482]
[108.50922394 130.70584106]
[109.00000763 145.69781494]
[109.49079895 160.68978882]
[117.67548370 174.22941589]
[110.35874939 187.20301819]
[110.84953308 202.19499207]
[123.83150482 213.90902710]
[124.32337189 231.05010986]
[112.50875854 243.00878906]
[113.24477386 257.99072266]
[113.98078918 272.97265625]
[114.71680450 287.95458984]
[115.45281982 302.93652344]
[128.51203918 311.31726074]
[134.11970520 325.78561401]
[130.11958313 340.77822876]
[118.04979706 350.53015137]
[102.55141449 351.29153442]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[5 184]
[6 183]
[7 182]
[11 179]
[12 178]
[14 176]
[15 175]
[16 174]
[17 173]
[18 124]
[19 123]
[20 122]
[21 121]
[22 120]
[23 119]
[28 112]
[29 111]
[30 110]
[31 109]
[32 108]
[33 107]
[34 106]
[35 105]
[36 104]
[37 102]
[38 101]
[39 100]
[40 99]
[41 97]
[42 96]
[44 94]
[45 93]
[47 90]
[48 89]
[49 88]
[50 87]
[51 86]
[52 85]
[53 84]
[54 83]
[55 79]
[56 78]
[59 72]
[60 71]
[61 70]
[127 169]
[128 168]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[134 161]
[135 160]
[137 159]
[138 158]
[140 156]
[141 155]
[142 154]
[143 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
