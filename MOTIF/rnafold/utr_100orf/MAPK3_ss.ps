%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCGCGCGCGGCCCUGCGGGUGACAGGCAGGCGGGAAGGGGCGGGGCCUCGGGCGGGGCCGCCGUGGGGAGGAGGGCGGUGGGAGGGGAGGAGUGGAGAUGGCGGCGGCGGCGGCUCAGGGGGGCGGGGGCGGGGAGCCCCGUAGAACCGAGGGGGUCGGCCCGGGGGUCCCGGGGGAGGUGGAGAUGGUGAAGGGGC\
) } def
/len { sequence length } bind def

/coor [
[111.31610107 162.60929871]
[106.92678833 148.26586914]
[91.43773651 148.00273132]
[76.81291199 142.89443970]
[64.52847290 133.45660400]
[52.16326141 141.94787598]
[39.79804993 150.43913269]
[32.80187607 164.62940979]
[17.93021774 165.45590210]
[5.56500626 173.94715881]
[-1.43116736 188.13745117]
[-16.30282402 188.96392822]
[-28.66803551 197.45518494]
[-41.03324890 205.94645691]
[-53.39846039 214.43771362]
[-65.76367188 222.92898560]
[-78.12888336 231.42024231]
[-90.49409485 239.91149902]
[-102.85930634 248.40277100]
[-97.67304993 262.56445312]
[-96.17242432 277.57110596]
[-98.45175171 292.47933960]
[-104.36775208 306.35202026]
[-113.54854584 318.31713867]
[-125.41702271 327.62252808]
[-139.22711182 333.68322754]
[-154.11070251 336.11828613]
[-169.13220215 334.77462769]
[-183.34733582 329.73672485]
[-195.86254883 321.32125854]
[-205.89111328 310.05718994]
[-212.80261230 296.65264893]
[-216.16261292 281.95022583]
[-215.75987244 266.87414551]
[-211.61972046 252.37207031]
[-204.00242615 239.35563660]
[-193.38677979 228.64306641]
[-180.44012451 220.90776062]
[-165.97628784 216.63595581]
[-150.90447998 216.09620667]
[-136.17211914 219.32241821]
[-122.70530701 226.11180115]
[-111.35057068 236.03755188]
[-98.98535919 227.54629517]
[-86.62014771 219.05502319]
[-74.25493622 210.56376648]
[-61.88972092 202.07250977]
[-49.52450943 193.58123779]
[-37.15929794 185.08998108]
[-24.79408646 176.59872437]
[-18.68235588 163.01579285]
[-2.92625618 161.58195496]
[9.43895531 153.09068298]
[15.55068588 139.50775146]
[31.30678558 138.07392883]
[43.67199707 129.58265686]
[56.03720856 121.09140015]
[51.26656342 98.37947083]
[57.53548050 76.03463745]
[73.42386627 59.11867142]
[67.28000641 45.43462753]
[61.13615417 31.75058365]
[54.99229813 18.06654167]
[48.84844208 4.38249779]
[42.70458984 -9.30154514]
[36.56073380 -22.98558807]
[30.41687775 -36.66963196]
[15.52379036 -34.29662704]
[0.53558743 -35.85841751]
[-13.52665901 -41.24257660]
[-25.70652008 -50.07646561]
[-35.17726135 -61.75305557]
[-41.29796219 -75.47260284]
[-43.65687943 -90.29744720]
[-42.09914017 -105.21608734]
[-36.73690796 -119.21219635]
[-27.94131851 -131.33384705]
[-16.31679344 -140.75828552]
[-22.46064949 -154.44232178]
[-37.61600876 -153.61799622]
[-52.04452896 -158.32778931]
[-63.79487610 -167.93475342]
[-71.27790833 -181.13963318]
[-73.48160553 -196.15655518]
[-70.10794067 -210.95462036]
[-61.61316681 -223.53251648]
[-49.14614105 -232.18916321]
[-34.39291763 -235.75384521]
[-19.34875870 -233.74446106]
[-6.04825497 -226.43275452]
[3.70980620 -214.80757141]
[8.60572815 -200.44114685]
[7.97737694 -185.27639771]
[1.90973246 -171.36424255]
[-8.77660656 -160.58618164]
[-2.63275099 -146.90213013]
[12.13442039 -149.32702637]
[27.03751373 -147.84561157]
[41.06004333 -142.55285645]
[53.24401855 -133.80397034]
[62.75539780 -122.19042969]
[68.94116974 -108.50009918]
[71.37420654 -93.66372681]
[69.88272858 -78.69168091]
[64.56241608 -64.60515594]
[55.77033234 -52.36650085]
[44.10092163 -42.81348801]
[50.24477768 -29.12944412]
[56.38863373 -15.44540119]
[62.53248596 -1.76135755]
[68.67634583 11.92268562]
[74.82019806 25.60672951]
[80.96405029 39.29077148]
[87.10791016 52.97481537]
[105.70278168 51.57426071]
[123.46360016 57.25619125]
[132.61825562 45.37375259]
[141.77290344 33.49131393]
[150.92756653 21.60887909]
[152.56234741 5.29141760]
[167.62028503 -1.20398617]
[180.61108398 8.80458164]
[178.17089844 25.02116394]
[162.80999756 30.76353264]
[153.65534973 42.64596939]
[144.50068665 54.52840805]
[135.34603882 66.41084290]
[143.14517212 63.34142303]
[151.37640381 61.05101776]
[164.80999756 54.37728882]
[178.24357605 47.70356369]
[191.67716980 41.02983475]
[205.11076355 34.35610580]
[211.56542969 19.66880417]
[227.10914612 15.69732475]
[239.81808472 25.48824692]
[239.94305420 41.53081131]
[227.38818359 51.51853943]
[211.78450012 47.78969955]
[198.35090637 54.46342468]
[184.91731262 61.13715363]
[171.48371887 67.81088257]
[158.05012512 74.48460388]
[159.15966797 81.90208435]
[173.99461365 79.68300629]
[188.82960510 77.46417999]
[191.04818726 92.29920197]
[176.21368408 94.51795959]
[161.37873840 96.73703003]
[162.48828125 104.15450287]
[177.28672791 106.60516357]
[192.08518982 109.05582428]
[206.88363647 111.50648499]
[220.71319580 103.37489319]
[235.64114380 109.25162506]
[240.21603394 124.62855530]
[230.92840576 137.70982361]
[214.90292358 138.46058655]
[204.43298340 126.30493927]
[189.63452148 123.85427856]
[174.83607483 121.40361786]
[160.03761292 118.95295715]
[154.43301392 132.86656189]
[166.79821777 141.35783386]
[179.16343689 149.84909058]
[191.52864075 158.34034729]
[203.89385986 166.83161926]
[216.25906372 175.32287598]
[232.73875427 179.30487061]
[233.47441101 196.24285889]
[217.40202332 201.63865662]
[207.76780701 187.68809509]
[195.40260315 179.19682312]
[183.03738403 170.70556641]
[170.67216492 162.21430969]
[158.30696106 153.72303772]
[145.94174194 145.23178101]
[137.21180725 146.08679199]
[128.92581177 145.59620667]
[121.27021790 143.87655640]
[125.65953064 158.21998596]
[140.76391602 158.03448486]
[155.30834961 162.11322021]
[168.11378479 170.12554932]
[178.14213562 181.42195129]
[184.58047485 195.08666992]
[186.90684509 210.01197815]
[184.93266296 224.98794556]
[178.81797791 238.80052185]
[169.05848694 250.32998657]
[156.44532776 258.64172363]
[142.00099182 263.06192017]
[126.89643860 263.23223877]
[112.35610962 259.13888550]
[99.55872345 251.11369324]
[89.54171753 239.80722046]
[83.11711884 226.13604736]
[80.80574799 211.20840454]
[82.79496002 196.23443604]
[88.92352295 182.42800903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[5 57]
[6 56]
[7 55]
[9 53]
[10 52]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[17 45]
[18 44]
[19 43]
[60 114]
[61 113]
[62 112]
[63 111]
[64 110]
[65 109]
[66 108]
[67 107]
[78 96]
[79 95]
[116 127]
[117 126]
[118 125]
[119 124]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[150 162]
[151 161]
[152 160]
[153 159]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
