%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGCUCUAUAGGUCCGGUUCCGGGGGCGCGUGGCUGCAGCGGGGCCCGCGUGGUGCCUCCUGAGGCGGCCCCCGGAUGAAGAGAUCUGGGAACCCGGGAGCCGAGGUAACGAACAGCUCGGUGGCAGGGCCUGACUGCUGCGGAGGCCUCGGCAAUAUUGAUUUUAGACAGGCAG\
) } def
/len { sequence length } bind def

/coor [
[335.88708496 157.41947937]
[321.22222900 154.26629639]
[306.55740356 151.11309814]
[291.89257812 147.95989990]
[277.22775269 144.80670166]
[260.85638428 151.09124756]
[247.28892517 138.66175842]
[232.57072449 135.76786804]
[217.85252380 132.87397766]
[210.66101074 134.67414856]
[202.90113831 129.79695129]
[188.23629761 126.64375305]
[173.57147217 123.49055481]
[158.90663147 120.33736420]
[144.24180603 117.18416595]
[129.57696533 114.03097534]
[118.45864868 127.03596497]
[102.29798889 132.65554810]
[85.50958252 129.35461426]
[72.67952728 118.03487396]
[67.31259918 101.78855896]
[52.54561996 99.15487671]
[37.77864075 96.52118683]
[23.01165962 93.88750458]
[8.24467945 91.25381470]
[-6.52230072 88.62012482]
[-21.28927994 85.98644257]
[-36.05625916 83.35275269]
[-50.82324219 80.71907043]
[-59.85198975 82.29529572]
[-65.82660675 77.90639496]
[-80.54480743 75.01250458]
[-95.26300812 72.11861420]
[-101.67891693 73.90599060]
[-107.19579315 72.39128113]
[-110.44546509 68.85411835]
[-125.05236816 65.44260406]
[-134.15188599 66.53878784]
[-139.88584900 61.83983612]
[-154.43026733 58.17106628]
[-168.97468567 54.50229263]
[-178.09213257 55.43770981]
[-183.74227905 50.63829803]
[-198.21968079 46.71340942]
[-212.69709778 42.78852081]
[-227.17449951 38.86363220]
[-241.65190125 34.93874359]
[-256.16339111 31.14176369]
[-270.70779419 27.47299194]
[-286.32772827 32.46800613]
[-298.27984619 21.23953438]
[-294.26885986 5.33846426]
[-278.42092896 1.12245333]
[-267.03903198 12.92857265]
[-252.49459839 16.59734535]
[-245.21789551 15.18029022]
[-237.72700500 20.46133804]
[-223.24960327 24.38622665]
[-208.77220154 28.31111717]
[-194.29479980 32.23600388]
[-179.81739807 36.16089249]
[-165.30592346 39.95787430]
[-150.76150513 43.62664795]
[-136.21708679 47.29541779]
[-121.64085388 50.83570099]
[-107.03395081 54.24721527]
[-92.36911774 57.40040970]
[-77.65091705 60.29430008]
[-62.93271637 63.18819427]
[-48.18955231 65.95208740]
[-33.42257309 68.58577728]
[-18.65559387 71.21945953]
[-3.88861442 73.85314941]
[10.87836552 76.48683167]
[25.64534569 79.12052155]
[40.41232681 81.75421143]
[55.17930603 84.38789368]
[69.94628143 87.02158356]
[77.08573151 76.62049103]
[87.62819672 69.69152832]
[100.00801849 67.26370239]
[112.38665009 69.69758606]
[122.92572021 76.63172150]
[130.06007385 87.03630066]
[132.73016357 99.36614227]
[147.39498901 102.51933289]
[162.05982971 105.67253113]
[176.72467041 108.82572174]
[191.38949585 111.97891998]
[206.05433655 115.13211060]
[220.74641418 118.15576935]
[235.46461487 121.04965973]
[250.18281555 123.94355011]
[261.32586670 117.40871429]
[273.54037476 120.14234924]
[280.38092041 130.14187622]
[295.04577637 133.29507446]
[309.71060181 136.44825745]
[324.37542725 139.60145569]
[339.04028320 142.75465393]
[347.99609375 139.82431030]
[355.74987793 143.04959106]
[370.51687622 140.41590881]
[385.28384399 137.78222656]
[400.05084229 135.14852905]
[414.81781006 132.51484680]
[429.58477783 129.88116455]
[444.35177612 127.24747467]
[459.11874390 124.61379242]
[446.04174805 117.26586914]
[438.90231323 104.07388306]
[439.90283203 89.10728455]
[448.73464966 76.98297119]
[462.67333984 71.44104004]
[477.41909790 74.19107056]
[488.42315674 84.38472748]
[492.29098511 98.87747192]
[487.82946777 113.19860077]
[476.41708374 122.92931366]
[491.41476440 122.66458893]
[506.41241455 122.39986420]
[520.07391357 114.42021179]
[532.93572998 121.93169403]
[547.93341064 121.66696930]
[562.93103027 121.40223694]
[577.92871094 121.13751221]
[592.92639160 120.87278748]
[607.92407227 120.60805511]
[622.92169189 120.34333038]
[632.61907959 108.07569122]
[647.94354248 104.96213531]
[661.65942383 112.47277832]
[667.29040527 127.06134033]
[662.17779541 141.83952332]
[648.73553467 149.82954407]
[633.31072998 147.25875854]
[623.18646240 135.34098816]
[608.18878174 135.60572815]
[593.19110107 135.87045288]
[578.19342041 136.13517761]
[563.19580078 136.39990234]
[548.19812012 136.66462708]
[533.20043945 136.92935181]
[520.61169434 144.89007568]
[506.67715454 137.39752197]
[491.67947388 137.66224670]
[476.68182373 137.92698669]
[461.75244141 139.38076782]
[446.98544312 142.01445007]
[432.21847534 144.64814758]
[417.45150757 147.28182983]
[402.68450928 149.91551208]
[387.91754150 152.54920959]
[373.15054321 155.18289185]
[358.38357544 157.81657410]
[372.59265137 162.62307739]
[385.20053101 170.74964905]
[395.44592285 181.70555115]
[402.71014404 194.82923889]
[406.55453491 209.32823181]
[406.74697876 224.32699585]
[403.27584839 238.91983032]
[396.35073853 252.22558594]
[386.38980103 263.44073486]
[373.99456787 271.88812256]
[359.91351318 277.05758667]
[344.99688721 278.63702393]
[330.14547729 276.53103638]
[316.25604248 270.86679077]
[304.16729736 261.98632812]
[294.60925293 250.42588806]
[288.15905762 236.88354492]
[285.20620728 222.17706299]
[285.92898560 207.19448853]
[290.28375244 192.84053040]
[298.00756836 179.98197937]
[308.63403320 169.39526367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[3 98]
[4 97]
[5 96]
[7 93]
[8 92]
[9 91]
[11 90]
[12 89]
[13 88]
[14 87]
[15 86]
[16 85]
[21 78]
[22 77]
[23 76]
[24 75]
[25 74]
[26 73]
[27 72]
[28 71]
[29 70]
[31 69]
[32 68]
[33 67]
[36 66]
[37 65]
[39 64]
[40 63]
[41 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 55]
[49 54]
[102 155]
[103 154]
[104 153]
[105 152]
[106 151]
[107 150]
[108 149]
[109 148]
[119 147]
[120 146]
[121 145]
[123 143]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
