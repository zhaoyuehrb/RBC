%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAACGAGUGGAGACACGAGGACCAGCGCGAGCGGUCCCGGUGGGCUACCCUCCCCCUGCGACGACCCCCCCUCGCUCUGACCGACUGGUCCCCUAAACGGUGGCGGCGGUUUUUGGUCGUUGGGCCCCGGGAUUUAGGACCAACAUUUGAAGACCCGAAGGGGAACUGCAACCAUGAAUGAAGAAAAUAUAGAUGGAACAAAUGGAUGCAGUAAAGUUCGAACUGGUAUUCAGAAUGAAGCAGCAUUACUUG\
CUUUGAUGGAAAAGACUGGUU\
) } def
/len { sequence length } bind def

/coor [
[100.66993713 136.78852844]
[105.80271149 150.88301086]
[96.88951874 162.94763184]
[81.90903473 162.18267822]
[74.27111053 149.27290344]
[80.81332397 135.77423096]
[84.00640869 121.11802673]
[76.51617432 120.73542023]
[66.68742371 132.06658936]
[56.85866928 143.39776611]
[53.61747360 151.89541626]
[46.85361862 154.80090332]
[36.89698792 166.01989746]
[27.00413704 177.29515076]
[17.17538261 188.62632751]
[14.08228779 206.79696655]
[-2.74384975 211.83926392]
[-12.44346142 223.28118896]
[-22.14307404 234.72309875]
[-21.03190041 250.26025391]
[-31.03167915 261.72579956]
[-45.85082626 262.68939209]
[-55.55043793 274.13131714]
[-65.25005341 285.57324219]
[-74.94966125 297.01516724]
[-84.64927673 308.45706177]
[-87.79388428 316.99093628]
[-94.52435303 319.97296143]
[-104.35311127 331.30413818]
[-106.93202209 347.49923706]
[-122.34151459 353.10989380]
[-134.72962952 342.36434937]
[-131.35252380 326.31668091]
[-115.68428802 321.47537231]
[-105.85553741 310.14419556]
[-96.09119415 298.75747681]
[-86.39157867 287.31555176]
[-76.69197083 275.87362671]
[-66.99235535 264.43170166]
[-57.29274750 252.98977661]
[-58.76822281 238.21282959]
[-49.09443283 226.47091675]
[-33.58499527 225.02348328]
[-23.88538170 213.58157349]
[-14.18577003 202.13964844]
[-14.87187004 190.08691406]
[-6.91826773 180.47941589]
[5.84420443 178.79757690]
[15.67295837 167.46640015]
[17.67408180 160.38211060]
[25.67800903 156.06326294]
[35.63463974 144.84428406]
[45.52749252 133.56901550]
[55.35624695 122.23783875]
[65.18499756 110.90666199]
[65.86525726 95.92209625]
[57.10361862 83.74697113]
[48.34198380 71.57183838]
[39.58034897 59.39671326]
[30.81871414 47.22158432]
[6.89306259 46.96974945]
[-7.59864426 20.74650574]
[-20.38602448 12.90540218]
[-33.17340469 5.06429720]
[-45.96078491 -2.77680707]
[-58.74816132 -10.61791134]
[-71.53554535 -18.45901680]
[-84.32292175 -26.30012131]
[-97.11030579 -34.14122391]
[-109.95520782 -25.96994781]
[-125.01277161 -24.19321060]
[-139.29013062 -29.11022377]
[-149.97291565 -39.69508362]
[-154.97993469 -53.81029510]
[-153.36856079 -68.63827515]
[-166.15594482 -76.47937775]
[-178.94331360 -84.32048035]
[-191.73069763 -92.16159058]
[-204.51808167 -100.00269318]
[-218.80163574 -94.23326874]
[-233.57093811 -97.93742371]
[-243.21307373 -109.49136353]
[-244.19116211 -124.32987213]
[-256.97854614 -132.17097473]
[-269.76593018 -140.01208496]
[-282.55331421 -147.85317993]
[-297.73922729 -144.38539124]
[-310.59576416 -152.51954651]
[-313.80816650 -167.01837158]
[-326.59555054 -174.85948181]
[-339.38293457 -182.70059204]
[-355.78173828 -182.59338379]
[-363.83938599 -196.87644958]
[-355.26690674 -210.85658264]
[-338.88287354 -210.15223694]
[-331.54180908 -195.48796082]
[-318.75445557 -187.64686584]
[-305.96707153 -179.80575562]
[-291.58801270 -183.51765442]
[-278.50808716 -175.74781799]
[-274.71218872 -160.64056396]
[-261.92483521 -152.79945374]
[-249.13743591 -144.95835876]
[-236.35006714 -137.11724854]
[-222.68148804 -142.97454834]
[-208.01132202 -139.62040710]
[-198.01226807 -128.13684082]
[-196.67697144 -112.79006958]
[-183.88958740 -104.94896698]
[-171.10221863 -97.10786438]
[-158.31483459 -89.26675415]
[-145.52745056 -81.42565155]
[-133.04254150 -89.58608246]
[-118.19155884 -91.52454376]
[-103.91317749 -86.80345154]
[-93.05624390 -76.30834198]
[-87.81140900 -62.08235931]
[-89.26919556 -46.92860413]
[-76.48181915 -39.08750153]
[-63.69443893 -31.24639511]
[-50.90705872 -23.40529060]
[-38.11967850 -15.56418705]
[-25.33229828 -7.72308254]
[-12.54491901 0.11802217]
[0.24246041 7.95912647]
[7.05664682 4.82593918]
[-3.11429095 -6.19912434]
[4.22833824 -19.27910042]
[18.93709564 -16.33759689]
[20.68502045 -1.44043529]
[27.49920654 -4.57362270]
[29.87092400 -19.38493347]
[32.24264145 -34.19624710]
[34.61436081 -49.00755692]
[27.65577698 -66.07557678]
[39.28966904 -79.23598480]
[41.49325562 -94.07324219]
[43.69684219 -108.91049957]
[45.90042877 -123.74775696]
[48.10401535 -138.58500671]
[50.30760193 -153.42227173]
[39.80042267 -165.00386047]
[39.24761963 -180.63166809]
[48.91020966 -192.92672729]
[64.22581482 -196.08367920]
[77.96286774 -188.61190796]
[83.63516235 -174.03935242]
[78.56440735 -159.24674988]
[65.14485931 -151.21868896]
[62.94127274 -136.38142395]
[60.73768616 -121.54416656]
[58.53409958 -106.70690918]
[56.33051300 -91.86965179]
[54.12692642 -77.03239441]
[61.06838989 -67.15539551]
[59.38028336 -54.79764175]
[49.42567062 -46.63584137]
[47.05395508 -31.82452774]
[44.68223572 -17.01321602]
[42.31051636 -2.20190477]
[52.06109238 20.66380119]
[42.99384308 38.45994949]
[51.75547791 50.63507462]
[60.51711273 62.81020355]
[69.27874756 74.98533630]
[78.04038239 87.16046143]
[93.96739197 69.63283539]
[122.06491852 70.94524384]
[136.05741882 65.54061890]
[150.04991150 60.13599014]
[164.04241943 54.73136520]
[178.03491211 49.32674026]
[192.02740479 43.92211533]
[202.11285400 31.73218727]
[216.77310181 34.36405563]
[230.76559448 28.95943260]
[244.75808716 23.55480576]
[258.75057983 18.15018082]
[256.57907104 3.24272466]
[257.77975464 -11.77413654]
[262.29238892 -26.14716339]
[269.89062500 -39.15541077]
[280.19335938 -50.14638901]
[292.68377686 -58.56879807]
[306.73538208 -64.00016785]
[321.64337158 -66.16806793]
[336.65994263 -64.96376038]
[351.03186035 -60.44764709]
[364.03826904 -52.84625626]
[375.02676392 -42.54086685]
[383.44613647 -30.04840088]
[388.87411499 -15.99546814]
[391.03839111 -1.08696032]
[389.83044434 13.92931747]
[385.31085205 28.30015564]
[377.70629883 41.30471802]
[367.39825439 52.29070282]
[354.90374756 60.70705795]
[340.84951782 66.13162231]
[325.94049072 68.29229736]
[310.92449951 67.08071136]
[296.55474854 62.55763245]
[283.55203247 54.94993973]
[272.56854248 44.63922882]
[264.15521240 32.14268112]
[250.16271973 37.54730606]
[236.17021179 42.95193100]
[222.17771912 48.35655594]
[213.09310913 60.15990829]
[197.43203735 57.91461563]
[183.43954468 63.31924057]
[169.44703674 68.72386169]
[155.45454407 74.12849426]
[141.46203613 79.53311920]
[127.46954346 84.93774414]
[125.28986359 92.11402130]
[140.16055298 94.07937622]
[155.07731628 92.50131226]
[164.63308716 104.06362152]
[160.27398682 118.41626740]
[145.90208435 122.71140289]
[134.38221741 113.10369873]
[120.93050385 106.46658325]
[118.75083160 113.64286041]
[127.37381744 125.91657257]
[135.99681091 138.19029236]
[144.61979675 150.46400452]
[153.24279785 162.73771667]
[161.86578369 175.01142883]
[170.48876953 187.28514099]
[189.14483643 194.98747253]
[189.92767334 214.32995605]
[198.82681274 226.40493774]
[207.72596741 238.47991943]
[221.44200134 237.35874939]
[233.82687378 243.10650635]
[241.69958496 254.12930298]
[243.09628296 267.49392700]
[237.75926208 279.70812988]
[246.52090454 291.88323975]
[255.28253174 304.05838013]
[264.04415894 316.23348999]
[272.80581665 328.40863037]
[281.56744385 340.58377075]
[290.32907104 352.75888062]
[299.09072876 364.93402100]
[314.72741699 367.22946167]
[324.09396362 379.95907593]
[321.63333130 395.57064819]
[308.80538940 404.80206299]
[293.22070312 402.17651367]
[284.12542725 389.25167847]
[286.91558838 373.69564819]
[278.15396118 361.52050781]
[269.39230347 349.34539795]
[260.63067627 337.17025757]
[251.86904907 324.99514771]
[243.10740662 312.82000732]
[234.34577942 300.64486694]
[225.58413696 288.46975708]
[209.15666199 288.91323853]
[195.57380676 279.37054443]
[190.31665039 263.44967651]
[195.65100098 247.37907410]
[186.75184631 235.30409241]
[177.85269165 223.22911072]
[167.69981384 222.62364197]
[159.36843872 216.41555786]
[155.73442078 206.44830322]
[158.21505737 195.90812683]
[149.59207153 183.63441467]
[140.96908569 171.36070251]
[132.34608459 159.08699036]
[123.72309875 146.81327820]
[115.10010529 134.53956604]
[106.47711182 122.26585388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 55]
[9 54]
[10 53]
[12 52]
[13 51]
[14 49]
[15 48]
[17 45]
[18 44]
[19 43]
[22 40]
[23 39]
[24 38]
[25 37]
[26 36]
[28 35]
[29 34]
[56 166]
[57 165]
[58 164]
[59 163]
[60 162]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[83 104]
[84 103]
[85 102]
[86 101]
[89 98]
[90 97]
[91 96]
[131 160]
[132 159]
[133 158]
[134 157]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[168 215]
[169 214]
[170 213]
[171 212]
[172 211]
[173 210]
[175 208]
[176 207]
[177 206]
[178 205]
[224 276]
[225 275]
[226 274]
[227 273]
[228 272]
[229 271]
[230 270]
[232 266]
[233 265]
[234 264]
[239 260]
[240 259]
[241 258]
[242 257]
[243 256]
[244 255]
[245 254]
[246 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
