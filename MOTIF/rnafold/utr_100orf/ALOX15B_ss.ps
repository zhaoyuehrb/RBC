%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:50:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCACUGGGCUUGGAGUCAGUGGCAAUAACCAGGGGCAAUAACCAGGCGUGUCCCAGGGGGGAGCCCCGCUCUGCAGCCCUGUGCGCCGUAGAGAGCUGGACUUAGGCUGGCAGCAUGGCCGAGUUCAGGGUCAGGGUGUCCACCGGAGAAGCCUUCGGGGCUGGCACAUGGGACAAAGUGUCUGUCAGCAUCGUGGGGACCCGGGGAGAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[-15.92425156 265.35797119]
[-23.95064926 278.02987671]
[-31.97704697 290.70175171]
[-40.00344467 303.37365723]
[-41.95027924 312.29351807]
[-48.23888397 316.16973877]
[-56.44789124 328.72409058]
[-64.65689850 341.27847290]
[-72.86590576 353.83285522]
[-68.97032166 370.88919067]
[-78.43131256 385.20266724]
[-94.98503876 388.18276978]
[-103.01143646 400.85467529]
[-111.03783417 413.52658081]
[-103.83932495 427.09408569]
[-104.40501404 442.44253540]
[-112.58274078 455.44332886]
[-126.17273712 462.59927368]
[-141.51936340 461.98547363]
[-154.49444580 453.76702881]
[-161.60775757 440.15466309]
[-160.94586182 424.81005859]
[-152.68679810 411.86077881]
[-139.05220032 404.79019165]
[-123.70973206 405.50018311]
[-115.68333435 392.82827759]
[-107.65693665 380.15637207]
[-112.20964050 368.10504150]
[-108.94250488 355.44253540]
[-98.83100891 346.84616089]
[-85.42027283 345.62384033]
[-77.21126556 333.06945801]
[-69.00225830 320.51510620]
[-60.79325485 307.96072388]
[-52.67533875 295.34725952]
[-44.64894104 282.67535400]
[-36.62254333 270.00347900]
[-28.59614754 257.33157349]
[-31.59535217 252.16970825]
[-33.04742813 246.33750916]
[-32.81560516 240.29139709]
[-30.89580154 234.51098633]
[-27.41872978 229.46109009]
[-22.64122581 225.55429077]
[-16.92737579 223.11735535]
[-10.72080421 222.36386108]
[-4.51024437 223.37579346]
[4.75696659 211.58091736]
[14.02417755 199.78605652]
[9.03932476 184.14329529]
[14.41604900 168.45501709]
[28.22217751 158.97013855]
[45.12729645 159.59107971]
[54.22278214 147.66329956]
[63.31827164 135.73550415]
[72.41375732 123.80772400]
[65.47708893 111.66091919]
[63.62762070 97.79579163]
[49.16241455 93.82617188]
[34.69721222 89.85655975]
[20.23200607 85.88694763]
[4.51185751 90.55695343]
[-7.20484114 79.08302307]
[-2.86495423 63.26855469]
[13.06701469 59.38211441]
[24.20162201 71.42173767]
[38.66682434 75.39135742]
[53.13203049 79.36096954]
[67.59723663 83.33058929]
[68.93744659 80.94937897]
[70.45232391 78.67528534]
[60.35633469 67.58155060]
[50.26034164 56.48781586]
[40.16435242 45.39408112]
[30.06836128 34.30034637]
[19.97237015 23.20660973]
[4.96157217 18.20796013]
[2.11764860 3.58737922]
[-7.97834206 -7.50635624]
[-23.59496307 -6.69691801]
[-36.04708099 -16.15623856]
[-39.45518875 -31.41791725]
[-32.21007919 -45.27585602]
[-17.73267555 -51.18675613]
[-2.85876250 -46.35967636]
[5.38865328 -33.07381439]
[3.11539364 -17.60234642]
[13.21138382 -6.50861168]
[27.50004959 -2.30345964]
[31.06610680 13.11061859]
[41.16209793 24.20435524]
[51.25808716 35.29809189]
[61.35408020 46.39182663]
[71.45007324 57.48556137]
[81.54605865 68.57929993]
[86.82149506 66.02742767]
[92.43778229 64.35422516]
[98.24965668 63.60295486]
[100.62834167 48.79276276]
[103.00702667 33.98256683]
[105.38571167 19.17237282]
[107.76439667 4.36217880]
[110.14308167 -10.44801617]
[112.52176666 -25.25821114]
[114.90045166 -40.06840515]
[113.17191315 -49.03310776]
[117.42226410 -55.07514954]
[120.01510620 -69.84935760]
[122.60794830 -84.62356567]
[125.20078278 -99.39776611]
[127.79362488 -114.17197418]
[118.51419830 -126.96524811]
[121.08133698 -142.55964661]
[133.97200012 -151.70329285]
[149.53839111 -148.97143555]
[158.54524231 -135.98481750]
[155.64895630 -120.44818115]
[142.56784058 -111.57913208]
[139.97499084 -96.80492401]
[137.38215637 -82.03072357]
[134.78930664 -67.25651550]
[132.19647217 -52.48230743]
[129.71064758 -37.68972015]
[127.33195496 -22.87952614]
[124.95327759 -8.06933117]
[122.57459259 6.74086332]
[120.19590759 21.55105782]
[117.81722260 36.36125183]
[115.43853760 51.17144775]
[113.05985260 65.98164368]
[119.59305573 69.27671051]
[125.33622742 73.81061554]
[130.05778503 79.40053558]
[133.56733704 85.82107544]
[135.72338867 92.81333923]
[136.43898010 100.09538269]
[151.10969543 103.22113800]
[165.78039551 106.34689331]
[180.45111084 109.47264862]
[195.56065369 104.78093719]
[206.39619446 115.00053406]
[221.06689453 118.12628937]
[235.73760986 121.25204468]
[250.40830994 124.37780762]
[265.39416504 123.72652435]
[279.73840332 119.33979797]
[294.08261108 114.95306396]
[308.42681885 110.56633759]
[322.77105713 106.17961121]
[337.11526489 101.79287720]
[347.89663696 89.43594360]
[363.93444824 92.85951233]
[368.73034668 108.54170990]
[357.35073853 120.35003662]
[341.50198364 116.13710022]
[327.15777588 120.52382660]
[312.81356812 124.91056061]
[298.46932983 129.29728699]
[284.12512207 133.68402100]
[269.78091431 138.07073975]
[269.40103149 145.56111145]
[268.26141357 168.03224182]
[282.08825684 173.84764099]
[295.91506958 179.66304016]
[309.74191284 185.47845459]
[323.56872559 191.29385376]
[337.39553833 197.10925293]
[351.22238159 202.92465210]
[348.03546143 188.26712036]
[357.39233398 176.54325867]
[372.39163208 176.40023804]
[381.97036743 187.94355774]
[379.06350708 202.65919495]
[365.81448364 209.69338989]
[379.18450928 216.49356079]
[392.55453491 223.29374695]
[405.92456055 230.09393311]
[422.78359985 231.88520813]
[425.72937012 248.58128357]
[410.50128174 256.03387451]
[399.12438965 243.46395874]
[385.75436401 236.66377258]
[372.38433838 229.86358643]
[359.01431274 223.06341553]
[345.40698242 216.75148010]
[331.58013916 210.93608093]
[317.75332642 205.12068176]
[303.92648315 199.30526733]
[290.09967041 193.48986816]
[276.27285767 187.67446899]
[262.44601440 181.85906982]
[252.30360413 174.18719482]
[245.81192017 164.80461121]
[243.07887268 155.02972412]
[243.79402161 146.09971619]
[247.28256226 139.04850769]
[232.61184692 135.92276001]
[217.94114685 132.79699707]
[203.27044678 129.67124939]
[189.21023560 134.58653259]
[177.32534790 124.14335632]
[162.65464783 121.01760101]
[147.98393250 117.89184570]
[133.31323242 114.76609039]
[112.65549469 134.17085266]
[84.34154510 132.90321350]
[75.24605560 144.83099365]
[66.15057373 156.75878906]
[57.05508423 168.68656921]
[61.98073578 181.55741882]
[59.92098618 195.07432556]
[51.51935959 205.72392273]
[39.05360794 210.79165649]
[25.81904030 209.05326843]
[16.55183029 220.84812927]
[7.28461838 232.64300537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[4 35]
[6 34]
[7 33]
[8 32]
[9 31]
[12 27]
[13 26]
[14 25]
[47 216]
[48 215]
[49 214]
[53 209]
[54 208]
[55 207]
[56 206]
[58 69]
[59 68]
[60 67]
[61 66]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[76 90]
[78 88]
[79 87]
[98 130]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
[136 204]
[137 203]
[138 202]
[139 201]
[141 199]
[142 198]
[143 197]
[144 196]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
[162 191]
[163 190]
[164 189]
[165 188]
[166 187]
[167 186]
[168 185]
[174 184]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
