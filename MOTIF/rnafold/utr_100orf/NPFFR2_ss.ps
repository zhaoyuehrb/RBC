%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGGAGCCAAGUAAUGGUGAUACUGAUGCUUCCUUUUCUUUGCCGCGCUCGGAUUCUGAGUUUCACAAGAAUGUACCUGGGUGCCCCUUAGCGGGAUAUGAAUAGCUUCUUCGGAACCCCAGCGGCCAGCUGGUGCCUCCUGGAAAGUGACGUCUCAUCUGCACCGGACAAGGAGGCGGGGAGGGAGCGCAGAGCAC\
) } def
/len { sequence length } bind def

/coor [
[64.56156158 381.96578979]
[52.50327301 373.04403687]
[47.87555313 358.77438354]
[41.89009476 372.52844238]
[47.43726349 387.08407593]
[41.17122650 400.94738770]
[27.26046181 406.14605713]
[21.27500343 419.90014648]
[15.28954506 433.65420532]
[9.30408669 447.40826416]
[13.81767654 462.80328369]
[4.47800112 475.84744263]
[-11.55033875 476.53436279]
[-21.97177315 464.33709717]
[-18.79187012 448.61236572]
[-4.44997787 441.42279053]
[1.53548050 427.66873169]
[7.52093887 413.91467285]
[13.50639725 400.16061401]
[7.82977390 386.43795776]
[13.70394802 372.40411377]
[28.13603020 366.54296875]
[34.12149048 352.78890991]
[39.22705841 338.68453979]
[43.43238831 324.28610229]
[47.63771439 309.88766479]
[46.49416351 302.57852173]
[52.02474594 295.29608154]
[56.45684814 280.96582031]
[60.88895035 266.63555908]
[65.32105255 252.30529785]
[69.75315094 237.97502136]
[74.18525696 223.64476013]
[78.61735535 209.31449890]
[83.04946136 194.98423767]
[87.48155975 180.65397644]
[91.91365814 166.32369995]
[96.34576416 151.99343872]
[100.77786255 137.66317749]
[87.81610107 139.72335815]
[73.75737000 137.08204651]
[60.35297012 129.31410217]
[49.48748016 116.65011597]
[42.93541336 100.00846863]
[42.11439514 80.93858337]
[47.86645508 61.47757721]
[34.68325806 54.32192993]
[21.50006104 47.16628265]
[8.31686211 40.01063538]
[-4.86633587 32.85498810]
[-18.04953384 25.69934082]
[-31.23273277 18.54369354]
[-44.41593170 11.38804722]
[-57.81845093 4.65214109]
[-71.42693329 -1.65730965]
[-85.03541565 -7.96676064]
[-98.64390564 -14.27621174]
[-112.25238800 -20.58566284]
[-124.76796722 -11.68309402]
[-140.05957031 -10.24701118]
[-154.01383972 -16.66371536]
[-162.87713623 -29.20714188]
[-164.26527405 -44.50317764]
[-157.80487061 -58.43725967]
[-145.23371887 -67.26119232]
[-129.93341064 -68.60137939]
[-116.01964569 -62.09732437]
[-107.23516083 -49.49858093]
[-105.94293213 -34.19414520]
[-92.33444977 -27.88469505]
[-78.72596741 -21.57524490]
[-65.11748505 -15.26579380]
[-51.50899887 -8.95634270]
[-48.82634735 -9.80118847]
[-45.64585114 -9.62899494]
[-42.35515976 -8.24420834]
[-39.40565872 -5.59578371]
[-37.26028442 -1.79515088]
[-24.07708549 5.36049652]
[-10.89388752 12.51614380]
[2.28931117 19.67179108]
[15.47250938 26.82743835]
[28.65570831 33.98308563]
[41.83890533 41.13873291]
[55.02210236 48.29438019]
[66.77063751 38.96850586]
[62.79313278 24.50546837]
[58.81562424 10.04243088]
[45.63632584 0.89444709]
[44.71516037 -15.12213802]
[56.75876617 -25.72077179]
[72.52832794 -22.77108955]
[79.92677307 -8.53583431]
[73.27866364 6.06492329]
[77.25616455 20.52795982]
[81.23367310 34.99099731]
[88.71475983 35.52335739]
[89.77947998 20.56119156]
[90.84420013 5.59902763]
[91.90891266 -9.36313725]
[88.29814148 -23.92206192]
[101.02881622 -31.85490799]
[112.50727081 -22.19856262]
[106.87107849 -8.29841805]
[105.80635834 6.66374731]
[104.74163818 21.62591171]
[103.67692566 36.58807755]
[111.15800476 37.12043762]
[117.14346313 23.36637115]
[123.12892151 9.61230755]
[120.74086761 -6.61203384]
[133.76374817 -16.57880211]
[148.80075073 -10.03504181]
[150.38308716 6.28758907]
[136.88298035 15.59776592]
[130.89752197 29.35182953]
[124.91207123 43.10589600]
[130.93061829 47.58106613]
[142.96769714 56.53140640]
[148.98623657 61.00658035]
[160.43450928 51.31446838]
[171.88278198 41.62235641]
[183.33105469 31.93024635]
[194.77932739 22.23813629]
[197.53506470 6.43353367]
[211.67835999 -1.13923454]
[226.35969543 5.32901192]
[230.31678772 20.87638855]
[220.51411438 33.57627487]
[204.47145081 33.68641281]
[193.02316284 43.37852097]
[181.57489014 53.07063293]
[170.12661743 62.76274490]
[158.67834473 72.45485687]
[151.14425659 103.23681641]
[131.81065369 120.17925262]
[146.36381531 123.81318665]
[160.91697693 127.44712067]
[175.47013855 131.08105469]
[190.02330017 134.71498108]
[204.57646179 138.34892273]
[219.12962341 141.98284912]
[229.42550659 129.39004517]
[244.12869263 122.57012177]
[260.27609253 122.84154510]
[274.63790894 130.09931946]
[284.36361694 142.84606934]
[287.54760742 158.50073242]
[302.15631104 161.90447998]
[316.76501465 165.30821228]
[325.84301758 164.20756531]
[331.57659912 168.88272095]
[346.12976074 172.51664734]
[358.67691040 163.18374634]
[374.28454590 164.15109253]
[385.58322144 174.96191406]
[387.23806763 190.51170349]
[378.46768188 203.45829773]
[363.41317749 207.68872070]
[349.18286133 201.20550537]
[342.49584961 187.06980896]
[327.94268799 183.43588257]
[313.36129761 179.91693115]
[298.75256348 176.51319885]
[284.14385986 173.10945129]
[275.98358154 184.33531189]
[264.12268066 191.62452698]
[250.33572388 193.84771729]
[236.70040894 190.63639832]
[225.28430176 182.44354248]
[217.83139038 170.48010254]
[215.49569702 156.53601074]
[200.94253540 152.90208435]
[186.38937378 149.26814270]
[171.83621216 145.63421631]
[157.28305054 142.00027466]
[142.72988892 138.36634827]
[128.17672729 134.73240662]
[115.10813141 142.09527588]
[110.67602539 156.42553711]
[106.24392700 170.75581360]
[101.81182098 185.08607483]
[97.37972260 199.41633606]
[92.94761658 213.74659729]
[88.51551819 228.07685852]
[84.08341980 242.40713501]
[79.65131378 256.73739624]
[75.21921539 271.06765747]
[70.78710938 285.39791870]
[66.35501099 299.72817993]
[62.03615952 314.09298706]
[57.83083344 328.49142456]
[53.62550354 342.88989258]
[66.31359100 334.88909912]
[81.28873444 335.75219727]
[92.97360229 345.15771484]
[97.01627350 359.60269165]
[91.91109467 373.70718384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[7 19]
[8 18]
[9 17]
[10 16]
[24 193]
[25 192]
[26 191]
[28 190]
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 181]
[38 180]
[39 179]
[46 85]
[47 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[86 96]
[87 95]
[88 94]
[108 117]
[109 116]
[110 115]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[136 178]
[137 177]
[138 176]
[139 175]
[140 174]
[141 173]
[142 172]
[148 165]
[149 164]
[150 163]
[152 162]
[153 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
