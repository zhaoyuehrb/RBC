%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGGCGCGGAUUCCCGGAAGAACCCGCAGCAGCUCCCAGGAUGAACUGGUUGCAGUGGCUGCUGCUGCUGCGGGGGCGCUGAGAGGACACGAGCUCUAUGCCUUUCCGGCUGCUCAUCCCGCUCGGCCUCCUGUGCGCGCUGCUGCCUCAGCACCAUGGUGCGCCAGGUCCCGACGGCUCCGCGCCAGAUCCCGCCC\
) } def
/len { sequence length } bind def

/coor [
[204.92488098 363.94522095]
[204.92153931 348.76745605]
[210.40492249 334.61483765]
[220.63343811 323.40136719]
[234.22375488 316.64358521]
[232.81913757 301.70947266]
[231.41450500 286.77539062]
[230.00988770 271.84130859]
[228.60527039 256.90722656]
[227.20063782 241.97312927]
[225.79602051 227.03903198]
[224.39140320 212.10494995]
[222.98677063 197.17085266]
[206.45291138 192.02593994]
[193.56323242 180.35144043]
[186.75320435 164.26815796]
[187.34521484 146.73764038]
[173.80895996 140.27467346]
[160.27270508 133.81172180]
[146.73645020 127.34877014]
[133.20019531 120.88581085]
[119.66393280 114.42285156]
[106.12767792 107.95989990]
[101.61762238 115.11238098]
[91.27975464 118.38927460]
[78.64560699 113.94705200]
[63.65705490 113.36107635]
[48.66850281 112.77510834]
[33.67995453 112.18914032]
[18.69140434 111.60317230]
[3.70285368 111.01720428]
[-11.28569698 110.43123627]
[-26.27424622 109.84526825]
[-41.26279831 109.25930023]
[-56.25134659 108.67333221]
[-71.23989868 108.08735657]
[-76.46678162 121.25439453]
[-91.02226257 129.92915344]
[-110.68276978 127.92313385]
[-125.51771545 130.14221191]
[-140.35266113 132.36128235]
[-155.18760681 134.58035278]
[-164.38403320 147.43342590]
[-179.98883057 149.93659973]
[-192.74395752 140.60481262]
[-195.08201599 124.97441864]
[-185.61587524 112.31867218]
[-169.96163940 110.14600372]
[-157.40669250 119.74540710]
[-142.57173157 117.52633667]
[-127.73678589 115.30725861]
[-112.90184021 113.08818817]
[-112.31631470 105.61107635]
[-111.14527130 90.65686035]
[-110.55975342 83.17974854]
[-124.86843872 78.67848206]
[-139.17712402 74.17720795]
[-153.48582458 69.67594147]
[-170.40937805 70.69053650]
[-176.06922913 54.70922852]
[-162.27928162 44.84649277]
[-148.98454285 55.36725235]
[-134.67585754 59.86852264]
[-120.36717224 64.36978912]
[-106.05848694 68.87106323]
[-79.65148163 74.12379456]
[-70.65393066 93.09880829]
[-55.66537857 93.68477631]
[-40.67682648 94.27074432]
[-25.68827820 94.85671234]
[-10.69972801 95.44268799]
[4.28882265 96.02865601]
[19.27737236 96.61462402]
[34.26592255 97.20059204]
[49.25447464 97.78656006]
[64.24302673 98.37252808]
[79.23157501 98.95849609]
[88.47880554 87.14796448]
[84.31420898 72.73768616]
[80.14960480 58.32741165]
[75.98500824 43.91713333]
[66.16427612 39.21780014]
[60.66812897 30.07516670]
[61.10658646 19.63655090]
[67.09317780 11.34343624]
[63.38100052 -3.18996382]
[59.66882324 -17.72336388]
[55.95664597 -32.25676346]
[41.48719788 -37.86165237]
[33.10395432 -50.91925049]
[34.03043747 -66.40864563]
[43.91040039 -78.37384033]
[58.94478989 -82.21398926]
[73.35258484 -76.45246124]
[81.59368134 -63.30469131]
[80.49922180 -47.82625961]
[70.49004364 -35.96894455]
[74.20222473 -21.43554306]
[77.91440582 -6.90214300]
[81.62657928 7.63125753]
[96.11591339 20.42834854]
[90.39528656 39.75253296]
[94.55988312 54.16281128]
[98.72448730 68.57308960]
[102.88908386 82.98336792]
[112.59063721 94.42364502]
[126.12689209 100.88659668]
[139.66314697 107.34955597]
[153.19940186 113.81251526]
[166.73565674 120.27546692]
[180.27191162 126.73842621]
[193.80816650 133.20138550]
[200.29905701 126.29190063]
[208.19699097 121.07759857]
[217.07063293 117.83431244]
[226.43740845 116.73044586]
[235.78977966 117.81830597]
[244.62272644 121.03161621]
[252.46096802 126.18955231]
[258.88464355 133.00685120]
[263.55172729 141.10963440]
[266.21618652 150.05586243]
[281.21572876 150.17308044]
[296.21527100 150.29029846]
[304.82919312 147.22607422]
[311.44787598 150.52839661]
[326.44375610 150.88003540]
[341.43960571 151.23167419]
[356.43548584 151.58331299]
[365.04888916 141.22210693]
[377.87060547 137.76646423]
[390.15853882 142.26229858]
[397.50085449 152.85668945]
[412.48937988 153.44265747]
[427.47793579 154.02862549]
[442.46649170 154.61459351]
[451.17199707 151.82109070]
[457.68420410 155.32867432]
[472.66174316 156.14881897]
[487.63931274 156.96897888]
[502.61688232 157.78913879]
[517.59442139 158.60929871]
[532.57202148 159.42944336]
[547.54956055 160.24960327]
[562.54772949 160.48403931]
[577.54357910 160.13240051]
[592.53948975 159.78076172]
[607.53533936 159.42912292]
[623.22839355 153.01313782]
[633.73791504 166.31677246]
[623.86352539 180.09837341]
[607.88702393 174.42500305]
[592.89111328 174.77664185]
[577.89526367 175.12828064]
[562.89935303 175.47991943]
[571.74633789 187.59320068]
[567.94665527 202.10398865]
[554.29840088 208.32690430]
[540.85174561 201.67956543]
[537.50842285 187.05690002]
[546.72943115 175.22717285]
[531.75183105 174.40701294]
[516.77429199 173.58685303]
[501.79672241 172.76669312]
[486.81915283 171.94654846]
[471.84161377 171.12638855]
[456.86404419 170.30622864]
[441.88052368 169.60314941]
[426.89196777 169.01718140]
[411.90341187 168.43121338]
[396.91488647 167.84524536]
[385.07086182 179.77987671]
[367.92211914 179.45320129]
[356.08386230 166.57919312]
[341.08798218 166.22755432]
[326.09210205 165.87591553]
[311.09622192 165.52427673]
[296.09805298 165.28984070]
[281.09851074 165.17262268]
[266.09896851 165.05540466]
[256.31317139 184.35917664]
[237.92086792 195.76623535]
[239.32548523 210.70031738]
[240.73011780 225.63441467]
[242.13473511 240.56849670]
[243.53935242 255.50259399]
[244.94398499 270.43667603]
[246.34860229 285.37075806]
[247.75321960 300.30487061]
[249.15785217 315.23895264]
[263.76986694 319.34417725]
[275.90988159 328.45376587]
[283.93600464 341.33578491]
[286.76275635 356.24798584]
[284.00790405 371.17364502]
[276.04397583 384.09417725]
[263.94802856 393.26217651]
[249.35594177 397.43777466]
[234.24118042 396.05624390]
[220.64790344 389.30444336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[17 112]
[18 111]
[19 110]
[20 109]
[21 108]
[22 107]
[23 106]
[26 77]
[27 76]
[28 75]
[29 74]
[30 73]
[31 72]
[32 71]
[33 70]
[34 69]
[35 68]
[36 67]
[39 52]
[40 51]
[41 50]
[42 49]
[55 65]
[56 64]
[57 63]
[58 62]
[78 105]
[79 104]
[80 103]
[81 102]
[85 100]
[86 99]
[87 98]
[88 97]
[122 180]
[123 179]
[124 178]
[126 177]
[127 176]
[128 175]
[129 174]
[133 171]
[134 170]
[135 169]
[136 168]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 155]
[146 154]
[147 153]
[148 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
