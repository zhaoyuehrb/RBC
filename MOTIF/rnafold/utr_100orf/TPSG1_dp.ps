%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TPSG1)
} def

/sequence { (\
CCAUGGCCCUUGGGGCCUGUGGCCUCCUGCUGCUCCUGGCUGUGCCCGGUGUGUCCCUCAGGACUUUGCAGCCAGGGUGUGGCCGGCCGCAGGUUUCGGAUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.110068934 ubox
1 14 0.010183304 ubox
1 22 0.037518756 ubox
1 93 0.017604516 ubox
1 99 0.070908061 ubox
2 12 0.111175424 ubox
2 13 0.009867961 ubox
2 21 0.038065885 ubox
2 92 0.017757905 ubox
2 98 0.070653984 ubox
2 102 0.213242223 ubox
3 11 0.109989695 ubox
3 18 0.003897551 ubox
3 20 0.037995526 ubox
3 101 0.215802939 ubox
4 19 0.035592960 ubox
4 98 0.004491872 ubox
4 100 0.206264109 ubox
4 102 0.052544734 ubox
5 11 0.008766311 ubox
5 17 0.068432449 ubox
5 18 0.004784385 ubox
5 97 0.007399856 ubox
5 101 0.058997912 ubox
6 10 0.007879102 ubox
6 16 0.077644204 ubox
6 17 0.003412370 ubox
6 96 0.005398721 ubox
7 13 0.015564893 ubox
7 14 0.016700405 ubox
7 15 0.082079326 ubox
7 99 0.295018086 ubox
8 12 0.015585909 ubox
8 13 0.016789142 ubox
8 14 0.082622413 ubox
8 98 0.292157347 ubox
8 99 0.453729325 ubox
9 13 0.082032201 ubox
9 98 0.448582207 ubox
9 99 0.317342398 ubox
10 98 0.224059909 ubox
10 99 0.588959821 ubox
10 100 0.080854087 ubox
11 98 0.740771298 ubox
11 99 0.073119936 ubox
12 95 0.005508702 ubox
12 96 0.014924508 ubox
12 97 0.979158658 ubox
13 95 0.012885741 ubox
13 96 0.983477683 ubox
13 97 0.061826013 ubox
14 94 0.009829638 ubox
14 95 0.987603026 ubox
14 96 0.049817016 ubox
14 97 0.015373146 ubox
15 94 0.995133809 ubox
15 95 0.035271951 ubox
15 96 0.006053767 ubox
16 93 0.996959654 ubox
17 92 0.997620941 ubox
18 91 0.998780103 ubox
19 90 0.999247357 ubox
20 89 0.998864572 ubox
21 88 0.999227345 ubox
22 87 0.999255171 ubox
23 86 0.996879746 ubox
23 99 0.025611383 ubox
24 85 0.992234056 ubox
24 86 0.030805259 ubox
24 98 0.025592733 ubox
24 99 0.007674251 ubox
25 82 0.005296955 ubox
25 85 0.041716628 ubox
25 98 0.007588863 ubox
25 100 0.017506463 ubox
26 76 0.003342571 ubox
26 81 0.006177926 ubox
26 82 0.110365850 ubox
26 85 0.022527443 ubox
26 86 0.061281717 ubox
26 93 0.028348201 ubox
26 99 0.018704656 ubox
27 75 0.003392287 ubox
27 81 0.110077306 ubox
27 82 0.422347052 ubox
27 85 0.090352097 ubox
27 86 0.005113705 ubox
27 92 0.028485757 ubox
27 98 0.018675643 ubox
27 99 0.003987297 ubox
28 74 0.003382915 ubox
28 79 0.009841298 ubox
28 81 0.421322355 ubox
28 85 0.010934464 ubox
28 91 0.028482766 ubox
28 98 0.004024022 ubox
29 78 0.011591875 ubox
29 80 0.430983375 ubox
29 83 0.895322425 ubox
29 84 0.048590118 ubox
29 90 0.028488578 ubox
29 94 0.008769575 ubox
29 97 0.005010466 ubox
30 71 0.003418993 ubox
30 77 0.011401868 ubox
30 79 0.432114751 ubox
30 82 0.898137117 ubox
30 89 0.028431983 ubox
30 92 0.024425511 ubox
30 93 0.006690609 ubox
31 70 0.003418533 ubox
31 79 0.041380493 ubox
31 81 0.894506562 ubox
31 91 0.025119217 ubox
31 92 0.003317050 ubox
32 69 0.003417726 ubox
32 78 0.390702679 ubox
32 80 0.895499526 ubox
32 87 0.026937357 ubox
32 88 0.006884052 ubox
32 90 0.025352348 ubox
33 68 0.003401826 ubox
33 77 0.404692581 ubox
33 79 0.897036978 ubox
33 86 0.026046899 ubox
33 89 0.025341455 ubox
34 76 0.050014289 ubox
34 77 0.859047186 ubox
34 85 0.021799760 ubox
35 75 0.035473313 ubox
35 76 0.995022096 ubox
35 77 0.075541011 ubox
35 85 0.005560792 ubox
35 86 0.005118275 ubox
36 75 0.996970894 ubox
36 76 0.057209193 ubox
36 85 0.005707063 ubox
36 86 0.027321382 ubox
37 74 0.998592489 ubox
37 75 0.028188323 ubox
37 85 0.030016384 ubox
38 46 0.003172756 ubox
38 73 0.999240945 ubox
38 84 0.038370690 ubox
39 45 0.003198025 ubox
39 72 0.999252427 ubox
39 83 0.038385230 ubox
40 44 0.003191621 ubox
40 71 0.999232594 ubox
40 82 0.038384608 ubox
41 70 0.996519619 ubox
41 81 0.038121122 ubox
42 47 0.004465068 ubox
42 64 0.006276204 ubox
42 69 0.993975133 ubox
42 80 0.030982549 ubox
43 49 0.006877787 ubox
43 51 0.021613962 ubox
43 60 0.004325445 ubox
43 63 0.008473652 ubox
43 68 0.957383414 ubox
43 70 0.064549832 ubox
43 79 0.031017563 ubox
44 50 0.132867788 ubox
44 52 0.195183816 ubox
44 54 0.005289142 ubox
44 59 0.007393316 ubox
44 67 0.635989187 ubox
44 69 0.094862845 ubox
44 78 0.038247012 ubox
45 49 0.137996655 ubox
45 51 0.203858674 ubox
45 53 0.006424290 ubox
45 62 0.167546501 ubox
45 68 0.100304813 ubox
45 77 0.038385318 ubox
46 61 0.167463285 ubox
46 62 0.111931404 ubox
46 76 0.038384799 ubox
47 53 0.009824883 ubox
47 61 0.112157136 ubox
47 68 0.219377223 ubox
47 75 0.038364192 ubox
48 52 0.015199569 ubox
48 55 0.006719467 ubox
48 56 0.079013440 ubox
48 57 0.150458494 ubox
48 58 0.022555659 ubox
48 59 0.084640895 ubox
48 65 0.262230970 ubox
48 66 0.156149552 ubox
48 67 0.317514504 ubox
48 73 0.037960449 ubox
49 54 0.004678261 ubox
49 55 0.079628736 ubox
49 56 0.149700458 ubox
49 57 0.029653711 ubox
49 58 0.078423279 ubox
49 64 0.242894433 ubox
49 65 0.158788405 ubox
49 66 0.306965941 ubox
49 69 0.030696104 ubox
49 72 0.038075513 ubox
50 60 0.052171587 ubox
50 63 0.217949450 ubox
50 68 0.037223576 ubox
50 70 0.029069335 ubox
50 71 0.026155176 ubox
51 59 0.054124908 ubox
51 64 0.043359412 ubox
51 67 0.121512516 ubox
51 69 0.036300478 ubox
52 60 0.175737158 ubox
52 63 0.032288245 ubox
52 68 0.036575924 ubox
53 59 0.178272366 ubox
53 64 0.943490377 ubox
53 67 0.004744810 ubox
54 62 0.020225676 ubox
54 63 0.950688171 ubox
55 61 0.021190503 ubox
55 62 0.954946154 ubox
56 61 0.951581675 ubox
56 62 0.041911583 ubox
57 61 0.047487359 ubox
59 68 0.003643741 ubox
60 67 0.004220394 ubox
61 66 0.003644805 ubox
93 101 0.005966722 ubox
94 100 0.006252895 ubox
95 99 0.005760682 ubox
10 99 0.9500000 lbox
11 98 0.9500000 lbox
12 97 0.9500000 lbox
13 96 0.9500000 lbox
14 95 0.9500000 lbox
15 94 0.9500000 lbox
16 93 0.9500000 lbox
17 92 0.9500000 lbox
18 91 0.9500000 lbox
19 90 0.9500000 lbox
20 89 0.9500000 lbox
21 88 0.9500000 lbox
22 87 0.9500000 lbox
23 86 0.9500000 lbox
24 85 0.9500000 lbox
29 83 0.9500000 lbox
30 82 0.9500000 lbox
31 81 0.9500000 lbox
32 80 0.9500000 lbox
33 79 0.9500000 lbox
34 77 0.9500000 lbox
35 76 0.9500000 lbox
36 75 0.9500000 lbox
37 74 0.9500000 lbox
38 73 0.9500000 lbox
39 72 0.9500000 lbox
40 71 0.9500000 lbox
41 70 0.9500000 lbox
42 69 0.9500000 lbox
43 68 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
