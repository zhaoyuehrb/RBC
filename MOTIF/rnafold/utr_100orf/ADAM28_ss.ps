%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUGAACCAGGGAGUUUCAUUCUGUCUCACUGGAGAGGAGGCAGGGACAGACCCAGCAGCACCCACCUGAGCGAGAAGAGCAGACACCGUGCUCCUGGAAUCACCCAGCAUGUUGCAAGGUCUCCUGCCAGUCAGUCUCCUCCUCUCUGUUGCAGUAAGUGCUAUAAAAGAACUCCCUGGGGUGAAGAAGUAUGAAGUGGUUUAUCCUA\
) } def
/len { sequence length } bind def

/coor [
[400.73590088 958.42089844]
[386.54565430 953.55914307]
[377.15328979 941.86370850]
[375.46911621 926.95855713]
[382.01504517 913.46221924]
[394.76269531 905.55670166]
[409.76208496 905.69152832]
[422.36566162 913.82525635]
[417.53967285 899.62280273]
[412.71365356 885.42034912]
[407.88766479 871.21789551]
[403.06167603 857.01544189]
[398.23565674 842.81298828]
[393.40966797 828.61053467]
[388.58367920 814.40808105]
[383.75769043 800.20562744]
[378.93167114 786.00317383]
[374.10568237 771.80072021]
[368.44290161 757.91070557]
[361.96340942 744.38232422]
[355.48391724 730.85400391]
[349.00439453 717.32562256]
[342.32421875 703.89526367]
[335.44479370 690.56585693]
[328.56539917 677.23638916]
[321.68597412 663.90698242]
[311.71148682 661.68823242]
[304.45239258 654.18798828]
[302.47900391 643.71490479]
[306.68014526 633.68200684]
[300.20065308 620.15362549]
[294.47619629 615.47894287]
[293.72708130 606.37530518]
[287.44970703 592.75201416]
[281.17233276 579.12866211]
[274.89498901 565.50537109]
[268.61761475 551.88201904]
[262.34027100 538.25872803]
[256.06289673 524.63543701]
[249.78553772 511.01208496]
[243.50817871 497.38879395]
[237.23081970 483.76547241]
[234.06745911 482.20806885]
[231.50128174 479.04107666]
[230.28057861 474.56188965]
[230.99255371 469.39077759]
[225.32975769 455.50076294]
[219.66697693 441.61074829]
[214.00418091 427.72070312]
[202.03465271 418.85620117]
[203.98957825 403.15625000]
[198.32678223 389.26620483]
[192.66400146 375.37619019]
[180.20492554 372.08969116]
[171.78799438 362.07781982]
[170.65760803 348.85162354]
[177.44969177 337.22052002]
[171.99433899 323.24774170]
[166.53898621 309.27493286]
[161.08361816 295.30212402]
[149.01359558 294.00216675]
[138.57991028 287.65621948]
[131.79447937 277.41616821]
[129.99617004 265.19137573]
[133.58695984 253.29284668]
[141.94416809 243.99633789]
[136.90724182 229.86730957]
[131.87033081 215.73828125]
[126.83341217 201.60925293]
[116.04235077 196.14303589]
[111.73037720 184.41313171]
[116.72100830 172.51957703]
[111.89500427 158.31712341]
[107.06900787 144.11466980]
[102.24301147 129.91221619]
[85.01498413 128.06166077]
[70.73372650 116.56271362]
[64.60107422 98.21677399]
[69.58142090 78.48269653]
[61.72966385 65.70185089]
[53.87791061 52.92100906]
[46.02615356 40.14016724]
[38.17439651 27.35932541]
[22.68050003 25.24434090]
[12.20930862 13.63020515]
[11.70499992 -1.99924374]
[21.40569115 -14.26425838]
[36.73101425 -17.37367249]
[50.44482040 -9.85931778]
[56.07186890 4.73075914]
[50.95524216 19.50756836]
[58.80699539 32.28841019]
[66.65875244 45.06925583]
[74.51050568 57.85009766]
[82.36226654 70.63093567]
[96.60025024 65.91080475]
[95.26201630 50.97061920]
[93.92378235 36.03043365]
[92.58554840 21.09025002]
[80.29859924 11.15010929]
[78.72225952 -4.57537031]
[88.79175568 -16.75654030]
[104.53302002 -18.16653061]
[116.60704803 -7.96881628]
[117.85053253 7.78647757]
[107.52573395 19.75201607]
[108.86396790 34.69219971]
[110.20220184 49.63238525]
[111.54043579 64.57257080]
[124.77676392 74.14942169]
[132.18435669 87.98398590]
[132.76257324 103.02134705]
[126.95389557 116.20248413]
[116.44546509 125.08621979]
[121.27146912 139.28868103]
[126.09746552 153.49113464]
[130.92346191 167.69358826]
[145.04966736 179.50595093]
[140.96244812 196.57234192]
[145.99935913 210.70137024]
[151.03627014 224.83039856]
[156.07319641 238.95942688]
[173.61373901 243.55146790]
[184.78846741 257.63000488]
[185.27082825 275.44061279]
[175.05642700 289.84677124]
[180.51177979 303.81958008]
[185.96713257 317.79235840]
[191.42248535 331.76516724]
[207.56979370 338.49450684]
[213.73297119 354.50482178]
[206.55403137 369.71340942]
[212.21681213 383.60342407]
[217.87959290 397.49346924]
[230.25418091 407.35147095]
[227.89421082 422.05792236]
[233.55700684 435.94793701]
[239.21978760 449.83798218]
[244.88256836 463.72799683]
[250.85414124 477.48809814]
[257.13150024 491.11141968]
[263.40887451 504.73474121]
[269.68621826 518.35803223]
[275.96359253 531.98138428]
[282.24093628 545.60467529]
[288.51831055 559.22802734]
[294.79565430 572.85131836]
[301.07302856 586.47460938]
[307.35037231 600.09796143]
[313.72900391 613.67413330]
[320.20849609 627.20251465]
[337.33715820 637.83129883]
[335.01541138 657.02758789]
[341.89480591 670.35699463]
[348.77423096 683.68640137]
[355.65365601 697.01586914]
[361.00161743 700.90307617]
[363.24664307 706.12390137]
[362.53274536 710.84613037]
[369.01223755 724.37451172]
[375.49176025 737.90283203]
[381.97125244 751.43115234]
[386.00015259 736.98236084]
[397.68041992 727.57110596]
[412.65551758 726.70758057]
[425.34017944 734.71380615]
[431.00329590 748.60369873]
[427.53268433 763.19665527]
[416.22277832 773.04986572]
[401.29190063 774.48834229]
[388.30813599 766.97473145]
[393.13412476 781.17718506]
[397.96014404 795.37963867]
[402.78613281 809.58209229]
[407.61212158 823.78454590]
[412.43814087 837.98699951]
[417.26412964 852.18945312]
[422.09011841 866.39190674]
[426.91610718 880.59436035]
[431.74212646 894.79681396]
[436.56811523 908.99926758]
[442.33413696 922.84674072]
[449.01434326 936.27709961]
[455.63809204 942.56707764]
[455.69235229 949.95758057]
[462.17184448 963.48590088]
[475.11123657 972.58990479]
[473.63079834 987.41070557]
[480.11029053 1000.93908691]
[486.58978271 1014.46740723]
[499.52920532 1023.57141113]
[498.04876709 1038.39221191]
[504.52825928 1051.92065430]
[511.00775146 1065.44897461]
[523.30285645 1077.12231445]
[515.48931885 1092.16833496]
[498.86825562 1088.82543945]
[497.47940063 1071.92846680]
[490.99990845 1058.40014648]
[484.52041626 1044.87170410]
[472.04446411 1036.73535156]
[473.06146240 1020.94689941]
[466.58193970 1007.41857910]
[460.10244751 993.89025879]
[447.62649536 985.75390625]
[448.64349365 969.96539307]
[442.16400146 956.43707275]
[435.58395386 942.95733643]
[428.90377808 929.52691650]
[425.79782104 944.20184326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 181]
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[15 174]
[16 173]
[17 172]
[18 171]
[19 162]
[20 161]
[21 160]
[22 159]
[23 156]
[24 155]
[25 154]
[26 153]
[30 151]
[31 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[38 144]
[39 143]
[40 142]
[41 141]
[42 140]
[46 139]
[47 138]
[48 137]
[49 136]
[51 134]
[52 133]
[53 132]
[57 129]
[58 128]
[59 127]
[60 126]
[66 122]
[67 121]
[68 120]
[69 119]
[72 117]
[73 116]
[74 115]
[75 114]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[96 109]
[97 108]
[98 107]
[99 106]
[182 209]
[183 208]
[185 207]
[186 206]
[188 204]
[189 203]
[190 202]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
