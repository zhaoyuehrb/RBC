%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGAGCAAGCCCCAGACGGUAUCUCCUGGAUGCCAGUGAGCGGCUGAGAGCUGAAGCUCCCUGGACACUCAAGGCUCUUGUGGUGACAGUCUGACGUAAAGGCGUGCAGGGAGGCCUAGCUCUGUCUCCUGGACUUAGAGAUUUCAGACACAGAAGUCUGUCCAUGGCUCCUUGUCACAUCCGCAAAUACCAGGAGAGCGACCGCCAGUGGGUUGUGGGCUUGCUCUCCCGGGGGAUGGCCGAGCAUGCCC\
CAGCCACCUUCC\
) } def
/len { sequence length } bind def

/coor [
[144.88113403 292.30133057]
[159.13978577 296.95867920]
[170.56904602 306.67056274]
[165.23731995 292.65011597]
[159.90560913 278.62966919]
[148.14970398 269.48376465]
[150.47648621 253.83457947]
[145.14477539 239.81414795]
[139.81304932 225.79370117]
[134.48133850 211.77325439]
[129.14961243 197.75282288]
[123.81789398 183.73237610]
[118.48617554 169.71192932]
[113.15445709 155.69149780]
[107.82273865 141.67105103]
[102.49102783 127.65061188]
[95.19620514 125.90831757]
[91.71139526 140.49790955]
[77.12186432 137.01287842]
[80.60655975 122.42373657]
[73.31173706 120.68144989]
[62.21963882 130.77923584]
[51.12753677 140.87702942]
[40.03543854 150.97482300]
[39.13684845 166.52571106]
[27.74403763 176.60829163]
[12.92417431 175.65579224]
[1.83207524 185.75357056]
[-9.26002407 195.85136414]
[-20.29274750 206.01399231]
[-31.26571846 216.24110413]
[-42.23868942 226.46823120]
[-53.21165848 236.69534302]
[-60.67603683 251.91767883]
[-77.36981964 248.95896912]
[-79.14804077 232.09852600]
[-63.43877411 225.72238159]
[-52.46580505 215.49525452]
[-41.49283600 205.26814270]
[-30.51986504 195.04103088]
[-27.77901649 188.20542908]
[-19.35781288 184.75926208]
[-8.26571369 174.66148376]
[2.82638597 164.56369019]
[3.26582336 149.71975708]
[14.37094212 139.32115173]
[29.93765068 139.88272095]
[41.02975082 129.78492737]
[52.12184906 119.68714142]
[63.21394730 109.58934784]
[61.54696274 94.68226624]
[48.49836731 87.28401184]
[35.44977188 79.88575745]
[22.40117645 72.48750305]
[9.35258007 65.08925629]
[-3.69601536 57.69099808]
[-16.74461174 50.29274750]
[-30.82204628 56.54830170]
[-45.70963287 53.35248947]
[-55.74206543 42.13579178]
[-57.22813034 27.33952332]
[-70.27672577 19.94126892]
[-83.32531738 12.54301643]
[-96.37391663 5.14476299]
[-109.42250824 -2.25349045]
[-122.47110748 -9.65174389]
[-135.51969910 -17.04999733]
[-151.34072876 -17.12574768]
[-158.59609985 -30.13378143]
[-171.64468384 -37.53203583]
[-206.30322266 -8.67169762]
[-220.66369629 -13.00493050]
[-235.02415466 -17.33816338]
[-249.40977478 -21.58715248]
[-263.82006836 -25.75175285]
[-278.23034668 -29.91635132]
[-292.64062500 -34.08095169]
[-309.53573608 -32.66989899]
[-315.56869507 -48.51414108]
[-302.01373291 -58.69743729]
[-288.47601318 -48.49123001]
[-274.06573486 -44.32662964]
[-259.65545654 -40.16202927]
[-245.24517822 -35.99742889]
[-237.97216797 -37.15539551]
[-230.69093323 -31.69863319]
[-216.33045959 -27.36540031]
[-201.96998596 -23.03216743]
[-198.15672302 -29.49041748]
[-211.07310486 -37.11715317]
[-203.44616699 -50.03341675]
[-190.53018188 -42.40691376]
[-186.71691895 -48.86516190]
[-197.44711304 -59.34670639]
[-208.17732239 -69.82824707]
[-218.90753174 -80.30978394]
[-234.44963074 -78.58442688]
[-247.43589783 -87.29597473]
[-251.73458862 -102.33110809]
[-245.31600952 -116.59069824]
[-231.21080017 -123.34179688]
[-216.07902527 -119.39674377]
[-207.06544495 -106.61827850]
[-208.42597961 -91.03999329]
[-197.69578552 -80.55844879]
[-186.96557617 -70.07691193]
[-176.23536682 -59.59536743]
[-164.24644470 -50.58063126]
[-151.19784546 -43.18237686]
[-136.31013489 -43.63579941]
[-128.12144470 -30.09859276]
[-115.07285309 -22.70034027]
[-102.02426147 -15.30208588]
[-88.97566223 -7.90383244]
[-75.92706299 -0.50557923]
[-62.87847137 6.89267397]
[-49.82987595 14.29092789]
[-36.37006760 7.96862411]
[-21.59356689 10.81802082]
[-11.20683384 21.95216560]
[-9.34635735 37.24415207]
[3.70223808 44.64240265]
[16.75083351 52.04065704]
[29.79942894 59.43891144]
[42.84802628 66.83716583]
[55.89662170 74.23542023]
[68.94521332 81.63367462]
[90.61830902 67.68288422]
[114.18627167 72.18555450]
[124.15334320 60.97585297]
[134.12042236 49.76614761]
[144.08749390 38.55644608]
[154.05456543 27.34674072]
[164.02163696 16.13703537]
[173.98870850 4.92733145]
[183.95578003 -6.28237295]
[173.06011963 -22.92933464]
[168.58758545 -42.67286301]
[171.33801270 -63.08027267]
[181.20559692 -81.54965210]
[197.16206360 -95.64151764]
[217.35955811 -103.40017700]
[239.34304810 -103.62262726]
[245.80601501 -117.15888214]
[252.26896667 -130.69514465]
[258.73193359 -144.23139954]
[265.19488525 -157.76765442]
[271.65783691 -171.30390930]
[278.12078857 -184.84016418]
[271.47732544 -198.99636841]
[275.53750610 -214.09765625]
[288.38424683 -223.01365662]
[303.95172119 -221.53451538]
[314.88943481 -210.35861206]
[316.03292847 -194.76289368]
[306.84228516 -182.11117554]
[291.65704346 -178.37719727]
[285.19409180 -164.84094238]
[278.73114014 -151.30468750]
[272.26818848 -137.76843262]
[265.80523682 -124.23217773]
[259.34225464 -110.69592285]
[252.87930298 -97.15966797]
[258.59945679 -92.30889893]
[268.30099487 -103.74917603]
[282.42291260 -108.80599976]
[279.74127197 -94.04762268]
[270.03973389 -82.60734558]
[275.75985718 -77.75657654]
[288.05834961 -86.34420776]
[300.35681152 -94.93184662]
[312.65530396 -103.51947784]
[316.86611938 -119.00006104]
[331.65127563 -125.22735596]
[345.66882324 -117.42430115]
[348.16574097 -101.57675171]
[337.22656250 -89.84157562]
[321.24291992 -91.22100067]
[308.94445801 -82.63336945]
[296.64596558 -74.04573059]
[284.34750366 -65.45809937]
[287.17611694 -53.64267349]
[287.64993286 -41.60594177]
[285.79089355 -29.80870438]
[281.70950317 -18.69484520]
[275.59909058 -8.67462921]
[267.72705078 -0.10956986]
[258.42327881 6.70057535]
[248.06652832 11.52821827]
[237.06901550 14.22540283]
[225.86009216 14.72807693]
[214.86941528 13.05706692]
[204.51057434 9.31576824]
[195.16548157 3.68469906]
[185.19841003 14.89440346]
[175.23133850 26.10410881]
[165.26426697 37.31381226]
[155.29719543 48.52351761]
[145.33012390 59.73322296]
[135.36305237 70.94292450]
[125.39597321 82.15263367]
[129.89724731 96.46131897]
[144.48689270 99.94589996]
[159.07653809 103.43048096]
[173.66618347 106.91506195]
[188.25581360 110.39964294]
[202.84545898 113.88422394]
[215.29629517 104.42321014]
[230.91302490 105.23052216]
[242.32191467 115.92498016]
[244.13601685 131.45698547]
[235.49879456 144.49278259]
[220.48846436 148.87728882]
[206.19244385 142.54026794]
[199.36088562 128.47386169]
[184.77124023 124.98928070]
[170.18159485 121.50469971]
[155.59194946 118.02012634]
[141.00230408 114.53554535]
[126.41266632 111.05096436]
[116.51146698 122.31889343]
[121.84318542 136.33934021]
[127.17490387 150.35977173]
[132.50662231 164.38021851]
[137.83833313 178.40066528]
[143.17005920 192.42109680]
[148.50177002 206.44154358]
[153.83349609 220.46199036]
[159.16520691 234.48242188]
[164.49693298 248.50286865]
[176.63420105 258.65164185]
[173.92605591 273.29797363]
[179.25776672 287.31842041]
[184.58949280 301.33883667]
[191.05244446 314.87509155]
[198.60314941 327.83609009]
[206.15385437 340.79705811]
[213.70454407 353.75802612]
[227.33680725 361.78747559]
[227.05793762 376.67947388]
[234.60864258 389.64044189]
[242.15934753 402.60140991]
[257.50299072 406.38934326]
[265.60247803 419.96038818]
[261.65255737 435.26312256]
[247.99661255 443.21868896]
[232.73649597 439.10720825]
[224.92575073 425.36791992]
[229.19836426 410.15213013]
[221.64765930 397.19116211]
[214.09695435 384.23016357]
[201.00477600 377.12777710]
[200.74357605 361.30874634]
[193.19287109 348.34774780]
[185.64216614 335.38677979]
[178.09146118 322.42581177]
[178.45776367 337.42132568]
[173.11427307 351.43728638]
[162.85803223 362.38305664]
[149.21888733 368.62591553]
[134.23124695 369.23471069]
[120.13069153 364.11862183]
[109.02048492 354.04074097]
[102.55783081 340.50433350]
[101.70671082 325.52850342]
[106.59407806 311.34704590]
[116.49092102 300.07531738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 234]
[4 233]
[5 232]
[7 230]
[8 229]
[9 228]
[10 227]
[11 226]
[12 225]
[13 224]
[14 223]
[15 222]
[16 221]
[21 50]
[22 49]
[23 48]
[24 47]
[27 44]
[28 43]
[29 42]
[30 40]
[31 39]
[32 38]
[33 37]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[69 109]
[70 108]
[71 88]
[72 87]
[73 86]
[74 84]
[75 83]
[76 82]
[77 81]
[93 107]
[94 106]
[95 105]
[96 104]
[129 201]
[130 200]
[131 199]
[132 198]
[133 197]
[134 196]
[135 195]
[136 194]
[143 163]
[144 162]
[145 161]
[146 160]
[147 159]
[148 158]
[149 157]
[169 181]
[170 180]
[171 179]
[172 178]
[202 220]
[203 219]
[204 218]
[205 217]
[206 216]
[207 215]
[235 256]
[236 255]
[237 254]
[238 253]
[240 251]
[241 250]
[242 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
