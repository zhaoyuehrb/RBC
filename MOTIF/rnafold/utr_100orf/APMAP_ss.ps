%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAACGUCAUUUCCGCGUACGGGGGAGGGCGGGCCUGGAGUCUGAGCCGGCGCCGCUCAGUGUGAGGUGGUUUCUGCGGGUGAGGCUGGCGCCCGUACCAUGAGCGAGGCGGACGGGCUGCGACAGCGCCGGCCCCUGCGGCCGCAGGUCGUCACAGACGAUGAUGGCCAGGCCCCGGAGGCUAAGGACGGCAGCUCCU\
) } def
/len { sequence length } bind def

/coor [
[102.85519409 439.87228394]
[101.92265320 424.90130615]
[90.03569031 418.81451416]
[82.65089417 407.55761719]
[81.78766632 394.01382446]
[87.77838898 381.71578979]
[99.15364838 373.92431641]
[98.45404816 358.94064331]
[97.75444031 343.95697021]
[97.05483246 328.97329712]
[85.26474762 324.41128540]
[76.04354858 315.69515991]
[70.78678131 304.09533691]
[70.30837250 291.32217407]
[74.71481323 279.27383423]
[83.38404083 269.75408936]
[95.05304718 264.20245361]
[94.81977081 249.20426941]
[82.54922485 240.80357361]
[77.51873016 226.62055969]
[81.85501099 212.02432251]
[94.09602356 202.67211914]
[93.86274719 187.67393494]
[93.62947083 172.67573547]
[93.39619446 157.67755127]
[93.16291809 142.67936707]
[78.93118286 137.74095154]
[67.25857544 128.21830750]
[59.56290817 115.26813507]
[44.82337952 118.05135345]
[30.08385277 120.83457184]
[15.34432316 123.61779022]
[0.60479480 126.40100098]
[-14.13473415 129.18421936]
[-28.85217476 132.08197021]
[-43.54663467 135.09407043]
[-58.24110031 138.10618591]
[-66.02625275 142.89834595]
[-73.18743134 141.04899597]
[-87.92695618 143.83221436]
[-94.43800354 157.91716003]
[-108.00086975 165.45562744]
[-123.40035248 163.54888916]
[-134.71504211 152.93016052]
[-137.59419250 137.68252563]
[-130.93072510 123.66904449]
[-117.28688812 116.27816010]
[-101.90899658 118.35182953]
[-90.71017456 129.09268188]
[-75.97064209 126.30947113]
[-61.25320435 123.41172028]
[-46.55874252 120.39961243]
[-31.86428070 117.38750458]
[-25.93867302 112.96147919]
[-16.91794968 114.44469452]
[-2.17842150 111.66147614]
[12.56110764 108.87825775]
[27.30063629 106.09503937]
[42.04016495 103.31182861]
[56.77969360 100.52861023]
[57.38845062 92.75223541]
[59.38489914 85.21189880]
[62.70402908 78.15314484]
[67.23774719 71.80587006]
[72.83840942 66.37676239]
[79.32361603 62.04263687]
[86.48217010 58.94463730]
[94.08095551 57.18365479]
[101.87249756 56.81703949]
[105.11277008 42.17119980]
[108.35303497 27.52535629]
[111.59329987 12.87951565]
[110.01475525 7.88888741]
[110.46782684 3.25659227]
[112.47438812 -0.30214372]
[115.34139252 -2.36631799]
[119.26121521 -16.84509277]
[123.18104553 -31.32386971]
[127.10087585 -45.80264282]
[131.02070618 -60.28142166]
[134.94053650 -74.76019287]
[138.86036682 -89.23896790]
[137.51629639 -94.29779053]
[138.18492126 -98.90391541]
[140.35528564 -102.36518860]
[143.31544495 -104.29340363]
[147.90629578 -118.57360077]
[152.49716187 -132.85379028]
[157.08802795 -147.13398743]
[161.67887878 -161.41418457]
[166.26974487 -175.69438171]
[170.86059570 -189.97457886]
[140.38290405 -224.68061829]
[142.93655396 -239.46165466]
[145.49021912 -254.24267578]
[148.04386902 -269.02371216]
[150.59751892 -283.80474854]
[153.15116882 -298.58575439]
[151.52784729 -307.58233643]
[155.86119080 -313.57604980]
[158.64440918 -328.31558228]
[146.60765076 -337.76943970]
[140.35363770 -351.73889160]
[141.31948853 -367.01388550]
[149.28326416 -380.08435059]
[162.41494751 -387.94677734]
[177.69696045 -388.79443359]
[191.61763000 -382.43252563]
[200.97807312 -370.32299805]
[203.62731934 -355.24850464]
[198.95661926 -340.67309570]
[188.03924561 -329.94604492]
[173.38394165 -325.53237915]
[170.60072327 -310.79284668]
[167.93220520 -296.03210449]
[165.37855530 -281.25109863]
[162.82489014 -266.47006226]
[160.27124023 -251.68902588]
[157.71759033 -236.90798950]
[155.16394043 -222.12696838]
[161.86230469 -218.75325012]
[181.95738220 -208.63211060]
[192.31369019 -219.48324585]
[195.65956116 -235.53744507]
[211.31835938 -240.40922546]
[223.18164062 -229.08692932]
[219.04548645 -213.21795654]
[203.16482544 -209.12693787]
[192.80851746 -198.27581787]
[185.14079285 -185.38372803]
[180.54994202 -171.10353088]
[175.95907593 -156.82333374]
[171.36820984 -142.54313660]
[166.77735901 -128.26293945]
[162.18649292 -113.98274231]
[157.59564209 -99.70254517]
[153.33914185 -85.31914520]
[149.41931152 -70.84037018]
[145.49948120 -56.36159134]
[141.57965088 -41.88281631]
[137.65982056 -27.40403938]
[133.73999023 -12.92526436]
[129.82015991 1.55351090]
[126.23914337 16.11978340]
[122.99887848 30.76562500]
[119.75860596 45.41146469]
[116.51834106 60.05730820]
[136.97651672 77.61670685]
[143.04862976 103.88452911]
[157.52740479 107.80435944]
[172.00617981 111.72418976]
[186.48495483 115.64402008]
[200.96372986 119.56385040]
[215.44250488 123.48367310]
[229.92127991 127.40350342]
[244.40005493 131.32333374]
[257.12857056 122.23933411]
[272.71414185 123.51385498]
[283.79769897 134.54508972]
[285.14599609 150.12445068]
[276.12234497 162.89581299]
[260.98745728 166.82894897]
[246.88758850 160.06674194]
[240.48023987 145.80210876]
[226.00144958 141.88227844]
[211.52267456 137.96244812]
[197.04389954 134.04261780]
[182.56512451 130.12278748]
[168.08634949 126.20296478]
[153.60757446 122.28313446]
[139.12879944 118.36330414]
[133.76370239 126.98678589]
[126.53448486 134.12031555]
[117.84027863 139.37002563]
[108.16110229 142.44609070]
[108.39437866 157.44427490]
[108.62765503 172.44245911]
[108.86093140 187.44064331]
[109.09420776 202.43884277]
[121.62015533 211.40582275]
[126.40827179 225.86013794]
[121.82130432 240.19274902]
[109.81795502 248.97099304]
[110.05123138 263.96917725]
[125.59714508 272.15097046]
[134.81469727 287.00134277]
[135.24349976 304.38552856]
[126.85562897 319.51660156]
[112.03850555 328.27368164]
[112.73811340 343.25735474]
[113.43772125 358.24102783]
[114.13732910 373.22470093]
[128.39315796 382.32144165]
[134.36116028 397.96658325]
[129.87545776 413.92678833]
[116.89363861 423.96875000]
[117.82617950 438.93975830]
[128.85369873 450.59194946]
[126.47659302 466.45791626]
[112.51838684 474.36663818]
[97.68662262 468.25122070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[7 192]
[8 191]
[9 190]
[10 189]
[17 184]
[18 183]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[29 60]
[30 59]
[31 58]
[32 57]
[33 56]
[34 55]
[35 53]
[36 52]
[37 51]
[39 50]
[40 49]
[69 147]
[70 146]
[71 145]
[72 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[100 114]
[101 113]
[122 129]
[123 128]
[149 171]
[150 170]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
