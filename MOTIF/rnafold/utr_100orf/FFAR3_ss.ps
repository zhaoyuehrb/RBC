%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUUUUAGCAUGCUGACCAGCCCUGGCAACGGAGCUCAAGGCAUCUAUGUGCCACUGCUCAACAGUGAGUGACGUCAUGGGCACGGCCAGGUCUUUAUCAGUUCUGCCGGAUAAAUAGCCAACUGCACUAGGUCUGGAGAGACAGCAAGGUGCUGUGCGGCAGAGCAUUUGGGGUCUCAAAGAAGCAGUGGCCACCACCAUGGAUACAGGCCCCGACCAGUCCUACUUCUCCGGCAAUCACUGGUUCGUCUUC\
UCGGUGUACCUUCUCACUUUCCUGGUGGGGCUCCCCCUCAACCUGC\
) } def
/len { sequence length } bind def

/coor [
[225.09538269 140.24171448]
[210.64068604 136.23397827]
[196.18600464 132.22624207]
[181.73130798 128.21849060]
[172.66413879 138.39634705]
[160.03973389 143.70974731]
[146.29139709 143.07286072]
[134.09574890 136.55282593]
[125.85151672 125.36758423]
[123.20790863 111.65888214]
[108.79569244 107.50099945]
[104.71372223 113.68677521]
[96.52225494 117.04040527]
[86.39217377 115.07401276]
[72.26737213 120.12276459]
[58.14257050 125.17152405]
[44.01776886 130.22027588]
[29.89296341 135.26902771]
[22.67703629 151.23046875]
[6.46117496 156.89961243]
[-8.52527046 149.21939087]
[-22.59679031 154.41481018]
[-32.86285019 166.45301819]
[-47.48221970 163.60287476]
[-61.55373764 168.79829407]
[-75.62525940 173.99371338]
[-89.69677734 179.18911743]
[-103.76829529 184.38453674]
[-117.83981323 189.57995605]
[-122.29902649 194.35391235]
[-127.68754578 195.95594788]
[-132.25848389 194.73374939]
[-146.43504333 199.63529968]
[-152.74458313 210.84806824]
[-164.61512756 214.65464783]
[-175.54345703 209.54042053]
[-189.77023315 214.29423523]
[-203.99700928 219.04804993]
[-218.22380066 223.80186462]
[-232.45057678 228.55567932]
[-243.08726501 240.26770020]
[-257.61056519 236.96278381]
[-271.83737183 241.71659851]
[-286.06414795 246.47041321]
[-296.70083618 258.18243408]
[-311.22415161 254.87751770]
[-325.45092773 259.63134766]
[-313.23373413 268.33422852]
[-312.31390381 283.30599976]
[-323.37390137 293.43896484]
[-338.20816040 291.21539307]
[-345.81106567 278.28497314]
[-340.54257202 264.24151611]
[-354.99728394 268.24923706]
[-369.43090820 272.33212280]
[-383.84313965 276.48999023]
[-398.25534058 280.64788818]
[-412.66757202 284.80578613]
[-427.07977295 288.96365356]
[-436.06240845 302.25622559]
[-452.06622314 303.37741089]
[-462.81448364 291.46716309]
[-460.06207275 275.66198730]
[-445.92034912 268.08627319]
[-431.23767090 274.55145264]
[-416.82543945 270.39355469]
[-402.41323853 266.23568726]
[-388.00103760 262.07778931]
[-373.58880615 257.91989136]
[-368.06042480 253.07063293]
[-359.00500488 253.79455566]
[-344.55032349 249.78681946]
[-330.20474243 245.40455627]
[-315.97796631 240.65074158]
[-306.35885620 229.27874756]
[-290.81796265 232.24363708]
[-276.59118652 227.48982239]
[-262.36441040 222.73600769]
[-252.74530029 211.36401367]
[-237.20439148 214.32890320]
[-222.97761536 209.57508850]
[-208.75082397 204.82127380]
[-194.52404785 200.06745911]
[-180.29727173 195.31364441]
[-169.35751343 181.56527710]
[-151.33659363 185.45874023]
[-137.16003418 180.55718994]
[-123.03523254 175.50843811]
[-108.96371460 170.31301880]
[-94.89219666 165.11759949]
[-80.82067108 159.92219543]
[-66.74915314 154.72677612]
[-52.67763519 149.53135681]
[-43.41806412 137.86476135]
[-27.79220581 140.34327698]
[-13.72068596 135.14787292]
[-10.03426456 122.83094025]
[0.21690914 114.75360107]
[13.44243431 114.02920532]
[24.84420776 121.14423370]
[38.96900940 116.09547424]
[53.09381485 111.04672241]
[67.21862030 105.99796295]
[81.34342194 100.94920349]
[87.90184021 87.45894623]
[83.14802551 73.23217010]
[78.39421082 59.00538635]
[73.64039612 44.77861023]
[68.88658142 30.55183029]
[64.13276672 16.32505035]
[59.37895203 2.09827137]
[47.66693115 -8.53841591]
[50.97184753 -23.06173515]
[46.21803284 -37.28851318]
[41.46421814 -51.51529312]
[37.87290955 -36.95155334]
[27.97336960 -25.68216515]
[13.99394321 -20.24382019]
[-0.91866297 -21.86066437]
[-13.40768242 -30.16875648]
[-20.66189003 -43.29797745]
[-21.04839516 -58.29299927]
[-14.48019695 -71.77850342]
[-2.43576884 -80.71895599]
[12.37374020 -83.10190582]
[26.61477089 -78.39096069]
[37.08196640 -67.64612579]
[33.98364639 -82.32264709]
[30.88532448 -96.99917603]
[27.78700256 -111.67569733]
[24.68868065 -126.35222626]
[7.28432417 -136.47975159]
[3.08263373 -155.85852051]
[14.37407970 -171.78324890]
[10.81931782 -186.35594177]
[7.26455545 -200.92864990]
[3.70979357 -215.50135803]
[-8.00683117 -226.97535706]
[-3.66684270 -242.78979492]
[12.26515102 -246.67613220]
[23.39968109 -234.63644409]
[18.28249550 -219.05612183]
[21.83725739 -204.48341370]
[25.39201927 -189.91070557]
[28.94678307 -175.33801270]
[38.75128174 -172.59529114]
[46.61071014 -165.99790955]
[51.08041000 -156.67181396]
[51.30319595 -146.25184631]
[47.17291260 -136.59523010]
[39.36520767 -129.45054626]
[42.46352768 -114.77402496]
[45.56185150 -100.09749603]
[48.66017151 -85.42097473]
[51.75849533 -70.74444580]
[55.69099808 -56.26910782]
[60.44481277 -42.04232788]
[65.19862366 -27.81554985]
[76.57062531 -18.19645691]
[73.60572815 -2.65554357]
[78.35954285 11.57123566]
[83.11335754 25.79801559]
[87.86717224 40.02479553]
[92.62098694 54.25157166]
[97.37480164 68.47835541]
[102.12861633 82.70513153]
[112.95358276 93.08878326]
[127.36579895 97.24666595]
[139.18156433 85.64728546]
[155.14668274 81.62648773]
[170.86637878 86.19312286]
[182.06278992 98.00550842]
[185.73905945 113.76380920]
[200.19374084 117.77155304]
[214.64842224 121.77928925]
[229.10311890 125.78703308]
[220.37554932 113.58745575]
[218.59223938 98.69384003]
[224.19288635 84.77864838]
[235.79652405 75.27307892]
[250.54190063 72.52101135]
[264.79312134 77.20104980]
[275.03610229 88.15919495]
[278.74517822 102.69338989]
[275.00573730 117.21980286]
[264.73983765 128.15650940]
[250.48008728 132.80665588]
[264.49679565 138.14817810]
[278.51351929 143.48968506]
[292.53021240 148.83119202]
[304.88269043 147.41304016]
[312.57342529 155.41285706]
[327.02810669 159.42059326]
[341.48278809 163.42832947]
[355.93750000 167.43606567]
[364.99291992 166.71214294]
[370.52127075 171.56141663]
[384.93350220 175.71929932]
[399.34570312 179.87718201]
[413.75793457 184.03507996]
[428.17013550 188.19296265]
[442.58236694 192.35084534]
[451.64483643 191.72116089]
[457.12246704 196.62767029]
[471.49063110 200.93525696]
[485.85882568 205.24284363]
[493.64331055 194.60192871]
[507.31381226 188.88653564]
[523.60748291 191.21224976]
[537.73699951 202.53549194]
[552.65588379 204.09306335]
[567.57482910 205.65065002]
[582.49371338 207.20823669]
[590.48297119 199.91842651]
[600.94488525 198.23623657]
[610.41680908 202.47550964]
[615.89593506 211.02957153]
[630.77917480 212.89718628]
[645.66247559 214.76480103]
[660.54571533 216.63241577]
[675.42901611 218.50003052]
[690.31231689 220.36764526]
[705.19555664 222.23524475]
[720.12237549 223.71520996]
[735.08264160 224.80651855]
[744.26300049 212.40794373]
[758.69726562 206.96224976]
[773.77947998 210.20712280]
[784.69708252 221.10714722]
[787.96618652 236.18415833]
[782.54364014 250.62715149]
[770.15985107 259.82742310]
[754.76635742 260.84915161]
[741.27520752 253.36637878]
[733.99133301 239.76676941]
[719.03106689 238.67546082]
[726.95477295 251.41184998]
[722.03820801 265.58322144]
[707.92913818 270.67572021]
[695.09515381 262.91116333]
[693.05786133 248.05017090]
[703.32794189 237.11853027]
[688.44470215 235.25091553]
[673.56140137 233.38330078]
[658.67816162 231.51568604]
[643.79486084 229.64808655]
[628.91156006 227.78047180]
[614.02832031 225.91285706]
[596.75750732 234.67008972]
[580.93615723 222.12713623]
[566.01721191 220.56956482]
[551.09832764 219.01197815]
[536.17944336 217.45440674]
[532.86517334 224.18238831]
[546.32104492 230.81109619]
[539.69213867 244.26684570]
[526.23669434 237.63835144]
[522.92242432 244.36633301]
[533.24963379 255.24516296]
[543.57684326 266.12399292]
[553.90405273 277.00280762]
[569.26983643 274.84130859]
[582.95568848 282.15414429]
[589.69909668 296.12933350]
[586.90704346 311.39315796]
[575.65325928 322.07635498]
[560.26489258 324.07101440]
[546.65917969 316.61016846]
[540.06781006 302.56265259]
[543.02520752 287.33001709]
[532.69799805 276.45117188]
[522.37078857 265.57235718]
[512.04357910 254.69354248]
[486.31719971 242.30718994]
[481.55123901 219.61102295]
[467.18304443 215.30345154]
[452.81488037 210.99586487]
[438.42446899 206.76306152]
[424.01226807 202.60517883]
[409.60003662 198.44729614]
[395.18783569 194.28939819]
[380.77560425 190.13151550]
[366.36340332 185.97363281]
[351.92974854 181.89076233]
[337.47506714 177.88302612]
[323.02038574 173.87527466]
[308.56567383 169.86753845]
[317.29324341 182.06710815]
[319.07656860 196.96072388]
[313.47592163 210.87593079]
[301.87228394 220.38150024]
[287.12692261 223.13356018]
[272.87570190 218.45352173]
[262.63269043 207.49537659]
[258.92361450 192.96118164]
[262.66305542 178.43476868]
[272.92895508 167.49806213]
[287.18872070 162.84791565]
[273.17199707 157.50639343]
[259.15527344 152.16488647]
[245.13858032 146.82337952]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[10 168]
[11 167]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[21 96]
[22 95]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[32 87]
[33 86]
[36 84]
[37 83]
[38 82]
[39 81]
[40 80]
[42 78]
[43 77]
[44 76]
[46 74]
[47 73]
[53 72]
[54 71]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[105 166]
[106 165]
[107 164]
[108 163]
[109 162]
[110 161]
[111 160]
[113 158]
[114 157]
[115 156]
[127 155]
[128 154]
[129 153]
[130 152]
[131 151]
[134 145]
[135 144]
[136 143]
[137 142]
[187 301]
[188 300]
[189 299]
[190 298]
[192 287]
[193 286]
[194 285]
[195 284]
[197 283]
[198 282]
[199 281]
[200 280]
[201 279]
[202 278]
[204 277]
[205 276]
[206 275]
[210 253]
[211 252]
[212 251]
[213 250]
[217 248]
[218 247]
[219 246]
[220 245]
[221 244]
[222 243]
[223 242]
[224 236]
[225 235]
[258 273]
[259 272]
[260 271]
[261 270]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
