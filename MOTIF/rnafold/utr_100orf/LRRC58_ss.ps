%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGUUCAGGUUCCGGGGCGCCGCAGAGCUCCCGGCCUCUGGACCGCGCGCGGCGCUCUGGGGAAUCCGGCGCCACGCGCCGUGCGGUGGCCAGGAUGGAGGAGGCCGGAGCAGCGGUGGUCACGGCCGGGGAGGCCGAACUGAACUGGUCCCGCCUCAGCGUGUCCACCGAGACGCUGGAGUCUGAGCUGGAGG\
) } def
/len { sequence length } bind def

/coor [
[110.11215210 370.75466919]
[119.99597168 358.11782837]
[119.51763916 343.12545776]
[119.03929901 328.13308716]
[118.56096649 313.14071655]
[118.08263397 298.14834595]
[117.60430145 283.15597534]
[117.12596893 268.16360474]
[116.64762878 253.17124939]
[116.16929626 238.17887878]
[115.69096375 223.18650818]
[115.21263123 208.19413757]
[114.73429871 193.20175171]
[114.25595856 178.20938110]
[113.77762604 163.21701050]
[99.81868744 157.72630310]
[89.25445557 168.37510681]
[78.69022369 179.02391052]
[68.12599182 189.67271423]
[57.56176376 200.32151794]
[60.18307877 215.61557007]
[53.28396988 229.51457214]
[39.51728821 236.67404175]
[24.17660141 234.34103394]
[13.16071510 223.41264343]
[10.70546436 208.09103394]
[17.75494194 194.26771545]
[31.59848213 187.25799561]
[46.91296005 189.75727844]
[57.47718811 179.10847473]
[68.04141998 168.45967102]
[78.60565186 157.81086731]
[89.16988373 147.16206360]
[63.69386292 121.82587433]
[64.91127777 90.57066345]
[51.54075623 83.77146149]
[38.17023468 76.97226715]
[24.79970932 70.17306519]
[8.99151230 70.81451416]
[1.15398920 58.14870834]
[-12.21653461 51.34951019]
[-25.58705711 44.55031204]
[-41.39525604 45.19175720]
[-49.23278046 32.52595520]
[-62.60330200 25.72675705]
[-78.41149902 26.36820030]
[-86.24902344 13.70240021]
[-99.61954498 6.90320110]
[-112.99007416 0.10400264]
[-126.36059570 -6.69519615]
[-139.73112488 -13.49439430]
[-155.53932190 -12.85295200]
[-163.37684631 -25.51875114]
[-176.74736023 -32.31795120]
[-190.11788940 -39.11714935]
[-203.48840332 -45.91634750]
[-216.85893250 -52.71554565]
[-230.22946167 -59.51474380]
[-236.85952759 -59.54534912]
[-241.74020386 -62.48500443]
[-243.91276550 -66.74990845]
[-257.05966187 -73.97202301]
[-272.80389404 -70.88992310]
[-284.93612671 -81.38697052]
[-284.14959717 -97.41073608]
[-271.04763794 -106.66915131]
[-255.68096924 -102.05995178]
[-249.83755493 -87.11892700]
[-236.69065857 -79.89681244]
[-223.43025208 -72.88526917]
[-210.05973816 -66.08606720]
[-196.68920898 -59.28687286]
[-183.31867981 -52.48767090]
[-169.94816589 -45.68847275]
[-156.57763672 -38.88927460]
[-141.72578430 -40.01704407]
[-132.93191528 -26.86491776]
[-119.56139374 -20.06571960]
[-106.19087219 -13.26652050]
[-92.82035065 -6.46732235]
[-79.44982147 0.33187625]
[-64.59797668 -0.79589087]
[-55.80410385 12.35623360]
[-42.43358231 19.15543175]
[-27.58173180 18.02766418]
[-18.78785896 31.17979050]
[-5.41733599 37.97898865]
[7.95318747 44.77818680]
[22.80503654 43.65042114]
[31.59890938 56.80254364]
[44.96943283 63.60174179]
[58.33995438 70.40093994]
[71.71047974 77.20014191]
[78.47188568 69.24724579]
[87.47931671 63.33404922]
[98.10798645 60.09442902]
[109.55529785 59.96860886]
[120.90135956 63.15386581]
[131.18287659 69.57421112]
[139.47448730 78.87258911]
[144.97082520 90.42726898]
[147.06190491 103.39208221]
[145.39515686 116.75804138]
[158.30506897 109.12036133]
[171.21498108 101.48268127]
[184.12489319 93.84500122]
[197.03480530 86.20732117]
[204.97241211 72.52137756]
[219.86593628 72.70011139]
[232.77584839 65.06243134]
[245.68576050 57.42475128]
[253.62336731 43.73880768]
[268.51690674 43.91754532]
[281.42681885 36.27986526]
[294.33673096 28.64218330]
[294.60833740 14.85460377]
[301.60424805 3.09647727]
[313.40365601 -3.61316037]
[326.86904907 -3.61332846]
[338.48034668 2.98899055]
[351.51040649 -4.44185066]
[364.54046631 -11.87269211]
[368.69537354 -24.09131241]
[379.71063232 -30.01016617]
[391.41699219 -26.93397331]
[404.56390381 -34.15608597]
[417.71078491 -41.37819672]
[430.85769653 -48.60031128]
[444.00460815 -55.82242203]
[449.84799194 -70.76345062]
[465.21469116 -75.37264252]
[478.31665039 -66.11422729]
[479.10317993 -50.09046936]
[466.97091675 -39.59341812]
[451.22671509 -42.67551804]
[438.07980347 -35.45340729]
[424.93292236 -28.23129463]
[411.78601074 -21.00918198]
[398.63909912 -13.78706932]
[390.37252808 1.68735981]
[371.97131348 1.15737355]
[358.94125366 8.58821487]
[345.91119385 16.01905632]
[344.63494873 32.37983704]
[333.75247192 44.88405228]
[317.39993286 48.47761917]
[301.97439575 41.55209732]
[289.06448364 49.18977737]
[276.15457153 56.82745743]
[269.14038086 69.96710205]
[253.32344055 70.33466339]
[240.41352844 77.97234344]
[227.50361633 85.61002350]
[220.48942566 98.74967194]
[204.67248535 99.11723328]
[191.76257324 106.75491333]
[178.85266113 114.39259338]
[165.94274902 122.03027344]
[153.03283691 129.66795349]
[151.83805847 144.62030029]
[163.37132263 154.21112061]
[174.90458679 163.80194092]
[186.43786621 173.39274597]
[197.97113037 182.98356628]
[213.52899170 185.85813904]
[218.36766052 199.94490051]
[229.90092468 209.53572083]
[246.14617920 211.77703857]
[252.07630920 227.06643677]
[241.59089661 239.67549133]
[225.47642517 236.63307190]
[220.31010437 221.06898499]
[208.77684021 211.47816467]
[194.04389954 209.28958130]
[188.38031006 194.51683044]
[176.84704590 184.92601013]
[165.31378174 175.33520508]
[153.78051758 165.74438477]
[142.24723816 156.15356445]
[128.77000427 162.73867798]
[129.24833679 177.73104858]
[129.72666931 192.72341919]
[130.20500183 207.71578979]
[130.68333435 222.70816040]
[131.16166687 237.70054626]
[131.63999939 252.69291687]
[132.11833191 267.68527222]
[132.59666443 282.67764282]
[133.07501221 297.67001343]
[133.55334473 312.66238403]
[134.03167725 327.65475464]
[134.51000977 342.64712524]
[134.98834229 357.63949585]
[145.65760803 369.62060547]
[142.80068970 385.40722656]
[128.60917664 392.88925171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[15 180]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[35 93]
[36 92]
[37 91]
[38 90]
[40 88]
[41 87]
[42 86]
[44 84]
[45 83]
[47 81]
[48 80]
[49 79]
[50 78]
[51 77]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[61 69]
[62 68]
[103 159]
[104 158]
[105 157]
[106 156]
[107 155]
[109 153]
[110 152]
[111 151]
[113 149]
[114 148]
[115 147]
[120 143]
[121 142]
[122 141]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
