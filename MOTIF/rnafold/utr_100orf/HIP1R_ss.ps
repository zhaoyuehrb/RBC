%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGCCCGGGCGCGGCGCGGUGGCCUCGCGGUGCCUAGGCUGGGGCUGCCGGACCGUGAGGCUGUGAGUCGCGCGGACGGAGCCGGACAAAAGCGGGCGGCGGCGGCAGGAUGAACAGCAUCAAGAACGUGCCGGCGCGGGUGCUGAGCCGCAGGCCGGGCCACAGCCUGGAGGCCGAGCGCGAGCAGUUCGACAAGACCCAGGCCAUCA\
) } def
/len { sequence length } bind def

/coor [
[142.79763794 248.23019409]
[140.03118896 240.46328735]
[139.15234375 232.24955750]
[140.21696472 224.04193115]
[143.17350769 216.29481506]
[147.86553955 209.43875122]
[139.01316833 197.32943726]
[130.16079712 185.22012329]
[121.30843353 173.11080933]
[112.45606232 161.00149536]
[103.60369110 148.89218140]
[94.75131989 136.78285217]
[80.63512421 131.71008301]
[66.09983063 135.41482544]
[51.56453323 139.11956787]
[37.02923965 142.82432556]
[22.49394226 146.52906799]
[7.95864582 150.23382568]
[-6.57665062 153.93856812]
[-18.03830719 164.84457397]
[-32.28226852 160.49040222]
[-46.81756592 164.19514465]
[-54.06070709 174.86572266]
[-66.24176025 177.65307617]
[-76.71025085 171.59480286]
[-91.29837036 175.08576965]
[-105.88648224 178.57675171]
[-120.47460175 182.06771851]
[-135.06271362 185.55870056]
[-149.65083313 189.04966736]
[-164.23893738 192.54064941]
[-178.82705688 196.03161621]
[-193.41517639 199.52258301]
[-208.00329590 203.01356506]
[-222.59140015 206.50453186]
[-230.20701599 211.54414368]
[-237.41928101 209.93801880]
[-252.05706787 213.21446228]
[-257.16998291 217.40025330]
[-262.78628540 218.24978638]
[-267.17251587 216.36555481]
[-281.90017700 219.21086121]
[-296.62783813 222.05618286]
[-304.06604004 235.81144714]
[-318.62469482 241.51930237]
[-333.42965698 236.48466492]
[-341.49044800 223.08476257]
[-339.00103760 207.64660645]
[-327.13684082 197.45960999]
[-311.49975586 197.33378601]
[-299.47314453 207.32852173]
[-284.74548340 204.48320007]
[-270.01782227 201.63787842]
[-255.33351135 198.57667542]
[-240.69572449 195.30021667]
[-226.08238220 191.91642761]
[-211.49426270 188.42544556]
[-196.90614319 184.93447876]
[-182.31803894 181.44349670]
[-167.72991943 177.95252991]
[-153.14179993 174.46154785]
[-138.55368042 170.97058105]
[-123.96557617 167.47959900]
[-109.37745667 163.98863220]
[-94.78934479 160.49766541]
[-80.20122528 157.00668335]
[-68.13027191 144.26725769]
[-50.52231216 149.65985107]
[-35.98701477 145.95510864]
[-25.56502151 135.31408691]
[-10.28139877 139.40327454]
[4.25389767 135.69851685]
[18.78919411 131.99377441]
[33.32448959 128.28903198]
[47.85978699 124.58428192]
[62.39508438 120.87953186]
[76.93038177 117.17478180]
[71.34171295 106.64982605]
[70.42884827 94.49821472]
[74.56030273 82.74838257]
[83.24446106 73.44834900]
[77.25088501 59.69781494]
[62.81534195 53.84521103]
[56.93288803 39.81483841]
[62.60141373 26.08882713]
[56.60783768 12.33829689]
[50.61426163 -1.41223264]
[35.34423828 -2.45381188]
[22.31342506 -10.48229504]
[14.51621437 -23.65279579]
[13.74434471 -38.93882751]
[20.17518616 -52.82777405]
[32.33098221 -62.12805939]
[47.41841507 -64.70253754]
[61.97050476 -59.95962524]
[72.64328766 -48.98919678]
[76.98423767 -34.31218338]
[73.99583435 -19.30125237]
[64.36479187 -7.40580702]
[70.35836792 6.34472227]
[76.35194397 20.09525299]
[90.26576996 25.28571701]
[96.53999329 39.14532852]
[91.00141144 53.70424271]
[96.99498749 67.45477295]
[111.84934998 69.53994751]
[121.39712524 57.97102356]
[130.94490051 46.40210342]
[140.49269104 34.83318329]
[150.04046631 23.26426506]
[147.72445679 17.40581703]
[147.13725281 11.17411613]
[148.30305481 5.06538296]
[151.10733032 -0.44022721]
[155.30773926 -4.91636086]
[160.55477905 -8.02346802]
[166.42097473 -9.53450871]
[172.43554688 -9.35142517]
[178.12223816 -7.51119757]
[188.80641174 -18.03965950]
[199.49058533 -28.56812286]
[210.17474365 -39.09658432]
[220.85891724 -49.62504578]
[231.54309082 -60.15351105]
[242.22726440 -70.68196869]
[227.47332764 -73.38777924]
[220.25737000 -86.53806305]
[225.90022278 -100.43620300]
[240.24101257 -104.83412933]
[252.70527649 -96.48894501]
[254.10243225 -81.55465698]
[265.52993774 -91.27124023]
[276.95745850 -100.98781586]
[288.38497925 -110.70439911]
[293.38049316 -126.32415771]
[309.46066284 -129.54290771]
[320.08358765 -117.04946899]
[314.32128906 -101.69602966]
[298.10156250 -99.27688599]
[286.67404175 -89.56030273]
[275.24652100 -79.84372711]
[263.81900024 -70.12714386]
[252.75572205 -59.99780273]
[242.07154846 -49.46934128]
[231.38739014 -38.94087601]
[220.70321655 -28.41241455]
[210.01904297 -17.88395309]
[199.33486938 -7.35549021]
[188.65071106 3.17297196]
[185.21481323 26.61649704]
[161.60939026 32.81204605]
[152.06159973 44.38096619]
[142.51382446 55.94988251]
[132.96604919 67.51880646]
[123.41826630 79.08772278]
[130.03500366 93.46585083]
[128.73072815 108.90325928]
[120.17337799 121.41383362]
[106.86063385 127.93048859]
[115.71300507 140.03981018]
[124.56537628 152.14912415]
[133.41775513 164.25843811]
[142.27012634 176.36775208]
[151.12248230 188.47706604]
[159.97485352 200.58638000]
[182.35775757 198.67500305]
[201.24859619 210.59346008]
[209.07058716 231.37876892]
[202.79689026 252.54916382]
[213.00715637 263.53781128]
[223.21743774 274.52645874]
[233.42770386 285.51510620]
[243.63798523 296.50375366]
[253.84826660 307.49237061]
[271.69619751 302.76235962]
[289.39205933 307.72634888]
[302.05795288 320.92626953]
[306.24816895 338.64620972]
[300.88629150 355.95834351]
[311.57046509 366.48681641]
[322.25460815 377.01525879]
[332.93878174 387.54373169]
[343.62295532 398.07220459]
[359.17248535 396.41494751]
[372.12045288 405.18331909]
[376.35321045 420.23715210]
[369.87219238 434.46847534]
[355.73754883 441.15771484]
[340.62319946 437.14639282]
[331.66571045 424.32852173]
[333.09451294 408.75637817]
[322.41033936 398.22790527]
[311.72616577 387.69943237]
[301.04199219 377.17098999]
[290.35781860 366.64251709]
[279.55718994 371.32678223]
[267.77514648 372.09802246]
[256.38952637 368.84265137]
[246.73973083 361.91934204]
[239.96911621 352.11972046]
[236.88954163 340.57785034]
[237.88410950 328.63891602]
[242.85961914 317.70266724]
[232.64933777 306.71401978]
[222.43907166 295.72537231]
[212.22879028 284.73672485]
[202.01850891 273.74807739]
[191.80824280 262.75942993]
[184.38208008 266.07980347]
[176.37055969 267.57800293]
[168.21492004 267.16403198]
[160.36605835 264.85348511]
[153.25964355 260.76690674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[13 77]
[14 76]
[15 75]
[16 74]
[17 73]
[18 72]
[19 71]
[21 69]
[22 68]
[25 66]
[26 65]
[27 64]
[28 63]
[29 62]
[30 61]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[37 55]
[38 54]
[41 53]
[42 52]
[43 51]
[81 105]
[82 104]
[85 101]
[86 100]
[87 99]
[106 155]
[107 154]
[108 153]
[109 152]
[110 151]
[119 149]
[120 148]
[121 147]
[122 146]
[123 145]
[124 144]
[125 143]
[131 142]
[132 141]
[133 140]
[134 139]
[169 208]
[170 207]
[171 206]
[172 205]
[173 204]
[174 203]
[179 195]
[180 194]
[181 193]
[182 192]
[183 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
