%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:14:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGAUUUUCUGAGUGUGACUCCUCUGUUCCUGGCACCCUGUGCAUCCUUAGCCAUAGCUUACAAGAGAACAGCUGGUUGUGAUGGCAGGAGGCCCUCCCAACACCAAGGCGGAGAUGGAAAUGUCCCUGGCAGAAGAACUGAAUCAUGGACGCCAAGGGGAAAACCAAGAGCACCUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[97.40224457 436.44415283]
[108.79614258 425.73373413]
[107.77803040 410.76831055]
[106.75991821 395.80291748]
[105.74180603 380.83749390]
[104.72369385 365.87210083]
[102.29981995 363.28176880]
[101.02182770 359.38024902]
[101.49604797 354.72433472]
[104.05464935 350.12222290]
[103.79993439 335.12435913]
[103.54522705 320.12652588]
[103.29051208 305.12869263]
[92.43597412 294.99386597]
[91.96401215 279.78756714]
[102.66794586 268.47103882]
[102.41323853 253.47320557]
[93.35057068 248.56953430]
[87.10195160 240.27459717]
[84.85467529 230.05268860]
[87.08215332 219.74366760]
[93.44609070 211.23188782]
[102.84594727 206.10171509]
[103.35529327 191.11036682]
[103.86464691 176.11900330]
[104.37399292 161.12765503]
[104.88334656 146.13630676]
[105.39269257 131.14495850]
[94.19400787 131.15837097]
[83.66299438 127.26049805]
[75.12541962 119.91936493]
[69.66396332 110.03789520]
[67.98095703 98.84284973]
[70.30812836 87.73258209]
[76.37496185 78.10234070]
[64.62483978 68.77847290]
[52.87471008 59.45460129]
[37.38171005 61.06850815]
[25.59823418 51.44539261]
[24.15510178 36.66523743]
[12.40497494 27.34136963]
[0.65484929 18.01749992]
[-11.09527683 8.69363117]
[-22.84540176 -0.63023841]
[-31.53442192 -3.52278900]
[-34.71411896 -10.21355915]
[-46.30422592 -19.73561096]
[-57.89433289 -29.25766182]
[-69.48443604 -38.77971268]
[-82.38877869 -38.30382156]
[-91.84906769 -46.49238968]
[-93.14148712 -58.53410721]
[-104.56822968 -68.25159454]
[-115.99497223 -77.96907806]
[-127.42171478 -87.68656921]
[-138.84844971 -97.40405273]
[-150.27519226 -107.12154388]
[-156.73478699 -108.69479370]
[-160.80459595 -112.70249176]
[-161.91769409 -117.36822510]
[-173.00787354 -127.46812439]
[-184.09805298 -137.56802368]
[-198.46011353 -132.27751160]
[-213.63421631 -134.27886963]
[-226.13343811 -143.11222839]
[-233.08555603 -156.74771118]
[-232.89302063 -172.05201721]
[-225.60009766 -185.50830078]
[-212.88261414 -194.02442932]
[-197.66297913 -195.64343262]
[-183.43853760 -189.99330139]
[-173.47798157 -178.37239075]
[-170.07014465 -163.45108032]
[-173.99815369 -148.65820312]
[-162.90797424 -138.55830383]
[-151.81779480 -128.45840454]
[-140.55770874 -118.54828644]
[-129.13096619 -108.83079529]
[-117.70422363 -99.11331177]
[-106.27748108 -89.39582062]
[-94.85073853 -79.67833710]
[-83.42399597 -69.96084595]
[-66.02513123 -67.74611664]
[-59.96238708 -50.36981964]
[-48.37228012 -40.84776688]
[-36.78217316 -31.32571602]
[-25.19207001 -21.80366516]
[-13.52153301 -12.38036442]
[-1.77140725 -3.05649495]
[9.97871876 6.26737452]
[21.72884369 15.59124374]
[33.47896957 24.91511345]
[48.20037842 22.96172142]
[60.24950027 32.25006485]
[62.19858170 47.70447540]
[73.94870758 57.02834702]
[85.69882965 66.35221863]
[100.41371155 63.44147873]
[107.72913361 50.34626389]
[115.04455566 37.25105286]
[122.35998535 24.15584183]
[113.54226685 11.69748688]
[111.01171875 -3.35439348]
[115.27079010 -18.01123810]
[125.47383881 -29.36291695]
[139.59503174 -35.15554810]
[154.83061218 -34.23900223]
[168.15551758 -26.79525757]
[176.92410278 -14.30227566]
[179.39535522 0.75945365]
[175.07859802 15.39941216]
[164.83093262 26.71082497]
[150.68704224 32.44780350]
[135.45520020 31.47126579]
[128.13977051 44.56647873]
[120.82434845 57.66168976]
[113.50891876 70.75690460]
[128.44223022 85.53215790]
[130.99751282 106.18419647]
[145.99696350 106.05683136]
[160.99642944 105.92947388]
[165.53190613 103.25449371]
[170.17420959 102.66184235]
[174.10704041 103.84004974]
[176.75823975 106.19715881]
[191.74472046 106.83377838]
[206.73121643 107.47039795]
[221.71769714 108.10701752]
[236.70417786 108.74362946]
[250.82029724 101.59899902]
[263.20773315 109.86949158]
[278.19421387 110.50611115]
[293.18069458 111.14272308]
[308.17581177 111.52477264]
[323.17529297 111.65213013]
[338.17474365 111.77948761]
[350.57681274 101.60265350]
[366.23522949 105.09461212]
[373.13818359 119.57663727]
[365.99032593 133.93934631]
[350.27487183 137.16491699]
[338.04739380 126.77894592]
[323.04791260 126.65158844]
[308.04846191 126.52423096]
[304.06115723 129.19058228]
[298.35198975 129.36488342]
[292.54406738 126.12921143]
[277.55758667 125.49259186]
[262.57110596 124.85597229]
[249.52691650 132.04614258]
[236.06756592 123.73011780]
[221.08108521 123.09349823]
[206.09458923 122.45687866]
[191.10810852 121.82026672]
[176.12162781 121.18364716]
[161.12379456 120.92893219]
[146.12432861 121.05629730]
[131.12486267 121.18365479]
[120.38404083 131.65431213]
[119.87469482 146.64566040]
[119.36534119 161.63700867]
[118.85599518 176.62835693]
[118.34664917 191.61970520]
[117.83729553 206.61105347]
[132.31466675 220.51187134]
[131.94447327 240.27459717]
[117.41107178 253.21849060]
[117.66578674 268.21633911]
[128.74781799 279.16284180]
[128.79248047 294.37643433]
[118.28835297 304.87399292]
[118.54306030 319.87182617]
[118.79777527 334.86965942]
[119.05248260 349.86749268]
[119.68910217 364.85397339]
[120.70721436 379.81939697]
[121.72532654 394.78479004]
[122.74343872 409.75021362]
[123.76155090 424.71560669]
[136.50103760 433.78421021]
[140.38079834 448.93286133]
[133.56893921 463.00881958]
[119.28181458 469.36584473]
[104.26535797 465.00238037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[10 174]
[11 173]
[12 172]
[13 171]
[16 168]
[17 167]
[23 164]
[24 163]
[25 162]
[26 161]
[27 160]
[28 159]
[35 97]
[36 96]
[37 95]
[40 92]
[41 91]
[42 90]
[43 89]
[44 88]
[46 87]
[47 86]
[48 85]
[49 84]
[52 82]
[53 81]
[54 80]
[55 79]
[56 78]
[57 77]
[60 76]
[61 75]
[62 74]
[98 117]
[99 116]
[100 115]
[101 114]
[119 158]
[120 157]
[121 156]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[131 149]
[132 148]
[133 147]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
