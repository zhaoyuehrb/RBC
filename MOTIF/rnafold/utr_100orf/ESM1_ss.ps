%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUGGACGGCUGCUUCCCACCAGCAAAGACCACGACUGGAGAGCCGAGCCGGAGGCAGCUGGGAAACAUGAAGAGCGUCUUGCUGCUGACCACGCUCCUCGUGCCUGCACACCUGGUGGCCGCCUGGAGCAAUAAUUAUGCGGUGGACUGCCCUCAACACUGUGACA\
) } def
/len { sequence length } bind def

/coor [
[21.76911163 152.25990295]
[31.34413528 140.71022034]
[16.84335899 144.54786682]
[2.34258318 148.38549805]
[-12.15819263 152.22314453]
[-17.55678558 164.58853149]
[-28.93207550 171.47554016]
[-42.00250244 170.55453491]
[-51.99778366 162.38685608]
[-66.56700134 165.95588684]
[-81.13621521 169.52491760]
[-95.70542908 173.09394836]
[-110.27464294 176.66297913]
[-124.84386444 180.23200989]
[-139.41307068 183.80102539]
[-153.98228455 187.37005615]
[-168.55151367 190.93908691]
[-183.12072754 194.50811768]
[-197.68994141 198.07714844]
[-200.92205811 214.00469971]
[-210.73379517 226.88792419]
[-225.12561035 234.18486023]
[-241.20069885 234.48352051]
[-255.74807739 227.77487183]
[-265.88400269 215.44453430]
[-280.38476562 219.28216553]
[-283.33963013 231.47471619]
[-291.16497803 241.18777466]
[-302.31936646 246.60627747]
[-314.64703369 246.75157166]
[-325.79443359 241.65757751]
[-333.65975952 232.35256958]
[-348.29241943 235.65176392]
[-362.92510986 238.95095825]
[-374.60238647 250.46499634]
[-390.33847046 245.84892273]
[-393.94540405 229.85136414]
[-381.71270752 218.92922974]
[-366.22430420 224.31828308]
[-351.59161377 221.01908875]
[-336.95895386 217.71989441]
[-330.76580811 201.21461487]
[-315.78900146 191.62162781]
[-297.89364624 192.92063904]
[-284.22241211 204.78138733]
[-269.72164917 200.94375610]
[-267.76754761 187.18817139]
[-260.68963623 175.18215942]
[-249.53088379 166.75993347]
[-235.96049500 163.22285461]
[-222.02438354 165.13839722]
[-209.83666992 172.24937439]
[-201.25897217 183.50791931]
[-186.68975830 179.93890381]
[-172.12052917 176.36987305]
[-157.55131531 172.80084229]
[-142.98210144 169.23181152]
[-128.41288757 165.66278076]
[-113.84367371 162.09376526]
[-99.27445984 158.52473450]
[-84.70524597 154.95570374]
[-70.13602448 151.38667297]
[-55.56681061 147.81764221]
[-47.48704147 133.08804321]
[-30.93324471 128.65391541]
[-15.99583435 137.72236633]
[-1.49505842 133.88473511]
[13.00571728 130.04708862]
[27.50649452 126.20944214]
[34.29760361 119.07886505]
[45.39170074 119.28067780]
[58.69330597 112.34761810]
[63.18906403 106.44437408]
[72.30538940 105.41191864]
[85.73283386 98.72584534]
[93.61526489 87.17772675]
[107.58108521 87.84671021]
[121.00853729 81.16062927]
[134.37362671 74.35077667]
[147.67523193 67.41771698]
[160.97685242 60.48465729]
[174.27845764 53.55160141]
[180.47216797 46.78319931]
[187.89053345 46.61589813]
[201.31797791 39.92982483]
[214.74542236 33.24374771]
[228.17288208 26.55767250]
[241.60032654 19.87159729]
[254.96542358 13.06173992]
[268.26702881 6.12868118]
[281.56863403 -0.80437696]
[282.10418701 -17.31166077]
[290.83154297 -31.22288704]
[305.29486084 -38.80119324]
[321.51293945 -38.06718445]
[335.07501221 -29.31503105]
[348.24624634 -36.49270630]
[361.41744995 -43.67037964]
[374.58868408 -50.84805298]
[387.75988770 -58.02572632]
[392.32250977 -72.91935730]
[405.78225708 -80.01091003]
[419.95294189 -75.56936646]
[433.12414551 -82.74703979]
[446.29537964 -89.92471313]
[454.71066284 -103.32223511]
[469.58862305 -102.61840057]
[482.75982666 -109.79607391]
[495.93106079 -116.97374725]
[509.10226440 -124.15142059]
[512.01873779 -139.51463318]
[524.16082764 -149.36877441]
[539.79534912 -149.06103516]
[551.54022217 -138.73670959]
[553.84985352 -123.27062225]
[545.63372803 -109.96540833]
[530.77124023 -105.10336304]
[516.27996826 -110.98020172]
[503.10873413 -103.80252838]
[489.93750000 -96.62485504]
[476.76629639 -89.44718170]
[469.29309082 -76.56305695]
[453.47305298 -76.75349426]
[440.30181885 -69.57582092]
[427.13061523 -62.39814758]
[423.18176270 -48.08234406]
[409.92651367 -40.61553192]
[394.93756104 -44.85450745]
[381.76635742 -37.67683411]
[368.59512329 -30.49916077]
[355.42391968 -23.32148743]
[342.25268555 -16.14381409]
[342.81396484 -2.47728372]
[337.39846802 10.15512848]
[327.01333618 19.25897980]
[313.65310669 23.00984383]
[299.91662598 20.61873055]
[288.50170898 12.49722862]
[275.20010376 19.43028641]
[261.89849854 26.36334419]
[257.40274048 32.26659393]
[248.28640747 33.29904556]
[234.85894775 39.98512268]
[221.43150330 46.67119598]
[208.00405884 53.35727310]
[194.57659912 60.04334641]
[181.21150208 66.85320282]
[167.90989685 73.78626251]
[154.60829163 80.71932220]
[141.30668640 87.65238190]
[136.81092834 93.55562592]
[127.69461060 94.58808136]
[114.26716614 101.27415466]
[106.38473511 112.82227325]
[92.41891479 112.15328979]
[78.99146271 118.83937073]
[65.62636566 125.64922333]
[52.32476044 132.58229065]
[67.17931366 134.66607666]
[80.01100922 142.43444824]
[88.74360657 154.63043213]
[91.96411133 169.28062439]
[89.15142822 184.01455688]
[80.76067352 196.44819641]
[68.14952087 204.56968689]
[53.35851669 207.06494141]
[38.78094482 203.53021240]
[26.77553749 194.53741455]
[19.28483963 181.54167175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 69]
[3 68]
[4 67]
[5 66]
[9 63]
[10 62]
[11 61]
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[17 55]
[18 54]
[19 53]
[25 46]
[26 45]
[32 41]
[33 40]
[34 39]
[71 158]
[72 157]
[74 156]
[75 155]
[77 153]
[78 152]
[79 150]
[80 149]
[81 148]
[82 147]
[84 146]
[85 145]
[86 144]
[87 143]
[88 142]
[89 140]
[90 139]
[91 138]
[96 132]
[97 131]
[98 130]
[99 129]
[100 128]
[103 125]
[104 124]
[105 123]
[107 121]
[108 120]
[109 119]
[110 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
