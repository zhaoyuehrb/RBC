%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACACAGACACACACCUCCUUGCUGGAGCAUUCACUAGGCGAGGCGCUCCAUCGGACUCACUAGCCGCACUCAUGAAUCGGCACCAUCUGCAGGAUCACUUUCUGGAAAUAGACAAGAAGAACUGCUGUGUGUUCCGAGAUGACUUCAUUGUCAAGGUGUUGCCGCCGGUGU\
) } def
/len { sequence length } bind def

/coor [
[108.61600494 203.53858948]
[111.05231476 218.54301453]
[107.55636597 233.33648682]
[98.66125488 245.66310120]
[85.72342682 253.64314270]
[70.71581268 256.05972290]
[55.92695236 252.54429626]
[43.61204529 243.63298035]
[35.64902878 230.68466187]
[33.25220490 215.67388916]
[36.78706360 200.88966370]
[45.71457672 188.58648682]
[58.67335129 180.64051819]
[73.68727875 178.26344299]
[77.15621948 163.67007446]
[80.62516022 149.07669067]
[84.09410095 134.48332214]
[87.56304169 119.88996124]
[82.47821808 114.37683105]
[72.43750000 125.52061462]
[64.07256317 137.97163391]
[49.44778824 134.63757324]
[47.30591583 119.79127502]
[60.39088440 112.45928955]
[72.30857086 103.35057831]
[67.22375488 97.83744812]
[52.39804459 100.11744690]
[37.57233810 102.39745331]
[22.74662971 104.67745209]
[7.92092323 106.95745850]
[-6.90478373 109.23745728]
[-20.97476959 121.09273529]
[-37.07112503 114.13755798]
[-51.85351562 116.68332672]
[-66.63590240 119.22910309]
[-74.35180664 132.83053589]
[-89.02332306 138.24166870]
[-103.72302246 132.90754700]
[-111.51015472 119.34677887]
[-108.70787048 103.96233368]
[-96.63932037 94.01828003]
[-81.00291443 94.20989990]
[-69.18167877 104.44670868]
[-54.39928436 101.90093994]
[-39.61689758 99.35517120]
[-32.36808395 89.64492035]
[-20.04882050 87.41888428]
[-9.18478680 94.41175079]
[5.64092064 92.13175201]
[20.46662712 89.85174561]
[35.29233551 87.57174683]
[50.11804199 85.29174042]
[64.94374847 83.01174164]
[76.50144958 73.45037842]
[81.51912689 59.31450653]
[86.53680420 45.17863464]
[91.55448151 31.04276085]
[96.44507599 16.86241913]
[101.20819092 2.63875246]
[98.25346375 -12.90409565]
[109.63174438 -22.51575089]
[114.39485931 -36.73941803]
[119.15798187 -50.96308517]
[107.59974670 -60.67942810]
[103.36026001 -77.47045898]
[110.42457581 -95.70002747]
[103.91632080 -109.21456146]
[97.40806580 -122.72909546]
[90.89980316 -136.24363708]
[75.60134888 -136.70817566]
[62.27682114 -144.23913574]
[53.98810577 -157.10598755]
[52.63988113 -172.35200500]
[58.54196930 -186.47375488]
[70.33810425 -196.22618103]
[85.31762695 -199.36824036]
[100.03835297 -195.17790222]
[111.11756134 -184.61808777]
[116.00933075 -170.11535645]
[113.58957672 -155.00233459]
[104.41433716 -142.75189209]
[110.92259216 -129.23735046]
[117.43085480 -115.72281647]
[123.93910980 -102.20829010]
[131.31857300 -100.86911011]
[132.08625793 -115.84944916]
[131.72566223 -130.84512329]
[145.47094727 -136.85072327]
[156.22927856 -126.39805603]
[150.62251282 -112.48561859]
[146.07752991 -98.19075775]
[153.45700073 -96.85157776]
[164.29891968 -107.21752167]
[175.14083862 -117.58345795]
[185.98275757 -127.94940186]
[181.35603333 -142.45300293]
[183.47662354 -157.46600342]
[191.87091064 -170.01814270]
[204.82940674 -177.64955139]
[219.75468445 -178.89273071]
[233.68196106 -173.55448914]
[244.52388000 -183.92044067]
[255.36579895 -194.28637695]
[266.11425781 -204.74920654]
[276.76834106 -215.30810547]
[287.42242432 -225.86700439]
[298.07653809 -236.42588806]
[301.86764526 -252.38081360]
[317.65585327 -256.81518555]
[329.19964600 -245.16732788]
[324.62374878 -229.41952515]
[308.63543701 -225.77178955]
[297.98132324 -215.21290588]
[287.32723999 -204.65400696]
[276.67312622 -194.09510803]
[274.12707520 -187.12997437]
[265.73175049 -183.44445801]
[254.88981628 -173.07850647]
[244.04789734 -162.71257019]
[248.75592041 -148.55982971]
[246.84436035 -133.70535278]
[238.63925171 -121.10229492]
[225.72314453 -113.27960968]
[210.63012695 -111.83470154]
[196.34870911 -117.10747528]
[185.50677490 -106.74153900]
[174.66485596 -96.37559509]
[163.82293701 -86.00965881]
[158.19808960 -54.61301422]
[133.38165283 -46.19997025]
[128.61853027 -31.97630310]
[123.85541534 -17.75263405]
[127.15083313 -3.22715807]
[115.43186188 7.40186882]
[110.66873932 21.62553596]
[111.52925110 28.99133873]
[105.69035339 36.06044006]
[100.67267609 50.19631195]
[95.65499878 64.33218384]
[90.63732147 78.46805573]
[106.54547119 63.18922043]
[135.41810608 62.89294815]
[163.59768677 85.60848999]
[175.49114990 94.74880981]
[187.38461304 103.88912964]
[199.27807617 113.02944946]
[214.91419983 110.73004150]
[227.54650879 120.22743225]
[229.68046570 135.88699341]
[220.05004883 148.41818237]
[204.36880493 150.38645935]
[191.94013977 140.62409973]
[190.13775635 124.92292023]
[178.24429321 115.78260040]
[166.35083008 106.64227295]
[154.45736694 97.50195312]
[142.64590454 106.74907684]
[130.83547974 115.99536896]
[136.85441589 129.73481750]
[142.87335205 143.47425842]
[148.89230347 157.21369934]
[162.41502380 166.49096680]
[160.87246704 182.81741333]
[145.85144043 189.39776611]
[132.80432129 179.46275330]
[135.15284729 163.23265076]
[129.13391113 149.49319458]
[123.11496735 135.75375366]
[117.09603119 122.01431274]
[102.15641022 123.35890198]
[98.68746948 137.95227051]
[95.21852875 152.54563904]
[91.74958801 167.13900757]
[88.28064728 181.73237610]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[33 45]
[34 44]
[35 43]
[54 140]
[55 139]
[56 138]
[57 137]
[58 135]
[59 134]
[61 132]
[62 131]
[63 130]
[66 84]
[67 83]
[68 82]
[69 81]
[92 128]
[93 127]
[94 126]
[95 125]
[101 119]
[102 118]
[103 117]
[104 115]
[105 114]
[106 113]
[107 112]
[143 156]
[144 155]
[145 154]
[146 153]
[158 169]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
