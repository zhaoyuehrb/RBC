%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUGGCGCAUGCGCCCCGACGCUCGGGCCCGCGGGCUCCUUUCUCCGUCGCCGCUCCAGGACGCGGCCUCGGGGGAGCCCUACCGGGACGGAGCCGCGGGGCCUGCGACUUCCCCCGGAGCUGGCCUGAGGGAUUCUCCUGUCCAUGGCUGCCACCAAAACUGCGAGUUAUGAUGAACAUUUCAGGCCAGAAAAGUUAAGAGAAUGGCCGGAGCCCGAGUCCGUUUCUUUAAUGGAGGUAUUAG\
) } def
/len { sequence length } bind def

/coor [
[90.96865845 329.78100586]
[89.92019653 314.81768799]
[82.43853760 315.34191895]
[78.11280060 329.70465088]
[81.54165649 345.14984131]
[70.46275330 355.10510254]
[66.13702393 369.46783447]
[61.81128693 383.83056641]
[57.48554993 398.19329834]
[61.76580048 414.02401733]
[50.00593948 425.45367432]
[34.30350113 420.72445679]
[30.81181335 404.70135498]
[43.12282181 393.86755371]
[47.44855499 379.50482178]
[51.77429199 365.14208984]
[56.10002518 350.77935791]
[52.36176300 336.36151123]
[63.75007248 325.37893677]
[68.07580566 311.01620483]
[79.98860168 296.09539795]
[94.74035645 290.18554688]
[107.58496094 292.73153687]
[107.20343018 277.73638916]
[106.82189941 262.74124146]
[106.44036865 247.74609375]
[106.05884552 232.75094604]
[105.67731476 217.75579834]
[105.29578400 202.76065063]
[104.91425323 187.76551819]
[104.43737030 172.77308655]
[103.86515808 157.78401184]
[103.29293823 142.79493713]
[77.03363800 133.16389465]
[63.73999786 110.53029633]
[48.79122925 111.76898193]
[33.84246063 113.00767517]
[18.89369583 114.24636078]
[3.94492745 115.48505402]
[-11.00383949 116.72374725]
[-25.95260811 117.96243286]
[-40.90137482 119.20112610]
[-44.33903503 121.76548767]
[-48.04046631 122.99368286]
[-51.55757141 122.96527863]
[-54.51311111 121.89590454]
[-56.63861847 120.10283661]
[-71.63103485 120.57971954]
[-86.62345886 121.05660248]
[-97.40459442 132.29959106]
[-112.61582947 132.56964111]
[-123.26786041 122.22219849]
[-138.26028442 122.69908142]
[-153.25270081 123.17595673]
[-168.24511719 123.65283966]
[-183.23753357 124.12972260]
[-191.84278870 137.04208374]
[-206.40594482 142.39878845]
[-221.32716370 138.14006042]
[-230.86894226 125.90346527]
[-231.36225891 110.39423370]
[-222.61743164 97.57597351]
[-207.99702454 92.37757874]
[-193.12287903 96.79792786]
[-183.71441650 109.13730621]
[-168.72200012 108.66042328]
[-153.72958374 108.18354034]
[-138.73716736 107.70665741]
[-123.74474335 107.22978210]
[-113.77184296 96.22628784]
[-98.57419586 95.52908325]
[-87.10033417 106.06418610]
[-72.10791779 105.58730316]
[-57.11550140 105.11042023]
[-42.14006424 104.25235748]
[-27.19129753 103.01366425]
[-12.24252987 101.77497864]
[2.70623732 100.53628540]
[17.65500450 99.29759979]
[32.60377121 98.05890656]
[47.55253983 96.82021332]
[62.50130844 95.58152771]
[64.62350464 86.80233765]
[68.76995850 78.77832794]
[74.70341492 71.96862793]
[67.06615448 59.05847168]
[59.42888641 46.14831161]
[51.79162598 33.23815536]
[44.15436172 20.32799530]
[31.89167023 16.37965393]
[25.79247475 5.48909712]
[28.64482117 -6.25105953]
[21.17237663 -19.25731087]
[13.69993019 -32.26356125]
[6.22748423 -45.26980972]
[-7.35613585 -53.38127518]
[-6.98750830 -68.27131653]
[-14.45995426 -81.27756500]
[-21.93239975 -94.28382111]
[-29.40484619 -107.29006958]
[-36.87729263 -120.29631805]
[-50.01044083 -131.01811218]
[-43.34328461 -146.60609436]
[-26.51883125 -144.51467896]
[-23.87104034 -127.76876831]
[-16.39859390 -114.76251221]
[-8.92614937 -101.75626373]
[-1.45370317 -88.75001526]
[6.01874256 -75.74376678]
[19.06788445 -68.56259155]
[19.23373413 -52.74225616]
[26.70618057 -39.73600769]
[34.17862701 -26.72975540]
[41.65107346 -13.72350502]
[57.28667831 -5.73302174]
[57.06452179 12.69073105]
[64.70178223 25.60089111]
[72.33905029 38.51105118]
[79.97631073 51.42120743]
[87.61357117 64.33136749]
[99.95542908 62.24191666]
[112.30218506 64.30222321]
[123.29688263 70.28585815]
[134.71226501 60.55502319]
[146.12763977 50.82418823]
[157.54301453 41.09335327]
[168.95838928 31.36251640]
[180.37376404 21.63167953]
[191.78913879 11.90084457]
[203.20452881 2.17000842]
[214.61990356 -7.56082726]
[226.03527832 -17.29166222]
[237.45065308 -27.02249908]
[238.85569763 -42.53583527]
[250.57113647 -52.24166870]
[265.35208130 -50.80656815]
[276.76745605 -60.53740311]
[288.18283081 -70.26824188]
[289.47747803 -74.35692596]
[291.76617432 -77.51460266]
[294.63864136 -79.54433441]
[297.66268921 -80.40103912]
[300.43511963 -80.18565369]
[312.33059692 -89.32337952]
[324.22604370 -98.46111298]
[329.11007690 -106.15147400]
[336.33142090 -107.63825989]
[348.34213257 -116.62395477]
[360.35284424 -125.60964966]
[372.36355591 -134.59533691]
[384.37426758 -143.58103943]
[396.38497925 -152.56672668]
[408.33831787 -161.62861633]
[420.23376465 -170.76634216]
[418.14144897 -185.98205566]
[423.95214844 -200.19934082]
[436.10284424 -209.59382629]
[451.32504272 -211.63845825]
[465.52404785 -205.78321838]
[474.88040161 -193.60314941]
[476.87728882 -178.37461853]
[470.97756958 -164.19403076]
[458.76821899 -154.87590027]
[443.53353882 -152.92674255]
[429.37149048 -158.87089539]
[417.47604370 -149.73316956]
[414.09429932 -143.18167114]
[405.37069702 -140.55601501]
[393.35995483 -131.57031250]
[381.34924316 -122.58462524]
[369.33853149 -113.59893036]
[357.32781982 -104.61323547]
[345.31710815 -95.62754059]
[333.36376953 -86.56565094]
[321.46832275 -77.42792511]
[309.57284546 -68.29019928]
[297.91366577 -58.85286331]
[286.49829102 -49.12202835]
[275.08291626 -39.39118958]
[274.15982056 -24.56946754]
[262.72161865 -14.53839970]
[247.18148804 -15.60712147]
[235.76611328 -5.87628603]
[224.35073853 3.85454988]
[212.93536377 13.58538532]
[201.51997375 23.31622124]
[190.10459900 33.04705811]
[178.68922424 42.77789307]
[167.27384949 52.50872803]
[155.85847473 62.23956299]
[144.44309998 71.97039795]
[133.02770996 81.70123291]
[137.01004028 88.38185120]
[139.61477661 95.92871857]
[140.65463257 104.05248260]
[140.00401306 112.42368317]
[137.60763550 120.68611145]
[151.02005005 127.40230560]
[164.43244934 134.11849976]
[177.84486389 140.83470154]
[192.76010132 135.60868835]
[206.96569824 142.53520203]
[212.03372192 157.50485229]
[204.95741272 171.63642883]
[189.93501282 176.54589844]
[175.87904358 169.32057190]
[171.12866211 154.24710083]
[157.71626282 147.53091431]
[144.30384827 140.81471252]
[130.89143372 134.09851074]
[118.28202057 142.22271729]
[118.85424042 157.21179199]
[119.42645264 172.20088196]
[122.87409210 180.63349915]
[119.90940094 187.38398743]
[120.29093170 202.37913513]
[120.67246246 217.37428284]
[121.05399323 232.36943054]
[121.43551636 247.36456299]
[121.81704712 262.35971069]
[122.19857788 277.35485840]
[122.58010864 292.35000610]
[125.98431396 306.95861816]
[132.27070618 320.57775879]
[138.55709839 334.19692993]
[144.84349060 347.81607056]
[151.12988281 361.43521118]
[165.62637329 368.30773926]
[169.15121460 383.95877075]
[159.00045776 396.38220215]
[142.96087646 396.04782104]
[133.33668518 383.21215820]
[137.51072693 367.72161865]
[131.22433472 354.10244751]
[124.93795013 340.48330688]
[118.65155792 326.86416626]
[112.36516571 313.24499512]
[104.88350677 313.76922607]
[105.93196869 328.73254395]
[106.98043060 343.69586182]
[108.02889252 358.65917969]
[109.07735443 373.62249756]
[110.12558746 388.58581543]
[95.16223907 389.63381958]
[94.11404419 374.67095947]
[93.06558228 359.70764160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 20]
[4 19]
[6 17]
[7 16]
[8 15]
[9 14]
[23 222]
[24 221]
[25 220]
[26 219]
[27 218]
[28 217]
[29 216]
[30 215]
[31 213]
[32 212]
[33 211]
[35 82]
[36 81]
[37 80]
[38 79]
[39 78]
[40 77]
[41 76]
[42 75]
[47 74]
[48 73]
[49 72]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[92 114]
[93 113]
[94 112]
[95 111]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
[123 192]
[124 191]
[125 190]
[126 189]
[127 188]
[128 187]
[129 186]
[130 185]
[131 184]
[132 183]
[133 182]
[136 179]
[137 178]
[138 177]
[143 176]
[144 175]
[145 174]
[147 173]
[148 172]
[149 171]
[150 170]
[151 169]
[152 168]
[153 166]
[154 165]
[197 210]
[198 209]
[199 208]
[200 207]
[223 237]
[224 236]
[225 235]
[226 234]
[227 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
