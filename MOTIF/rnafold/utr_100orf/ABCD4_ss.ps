%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUCGGUCGCUUCCGGGAGAGUCCGCGUCUCCCGCACCUUCCUCUCUAUCAAACGCCGUCUCUGUGGUAGCCGGGGCCCCGCCCCUCCUCGGACUCUACCCAGUACUGAACUAGGGGCAGCUGGGCUCCAGAGUCCCUCGGGUCUCAGGUCAUGGCGGUCGCGGGGCCCGCGCCCGGAGCUGGCGCCAGGCCCAGGUUAGAUCUGCAAUUUCUCCAGCGGUUCCUGCAGAUACUGAAGGUUUUGUUUCCUU\
) } def
/len { sequence length } bind def

/coor [
[69.30805969 380.51037598]
[53.80175018 379.93246460]
[41.61738586 370.32409668]
[37.44010544 355.37985229]
[42.87615967 340.84613037]
[55.83526993 332.31143188]
[56.39392090 317.32183838]
[46.10472488 306.61352539]
[46.45774460 291.40399170]
[57.75937653 280.68435669]
[58.31802750 265.69476318]
[51.22042847 263.27111816]
[39.92514801 273.14108276]
[37.02523422 258.42379761]
[29.92763329 256.00015259]
[21.20151138 268.20074463]
[12.47538948 280.40136719]
[3.74926734 292.60195923]
[-4.97685480 304.80258179]
[-13.70297718 317.00317383]
[-22.42910004 329.20379639]
[-18.35811996 344.30215454]
[-24.99147415 358.46310425]
[-39.19709015 365.00027466]
[-54.26751709 360.82699585]
[-63.08695221 347.91375732]
[-61.49113464 332.35781860]
[-50.23355865 321.50421143]
[-34.62970352 320.47766113]
[-25.90358353 308.27703857]
[-17.17746162 296.07644653]
[-8.45133877 283.87585449]
[0.27478340 271.67523193]
[9.00090599 259.47463989]
[17.72702789 247.27401733]
[28.61120224 219.91386414]
[51.54475021 214.70043945]
[56.12683105 200.41741943]
[60.70891190 186.13439941]
[65.29099274 171.85139465]
[69.87306976 157.56837463]
[74.45514679 143.28535461]
[61.54817963 150.92800903]
[46.91696930 154.23370361]
[31.97795677 152.88243103]
[18.17738533 147.00500488]
[6.85128307 137.17039490]
[-0.90387619 124.33071136]
[-4.33731842 109.72895050]
[-3.11665273 94.77870178]
[2.63994837 80.92729187]
[12.37519073 69.51567078]
[25.14660835 61.64859390]
[39.71780777 58.08767319]
[54.67815399 59.17763519]
[68.57934570 64.81296539]
[80.07560730 74.44810486]
[88.05436707 87.15113831]
[82.42183685 73.24881744]
[76.78931427 59.34648895]
[62.51149368 53.11899567]
[56.99735260 38.93982315]
[63.02230835 25.36648560]
[57.38978195 11.46416092]
[51.75725174 -2.43816376]
[46.12472534 -16.34048843]
[33.77163696 -26.22541618]
[36.16361618 -40.92669678]
[30.53108978 -54.82902145]
[18.17800140 -64.71395111]
[20.56998444 -79.41522980]
[14.93745613 -93.31755829]
[9.30492783 -107.21987915]
[2.15709662 -120.40731812]
[-6.41685724 -132.71533203]
[-14.99081135 -145.02336121]
[-23.56476593 -157.33137512]
[-32.13871765 -169.63938904]
[-40.71267319 -181.94740295]
[-49.28662872 -194.25543213]
[-69.20316315 -202.21017456]
[-69.97039032 -222.84883118]
[-78.99678802 -234.82899475]
[-88.02318573 -246.80914307]
[-97.04958344 -258.78930664]
[-106.07598114 -270.76943970]
[-115.10237885 -282.74960327]
[-132.47894287 -284.87689209]
[-142.72792053 -298.65014648]
[-139.88821411 -315.23880005]
[-149.06266785 -327.10595703]
[-158.23713684 -338.97308350]
[-167.41159058 -350.84024048]
[-176.65956116 -362.65020752]
[-185.98066711 -374.40252686]
[-195.30177307 -386.15484619]
[-211.02867126 -387.71691895]
[-220.97994995 -399.99487305]
[-219.25166321 -415.70437622]
[-206.86920166 -425.52526855]
[-191.17884827 -423.63101196]
[-181.48941040 -411.14538574]
[-183.54946899 -395.47595215]
[-174.22834778 -383.72363281]
[-164.90724182 -371.97131348]
[-158.30635071 -368.69259644]
[-155.54444885 -360.01470947]
[-146.36997986 -348.14755249]
[-137.19552612 -336.28039551]
[-128.02105713 -324.41326904]
[-115.15265656 -324.58551025]
[-104.36889648 -317.21133423]
[-99.72495270 -304.79281616]
[-103.12222290 -291.77600098]
[-94.09582520 -279.79586792]
[-85.06942749 -267.81570435]
[-76.04302979 -255.83554077]
[-67.01663208 -243.85539246]
[-57.99023056 -231.87522888]
[-49.16093826 -232.08943176]
[-41.09310150 -228.17074585]
[-35.63840103 -220.87869263]
[-34.11226654 -211.76179504]
[-36.97861099 -202.82937622]
[-28.40465546 -190.52136230]
[-19.83070183 -178.21334839]
[-11.25674725 -165.90531921]
[-2.68279314 -153.59730530]
[5.89116096 -141.28929138]
[14.46511459 -128.98127747]
[21.88877487 -130.04862976]
[44.15975952 -133.25071716]
[48.91883850 -147.47573853]
[53.67791748 -161.70075989]
[50.71877289 -177.24276733]
[62.09432983 -186.85765076]
[66.85340881 -201.08267212]
[63.05495453 -217.03584290]
[75.15584564 -228.10383606]
[90.70772552 -222.90084839]
[93.71215057 -206.77926636]
[81.07843018 -196.32359314]
[76.31935120 -182.09857178]
[79.61889648 -167.57402039]
[67.90293884 -156.94168091]
[63.14385605 -142.71665955]
[58.38477707 -128.49163818]
[41.48387527 -113.93775940]
[23.20725250 -112.85240936]
[28.83978081 -98.95008087]
[34.47230911 -85.04776001]
[46.42251968 -76.15721893]
[44.43341446 -60.46155167]
[50.06594086 -46.55922699]
[62.01615524 -37.66868591]
[60.02704620 -21.97301674]
[65.65957642 -8.07069206]
[71.29210663 5.83163261]
[76.92462921 19.73395729]
[90.69820404 25.28591919]
[96.60843658 39.30461502]
[90.69163513 53.71396255]
[96.32416534 67.61628723]
[101.95669556 81.51860809]
[115.35963440 88.25367737]
[129.87626648 84.47644806]
[144.39288330 80.69921112]
[158.90951538 76.92197418]
[173.42614746 73.14473724]
[186.25437927 59.91687012]
[202.97877502 65.27068329]
[217.44738770 61.31348801]
[231.91598511 57.35629272]
[246.38459778 53.39909363]
[260.85321045 49.44189835]
[267.22369385 35.16076660]
[281.30609131 28.36218262]
[296.45104980 32.25622940]
[305.50765991 45.00425720]
[304.19961548 60.58703613]
[293.14453125 71.64685822]
[277.56231689 72.96160889]
[264.81039429 63.91050339]
[250.34179688 67.86769867]
[235.87318420 71.82489777]
[221.40458679 75.78209686]
[206.93597412 79.73929596]
[200.68444824 90.07543182]
[188.68385315 93.50141907]
[177.20338440 87.66136932]
[162.68675232 91.43860626]
[148.17012024 95.21583557]
[133.65350342 98.99307251]
[119.13687134 102.77030945]
[117.51988983 110.09392548]
[132.44960022 108.64355469]
[138.44235229 122.39443970]
[127.21622467 132.34300232]
[114.28591919 124.74115753]
[112.66893768 132.06477356]
[124.24561310 141.60314941]
[135.88128662 151.06947327]
[147.57550049 160.46336365]
[159.26971436 169.85726929]
[170.96392822 179.25115967]
[182.65815735 188.64505005]
[194.35237122 198.03895569]
[206.04658508 207.43284607]
[220.34120178 201.99122620]
[235.34126282 204.41920471]
[247.03431702 213.96586609]
[252.34336853 227.98977661]
[249.93624878 242.68913269]
[261.63046265 252.08303833]
[277.67065430 251.77975464]
[287.79730225 264.22283936]
[284.24215698 279.86700439]
[269.73236084 286.71139526]
[255.39863586 279.50558472]
[252.23657227 263.77725220]
[240.54234314 254.38336182]
[226.70764160 259.90301514]
[211.86892700 257.74234009]
[200.02578735 248.38252258]
[194.42092896 234.25869751]
[196.65269470 219.12705994]
[184.95848083 209.73316956]
[173.26425171 200.33927917]
[161.57003784 190.94537354]
[149.87582397 181.55148315]
[138.18161011 172.15759277]
[126.48738861 162.76368713]
[119.32394409 161.02966309]
[114.70722961 153.17982483]
[103.13056183 143.64144897]
[88.73816681 147.86743164]
[84.15608978 162.15045166]
[79.57400513 176.43347168]
[74.99192810 190.71649170]
[70.40985107 204.99949646]
[65.82776642 219.28251648]
[75.43131256 225.75189209]
[81.44477844 237.40751648]
[81.18198395 252.06973267]
[73.30762482 266.25341797]
[72.74897003 281.24301147]
[83.22132874 292.77413940]
[82.44124603 307.96777344]
[71.38351440 317.88049316]
[70.82485962 332.87008667]
[83.11273956 342.34573364]
[87.45188904 357.24377441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 250]
[7 249]
[10 246]
[11 245]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[37 241]
[38 240]
[39 239]
[40 238]
[41 237]
[42 236]
[58 164]
[59 163]
[60 162]
[63 159]
[64 158]
[65 157]
[66 156]
[68 154]
[69 153]
[71 151]
[72 150]
[73 149]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[90 110]
[91 109]
[92 108]
[93 107]
[94 105]
[95 104]
[96 103]
[132 147]
[133 146]
[134 145]
[136 143]
[137 142]
[165 194]
[166 193]
[167 192]
[168 191]
[169 190]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
[200 235]
[201 234]
[202 232]
[203 231]
[204 230]
[205 229]
[206 228]
[207 227]
[208 226]
[213 221]
[214 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
