%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CROCC2)
} def

/sequence { (\
AUGAGCUCUGCCUCCAGUGAGCCUGGCAAUGGGGACGCCUCCCAACAGCCCCUACUGGGGCUGGACACCGUGAUCCAGAGACUGGAGGACACCAUCCUGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 95 0.095599030 ubox
2 10 0.005688029 ubox
2 91 0.010087504 ubox
2 94 0.112115805 ubox
2 99 0.025339341 ubox
3 9 0.009497405 ubox
3 90 0.011322644 ubox
3 93 0.116569715 ubox
3 96 0.667392237 ubox
3 98 0.018771830 ubox
4 83 0.005754977 ubox
4 95 0.667203052 ubox
4 98 0.163564915 ubox
5 11 0.013837456 ubox
5 22 0.006930299 ubox
5 27 0.003171382 ubox
5 82 0.005914875 ubox
5 97 0.167364431 ubox
6 10 0.017530981 ubox
6 21 0.007014424 ubox
6 26 0.003173461 ubox
6 80 0.006388023 ubox
7 20 0.007000902 ubox
7 79 0.006392536 ubox
7 89 0.013840952 ubox
7 100 0.042031047 ubox
8 19 0.006907672 ubox
8 78 0.006392678 ubox
8 88 0.008989429 ubox
8 99 0.050470359 ubox
9 28 0.003628368 ubox
9 77 0.006234803 ubox
9 87 0.003668530 ubox
9 91 0.764914358 ubox
9 94 0.051776158 ubox
10 18 0.004349222 ubox
10 27 0.004096212 ubox
10 76 0.005974464 ubox
10 90 0.827820668 ubox
10 93 0.055924338 ubox
11 17 0.004501213 ubox
11 26 0.004077908 ubox
11 88 0.999168527 ubox
12 25 0.004013114 ubox
12 87 0.999846625 ubox
13 20 0.003293732 ubox
13 86 0.999743339 ubox
14 19 0.003283121 ubox
14 26 0.005455117 ubox
14 85 0.999927220 ubox
15 25 0.005686858 ubox
15 84 0.999923524 ubox
16 24 0.005766397 ubox
16 83 0.999685775 ubox
17 23 0.005744726 ubox
17 82 0.999865821 ubox
18 81 0.994570836 ubox
19 27 0.003276797 ubox
19 75 0.017870873 ubox
20 74 0.017846658 ubox
21 27 0.026103993 ubox
21 71 0.003979573 ubox
22 26 0.025941991 ubox
22 32 0.012700093 ubox
22 33 0.003354702 ubox
22 70 0.003961499 ubox
23 31 0.013054320 ubox
23 32 0.004560359 ubox
23 48 0.007639480 ubox
23 78 0.995291114 ubox
23 80 0.008352808 ubox
24 31 0.004541080 ubox
24 44 0.004739215 ubox
24 47 0.007973389 ubox
24 70 0.016593895 ubox
24 77 0.998307823 ubox
24 79 0.006519382 ubox
24 94 0.003910818 ubox
25 30 0.003730730 ubox
25 43 0.005164817 ubox
25 46 0.008063420 ubox
25 50 0.003535067 ubox
25 69 0.018577184 ubox
25 75 0.019721052 ubox
25 76 0.998633076 ubox
25 93 0.004300484 ubox
26 42 0.005139078 ubox
26 49 0.003757206 ubox
26 68 0.018528424 ubox
26 71 0.018948248 ubox
26 74 0.024024841 ubox
26 75 0.994443656 ubox
26 92 0.004264314 ubox
27 48 0.003847444 ubox
27 70 0.051372391 ubox
27 72 0.277685425 ubox
28 71 0.229514790 ubox
29 71 0.882027843 ubox
29 74 0.052055204 ubox
30 44 0.317592141 ubox
30 67 0.079662547 ubox
30 70 0.897223606 ubox
30 72 0.018752202 ubox
30 73 0.054628364 ubox
30 77 0.009632467 ubox
31 39 0.009185602 ubox
31 40 0.019825173 ubox
31 41 0.025909902 ubox
31 42 0.072438642 ubox
31 43 0.357177630 ubox
31 46 0.004393075 ubox
31 66 0.083324392 ubox
31 69 0.893475872 ubox
31 71 0.019089382 ubox
31 76 0.010005089 ubox
32 38 0.009302527 ubox
32 39 0.031998370 ubox
32 40 0.029050241 ubox
32 41 0.075566047 ubox
32 42 0.356725087 ubox
32 43 0.722094013 ubox
32 68 0.583095116 ubox
32 69 0.027002843 ubox
32 75 0.009953165 ubox
33 38 0.040604551 ubox
33 39 0.079918079 ubox
33 40 0.084954018 ubox
33 41 0.356151909 ubox
33 42 0.895823283 ubox
33 43 0.200741864 ubox
33 68 0.026898421 ubox
33 69 0.016631615 ubox
33 74 0.009862786 ubox
33 76 0.014492639 ubox
34 38 0.079163530 ubox
34 39 0.163855956 ubox
34 40 0.289625046 ubox
34 41 0.897274060 ubox
34 42 0.197926265 ubox
34 68 0.016629229 ubox
34 75 0.014701047 ubox
35 40 0.809246960 ubox
35 71 0.007735733 ubox
35 74 0.014725591 ubox
36 63 0.003959875 ubox
36 70 0.007926156 ubox
36 72 0.017890041 ubox
37 69 0.007864128 ubox
37 71 0.017957325 ubox
38 64 0.035555325 ubox
38 70 0.017926273 ubox
39 63 0.031007285 ubox
39 64 0.006661178 ubox
40 65 0.040963938 ubox
41 64 0.042538702 ubox
42 63 0.036998698 ubox
42 64 0.023403399 ubox
43 63 0.022933997 ubox
44 62 0.016297004 ubox
45 71 0.004399735 ubox
46 63 0.995345010 ubox
46 70 0.003747453 ubox
47 62 0.999080593 ubox
48 61 0.999908711 ubox
49 60 0.999982059 ubox
50 59 0.999978840 ubox
51 58 0.999972999 ubox
51 59 0.004067893 ubox
52 57 0.999426648 ubox
52 58 0.004900012 ubox
53 57 0.005058278 ubox
61 78 0.012103872 ubox
62 70 0.012397766 ubox
62 77 0.017496979 ubox
63 69 0.037632564 ubox
63 76 0.024407919 ubox
64 68 0.059221242 ubox
64 74 0.011301698 ubox
64 75 0.043833937 ubox
65 71 0.098129746 ubox
65 74 0.046473730 ubox
66 70 0.100334552 ubox
66 72 0.106117110 ubox
67 71 0.086364482 ubox
70 90 0.006292566 ubox
70 92 0.004414103 ubox
71 77 0.003330576 ubox
71 89 0.006258507 ubox
71 91 0.004436509 ubox
72 76 0.003683952 ubox
72 90 0.004418973 ubox
74 86 0.008091269 ubox
75 80 0.003663472 ubox
75 85 0.008616975 ubox
76 84 0.008621866 ubox
77 83 0.008602448 ubox
78 82 0.008414349 ubox
84 97 0.005548982 ubox
85 96 0.005559544 ubox
86 95 0.005539874 ubox
86 98 0.009986967 ubox
87 93 0.004959551 ubox
87 97 0.012081126 ubox
88 92 0.004965219 ubox
88 96 0.013178404 ubox
89 95 0.013134677 ubox
90 99 0.072929845 ubox
91 98 0.066211045 ubox
93 99 0.132397121 ubox
94 98 0.107554029 ubox
9 91 0.9500000 lbox
10 90 0.9500000 lbox
11 88 0.9500000 lbox
12 87 0.9500000 lbox
13 86 0.9500000 lbox
14 85 0.9500000 lbox
15 84 0.9500000 lbox
16 83 0.9500000 lbox
17 82 0.9500000 lbox
18 81 0.9500000 lbox
23 78 0.9500000 lbox
24 77 0.9500000 lbox
25 76 0.9500000 lbox
26 75 0.9500000 lbox
29 71 0.9500000 lbox
30 70 0.9500000 lbox
31 69 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
52 57 0.9500000 lbox
showpage
end
%%EOF
