%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGCUAUGCUGUCCUGCUUCAGGCUCCUCUCCAGGCACAUCAGCCCUUCGCUGGCGUCUCUGCGCCCGGUGCGCUGCUGCUUCGCGCUCCCGCUGCGUUGGGCCC\
) } def
/len { sequence length } bind def

/coor [
[199.34597778 188.54344177]
[188.89190674 177.78646851]
[178.43785095 167.02949524]
[167.98377991 156.27250671]
[157.52972412 145.51553345]
[147.07565308 134.75856018]
[136.62159729 124.00157928]
[126.16753387 113.24460602]
[112.87971497 124.92932129]
[96.03643036 126.49652863]
[82.16223145 118.25447845]
[76.10192871 104.14109802]
[61.25460434 102.00637817]
[46.40728378 99.87165833]
[31.55996132 97.73693085]
[20.72993279 108.69214630]
[5.70141697 111.14103699]
[-7.72854710 104.35133362]
[-14.50413799 91.11391449]
[-29.35145950 88.97919464]
[-44.19878006 86.84446716]
[-59.04610443 84.70974731]
[-73.89342499 82.57502747]
[-90.73606110 89.84495544]
[-104.15692139 78.63766479]
[-119.05915070 76.92778778]
[-133.96138000 75.21791840]
[-148.78199768 82.23795319]
[-162.11614990 72.69161987]
[-160.24679565 56.39936829]
[-145.09695435 50.12126923]
[-132.25149536 60.31569290]
[-117.34927368 62.02556610]
[-102.44705200 63.73543549]
[-92.69189453 56.42572784]
[-80.17739105 57.82760620]
[-71.75870514 67.72769928]
[-56.91138077 69.86242676]
[-42.06406021 71.99714661]
[-27.21673775 74.13187408]
[-12.36941528 76.26659393]
[-2.13887072 65.47428131]
[12.65996552 62.74327087]
[26.38978767 69.32698822]
[33.69468307 82.88961029]
[48.54200745 85.02433014]
[63.38932800 87.15905762]
[78.23664856 89.29377747]
[82.22064209 82.28276825]
[88.46572876 76.75917053]
[96.41519165 73.44957733]
[105.28090668 72.87218475]
[114.12120819 75.26421356]
[121.94082642 80.53825378]
[129.31681824 67.47706604]
[136.69281006 54.41587448]
[144.06880188 41.35468292]
[151.44479370 28.29349136]
[158.63352966 15.12830734]
[165.63354492 1.86181307]
[172.63356018 -11.40468121]
[171.46887207 -27.76241875]
[185.20248413 -36.72454834]
[199.70643616 -29.07160378]
[200.06028748 -12.67627430]
[185.90003967 -4.40467119]
[178.90003967 8.86182308]
[171.90002441 22.12831688]
[171.55693054 29.62426186]
[164.50599670 35.66948700]
[157.12998962 48.73067856]
[149.75399780 61.79186630]
[142.37800598 74.85305786]
[135.00201416 87.91425323]
[136.92449951 102.79054260]
[147.37857056 113.54751587]
[157.83264160 124.30449677]
[168.28669739 135.06147766]
[178.74076843 145.81845093]
[189.19482422 156.57542419]
[199.64889526 167.33239746]
[210.10295105 178.08938599]
[221.00811768 188.38877869]
[232.34436035 198.21168518]
[243.68060303 208.03459167]
[255.01684570 217.85751343]
[270.51318359 221.04724121]
[275.06494141 235.22929382]
[286.40118408 245.05220032]
[297.73742676 254.87510681]
[309.07366943 264.69802856]
[324.48519897 262.04876709]
[337.96792603 269.97027588]
[343.15570068 284.72225952]
[337.59899902 299.33929443]
[323.92156982 306.91964722]
[308.58145142 303.88409424]
[298.82177734 291.66595459]
[299.25076294 276.03427124]
[287.91452026 266.21136475]
[276.57827759 256.38845825]
[265.24203491 246.56553650]
[250.55654907 244.07839966]
[245.19392395 229.19375610]
[233.85768127 219.37083435]
[222.52143860 209.54792786]
[211.18519592 199.72502136]
[207.51721191 199.67358398]
[203.70648193 197.74581909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[4 79]
[5 78]
[6 77]
[7 76]
[8 75]
[12 48]
[13 47]
[14 46]
[15 45]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[25 34]
[26 33]
[27 32]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 68]
[60 67]
[61 66]
[83 107]
[84 106]
[85 105]
[86 104]
[88 102]
[89 101]
[90 100]
[91 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
