%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGGUUGCAGCUGGCAGUGCGGCGGGCGCGGGCGCCGGAGCGAGGGGCCCGCGGGCCCGGCUAUUAAUAACGCGGCCGCCAGCCCGGGGUCGCGCAGCCAUGGCCAGCCCGGAGCCCCGGCGCGGCGGGGACGGCGCCGCCCAGGCCGCGAGGAAAACAAGAGUAGAGGCCAAUUCUCCUCUUCCAAAGAACUCUGGAU\
) } def
/len { sequence length } bind def

/coor [
[84.19425964 152.19660950]
[80.25539398 166.67021179]
[76.31652069 181.14381409]
[72.37765503 195.61743164]
[68.43878174 210.09103394]
[64.49990845 224.56463623]
[69.20330811 240.27482605]
[57.75430298 252.01588440]
[41.93064880 247.70960999]
[38.01036453 231.78593445]
[50.02630234 220.62577820]
[53.96517563 206.15216064]
[57.90404510 191.67855835]
[61.84291458 177.20495605]
[65.78178406 162.73133850]
[69.72065735 148.25773621]
[52.60373688 118.71920013]
[56.54200745 88.52554321]
[75.56716919 69.68460846]
[68.58036041 56.41115952]
[61.59355164 43.13771057]
[54.60673904 29.86426163]
[47.61992645 16.59081078]
[40.63311768 3.31736135]
[33.43970490 -9.84526920]
[26.04145241 -22.89386368]
[18.64319992 -35.94245911]
[11.24494553 -48.99105453]
[6.72970343 -51.64217377]
[3.96452641 -55.38785172]
[3.07312179 -59.37598038]
[3.82218719 -62.82924652]
[-2.95631766 -76.21027374]
[-9.73482227 -89.59130096]
[-16.51332664 -102.97232819]
[-23.29183197 -116.35335541]
[-30.07033730 -129.73437500]
[-36.84884262 -143.11540222]
[-58.72534561 -148.28419495]
[-69.50653839 -167.69429016]
[-62.50981903 -188.47579956]
[-70.51155853 -201.16326904]
[-78.51329803 -213.85075378]
[-95.00078583 -222.04261780]
[-95.01087952 -239.58816528]
[-103.20993042 -252.14903259]
[-111.40898895 -264.70989990]
[-119.60804749 -277.27078247]
[-127.80710602 -289.83163452]
[-141.22424316 -291.06674194]
[-151.33106995 -299.68011475]
[-154.58094788 -312.35467529]
[-150.00384521 -324.40460205]
[-158.00558472 -337.09207153]
[-166.00732422 -349.77954102]
[-174.00906372 -362.46704102]
[-182.01080322 -375.15451050]
[-194.39971924 -378.76202393]
[-200.80204773 -389.50091553]
[-198.25196838 -401.33081055]
[-206.05444336 -414.14178467]
[-213.85690308 -426.95278931]
[-221.65937805 -439.76376343]
[-229.46183777 -452.57476807]
[-237.26431274 -465.38574219]
[-251.27046204 -463.46350098]
[-264.90966797 -467.01541138]
[-276.12991333 -475.47302246]
[-283.25613403 -487.53231812]
[-285.24026489 -501.35476685]
[-281.81530762 -514.84771729]
[-273.53060913 -525.98095703]
[-281.13189697 -538.91229248]
[-288.73318481 -551.84368896]
[-296.33447266 -564.77508545]
[-303.93576050 -577.70642090]
[-311.53704834 -590.63781738]
[-319.13833618 -603.56915283]
[-326.19079590 -609.38745117]
[-326.75555420 -616.76257324]
[-334.15380859 -629.81115723]
[-349.17205811 -635.45312500]
[-353.98748779 -650.75646973]
[-344.90609741 -663.98175049]
[-328.89437866 -664.98364258]
[-318.23510742 -652.99365234]
[-321.10522461 -637.20941162]
[-313.70697021 -624.16082764]
[-306.20697021 -611.17047119]
[-298.60568237 -598.23907471]
[-291.00439453 -585.30773926]
[-283.40310669 -572.37634277]
[-275.80181885 -559.44494629]
[-268.20053101 -546.51361084]
[-260.59924316 -533.58221436]
[-244.70602417 -535.20635986]
[-229.64015198 -529.71881104]
[-218.43359375 -518.16998291]
[-213.36515808 -502.83535767]
[-215.49717712 -486.76751709]
[-224.45332336 -473.18823242]
[-216.65084839 -460.37722778]
[-208.84838867 -447.56625366]
[-201.04591370 -434.75524902]
[-193.24345398 -421.94424438]
[-185.44097900 -409.13327026]
[-169.61193848 -401.56442261]
[-169.32331848 -383.15625000]
[-161.32157898 -370.46878052]
[-153.31983948 -357.78128052]
[-145.31809998 -345.09381104]
[-137.31636047 -332.40634155]
[-120.77336884 -329.39874268]
[-111.33503723 -315.07730103]
[-115.24623108 -298.03070068]
[-107.04718018 -285.46981812]
[-98.84812164 -272.90896606]
[-90.64906311 -260.34808350]
[-82.45000458 -247.78721619]
[-70.67577362 -244.99136353]
[-63.74335861 -234.58680725]
[-65.82581329 -221.85249329]
[-57.82407761 -209.16500854]
[-49.82233810 -196.47753906]
[-41.88142395 -197.64413452]
[-33.91472626 -196.42192078]
[-26.62795067 -192.89907837]
[-20.67246437 -187.36849976]
[-16.58705902 -180.30346680]
[-14.74925327 -172.31724548]
[-15.34047222 -164.10980225]
[-18.32834435 -156.40647888]
[-23.46781540 -149.89390564]
[-16.68931007 -136.51289368]
[-9.91080475 -123.13185883]
[-3.13230038 -109.75083160]
[3.64620423 -96.36980438]
[10.42470932 -82.98877716]
[17.20321465 -69.60774994]
[24.29354095 -56.38930893]
[31.69179535 -43.34071350]
[39.09004974 -30.29211807]
[46.48830032 -17.24352264]
[50.77882385 -15.12911129]
[53.78268814 -10.29282761]
[53.90656662 -3.66944981]
[60.89337921 9.60400009]
[67.88018799 22.87744904]
[74.86699677 36.15089798]
[81.85381317 49.42435074]
[88.84062195 62.69779968]
[97.75676727 59.32265091]
[107.63752747 58.14853668]
[117.92459106 59.43783569]
[127.99143982 63.30847549]
[137.18118286 69.71697235]
[144.84840393 78.45140839]
[150.40240479 89.13527679]
[153.34913635 101.24246979]
[153.32876587 114.12273407]
[150.14646912 127.03662109]
[161.95700073 136.28385925]
[173.76753235 145.53109741]
[185.57806396 154.77832031]
[201.21380615 157.19377136]
[206.46495056 171.13201904]
[218.27548218 180.37925720]
[230.08601379 189.62649536]
[241.89654541 198.87371826]
[257.93170166 198.37030029]
[268.21286011 210.68603516]
[264.85317993 226.37336731]
[250.42994690 233.39830017]
[236.00741577 226.37191772]
[232.64930725 210.68424988]
[220.83877563 201.43702698]
[209.02824402 192.18978882]
[197.21771240 182.94255066]
[182.42675781 181.18852234]
[176.33084106 166.58885193]
[164.52030945 157.34162903]
[152.70977783 148.09439087]
[140.89924622 138.84715271]
[128.53402710 147.33842468]
[132.92333984 161.68185425]
[137.31265259 176.02526855]
[141.70196533 190.36869812]
[156.41821289 195.28921509]
[165.40428162 207.93951416]
[165.20484924 223.45532227]
[155.89657593 235.87045288]
[141.05871582 240.41107178]
[126.39669800 235.33120728]
[117.54838562 222.58416748]
[117.91613770 207.07145691]
[127.35853577 194.75801086]
[122.96922302 180.41458130]
[118.57991028 166.07116699]
[114.19059753 151.72773743]
[106.69151306 151.84495544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[19 151]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 143]
[26 142]
[27 141]
[28 140]
[32 139]
[33 138]
[34 137]
[35 136]
[36 135]
[37 134]
[38 133]
[41 124]
[42 123]
[43 122]
[45 119]
[46 118]
[47 117]
[48 116]
[49 115]
[53 112]
[54 111]
[55 110]
[56 109]
[57 108]
[60 106]
[61 105]
[62 104]
[63 103]
[64 102]
[65 101]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[80 88]
[81 87]
[161 183]
[162 182]
[163 181]
[164 180]
[166 178]
[167 177]
[168 176]
[169 175]
[184 199]
[185 198]
[186 197]
[187 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
