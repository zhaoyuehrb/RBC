%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACAAAGUGAAAUGUAAUCAUACGAUGUACUUUUUUUAAUGCCGUUGAAACAGAGUUAAUUUCCUUUAGCACACAAGUCUUAGAGACAAAAGAAAAAAAGGUCUGCAACAUGAAAGUCACAGGCAUCACAAUCCUCUUUUGGCCCCUCUCCAUGAUAUUAUUAUCAGACAAAAUCCAGUCUUCUAAAAGAGAAGUCCAAUGUAAUUUUA\
) } def
/len { sequence length } bind def

/coor [
[102.91877747 154.50456238]
[104.52925110 139.59126282]
[95.96611023 151.90681458]
[87.40297699 164.22236633]
[85.87739563 179.96984863]
[72.25909424 186.00236511]
[63.69596100 198.31790161]
[55.13282394 210.63345337]
[46.56968689 222.94898987]
[38.00654984 235.26454163]
[29.44341278 247.58009338]
[34.38230515 262.17166138]
[29.83535767 276.70364380]
[17.74631119 285.66571045]
[2.87611532 285.78930664]
[-5.68702173 298.10485840]
[-14.25015926 310.42041016]
[-22.81329536 322.73596191]
[-23.64884186 339.11380005]
[-38.37143707 346.33718872]
[-51.83573151 336.97531128]
[-50.19081879 320.65887451]
[-35.12884140 314.17282104]
[-26.56570435 301.85726929]
[-18.00256729 289.54171753]
[-9.43943119 277.22616577]
[-14.50140190 263.24353027]
[-10.30959320 248.79040527]
[1.72972322 239.46794128]
[17.12786484 239.01695251]
[25.69100189 226.70140076]
[34.25413895 214.38586426]
[42.81727600 202.07031250]
[51.38041306 189.75476074]
[59.94355011 177.43922424]
[60.85663605 162.57263184]
[75.08742523 155.65922546]
[83.65056610 143.34367371]
[92.21369934 131.02813721]
[72.92450714 109.72007751]
[79.44374084 84.83537292]
[70.51941681 72.77898407]
[61.59508896 60.72260284]
[52.67076111 48.66621780]
[43.74643326 36.60983658]
[28.36613083 34.14325714]
[19.48734093 21.78923988]
[21.93362999 7.14167070]
[13.00930309 -4.91471291]
[4.08497620 -16.97109604]
[-14.74603653 -19.05191612]
[-25.88446999 -33.98073578]
[-22.62953568 -51.99576569]
[-31.90721321 -63.78239822]
[-44.59860611 -66.07987213]
[-52.08339691 -76.08734131]
[-50.78610229 -88.11363983]
[-59.88810349 -100.03646088]
[-68.99010468 -111.95927429]
[-83.91676331 -108.96656036]
[-98.60272217 -112.73609924]
[-110.14844513 -122.46833801]
[-116.29841614 -136.19200134]
[-115.88169861 -151.16316223]
[-109.03449249 -164.41387939]
[-118.13648987 -176.33668518]
[-127.23849487 -188.25950623]
[-136.34049988 -200.18232727]
[-145.44250488 -212.10514832]
[-159.54981995 -206.73266602]
[-174.58422852 -205.55424500]
[-189.32664490 -208.65686035]
[-202.58406067 -215.78071594]
[-213.28610229 -226.34092712]
[-220.57147217 -239.47560120]
[-223.85719299 -254.11611938]
[-222.88534546 -269.07409668]
[-217.74320984 -283.13787842]
[-208.85554504 -295.17062378]
[-217.95755005 -307.09344482]
[-227.05955505 -319.01623535]
[-236.16154480 -330.93905640]
[-250.57870483 -339.85995483]
[-245.99751282 -356.18322754]
[-229.04396057 -356.29980469]
[-224.23873901 -340.04107666]
[-215.13673401 -328.11825562]
[-206.03472900 -316.19543457]
[-196.93272400 -304.27261353]
[-182.98284912 -309.67428589]
[-168.06103516 -310.92755127]
[-153.37585449 -307.92230225]
[-140.11917114 -300.89373779]
[-129.36932373 -290.40386963]
[-122.00348663 -277.29675293]
[-118.62605286 -262.63043213]
[-119.51906586 -247.59156799]
[-124.61869049 -233.39944458]
[-133.51968384 -221.20713806]
[-124.41767883 -209.28433228]
[-115.31568146 -197.36151123]
[-106.21367645 -185.43869019]
[-97.11167145 -173.51586914]
[-82.52473450 -176.62821960]
[-67.97317505 -173.08398438]
[-56.35589600 -163.53413391]
[-50.01113129 -149.83142090]
[-50.24593353 -134.67121887]
[-57.06728745 -121.06127930]
[-47.96528625 -109.13845825]
[-38.86328506 -97.21564484]
[-22.32607841 -91.34204102]
[-20.12058258 -73.06007385]
[-10.84290409 -61.27344513]
[0.50832075 -62.41164017]
[11.10929489 -57.88237000]
[18.28124619 -48.70435333]
[20.15152359 -37.08620071]
[16.14135933 -25.89542389]
[25.06568718 -13.83903980]
[33.99001312 -1.78265643]
[48.71341705 0.15563224]
[57.93570328 12.25538921]
[55.80281830 27.68550873]
[64.72714233 39.74188995]
[73.65147400 51.79827499]
[82.57579803 63.85466003]
[91.50012970 75.91104126]
[99.08124542 73.66574097]
[107.22938538 73.82399750]
[115.17852783 76.51664734]
[122.13814545 81.62978363]
[127.37139130 88.80294037]
[130.27174377 97.45215607]
[130.43031311 106.81671906]
[127.68646240 116.02594757]
[142.48762512 118.46024323]
[157.28877258 120.89453888]
[172.08993530 123.32882690]
[186.89108276 125.76312256]
[201.69224548 128.19741821]
[216.49339294 130.63171387]
[231.29455566 133.06600952]
[246.09570312 135.50030518]
[234.65892029 125.79463959]
[228.78607178 111.99211884]
[229.72328186 97.02142334]
[237.27168274 84.05911255]
[249.82963562 75.85559082]
[264.73254395 74.15151978]
[278.81817627 79.30847931]
[289.09783936 90.23224640]
[293.39031982 104.60494995]
[290.78482056 119.37692261]
[281.83416748 131.41378784]
[268.43777466 138.16143799]
[283.39663696 139.27183533]
[298.35546875 140.38223267]
[313.31433105 141.49263000]
[327.84124756 133.88342285]
[341.54782104 142.88690186]
[340.33383179 159.24105835]
[325.44818115 166.12213135]
[312.20391846 156.45147705]
[297.24508667 155.34107971]
[282.28622437 154.23068237]
[267.32739258 153.12028503]
[263.15960693 167.52964783]
[276.40148926 174.57608032]
[289.64340210 181.62251282]
[302.88528442 188.66894531]
[316.77465820 181.75050354]
[332.07235718 184.35052490]
[342.89608765 195.46926880]
[345.08392334 210.83132935]
[337.79458618 224.52969360]
[323.83099365 231.29705811]
[308.56237793 228.53123474]
[297.85989380 217.29573059]
[295.83883667 201.91084290]
[282.59695435 194.86441040]
[269.35507202 187.81797791]
[256.11315918 180.77154541]
[243.05308533 165.60670471]
[243.66142273 150.30145264]
[228.86026001 147.86715698]
[214.05909729 145.43286133]
[199.25794983 142.99858093]
[184.45678711 140.56428528]
[169.65563965 138.12998962]
[154.85447693 135.69569397]
[140.05332947 133.26139832]
[125.25216675 130.82710266]
[137.07434082 140.05944824]
[148.89651489 149.29179382]
[163.21453857 153.76329041]
[175.53025818 162.32617188]
[184.70796204 174.19082642]
[189.90132141 188.26309204]
[190.63140869 203.24531555]
[186.83091736 217.75587463]
[178.85031128 230.45664978]
[167.42550659 240.17643738]
[153.61009216 246.01889038]
[138.67807007 247.44525146]
[124.00640106 244.32398987]
[110.94807434 236.94293213]
[100.70727539 225.98272705]
[94.22837067 212.45410156]
[92.10883331 197.60459900]
[94.54410553 182.80360413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[6 35]
[7 34]
[8 33]
[9 32]
[10 31]
[11 30]
[15 26]
[16 25]
[17 24]
[18 23]
[41 128]
[42 127]
[43 126]
[44 125]
[45 124]
[48 121]
[49 120]
[50 119]
[53 114]
[54 113]
[57 111]
[58 110]
[59 109]
[65 103]
[66 102]
[67 101]
[68 100]
[69 99]
[79 89]
[80 88]
[81 87]
[82 86]
[136 193]
[137 192]
[138 191]
[139 190]
[140 189]
[141 188]
[142 187]
[143 186]
[144 185]
[156 167]
[157 166]
[158 165]
[159 164]
[168 183]
[169 182]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
