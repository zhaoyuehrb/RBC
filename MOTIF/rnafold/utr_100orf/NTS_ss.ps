%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGUUCACUCACUUUCAAAGCCAGCUGAAGGAAAGAGGAAGUGCUAGAGAGAGCCCCCUUCAGUGUGCUUCUGACUUUUACGGACUUGGCUUGUUAGAAGGCUGAAAGAUGAUGGCAGGAAUGAAAAUCCAGCUUGUAUGCAUGCUACUCCUGGCUUUCAGCUCCUGGAGUCUGUGCUCAGAUUCAGAAGAGGAAAUGAAAGCAUUAG\
) } def
/len { sequence length } bind def

/coor [
[41.12268448 143.04782104]
[40.53227234 128.05943298]
[46.53980255 114.31500244]
[57.94163132 104.56829071]
[72.45332336 100.77213287]
[87.16733551 103.68709564]
[72.64981079 99.91329956]
[58.13229370 96.13949585]
[49.03856277 97.00920868]
[43.42665482 92.19912720]
[28.96721077 88.20858002]
[14.50776768 84.21802521]
[0.01888074 80.33573914]
[-14.49864006 76.56193542]
[-29.01616096 72.78813934]
[-43.53368378 69.01433563]
[-58.05120468 65.24053192]
[-72.56872559 61.46673203]
[-87.32766724 58.78837967]
[-102.24549866 57.22045135]
[-117.16332245 55.65252304]
[-132.08116150 54.08459854]
[-146.99897766 52.51667023]
[-161.92811584 51.06037140]
[-176.86773682 49.71578217]
[-191.81698608 48.48297882]
[-206.77503967 47.36202621]
[-221.73310852 46.24107361]
[-229.55447388 53.80124283]
[-240.02981567 55.76793289]
[-249.65559387 51.72904587]
[-255.34645081 43.24102020]
[-270.26428223 41.67309189]
[-285.18209839 40.10516357]
[-300.09994507 38.53723907]
[-315.01776123 36.96931076]
[-331.66113281 44.84754562]
[-345.44561768 33.98737717]
[-360.38522339 32.64278793]
[-375.32485962 31.29819679]
[-390.26446533 29.95360756]
[-405.20407104 28.60901833]
[-420.14367676 27.26442719]
[-435.08331299 25.91983795]
[-450.02291870 24.57524872]
[-458.91094971 37.02315521]
[-472.74493408 43.30943298]
[-487.76818848 41.83699799]
[-499.95578003 33.10094452]
[-506.09289551 19.52886009]
[-521.03253174 18.18427086]
[-535.97210693 16.83967972]
[-547.94207764 27.15938759]
[-563.69683838 25.90920067]
[-573.88940430 13.83083439]
[-572.47271729 -1.90983117]
[-560.28723145 -11.97413826]
[-544.56243896 -10.39111233]
[-534.62750244 1.90006602]
[-519.68792725 3.24465561]
[-504.74829102 4.58924532]
[-496.28643799 -7.66890812]
[-482.73483276 -14.08838940]
[-467.69006348 -12.85465813]
[-455.20086670 -4.19924593]
[-448.67831421 9.63563442]
[-433.73870850 10.98022366]
[-418.79910278 12.32481384]
[-403.85949707 13.66940308]
[-388.91986084 15.01399231]
[-373.98025513 16.35858154]
[-359.04064941 17.70317268]
[-344.10104370 19.04776192]
[-334.61688232 11.53849220]
[-322.15896606 12.53692627]
[-313.44982910 22.05148315]
[-298.53201294 23.61940956]
[-283.61416626 25.18733597]
[-268.69635010 26.75526428]
[-253.77851868 28.32319069]
[-236.73745728 19.18688393]
[-220.61215210 31.28301811]
[-205.65409851 32.40396881]
[-190.69604492 33.52492142]
[-183.79048157 30.88984108]
[-175.52314758 34.77616882]
[-160.58352661 36.12075806]
[-153.63932800 33.58927536]
[-145.43106079 37.59884262]
[-130.51322937 39.16677094]
[-115.59539795 40.73469543]
[-100.67757416 42.30262375]
[-85.75974274 43.87055206]
[-96.87483978 33.79808044]
[-101.55908966 19.54824829]
[-98.58821869 4.84539318]
[-88.73869324 -6.46773291]
[-74.58479309 -11.43432522]
[-59.82578659 -8.75631142]
[-48.31909943 0.86638039]
[-43.07213211 14.91875744]
[-45.45623016 29.72808266]
[-54.84828186 41.42377853]
[-68.79492188 46.94921112]
[-54.27740097 50.72301102]
[-39.75988007 54.49681473]
[-25.24236107 58.27061462]
[-10.72483921 62.04441833]
[3.79268217 65.81821442]
[11.05777931 64.45851898]
[18.49832153 69.75858307]
[32.95776367 73.74913788]
[47.41720581 77.73968506]
[61.90609360 81.62197113]
[76.42361450 85.39577484]
[90.94113922 89.16957855]
[105.63626862 86.16073608]
[117.50233459 76.98487091]
[129.36839294 67.80900574]
[141.23446655 58.63314056]
[153.10052490 49.45727539]
[151.20803833 42.43919373]
[151.10160828 35.19317627]
[152.77694702 28.16527748]
[156.12045288 21.78545761]
[160.91679382 16.44128418]
[166.86277771 12.45439816]
[173.58648682 10.06115246]
[180.67054749 9.39863110]
[187.67800903 10.49683571]
[194.17935181 13.27750206]
[199.77873230 17.55957413]
[212.65545654 9.86608410]
[225.53219604 2.17259502]
[233.41047668 -11.54757977]
[248.30464172 -11.43331146]
[261.18136597 -19.12680054]
[268.69064331 -33.70565414]
[285.08166504 -34.22149277]
[293.49279785 -20.14366341]
[285.27133179 -5.95423269]
[268.87487793 -6.25006914]
[255.99813843 1.44342005]
[249.04087830 14.61330509]
[233.22567749 15.04932690]
[220.34895325 22.74281693]
[207.47221375 30.43630600]
[204.43499756 53.30062485]
[185.26908875 66.59903717]
[162.27639771 61.32334137]
[150.41032410 70.49920654]
[138.54426575 79.67507172]
[126.67819977 88.85093689]
[114.81213379 98.02680206]
[114.81213379 113.02680206]
[126.67819977 122.20266724]
[138.54426575 131.37852478]
[150.41032410 140.55439758]
[162.27639771 149.73025513]
[174.14245605 158.90612793]
[186.00852966 168.08198547]
[201.48008728 166.27401733]
[213.38323975 175.74868774]
[215.01152039 190.50959778]
[226.87757874 199.68545532]
[238.74365234 208.86132812]
[250.60971069 218.03718567]
[272.97567749 219.41026306]
[280.40304565 239.73902893]
[292.79660034 248.18882751]
[305.19018555 256.63864136]
[317.58377075 265.08843994]
[329.97735596 273.53823853]
[342.37094116 281.98803711]
[354.76452637 290.43783569]
[371.14935303 291.12310791]
[378.50747681 305.77880859]
[369.26950073 319.32843018]
[352.93865967 317.83325195]
[346.31472778 302.83142090]
[333.92114258 294.38162231]
[321.52755737 285.93182373]
[309.13397217 277.48202515]
[296.74038696 269.03222656]
[284.34680176 260.58242798]
[271.95321655 252.13261414]
[264.70086670 255.21388245]
[256.72723389 255.17701721]
[249.33139038 251.95384216]
[243.74760437 246.00128174]
[240.93937683 238.23806763]
[241.43385315 229.90325928]
[229.56777954 220.72738647]
[217.70172119 211.55152893]
[205.83564758 202.37567139]
[191.13987732 204.51341248]
[178.97529602 195.37681580]
[176.83265686 179.94805908]
[164.96659851 170.77218628]
[153.10052490 161.59632874]
[141.23446655 152.42045593]
[129.36839294 143.24459839]
[117.50233459 134.06872559]
[105.63626862 124.89286804]
[106.50322723 139.86779785]
[100.75041199 153.72076416]
[89.53042603 163.67626953]
[75.09127045 167.73962402]
[60.32593536 165.09674072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 116]
[7 115]
[8 114]
[10 113]
[11 112]
[12 111]
[13 109]
[14 108]
[15 107]
[16 106]
[17 105]
[18 104]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 87]
[25 86]
[26 84]
[27 83]
[28 82]
[32 80]
[33 79]
[34 78]
[35 77]
[36 76]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[50 61]
[51 60]
[52 59]
[117 154]
[118 153]
[119 152]
[120 151]
[121 150]
[132 147]
[133 146]
[134 145]
[136 143]
[137 142]
[155 204]
[156 203]
[157 202]
[158 201]
[159 200]
[160 199]
[161 198]
[164 195]
[165 194]
[166 193]
[167 192]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
