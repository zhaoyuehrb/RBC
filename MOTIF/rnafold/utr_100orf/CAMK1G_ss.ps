%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGCAGCUAAUCCUCACAGACCUGUAGGAGCUGGAGUGGGAGCUCAAGCAGGAUUCUUCCCGAGUCCCUGGCAUCCUCAGAAGCUUCAACUCUGGAGGCAAUGGGUCGAAAGGAAGAAGAUGACUGCAGUUCCUGGAAGAAACAGACCACCAACAUCCGGAAAACCUUCAUUUUUAUGGAAGUGCUGGGAUCAGGAGCUU\
) } def
/len { sequence length } bind def

/coor [
[207.25317383 209.38444519]
[193.78955078 202.77154541]
[188.80993652 188.62222290]
[195.16436768 175.03468323]
[209.21517944 169.78558350]
[196.07281494 162.55522156]
[182.93045044 155.32484436]
[169.78808594 148.09446716]
[158.03375244 153.38229370]
[145.18865967 150.89546204]
[135.98728943 141.32228088]
[133.95204163 128.00402832]
[120.92314148 120.57114410]
[107.89424133 113.13825989]
[118.07739258 124.15203857]
[120.31252289 138.98457336]
[113.82724762 152.51014709]
[100.86268616 160.05470276]
[85.89904022 159.01103210]
[74.10733032 149.73980713]
[69.56244659 135.44491577]
[73.83497620 121.06626129]
[85.44877625 111.57259369]
[71.51412964 117.12467194]
[57.57947922 122.67674255]
[43.64482880 128.22880554]
[29.71017647 133.78088379]
[23.40025139 148.02246094]
[9.18944359 153.45455933]
[-4.34884119 147.35124207]
[-18.28349113 152.90330505]
[-32.21814346 158.45538330]
[-46.15279388 164.00746155]
[-60.08744431 169.55952454]
[-63.78316116 184.63006592]
[-75.65301514 194.62437439]
[-91.13280487 195.69943237]
[-104.27023315 187.44186401]
[-110.01369476 173.02685547]
[-106.15470886 157.99729919]
[-94.17713928 148.13233948]
[-78.68659210 147.22526550]
[-65.63951874 155.62487793]
[-51.70486450 150.07279968]
[-37.77021408 144.52073669]
[-23.83556366 138.96865845]
[-9.90091324 133.41658020]
[-4.26942587 119.67533875]
[9.78320026 113.84624481]
[24.15810394 119.84623718]
[38.09275436 114.29415894]
[52.02740479 108.74208832]
[65.96205902 103.19001770]
[79.89670563 97.63794708]
[85.76600647 95.23935699]
[91.55771637 95.06983185]
[85.47080994 81.36035919]
[79.38390350 67.65089417]
[73.29699707 53.94142151]
[67.21008301 40.23195267]
[61.12317657 26.52248383]
[55.03627014 12.81301498]
[48.63278198 -0.75147331]
[41.91616440 -14.16367149]
[35.19954681 -27.57586861]
[29.89098167 -31.53410339]
[27.71047783 -36.79092026]
[28.48985672 -41.50868225]
[22.19152069 -55.12231445]
[15.89318466 -68.73594666]
[-0.63257444 -74.46408081]
[-7.76507521 -90.06344604]
[-1.53659177 -105.68227386]
[-8.04484749 -119.19680786]
[-21.00358582 -128.27323914]
[-19.55467415 -143.09719849]
[-26.06293106 -156.61174011]
[-32.57118607 -170.12626648]
[-47.21732330 -175.42990112]
[-53.62509918 -189.22827148]
[-48.47864151 -203.15843201]
[-54.98689651 -216.67297363]
[-70.31105804 -218.45446777]
[-82.22490692 -228.25567627]
[-86.92678070 -242.94906616]
[-82.91632843 -257.84603882]
[-71.47327423 -268.19302368]
[-56.24905014 -270.68832397]
[-42.10165405 -264.53570557]
[-33.54546356 -251.69845581]
[-33.31073380 -236.27287292]
[-41.47236252 -223.18122864]
[-34.96410751 -209.66670227]
[-20.86429977 -205.00503540]
[-14.07148266 -191.39208984]
[-19.05665398 -176.63452148]
[-12.54839802 -163.11999512]
[-6.04014158 -149.60546875]
[6.45308161 -141.49568176]
[5.46968508 -125.70506287]
[11.97794151 -112.19052887]
[24.61938667 -109.67671204]
[33.63796234 -100.19801331]
[35.57711411 -87.06214142]
[29.50681496 -75.03427887]
[35.80515289 -61.42065048]
[42.10348892 -47.80701828]
[48.61174393 -34.29248810]
[55.32836151 -20.88028908]
[62.04497910 -7.46809006]
[65.26388550 -6.01427174]
[67.93646240 -2.92567229]
[69.30048370 1.52293897]
[68.74573517 6.72610664]
[74.83264923 20.43557549]
[80.91955566 34.14504623]
[87.00646210 47.85451508]
[93.09336853 61.56398392]
[99.18028259 75.27345276]
[105.26718903 88.98291779]
[115.32712555 100.10935974]
[128.35603333 107.54224396]
[141.38491821 114.97513580]
[158.16789246 110.05132294]
[173.02839661 118.61744690]
[177.01846313 134.95210266]
[190.16081238 142.18247986]
[203.30317688 149.41285706]
[216.44554138 156.64323425]
[229.90931702 163.25585938]
[243.66546631 169.23651123]
[257.42163086 175.21714783]
[271.17779541 181.19779968]
[284.93395996 187.17843628]
[298.69009399 193.15908813]
[312.44625854 199.13972473]
[326.20242310 205.12037659]
[339.95858765 211.10101318]
[348.68157959 203.64624023]
[359.50863647 200.00436401]
[370.86123657 200.66592407]
[381.09915161 205.49694824]
[388.75762939 213.76385498]
[392.75683594 224.24461365]
[392.55401611 235.40928650]
[406.01779175 242.02191162]
[419.48153687 248.63455200]
[432.99609375 255.14280701]
[446.56057739 261.54629517]
[461.27911377 256.44708252]
[474.94421387 263.13436890]
[479.71484375 277.19766235]
[493.27932739 283.60116577]
[506.84381104 290.00463867]
[517.63824463 279.38839722]
[531.38775635 273.11758423]
[546.42486572 271.93151855]
[560.93310547 275.95407104]
[573.16662598 284.68121338]
[581.66009521 297.04385376]
[585.40435791 311.53900146]
[583.96618652 326.41238403]
[597.53063965 332.81585693]
[611.09515381 339.21936035]
[627.38494873 337.32882690]
[636.94860840 350.65057373]
[629.94781494 365.48031616]
[613.58441162 366.56246948]
[604.69165039 352.78384399]
[591.12713623 346.38034058]
[577.56268311 339.97686768]
[566.99310303 350.53948975]
[553.42199707 356.86047363]
[538.47918701 358.15936279]
[523.96655273 354.26022339]
[511.64053345 345.61495972]
[503.00003052 333.25125122]
[499.10366821 318.65020752]
[500.44033813 303.56915283]
[486.87582397 297.16564941]
[473.31134033 290.76217651]
[459.42141724 296.01626587]
[445.57388306 289.71545410]
[440.15707397 275.11077881]
[426.59259033 268.70730591]
[419.19711304 268.69464111]
[412.86892700 262.09832764]
[399.40515137 255.48568726]
[385.94137573 248.87304688]
[369.95660400 258.54470825]
[351.22216797 256.62023926]
[337.31765747 243.69656372]
[333.97793579 224.85717773]
[320.22177124 218.87652588]
[306.46560669 212.89588928]
[292.70947266 206.91523743]
[278.95330811 200.93460083]
[265.19714355 194.95394897]
[251.44097900 188.97331238]
[237.68482971 182.99266052]
[223.92866516 177.01202393]
[228.36402893 191.34127808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 129]
[6 128]
[7 127]
[8 126]
[12 123]
[13 122]
[14 121]
[23 54]
[24 53]
[25 52]
[26 51]
[27 50]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[56 120]
[57 119]
[58 118]
[59 117]
[60 116]
[61 115]
[62 114]
[63 110]
[64 109]
[65 108]
[68 107]
[69 106]
[70 105]
[73 101]
[74 100]
[76 98]
[77 97]
[78 96]
[81 93]
[82 92]
[130 201]
[131 200]
[132 199]
[133 198]
[134 197]
[135 196]
[136 195]
[137 194]
[138 193]
[145 189]
[146 188]
[147 187]
[148 185]
[149 184]
[152 181]
[153 180]
[154 179]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
