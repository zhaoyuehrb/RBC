%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAGUGCUGGUUGGAGGGACGAGGGGGGUGCGGAGCCAGCCAGGCCGCCCUCCCGUUCUCACAGCAGCCGAGCAGAGCGCAGAGCGGGCUGCCAUGGCGCUGGCCAGGCCUGGGACCCCGGACCCCCAGGCCCUGGCCUCUGUCCUGCUACUGCUGCUCUGGGCCCCUGCCCUUUCCCUCCUGGCUGGGACGG\
) } def
/len { sequence length } bind def

/coor [
[93.47547150 635.74377441]
[78.97052002 629.90075684]
[71.66053009 616.07696533]
[74.99706268 600.79943848]
[87.40470123 591.28186035]
[87.88793945 576.28967285]
[80.56467438 563.31970215]
[88.74254608 549.77600098]
[89.22578430 534.78375244]
[89.70902252 519.79156494]
[90.19226074 504.79934692]
[90.67549896 489.80712891]
[91.15873718 474.81491089]
[91.52119446 459.81930542]
[91.76284027 444.82122803]
[92.00449371 429.82318115]
[92.24614716 414.82513428]
[92.48779297 399.82708740]
[92.72944641 384.82904053]
[92.97109222 369.83096313]
[89.93135071 363.08334351]
[93.33939362 354.59378052]
[93.82263184 339.60156250]
[94.30587006 324.60934448]
[94.78910828 309.61712646]
[95.27234650 294.62490845]
[95.39317322 279.62539673]
[95.15151978 264.62734985]
[94.90987396 249.62928772]
[94.66822052 234.63124084]
[86.72689056 222.03025818]
[94.24086761 208.10723877]
[93.99921417 193.10917664]
[93.75756073 178.11112976]
[93.51591492 163.11308289]
[93.27426147 148.11502075]
[93.03260803 133.11697388]
[75.48369598 123.32871246]
[66.57814026 105.31578827]
[69.45565796 85.42874908]
[57.68526077 76.13048553]
[45.91486359 66.83221436]
[34.14446640 57.53395081]
[22.29955101 48.33080292]
[10.38088608 39.22336578]
[-1.53777933 30.11592674]
[-17.20088768 27.88486481]
[-22.61589432 14.00945663]
[-34.53456116 4.90201950]
[-46.45322418 -4.20541811]
[-58.37189102 -13.31285572]
[-70.43572998 -22.22710228]
[-82.64160919 -30.94584084]
[-101.00039673 -32.29108810]
[-107.65026855 -48.52521896]
[-119.99502563 -57.04618835]
[-132.33978271 -65.56716156]
[-144.68453979 -74.08812714]
[-157.02929688 -82.60910034]
[-169.37405396 -91.13007355]
[-173.74212646 -91.32408905]
[-177.44410706 -92.76048279]
[-180.16983032 -95.07497406]
[-181.76031494 -97.83975983]
[-182.21519470 -100.61868286]
[-193.98559570 -109.91694641]
[-209.65101624 -107.82646179]
[-222.15541077 -117.49163055]
[-224.08015442 -133.17828369]
[-214.28332520 -145.57978821]
[-198.57720947 -147.33857727]
[-186.27996826 -137.41117859]
[-184.68733215 -121.68733978]
[-172.91693115 -112.38907623]
[-160.85308838 -103.47483063]
[-148.50833130 -94.95385742]
[-136.16357422 -86.43289185]
[-123.81881714 -77.91191864]
[-111.47406006 -69.39094543]
[-99.12930298 -60.86997604]
[-87.16974640 -62.74025726]
[-76.81277466 -55.73093033]
[-73.92287445 -43.15172577]
[-61.71699142 -34.43298340]
[-56.93022919 -34.32356644]
[-52.16442108 -31.19702339]
[-49.26445389 -25.23152161]
[-37.34578705 -16.12408257]
[-25.42712212 -7.01664591]
[-13.50845718 2.09079194]
[1.30214798 3.67042804]
[7.56965828 18.19726181]
[19.48832321 27.30469894]
[31.40698814 36.41213608]
[38.64028168 37.97741318]
[43.44273376 45.76355362]
[55.21313095 55.06182098]
[66.98352814 64.36008453]
[78.75392151 73.65835571]
[86.81446838 66.07389069]
[97.56116486 61.12169647]
[110.08456421 59.73247910]
[123.16229248 62.51065063]
[133.46568298 51.60926437]
[143.76907349 40.70787430]
[154.07244873 29.80648804]
[164.37583923 18.90510178]
[174.67922974 8.00371456]
[184.98260498 -2.89767241]
[195.19784546 -13.88170242]
[205.32427979 -24.94766235]
[215.45069885 -36.01362228]
[225.57713318 -47.07958221]
[235.70355225 -58.14554214]
[245.82998657 -69.21150208]
[241.12519836 -83.83205414]
[244.37669373 -98.84282684]
[254.70983887 -110.20600128]
[269.34506226 -114.86493683]
[284.34558105 -111.56639862]
[295.67630005 -101.19768524]
[300.28933716 -86.54792786]
[296.94381714 -71.55783081]
[286.53961182 -60.25966263]
[271.87548828 -55.69256973]
[256.89593506 -59.08507538]
[246.76951599 -48.01911545]
[236.64309692 -36.95315552]
[226.51666260 -25.88719559]
[216.39022827 -14.82123566]
[206.26380920 -3.75527549]
[204.06457520 3.31112289]
[195.88400269 7.40571356]
[185.58061218 18.30710030]
[175.27722168 29.20848846]
[164.97384644 40.10987473]
[154.67045593 51.01126099]
[144.36706543 61.91264725]
[134.06367493 72.81403351]
[136.43869019 79.92806244]
[150.66673279 75.17803955]
[164.89479065 70.42801666]
[179.12290955 65.67823792]
[183.87245178 79.90644073]
[169.64480591 84.65606689]
[155.41676331 89.40608215]
[141.18870544 94.15610504]
[143.56372070 101.27012634]
[158.34960938 103.79548645]
[173.53326416 97.59961700]
[186.32325745 107.86354065]
[183.56234741 124.02860260]
[168.09071350 129.46557617]
[155.82426453 118.58137512]
[141.03836060 116.05602264]
[125.64871979 129.31916809]
[108.03066254 132.87532043]
[108.27231598 147.87336731]
[108.51396942 162.87142944]
[108.75561523 177.86947632]
[108.99726868 192.86753845]
[109.23891449 207.86558533]
[117.19753265 221.53932190]
[109.66627502 234.38958740]
[109.90792847 249.38763428]
[110.14957428 264.38568115]
[110.39122772 279.38375854]
[113.09004211 283.88287354]
[113.72089386 288.50442505]
[112.58543396 292.43704224]
[110.26455688 295.10815430]
[109.78131866 310.10037231]
[109.29808044 325.09259033]
[108.81484222 340.08477783]
[108.33160400 355.07699585]
[107.96914673 370.07263184]
[107.72750092 385.07067871]
[107.48584747 400.06872559]
[107.24419403 415.06677246]
[107.00254822 430.06484985]
[106.76089478 445.06289673]
[106.51924896 460.06094360]
[109.51314545 468.70526123]
[106.15094757 475.29815674]
[105.66770935 490.29037476]
[105.18447113 505.28259277]
[104.70123291 520.27478027]
[104.21799469 535.26702881]
[103.73475647 550.25921631]
[111.02346039 564.30151367]
[102.88014984 576.77288818]
[102.39691162 591.76513672]
[114.16588593 602.06195068]
[116.51164246 617.52264404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[14 182]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 167]
[28 166]
[29 165]
[30 164]
[32 162]
[33 161]
[34 160]
[35 159]
[36 158]
[37 157]
[40 99]
[41 98]
[42 97]
[43 96]
[44 94]
[45 93]
[46 92]
[48 90]
[49 89]
[50 88]
[51 87]
[52 84]
[53 83]
[55 80]
[56 79]
[57 78]
[58 77]
[59 76]
[60 75]
[65 74]
[66 73]
[103 139]
[104 138]
[105 137]
[106 136]
[107 135]
[108 134]
[109 133]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
