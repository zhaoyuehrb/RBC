%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCAGAACAAGAUGGGAGUCAUGGCCAUGCUGAUGCUCCCCCUGCUGCUGCUGGGAAUCAGCGGCCUCCUCUUCAUUUACCAAGAGGUGUCCAGGCUGUGGUCAAAGUCAG\
) } def
/len { sequence length } bind def

/coor [
[43.73035431 274.10284424]
[32.33854294 274.00897217]
[21.38831329 270.92410278]
[13.18409157 283.48162842]
[4.97986889 296.03912354]
[-3.22435355 308.59661865]
[2.42217183 323.04986572]
[-1.53766036 338.05316162]
[-13.58121395 347.83746338]
[-29.07749748 348.64047241]
[-42.06787109 340.15344238]
[-47.55727386 325.63980103]
[-43.43491745 310.68032837]
[-31.28593254 301.02725220]
[-15.78185081 300.39239502]
[-7.57762861 287.83489990]
[0.62659395 275.27740479]
[8.83081627 262.71990967]
[-1.79543710 247.20169067]
[-4.76284504 228.58120728]
[0.54024833 210.43719482]
[13.13197708 196.27450562]
[30.61845779 188.84715271]
[49.64883041 189.62275696]
[56.05047607 176.05740356]
[62.45212555 162.49203491]
[68.85376740 148.92668152]
[75.25541687 135.36132812]
[81.65706635 121.79596710]
[88.05870819 108.23061371]
[87.43883514 93.24342346]
[79.93883514 80.25304413]
[72.43883514 67.26266479]
[64.93883514 54.27228165]
[57.43883514 41.28190231]
[49.93883514 28.29152107]
[44.22478867 24.53757858]
[41.74371338 19.23018837]
[42.40619278 14.37241459]
[35.63319397 0.98860097]
[28.86019135 -12.39521217]
[22.08719063 -25.77902603]
[11.40864468 -28.62437630]
[4.26474571 -36.76373672]
[2.88645506 -47.28229141]
[7.49597073 -56.59064102]
[1.47053921 -70.32723999]
[-12.05657673 -79.59812164]
[-10.52171803 -95.92528534]
[4.49618340 -102.51274109]
[17.54799843 -92.58389282]
[15.20713902 -76.35267639]
[21.23257065 -62.61607361]
[37.61711121 -52.50309753]
[35.47100449 -32.55202484]
[42.24400711 -19.16821289]
[49.01700592 -5.78439951]
[55.79000473 7.59941435]
[62.92921829 20.79152107]
[70.42921448 33.78190231]
[77.92921448 46.77228165]
[85.42921448 59.76266479]
[92.92921448 72.75304413]
[100.42921448 85.74342346]
[114.08148956 91.95755768]
[128.80326843 89.08189392]
[143.52503967 86.20623779]
[158.24681091 83.33057404]
[172.96858215 80.45491791]
[187.45747375 76.57263184]
[201.64472961 71.70214081]
[215.83198547 66.83164978]
[230.01924133 61.96115494]
[244.20649719 57.09066391]
[258.39376831 52.22016907]
[262.81521606 37.34635925]
[275.15530396 27.93881798]
[290.66900635 27.61493874]
[303.39099121 36.49925613]
[308.42935181 51.17557526]
[303.84680176 66.00054932]
[291.40539551 75.27366638]
[275.88909912 75.42923737]
[263.26425171 66.40743256]
[249.07699585 71.27792358]
[234.88973999 76.14841461]
[220.70248413 81.01890564]
[206.51521301 85.88939667]
[192.32795715 90.75988770]
[203.96528625 100.22416687]
[204.10354614 115.22353363]
[192.64266968 124.90072632]
[177.87857056 122.25094604]
[170.49819946 109.19222260]
[175.84423828 95.17668915]
[161.12246704 98.05234528]
[146.40069580 100.92800903]
[131.67892456 103.80366516]
[116.95715332 106.67932892]
[101.62406921 114.63225555]
[95.22241974 128.19761658]
[88.82077789 141.76296997]
[82.41912842 155.32832336]
[76.01747894 168.89369202]
[69.61583710 182.45904541]
[63.21418762 196.02439880]
[71.63268280 203.90850830]
[77.67082214 213.71707153]
[80.90981293 224.75401306]
[81.12917328 236.23855591]
[78.32170868 247.36059570]
[72.69346619 257.33773804]
[64.64859772 265.47042847]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 15]
[24 106]
[25 105]
[26 104]
[27 103]
[28 102]
[29 101]
[30 100]
[31 64]
[32 63]
[33 62]
[34 61]
[35 60]
[36 59]
[39 58]
[40 57]
[41 56]
[42 55]
[46 53]
[47 52]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 89]
[71 88]
[72 87]
[73 86]
[74 85]
[75 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
