%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:48:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUGCAGGCAGGCGGGGGUGCGCGGGGCGGUCAGCGAUCUGCAGCUUCGCGGGGACAGAGAUGUAACCCAACUCGUUCACGGAUGUUCCGCGCGCCGUGUCACCGGCUGCGGGCCAGGGGUACUCGGAAGGCGCGGGCAGGAGCCUGGCGAGGAUGCACCUUCCCCUGCCUUGGAAAGGGAA\
) } def
/len { sequence length } bind def

/coor [
[57.59618759 442.44052124]
[49.17196274 429.88967896]
[44.82302475 415.41287231]
[44.93608093 400.29736328]
[49.50107193 385.88720703]
[58.11209106 373.46377563]
[70.00344086 364.13171387]
[84.11775970 358.72085571]
[83.09964752 343.75546265]
[82.08153534 328.79003906]
[81.06342316 313.82464600]
[80.04531860 298.85922241]
[79.02720642 283.89382935]
[78.00909424 268.92840576]
[69.42578125 256.75564575]
[76.20856476 242.46214294]
[75.19045258 227.49673462]
[74.17234039 212.53132629]
[73.15422821 197.56591797]
[72.13611603 182.60050964]
[71.11800385 167.63510132]
[70.09989929 152.66969299]
[69.08178711 137.70428467]
[56.79856491 129.09483337]
[42.38354492 133.24299622]
[27.96852684 137.39115906]
[13.55350876 141.53932190]
[-0.86151010 145.68748474]
[-15.27652836 149.83564758]
[-29.69154739 153.98381042]
[-34.81787109 166.45394897]
[-46.03064346 173.58444214]
[-59.10884094 172.95695496]
[-69.28025055 165.02511597]
[-83.76362610 168.92790222]
[-98.24700928 172.83068848]
[-109.43708038 184.81877136]
[-125.35093689 180.85882568]
[-129.61776733 165.02449036]
[-117.84821320 153.60478210]
[-102.14978790 158.34730530]
[-87.66641235 154.44453430]
[-73.18303680 150.54174805]
[-65.43604279 135.62609863]
[-48.97750473 130.82325745]
[-33.83971024 139.56878662]
[-19.42469025 135.42062378]
[-5.00967169 131.27246094]
[9.40534687 127.12430573]
[23.82036591 122.97614288]
[38.23538208 118.82798004]
[52.65040207 114.67982483]
[54.55566788 99.80131531]
[41.65102768 92.15473175]
[28.74638367 84.50815582]
[10.34420109 84.73671722]
[2.32698226 69.13704681]
[-10.70564461 61.71069717]
[-23.73827171 54.28434753]
[-40.12516403 54.91820145]
[-48.63742828 40.90130615]
[-40.51837921 26.65304184]
[-24.12019348 26.83080292]
[-16.31192398 41.25172424]
[-3.27929664 48.67807007]
[9.75333023 56.10441971]
[21.51360893 53.21147537]
[32.43820953 59.31089401]
[36.39296341 71.60350800]
[49.29760742 79.25009155]
[62.20225143 86.89667511]
[77.43604279 71.37046814]
[96.78623962 67.25699615]
[113.33820343 73.85787964]
[123.34357452 62.68234253]
[133.34893799 51.50680923]
[143.35430908 40.33127594]
[153.35968018 29.15573883]
[154.43580627 24.00131989]
[157.12342834 20.16999817]
[160.64259338 18.05560684]
[164.17044067 17.68255615]
[174.73191833 7.03102016]
[185.29339600 -3.62051511]
[187.35519409 -9.94114780]
[191.66189575 -13.69312572]
[196.39900208 -14.44677258]
[207.31607056 -24.73353195]
[218.23315430 -35.02029419]
[229.15022278 -45.30705261]
[240.06730652 -55.59381485]
[241.23434448 -68.45408630]
[250.55821228 -76.79765320]
[262.66656494 -76.55008698]
[273.75674438 -86.64998627]
[278.00741577 -94.76155853]
[285.12203979 -96.82526398]
[296.38214111 -106.73538208]
[307.64221191 -116.64550018]
[318.90231323 -126.55562592]
[330.16238403 -136.46574402]
[341.42248535 -146.37586975]
[352.68255615 -156.28598022]
[358.15176392 -173.85813904]
[375.46539307 -176.66239929]
[386.55557251 -186.76229858]
[397.64575195 -196.86219788]
[408.73593140 -206.96208191]
[413.72930908 -221.97463989]
[428.34887695 -224.82371521]
[439.43905640 -234.92361450]
[450.52923584 -245.02351379]
[447.85589600 -260.21746826]
[453.84246826 -274.43594360]
[466.57867432 -283.14181519]
[482.00045776 -283.55709839]
[495.18676758 -275.54928589]
[501.92987061 -261.67361450]
[500.07812500 -246.35780334]
[490.22235107 -234.48902893]
[475.50756836 -229.85459900]
[460.62911987 -233.93333435]
[449.53894043 -223.83343506]
[438.44876099 -213.73353577]
[434.24865723 -199.44338989]
[418.83584595 -195.87190247]
[407.74566650 -185.77201843]
[396.65548706 -175.67211914]
[385.56530762 -165.57221985]
[384.68252563 -153.49356079]
[375.50573730 -144.98846436]
[362.59268188 -145.02589417]
[351.33261108 -135.11578369]
[340.07250977 -125.20565796]
[328.81243896 -115.29553986]
[317.55233765 -105.38541412]
[306.29226685 -95.47529602]
[295.03216553 -85.56517792]
[283.85662842 -75.55980682]
[272.76644897 -65.45990753]
[268.35971069 -48.48327637]
[250.35406494 -44.67673874]
[239.43698120 -34.38997650]
[228.51991272 -24.10321617]
[217.60282898 -13.81645584]
[206.68576050 -3.52969551]
[195.94493103 6.94096184]
[185.38345337 17.59249687]
[174.82197571 28.24403191]
[164.53521729 39.16110992]
[154.52984619 50.33664322]
[144.52447510 61.51218033]
[134.51910400 72.68771362]
[124.51374054 83.86325073]
[131.95733643 101.87538910]
[126.53530121 122.32332611]
[108.53484344 136.35202026]
[84.04719543 136.68617249]
[85.06530762 151.65158081]
[86.08341217 166.61698914]
[87.10152435 181.58239746]
[88.11963654 196.54780579]
[89.13774872 211.51321411]
[90.15586090 226.47862244]
[91.17397308 241.44403076]
[99.83010864 254.68721008]
[92.97450256 267.91030884]
[93.99261475 282.87570190]
[95.01072693 297.84112549]
[96.02883148 312.80651855]
[97.04694366 327.77194214]
[98.06505585 342.73733521]
[99.08316803 357.70275879]
[113.80026245 361.15219116]
[126.84593964 368.78775024]
[137.06018066 379.93048096]
[143.53475952 393.58959961]
[145.69393921 408.55050659]
[143.34574890 423.48294067]
[136.69895935 437.05908203]
[126.34462738 448.07177734]
[113.20344543 455.54174805]
[98.44390869 458.80480957]
[83.37843323 457.57077026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[16 165]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[24 52]
[25 51]
[26 50]
[27 49]
[28 48]
[29 47]
[30 46]
[34 43]
[35 42]
[36 41]
[53 71]
[54 70]
[55 69]
[57 66]
[58 65]
[59 64]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[82 149]
[83 148]
[84 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[94 140]
[95 139]
[97 138]
[98 137]
[99 136]
[100 135]
[101 134]
[102 133]
[103 132]
[105 129]
[106 128]
[107 127]
[108 126]
[110 124]
[111 123]
[112 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
