%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGACCAAGAGUAGGCAGCAGCGGCGGCGGCGGAGGAGGAGGCGGUGGUGGAGGUGCGCGGCCUGAAGAGGAGGAUGGAGGAGCAGCAGAAGGAGGGCGAGGCCGAGGUCGCGGAGCACUGGUUUUCCAAGUGGGAGCGCCAGUGCCUGGCUGAGGCCGAGCAGGAGGAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[136.93052673 135.20899963]
[122.75810242 145.66844177]
[105.87364960 150.68568420]
[88.28924561 149.66282654]
[72.10038757 142.72177124]
[59.23625946 130.68965149]
[51.22984695 115.00033569]
[36.40023041 117.25477600]
[31.98131752 130.54429626]
[22.30884743 140.58076477]
[9.31561852 145.44096375]
[-4.43723440 144.22789001]
[-16.26503754 137.23565674]
[-23.88365173 125.88095093]
[-38.75094604 127.87183380]
[-53.61823654 129.86271667]
[-68.48552704 131.85359192]
[-83.35282135 133.84448242]
[-96.00396729 143.34497070]
[-109.64557648 137.36535645]
[-124.51286316 139.35623169]
[-132.63310242 143.60888672]
[-139.66142273 141.24809265]
[-154.56170654 142.97479248]
[-169.46199036 144.70149231]
[-184.27101135 147.08744812]
[-198.95962524 150.12796021]
[-210.90496826 160.50193787]
[-224.93638611 155.50508118]
[-239.62500000 158.54557800]
[-251.57034302 168.91957092]
[-265.60174561 163.92269897]
[-280.29037476 166.96321106]
[-285.03799438 181.56991577]
[-296.46362305 191.83393860]
[-311.49386597 194.99430847]
[-326.08560181 190.20092773]
[-336.31375122 178.74316406]
[-339.42703247 163.70310974]
[-334.58792114 149.12646484]
[-323.09814453 138.93426514]
[-308.04840088 135.86817932]
[-293.48699951 140.75294495]
[-283.33087158 152.27459717]
[-268.64227295 149.23410034]
[-257.74755859 139.07759094]
[-242.66549683 143.85696411]
[-227.97689819 140.81646729]
[-217.08218384 130.65995789]
[-202.00013733 135.43934631]
[-187.31152344 132.39883423]
[-198.09886169 121.97609711]
[-196.85733032 107.02756500]
[-184.49836731 98.52721405]
[-170.09489441 102.71528625]
[-164.22074890 116.51725769]
[-171.18869019 129.80120850]
[-156.28840637 128.07450867]
[-141.38812256 126.34780884]
[-126.50374603 124.48893738]
[-111.63645935 122.49805450]
[-100.04872131 113.13997650]
[-85.34370422 118.97718811]
[-70.47640991 116.98630524]
[-55.60911942 114.99542236]
[-40.74182892 113.00453949]
[-25.87453461 111.01365662]
[-20.10103989 95.93668365]
[-7.44474030 85.76301575]
[8.70630836 83.33734894]
[23.96700859 89.41382599]
[34.14579391 102.42515564]
[48.97541046 100.17072296]
[50.43497086 87.88201141]
[54.80999756 76.30609131]
[61.84314346 66.12387085]
[71.12071228 57.93428040]
[82.09699249 52.21903992]
[94.12635040 49.31431961]
[106.50119781 49.39098740]
[118.49363708 52.44452667]
[129.39826965 58.29532623]
[138.57365417 66.59923553]
[145.48010254 76.86781311]
[149.71136475 88.49705505]
[164.66354370 87.30026245]
[177.80239868 78.48656464]
[191.10641479 85.18373871]
[206.05860901 83.98694611]
[209.09947205 70.67806244]
[215.76420593 58.78289032]
[225.50277710 49.26369476]
[237.51693726 42.88745117]
[250.82565308 40.16406250]
[264.34521484 41.30559158]
[276.97747803 46.20977783]
[287.69903564 54.46912003]
[295.64422607 65.40472412]
[300.17486572 78.12210083]
[315.16009521 77.45672607]
[325.79901123 66.07904816]
[341.00564575 65.61773682]
[351.78695679 75.83042145]
[366.77218628 75.16504669]
[381.75741577 74.49967957]
[396.74264526 73.83430481]
[407.38156128 62.45662689]
[422.58819580 61.99531555]
[433.36950684 72.20800018]
[448.35473633 71.54262543]
[463.33999634 70.87725067]
[478.32522583 70.21188354]
[484.13873291 66.95840454]
[489.85864258 67.12757111]
[493.85217285 69.79840088]
[508.85156250 69.66528320]
[517.43621826 66.45169830]
[524.11779785 69.66528320]
[539.11718750 69.79840088]
[554.11663818 69.93151855]
[569.11602783 70.06463623]
[584.11541748 70.19774628]
[599.11486816 70.33086395]
[614.11425781 70.46398163]
[629.11364746 70.59709930]
[642.98193359 62.98257065]
[655.64007568 70.83251190]
[670.63946533 70.96562958]
[685.63885498 71.09874725]
[700.63830566 71.23186493]
[713.04425049 61.05979156]
[728.70135498 64.55776215]
[735.59875488 79.04242706]
[728.44537354 93.40239716]
[712.72869873 96.62192535]
[700.50518799 86.23127747]
[685.50573730 86.09815979]
[670.50634766 85.96504211]
[655.50695801 85.83192444]
[642.71148682 93.45597076]
[628.98052979 85.59651184]
[613.98114014 85.46339417]
[598.98175049 85.33027649]
[583.98229980 85.19715881]
[568.98291016 85.06404114]
[553.98352051 84.93092346]
[538.98406982 84.79780579]
[523.98468018 84.66469574]
[508.98468018 84.66469574]
[493.98526001 84.79780579]
[478.99060059 85.19711304]
[464.00534058 85.86248779]
[449.02011108 86.52786255]
[434.03488159 87.19323730]
[424.20114136 98.32126617]
[409.01345825 99.20952606]
[397.40802002 88.81954193]
[382.42279053 89.48490906]
[367.43756104 90.15028381]
[352.45233154 90.81565857]
[342.61859131 101.94369507]
[327.43090820 102.83194733]
[315.82546997 92.44196320]
[300.84024048 93.10733795]
[296.22473145 108.87765503]
[286.48312378 122.14226532]
[272.77404785 131.29394531]
[256.73809814 135.21646118]
[240.30158997 133.42059326]
[225.44509888 126.10511780]
[213.96481323 114.13500214]
[207.25538635 98.93912506]
[192.30320740 100.13591766]
[180.23384094 108.86401367]
[165.86033630 102.25244141]
[150.90815735 103.44923401]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 73]
[8 72]
[14 67]
[15 66]
[16 65]
[17 64]
[18 63]
[20 61]
[21 60]
[23 59]
[24 58]
[25 57]
[26 51]
[27 50]
[29 48]
[30 47]
[32 45]
[33 44]
[85 176]
[86 175]
[88 173]
[89 172]
[99 164]
[100 163]
[103 160]
[104 159]
[105 158]
[106 157]
[109 154]
[110 153]
[111 152]
[112 151]
[115 150]
[116 149]
[118 148]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[127 139]
[128 138]
[129 137]
[130 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
