%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCCCCGCCGCCCCAGCAGCCCAGGACAGCCCCCUCUCCCCGCCCCCAGCCCCCUCCCCCGGCGCGGCCAUGGAUGUGACCAGCAGCUCGGGCGGCGGCGGCGACCCCCGGCAGAUCGAGGAGACCAAGCCGCUGCUGGGGGGCGACGUGUCGGCCCCCGAAGGCACGA\
) } def
/len { sequence length } bind def

/coor [
[245.23330688 700.79144287]
[242.52432251 686.03808594]
[239.81535339 671.28472900]
[237.10636902 656.53137207]
[234.39739990 641.77801514]
[231.68841553 627.02465820]
[228.97943115 612.27130127]
[211.94224548 596.61920166]
[219.71051025 574.06640625]
[215.41329956 559.69506836]
[211.11607361 545.32379150]
[206.81886292 530.95251465]
[201.87232971 525.42504883]
[202.57664490 516.28112793]
[198.54110718 501.83416748]
[194.50555420 487.38723755]
[190.47001648 472.94027710]
[186.43446350 458.49331665]
[182.39891052 444.04638672]
[178.36337280 429.59942627]
[174.32781982 415.15246582]
[170.29228210 400.70553589]
[166.25672913 386.25857544]
[163.34423828 384.21191406]
[161.29356384 380.63610840]
[160.82014465 375.95886230]
[162.41784668 370.91442871]
[159.17494202 356.26916504]
[143.55680847 354.41253662]
[129.49179077 347.31375122]
[118.68482971 335.81280518]
[112.45291901 321.28445435]
[111.56467438 305.47406006]
[116.14554596 290.28781128]
[125.66049957 277.56286621]
[138.97642517 268.84527588]
[135.46812439 254.26132202]
[131.95982361 239.67736816]
[128.45152283 225.09341431]
[124.67897797 210.57556152]
[120.64343262 196.12861633]
[107.46067047 184.56799316]
[112.13854218 166.77499390]
[107.84133148 152.40370178]
[103.54411316 138.03240967]
[88.73335266 136.49777222]
[75.63466644 129.41693115]
[66.23854828 117.86587524]
[61.97283173 103.59992218]
[63.48572922 88.78691864]
[70.54734802 75.67786407]
[82.08459473 66.26480103]
[77.78738403 51.89351654]
[73.49016571 37.52222824]
[62.12368011 26.51706696]
[65.89055634 12.10665703]
[61.59333801 -2.26463151]
[50.22685242 -13.26979256]
[53.99372864 -27.68020248]
[49.69651413 -42.05149078]
[45.26898956 -56.38317108]
[40.71152115 -70.67405701]
[36.15405273 -84.96494293]
[31.59658432 -99.25583649]
[26.90954781 -113.50475311]
[22.09333038 -127.71052551]
[17.14832687 -141.87199402]
[12.07494831 -155.98796082]
[6.87361002 -170.05729675]
[1.54474211 -184.07882690]
[-10.59046078 -194.23005676]
[-7.87934065 -208.87583923]
[-13.20820904 -222.89736938]
[-18.53707695 -236.91888428]
[-31.58217239 -246.85656738]
[-29.23033142 -263.08621216]
[-13.90092850 -268.91213989]
[-1.36353683 -258.34112549]
[-4.51555157 -242.24775696]
[0.81331646 -228.22622681]
[6.14218426 -214.20471191]
[17.89623070 -205.05639648]
[15.56626701 -189.40768433]
[20.89513588 -175.38616943]
[26.22977448 -170.23228455]
[26.19092560 -161.06134033]
[31.26430511 -146.94537354]
[36.50447845 -141.69546509]
[36.29910660 -132.52674866]
[41.11532211 -118.32096863]
[46.25930023 -112.97677612]
[45.88747406 -103.81330109]
[50.44493866 -89.52241516]
[55.00240707 -75.23152924]
[59.55987549 -60.94063950]
[64.60596466 -55.50391769]
[64.06780243 -46.34870529]
[68.36502075 -31.97741699]
[79.42414093 -22.00018883]
[75.96463013 -6.56184769]
[80.26184082 7.80944109]
[91.32096863 17.78667068]
[87.86145782 33.22500992]
[92.15866852 47.59630203]
[96.45588684 61.96759033]
[111.26664734 63.50222397]
[124.36533356 70.58306885]
[133.76144409 82.13412476]
[138.02717590 96.40007782]
[136.51426697 111.21308136]
[129.45265198 124.32213593]
[117.91540527 133.73519897]
[122.21261597 148.10649109]
[126.50983429 162.47776794]
[137.48664856 169.29505920]
[140.75708008 181.38058472]
[135.09037781 192.09306335]
[139.12593079 206.54002380]
[143.61424255 211.47297668]
[144.74064636 217.08920288]
[143.03547668 221.58511353]
[146.54377747 236.16906738]
[150.05207825 250.75302124]
[153.56039429 265.33697510]
[167.84866333 266.62756348]
[181.01808167 272.26416016]
[191.78329468 281.68222046]
[199.09812927 293.94882202]
[202.25712585 307.85507202]
[200.96369934 322.03527832]
[195.35780334 335.10104370]
[186.00099182 345.77719116]
[173.82020569 353.02627563]
[177.06311035 367.67153931]
[180.70367432 382.22302246]
[184.73922729 396.66998291]
[188.77478027 411.11694336]
[192.81031799 425.56387329]
[196.84587097 440.01083374]
[200.88140869 454.45779419]
[204.91696167 468.90472412]
[208.95249939 483.35168457]
[212.98805237 497.79864502]
[217.02360535 512.24560547]
[221.19015503 526.65527344]
[225.48736572 541.02661133]
[229.78457642 555.39788818]
[234.08180237 569.76916504]
[240.83953857 571.40386963]
[246.70668030 575.03698730]
[251.11514282 580.27886963]
[253.64999390 586.58605957]
[254.08840942 593.31756592]
[252.41879272 599.80010986]
[248.83886719 605.39526367]
[243.73278809 609.56237793]
[246.44177246 624.31567383]
[249.15074158 639.06903076]
[251.85972595 653.82238770]
[254.56871033 668.57574463]
[257.27767944 683.32910156]
[259.98666382 698.08245850]
[274.61956787 702.56988525]
[285.48278809 713.35174561]
[290.08007812 727.95050049]
[287.35494995 743.01147461]
[277.93365479 755.07373047]
[263.98114014 761.36541748]
[248.70359802 760.44085693]
[235.61166382 752.51245117]
[227.71379089 739.40203857]
[226.82484436 724.12237549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 158]
[6 157]
[7 156]
[9 148]
[10 147]
[11 146]
[12 145]
[14 144]
[15 143]
[16 142]
[17 141]
[18 140]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[27 134]
[28 133]
[36 124]
[37 123]
[38 122]
[39 121]
[40 118]
[41 117]
[43 114]
[44 113]
[45 112]
[52 105]
[53 104]
[54 103]
[56 101]
[57 100]
[59 98]
[60 97]
[61 95]
[62 94]
[63 93]
[64 92]
[65 90]
[66 89]
[67 87]
[68 86]
[69 84]
[70 83]
[72 81]
[73 80]
[74 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
