%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUCCGAGAAGCUUCCCCCUGCGACUUCCGCGAGGAGACGAGUCUGCGCAGCGUGGUGGCCGCCGCCCCCCGACCCUCUGCGCACUCUCUCCCGCGCCGGCGGCUCAGCCUAGCCCCGUUCGGCCGGCCGAGACUAUGGACACGGAGGAUGACCCCUUGCUGCAGGAUGUGUGGCUAGAGGAGGAGCAGGAGGAGGAAGAAGCAACGGGUGAAACCUUUUUAGGGGCCCAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[150.27235413 582.73999023]
[157.11915588 568.99169922]
[169.93170166 560.52203369]
[168.94654846 545.55444336]
[167.96139526 530.58679199]
[166.97625732 515.61920166]
[165.99110413 500.65158081]
[165.00596619 485.68399048]
[156.44949341 473.49234009]
[163.26373291 459.21380615]
[162.27859497 444.24618530]
[161.29344177 429.27856445]
[160.30830383 414.31097412]
[159.32315063 399.34335327]
[175.63662720 369.08862305]
[170.79559326 354.89129639]
[165.95455933 340.69396973]
[161.11352539 326.49661255]
[156.27249146 312.29928589]
[144.84167480 302.75015259]
[147.71113586 287.19134521]
[142.87010193 272.99401855]
[138.02905273 258.79669189]
[133.18801880 244.59933472]
[128.34698486 230.40200806]
[114.90777588 224.08352661]
[109.79602814 209.75437927]
[116.51454926 195.70092773]
[111.67350769 181.50360107]
[106.83247375 167.30625916]
[101.99143982 153.10891724]
[55.95018005 91.85179138]
[41.12123489 89.59294891]
[26.29228783 87.33410645]
[11.46334267 85.07526398]
[2.52781081 86.87480164]
[-3.54515886 82.68804169]
[-18.34313202 80.23447418]
[-33.14110565 77.78091431]
[-47.93907928 75.32734680]
[-62.73705292 72.87378693]
[-71.69546509 74.55570984]
[-77.71288300 70.28948975]
[-92.47732544 67.64162445]
[-107.24176788 64.99376678]
[-122.00621796 62.34590149]
[-128.31527710 64.21727753]
[-133.80458069 62.84130859]
[-137.12176514 59.42949677]
[-151.81150818 56.39444351]
[-166.50125122 53.35939407]
[-181.19099426 50.32434082]
[-195.88072205 47.28929138]
[-210.57046509 44.25423813]
[-225.35200500 41.70347214]
[-240.20935059 39.63973999]
[-249.12045288 41.55657196]
[-255.24794006 37.44999695]
[-270.07687378 35.19115829]
[-284.88482666 40.76206207]
[-296.30181885 31.19640350]
[-311.13076782 28.93756104]
[-325.95971680 26.67872047]
[-341.02938843 33.14684677]
[-354.00204468 23.11477280]
[-351.53250122 6.90263462]
[-336.16122437 1.18809068]
[-323.70086670 11.84977341]
[-308.87191772 14.10861588]
[-294.04296875 16.36745834]
[-280.29568481 10.63498306]
[-267.81805420 20.36221123]
[-252.98908997 22.62105179]
[-238.14562988 24.78238487]
[-223.28826904 26.84611511]
[-230.21246338 13.53989506]
[-224.25030518 -0.22428319]
[-209.80763245 -4.27511740]
[-197.55714417 4.38083363]
[-196.55155945 19.34708977]
[-207.53541565 29.56449890]
[-192.84567261 32.59954834]
[-178.15594482 35.63460159]
[-163.46620178 38.66965103]
[-148.77645874 41.70470428]
[-134.08671570 44.73975754]
[-119.35835266 47.58145905]
[-104.59391022 50.22932053]
[-89.82946014 52.87718201]
[-75.06501770 55.52504349]
[-60.28348923 58.07580948]
[-45.48551559 60.52937317]
[-30.68754196 62.98293686]
[-15.88956928 65.43650055]
[-1.09159517 67.89006805]
[13.72218418 70.24631500]
[28.55113029 72.50515747]
[43.38007736 74.76399994]
[58.20902252 77.02284241]
[69.77677155 67.47364044]
[70.36812592 52.48530579]
[70.95948792 37.49696732]
[62.80088425 27.52306938]
[63.59083557 15.06294060]
[72.36293793 6.75103331]
[73.15126038 -8.22823715]
[73.84111786 -23.21236610]
[74.43247986 -38.20070267]
[75.02383423 -53.18904114]
[67.83660889 -67.28352356]
[76.06965637 -79.69586182]
[76.66101074 -94.68420410]
[77.25237274 -109.67253876]
[69.09377289 -119.64643860]
[69.88372040 -132.10656738]
[78.65582275 -140.41847229]
[79.44414520 -155.39775085]
[80.23246765 -170.37701416]
[69.47494507 -181.95506287]
[70.13862610 -197.74540710]
[81.82976532 -208.37992859]
[97.61221313 -207.54933167]
[108.12252045 -195.74641418]
[107.12512207 -179.97363281]
[95.21173859 -169.58869934]
[94.42341614 -154.60942078]
[93.63509369 -139.63015747]
[102.42610931 -124.43249512]
[92.24071503 -109.08118439]
[91.64935303 -94.09284210]
[91.05799103 -79.10450745]
[98.28752136 -66.08209229]
[90.01217651 -52.59768295]
[89.42081451 -37.60934448]
[88.82945251 -22.62100601]
[91.70082855 -15.82651424]
[88.13053131 -7.43991661]
[87.34220886 7.53935432]
[96.13322449 22.73701477]
[85.94783020 38.08832550]
[85.35646820 53.07666397]
[84.76510620 68.06500244]
[91.41831970 71.52690125]
[93.89135742 56.73217010]
[108.72619629 54.51237106]
[115.42154694 67.93519592]
[104.72474670 78.45070648]
[111.37796021 81.91260529]
[123.31317902 72.82687378]
[135.24839783 63.74114227]
[147.18362427 54.65541458]
[149.05792236 38.96265793]
[161.53118896 29.25734138]
[177.20326233 31.29745293]
[186.77615356 43.87263107]
[184.57046509 59.52224731]
[171.89477539 68.96166229]
[156.26934814 66.59063721]
[144.33413696 75.67636108]
[132.39891052 84.76209259]
[120.46369171 93.84782410]
[126.94655609 107.37455750]
[141.50521851 103.76273346]
[156.06388855 100.15091705]
[170.62255859 96.53909302]
[185.18122864 92.92727661]
[199.73988342 89.31545258]
[209.21704102 76.37084198]
[225.25175476 75.85353851]
[235.54356384 88.16036987]
[232.19746399 103.85060120]
[217.78031921 110.88801575]
[203.35171509 103.87412262]
[188.79304504 107.48593903]
[174.23437500 111.09776306]
[159.67570496 114.70957947]
[145.11705017 118.32140350]
[130.55838013 121.93321991]
[126.96598053 128.51689148]
[140.13319397 135.70190430]
[132.94795227 148.86900330]
[119.78117371 141.68421936]
[116.18877411 148.26788330]
[121.02980804 162.46522522]
[125.87084961 176.66255188]
[130.71188354 190.85989380]
[144.61651611 197.88121033]
[149.32377625 212.34829712]
[142.54432678 225.56097412]
[147.38536072 239.75830078]
[152.22639465 253.95564270]
[157.06742859 268.15298462]
[161.90846252 282.35031128]
[173.68554688 292.91491699]
[170.46981812 307.45825195]
[175.31085205 321.65557861]
[180.15190125 335.85293579]
[184.99293518 350.05026245]
[189.83396912 364.24758911]
[192.01878357 349.40756226]
[201.07257080 337.44808960]
[214.76284790 331.31814575]
[229.71388245 332.52926636]
[242.23904419 340.78277588]
[249.24987793 354.04354858]
[249.01766968 369.04174805]
[241.59965515 382.07913208]
[228.82499695 389.94091797]
[213.84364319 390.68859863]
[200.35063171 384.13854980]
[209.35771179 396.13323975]
[225.03781128 398.11062622]
[234.66094971 410.64739990]
[232.51786804 426.30572510]
[219.88005066 435.79577637]
[204.24526978 433.48727417]
[194.88937378 420.74981689]
[197.36303711 405.14031982]
[188.35594177 393.14562988]
[174.29077148 398.35821533]
[175.27590942 413.32580566]
[176.26106262 428.29342651]
[177.24620056 443.26104736]
[178.23135376 458.22866821]
[186.85829163 471.49087524]
[179.97358704 484.69882202]
[180.95872498 499.66644287]
[181.94387817 514.63403320]
[182.92901611 529.60168457]
[183.91416931 544.56927490]
[184.89930725 559.53692627]
[198.71142578 566.25415039]
[207.30114746 578.98645020]
[208.35789490 594.30895996]
[201.59741211 608.09991455]
[188.83822632 616.64971924]
[173.51249695 617.65844727]
[159.74276733 610.85473633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 231]
[4 230]
[5 229]
[6 228]
[7 227]
[8 226]
[10 224]
[11 223]
[12 222]
[13 221]
[14 220]
[15 199]
[16 198]
[17 197]
[18 196]
[19 195]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[28 186]
[29 185]
[30 184]
[31 183]
[32 99]
[33 98]
[34 97]
[35 96]
[37 95]
[38 94]
[39 93]
[40 92]
[41 91]
[43 90]
[44 89]
[45 88]
[46 87]
[49 86]
[50 85]
[51 84]
[52 83]
[53 82]
[54 81]
[55 75]
[56 74]
[58 73]
[59 72]
[61 70]
[62 69]
[63 68]
[100 142]
[101 141]
[102 140]
[105 138]
[106 137]
[107 135]
[108 134]
[109 133]
[111 131]
[112 130]
[113 129]
[116 127]
[117 126]
[118 125]
[148 161]
[149 160]
[150 159]
[151 158]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
[210 219]
[211 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
