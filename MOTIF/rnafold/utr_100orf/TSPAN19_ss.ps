%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAAUCUCGAUUCUAAAUUGAAACGAACGCAGCAUUUCAGGGACUGGAUGAGGAGCUUACGGUUUUUUACAGAAUCAUCAAUAUCUUGGAAGAAAAAGAAUGUUAAGAAAUAACAAAACAAUAAUUAUUAAGUACUUUCUUAAUCUCAUUAAUGGAGCUUUCUUGGUUCUUGGACUUUUAUUCAUGGGAUUUGGUGCAU\
) } def
/len { sequence length } bind def

/coor [
[65.18087769 208.12913513]
[64.04775238 214.86042786]
[61.41257858 221.13746643]
[57.42267609 226.63088989]
[52.29619980 231.05453491]
[46.31023026 234.18034363]
[39.78580856 235.85009766]
[33.07069397 235.98339844]
[26.52085495 234.58154297]
[18.35779190 247.16583252]
[10.19472980 259.75012207]
[9.17584801 275.53848267]
[-4.24161625 282.00540161]
[-12.40467930 294.58969116]
[-20.56774139 307.17398071]
[-17.02911758 322.57702637]
[-25.48921394 335.92626953]
[-40.92880630 339.30184937]
[-54.18785858 330.70108032]
[-57.40000916 315.22668457]
[-48.65954971 302.05929565]
[-33.15203476 299.01092529]
[-24.98897171 286.42663574]
[-16.82590866 273.84234619]
[-16.39090347 258.95410156]
[-2.38956237 251.58706665]
[5.77350044 239.00277710]
[13.93656349 226.41848755]
[6.26201868 204.15753174]
[17.62089348 183.24024963]
[40.96738434 177.43182373]
[47.29490662 163.83174133]
[53.62243271 150.23164368]
[51.97604370 135.42831421]
[64.81263733 126.17993927]
[71.14016724 112.57985687]
[66.10741425 98.44934082]
[52.60737610 91.91107178]
[39.10733414 85.37281036]
[25.60729408 78.83454132]
[12.10725498 72.29627228]
[-1.39278460 65.75801086]
[-14.89282417 59.21974182]
[-28.39286423 52.68147659]
[-41.10694122 61.18438721]
[-56.26988983 62.17521667]
[-69.80298615 55.48778915]
[-78.11609650 43.00788116]
[-79.05995941 28.14266205]
[-92.55999756 21.60439491]
[-106.06004333 15.06612968]
[-119.56008148 8.52786350]
[-133.06011963 1.98959684]
[-146.94052124 -3.69672918]
[-161.14759827 -8.50911617]
[-175.35467529 -13.32150269]
[-189.56175232 -18.13388824]
[-203.76881409 -22.94627571]
[-217.97589111 -27.75866127]
[-234.91755676 -27.11354446]
[-240.22738647 -43.21453857]
[-226.22554016 -52.77405548]
[-213.16351318 -41.96573639]
[-198.95643616 -37.15334702]
[-184.74935913 -32.34096146]
[-170.54228210 -27.52857590]
[-156.33522034 -22.71618843]
[-142.12814331 -17.90380287]
[-149.60188293 -30.90930939]
[-148.12362671 -45.83628845]
[-138.24414062 -57.12326431]
[-123.64431763 -60.56493759]
[-109.76374054 -54.87902069]
[-101.77403259 -42.18395996]
[-102.65198517 -27.20967674]
[-112.07048798 -15.53527260]
[-126.52185059 -11.51044273]
[-113.02181244 -4.97217655]
[-99.52177429 1.56608963]
[-86.02173615 8.10435581]
[-72.52169037 14.64262199]
[-60.27332687 6.16659212]
[-45.32745361 4.95134878]
[-31.68988609 11.42307091]
[-23.06611252 23.93415833]
[-21.85459709 39.18143463]
[-8.35455799 45.71970367]
[5.14548159 52.25796890]
[18.64552116 58.79623413]
[32.14556122 65.33450317]
[45.64559937 71.87276459]
[59.14564133 78.41103363]
[72.64568329 84.94930267]
[79.49410248 81.89167023]
[70.78131866 69.68154144]
[58.49872971 61.07119751]
[56.77316666 46.17078018]
[66.76280212 34.98117447]
[81.76276398 35.01263428]
[91.70536804 46.24404907]
[89.91668701 61.13814163]
[93.19095612 75.77642059]
[100.03937531 72.71878815]
[104.18390656 58.30272675]
[108.32843018 43.88666534]
[112.47295380 29.47060013]
[116.61748505 15.05453491]
[110.13868713 0.37785932]
[117.70129395 -13.77087021]
[133.50392151 -16.53795815]
[145.42413330 -5.80073309]
[144.31777954 10.20412636]
[131.03353882 19.19906044]
[126.88902283 33.61512375]
[122.74449158 48.03118896]
[118.59996796 62.44725418]
[114.45544434 76.86331940]
[120.15470123 81.73860931]
[129.90528870 70.34010315]
[139.65586853 58.94158936]
[149.40646362 47.54307938]
[159.15704346 36.14456940]
[164.90824890 22.29091454]
[179.86105347 23.47980309]
[183.35084534 38.06819916]
[170.55555725 45.89515686]
[160.80497742 57.29366684]
[151.05438232 68.69217682]
[141.30380249 80.09069061]
[131.55320740 91.48919678]
[137.25245667 96.36449432]
[150.85255432 90.03696442]
[164.45263672 83.70944214]
[178.05273438 77.38191223]
[183.23481750 62.45135880]
[197.49284363 55.63343048]
[212.36778259 60.97308731]
[219.03459167 75.30240631]
[213.53796387 90.12004852]
[199.13896179 96.63497925]
[184.38024902 90.98200226]
[170.78016663 97.30953217]
[157.18008423 103.63705444]
[143.57998657 109.96458435]
[142.88038635 124.94825745]
[155.83171082 132.51550293]
[168.78303528 140.08274841]
[181.73435974 147.64999390]
[194.68568420 155.21722412]
[207.63700867 162.78446960]
[220.58833313 170.35171509]
[236.40704346 170.63311768]
[243.49270630 183.73435974]
[256.44403076 191.30160522]
[269.39535522 198.86883545]
[282.34667969 206.43608093]
[295.29800415 214.00332642]
[308.24932861 221.57057190]
[321.20065308 229.13781738]
[331.55322266 225.77159119]
[341.83663940 228.60430908]
[348.71563721 236.46655273]
[350.09777832 246.59983826]
[362.80749512 254.56620789]
[375.51721191 262.53259277]
[389.86160278 256.61495972]
[404.93679810 260.29165649]
[414.94607544 272.14886475]
[416.04067993 287.62728882]
[407.79971313 300.77514648]
[393.39196777 306.53680420]
[378.35754395 302.69677734]
[368.47747803 290.73168945]
[367.55084229 275.24230957]
[354.84112549 267.27593994]
[342.13140869 259.30957031]
[322.81289673 260.03097534]
[313.63342285 242.08914185]
[300.68209839 234.52189636]
[287.73077393 226.95465088]
[274.77944946 219.38740540]
[261.82812500 211.82017517]
[248.87678528 204.25292969]
[235.92546082 196.68568420]
[221.03312683 196.94554138]
[213.02108765 183.30303955]
[200.06976318 175.73579407]
[187.11843872 168.16854858]
[174.16711426 160.60131836]
[161.21578979 153.03407288]
[148.26446533 145.46682739]
[135.31314087 137.89958191]
[101.35128021 138.02529907]
[84.74025726 118.90737915]
[78.41272736 132.50746155]
[79.60652924 148.28356934]
[67.22252655 156.55917358]
[60.89499664 170.15927124]
[54.56747055 183.75935364]
[59.30036926 188.77897644]
[62.75097275 194.73199463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 28]
[10 27]
[11 26]
[13 24]
[14 23]
[15 22]
[31 199]
[32 198]
[33 197]
[35 195]
[36 194]
[37 93]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[43 87]
[44 86]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[131 144]
[132 143]
[133 142]
[134 141]
[145 192]
[146 191]
[147 190]
[148 189]
[149 188]
[150 187]
[151 186]
[153 184]
[154 183]
[155 182]
[156 181]
[157 180]
[158 179]
[159 178]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
