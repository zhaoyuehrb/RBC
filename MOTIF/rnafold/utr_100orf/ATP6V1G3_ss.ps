%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAGUAGAUGCAACACCUCAUUUAUACCUCCUUAUCUCAUACAGAAGAGCUAAGAUUGGCAGAAAUGAUUUCACAGAAGCCACUUGCUUGGAGCAGACUACCAUGACAAGCCAGUCUCAGGGGAUCCACCAGCUUCUUCAGGCAGAAAAACGGGCCAAGGACAAGCUAGAGGAAGCCAAGAAGAUUCUGCAUCUACUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[88.66958618 340.48605347]
[75.49471283 332.59188843]
[68.04606628 319.16006470]
[68.32729340 303.80377197]
[76.26274109 290.65368652]
[89.71781921 283.24719238]
[89.94546509 268.24890137]
[90.17310333 253.25064087]
[90.40074921 238.25236511]
[90.62839508 223.25408936]
[90.85603333 208.25582886]
[91.08367920 193.25755310]
[91.31132507 178.25927734]
[91.53896332 163.26100159]
[91.76660919 148.26272583]
[91.99424744 133.26446533]
[83.65998840 131.20402527]
[75.87548828 127.03334808]
[69.17902374 120.90466309]
[64.06537628 113.10803986]
[60.95051956 104.05869293]
[60.14004517 94.27529144]
[45.29568100 96.43049622]
[30.45132065 98.58570099]
[15.60695839 100.74090576]
[0.76259607 102.89611053]
[-14.08176613 105.05131531]
[-21.36794281 118.62400055]
[-35.08866882 125.22666168]
[-49.89125824 122.51606750]
[-60.13668442 111.73788452]
[-74.98104858 113.89308929]
[-85.18506622 128.10029602]
[-102.17243195 130.48655701]
[-115.36560059 120.05911255]
[-130.17553711 122.43935394]
[-144.98548889 124.81959534]
[-159.79544067 127.19982910]
[-172.19297791 137.02894592]
[-185.98677063 131.40927124]
[-200.79670715 133.78950500]
[-215.60665894 136.16975403]
[-222.49937439 150.07191467]
[-236.26277161 157.23770142]
[-251.60452271 154.91174316]
[-262.62542725 143.98841858]
[-265.08770752 128.66793823]
[-258.04458618 114.84137726]
[-244.20426941 107.82530212]
[-228.88865662 110.31755829]
[-217.98689270 121.35980225]
[-203.17695618 118.97956848]
[-188.36700439 116.59932709]
[-177.02876282 106.94046783]
[-162.17567444 112.38988495]
[-147.36572266 110.00965118]
[-132.55578613 107.62940979]
[-117.74583435 105.24916840]
[-111.72977448 93.85252380]
[-100.07367706 87.91403961]
[-86.93230438 89.80195618]
[-77.13625336 99.04872894]
[-62.29188919 96.89351654]
[-55.53456879 83.64675903]
[-42.11398697 76.83853912]
[-27.08210564 79.26669312]
[-16.23697090 90.20695496]
[-1.39260948 88.05175018]
[13.45175266 85.89654541]
[28.29611588 83.74134064]
[43.14047623 81.58612823]
[57.98484039 79.43092346]
[43.92442703 74.20552826]
[29.86401176 68.98013306]
[14.95328045 67.34609222]
[2.48172951 59.01179886]
[-4.73246241 45.86054611]
[-5.05911493 30.86410522]
[1.57558501 17.41119576]
[13.67240429 8.54175568]
[28.49784088 6.25999832]
[42.70181274 11.08152962]
[53.07466888 21.91683578]
[57.27241135 36.31607819]
[64.85998535 49.25550079]
[72.44756317 62.19492722]
[71.99232483 47.20183563]
[71.53709412 32.20874405]
[63.38453674 18.64974785]
[70.73201752 5.69352055]
[70.27677917 -9.29957008]
[69.82154846 -24.29265976]
[69.36631775 -39.28575134]
[68.91107941 -54.27884293]
[54.50834274 -59.00503540]
[42.59256744 -68.37467194]
[34.60264206 -81.25631714]
[31.50338745 -96.09445953]
[33.66905975 -111.09732056]
[40.83813858 -124.45321655]
[52.14492416 -134.54937744]
[66.22406769 -140.16662598]
[81.37544250 -140.62666321]
[95.76944733 -135.87394714]
[107.66793823 -126.48236084]
[115.63410950 -113.58601379]
[118.70600891 -98.74218750]
[116.51269531 -83.74334717]
[109.31901550 -70.40068054]
[97.99364471 -60.32537460]
[83.90417480 -54.73407364]
[84.35940552 -39.74098587]
[84.81463623 -24.74789429]
[85.26987457 -9.75480366]
[85.72510529 5.23828697]
[93.84510040 17.72487831]
[86.53018188 31.75351143]
[86.98542023 46.74660110]
[87.44065094 61.73969269]
[117.26873016 67.00411224]
[132.79248047 90.23941040]
[147.75752258 89.21577454]
[158.12121582 77.58686829]
[173.31246948 76.76193237]
[184.33499146 86.71380615]
[199.30001831 85.69017029]
[209.66372681 74.06126404]
[224.85496521 73.23632812]
[235.87748718 83.18820190]
[250.84251404 82.16456604]
[265.80755615 81.14093018]
[274.10171509 68.15967560]
[288.28350830 62.61619949]
[302.83801270 66.44119263]
[312.23684692 77.96508026]
[327.20187378 76.94143677]
[342.16690063 75.91780090]
[357.13195801 74.89416504]
[372.09698486 73.87052917]
[385.33697510 65.20951080]
[398.56259155 72.06023407]
[413.52761841 71.03659821]
[428.49264526 70.01296234]
[443.52978516 59.38693619]
[458.97848511 67.70907593]
[473.92623901 66.45845032]
[488.87402344 65.20781708]
[495.34506226 51.27866745]
[507.92294312 42.46432114]
[523.22424316 41.13579941]
[537.13305664 47.65046692]
[545.90795898 60.25590515]
[547.18847656 75.56132507]
[540.63024902 89.44963074]
[527.99737549 98.18495178]
[512.68798828 99.41752625]
[498.82034302 92.81579590]
[490.12466431 80.15559387]
[475.17687988 81.40621948]
[460.22909546 82.65685272]
[452.17996216 91.68931580]
[439.73477173 92.85188293]
[429.51626587 84.97799683]
[414.55123901 86.00163269]
[399.58621216 87.02526855]
[387.41662598 95.61306763]
[373.12060547 88.83556366]
[358.15557861 89.85919952]
[343.19055176 90.88283539]
[328.22552490 91.90647125]
[313.26049805 92.93010712]
[305.51837158 105.62646484]
[291.62026978 111.39766693]
[276.81570435 107.83691406]
[266.83117676 96.10595703]
[251.86614990 97.12959290]
[236.90112305 98.15322876]
[227.33638000 109.51330566]
[212.17430115 110.76460266]
[200.32365417 100.65519714]
[185.35862732 101.67883301]
[175.79388428 113.03890991]
[160.63179016 114.29020691]
[148.78115845 104.18080139]
[133.81611633 105.20443726]
[132.41348267 110.95366669]
[130.04112244 116.37519073]
[126.77005005 121.30682373]
[122.69809723 125.60102844]
[117.94709015 129.12933350]
[112.65916443 131.78619385]
[106.99252319 133.49209595]
[106.76487732 148.49037170]
[106.53723907 163.48864746]
[106.30959320 178.48692322]
[106.08194733 193.48519897]
[105.85430908 208.48345947]
[105.62666321 223.48173523]
[105.39902496 238.48001099]
[105.17137909 253.47828674]
[104.94373322 268.47656250]
[104.71609497 283.47482300]
[117.94019318 291.28628540]
[125.47290039 304.67111206]
[125.28794861 320.02890015]
[117.43509674 333.22845459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[22 72]
[23 71]
[24 70]
[25 69]
[26 68]
[27 67]
[31 63]
[32 62]
[35 58]
[36 57]
[37 56]
[38 55]
[40 53]
[41 52]
[42 51]
[86 119]
[87 118]
[88 117]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
[121 185]
[122 184]
[125 181]
[126 180]
[129 177]
[130 176]
[131 175]
[135 171]
[136 170]
[137 169]
[138 168]
[139 167]
[141 165]
[142 164]
[143 163]
[145 160]
[146 159]
[147 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
