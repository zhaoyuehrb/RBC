%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGCAAUGCGCGCGGUGAUGGAGCGCUAACCGGGGGCGCGGCGGCGGCGAGGGCUCGGCGGGCCAUUGGCUACCGGCCGCGGCAAAGGCAGCUUGGGGACCCAGCGUGCGCGGGGCCCGCGGGCCGGGCCGGGGUGACCUGGGCUGCAGCCAUGGAAGAACAGAGGGAGGCCCUGAGGAAGAUCAUCAAAACACUGGCUGUGAAGAAUGAAGAAAUUCAGAGCUUUAUCUACUCCCUGAAACAGAUGCUGC\
) } def
/len { sequence length } bind def

/coor [
[20.04768181 391.11074829]
[16.73571205 405.74053955]
[13.42374229 420.37033081]
[10.11177349 435.00012207]
[6.79980373 449.62991333]
[3.48783422 464.25970459]
[10.79666805 478.54116821]
[4.05691767 493.09985352]
[-11.56125736 496.76757812]
[-24.07692909 486.73077393]
[-23.88914680 470.68881226]
[-11.14195919 460.94772339]
[-7.82998991 446.31793213]
[-4.51802063 431.68814087]
[-1.20605099 417.05834961]
[2.10591841 402.42855835]
[5.41788769 387.79876709]
[-3.35454345 380.98223877]
[-8.98660374 371.34683228]
[-10.63661098 360.25698853]
[-8.02992916 349.29965210]
[-1.50381255 340.05712891]
[8.03570080 333.87866211]
[19.23943329 331.68347168]
[23.09184265 317.18661499]
[26.94425201 302.68975830]
[30.79666138 288.19290161]
[34.55934525 273.67248535]
[38.23216248 259.12908936]
[27.31604958 246.85191345]
[25.86418152 230.32083130]
[34.64749527 216.04539490]
[50.36715698 209.76591492]
[53.85981369 195.17819214]
[57.35247421 180.59048462]
[60.84513474 166.00277710]
[64.33779144 151.41505432]
[67.83045197 136.82734680]
[58.18074799 125.34331512]
[43.20941925 126.27035522]
[28.23809433 127.19740295]
[13.26676941 128.12445068]
[-1.70455587 129.05148315]
[-16.67588234 129.97853088]
[-31.64118767 130.99813843]
[-46.59990311 132.11029053]
[-59.78842545 140.84947205]
[-73.05433655 134.07710266]
[-88.01304626 135.18923950]
[-102.97176361 136.30139160]
[-116.16028595 145.04057312]
[-129.42619324 138.26820374]
[-144.38490295 139.38034058]
[-159.33645630 140.58497620]
[-174.28027344 141.88204956]
[-189.22409058 143.17910767]
[-204.16790771 144.47618103]
[-219.11172485 145.77323914]
[-234.36868286 153.16656494]
[-245.69662476 140.55252075]
[-236.71142578 126.17536926]
[-220.40878296 130.82943726]
[-205.46496582 129.53236389]
[-190.52116394 128.23529053]
[-175.57734680 126.93822479]
[-160.63352966 125.64115906]
[-154.25920105 121.94198608]
[-145.49705505 124.42163086]
[-130.53833008 123.30949402]
[-118.41975403 114.64984894]
[-104.08390045 121.34267426]
[-89.12519073 120.23052979]
[-74.16647339 119.11839294]
[-62.04789734 110.45874786]
[-47.71204376 117.15157318]
[-32.75333023 116.03942871]
[-26.33374405 112.41938019]
[-17.60292625 115.00720978]
[-2.63160038 114.08016205]
[12.33972549 113.15312195]
[27.31105042 112.22607422]
[42.28237534 111.29902649]
[57.25370026 110.37198639]
[56.69303513 101.45133209]
[57.94680023 92.73624420]
[60.90848923 84.58634186]
[65.40228271 77.32672119]
[71.19257355 71.23503876]
[77.99575043 66.53099823]
[85.49385834 63.36856079]
[82.72689056 48.62597275]
[79.95991516 33.88338470]
[77.19294739 19.14079857]
[74.42597961 4.39821196]
[71.65901184 -10.34437561]
[68.89203644 -25.08696175]
[66.12506866 -39.82955170]
[63.35810089 -54.57213593]
[60.59112930 -69.31472778]
[48.27958298 -83.02511597]
[54.77484512 -99.34040070]
[51.82574844 -114.04763794]
[48.87665176 -128.75486755]
[45.92755508 -143.46211243]
[33.44738007 -157.01918030]
[39.74035263 -173.41355896]
[36.60958099 -188.08319092]
[33.20720291 -202.69223022]
[29.53438568 -217.23562622]
[18.65357780 -228.72120667]
[23.03902435 -242.95556641]
[19.36620903 -257.49896240]
[15.69339371 -272.04235840]
[12.02057743 -286.58575439]
[8.34776211 -301.12915039]
[-1.39280725 -315.00567627]
[9.24494934 -328.20697021]
[24.87516785 -321.63943481]
[22.89115906 -304.80197144]
[26.56397629 -290.25857544]
[30.23679161 -275.71517944]
[33.90960693 -261.17178345]
[37.58242416 -246.62838745]
[48.20052719 -236.18304443]
[44.07778549 -220.90843201]
[47.75059891 -206.36503601]
[50.54707336 -204.26020813]
[52.47479630 -200.70867920]
[52.87031937 -196.12799072]
[51.27922058 -191.21395874]
[54.40999222 -176.54432678]
[64.37495422 -169.71728516]
[67.11549377 -157.54219055]
[60.63479233 -146.41120911]
[63.58388901 -131.70396423]
[66.53298950 -116.99673462]
[69.48208618 -102.28949738]
[79.36184692 -95.33972168]
[81.95159912 -83.13167572]
[75.33371735 -72.08169556]
[78.10068512 -57.33910751]
[80.86766052 -42.59651947]
[83.63462830 -27.85393143]
[86.40159607 -13.11134529]
[89.16856384 1.63124239]
[91.93553925 16.37382889]
[94.70250702 31.11641693]
[97.46947479 45.85900497]
[100.23644257 60.60159302]
[111.07605743 60.39794159]
[122.00692749 63.23936844]
[132.16069031 69.14678192]
[143.09013367 58.87316513]
[148.00787354 41.11465073]
[165.25227356 37.79687500]
[176.05381775 27.38886642]
[176.09638977 11.58463478]
[187.36053467 0.49884829]
[203.16342163 0.70850676]
[214.12950134 12.08922386]
[213.75277710 27.88902283]
[202.25675964 38.73416138]
[186.46182251 38.19041443]
[175.66027832 48.59841919]
[175.12802124 60.66597366]
[166.23837280 69.42480469]
[153.36375427 69.80261230]
[142.43431091 80.07622528]
[146.55499268 94.49912262]
[161.26222229 97.44821930]
[175.96946716 100.39731598]
[190.67669678 103.34641266]
[205.38394165 106.29550934]
[220.43597412 101.42242432]
[231.39363098 111.51097870]
[246.10087585 114.46007538]
[260.80810547 117.40917206]
[275.51535034 120.35826874]
[290.22259521 123.30736542]
[299.46063232 111.20695496]
[312.98123169 104.34542084]
[328.07839966 104.03594208]
[341.75659180 110.28634644]
[351.32510376 121.80818939]
[354.92727661 136.28195190]
[369.63452148 139.23104858]
[384.34176636 142.18014526]
[399.04898071 145.12924194]
[407.71948242 134.17175293]
[420.20297241 128.04286194]
[434.04281616 127.88527679]
[446.54263306 133.67277527]
[455.29159546 144.22640991]
[458.62939453 157.45422363]
[473.29901123 160.58499146]
[487.96865845 163.71575928]
[502.15863037 156.23085022]
[516.79956055 162.79002380]
[520.66015625 178.36163330]
[510.77893066 191.00048828]
[494.73587036 191.01113892]
[484.83789062 178.38539124]
[470.16824341 175.25462341]
[455.49859619 172.12385559]
[444.96109009 184.39093018]
[429.58389282 189.69302368]
[413.54080200 186.49067688]
[401.23706055 175.56645203]
[396.09988403 159.83648682]
[381.39266968 156.88739014]
[366.68542480 153.93829346]
[351.97817993 150.98919678]
[343.07431030 162.95524597]
[329.80340576 169.89732361]
[314.77285767 170.39105225]
[300.96212769 164.28495789]
[291.13217163 152.74116516]
[287.27349854 138.01460266]
[272.56625366 135.06550598]
[257.85900879 132.11640930]
[243.15177917 129.16731262]
[228.44453430 126.21821594]
[214.44447327 131.30223083]
[202.43484497 121.00274658]
[187.72760010 118.05364990]
[173.02037048 115.10455322]
[158.31312561 112.15545654]
[143.60589600 109.20635986]
[139.83074951 119.80799866]
[133.52984619 129.10711670]
[125.11437988 136.51554871]
[115.12892914 141.56788635]
[104.21616364 143.95072937]
[93.07546997 143.52215576]
[82.41816711 140.32000732]
[78.92550659 154.90771484]
[75.43284607 169.49543762]
[71.94018555 184.08314514]
[68.44752502 198.67085266]
[64.95486450 213.25856018]
[74.65873718 223.02566528]
[78.24781036 236.20570374]
[74.88947296 249.33479309]
[65.56262207 259.01684570]
[52.77556229 262.80191040]
[49.10274506 277.34530640]
[50.03563690 286.40365601]
[45.29352188 292.04531860]
[41.44111252 306.54217529]
[37.58870316 321.03903198]
[33.73629379 335.53588867]
[46.43478012 349.89529419]
[47.86833954 368.85928345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[24 251]
[25 250]
[26 249]
[27 248]
[28 246]
[29 245]
[33 240]
[34 239]
[35 238]
[36 237]
[37 236]
[38 235]
[39 83]
[40 82]
[41 81]
[42 80]
[43 79]
[44 78]
[45 76]
[46 75]
[48 73]
[49 72]
[50 71]
[52 69]
[53 68]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[90 149]
[91 148]
[92 147]
[93 146]
[94 145]
[95 144]
[96 143]
[97 142]
[98 141]
[99 140]
[101 137]
[102 136]
[103 135]
[104 134]
[106 131]
[107 130]
[108 126]
[109 125]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[152 168]
[153 167]
[155 164]
[156 163]
[169 228]
[170 227]
[171 226]
[172 225]
[173 224]
[175 222]
[176 221]
[177 220]
[178 219]
[179 218]
[185 212]
[186 211]
[187 210]
[188 209]
[194 204]
[195 203]
[196 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
