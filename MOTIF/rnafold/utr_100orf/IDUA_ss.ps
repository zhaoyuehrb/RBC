%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACAUGGGGUGCGCGCCCAGACUCCGACCCGGAGGCGGAACCGGCAGUGCAGCCCGAAGCCCCGCAGUCCCCGAGCACGCGUGGCCAUGCGUCCCCUGCGCCCCCGCGCCGCGCUGCUGGCGCUCCUGGCCUCGCUCCUGGCCGCGCCCCCGGUGGCCCCGGCCGAGGCCCCGCACCUGGUGCAUG\
) } def
/len { sequence length } bind def

/coor [
[80.06163788 78.07035828]
[73.10778046 64.77961731]
[66.15392303 51.48887634]
[59.20006180 38.19813156]
[52.24620056 24.90739059]
[45.48204041 18.73986244]
[45.28929520 11.33744144]
[38.55730820 -2.06704831]
[31.82531929 -15.47153759]
[25.09333229 -28.87602806]
[18.36134338 -42.28051758]
[11.70062923 -48.55962372]
[11.63094997 -55.96422577]
[5.12269402 -69.47875977]
[-1.38556218 -82.99329376]
[-7.89381838 -96.50782776]
[-14.40207481 -110.02235413]
[-27.36081123 -119.09879303]
[-25.91190147 -133.92276001]
[-32.42015839 -147.43728638]
[-38.92841339 -160.95182800]
[-45.43666840 -174.46635437]
[-59.15486145 -175.91461182]
[-70.27498627 -183.89286804]
[-75.95096588 -196.22738647]
[-74.79547882 -209.64723206]
[-67.21743011 -220.65153503]
[-73.50015259 -234.27238464]
[-79.78288269 -247.89321899]
[-95.06263733 -258.15423584]
[-92.80229950 -275.54891968]
[-99.31055450 -289.06344604]
[-105.81880951 -302.57800293]
[-112.32706451 -316.09252930]
[-125.28580475 -325.16897583]
[-123.83689117 -339.99291992]
[-130.34515381 -353.50744629]
[-136.85340881 -367.02200317]
[-143.36166382 -380.53652954]
[-147.70787048 -383.49520874]
[-150.22091675 -387.43557739]
[-150.83453369 -391.48986816]
[-149.83857727 -394.89083862]
[-155.66510010 -408.71298218]
[-161.49162292 -422.53512573]
[-167.31814575 -436.35726929]
[-173.14466858 -450.17941284]
[-178.97119141 -464.00155640]
[-184.79771423 -477.82369995]
[-190.62423706 -491.64584351]
[-196.45075989 -505.46798706]
[-202.27726746 -519.29016113]
[-214.76748657 -529.00122070]
[-212.58145142 -543.73455811]
[-218.40797424 -557.55670166]
[-230.89817810 -567.26776123]
[-228.71215820 -582.00109863]
[-234.53868103 -595.82324219]
[-254.92622375 -596.91394043]
[-271.32382202 -613.19659424]
[-272.99917603 -638.95104980]
[-282.44863892 -650.60034180]
[-291.89813232 -662.24969482]
[-306.60073853 -668.09301758]
[-308.60952759 -682.85150146]
[-318.05902100 -694.50085449]
[-327.50851440 -706.15020752]
[-335.36062622 -710.85516357]
[-337.01632690 -718.07263184]
[-346.27087402 -729.87738037]
[-361.77206421 -729.17553711]
[-374.70678711 -737.74719238]
[-380.10134888 -752.29632568]
[-375.88143921 -767.22857666]
[-363.66970825 -776.80218506]
[-348.16183472 -777.33581543]
[-335.32086182 -768.62438965]
[-330.08444214 -754.01757812]
[-334.46609497 -739.13195801]
[-325.21151733 -727.32714844]
[-315.85916138 -715.59967041]
[-306.40969849 -703.95037842]
[-296.96020508 -692.30102539]
[-282.93347168 -687.29095459]
[-280.24880981 -671.69921875]
[-270.79931641 -660.04986572]
[-261.34982300 -648.40051270]
[-254.18302917 -650.61120605]
[-250.84552002 -665.23516846]
[-239.84944153 -655.03253174]
[-232.68263245 -657.24316406]
[-231.43740845 -672.19140625]
[-230.19218445 -687.13964844]
[-228.94694519 -702.08782959]
[-238.17088318 -715.21411133]
[-233.52128601 -730.56860352]
[-218.56494141 -736.37268066]
[-204.77508545 -728.17395020]
[-202.73010254 -712.26177979]
[-213.99873352 -700.84259033]
[-215.24395752 -685.89440918]
[-216.48918152 -670.94616699]
[-217.73442078 -655.99792480]
[-207.11297607 -641.44433594]
[-204.84909058 -624.97033691]
[-210.21607971 -610.70227051]
[-220.71653748 -601.64978027]
[-214.89001465 -587.82763672]
[-202.81655884 -579.10516357]
[-204.58583069 -563.38323975]
[-198.75930786 -549.56109619]
[-186.68586731 -540.83862305]
[-188.45513916 -525.11663818]
[-182.62861633 -511.29452515]
[-176.80209351 -497.47238159]
[-170.97557068 -483.65023804]
[-165.14904785 -469.82809448]
[-159.32252502 -456.00595093]
[-153.49600220 -442.18380737]
[-147.66947937 -428.36166382]
[-141.84295654 -414.53952026]
[-136.01643372 -400.71737671]
[-129.84712219 -387.04476929]
[-123.33887482 -373.53024292]
[-116.83061218 -360.01571655]
[-110.32235718 -346.50119019]
[-97.82913971 -338.39138794]
[-98.81253052 -322.60076904]
[-92.30427551 -309.08624268]
[-85.79602051 -295.57171631]
[-79.28776550 -282.05718994]
[-67.96752167 -277.76000977]
[-62.43957138 -266.53820801]
[-66.16204071 -254.17594910]
[-59.87931442 -240.55509949]
[-53.59658813 -226.93426514]
[-37.40924835 -224.25784302]
[-25.88654137 -212.34576416]
[-23.70603752 -195.74913025]
[-31.92213631 -180.97460938]
[-25.41387939 -167.46008301]
[-18.90562439 -153.94554138]
[-12.39736843 -140.43101501]
[0.09585495 -132.32122803]
[-0.88754135 -116.53061676]
[5.62071466 -103.01608276]
[12.12897110 -89.50154877]
[18.63722610 -75.98701477]
[25.14548302 -62.47248077]
[31.76583290 -49.01250458]
[38.49782181 -35.60801697]
[45.22980881 -22.20352554]
[51.96179581 -8.79903603]
[58.69378281 4.60545349]
[65.53694153 17.95353127]
[72.49080658 31.24427414]
[79.44466400 44.53501511]
[86.39852142 57.82575989]
[93.35237885 71.11650085]
[109.43257141 68.67469788]
[125.95172119 75.35286713]
[137.74414062 90.72631073]
[140.33508301 111.50111389]
[150.16654968 122.82993317]
[159.99801636 134.15875244]
[175.66741943 138.99630737]
[179.04837036 155.04315186]
[166.66284180 165.79167175]
[151.25199890 160.18470764]
[148.66920471 143.99023438]
[138.83773804 132.66140747]
[129.00625610 121.33258820]
[122.44963074 124.97411346]
[109.33638763 132.25715637]
[102.77976227 135.89868164]
[107.20108795 150.23226929]
[111.62242126 164.56587219]
[116.04374695 178.89945984]
[126.49012756 192.25271606]
[116.55057526 205.98739624]
[100.60110474 200.23841858]
[101.71015167 183.32078552]
[97.28882599 168.98719788]
[92.86750031 154.65359497]
[88.44617462 140.32000732]
[74.44434357 130.09535217]
[66.53454590 115.83113098]
[65.44468689 100.58523560]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[4 156]
[5 155]
[7 154]
[8 153]
[9 152]
[10 151]
[11 150]
[13 149]
[14 148]
[15 147]
[16 146]
[17 145]
[19 143]
[20 142]
[21 141]
[22 140]
[27 136]
[28 135]
[29 134]
[31 131]
[32 130]
[33 129]
[34 128]
[36 126]
[37 125]
[38 124]
[39 123]
[43 122]
[44 121]
[45 120]
[46 119]
[47 118]
[48 117]
[49 116]
[50 115]
[51 114]
[52 113]
[54 111]
[55 110]
[57 108]
[58 107]
[61 87]
[62 86]
[63 85]
[65 83]
[66 82]
[67 81]
[69 80]
[70 79]
[91 103]
[92 102]
[93 101]
[94 100]
[163 172]
[164 171]
[165 170]
[175 185]
[176 184]
[177 183]
[178 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
