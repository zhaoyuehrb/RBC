%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MEX3D)
} def

/sequence { (\
AUGCCCAGCUCGCUCGGCCAGCCCGACGGCGGCGGGGGCGGGGGCGGCGGCGGCGGCGGCGUGGGGGCGGCGGGGGAGGACCCCGGACCCGGACCUGCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 62 0.007782644 ubox
2 40 0.024647033 ubox
2 46 0.189553647 ubox
2 49 0.219884858 ubox
2 52 0.026309645 ubox
2 55 0.199171949 ubox
2 58 0.580372129 ubox
2 61 0.008259878 ubox
3 9 0.005662903 ubox
3 39 0.034859139 ubox
3 45 0.323951933 ubox
3 48 0.311644552 ubox
3 51 0.037562526 ubox
3 54 0.281683416 ubox
3 57 0.820728306 ubox
3 60 0.032803068 ubox
4 8 0.006320774 ubox
4 37 0.003683819 ubox
4 38 0.034786530 ubox
4 42 0.064994371 ubox
4 43 0.147000592 ubox
4 44 0.328452968 ubox
4 47 0.311734322 ubox
4 50 0.037431383 ubox
4 53 0.279262674 ubox
4 56 0.819911132 ubox
4 59 0.033541451 ubox
5 36 0.004462623 ubox
5 37 0.034694148 ubox
5 41 0.065242075 ubox
5 42 0.147571200 ubox
5 43 0.328640839 ubox
5 44 0.026933531 ubox
5 46 0.311049720 ubox
5 47 0.011822398 ubox
5 49 0.036815434 ubox
5 50 0.009570828 ubox
5 52 0.275207012 ubox
5 53 0.095306548 ubox
5 55 0.812523475 ubox
5 56 0.050086742 ubox
5 58 0.033616842 ubox
5 59 0.006928140 ubox
6 35 0.005100488 ubox
6 36 0.034437851 ubox
6 40 0.065006406 ubox
6 41 0.147020858 ubox
6 42 0.297526636 ubox
6 43 0.031763487 ubox
6 46 0.017333572 ubox
6 49 0.013178476 ubox
6 52 0.132944665 ubox
6 55 0.066907854 ubox
6 58 0.009152596 ubox
8 33 0.033799899 ubox
8 39 0.186200556 ubox
8 45 0.045176510 ubox
8 48 0.074313007 ubox
8 51 0.808994765 ubox
8 54 0.291230551 ubox
8 57 0.010457279 ubox
9 32 0.033611860 ubox
9 36 0.011379775 ubox
9 37 0.003739854 ubox
9 38 0.186380371 ubox
9 41 0.107527845 ubox
9 42 0.357213465 ubox
9 43 0.017036086 ubox
9 44 0.043941786 ubox
9 47 0.073919619 ubox
9 50 0.804648241 ubox
9 53 0.291315628 ubox
9 56 0.010435283 ubox
10 31 0.006651554 ubox
10 32 0.006580098 ubox
10 35 0.013296234 ubox
10 36 0.003314735 ubox
10 37 0.156196698 ubox
10 38 0.011373769 ubox
10 40 0.037193179 ubox
10 41 0.433441496 ubox
10 42 0.014620944 ubox
10 43 0.037677219 ubox
10 46 0.021608483 ubox
10 47 0.026175987 ubox
10 49 0.139498316 ubox
10 50 0.147880614 ubox
10 52 0.157104054 ubox
10 53 0.030223136 ubox
10 55 0.005471285 ubox
11 28 0.004409088 ubox
11 31 0.033565063 ubox
11 34 0.015614157 ubox
11 36 0.142908419 ubox
11 37 0.071966561 ubox
11 40 0.455306180 ubox
11 41 0.011547982 ubox
11 42 0.022211407 ubox
11 43 0.003249860 ubox
11 46 0.086340879 ubox
11 49 0.822114400 ubox
11 52 0.220955881 ubox
11 55 0.008189700 ubox
12 27 0.004453538 ubox
12 30 0.034035197 ubox
12 33 0.016578600 ubox
12 39 0.456605289 ubox
12 45 0.087460909 ubox
12 48 0.833645540 ubox
12 51 0.224080998 ubox
12 54 0.008339020 ubox
13 29 0.033967929 ubox
13 32 0.016544291 ubox
13 35 0.106540445 ubox
13 36 0.085475076 ubox
13 37 0.157605792 ubox
13 38 0.435970819 ubox
13 41 0.003171461 ubox
13 42 0.005082048 ubox
13 43 0.025846315 ubox
13 44 0.085278539 ubox
13 47 0.828627344 ubox
13 50 0.223790051 ubox
13 53 0.008322971 ubox
14 26 0.025899267 ubox
14 28 0.020321920 ubox
14 31 0.012392088 ubox
14 34 0.079476117 ubox
14 35 0.089326416 ubox
14 36 0.210287381 ubox
14 37 0.413101268 ubox
14 41 0.006631247 ubox
14 42 0.032300334 ubox
14 43 0.082260261 ubox
14 46 0.162913620 ubox
14 47 0.130400979 ubox
14 49 0.177143099 ubox
14 50 0.008260976 ubox
14 52 0.006476806 ubox
15 25 0.033679359 ubox
15 28 0.005476876 ubox
15 31 0.009910309 ubox
15 34 0.111270509 ubox
15 35 0.261212143 ubox
15 36 0.388967718 ubox
15 37 0.005445552 ubox
15 40 0.010037813 ubox
15 41 0.037879826 ubox
15 42 0.077339852 ubox
15 43 0.009288531 ubox
15 46 0.837708318 ubox
15 49 0.072082765 ubox
15 52 0.004414842 ubox
16 24 0.033798786 ubox
16 27 0.005518675 ubox
16 30 0.007104170 ubox
16 33 0.079532155 ubox
16 39 0.010964532 ubox
16 45 0.848611320 ubox
16 48 0.054873720 ubox
16 51 0.004293125 ubox
17 22 0.003685558 ubox
17 23 0.033543468 ubox
17 30 0.016063425 ubox
17 33 0.488136270 ubox
17 39 0.067172541 ubox
17 45 0.088005161 ubox
17 48 0.101409930 ubox
18 29 0.017588102 ubox
18 32 0.494739938 ubox
18 35 0.007324471 ubox
18 37 0.011275910 ubox
18 38 0.067182204 ubox
18 41 0.056297236 ubox
18 42 0.108469600 ubox
18 43 0.843489995 ubox
18 44 0.094627373 ubox
18 47 0.112359697 ubox
19 28 0.017586811 ubox
19 31 0.492862466 ubox
19 34 0.007338249 ubox
19 35 0.003221628 ubox
19 36 0.011448022 ubox
19 37 0.066802135 ubox
19 40 0.056578372 ubox
19 41 0.125166142 ubox
19 42 0.840280038 ubox
19 43 0.093650129 ubox
19 46 0.111946992 ubox
21 30 0.494647268 ubox
21 33 0.021123080 ubox
21 39 0.857045745 ubox
21 45 0.112182875 ubox
22 29 0.494747754 ubox
22 32 0.019462911 ubox
22 35 0.004007137 ubox
22 36 0.066678789 ubox
22 37 0.019434719 ubox
22 38 0.857244521 ubox
22 42 0.004613814 ubox
22 43 0.006775080 ubox
22 44 0.112222866 ubox
23 28 0.493261150 ubox
23 29 0.013212043 ubox
23 31 0.017565416 ubox
23 32 0.016411310 ubox
23 35 0.067231686 ubox
23 36 0.023129522 ubox
23 37 0.857024290 ubox
23 38 0.021698590 ubox
23 41 0.004735585 ubox
23 42 0.006848654 ubox
23 43 0.112208582 ubox
24 28 0.017085857 ubox
24 31 0.018784949 ubox
24 34 0.067476322 ubox
24 35 0.026109241 ubox
24 36 0.855712786 ubox
24 37 0.025549682 ubox
24 40 0.004792315 ubox
24 41 0.006889996 ubox
24 42 0.112132455 ubox
25 30 0.021062864 ubox
25 33 0.067845532 ubox
25 39 0.004532803 ubox
27 34 0.841598594 ubox
27 40 0.054329259 ubox
28 33 0.840150502 ubox
28 39 0.042398975 ubox
29 39 0.100561171 ubox
30 38 0.105931565 ubox
30 40 0.005565494 ubox
31 39 0.004597680 ubox
32 39 0.024118918 ubox
33 38 0.024623895 ubox
38 45 0.006622024 ubox
39 44 0.006630421 ubox
44 51 0.034731142 ubox
44 54 0.019534098 ubox
44 57 0.184621370 ubox
44 60 0.005159022 ubox
45 50 0.034754184 ubox
45 52 0.010326700 ubox
45 53 0.018422448 ubox
45 56 0.184895496 ubox
45 58 0.079899676 ubox
45 59 0.005169923 ubox
46 51 0.013066482 ubox
46 54 0.005415194 ubox
46 57 0.198734583 ubox
46 60 0.009469496 ubox
47 54 0.219258654 ubox
47 57 0.093265473 ubox
47 60 0.171944512 ubox
47 62 0.011611350 ubox
48 53 0.219344455 ubox
48 55 0.204328657 ubox
48 56 0.088001713 ubox
48 58 0.052030900 ubox
48 59 0.175770886 ubox
48 61 0.012153631 ubox
49 54 0.206158824 ubox
49 57 0.043340581 ubox
49 60 0.020384290 ubox
50 57 0.357074673 ubox
50 60 0.007854137 ubox
50 100 0.005922264 ubox
51 56 0.358752354 ubox
51 58 0.101893930 ubox
51 59 0.007567650 ubox
51 99 0.005980211 ubox
52 57 0.102786868 ubox
52 98 0.004214074 ubox
53 60 0.011148247 ubox
53 98 0.003707631 ubox
53 100 0.026166026 ubox
54 59 0.011421214 ubox
54 97 0.004709702 ubox
54 99 0.026470280 ubox
55 96 0.004263771 ubox
55 98 0.023220786 ubox
56 95 0.003321242 ubox
56 98 0.037912877 ubox
56 100 0.007372537 ubox
57 97 0.040090737 ubox
57 99 0.007299915 ubox
58 95 0.021605907 ubox
58 96 0.039154487 ubox
58 98 0.005131869 ubox
59 94 0.021699231 ubox
59 95 0.039124394 ubox
59 98 0.009481477 ubox
59 100 0.970657102 ubox
60 97 0.010253134 ubox
60 99 0.982584642 ubox
61 94 0.036593263 ubox
61 96 0.006643446 ubox
61 98 0.997736545 ubox
61 100 0.042885636 ubox
62 91 0.022499972 ubox
62 93 0.035720695 ubox
62 97 0.995687514 ubox
62 99 0.043142214 ubox
63 90 0.023543302 ubox
63 95 0.013561852 ubox
63 96 0.993916514 ubox
63 98 0.043494073 ubox
64 89 0.023484912 ubox
64 90 0.031130567 ubox
64 94 0.013479378 ubox
64 95 0.997790040 ubox
64 96 0.014664003 ubox
65 88 0.023412336 ubox
65 89 0.031214696 ubox
65 90 0.026507358 ubox
65 94 0.997602270 ubox
65 95 0.018191671 ubox
65 96 0.042252484 ubox
66 88 0.031259230 ubox
66 89 0.028559782 ubox
66 90 0.030300677 ubox
66 94 0.020340897 ubox
66 95 0.042402473 ubox
67 88 0.028489723 ubox
67 89 0.030268450 ubox
67 94 0.042191280 ubox
68 85 0.008686089 ubox
68 91 0.997520472 ubox
69 84 0.008356534 ubox
69 89 0.068918466 ubox
69 90 0.995847515 ubox
70 83 0.008045066 ubox
70 88 0.093874838 ubox
70 89 0.992905815 ubox
71 85 0.989664008 ubox
71 91 0.003209443 ubox
72 82 0.007722561 ubox
72 83 0.006471234 ubox
72 84 0.993468771 ubox
72 90 0.003222459 ubox
73 81 0.007700025 ubox
73 82 0.007852871 ubox
73 83 0.993364732 ubox
73 84 0.112265883 ubox
73 89 0.003213550 ubox
74 81 0.008822603 ubox
74 82 0.993229147 ubox
74 83 0.113420996 ubox
74 84 0.014644324 ubox
74 88 0.003175621 ubox
75 81 0.992823510 ubox
75 82 0.114530710 ubox
75 83 0.014653439 ubox
76 81 0.114920852 ubox
76 82 0.014631677 ubox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
11 49 0.9500000 lbox
12 48 0.9500000 lbox
13 47 0.9500000 lbox
15 46 0.9500000 lbox
16 45 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
24 36 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
59 100 0.9500000 lbox
60 99 0.9500000 lbox
61 98 0.9500000 lbox
62 97 0.9500000 lbox
63 96 0.9500000 lbox
64 95 0.9500000 lbox
65 94 0.9500000 lbox
68 91 0.9500000 lbox
69 90 0.9500000 lbox
70 89 0.9500000 lbox
71 85 0.9500000 lbox
72 84 0.9500000 lbox
73 83 0.9500000 lbox
74 82 0.9500000 lbox
75 81 0.9500000 lbox
showpage
end
%%EOF
