%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR52A5)
} def

/sequence { (\
AUGCCGACAUUCAAUGGCUCAGUCUUCAUGCCCUCUGCGUUUAUACUAAUUGGGAUUCCUGGUCUGGAGUCAGUGCAGUGUUGGAUUGGGAUUCCUUUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 86 0.184437810 ubox
1 92 0.007961468 ubox
2 85 0.215146476 ubox
2 88 0.023275322 ubox
2 91 0.009182490 ubox
3 18 0.017293092 ubox
3 87 0.030962475 ubox
4 17 0.017739169 ubox
4 84 0.972986678 ubox
4 89 0.010185255 ubox
5 16 0.017736291 ubox
5 83 0.997818684 ubox
5 88 0.009946655 ubox
6 15 0.015271157 ubox
6 82 0.998694133 ubox
6 87 0.006868097 ubox
7 81 0.999531517 ubox
7 86 0.004222081 ubox
8 80 0.999795982 ubox
9 79 0.999458136 ubox
10 78 0.997664854 ubox
11 77 0.980626310 ubox
12 75 0.974296045 ubox
13 74 0.921717355 ubox
14 74 0.065295434 ubox
15 72 0.981704025 ubox
15 73 0.042313218 ubox
16 32 0.007123899 ubox
16 71 0.999256394 ubox
16 95 0.003961549 ubox
17 31 0.007212315 ubox
17 70 0.999420713 ubox
17 94 0.003964867 ubox
18 30 0.007226064 ubox
18 69 0.999719700 ubox
18 90 0.006650471 ubox
19 67 0.313386827 ubox
19 68 0.947574589 ubox
19 89 0.009719951 ubox
20 66 0.723939200 ubox
20 67 0.689220032 ubox
20 88 0.012298978 ubox
21 47 0.028076012 ubox
21 57 0.003615699 ubox
21 65 0.972979113 ubox
21 87 0.012320733 ubox
21 93 0.009620711 ubox
22 46 0.029580365 ubox
22 56 0.003898078 ubox
22 63 0.017268355 ubox
22 64 0.990817017 ubox
22 86 0.012327446 ubox
22 92 0.011541651 ubox
23 45 0.028704403 ubox
23 55 0.004242685 ubox
23 62 0.319656445 ubox
23 85 0.012328605 ubox
23 91 0.011714569 ubox
24 54 0.004216087 ubox
24 61 0.328564112 ubox
24 62 0.930374373 ubox
24 84 0.012293788 ubox
24 90 0.011710286 ubox
25 53 0.003753193 ubox
25 61 0.917334220 ubox
25 62 0.014727413 ubox
25 83 0.011809290 ubox
25 89 0.008497719 ubox
26 53 0.003256796 ubox
26 55 0.006922575 ubox
26 61 0.021483182 ubox
26 62 0.078622764 ubox
26 89 0.008202488 ubox
27 52 0.003831843 ubox
27 54 0.005447189 ubox
27 61 0.090513501 ubox
27 66 0.008094593 ubox
27 80 0.009447575 ubox
27 88 0.011558197 ubox
28 40 0.049857028 ubox
28 51 0.003295359 ubox
28 56 0.232743458 ubox
28 60 0.088589975 ubox
28 65 0.008027000 ubox
28 79 0.009147296 ubox
28 87 0.011637118 ubox
29 39 0.052222177 ubox
29 55 0.243426844 ubox
29 77 0.008326389 ubox
29 78 0.005401137 ubox
30 38 0.055319430 ubox
30 60 0.004899068 ubox
30 63 0.011226032 ubox
30 76 0.009688323 ubox
30 81 0.003958782 ubox
31 37 0.055216683 ubox
31 53 0.070496078 ubox
31 54 0.991143616 ubox
31 62 0.011299882 ubox
31 75 0.009679104 ubox
31 80 0.004138132 ubox
31 84 0.011920989 ubox
32 52 0.069993880 ubox
32 53 0.991636619 ubox
32 54 0.077668307 ubox
32 61 0.011247536 ubox
32 83 0.011903030 ubox
33 52 0.991032266 ubox
33 53 0.077879798 ubox
33 54 0.030693542 ubox
33 73 0.004288552 ubox
34 52 0.070308473 ubox
34 53 0.030733401 ubox
34 54 0.006281688 ubox
34 55 0.031574308 ubox
34 72 0.004055097 ubox
35 52 0.041266191 ubox
35 53 0.008152707 ubox
35 54 0.032367668 ubox
35 73 0.007660323 ubox
35 78 0.013939503 ubox
36 43 0.009976701 ubox
36 45 0.019966088 ubox
36 48 0.204393589 ubox
36 52 0.008268423 ubox
36 53 0.032074898 ubox
36 72 0.007670458 ubox
36 77 0.014231321 ubox
37 42 0.009305957 ubox
37 44 0.019258503 ubox
37 47 0.226244909 ubox
37 51 0.021618895 ubox
37 71 0.007592339 ubox
37 76 0.014286971 ubox
38 52 0.013381159 ubox
38 75 0.014272896 ubox
39 46 0.856341400 ubox
39 50 0.092414770 ubox
39 51 0.023276999 ubox
39 74 0.010636390 ubox
40 45 0.836725131 ubox
40 49 0.098580318 ubox
40 68 0.007554143 ubox
40 73 0.006476348 ubox
41 48 0.096564364 ubox
41 49 0.038377872 ubox
41 53 0.003949261 ubox
41 67 0.007573841 ubox
41 72 0.006404582 ubox
42 48 0.039207177 ubox
42 52 0.005058289 ubox
42 66 0.008689480 ubox
43 47 0.035100849 ubox
43 50 0.008922374 ubox
43 51 0.009794593 ubox
43 65 0.008548891 ubox
43 81 0.003540687 ubox
44 49 0.009559208 ubox
44 80 0.003783212 ubox
45 51 0.004362948 ubox
45 63 0.012477941 ubox
45 74 0.003388304 ubox
45 79 0.003866872 ubox
46 53 0.009106152 ubox
46 54 0.004179178 ubox
46 62 0.013104007 ubox
46 73 0.003784706 ubox
46 78 0.003878929 ubox
47 52 0.008573549 ubox
47 53 0.004177169 ubox
47 61 0.013013879 ubox
47 66 0.004963333 ubox
47 72 0.003746803 ubox
47 77 0.003750273 ubox
48 60 0.011864409 ubox
48 65 0.005478898 ubox
49 63 0.028855474 ubox
49 74 0.003772740 ubox
50 62 0.030020190 ubox
50 73 0.003995475 ubox
51 61 0.031478686 ubox
51 72 0.003585962 ubox
52 59 0.029789073 ubox
52 60 0.040931681 ubox
52 96 0.006153801 ubox
53 58 0.029738996 ubox
53 59 0.041966227 ubox
53 60 0.005150844 ubox
53 65 0.014767117 ubox
53 95 0.006689509 ubox
54 58 0.041297607 ubox
54 59 0.005550123 ubox
54 64 0.015639899 ubox
54 71 0.017189018 ubox
54 94 0.006695067 ubox
55 63 0.015725763 ubox
55 70 0.017444412 ubox
55 93 0.006552261 ubox
56 62 0.015535733 ubox
56 69 0.017519483 ubox
57 61 0.011450562 ubox
57 68 0.017944183 ubox
57 91 0.006664774 ubox
58 67 0.018323868 ubox
58 90 0.006907720 ubox
59 66 0.018793259 ubox
59 89 0.006908612 ubox
60 88 0.006879790 ubox
61 87 0.006888159 ubox
62 86 0.007051707 ubox
63 85 0.007063453 ubox
64 84 0.007059532 ubox
65 83 0.006900137 ubox
66 82 0.005552332 ubox
67 81 0.004958512 ubox
71 80 0.005766542 ubox
72 79 0.005627521 ubox
83 95 0.018987347 ubox
83 99 0.009501459 ubox
83 100 0.050734260 ubox
84 93 0.003756023 ubox
84 94 0.020898751 ubox
84 97 0.003960604 ubox
84 98 0.013420114 ubox
84 99 0.214721220 ubox
85 92 0.013582782 ubox
85 93 0.022134362 ubox
85 96 0.015211323 ubox
85 97 0.042393078 ubox
85 98 0.287221459 ubox
86 91 0.013297390 ubox
88 94 0.029421494 ubox
88 95 0.550058310 ubox
88 96 0.349096028 ubox
88 97 0.102696833 ubox
88 98 0.015322113 ubox
88 99 0.206419707 ubox
88 100 0.374263437 ubox
89 93 0.019401152 ubox
89 94 0.548912449 ubox
89 95 0.377310312 ubox
89 96 0.129288396 ubox
89 97 0.017586598 ubox
89 98 0.205905625 ubox
89 99 0.421932835 ubox
89 100 0.404886139 ubox
90 94 0.371455368 ubox
90 95 0.132236987 ubox
90 96 0.016217929 ubox
90 97 0.199939201 ubox
90 98 0.421178030 ubox
90 99 0.443329192 ubox
91 96 0.180761218 ubox
91 97 0.416982789 ubox
91 98 0.437498774 ubox
4 84 0.9500000 lbox
5 83 0.9500000 lbox
6 82 0.9500000 lbox
7 81 0.9500000 lbox
8 80 0.9500000 lbox
9 79 0.9500000 lbox
10 78 0.9500000 lbox
11 77 0.9500000 lbox
12 75 0.9500000 lbox
13 74 0.9500000 lbox
15 72 0.9500000 lbox
16 71 0.9500000 lbox
17 70 0.9500000 lbox
18 69 0.9500000 lbox
19 68 0.9500000 lbox
20 67 0.9500000 lbox
21 65 0.9500000 lbox
22 64 0.9500000 lbox
24 62 0.9500000 lbox
25 61 0.9500000 lbox
31 54 0.9500000 lbox
32 53 0.9500000 lbox
33 52 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
88 95 0.9500000 lbox
89 94 0.9500000 lbox
showpage
end
%%EOF
