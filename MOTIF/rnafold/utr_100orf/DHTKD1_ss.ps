%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:47:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGUUGUCUGGGGGCGGGGCUCCGGCCGCCUCUGACGAGUCCCGGAUUUACCAGGGCCGGUGGGAUCCCCUCGGGCUCCCGCCUUAGCAUGCUGGCCGGGACAUCUGGUGAACAUGGCCUCUGCUACUGCGGCAGCAGCACGACGGGGCCUCGGCCGGGCUCUCCCUCUCUUCUGGCGUGGCUACCAGACCGAGCGGGGCGUUUACGGCUACC\
) } def
/len { sequence length } bind def

/coor [
[225.53831482 211.98265076]
[240.06399536 208.24012756]
[228.65089417 198.50662231]
[217.23779297 188.77311707]
[205.82467651 179.03962708]
[194.41157532 169.30612183]
[179.70700073 166.93450928]
[174.22753906 152.09246826]
[162.81443787 142.35896301]
[151.40133667 132.62547302]
[139.98822021 122.89196777]
[128.57511902 113.15846252]
[109.81371307 127.14250946]
[88.68496704 123.70288849]
[78.62660980 134.83074951]
[68.56825256 145.95861816]
[58.50989151 157.08648682]
[48.45153427 168.21435547]
[38.39317322 179.34220886]
[28.33481407 190.47007751]
[18.27645493 201.59794617]
[21.60512161 216.75379944]
[15.35885525 230.95814514]
[1.93947196 238.74916077]
[-13.49300098 237.13101196]
[-25.00446320 226.72592163]
[-28.16852379 211.53486633]
[-21.76853371 197.39909363]
[-8.26542377 189.75411987]
[7.14858818 191.53958130]
[17.20694733 180.41172791]
[27.26530647 169.28385925]
[37.32366562 158.15599060]
[47.38202667 147.02812195]
[57.44038391 135.90025330]
[67.49874115 124.77239227]
[77.55710602 113.64452362]
[75.18955231 108.61965179]
[73.93167877 103.20925903]
[73.83973694 97.65532684]
[74.91784668 92.20626831]
[62.46083450 83.85025787]
[49.94393921 75.58422852]
[37.36780548 67.40859985]
[24.79167366 59.23297119]
[12.21553993 51.05734634]
[-0.36059260 42.88171768]
[-12.93672562 34.70608902]
[-25.51285744 26.53046227]
[-24.97212029 41.52071381]
[-36.25784302 51.40162659]
[-51.04515076 48.88458252]
[-58.42623901 35.82627106]
[-52.95647049 21.85910797]
[-38.67052078 17.28593445]
[-50.62543488 8.22613335]
[-62.58035278 -0.83366722]
[-74.53526306 -9.89346790]
[-94.63260651 -11.50482559]
[-101.34745026 -29.64081573]
[-113.55848694 -38.35233688]
[-133.69392395 -39.38386154]
[-140.92861938 -57.31881332]
[-153.38563538 -65.67481995]
[-165.84263611 -74.03082275]
[-178.29965210 -82.38683319]
[-190.75666809 -90.74283600]
[-203.21368408 -99.09884644]
[-215.67068481 -107.45485687]
[-231.44148254 -108.71689606]
[-237.70086670 -122.23242188]
[-250.15788269 -130.58842468]
[-262.61489868 -138.94442749]
[-279.13699341 -142.74659729]
[-280.05718994 -159.67556763]
[-264.04455566 -165.24620056]
[-254.25888062 -151.40144348]
[-241.80187988 -143.04544067]
[-229.34486389 -134.68943787]
[-214.46508789 -134.02507019]
[-207.31468201 -119.91186523]
[-194.85766602 -111.55585480]
[-182.40066528 -103.19985199]
[-169.94364929 -94.84384155]
[-157.48663330 -86.48783875]
[-145.02961731 -78.13182831]
[-132.57261658 -69.77582550]
[-122.77180481 -72.64407349]
[-112.79979706 -69.58255768]
[-106.01706696 -61.37061310]
[-104.84696960 -50.56337357]
[-92.63593292 -41.85185242]
[-82.75653839 -44.43647385]
[-72.87689972 -41.08885574]
[-66.33364105 -32.68485641]
[-65.47546387 -21.84838295]
[-53.52054977 -12.78858280]
[-41.56563568 -3.72878170]
[-29.61071968 5.33101940]
[-17.33723068 13.95432949]
[-4.76109791 22.12995720]
[7.81503487 30.30558395]
[20.39116859 38.48121262]
[32.96730042 46.65684128]
[45.54343414 54.83246613]
[58.11956406 63.00809479]
[65.43695068 64.01781464]
[70.81684113 71.39324951]
[83.27385712 79.74925232]
[94.95009613 72.46272278]
[109.56636810 71.85342407]
[123.35489655 78.92320251]
[131.34844971 66.23056030]
[139.34199524 53.53792191]
[134.55273438 45.11381149]
[133.16598511 35.58169174]
[135.33024597 26.25490952]
[140.70767212 18.40308189]
[148.52604675 13.07926464]
[157.68936157 10.97880077]
[166.93150330 12.34871864]
[175.64302063 0.13768369]
[173.23986816 -15.25265789]
[182.24853516 -27.51228523]
[196.93568420 -29.70847893]
[205.64720154 -41.91951370]
[214.35873413 -54.13055038]
[223.07025146 -66.34158325]
[224.10389709 -82.70812225]
[238.91281128 -89.75284576]
[252.26284790 -80.22874451]
[250.42063904 -63.93339920]
[235.28128052 -57.63006210]
[226.56976318 -45.41902924]
[217.85824585 -33.20799255]
[209.14671326 -20.99695778]
[211.84950256 -6.39454222]
[203.18873596 6.11328268]
[187.85404968 8.84920597]
[179.14253235 21.06024170]
[184.18957520 40.87173462]
[172.80262756 58.20447922]
[152.03463745 61.53147125]
[144.04109192 74.22411346]
[136.04754639 86.91675568]
[138.30862427 101.74536133]
[149.72172546 111.47885895]
[161.13482666 121.21235657]
[172.54792786 130.94586182]
[183.96104431 140.67935181]
[199.48196411 143.74717712]
[204.14508057 157.89302063]
[215.55818176 167.62651062]
[226.97128296 177.36001587]
[238.38439941 187.09352112]
[249.79750061 196.82701111]
[261.55380249 206.14309692]
[273.63803101 215.02969360]
[285.72225952 223.91627502]
[297.80648804 232.80285645]
[309.89071655 241.68943787]
[322.10174561 250.40095520]
[334.43707275 258.93560791]
[346.77236938 267.47027588]
[359.57492065 265.93112183]
[369.67230225 273.28930664]
[371.97494507 285.16134644]
[384.18597412 293.87286377]
[396.39700317 302.58441162]
[408.60803223 311.29592896]
[424.33590698 313.01193237]
[430.20321655 326.70220947]
[442.41424561 335.41372681]
[454.62527466 344.12527466]
[472.99282837 345.46823120]
[479.63580322 361.71371460]
[491.97109985 370.24835205]
[504.30639648 378.78298950]
[516.64172363 387.31765747]
[528.97698975 395.85229492]
[543.57507324 390.59140015]
[558.46795654 394.94808960]
[567.92913818 407.24710083]
[568.32055664 422.75924683]
[559.49169922 435.51977539]
[544.83746338 440.62197876]
[529.99267578 436.10400391]
[520.66546631 423.70309448]
[520.44238281 408.18762207]
[508.10705566 399.65295410]
[495.77175903 391.11831665]
[483.43643188 382.58364868]
[471.10113525 374.04901123]
[459.15151978 375.90747070]
[448.80593872 368.90252686]
[445.91375732 356.33630371]
[433.70272827 347.62478638]
[421.49169922 338.91323853]
[406.63723755 337.82034302]
[399.89651489 323.50695801]
[387.68548584 314.79544067]
[375.47445679 306.08392334]
[363.26339722 297.37240601]
[345.72790527 296.63015747]
[338.23770142 279.80557251]
[325.90240479 271.27090454]
[313.56710815 262.73626709]
[308.79614258 262.69415283]
[303.99984741 259.65805054]
[301.00411987 253.77366638]
[288.91989136 244.88708496]
[276.83566284 236.00050354]
[264.75143433 227.11392212]
[252.66720581 218.22732544]
[252.34342957 233.22383118]
[240.50720215 242.43814087]
[225.88946533 239.07336426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 156]
[3 155]
[4 154]
[5 153]
[6 152]
[8 150]
[9 149]
[10 148]
[11 147]
[12 146]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[41 109]
[42 108]
[43 106]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[55 99]
[56 98]
[57 97]
[58 96]
[60 92]
[61 91]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[71 79]
[72 78]
[73 77]
[112 145]
[113 144]
[114 143]
[121 140]
[122 139]
[125 136]
[126 135]
[127 134]
[128 133]
[157 214]
[158 213]
[159 212]
[160 211]
[161 210]
[162 207]
[163 206]
[164 205]
[167 203]
[168 202]
[169 201]
[170 200]
[172 198]
[173 197]
[174 196]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
