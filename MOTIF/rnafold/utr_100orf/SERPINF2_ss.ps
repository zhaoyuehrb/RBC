%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGGCAGAGAGUGAGGAGCACCCAAGUGGGGCCAGAGGAACGUUGUGUGUGGCAGCAAGGAGCCCGCAGAGGAACAUGGCGCUGCUCUGGGGGCUCCUGGUGCUCAGCUGGUCCUGCCUGCAAGGCCCCUGCUCCGUGUUCUCCCCUGUGAGCGCCAUGGAGCCCUUGGGCCGGC\
) } def
/len { sequence length } bind def

/coor [
[322.68591309 274.62606812]
[319.58007812 272.80044556]
[316.99163818 269.74639893]
[315.37631226 265.64212036]
[303.30358887 256.73989868]
[291.23089600 247.83766174]
[279.15817261 238.93542480]
[267.08547974 230.03320312]
[255.01277161 221.13096619]
[247.74124146 219.68754578]
[242.80740356 211.96356201]
[230.89369202 202.84963989]
[216.79435730 210.34074402]
[200.78172302 210.94265747]
[186.05332947 204.48452759]
[175.57237244 192.21032715]
[171.47155762 176.53968811]
[174.61926270 160.59088135]
[162.54653931 151.68864441]
[150.47383118 142.78640747]
[138.40112305 133.88418579]
[126.32842255 124.98195648]
[114.25571442 116.07972717]
[102.18300629 107.17749023]
[100.53083801 111.03442383]
[97.11363220 114.30392456]
[92.17138672 116.36075592]
[86.14018250 116.67423248]
[79.61743927 114.86517334]
[64.61977386 115.12989807]
[53.68065643 126.21923828]
[38.46712112 126.27406311]
[27.96254539 115.77694702]
[12.96488094 116.04167175]
[-2.03278327 116.30639648]
[-17.03044701 116.57112885]
[-22.23510933 130.82861328]
[-32.24165344 142.24060059]
[-45.69677353 149.26371765]
[-60.78077698 150.94815063]
[-75.45367432 147.06607056]
[-87.73107910 138.14251709]
[-95.95257568 125.38432312]
[-99.00626373 110.51692963]
[-96.47916412 95.55103302]
[-88.71305084 82.51063538]
[-76.75821686 73.15935516]
[-62.23146439 68.76187134]
[-47.09741211 69.91291046]
[-33.40281677 76.45680237]
[-22.99976349 87.50853729]
[-17.29517365 101.57346344]
[-2.29751039 101.30873871]
[12.70015335 101.04400635]
[27.69781685 100.77928162]
[37.82538986 89.91798401]
[53.03138351 89.43585968]
[64.35504913 100.13223267]
[79.35270691 99.86750793]
[88.04048920 87.63957214]
[83.35490417 73.39017487]
[78.66932678 59.14077759]
[73.98374176 44.89138031]
[69.29815674 30.64198112]
[64.61257935 16.39258575]
[59.92699432 2.14318800]
[55.24140930 -12.10620880]
[43.58049774 -22.79890060]
[46.95497513 -37.30621338]
[42.26939392 -51.55561066]
[37.58380890 -65.80500793]
[32.89822769 -80.05440521]
[28.21264458 -94.30380249]
[13.05742455 -95.80019379]
[-0.17570789 -103.33704376]
[-9.19403267 -115.60854340]
[-12.43507004 -130.48858643]
[-9.33729076 -145.39910889]
[-0.43740454 -157.75677490]
[12.72263050 -165.42054749]
[27.86275864 -167.06262207]
[42.35985947 -162.39851379]
[53.70222473 -152.23629761]
[59.92472076 -138.33663940]
[59.94926071 -123.10774231]
[53.77159500 -109.18810272]
[42.46203995 -98.98938751]
[47.14762497 -84.73999023]
[51.83320618 -70.49059296]
[56.51879120 -56.24119568]
[61.20437241 -41.99179840]
[72.53014374 -32.31831741]
[69.49080658 -16.79179192]
[74.17639160 -2.54239488]
[78.86197662 11.70700264]
[83.54755402 25.95639992]
[88.23313904 40.20579529]
[92.91872406 54.45519257]
[97.60430145 68.70458984]
[102.28988647 82.95398712]
[111.08523560 95.10478210]
[123.15794373 104.00701141]
[135.23065186 112.90924835]
[147.30335999 121.81147766]
[159.37606812 130.71369934]
[171.44877625 139.61593628]
[183.52148438 148.51817322]
[195.76754761 141.43081665]
[209.74833679 139.55752563]
[223.34437561 143.14891052]
[234.50724792 151.62968445]
[241.56817627 163.69049072]
[243.48748779 177.48997498]
[240.00759888 190.93592834]
[251.92131042 200.04983521]
[263.91500854 209.05825806]
[275.98770142 217.96049500]
[288.06042480 226.86271667]
[300.13311768 235.76495361]
[312.20584106 244.66717529]
[324.27853394 253.56941223]
[336.65789795 262.04003906]
[349.32849121 270.06848145]
[362.08187866 268.01351929]
[372.47680664 274.98571777]
[375.23095703 286.78396606]
[387.75790405 295.03479004]
[400.28482056 303.28561401]
[412.81173706 311.53643799]
[425.33868408 319.78726196]
[443.70803833 315.24960327]
[459.31091309 325.37969971]
[462.52893066 343.37863159]
[475.33923340 351.18222046]
[488.14953613 358.98580933]
[500.95986938 366.78942871]
[513.77014160 374.59301758]
[526.78253174 382.05474854]
[539.98791504 389.16946411]
[553.19323730 396.28414917]
[566.39862061 403.39883423]
[579.60394287 410.51351929]
[592.80926514 417.62820435]
[606.73419189 410.78155518]
[622.01824951 413.46051025]
[632.78448486 424.63494873]
[634.89294434 440.00811768]
[627.53302002 453.66867065]
[613.53466797 460.36386108]
[598.28057861 457.51925659]
[587.63623047 446.22866821]
[585.69458008 430.83355713]
[572.48925781 423.71887207]
[559.28387451 416.60418701]
[546.07855225 409.48950195]
[532.87322998 402.37478638]
[519.66784668 395.26010132]
[516.17810059 395.93487549]
[512.18676758 394.93380737]
[508.49401855 392.03930664]
[505.96658325 387.40332031]
[493.15625000 379.59973145]
[480.34594727 371.79614258]
[467.53564453 363.99252319]
[454.72534180 356.18893433]
[444.45214844 361.23187256]
[432.90155029 360.66986084]
[422.96215820 354.52722168]
[417.17578125 344.23831177]
[417.08786011 332.31420898]
[404.56091309 324.06338501]
[392.03399658 315.81256104]
[379.50708008 307.56170654]
[366.98013306 299.31088257]
[349.44415283 299.23883057]
[341.30001831 282.73907471]
[328.62945557 274.71063232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 121]
[5 120]
[6 119]
[7 118]
[8 117]
[9 116]
[11 115]
[12 114]
[18 107]
[19 106]
[20 105]
[21 104]
[22 103]
[23 102]
[24 101]
[29 59]
[30 58]
[33 55]
[34 54]
[35 53]
[36 52]
[60 100]
[61 99]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[67 93]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[122 177]
[123 176]
[126 174]
[127 173]
[128 172]
[129 171]
[130 170]
[133 165]
[134 164]
[135 163]
[136 162]
[137 161]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
