%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGACUCAGACUCUGCUCUUCAGAUCCACACACUGAUCCCAACUACAACCAGUGACCUGAACUUGGAGUCUGAGUAGGGCGGCCCCGGUGACUGAGAUGGCAUCGUCUCUAAAGAUCUGGGGCACACUCUUGGCCCUACUUUGCAUCCUAUGCACACUGCUUGUACAGAGCAAAGAAGUUUCUUGGAGAGAAUUCA\
) } def
/len { sequence length } bind def

/coor [
[103.65312958 115.00051880]
[99.67562103 129.46356201]
[95.69811249 143.92658997]
[91.72060394 158.38963318]
[101.51113129 170.42813110]
[102.32216644 185.92399597]
[93.84185028 198.91874695]
[79.33103943 204.41566467]
[64.36943817 200.30104065]
[54.71008301 188.15705872]
[54.06719589 172.65330505]
[62.68798065 159.75129700]
[77.25756836 154.41212463]
[81.23507690 139.94908142]
[85.21258545 125.48605347]
[89.19009399 111.02301788]
[90.13667297 96.05290985]
[88.01260376 81.20406342]
[85.88854218 66.35520935]
[83.76447296 51.50636292]
[81.64040375 36.65751266]
[74.86127472 33.44917679]
[62.52516556 41.98266220]
[61.30301666 27.03250694]
[54.52389145 23.82417107]
[41.69424438 31.59592628]
[28.86459732 39.36768341]
[16.03495216 47.13943863]
[14.87238693 62.61289978]
[4.81112432 74.42605591]
[-10.28007507 78.03649902]
[-24.59833717 72.05595398]
[-32.63799667 58.78404617]
[-31.30764389 43.32410431]
[-21.11882401 31.62079048]
[-5.98934603 28.17426682]
[8.26319599 34.30979156]
[21.09284210 26.53803635]
[33.92248917 18.76628113]
[46.75213623 10.99452496]
[47.52995300 0.59673655]
[51.15219116 -8.54478073]
[56.97304916 -15.72187805]
[64.19334412 -20.48651695]
[71.95352173 -22.67549515]
[79.42696381 -22.40438080]
[82.71528625 -37.03950882]
[86.00360870 -51.67463303]
[89.29193878 -66.30976105]
[92.58026123 -80.94488525]
[88.05646515 -96.10555267]
[98.39564514 -106.82705688]
[101.68396759 -121.46218109]
[104.97229767 -136.09730530]
[108.26062012 -150.73243713]
[111.54894257 -165.36755371]
[109.98500824 -170.36814880]
[110.45503235 -175.00296021]
[112.47714996 -178.55665588]
[115.35496521 -180.60990906]
[119.33247375 -195.07293701]
[109.00000763 -204.50968933]
[103.76839447 -217.41683960]
[104.60642242 -231.25239563]
[111.29349518 -243.31794739]
[122.47383881 -251.28494263]
[135.93099976 -253.64398193]
[140.13632202 -268.04241943]
[144.34164429 -282.44085693]
[133.84523010 -293.56619263]
[130.34985352 -308.35397339]
[134.69677734 -322.80978394]
[145.62269592 -333.08016968]
[160.12469482 -336.47976685]
[164.33003235 -350.87823486]
[168.53535461 -365.27667236]
[172.74069214 -379.67510986]
[176.94601440 -394.07354736]
[181.15133667 -408.47198486]
[185.35667419 -422.87045288]
[189.56199646 -437.26889038]
[193.76733398 -451.66732788]
[174.29364014 -460.87716675]
[168.55285645 -490.52160645]
[170.91107178 -505.33508301]
[173.26928711 -520.14855957]
[175.62750244 -534.96203613]
[177.98570251 -549.77551270]
[180.34391785 -564.58892822]
[182.70213318 -579.40240479]
[168.41835022 -588.91943359]
[159.75517273 -603.67248535]
[158.41163635 -620.67272949]
[164.60954285 -636.50042725]
[177.05850220 -647.99285889]
[193.22430420 -652.87628174]
[195.11370850 -667.75683594]
[197.00309753 -682.63732910]
[198.89250183 -697.51788330]
[200.78189087 -712.39837646]
[202.67127991 -727.27893066]
[195.83042908 -742.18310547]
[205.53680420 -755.40118408]
[221.80534363 -753.33557129]
[227.90036011 -738.11114502]
[217.55181885 -725.38952637]
[215.66242981 -710.50903320]
[213.77302551 -695.62847900]
[211.88363647 -680.74792480]
[209.99423218 -665.86743164]
[208.10484314 -650.98687744]
[219.55415344 -644.82830811]
[228.24830627 -635.11962891]
[233.13488770 -623.00347900]
[233.61137390 -609.91571045]
[229.59924316 -597.41540527]
[221.55599976 -586.99902344]
[210.42304993 -579.92138672]
[197.51559448 -577.04418945]
[195.15737915 -562.23071289]
[192.79917908 -547.41729736]
[190.44096375 -532.60382080]
[188.08274841 -517.79034424]
[185.72454834 -502.97686768]
[183.36633301 -488.16339111]
[196.00892639 -480.08969116]
[208.65039062 -472.01669312]
[221.09771729 -480.38711548]
[227.81738281 -495.34634399]
[244.15745544 -496.73712158]
[253.30865479 -483.12875366]
[245.85700989 -468.52035522]
[229.46813965 -467.93978882]
[217.02082825 -459.56936646]
[208.16577148 -447.46200562]
[203.96044922 -433.06356812]
[199.75511169 -418.66513062]
[195.54978943 -404.26666260]
[191.34445190 -389.86822510]
[187.13912964 -375.46978760]
[182.93380737 -361.07135010]
[178.72846985 -346.67288208]
[174.52314758 -332.27444458]
[184.91571045 -321.60391235]
[188.59632874 -307.06744385]
[184.47946167 -292.54443359]
[173.57440186 -281.96255493]
[158.74009705 -278.23553467]
[154.53477478 -263.83709717]
[150.32943726 -249.43864441]
[161.77729797 -238.04069519]
[165.94174194 -222.33509827]
[161.59538269 -206.58148193]
[149.83253479 -195.10197449]
[133.79551697 -191.09542847]
[129.81800842 -176.63240051]
[126.18406677 -162.07923889]
[122.89574432 -147.44410706]
[119.60742188 -132.80899048]
[116.31909943 -118.17385864]
[113.03077698 -103.53873444]
[117.78977203 -89.42486572]
[107.21538544 -77.65656281]
[103.92706299 -63.02143860]
[100.63874054 -48.38631058]
[97.35041809 -33.75118256]
[94.06208801 -19.11605835]
[111.81453705 3.15618181]
[96.48925018 34.53344727]
[98.61331940 49.38229370]
[100.73738861 64.23114777]
[102.86145782 79.07999420]
[104.98552704 93.92884064]
[114.57907104 89.55165863]
[126.21739960 90.12041473]
[137.91145325 96.23717499]
[147.54350281 107.79546356]
[153.09178162 121.73162079]
[158.64006042 135.66778564]
[170.93309021 145.62730408]
[168.45217896 160.31382751]
[174.00045776 174.25000000]
[179.54873657 188.18615723]
[185.09701538 202.12231445]
[190.64529419 216.05848694]
[202.12147522 228.53781128]
[193.30676270 243.02011108]
[176.95027161 238.55899048]
[176.70913696 221.60676575]
[171.16085815 207.67059326]
[165.61257935 193.73443604]
[160.06430054 179.79827881]
[154.51600647 165.86210632]
[142.61982727 156.89939880]
[144.70390320 141.21606445]
[139.15562439 127.27989960]
[133.60734558 113.34374237]
[126.11878967 113.75793457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[25 40]
[26 39]
[27 38]
[28 37]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[60 156]
[61 155]
[67 150]
[68 149]
[69 148]
[74 143]
[75 142]
[76 141]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[127 134]
[128 133]
[177 197]
[178 196]
[179 195]
[181 193]
[182 192]
[183 191]
[184 190]
[185 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
