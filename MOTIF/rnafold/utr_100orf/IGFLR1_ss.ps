%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAACUUCAGCUGAGGAACUUGGCACGGCCAGCUUGGGACCCAGGACCCUAACGCAGAGGCGCUGUGUUUGGAAGUCCCGCUAUCACGGCCCCCCAGAUGGGGCCUGGACGAUGCCUCCUGACGGCCUUGUUGCUUCUGGCCCUGGCGCCACCGCCGGAAGCCUCCCAGUACUGCGGCCGCCUUGAAUACUGGAACC\
) } def
/len { sequence length } bind def

/coor [
[53.66778946 408.78805542]
[56.70145798 423.47808838]
[43.66785812 430.90270996]
[32.57902145 420.80136108]
[38.75928879 407.13378906]
[40.41353989 392.22531128]
[42.06779099 377.31680298]
[43.72204590 362.40829468]
[45.37629700 347.49978638]
[47.03054810 332.59127808]
[39.57629776 331.76416016]
[31.50293922 344.40618896]
[23.42958069 357.04821777]
[15.35622215 369.69024658]
[7.28286409 382.33227539]
[-0.79049468 394.97430420]
[-4.21962786 411.57785034]
[-21.12356949 412.87902832]
[-27.05338860 396.99591064]
[-13.43252277 386.90093994]
[-5.35916471 374.25891113]
[2.71419406 361.61688232]
[10.78755283 348.97485352]
[18.86091042 336.33282471]
[26.93426895 323.69079590]
[48.11459732 309.08422852]
[67.11229706 312.92193604]
[69.23636627 298.07308960]
[71.36043549 283.22424316]
[73.48450470 268.37539673]
[75.60856628 253.52653503]
[73.44153595 246.45298767]
[77.88516235 238.46076965]
[80.24337006 223.64730835]
[82.13276672 208.76676941]
[83.55146027 193.83401489]
[84.97016144 178.90126038]
[86.38885498 163.96849060]
[87.80755615 149.03573608]
[89.22624969 134.10298157]
[73.80718994 129.19667053]
[60.92864609 117.18420410]
[53.85987854 99.49838257]
[55.04002380 79.04780579]
[65.43351746 59.74183655]
[51.54158401 54.08372498]
[37.64965057 48.42561722]
[23.75771713 42.76750565]
[9.77819633 37.32940292]
[-4.28543091 32.11266327]
[-19.91502953 34.56750107]
[-29.15690422 22.88687325]
[-43.22053146 17.67013168]
[-57.28415680 12.45339108]
[-71.34778595 7.23664951]
[-85.41141510 2.01990795]
[-99.47503662 -3.19683337]
[-113.53866577 -8.41357517]
[-128.66093445 -3.05666685]
[-142.20097351 -11.66171169]
[-143.77203369 -27.62765503]
[-132.16891479 -38.70679092]
[-116.29254913 -36.40015793]
[-108.32192230 -22.47720146]
[-94.25830078 -17.26045990]
[-80.19467163 -12.04371929]
[-66.13104248 -6.82697773]
[-52.06741714 -1.61023629]
[-38.00378799 3.60650516]
[-23.94016266 8.82324696]
[-9.31648827 5.99527168]
[0.93131036 18.04903412]
[14.99493790 23.26577568]
[19.64028358 22.11903954]
[25.05489349 23.88523674]
[29.41582680 28.87557411]
[43.30776215 34.53368378]
[57.19969177 40.19179153]
[71.09162903 45.84990311]
[77.14530182 41.42237854]
[63.42288971 35.36470795]
[61.80768585 20.45192528]
[73.91487885 11.59665108]
[87.63740540 17.65406609]
[89.25266266 32.56732559]
[95.30633545 28.13980103]
[94.12355042 13.18650723]
[90.32396698 4.86878586]
[93.04202271 -2.01186109]
[92.09543610 -16.98196411]
[91.14885712 -31.95206642]
[90.20227051 -46.92216873]
[89.25568390 -61.89227295]
[88.30909729 -76.86237335]
[76.28663635 -87.12082672]
[75.12258911 -102.88218689]
[85.50757599 -114.79552460]
[101.28036499 -115.79286194]
[113.08323669 -105.28250122]
[113.91376495 -89.50005341]
[103.27920532 -77.80895996]
[104.22578430 -62.83885574]
[105.17237091 -47.86875534]
[106.11895752 -32.89865112]
[107.06554413 -17.92854881]
[108.01212311 -2.95844555]
[109.07684326 12.00371933]
[110.25963593 26.95701408]
[124.58989716 31.38911438]
[134.00822449 19.71455956]
[143.42654419 8.04000378]
[152.84486389 -3.63455248]
[162.26318359 -15.30910873]
[164.90617371 -30.90799141]
[178.91943359 -35.95551682]
[188.33775330 -47.63007355]
[197.75607300 -59.30463028]
[194.56668091 -74.61351013]
[202.00932312 -88.36636353]
[216.56980896 -94.06952667]
[231.37313843 -89.03012848]
[239.42962646 -75.62762451]
[236.93524170 -60.19026566]
[225.06774902 -50.00710297]
[209.43063354 -49.88631058]
[200.01231384 -38.21175385]
[190.59399414 -26.53719711]
[188.62466431 -11.77335644]
[173.93772888 -5.89078856]
[164.51940918 5.78376722]
[155.10108948 17.45832253]
[145.68276978 29.13287926]
[136.26445007 40.80743408]
[142.89436340 54.26270676]
[157.89015198 53.90753555]
[172.88594055 53.55236435]
[187.88174438 53.19719315]
[202.87753296 52.84201813]
[217.87333679 52.48684692]
[232.86912537 52.13167572]
[247.86491394 51.77650452]
[262.86071777 51.42132950]
[273.73275757 40.26622009]
[288.94567871 40.11964798]
[299.51336670 50.55322266]
[314.50915527 50.19804764]
[328.22393799 41.20708466]
[342.74392700 48.82954407]
[343.13223267 65.22409821]
[328.98937988 73.52542877]
[314.86434937 65.19384003]
[299.86856079 65.54901886]
[289.80667114 76.47119904]
[274.60385132 77.04501343]
[263.21588135 66.41712952]
[248.22009277 66.77230072]
[233.22430420 67.12747192]
[218.22850037 67.48264313]
[203.23271179 67.83781433]
[188.23690796 68.19298553]
[173.24111938 68.54815674]
[158.24533081 68.90332794]
[143.24952698 69.25849915]
[140.58645630 118.03504944]
[104.15901184 135.52168274]
[102.74031067 150.45443726]
[101.32161713 165.38719177]
[99.90291595 180.31996155]
[98.48422241 195.25271606]
[97.06552124 210.18547058]
[99.02219391 214.08660889]
[99.57400513 218.01206970]
[98.88682556 221.51550293]
[97.25490570 224.25083923]
[95.05683899 226.00552368]
[92.69863129 240.81898499]
[90.45742035 255.65060425]
[88.33335114 270.49945068]
[86.20928192 285.34829712]
[84.08521271 300.19714355]
[81.96115112 315.04598999]
[83.49767303 329.96710205]
[88.60324097 344.07147217]
[103.66806030 347.39633179]
[114.52761841 358.35412598]
[117.71666718 373.44830322]
[112.21759796 387.86230469]
[99.78513336 396.99670410]
[84.38643646 397.93676758]
[70.93517303 390.38250732]
[63.72359467 376.74444580]
[65.05287933 361.37445068]
[74.49887085 349.17703247]
[69.39330292 335.07266235]
[61.93905258 334.24554443]
[60.28480148 349.15405273]
[58.63054657 364.06256104]
[56.97629547 378.97103882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[16 20]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[33 176]
[34 175]
[35 170]
[36 169]
[37 168]
[38 167]
[39 166]
[40 165]
[45 79]
[46 78]
[47 77]
[48 76]
[49 73]
[50 72]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[86 108]
[87 107]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[109 133]
[110 132]
[111 131]
[112 130]
[113 129]
[115 127]
[116 126]
[117 125]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[140 157]
[141 156]
[142 155]
[145 152]
[146 151]
[182 194]
[183 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
