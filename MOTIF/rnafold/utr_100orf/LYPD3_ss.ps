%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCUGGGGUUGCCUGGGGCGAGGUUACUCAUCCUGGGCUCAGGUAAGAGGGCCCGAGCUCGGAGGCGGCACAUCCAGGGGGGACGCCAAGGGAGCAGGACGGAGCCAUGGACCCCGCCAGGAAAGCAGGUGCCCAGGCCAUGAUCUGGACUGCAGGCUGGCUGCUGCUGCUGCUGCUUCGCGGAGGAGCGCAGGCCCUGGAGUGCU\
) } def
/len { sequence length } bind def

/coor [
[-72.43003082 239.59408569]
[-91.53375244 244.41694641]
[-109.54010773 236.78030396]
[-121.84532166 245.35827637]
[-134.15054321 253.93624878]
[-146.45574951 262.51422119]
[-153.35200500 276.75332642]
[-168.21748352 277.68435669]
[-180.52268982 286.26232910]
[-192.82791138 294.84030151]
[-205.13313293 303.41827393]
[-217.43833923 311.99624634]
[-228.99316406 321.56106567]
[-239.71867371 332.04742432]
[-250.44416809 342.53378296]
[-261.16967773 353.02014160]
[-271.89517212 363.50650024]
[-282.62066650 373.99285889]
[-293.34616089 384.47921753]
[-304.07165527 394.96557617]
[-308.53018188 410.14556885]
[-323.03967285 413.51065063]
[-333.76516724 423.99700928]
[-344.49069214 434.48336792]
[-348.38995361 450.41220093]
[-364.20791626 454.73931885]
[-375.67239380 443.01339722]
[-370.98971558 427.29702759]
[-354.97702026 423.75784302]
[-344.25152588 413.27151489]
[-333.52603149 402.78515625]
[-329.83468628 388.35519409]
[-314.55801392 384.24005127]
[-303.83251953 373.75372314]
[-293.10702515 363.26736450]
[-282.38153076 352.78100586]
[-271.65603638 342.29464722]
[-260.93051147 331.80828857]
[-250.20501709 321.32192993]
[-239.47952271 310.83557129]
[-254.25312805 313.43188477]
[-268.56912231 308.95391846]
[-279.23001099 298.40188599]
[-283.85467529 284.13259888]
[-281.41012573 269.33312988]
[-272.44241333 257.30899048]
[-258.95446777 250.74580383]
[-243.95887756 251.10946655]
[-230.80494690 258.31875610]
[-222.43061829 270.76345825]
[-220.70634460 285.66403198]
[-226.01631165 299.69104004]
[-213.71110535 291.11306763]
[-201.40588379 282.53506470]
[-189.10067749 273.95709229]
[-176.79545593 265.37911987]
[-170.77935791 251.75357056]
[-155.03372192 250.20901489]
[-142.72851562 241.63104248]
[-130.42329407 233.05305481]
[-118.11808014 224.47508240]
[-120.19620514 214.34063721]
[-118.77829742 204.05433655]
[-114.00076294 194.79211426]
[-106.38552856 187.62132263]
[-96.78314209 183.37782288]
[-86.27779388 182.56852722]
[-76.06491852 185.31106567]
[-67.31515503 191.31739807]
[-54.51672745 183.49435425]
[-41.71829605 175.67129517]
[-28.91986847 167.84823608]
[-16.12143707 160.02519226]
[-12.05318737 153.85359192]
[-3.07131672 152.18240356]
[9.84325600 144.55259705]
[22.75782776 136.92280579]
[35.67240143 129.29299927]
[48.58697128 121.66320801]
[61.50154495 114.03340912]
[74.41611481 106.40361023]
[73.24147797 94.67706299]
[77.35298157 83.20919800]
[86.27313232 74.33849335]
[98.51288605 70.02493286]
[111.81465912 71.42445374]
[123.56806183 78.60417938]
[132.23828125 66.36378479]
[140.90849304 54.12338257]
[143.31570435 45.31019592]
[149.80216980 41.76548767]
[158.65538025 29.65679359]
[154.06443787 14.95205116]
[158.95524597 0.53215504]
[171.25373840 -8.14028072]
[186.12268066 -7.91066265]
[194.97589111 -20.01935768]
[203.82911682 -32.12805176]
[212.68234253 -44.23674393]
[210.45867920 -59.65404510]
[219.60960388 -71.80786133]
[234.32135010 -73.83276367]
[243.17456055 -85.94145966]
[252.02778625 -98.05015564]
[260.88101196 -110.15885162]
[259.67651367 -123.00167847]
[267.30096436 -132.90504456]
[279.23419189 -134.89196777]
[288.26843262 -146.86621094]
[297.30264282 -158.84046936]
[306.33688354 -170.81472778]
[315.37109375 -182.78897095]
[318.04214478 -191.52581787]
[324.63223267 -194.87396240]
[333.84539795 -206.71105957]
[335.48962402 -228.07614136]
[354.92175293 -235.02772522]
[363.59194946 -247.26812744]
[372.26217651 -259.50851440]
[380.93237305 -271.74893188]
[375.06750488 -286.01800537]
[377.87060547 -301.18859863]
[388.44717407 -312.41976929]
[403.42230225 -316.12774658]
[418.01748657 -311.12930298]
[427.57540894 -299.01940918]
[429.04623413 -283.66232300]
[421.96060181 -269.95840454]
[408.57949829 -262.28054810]
[393.17279053 -263.07870483]
[384.50256348 -250.83831787]
[375.83236694 -238.59791565]
[367.16213989 -226.35751343]
[370.06271362 -217.96301270]
[368.75442505 -209.03932190]
[363.40567017 -201.60729980]
[355.11392212 -197.40847778]
[345.68252563 -197.49787903]
[336.46932983 -185.66076660]
[327.34536743 -173.75474548]
[318.31112671 -161.78050232]
[309.27691650 -149.80624390]
[300.24267578 -137.83198547]
[291.20846558 -125.85773468]
[290.00201416 -108.35092926]
[272.98971558 -101.30562592]
[264.13647461 -89.19693756]
[255.28326416 -77.08824158]
[246.43003845 -64.97954559]
[248.96247864 -50.34662628]
[240.15655518 -37.94057083]
[224.79103088 -35.38352585]
[215.93780518 -23.27482986]
[207.08459473 -11.16613579]
[198.23136902 0.94255835]
[202.95982361 15.04148674]
[198.42591858 29.39097404]
[186.16859436 38.42486572]
[170.76408386 38.51001358]
[161.91085815 50.61870956]
[153.14889526 62.79359818]
[144.47868347 75.03399658]
[135.80845642 87.27439880]
[137.94317627 102.12171936]
[149.71070862 111.42361450]
[161.47824097 120.72550964]
[170.15264893 123.59284210]
[173.35136414 130.25672913]
[184.97773743 139.73445129]
[196.60412598 149.21217346]
[212.18933105 151.93466187]
[217.16534424 165.97348022]
[228.79171753 175.45120239]
[237.42205811 178.44859314]
[240.52023315 185.15980530]
[252.00283813 194.81121826]
[263.48544312 204.46263123]
[274.96807861 214.11402893]
[290.98342896 219.67683411]
[290.07150269 236.60624695]
[273.55123901 240.41648865]
[265.31665039 225.59664917]
[253.83404541 215.94523621]
[242.35144043 206.29382324]
[230.86882019 196.64242554]
[219.31401062 187.07759094]
[207.68762207 177.59986877]
[192.93400574 175.55528259]
[187.12640381 160.83854675]
[175.50001526 151.36082458]
[163.87364197 141.88311768]
[152.17634583 132.49304199]
[140.40881348 123.19113922]
[128.64129639 113.88924408]
[114.29820251 126.38707733]
[96.45375824 127.96860504]
[82.04591370 119.31818390]
[69.13134003 126.94797516]
[56.21677017 134.57777405]
[43.30220032 142.20758057]
[30.38762665 149.83737183]
[17.47305298 157.46717834]
[4.55848122 165.09696960]
[-8.29838276 172.82360840]
[-21.09681320 180.64666748]
[-33.89524460 188.46972656]
[-46.69367218 196.29278564]
[-59.49210358 204.11582947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 61]
[4 60]
[5 59]
[6 58]
[8 56]
[9 55]
[10 54]
[11 53]
[12 52]
[13 40]
[14 39]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[20 33]
[22 31]
[23 30]
[24 29]
[69 208]
[70 207]
[71 206]
[72 205]
[73 204]
[75 203]
[76 202]
[77 201]
[78 200]
[79 199]
[80 198]
[81 197]
[87 163]
[88 162]
[89 161]
[91 160]
[92 159]
[96 155]
[97 154]
[98 153]
[99 152]
[102 149]
[103 148]
[104 147]
[105 146]
[108 144]
[109 143]
[110 142]
[111 141]
[112 140]
[114 139]
[115 138]
[117 133]
[118 132]
[119 131]
[120 130]
[164 194]
[165 193]
[166 192]
[168 191]
[169 190]
[170 189]
[172 187]
[173 186]
[175 185]
[176 184]
[177 183]
[178 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
