%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGCGGCUGCGGUGGCGGCAGCCGAGGCGAGCGGGGCGGGGGCGCGGGCGCGGCGCUCGGAGUCCGUUCGGGGCCGGAGGCGGUCGGGGCCGGGCCCGGGAAGCGCGAGGAGCGCGCGUAGCGCCGCCGGAGCCCGCCGCCCGGGACAUGGCCAAGGCGGGCCGUGCAGGUGGUCCUCCCCCGGGCGGCGGUGCCCCCUGGCACCUUCGAAAUGUCCUCAGUGACUCUGUGGAGAGCUCAGAUGAUG\
) } def
/len { sequence length } bind def

/coor [
[39.57464600 209.48130798]
[33.57626724 223.22973633]
[39.10975647 237.79058838]
[32.83069229 251.64801025]
[18.91504860 256.83361816]
[12.91666889 270.58203125]
[6.91828871 284.33047485]
[0.91990817 298.07891846]
[2.49304676 313.82171631]
[-9.68820477 322.39297485]
[-15.68658543 336.14138794]
[-21.68496513 349.88983154]
[-27.68334579 363.63827515]
[-33.68172836 377.38668823]
[-31.30892181 393.61328125]
[-44.34116745 403.56781006]
[-59.37200546 397.00991821]
[-60.93900299 380.68579102]
[-47.43016052 371.38830566]
[-41.43178177 357.63989258]
[-35.43339920 343.89144897]
[-29.43501854 330.14300537]
[-23.43663979 316.39459229]
[-25.43882179 301.63516235]
[-12.82852554 292.08053589]
[-6.83014536 278.33209229]
[-0.83176494 264.58364868]
[5.16661549 250.83522034]
[-0.49711052 237.10722351]
[5.39024830 223.07891846]
[19.82783318 217.23135376]
[25.82621193 203.48292542]
[31.04427528 189.41978455]
[35.46560287 175.08619690]
[39.88693237 160.75260925]
[44.30825806 146.41900635]
[54.54195786 92.91755676]
[89.52229309 83.53913879]
[77.45333099 74.63183594]
[65.38436127 65.72453308]
[53.31539536 56.81722641]
[41.08198166 48.13715744]
[28.68840218 39.68735504]
[12.92758751 38.30630112]
[6.77039862 24.74391556]
[-5.62318325 16.29411507]
[-18.01676559 7.84431362]
[-30.41034698 -0.60548717]
[-42.80392838 -9.05528831]
[-55.58148575 -7.42725658]
[-65.72482300 -14.69863892]
[-68.12561035 -26.53762627]
[-80.41289520 -35.14127350]
[-92.70017242 -43.74491882]
[-104.98745728 -52.34856415]
[-117.27473450 -60.95221329]
[-126.07392883 -63.30130768]
[-129.66065979 -69.74049377]
[-141.83972168 -78.49664307]
[-154.01879883 -87.25279999]
[-166.19786072 -96.00895691]
[-178.37693787 -104.76511383]
[-193.04450989 -100.05678558]
[-207.50303650 -104.83217621]
[-216.27349854 -117.06095123]
[-216.16273499 -131.93124390]
[-228.34181213 -140.68740845]
[-243.00938416 -135.97908020]
[-257.46792603 -140.75447083]
[-266.23837280 -152.98324585]
[-266.12759399 -167.85354614]
[-278.30667114 -176.60969543]
[-290.48574829 -185.36585999]
[-306.20724487 -187.13940430]
[-312.02438354 -200.85108948]
[-324.20346069 -209.60723877]
[-336.38253784 -218.36338806]
[-348.56158447 -227.11955261]
[-360.74066162 -235.87570190]
[-371.32263184 -233.50782776]
[-381.26119995 -237.26312256]
[-387.37530518 -245.68246460]
[-387.85006714 -255.85733032]
[-399.80706787 -264.91439819]
[-411.76403809 -273.97146606]
[-426.96829224 -270.31561279]
[-440.94219971 -277.33438110]
[-447.08776855 -291.71374512]
[-442.50320435 -306.66421509]
[-429.35324097 -315.12658691]
[-413.84683228 -313.10525513]
[-403.30569458 -301.55456543]
[-402.70697021 -285.92843628]
[-390.75000000 -276.87139893]
[-378.79299927 -267.81433105]
[-359.46875000 -266.79086304]
[-351.98449707 -248.05477905]
[-339.80545044 -239.29861450]
[-327.62637329 -230.54246521]
[-315.44729614 -221.78631592]
[-303.26821899 -213.03015137]
[-288.41787720 -211.88290405]
[-281.72958374 -197.54492188]
[-269.55050659 -188.78877258]
[-257.37145996 -180.03260803]
[-243.31076050 -184.87361145]
[-228.92549133 -180.45454407]
[-219.79393005 -168.26982117]
[-219.58564758 -152.86647034]
[-207.40658569 -144.11032104]
[-193.34590149 -148.95130920]
[-178.96063232 -144.53225708]
[-169.82905579 -132.34751892]
[-169.62078857 -116.94418335]
[-157.44171143 -108.18802643]
[-145.26264954 -99.43186951]
[-133.08357239 -90.67572021]
[-120.90450287 -81.91956329]
[-108.67108917 -73.23949432]
[-96.38381195 -64.63584900]
[-84.09652710 -56.03219986]
[-71.80924988 -47.42855453]
[-59.52196884 -38.82490540]
[-41.97194290 -38.22682190]
[-34.35412598 -21.44886971]
[-21.96054649 -12.99906921]
[-9.56696415 -4.54926777]
[2.82661772 3.90053296]
[15.22019958 12.35033417]
[30.09454155 13.12700367]
[37.13820267 27.29377556]
[49.53178406 35.74357605]
[53.02168274 35.46397018]
[56.82101822 36.84441376]
[60.15547943 40.01245499]
[62.22269821 44.74826050]
[74.29166412 53.65556335]
[86.36063385 62.56286621]
[98.42959595 71.47016907]
[113.41911316 72.03103638]
[126.11997223 64.05055237]
[138.82083130 56.07007599]
[151.52169800 48.08959198]
[164.22256470 40.10911179]
[176.92343140 32.12863159]
[189.62428284 24.14814949]
[202.32514954 16.16766930]
[215.02601624 8.18718719]
[227.72688293 0.20670642]
[226.64971924 -21.16281319]
[248.58442688 -38.00182724]
[259.95401001 -47.78614044]
[271.32357788 -57.57044983]
[282.69314575 -67.35475922]
[294.06271362 -77.13907623]
[305.43231201 -86.92338562]
[316.80187988 -96.70769501]
[317.73284912 -112.48454285]
[329.60238647 -122.91955566]
[345.36853027 -121.82183075]
[355.67745972 -109.84262085]
[354.41311646 -94.08898926]
[342.32556152 -83.90727997]
[326.58618164 -85.33811951]
[315.21661377 -75.55381012]
[303.84704590 -65.76950073]
[292.47744751 -55.98518753]
[281.10787964 -46.20087433]
[269.73831177 -36.41656494]
[258.36874390 -26.63225174]
[265.70654297 -13.54880524]
[273.04367065 -0.46651453]
[287.32104492 -5.06618547]
[301.59841919 -9.66585636]
[312.19473267 -22.18183899]
[328.28170776 -18.99727440]
[333.31042480 -3.38817167]
[322.10775757 8.58816338]
[306.19808960 4.61150408]
[291.92071533 9.21117496]
[277.64334106 13.81084633]
[261.52471924 22.99313545]
[245.71405029 21.58241272]
[235.70735168 12.90756893]
[223.00650024 20.88805008]
[210.30563354 28.86853218]
[197.60476685 36.84901428]
[184.90390015 44.82949448]
[172.20304871 52.80997467]
[159.50218201 60.79045486]
[146.80131531 68.77093506]
[134.10044861 76.75141907]
[121.39958954 84.73190308]
[123.26474762 99.61548615]
[137.54211426 104.21515656]
[151.81947327 108.81482697]
[166.09683228 113.41449738]
[180.37419128 118.01417542]
[194.65155029 122.61384583]
[210.56123352 118.63718414]
[221.76388550 130.61352539]
[216.73518372 146.22262573]
[200.64820862 149.40718079]
[190.05187988 136.89120483]
[175.77452087 132.29153442]
[161.49716187 127.69186401]
[147.21980286 123.09219360]
[132.94242859 118.49252319]
[118.66507721 113.89284515]
[114.17389679 119.89945221]
[126.18710327 128.88180542]
[138.20031738 137.86416626]
[152.40119934 142.69479370]
[152.19512939 157.69337463]
[137.86689758 162.13203430]
[129.21795654 149.87738037]
[117.20475006 140.89501953]
[105.19153595 131.91265869]
[100.70035553 137.91926575]
[109.15016174 150.31285095]
[117.59996033 162.70643616]
[131.76672363 169.75009155]
[132.54339600 184.62443542]
[140.99319458 197.01802063]
[149.44300842 209.41160583]
[164.87561035 213.79498291]
[170.93745422 228.64872742]
[162.97839355 242.57830811]
[147.10395813 244.89813232]
[135.49163818 233.82864380]
[137.04942322 217.86140442]
[128.59962463 205.46781921]
[120.14981842 193.07423401]
[106.58743286 186.91705322]
[105.20637512 171.15623474]
[96.75657654 158.76264954]
[88.30677795 146.36906433]
[80.89054108 147.48689270]
[66.05808258 149.72251892]
[58.64184952 150.84033203]
[54.22052383 165.17393494]
[49.79919434 179.50752258]
[45.37786865 193.84111023]
[57.60763550 185.15591431]
[72.58715057 184.37226868]
[85.65640259 191.73397827]
[92.74963379 204.95086670]
[91.66020966 219.91123962]
[82.72702789 231.96107483]
[68.72914124 237.35173035]
[54.02118301 234.40621948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[5 28]
[6 27]
[7 26]
[8 25]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[33 243]
[34 242]
[35 241]
[36 240]
[38 139]
[39 138]
[40 137]
[41 136]
[42 132]
[43 131]
[45 129]
[46 128]
[47 127]
[48 126]
[49 125]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[58 118]
[59 117]
[60 116]
[61 115]
[62 114]
[66 110]
[67 109]
[71 105]
[72 104]
[73 103]
[75 101]
[76 100]
[77 99]
[78 98]
[79 97]
[83 95]
[84 94]
[85 93]
[140 193]
[141 192]
[142 191]
[143 190]
[144 189]
[145 188]
[146 187]
[147 186]
[148 185]
[149 184]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[172 181]
[173 180]
[174 179]
[194 209]
[195 208]
[196 207]
[197 206]
[198 205]
[199 204]
[219 237]
[220 236]
[221 235]
[223 233]
[224 232]
[225 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
