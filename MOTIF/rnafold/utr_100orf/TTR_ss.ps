%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGACUAAGUCAAUAAUCAGAAUCAGCAGGUUUGCAGUCAGAUUGGCAGGGAUAAGCAGCCUAGCUCAGGAGAAGUGAGUAUAAAAGCCCCAGGCUGGGAGCAGCCAUCACAGAAGUCCACUCAUUCUUGGCAGGAUGGCUUCUCAUCGUCUGCUCCUCCUCUGCCUUGCUGGACUGGUAUUUGUGUCUGAGGCUGGCCCUACGGGCACCGGUGAAUCCAAGUGUCCUCUGAUGG\
) } def
/len { sequence length } bind def

/coor [
[287.84881592 759.03851318]
[284.69125366 773.70239258]
[281.53369141 788.36627197]
[278.37612915 803.03015137]
[275.21856689 817.69409180]
[272.06100464 832.35797119]
[274.63766479 849.11499023]
[259.24880981 856.22973633]
[248.15205383 843.41186523]
[257.39712524 829.20037842]
[260.55468750 814.53649902]
[263.71224976 799.87261963]
[266.86981201 785.20874023]
[270.02737427 770.54479980]
[273.18493652 755.88092041]
[259.24246216 732.08563232]
[263.35733032 707.15545654]
[280.74777222 692.16503906]
[276.62594604 677.74249268]
[272.50415039 663.31988525]
[268.38232422 648.89733887]
[255.27743530 641.91180420]
[250.89187622 627.34399414]
[258.30780029 613.64575195]
[254.18597412 599.22314453]
[250.06416321 584.80059814]
[245.94235229 570.37799072]
[241.72503662 555.98309326]
[237.41239929 541.61639404]
[221.61563110 540.25726318]
[207.51734924 532.91912842]
[197.29251099 520.70068359]
[192.53134155 505.45605469]
[193.99195862 489.51342773]
[201.47998047 475.31954956]
[213.87364197 465.06414795]
[209.37095642 450.75588989]
[204.86827087 436.44766235]
[200.36560059 422.13940430]
[195.86291504 407.83117676]
[191.26548767 393.55307007]
[186.57354736 379.30578613]
[172.35714722 374.94320679]
[163.32882690 362.90353394]
[163.11862183 347.67825317]
[172.01667786 335.10324097]
[167.32472229 320.85595703]
[162.63278198 306.60864258]
[157.94082642 292.36135864]
[153.24888611 278.11404419]
[148.46261597 263.89816284]
[143.58221436 249.71429443]
[138.70182800 235.53044128]
[125.24514771 229.24925232]
[120.09368134 214.93432617]
[126.77320099 200.86231995]
[121.89281464 186.67845154]
[117.01242828 172.49459839]
[112.13203430 158.31074524]
[107.25164795 144.12687683]
[91.20033264 145.65211487]
[75.03081512 141.30574036]
[60.89530563 131.22200012]
[50.82448959 116.32229614]
[46.44156647 98.24143982]
[32.42720032 92.89377594]
[18.41283226 87.54611206]
[4.39846563 82.19844818]
[-9.61590099 76.85078430]
[-23.18879318 84.61677551]
[-38.56885529 81.79052734]
[-48.49409485 69.70649719]
[-48.27811432 54.07040787]
[-38.02289581 42.26513290]
[-22.57063866 39.86476517]
[-9.21742630 48.00268555]
[-4.26823711 62.83641815]
[9.74612999 68.18408203]
[23.76049805 73.53174591]
[37.77486420 78.87940979]
[51.78923035 84.22707367]
[56.12491989 78.10728455]
[43.88534927 69.43590546]
[37.62097168 55.80661392]
[52.55672836 57.19633484]
[64.79630280 65.86771393]
[69.13198853 59.74792480]
[59.43949890 48.29997253]
[49.74700928 36.85202408]
[40.05451584 25.40407181]
[25.20525742 17.22263527]
[28.95627594 0.68884617]
[45.88230133 -0.28373587]
[51.50246811 15.71157932]
[61.19495773 27.15953064]
[70.88745117 38.60748291]
[80.57994080 50.05543518]
[86.80612183 51.11818314]
[92.57302094 52.90710831]
[97.80027008 55.33536530]
[99.58554077 40.44198608]
[101.37081146 25.54860497]
[95.33097839 10.92564297]
[104.52806091 -0.79028451]
[106.31333923 -15.68366528]
[108.09860992 -30.57704735]
[109.88388062 -45.47042847]
[111.66915131 -60.36380768]
[113.45442963 -75.25718689]
[115.23970032 -90.15057373]
[101.89950562 -99.93373108]
[95.35562134 -115.02507782]
[97.30924225 -131.26306152]
[107.13238525 -144.22184753]
[122.06523132 -150.41758728]
[123.65293121 -165.33332825]
[125.24063110 -180.24905396]
[112.77993011 -189.22827148]
[106.49288940 -203.24143982]
[108.07069397 -218.51907349]
[117.08892822 -230.95156860]
[131.12171936 -237.19465637]
[146.39433289 -235.56896973]
[158.79850769 -226.51181030]
[164.99757385 -212.45951843]
[163.32402039 -197.19207764]
[154.22802734 -184.81634521]
[140.15637207 -178.66136169]
[138.56866455 -163.74562073]
[136.98097229 -148.82987976]
[148.51815796 -141.53947449]
[155.82699585 -129.93571472]
[157.43467712 -116.24996185]
[152.97131348 -103.14310455]
[143.25296021 -93.18817902]
[130.13308716 -88.36529541]
[128.34780884 -73.47191620]
[126.56253815 -58.57853699]
[124.77725983 -43.68515396]
[122.99198914 -28.79177475]
[121.20671844 -13.89839268]
[119.42144012 0.99498832]
[125.58897400 14.55267525]
[116.26419830 27.33387756]
[114.47891998 42.22725677]
[112.69364929 57.12063980]
[128.12319946 65.23142242]
[139.27955627 78.62513733]
[144.46755981 95.26667023]
[142.89891052 112.62740326]
[134.81196594 128.06945801]
[121.43550873 139.24649048]
[126.31589508 153.43035889]
[131.19628906 167.61421204]
[136.07667542 181.79806519]
[140.95706177 195.98191833]
[154.88111877 202.96466064]
[159.62846375 217.41862488]
[152.88568115 230.65005493]
[157.76608276 244.83390808]
[162.64646912 259.01776123]
[168.38768005 266.09893799]
[167.49618530 273.42208862]
[172.18814087 287.66940308]
[176.88008118 301.91668701]
[181.57203674 316.16400146]
[186.26397705 330.41131592]
[200.89291382 335.23834229]
[209.77072144 347.60919189]
[209.66307068 362.65753174]
[200.82084656 374.61383057]
[205.51278687 388.86114502]
[211.15963745 396.01779175]
[210.17115784 403.32849121]
[214.67384338 417.63671875]
[219.17652893 431.94497681]
[223.67919922 446.25320435]
[228.18188477 460.56146240]
[242.39091492 461.39355469]
[255.43626404 467.01129150]
[265.76080322 476.72192383]
[272.13977051 489.34558105]
[273.82598877 503.35845947]
[270.63735962 517.07684326]
[262.97631836 528.85949707]
[251.77906799 537.30377197]
[256.09170532 551.67047119]
[261.54684448 558.97430420]
[260.36492920 566.25622559]
[264.48672485 580.67877197]
[268.60855103 595.10131836]
[272.73037720 609.52392578]
[286.26477051 617.23480225]
[290.23944092 631.92004395]
[282.80490112 644.77551270]
[286.92672729 659.19805908]
[291.04852295 673.62066650]
[295.17034912 688.04321289]
[305.92324829 687.84716797]
[316.61215210 691.29937744]
[325.98754883 698.31683350]
[332.85543823 708.38714600]
[336.22460938 720.59899902]
[335.43865967 733.72265625]
[330.27664185 746.33355713]
[338.03341675 759.17224121]
[345.79022217 772.01092529]
[353.54702759 784.84960938]
[361.30380249 797.68829346]
[369.06060791 810.52703857]
[385.39331055 819.04913330]
[385.03707886 836.60211182]
[392.96334839 849.33685303]
[408.20001221 854.35919189]
[413.63796997 869.45251465]
[405.10568237 883.03851318]
[389.14837646 884.69519043]
[378.00717163 873.15167236]
[380.22860718 857.26312256]
[372.30230713 844.52838135]
[360.60571289 841.48779297]
[353.89511108 830.95849609]
[356.22189331 818.28381348]
[348.46511841 805.44512939]
[340.70831299 792.60644531]
[332.95153809 779.76770020]
[325.19473267 766.92901611]
[317.43792725 754.09033203]
[310.04064941 755.32739258]
[312.51473999 770.12194824]
[314.98880005 784.91650391]
[321.91354370 798.22241211]
[311.39871216 808.91998291]
[297.97546387 802.22546387]
[300.19424438 787.39056396]
[297.72018433 772.59600830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[6 10]
[18 198]
[19 197]
[20 196]
[21 195]
[24 192]
[25 191]
[26 190]
[27 189]
[28 187]
[29 186]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 172]
[42 171]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 161]
[52 160]
[53 159]
[56 156]
[57 155]
[58 154]
[59 153]
[60 152]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[87 97]
[88 96]
[89 95]
[90 94]
[100 146]
[101 145]
[102 144]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[110 136]
[115 130]
[116 129]
[117 128]
[205 228]
[206 227]
[207 226]
[208 225]
[209 224]
[210 223]
[212 220]
[213 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
