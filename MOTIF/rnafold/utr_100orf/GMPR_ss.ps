%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCCCACGCCAGCUCCCGGCCGCGGCACAGCAGCCCCGGCGCUCCCCGCGCCGCCCCGCGCAGGCGCCCCCGCCCCGCCGUCGCCGCCGCCGCAGCCAGGAGCCGCUGCACCAUGCCCCGCAUAGAUGCGGACCUCAAGCUCGACUUCAAGGAUGUCCUGCUCCGACCUAAGCGGAGCAGCCUCAAGAGCCGAGCCGAGGUGGAUCUUGAAC\
) } def
/len { sequence length } bind def

/coor [
[162.16844177 145.82864380]
[160.20149231 130.95816040]
[145.21589661 130.30082703]
[141.95445251 144.94197083]
[138.69299316 159.58311462]
[144.12197876 175.05754089]
[133.23143005 187.31837463]
[117.22460938 183.75270081]
[112.56797028 168.02859497]
[124.05185699 156.32165527]
[127.31330872 141.68051147]
[130.57476807 127.03938293]
[89.13326263 133.24603271]
[70.98613739 102.68528748]
[56.19741440 100.17655182]
[41.40869522 97.66781616]
[26.61997223 95.15908051]
[11.83125305 92.65034485]
[-3.06859541 97.97059631]
[-14.32254410 88.21366119]
[-29.11126518 85.70492554]
[-43.89998627 83.19618988]
[-58.79983139 88.51644135]
[-70.05377960 78.75949860]
[-84.84249878 76.25076294]
[-99.63122559 73.74202728]
[-114.41994476 71.23329926]
[-129.20866394 68.72456360]
[-137.69595337 75.52100372]
[-148.30397034 76.50590515]
[-157.50988770 71.59456635]
[-162.38922119 62.62073517]
[-177.09832764 59.68094635]
[-192.14726257 64.56355286]
[-203.11131287 54.48194122]
[-217.82041931 51.54215240]
[-230.87280273 60.04348755]
[-245.74804688 56.85258484]
[-253.77233887 44.35673141]
[-268.48144531 41.41693878]
[-283.19055176 38.47714996]
[-297.89962769 35.53736115]
[-312.60873413 32.59757233]
[-321.78097534 46.76128387]
[-335.66021729 56.29372406]
[-352.10046387 59.75527573]
[-368.57281494 56.64235306]
[-382.55459595 47.46045303]
[-391.91552734 33.64231873]
[-395.24246216 17.32443237]
[-410.03118896 14.81569672]
[-424.81991577 12.30696201]
[-439.60861206 9.79822731]
[-454.39733887 7.28949308]
[-469.20401001 4.88887119]
[-484.02780151 2.59649038]
[-497.76968384 10.87540245]
[-512.75958252 5.15852880]
[-517.49853516 -10.16863441]
[-508.35119629 -23.34840012]
[-492.33465576 -24.27037811]
[-481.73541260 -12.22730732]
[-466.91162109 -9.93492699]
[-459.82315063 -12.01857281]
[-451.88861084 -7.49922752]
[-437.09988403 -4.99049282]
[-422.31115723 -2.48175812]
[-407.52246094 0.02697646]
[-392.73373413 2.53571105]
[-386.41677856 -9.11787605]
[-376.80038452 -18.27425194]
[-364.81033325 -24.03254890]
[-351.60687256 -25.81997108]
[-338.47253418 -23.44873428]
[-326.68750000 -17.13569832]
[-317.40475464 -7.48260498]
[-311.53744507 4.58125067]
[-309.66894531 17.88847160]
[-294.95983887 20.82826233]
[-280.25076294 23.76805115]
[-265.54165649 26.70783997]
[-250.83255005 29.64762878]
[-238.62165833 21.19601440]
[-223.66265869 23.96784210]
[-214.88063049 36.83304977]
[-200.17152405 39.77283859]
[-186.17466736 34.67995834]
[-174.15853882 44.97184372]
[-159.44943237 47.91163635]
[-141.63340759 40.39208984]
[-126.69992828 53.93584061]
[-111.91120911 56.44457626]
[-97.12248993 58.95331192]
[-82.33377075 61.46204376]
[-67.54504395 63.97077942]
[-53.70298767 58.47108459]
[-41.39125061 68.40747070]
[-26.60252953 70.91619873]
[-11.81380939 73.42493439]
[2.02825022 67.92523956]
[14.33998775 77.86162567]
[29.12870789 80.37036133]
[43.91742706 82.87909698]
[58.70615005 85.38782501]
[73.49486542 87.89656067]
[93.06732178 65.71701813]
[127.62322998 69.95168304]
[129.80725098 55.11153412]
[118.62168121 44.35687256]
[115.92694092 29.07557678]
[122.75922394 15.14361382]
[136.49136353 7.91810608]
[151.84307861 10.17741013]
[162.91131592 21.05277824]
[165.44012451 36.36240768]
[158.45710754 50.21943665]
[144.64739990 57.29555130]
[142.46337891 72.13570404]
[149.50689697 74.71228790]
[170.63746643 82.44206238]
[178.54490662 69.69559479]
[186.45234680 56.94913101]
[194.35978699 44.20266724]
[202.26722717 31.45619965]
[202.24523926 15.05706787]
[216.56997681 7.07371855]
[230.50538635 15.71873856]
[229.71591187 32.09887314]
[215.01370239 39.36364365]
[207.10626221 52.11010742]
[199.19880676 64.85657501]
[191.29136658 77.60303497]
[183.38392639 90.34950256]
[189.25050354 104.15469360]
[203.91506958 107.30908966]
[218.57965088 110.46349335]
[233.24423218 113.61788940]
[247.90879822 116.77228546]
[259.14486694 110.44280243]
[271.29260254 113.36994934]
[277.96917725 123.45479584]
[292.58609009 126.82312775]
[307.20300293 130.19146729]
[321.81991577 133.55979919]
[336.43682861 136.92813110]
[351.62203979 132.48733521]
[362.28680420 142.88500977]
[376.90371704 146.25334167]
[391.52066040 149.62167358]
[406.18145752 140.07545471]
[422.88122559 144.00997925]
[431.39599609 158.51457214]
[446.06057739 161.66897583]
[460.72515869 164.82336426]
[454.88681030 151.00622559]
[461.91690063 137.75564575]
[476.63134766 134.84280396]
[488.17953491 144.41566467]
[488.04562378 159.41506958]
[476.32678223 168.78062439]
[490.72198486 172.99705505]
[505.11718750 177.21347046]
[519.51239014 181.42990112]
[533.90759277 185.64633179]
[548.30279541 189.86276245]
[562.69793701 194.07919312]
[577.09313965 198.29562378]
[590.00561523 189.47500610]
[605.56170654 191.06941223]
[616.41632080 202.32601929]
[617.44427490 217.92977905]
[608.16015625 230.51307678]
[592.94769287 234.13447571]
[578.98968506 227.08406067]
[572.87670898 212.69081116]
[558.48156738 208.47438049]
[544.08636475 204.25796509]
[529.69116211 200.04153442]
[515.29595947 195.82510376]
[500.90075684 191.60867310]
[486.50555420 187.39224243]
[472.11035156 183.17581177]
[457.57077026 179.48794556]
[442.90618896 176.33354187]
[428.24160767 173.17915344]
[418.50433350 181.61537170]
[405.49185181 182.92337036]
[393.93133545 176.40283203]
[388.15231323 164.23860168]
[373.53540039 160.87026978]
[358.91848755 157.50193787]
[344.77877808 162.18365479]
[333.06851196 151.54504395]
[318.45159912 148.17671204]
[303.83465576 144.80838013]
[289.21774292 141.44004822]
[274.60083008 138.07171631]
[258.12026978 144.10519409]
[244.75440979 131.43685913]
[230.08982849 128.28247070]
[215.42524719 125.12806702]
[200.76068115 121.97367096]
[186.09609985 118.81926727]
[175.07197571 128.99121094]
[177.03892517 143.86169434]
[191.26272583 149.65641785]
[200.67086792 161.79653931]
[202.73258972 177.01641846]
[196.89331055 191.22200012]
[184.72375488 200.59204102]
[169.49748230 202.60604858]
[155.31028748 196.72225952]
[145.97843933 184.52340698]
[144.01216125 169.29089355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 12]
[4 11]
[5 10]
[14 105]
[15 104]
[16 103]
[17 102]
[18 101]
[20 99]
[21 98]
[22 97]
[24 95]
[25 94]
[26 93]
[27 92]
[28 91]
[32 89]
[33 88]
[35 86]
[36 85]
[39 82]
[40 81]
[41 80]
[42 79]
[43 78]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 63]
[56 62]
[107 118]
[108 117]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[134 203]
[135 202]
[136 201]
[137 200]
[138 199]
[141 197]
[142 196]
[143 195]
[144 194]
[145 193]
[147 191]
[148 190]
[149 189]
[152 185]
[153 184]
[154 183]
[160 182]
[161 181]
[162 180]
[163 179]
[164 178]
[165 177]
[166 176]
[167 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
