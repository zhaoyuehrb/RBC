%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCAGCAUGCCCGCCAGCGCCCCGCCGCGCCGCCCGCGGCCGCCGCCGCCGUCGCUGUCGCUGCUGCUGGUGCUGCUGGGCCUGGGCGGCCGCCGCCUGCGUGCGG\
) } def
/len { sequence length } bind def

/coor [
[119.82590485 423.78701782]
[119.39363098 408.79324341]
[118.96136475 393.79946899]
[118.52909851 378.80569458]
[118.09682465 363.81192017]
[114.70677948 357.11511230]
[117.87443542 348.38122559]
[117.87443542 333.38122559]
[117.87443542 318.38122559]
[110.13713837 305.65393066]
[117.87443542 291.85375977]
[117.87443542 276.85375977]
[116.79454803 261.89270020]
[114.64038086 247.04817200]
[112.48620605 232.20365906]
[110.33203125 217.35914612]
[108.17786407 202.51463318]
[105.80999756 187.70271301]
[103.22893524 172.92643738]
[98.91229248 166.78590393]
[100.79282379 157.68762207]
[98.63864899 142.84310913]
[96.48448181 127.99859619]
[94.33030701 113.15408325]
[85.82453156 102.05708313]
[90.82518005 89.00008392]
[88.67101288 74.15557098]
[79.03205109 61.60961914]
[84.86136627 47.90311050]
[82.70719147 33.05859756]
[80.55301666 18.21408463]
[78.39884949 3.36957288]
[76.24467468 -11.47493935]
[74.09050751 -26.31945229]
[70.65205383 -30.64941216]
[69.45038605 -35.39541626]
[70.24904633 -39.59452820]
[72.44934082 -42.53318787]
[71.58516693 -57.50827408]
[70.72098541 -72.48336029]
[69.85680389 -87.45844269]
[68.99262238 -102.43353271]
[60.47311783 -115.76502228]
[67.46432495 -128.91691589]
[66.60014343 -143.89199829]
[58.08064270 -157.22349548]
[65.07184601 -170.37538147]
[64.20766449 -185.35046387]
[55.68816376 -198.68196106]
[62.67936707 -211.83384705]
[61.81518936 -226.80894470]
[52.36369705 -240.21047974]
[59.48870468 -254.98094177]
[75.86061859 -255.92572021]
[84.63740540 -242.07292175]
[76.79027557 -227.67311096]
[77.65445709 -212.69802856]
[86.11214447 -200.43766785]
[79.18275452 -186.21464539]
[80.04693604 -171.23956299]
[88.50462341 -158.97918701]
[81.57523346 -144.75617981]
[82.43940735 -129.78109741]
[90.89710236 -117.52072144]
[83.96771240 -103.29770660]
[84.83188629 -88.32262421]
[85.69606781 -73.34754181]
[86.56024933 -58.37245178]
[87.42443085 -43.39736557]
[88.93501282 -28.47362328]
[91.08918762 -13.62911129]
[93.24336243 1.21540082]
[95.39752960 16.05991364]
[97.55170441 30.90442467]
[99.70587921 45.74893570]
[109.19075775 57.23311615]
[103.51551819 72.00140381]
[105.66969299 86.84591675]
[114.17546844 97.94291687]
[109.17481995 110.99991608]
[111.32898712 125.84442902]
[113.48316193 140.68893433]
[115.63733673 155.53344727]
[118.00520325 170.34538269]
[120.58626556 185.12164307]
[125.20952606 193.18022156]
[123.02237701 200.36047363]
[125.17654419 215.20498657]
[127.33071899 230.04949951]
[129.48489380 244.89401245]
[131.63906860 259.73852539]
[143.14898682 250.11970520]
[157.90173340 252.83197021]
[165.23785400 265.91561890]
[159.85667419 279.91714478]
[145.64634705 284.71990967]
[132.87443542 276.85375977]
[132.87443542 291.85375977]
[140.61174011 305.65393066]
[132.87443542 318.38122559]
[132.87443542 333.38122559]
[132.87443542 348.38122559]
[133.09059143 363.37963867]
[133.52285767 378.37341309]
[133.95513916 393.36718750]
[134.38740540 408.36096191]
[134.81967163 423.35473633]
[137.56457520 442.54107666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[3 105]
[4 104]
[5 103]
[7 102]
[8 101]
[9 100]
[11 98]
[12 97]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 85]
[19 84]
[21 83]
[22 82]
[23 81]
[24 80]
[26 78]
[27 77]
[29 75]
[30 74]
[31 73]
[32 72]
[33 71]
[34 70]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[44 63]
[45 62]
[47 60]
[48 59]
[50 57]
[51 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
