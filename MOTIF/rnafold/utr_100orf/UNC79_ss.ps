%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGUAUGCACUCUUUUCCUCGCAACAUCGCUGGCGGAGCGAGGGAGCUCACACGACACAGAUUUUGGGGCAAAGCCUUUCCAACUGGACAGCACCAUGUCCACCAAAGCGGAGCAGUUUGCUUCCAAGAUCCGGUACUUGCAGGAAUAUCAUAACCGGGUUCUCCACAACAUUUAUCCUGUACCAUCAGGAACAG\
) } def
/len { sequence length } bind def

/coor [
[304.78256226 474.14346313]
[297.94107056 460.79452515]
[291.09960938 447.44561768]
[284.25811768 434.09667969]
[276.89523315 421.02807617]
[269.02246094 408.26016235]
[261.14968872 395.49227905]
[253.17636108 382.78692627]
[245.10299683 370.14489746]
[237.02964783 357.50286865]
[226.80131531 359.17147827]
[216.56373596 357.33041382]
[207.49111938 352.16494751]
[200.63262939 344.24307251]
[196.79115295 334.45321655]
[196.42932129 323.90460205]
[199.61392212 313.80157471]
[206.00544739 305.30606079]
[198.74597168 292.17977905]
[191.48648071 279.05346680]
[184.22700500 265.92715454]
[176.96751404 252.80085754]
[170.97340393 248.46475220]
[169.69889832 239.40953064]
[162.64753723 226.17025757]
[155.59617615 212.93099976]
[148.54481506 199.69172668]
[137.15875244 198.80566406]
[127.51700592 192.46391296]
[122.08219147 182.14759827]
[122.30899811 170.36950684]
[128.25679016 160.06230164]
[121.62687683 146.60702515]
[114.99697113 133.15174866]
[108.36707306 119.69647980]
[102.66165924 133.56904602]
[87.69561768 134.57781982]
[80.18015289 121.59637451]
[88.50816345 109.11943054]
[73.64301300 111.12622833]
[58.77785873 113.13301849]
[43.91270447 115.13981628]
[34.53350067 127.86011505]
[18.89451790 130.13998413]
[6.27409172 120.62681580]
[4.15969467 104.96460724]
[13.80576134 92.44546509]
[29.48945236 90.49677277]
[41.90591049 100.27465820]
[56.77106476 98.26786804]
[71.63621521 96.26107025]
[86.50137329 94.25428009]
[72.49386597 88.88867188]
[57.50971603 88.19924927]
[45.15356827 79.69479370]
[39.15867996 65.94483948]
[41.33633423 51.10375595]
[51.02857590 39.65559006]
[65.30701447 35.05927277]
[79.85759735 38.70351791]
[90.28404999 49.48726273]
[93.43618011 64.15171051]
[101.03953552 77.08186340]
[100.56600952 62.08934402]
[100.09248352 47.09682083]
[99.61894989 32.10429382]
[99.14542389 17.11177063]
[98.67189789 2.11924744]
[98.19836426 -12.87327671]
[97.72483826 -27.86580086]
[97.25131226 -42.85832214]
[96.65945435 -57.84664154]
[95.94931030 -72.82982635]
[95.23916626 -87.81300354]
[94.52902222 -102.79618073]
[93.81887817 -117.77936554]
[81.76124573 -124.46945953]
[74.64248657 -136.15246582]
[74.23194122 -149.71896362]
[80.52994537 -161.61964417]
[91.79570770 -168.79386902]
[91.32217407 -183.78639221]
[90.84864807 -198.77891541]
[90.37512207 -213.77143860]
[73.27056122 -224.10144043]
[65.91645813 -242.52575684]
[71.13029480 -261.51678467]
[86.63246918 -273.42782593]
[85.21376801 -288.36056519]
[83.79507446 -303.29333496]
[82.37637329 -318.22607422]
[80.95767975 -333.15884399]
[79.53897858 -348.09161377]
[67.19866180 -357.96542358]
[65.53763580 -373.68215942]
[75.54135895 -385.91741943]
[91.27480316 -387.41217041]
[103.40359497 -377.27966309]
[104.73193359 -361.53128052]
[94.47174072 -349.51031494]
[95.89044189 -334.57754517]
[97.30913544 -319.64477539]
[98.72782898 -304.71203613]
[100.14653015 -289.77926636]
[101.56522369 -274.84649658]
[111.42877197 -271.66635132]
[119.69978333 -265.35858154]
[125.41780090 -256.62365723]
[127.90821075 -246.44560242]
[126.86170959 -235.98123169]
[122.37250519 -226.42868042]
[114.93043518 -218.89019775]
[105.36764526 -214.24496460]
[105.84117126 -199.25244141]
[106.31469727 -184.25991821]
[106.78823090 -169.26739502]
[120.65269470 -160.48635864]
[126.61426544 -145.01797485]
[122.14028931 -128.88322449]
[108.80205536 -118.48950958]
[109.51219940 -103.50633240]
[110.22234344 -88.52314758]
[110.93249512 -73.53997040]
[111.64263916 -58.55678940]
[115.10293579 -52.01786804]
[112.24383545 -43.33185196]
[112.71736145 -28.33932877]
[113.19089508 -13.34680462]
[113.66442108 1.64571929]
[114.13794708 16.63824272]
[114.61147308 31.63076782]
[115.08500671 46.62329102]
[115.55853271 61.61581421]
[116.03205872 76.60833740]
[121.82234192 113.06657410]
[128.45223999 126.52184296]
[135.08215332 139.97711182]
[141.71205139 153.43238831]
[159.86370850 158.83081055]
[168.17204285 175.49246216]
[161.78407288 192.64036560]
[168.83544922 205.87962341]
[175.88681030 219.11889648]
[182.93817139 232.35816956]
[190.09382629 245.54136658]
[197.35330200 258.66766357]
[204.61279297 271.79397583]
[211.87226868 284.92028809]
[219.13175964 298.04660034]
[239.06509399 299.43817139]
[254.01304626 312.48031616]
[258.03491211 331.75900269]
[249.67167664 349.42950439]
[257.74502563 362.07153320]
[265.81838989 374.71356201]
[273.08206177 380.26876831]
[273.91757202 387.61947632]
[281.79037476 400.38739014]
[289.66314697 413.15530396]
[295.66348267 399.40771484]
[310.11013794 395.37112427]
[322.36761475 404.01721191]
[323.41201782 418.98080444]
[312.47451782 429.24581909]
[297.60705566 427.25518799]
[304.44854736 440.60412598]
[311.29000854 453.95306396]
[318.13150024 467.30197144]
[329.17272949 465.48693848]
[340.29324341 466.57775879]
[350.74218750 470.49276733]
[359.81622314 476.95986938]
[366.90670776 485.53540039]
[371.54058838 495.63473511]
[373.41198730 506.57189941]
[372.40231323 517.60638428]
[368.58776855 527.99310303]
[362.23373413 537.03283691]
[353.77618408 544.11920166]
[359.54379272 557.96606445]
[365.31137085 571.81292725]
[371.07894897 585.65972900]
[376.84655762 599.50659180]
[391.55334473 605.29327393]
[397.78408813 619.81750488]
[391.84219360 634.46228027]
[377.25289917 640.53912354]
[362.67175293 634.44274902]
[356.74951172 619.79003906]
[362.99969482 605.27416992]
[357.23211670 591.42730713]
[351.46453857 577.58050537]
[345.69696045 563.73364258]
[339.92935181 549.88684082]
[320.91131592 549.82409668]
[303.78353882 541.44555664]
[291.99993896 526.39288330]
[287.95742798 507.65856934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[5 159]
[6 158]
[7 157]
[8 155]
[9 154]
[10 153]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[24 144]
[25 143]
[26 142]
[27 141]
[32 138]
[33 137]
[34 136]
[35 135]
[39 52]
[40 51]
[41 50]
[42 49]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[71 126]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
[81 116]
[82 115]
[83 114]
[84 113]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[179 194]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
