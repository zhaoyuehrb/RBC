%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCAGCUGCGCGUCGCAGUCCCGACGCGAGAAGGGCUGGAGUCGGCGUCCAGCCUAGAGCCCCCGGUGGGAGCCAGGCCGGGACGCGUGCACCAUGCCCUACCUGCUCAUCAGCACCCAGAUCCGCAUGGAGGUGGGCCCCACUAUGGUGGGCGAUGAACAGUCGGAUCCAGAGCUGAUGCAGCAUCUGGGGG\
) } def
/len { sequence length } bind def

/coor [
[97.97514343 211.05488586]
[97.73348999 196.05682373]
[97.49184418 181.05877686]
[97.25019073 166.06071472]
[97.00853729 151.06266785]
[96.76689148 136.06462097]
[82.42822266 131.65979004]
[73.80808258 143.93550110]
[71.43257141 152.76979065]
[64.94888306 156.33802795]
[56.13210297 168.47328186]
[47.31532288 180.60853577]
[38.49854279 192.74378967]
[29.68176460 204.87904358]
[20.86498642 217.01429749]
[12.04820824 229.14956665]
[14.76777935 244.71809387]
[5.61395168 257.60153198]
[-9.98247242 260.15637207]
[-22.76841164 250.86683655]
[-25.15819359 235.24426270]
[-15.73400402 222.55725098]
[-0.08704709 220.33277893]
[8.72973156 208.19752502]
[17.54651070 196.06227112]
[26.36328888 183.92701721]
[35.18006897 171.79176331]
[43.99684525 159.65650940]
[52.81362534 147.52125549]
[61.53236389 135.31536865]
[70.15250397 123.03964996]
[66.17790985 105.37854004]
[70.99405670 89.67517853]
[58.51362991 81.35418701]
[46.03319931 73.03319550]
[33.55277252 64.71221161]
[21.07234192 56.39121628]
[8.52528954 48.17102814]
[-4.08757114 40.05217743]
[-16.70043182 31.93332672]
[-32.49227524 30.96985817]
[-39.00622940 17.57517052]
[-51.61909103 9.45631886]
[-66.87721252 12.59120560]
[-79.55278778 4.17786121]
[-82.44739532 -10.38774395]
[-95.06025696 -18.50659370]
[-107.67311859 -26.62544632]
[-120.28598022 -34.74429703]
[-132.89883423 -42.86314774]
[-145.51170349 -50.98199844]
[-163.91403198 -51.43870163]
[-171.34046936 -67.33259583]
[-184.08248901 -75.24720001]
[-196.82450867 -83.16179657]
[-209.56652832 -91.07640076]
[-220.01387024 -87.98969269]
[-230.22303772 -91.10544586]
[-236.88613892 -99.16121674]
[-237.98431396 -109.33670044]
[-250.46475220 -117.65769196]
[-263.01181030 -125.87787628]
[-275.62466431 -133.99673462]
[-288.23751831 -142.11558533]
[-304.63473511 -142.36698914]
[-312.37817383 -156.82284546]
[-303.50201416 -170.61218262]
[-287.13732910 -169.54972839]
[-280.11868286 -154.72843933]
[-267.50579834 -146.60958862]
[-254.89294434 -138.49073792]
[-247.55715942 -137.51257324]
[-242.14375305 -130.13812256]
[-229.66333008 -121.81713104]
[-210.33575439 -122.00089264]
[-201.65193176 -103.81842041]
[-188.90991211 -95.90381622]
[-176.16789246 -87.98921204]
[-163.42587280 -80.07461548]
[-151.57063293 -82.52051544]
[-140.88711548 -76.01975250]
[-137.39285278 -63.59486008]
[-124.77998352 -55.47600937]
[-112.16712952 -47.35715866]
[-99.55426788 -39.23830795]
[-86.94140625 -31.11945534]
[-74.32854462 -23.00060463]
[-59.87174988 -26.39718056]
[-46.96485901 -18.34318542]
[-43.50024033 -3.15654206]
[-30.88737869 4.96230888]
[-15.99769211 5.34506416]
[-8.58158112 19.32046700]
[4.03128004 27.43931770]
[16.64414024 35.55817032]
[23.97992897 36.53632736]
[29.39333344 43.91078949]
[41.87376022 52.23177719]
[54.35419083 60.55276871]
[66.83461761 68.87376404]
[79.31504822 77.19474792]
[93.05964661 70.00370026]
[108.56596375 70.42685699]
[121.89791870 78.35681152]
[129.67134094 91.78063202]
[144.66696167 91.41817474]
[159.66258240 91.05571747]
[174.65820312 90.69326019]
[189.65042114 90.21002197]
[204.63824463 89.60603333]
[219.62608337 89.00204468]
[234.61392212 88.39805603]
[249.60176086 87.79406738]
[264.58959961 87.19007874]
[279.57742310 86.58609009]
[292.04718018 56.03820801]
[333.62606812 48.29405975]
[345.97082520 39.77309036]
[358.31558228 31.25211906]
[370.66033936 22.73114777]
[373.63391113 7.44077063]
[386.27462769 -1.02485001]
[400.83334351 1.90422451]
[413.17810059 -6.61674690]
[425.52285767 -15.13771820]
[432.06039429 -30.17742729]
[448.38235474 -31.76653290]
[457.69812012 -18.27029800]
[450.42443848 -3.57249403]
[434.04382324 -2.79295993]
[421.69906616 5.72801113]
[409.35430908 14.24898243]
[406.93045044 28.90028000]
[394.53250122 37.71761322]
[379.18130493 35.07590485]
[366.83654785 43.59687805]
[354.49179077 52.11784744]
[342.14703369 60.63882065]
[344.34945679 67.80815125]
[350.95669556 89.31616211]
[365.95620728 89.43698883]
[380.95571899 89.55781555]
[395.95523071 89.67864990]
[410.95474243 89.79947662]
[424.94787598 81.24821472]
[439.21871948 89.32756042]
[439.08660889 105.72618103]
[424.68746948 113.57456970]
[410.83392334 104.79898834]
[395.83441162 104.67816162]
[380.83489990 104.55733490]
[365.83538818 104.43650055]
[350.83587646 104.31567383]
[347.48123169 118.93574524]
[361.03298950 125.36612701]
[374.58474731 131.79652405]
[388.13650513 138.22691345]
[403.67041016 134.21728516]
[416.40335083 143.97697449]
[416.56771851 160.01919556]
[404.03738403 170.03770447]
[388.42459106 166.34718323]
[381.70611572 151.77865601]
[368.15435791 145.34828186]
[354.60260010 138.91789246]
[341.05084229 132.48750305]
[330.65545654 136.43743896]
[320.13571167 137.86415100]
[310.06805420 136.90939331]
[300.96044922 133.83967590]
[293.22674561 129.02314758]
[287.16806030 122.90168762]
[282.96139526 115.95979309]
[280.65673828 108.69246674]
[280.18142700 101.57392120]
[265.19357300 102.17790985]
[250.20574951 102.78189850]
[235.21791077 103.38588715]
[220.23007202 103.98987579]
[205.24223328 104.59387207]
[190.25440979 105.19786072]
[183.68881226 108.61305237]
[175.02066040 105.68888092]
[160.02503967 106.05133820]
[145.02941895 106.41379547]
[130.03379822 106.77625275]
[125.34366608 123.03391266]
[111.76494598 135.82296753]
[112.00659180 150.82101440]
[112.24824524 165.81907654]
[112.48989105 180.81712341]
[112.73154449 195.81518555]
[112.97319794 210.81323242]
[115.47399902 230.03291321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[7 31]
[8 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[33 101]
[34 100]
[35 99]
[36 98]
[37 97]
[38 95]
[39 94]
[40 93]
[42 91]
[43 90]
[46 87]
[47 86]
[48 85]
[49 84]
[50 83]
[51 82]
[53 79]
[54 78]
[55 77]
[56 76]
[60 74]
[61 73]
[62 71]
[63 70]
[64 69]
[105 186]
[106 185]
[107 184]
[108 183]
[109 181]
[110 180]
[111 179]
[112 178]
[113 177]
[114 176]
[115 175]
[117 138]
[118 137]
[119 136]
[120 135]
[123 132]
[124 131]
[125 130]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
[154 166]
[155 165]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
