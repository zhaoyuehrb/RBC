%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGUUCGGCCGGGAGCGCAGGGGCGGCAGUGCGCGCCUAGCAGUGUCCCAGCCGGGUUCGUGUCGCCAUGGGGCAGAUCGAGUGGGCCAUGUGGGCCAACGAACAGGCGCUGGCGUCCGGCCUGAUCCUCAUCACCGGGGGCAUCGUGGCCACAGCUGGGCGCUUCA\
) } def
/len { sequence length } bind def

/coor [
[56.23720551 90.80411530]
[41.95452118 95.38722992]
[27.67183685 99.97033691]
[13.38915062 104.55345154]
[2.61297655 116.13726044]
[-11.86972523 112.65866089]
[-26.15241051 117.24177551]
[-38.18083572 131.16192627]
[-55.17021942 126.82871246]
[-69.36681366 131.67192078]
[-83.56340790 136.51512146]
[-97.76000977 141.35832214]
[-111.95660400 146.20153809]
[-122.51941681 157.98022461]
[-137.06323242 154.76672363]
[-151.25982666 159.60993958]
[-165.45642090 164.45314026]
[-179.65303040 169.29634094]
[-193.80479431 174.26899719]
[-207.91056824 179.37068176]
[-221.96916199 184.60098267]
[-235.97940063 189.95944214]
[-249.94012451 195.44563293]
[-263.85015869 201.05908203]
[-277.76019287 206.67253113]
[-287.66204834 219.01205444]
[-302.36004639 216.59989929]
[-316.27008057 222.21336365]
[-330.18011475 227.82681274]
[-336.12982178 242.46842957]
[-350.72235107 248.53749084]
[-365.30023193 242.43333435]
[-371.21466064 227.77745056]
[-364.95672607 213.26490784]
[-350.23913574 207.50575256]
[-335.79357910 213.91677856]
[-321.88354492 208.30331421]
[-307.97351074 202.68986511]
[-299.06658936 190.75186157]
[-283.37365723 192.76249695]
[-269.46362305 187.14904785]
[-255.55357361 181.53558350]
[-250.50888062 176.09638977]
[-241.33786011 175.94920349]
[-227.32762146 170.59072876]
[-222.18443298 165.24458313]
[-213.01225281 165.26490784]
[-198.90647888 160.16322327]
[-193.66650391 154.91189575]
[-184.49623108 155.09974670]
[-170.29963684 150.25654602]
[-156.10304260 145.41333008]
[-141.90643311 140.57012939]
[-132.35906982 129.13784790]
[-116.79981232 132.00494385]
[-102.60321808 127.16173553]
[-88.40661621 122.31852722]
[-74.21002197 117.47531891]
[-60.01342392 112.63211060]
[-54.38366318 101.89936829]
[-42.56629944 97.76121521]
[-30.73552132 102.95909119]
[-16.45283508 98.37597656]
[-6.69825459 87.11997986]
[8.80603981 90.27076721]
[23.08872604 85.68765259]
[37.37141037 81.10454559]
[51.65409470 76.52143097]
[57.52066803 62.71623993]
[50.90682220 49.25306702]
[44.29297638 35.78989029]
[30.37758636 27.11268044]
[31.20492554 10.73441505]
[45.92389679 3.50365281]
[59.39288330 12.85878086]
[57.75614929 29.17604637]
[64.36999512 42.63922119]
[70.98384094 56.10239410]
[78.45851898 55.48664093]
[84.86640167 41.92422867]
[93.40788269 54.25513458]
[100.88256073 53.63938522]
[105.20404816 39.27537537]
[109.52553558 24.91136551]
[104.11245728 13.17749310]
[108.03408051 1.28652310]
[118.66221619 -4.53832340]
[123.24532318 -18.82100868]
[127.82843781 -33.10369492]
[124.67765808 -48.60799026]
[135.93365479 -58.36256790]
[140.51675415 -72.64525604]
[136.52165222 -88.55032349]
[148.48498535 -99.76685333]
[164.09991455 -94.75624847]
[167.30313110 -78.67298126]
[154.79943848 -68.06214142]
[150.21633911 -53.77945709]
[153.69493103 -39.29675674]
[142.11111450 -28.52058220]
[137.52801514 -14.23789787]
[132.94490051 0.04478747]
[137.58769226 16.95219421]
[123.88954163 29.23285294]
[119.56805420 43.59686279]
[115.24657440 57.96086884]
[128.14955139 72.16874695]
[132.51881409 88.62294769]
[129.15162659 103.11971283]
[143.16188049 108.47817993]
[157.17211914 113.83663940]
[171.18235779 119.19510651]
[185.19259644 124.55356598]
[199.20283508 129.91203308]
[213.21308899 135.27049255]
[231.30513000 131.93408203]
[241.84973145 145.94218445]
[255.95550537 151.04388428]
[266.77883911 142.47523499]
[280.31683350 140.39949036]
[293.00778198 145.25430298]
[301.56631470 155.66812134]
[303.83386230 168.84555054]
[317.84408569 174.20402527]
[331.85433960 179.56248474]
[345.86456299 184.92094421]
[359.92315674 190.15122986]
[374.02893066 195.25292969]
[388.13470459 200.35461426]
[402.24047852 205.45629883]
[416.39227295 210.42893982]
[430.58886719 215.27215576]
[444.78546143 220.11535645]
[458.98205566 224.95857239]
[472.26861572 216.71228027]
[487.73989868 218.98686218]
[498.09082031 230.70831299]
[498.43399048 246.34213257]
[488.60739136 258.50650024]
[473.25082397 261.45779419]
[459.61520386 253.80245972]
[454.13885498 239.15516663]
[439.94226074 234.31195068]
[425.74563599 229.46875000]
[411.54904175 224.62554932]
[404.17596436 225.44488525]
[397.13879395 219.56207275]
[383.03302002 214.46037292]
[368.92724609 209.35868835]
[354.82147217 204.25700378]
[347.43466187 204.94155884]
[340.50610352 198.93118286]
[326.49588013 193.57272339]
[312.48562622 188.21426392]
[298.47540283 182.85578918]
[285.03121948 192.24609375]
[268.47290039 191.78132629]
[255.31558228 181.44668579]
[250.85382080 165.14964294]
[236.74804688 160.04795837]
[225.64205933 164.90010071]
[213.83360291 160.73660278]
[207.85461426 149.28073120]
[193.84437561 143.92227173]
[179.83413696 138.56381226]
[165.82389832 133.20535278]
[151.81365967 127.84688568]
[137.80340576 122.48841858]
[123.79316711 117.12995911]
[108.70706177 132.00494385]
[85.05581665 133.86778259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[4 65]
[6 63]
[7 62]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[15 53]
[16 52]
[17 51]
[18 50]
[19 48]
[20 47]
[21 45]
[22 44]
[23 42]
[24 41]
[25 40]
[27 38]
[28 37]
[29 36]
[69 78]
[70 77]
[71 76]
[82 106]
[83 105]
[84 104]
[87 102]
[88 101]
[89 100]
[91 98]
[92 97]
[109 169]
[110 168]
[111 167]
[112 166]
[113 165]
[114 164]
[115 163]
[117 160]
[118 159]
[123 155]
[124 154]
[125 153]
[126 152]
[127 150]
[128 149]
[129 148]
[130 147]
[131 145]
[132 144]
[133 143]
[134 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
