%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCUCCAGCCCCGGGACGCGGCCCGCCACCGCCGCUGCCGCCAGCCCAGACGCGCCGCCCGCAUGCGCCGCGACCAUGGAGCGCCCCGAAGCGGGAGGAAUUAAUUCCAAUGAGUGUGAAAAUGUAUCAAGAAAAAAGAAAAUGUCAGAGGAAUUUGAAGCCAAUACUAUGGAUU\
) } def
/len { sequence length } bind def

/coor [
[346.23150635 217.09317017]
[340.71218872 209.11587524]
[336.95297241 200.15829468]
[335.12106323 190.60401917]
[335.30096436 180.86347961]
[320.92553711 176.58010864]
[306.55010986 172.29675293]
[292.17468262 168.01338196]
[277.79925537 163.73002625]
[263.39248657 167.51078796]
[252.37637329 156.15490723]
[238.00094604 151.87155151]
[225.06288147 159.16139221]
[210.42314148 155.02223206]
[202.86460876 141.40216064]
[188.48918152 137.11880493]
[174.11375427 132.83543396]
[159.73832703 128.55207825]
[145.33155823 132.33283997]
[134.31544495 120.97696686]
[119.94002533 116.69360352]
[105.56459808 112.41024017]
[90.67765808 114.24844360]
[77.77591705 121.89991760]
[64.87418365 129.55139160]
[63.56701279 145.01332092]
[53.39575195 156.73188782]
[38.27146149 160.20111084]
[24.00973320 154.08695984]
[16.09449768 140.74047852]
[17.56932068 125.29364777]
[27.86710548 113.68609619]
[43.02814102 110.38115692]
[57.22270203 116.64965820]
[70.12444305 108.99817657]
[83.02618408 101.34670258]
[78.49118805 87.04866028]
[63.53794861 88.23210907]
[48.58470535 89.41555786]
[33.63146591 90.59900665]
[20.43460083 100.33424377]
[5.51551056 93.52595520]
[4.22167540 77.17792511]
[17.88408089 68.10760498]
[32.44801712 75.64576721]
[47.40126038 74.46231842]
[62.35450363 73.27886963]
[77.30774689 72.09542084]
[82.09296417 57.87917709]
[70.89894104 47.89449692]
[59.70491409 37.90982056]
[40.87005997 39.72753525]
[26.90662003 27.43438148]
[26.34289360 9.15794659]
[14.80535698 -0.42773411]
[3.26782155 -10.01341438]
[-8.26971436 -19.59909439]
[-23.82886505 -22.46673775]
[-28.67380333 -36.55133438]
[-40.21133804 -46.13701630]
[-51.74887466 -55.72269440]
[-67.46108246 -54.01913452]
[-79.72335052 -63.98970413]
[-81.26069641 -79.71904755]
[-71.16104126 -91.87521362]
[-55.41632843 -93.24617767]
[-43.36761856 -83.01856232]
[-42.16319656 -67.26023102]
[-30.62565994 -57.67454910]
[-19.08812332 -48.08887100]
[-4.35421371 -45.90685654]
[1.31596589 -31.13663101]
[12.85350227 -21.55095100]
[24.39103699 -11.96527004]
[35.92857361 -2.37958980]
[46.82532501 -5.87270498]
[58.16988754 -3.63575482]
[67.10873413 3.88693118]
[71.33643341 14.90690994]
[69.68959045 26.71579361]
[80.88362122 36.70047379]
[92.07764435 46.68515015]
[118.39790344 73.85283661]
[109.84796143 98.03481293]
[124.22338867 102.31817627]
[138.59881592 106.60153961]
[154.03381348 103.12715149]
[164.02169800 114.17665100]
[178.39710999 118.46001434]
[192.77253723 122.74337769]
[207.14796448 127.02674103]
[220.92854309 119.76496887]
[235.44624329 124.31369019]
[242.28431702 137.49612427]
[256.65972900 141.77947998]
[272.09472656 138.30509949]
[282.08261108 149.35459900]
[296.45803833 153.63795471]
[310.83346558 157.92132568]
[325.20889282 162.20468140]
[339.58432007 166.48805237]
[354.25000000 149.07939148]
[375.32922363 140.64427185]
[397.83963013 143.11715698]
[416.48840332 155.86125183]
[426.91680908 175.83122253]
[441.87005615 174.64776611]
[456.82330322 173.46432495]
[471.77655029 172.28086853]
[486.72976685 171.09742737]
[501.68301392 169.91397095]
[511.92190552 158.17501831]
[527.10345459 157.18785095]
[538.23168945 167.02139282]
[553.18493652 165.83795166]
[568.13818359 164.65451050]
[569.80706787 149.70086670]
[574.27600098 135.33337402]
[581.38354492 122.07141113]
[590.87268066 110.39438629]
[602.40039062 100.72441101]
[615.54992676 93.41105652]
[629.84606934 88.71869659]
[644.77185059 86.81694794]
[659.78784180 87.77456665]
[674.35113525 91.55693054]
[687.93536377 98.02731323]
[700.04937744 106.95180511]
[710.25531006 118.00780487]
[718.18426514 130.79563904]
[723.54956055 144.85302734]
[726.15722656 159.67182922]
[725.91302490 174.71632385]
[722.82574463 189.44267273]
[717.00708008 203.31852722]
[708.66735840 215.84230042]
[698.10791016 226.56124878]
[685.71063232 235.08789062]
[671.92358398 241.11398315]
[657.24517822 244.42170715]
[642.20605469 244.89149475]
[627.34985352 242.50633240]
[613.21356201 237.35246277]
[600.30828857 229.61619568]
[589.10046387 219.57719421]
[579.99530029 207.59835815]
[573.32196045 194.11270142]
[569.32159424 179.60774231]
[554.36834717 180.79119873]
[539.41510010 181.97463989]
[529.97229004 193.43624878]
[514.82440186 194.84944153]
[502.86645508 184.86721802]
[487.91323853 186.05067444]
[472.95999146 187.23411560]
[458.00674438 188.41755676]
[443.05349731 189.60101318]
[428.10025024 190.78445435]
[426.83486938 198.33337402]
[424.34503174 205.57133484]
[420.69854736 212.30114746]
[415.99475098 218.33950806]
[410.36178589 223.52189636]
[403.95312500 227.70713806]
[408.86291504 241.88084412]
[413.77270508 256.05453491]
[428.09799194 262.73004150]
[433.42861938 277.60818481]
[426.60208130 291.86209106]
[411.66836548 297.03512573]
[397.48745728 290.05825806]
[392.47256470 275.07070923]
[399.59899902 260.96432495]
[394.68920898 246.79063416]
[389.77941895 232.61692810]
[380.17471313 233.32890320]
[370.61611938 232.04115295]
[361.51608276 228.80346680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 101]
[6 100]
[7 99]
[8 98]
[9 97]
[11 95]
[12 94]
[15 91]
[16 90]
[17 89]
[18 88]
[20 86]
[21 85]
[22 84]
[23 36]
[24 35]
[25 34]
[37 48]
[38 47]
[39 46]
[40 45]
[49 82]
[50 81]
[51 80]
[54 75]
[55 74]
[56 73]
[57 72]
[59 70]
[60 69]
[61 68]
[106 158]
[107 157]
[108 156]
[109 155]
[110 154]
[111 153]
[114 150]
[115 149]
[116 148]
[164 175]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
