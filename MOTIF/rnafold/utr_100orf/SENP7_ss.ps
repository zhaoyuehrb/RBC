%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUUUUUUUUUUUUUUUUUUUUUUUUCCUUUCCCCUCCCCCUCCCUCUCCAAGCCGGAGGGGUCCUGAGGUGACAGCGCCUGCAACUGAAAUUUCAGCAGCGGGAGAAGAUGGACAAGAGAAAGCUCGGGCGACGGCCAUCUUCAUCCGAAAUCAUCACAGAAGGAAAAAGGAAAAAGUCAUCUUCUGAUUUAUCGGAGAUAAGAAAGA\
) } def
/len { sequence length } bind def

/coor [
[64.57277679 436.28515625]
[53.06709671 426.66128540]
[44.14335632 414.60446167]
[38.30071259 400.78912354]
[35.86598206 385.98803711]
[36.97535324 371.02911377]
[41.56676865 356.74911499]
[49.38340759 343.94674683]
[59.98803711 333.33816528]
[72.78747559 325.51678467]
[87.06578827 320.92004395]
[102.02429199 319.80511475]
[116.82628632 322.23434448]
[130.64379883 328.07186890]
[142.70393372 336.99111938]
[152.33143616 348.49218750]
[148.80813599 333.91186523]
[145.28485107 319.33151245]
[141.76156616 304.75115967]
[138.23826599 290.17083740]
[134.71498108 275.59048462]
[131.19168091 261.01013184]
[127.66839600 246.42979431]
[124.14510345 231.84945679]
[120.62181854 217.26910400]
[117.09852600 202.68876648]
[113.57523346 188.10842896]
[110.05194092 173.52807617]
[106.52865601 158.94773865]
[103.00536346 144.36738586]
[99.48207092 129.78704834]
[95.95877838 115.20670319]
[97.19976044 130.15527344]
[89.03062439 142.73562622]
[74.87001801 147.68307495]
[60.64392853 142.92720032]
[52.30574417 130.45825195]
[53.34485626 115.49428558]
[63.32641983 104.29747772]
[78.07455444 101.55370331]
[63.08114243 101.99819946]
[48.08773041 102.44269562]
[33.09431839 102.88719940]
[18.10090637 103.33169556]
[3.10749316 103.77619934]
[-11.88591957 104.22069550]
[-22.69131279 115.44037628]
[-37.90309906 115.67758179]
[-48.53275681 105.30714417]
[-63.52616882 105.75164032]
[-79.17917633 112.26469421]
[-89.77087402 99.02640533]
[-79.98201752 85.18391418]
[-63.97066879 90.75823212]
[-48.97725677 90.31372833]
[-38.98061752 79.33180237]
[-23.78149605 78.66742706]
[-12.33041954 89.22728729]
[2.66299319 88.78278351]
[17.65640640 88.33828735]
[32.64981842 87.89378357]
[47.64323044 87.44928741]
[62.63664246 87.00478363]
[77.63005829 86.56028748]
[84.96884155 86.62872314]
[91.35633087 88.81093597]
[96.29186249 92.73125458]
[100.24567413 78.26171875]
[104.19947815 63.79218292]
[100.37335205 48.44059372]
[111.19177246 38.20286942]
[115.14558411 23.73333359]
[119.09938812 9.26379967]
[123.05319977 -5.20573378]
[127.00700378 -19.67526817]
[117.47465515 -31.77653122]
[116.90240479 -46.99250793]
[125.30027008 -59.48009491]
[139.27377319 -64.56727600]
[143.22756958 -79.03680420]
[142.44993591 -94.01663971]
[137.01911926 -107.99899292]
[131.58830261 -121.98134613]
[126.15748596 -135.96369934]
[120.72667694 -149.94606018]
[106.54044342 -156.37945557]
[101.23200989 -170.63691711]
[107.45269775 -184.12167358]
[102.02188110 -198.10401917]
[96.59106445 -212.08638000]
[91.16024780 -226.06874084]
[78.04314423 -235.91117859]
[80.27675629 -252.15750122]
[95.56333923 -258.09487915]
[108.17736053 -247.61544800]
[105.14260101 -231.49954224]
[110.57341766 -217.51719666]
[116.00423431 -203.53483582]
[121.43505096 -189.55249023]
[135.12686157 -183.80184937]
[140.83366394 -169.69911194]
[134.70903015 -155.37687683]
[140.13984680 -141.39451599]
[145.57066345 -127.41216278]
[151.00148010 -113.42980957]
[156.43229675 -99.44744873]
[166.48144531 -105.65531921]
[177.16752625 -105.10309601]
[185.91221619 -117.29039764]
[194.65690613 -129.47770691]
[203.40161133 -141.66500854]
[212.14630127 -153.85231018]
[220.89099121 -166.03961182]
[229.63568115 -178.22691345]
[238.38037109 -190.41421509]
[229.26751709 -208.11871338]
[230.41000366 -227.91891479]
[241.41075134 -244.32655334]
[259.15130615 -252.83454895]
[278.67538452 -251.15498352]
[286.49389648 -263.95617676]
[294.31240845 -276.75738525]
[294.17623901 -293.15597534]
[308.44506836 -301.23883057]
[322.44033813 -292.69104004]
[321.76489258 -276.30581665]
[307.11361694 -268.93887329]
[299.29510498 -256.13766479]
[291.47656250 -243.33645630]
[298.07464600 -235.26982117]
[302.18218994 -225.66920471]
[303.46554565 -215.28475952]
[301.81222534 -204.93148804]
[297.34069824 -195.42514038]
[290.39193726 -187.51806641]
[281.50341797 -181.83958435]
[271.36770630 -178.84597778]
[260.77832031 -178.78376770]
[250.56767273 -181.66952515]
[241.82298279 -169.48222351]
[233.07829285 -157.29492188]
[224.33360291 -145.10762024]
[215.58891296 -132.92031860]
[206.84420776 -120.73300934]
[198.09951782 -108.54570770]
[189.35482788 -96.35840607]
[191.86421204 -83.74369049]
[184.77644348 -72.17734528]
[171.04470825 -68.29926300]
[157.69711304 -75.08300018]
[153.74330139 -60.61346436]
[163.18811035 -49.12722397]
[164.06871033 -34.10429382]
[155.83816528 -21.29368210]
[141.47653198 -15.72146034]
[137.52273560 -1.25192618]
[133.56892395 13.21760750]
[129.61511230 27.68714142]
[125.66130829 42.15667343]
[129.77023315 56.47330856]
[118.66901398 67.74599457]
[114.71520996 82.21552277]
[110.76139832 96.68505859]
[110.53912354 111.68341064]
[114.06241608 126.26375580]
[117.58570862 140.84410095]
[121.10899353 155.42443848]
[124.63228607 170.00479126]
[128.15557861 184.58512878]
[131.67886353 199.16548157]
[135.20216370 213.74581909]
[138.72544861 228.32615662]
[142.24873352 242.90650940]
[145.77203369 257.48684692]
[149.29531860 272.06719971]
[152.81861877 286.64752197]
[156.34190369 301.22787476]
[159.86518860 315.80822754]
[163.38848877 330.38858032]
[166.91177368 344.96890259]
[172.26547241 349.55358887]
[174.55322266 355.52185059]
[173.77952576 361.20776367]
[181.78688049 373.89172363]
[189.79423523 386.57565308]
[197.80158997 399.25958252]
[205.02830505 404.84509277]
[205.83200073 412.19134521]
[213.65051270 424.99255371]
[221.46903992 437.79376221]
[229.28755188 450.59497070]
[243.93884277 457.96188354]
[244.61425781 474.34713745]
[230.61901855 482.89492798]
[216.35018921 474.81204224]
[216.48634338 458.41348267]
[208.66783142 445.61227417]
[200.84931946 432.81106567]
[193.03079224 420.00985718]
[185.11764526 407.26693726]
[177.11029053 394.58300781]
[169.10295105 381.89907837]
[161.09559631 369.21511841]
[162.64163208 384.13522339]
[160.64048767 399.00115967]
[155.20407104 412.98132324]
[146.63648987 425.29379272]
[135.41696167 435.24978638]
[122.17307281 442.29248047]
[107.64562225 446.02789307]
[92.64722443 446.24710083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[27 169]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[49 55]
[50 54]
[67 163]
[68 162]
[69 161]
[71 159]
[72 158]
[73 157]
[74 156]
[75 155]
[79 151]
[80 150]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[88 99]
[89 98]
[90 97]
[91 96]
[108 146]
[109 145]
[110 144]
[111 143]
[112 142]
[113 141]
[114 140]
[115 139]
[120 129]
[121 128]
[122 127]
[183 203]
[184 202]
[185 201]
[186 200]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
