%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGCUCGUUGAUUCCUCUGCAAGGUGGUGCAGCAUCCUCUGUCCCUUCAUUCAUUUCAGAUCUACUCAGGUCUCCCUGUAAACAGAUCUCUCGGAUCAAUAAGCAUGAAUGACGAAGACUACAGCACCAUCUAUGACACAAUCCAAAAUGAGAGGACGUAUGAGGUUCCAGACCAGCCAGAAGAAAAUGAAAGUCCCCAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[216.69960022 346.71340942]
[220.45582581 339.73681641]
[225.65109253 333.73672485]
[218.05273438 320.80361938]
[204.93449402 313.74948120]
[204.61506653 297.93148804]
[197.01670837 284.99838257]
[189.41835022 272.06530762]
[181.81999207 259.13220215]
[174.22163391 246.19911194]
[160.86927795 246.14257812]
[149.19522095 239.44128418]
[142.30268860 227.75323486]
[142.08456421 214.07774353]
[148.70480347 201.98591614]
[141.30360413 188.93899536]
[133.90238953 175.89207458]
[126.50118256 162.84515381]
[119.09996796 149.79823303]
[111.69876099 136.75131226]
[105.66223145 132.48315430]
[104.28594971 123.44975281]
[97.08359528 110.29201508]
[88.34065247 98.10346222]
[78.18583679 87.06354523]
[68.03102112 76.02362823]
[57.87620544 64.98371124]
[47.72138977 53.94379807]
[37.56657410 42.90388107]
[27.41175842 31.86396790]
[17.25694275 20.82405281]
[7.10212851 9.78413677]
[-5.23702478 14.52081966]
[-18.41958809 14.78079891]
[-30.87540817 10.55482388]
[-41.12827301 2.36666799]
[-47.97085953 -8.79168987]
[-50.60688782 -21.58020592]
[-48.74373627 -34.47169113]
[-42.62474823 -45.93418121]
[-52.43983459 -57.27719879]
[-62.25492477 -68.62021637]
[-70.23934174 -73.06381989]
[-72.13130188 -80.21066284]
[-81.77311707 -91.70132446]
[-92.64933014 -92.02191925]
[-101.37301636 -98.15063477]
[-105.20123291 -107.86527252]
[-103.09395599 -117.86781311]
[-112.38259888 -129.64579773]
[-121.67124176 -141.42379761]
[-130.95988464 -153.20178223]
[-140.24853516 -164.97978210]
[-149.53717041 -176.75776672]
[-158.82582092 -188.53576660]
[-168.11445618 -200.31375122]
[-178.18521118 -211.43040466]
[-188.99110413 -221.83389282]
[-199.79701233 -232.23738098]
[-210.83692932 -242.39219666]
[-222.10513306 -252.29307556]
[-233.37333679 -262.19396973]
[-244.64155579 -272.09484863]
[-255.90975952 -281.99572754]
[-267.17797852 -291.89660645]
[-284.73678589 -287.38531494]
[-301.34396362 -294.25482178]
[-310.42477417 -309.58126831]
[-308.50704956 -327.13424683]
[-320.07055664 -336.68856812]
[-331.63403320 -346.24291992]
[-343.19754028 -355.79727173]
[-359.44979858 -357.98727417]
[-365.42819214 -373.25787354]
[-354.98266602 -385.89996338]
[-338.85867310 -382.90847778]
[-333.64318848 -367.36077881]
[-322.07971191 -357.80642700]
[-310.51620483 -348.25207520]
[-298.95269775 -338.69775391]
[-287.77124023 -343.43441772]
[-275.56478882 -342.96359253]
[-264.65319824 -337.31332397]
[-257.13638306 -327.50183105]
[-254.49023438 -315.35461426]
[-257.27709961 -303.16482544]
[-246.00888062 -293.26394653]
[-234.74067688 -283.36303711]
[-223.47245789 -273.46215820]
[-212.20425415 -263.56127930]
[-200.93603516 -253.66041565]
[-197.40980530 -253.52284241]
[-193.77534485 -251.66851807]
[-190.83966064 -248.06535339]
[-189.39352417 -243.04328918]
[-178.58761597 -232.63980103]
[-167.78172302 -222.23631287]
[-169.76091003 -237.10516357]
[-163.48564148 -250.72943115]
[-150.89942932 -258.88952637]
[-135.90037537 -259.05816650]
[-123.13387299 -251.18310547]
[-116.55387115 -237.70336914]
[-118.19827271 -222.79377747]
[-127.55777740 -211.07202148]
[-141.73364258 -206.16847229]
[-156.33647156 -209.60240173]
[-147.04782104 -197.82440186]
[-137.75918579 -186.04641724]
[-128.47053528 -174.26841736]
[-119.18189240 -162.49043274]
[-109.89324951 -150.71243286]
[-100.60460663 -138.93444824]
[-91.31596375 -127.15645599]
[-72.87995911 -121.33145905]
[-70.28245544 -101.34313965]
[-60.64064026 -89.85247040]
[-50.91190720 -78.43530273]
[-41.09681702 -67.09228516]
[-31.28173065 -55.74926758]
[-15.11132431 -60.63687134]
[1.62377214 -57.95728683]
[15.55036163 -48.20163345]
[23.83995438 -33.29222107]
[24.78317833 -16.20393372]
[18.14204407 -0.37067816]
[28.29685974 10.66923714]
[38.45167542 21.70915222]
[48.60649109 32.74906921]
[58.76130295 43.78898239]
[68.91612244 54.82889938]
[79.07093811 65.86881256]
[89.22574615 76.90872955]
[99.38056183 87.94864655]
[95.87931061 73.36299133]
[97.50770569 58.45164490]
[104.07455444 44.96548080]
[114.80876160 34.48804474]
[128.44993591 28.24958611]
[143.39633179 26.98262596]
[157.89295959 30.83592987]
[170.23760986 39.35704422]
[178.98080444 51.54542160]
[183.09591675 65.96990967]
[182.09974670 80.93679810]
[176.10925293 94.68866730]
[165.82785034 105.61079407]
[152.46278381 112.42070770]
[137.58335876 114.31877899]
[122.93670654 111.08213806]
[110.24133301 103.08966064]
[117.44368744 116.24739838]
[124.74568176 129.35011292]
[132.14689636 142.39701843]
[139.54809570 155.44393921]
[146.94931030 168.49085999]
[154.35052490 181.53778076]
[161.75172424 194.58470154]
[178.58235168 196.25070190]
[190.98126221 207.50764465]
[194.19621277 223.77348328]
[187.15472412 238.60075378]
[194.75308228 251.53384399]
[202.35144043 264.46694946]
[209.94981384 277.40002441]
[217.54817200 290.33312988]
[231.20989990 298.31234741]
[230.98583984 313.20526123]
[238.58419800 326.13836670]
[261.51080322 326.33059692]
[279.60525513 340.20724487]
[285.67004395 362.05957031]
[277.40661621 383.04504395]
[286.69525146 394.82302856]
[295.98388672 406.60104370]
[309.68005371 405.03408813]
[322.26181030 410.39746094]
[330.48406982 421.19155884]
[332.28372192 434.53143311]
[327.29666138 446.91760254]
[336.40548706 458.83520508]
[351.91412354 458.32382202]
[364.74255371 467.05374146]
[369.95797729 481.66809082]
[365.55493164 496.54736328]
[353.22650146 505.97018433]
[337.71322632 506.31329346]
[324.98025513 497.44473267]
[319.92370605 482.77468872]
[324.48788452 467.94403076]
[315.37905884 456.02642822]
[298.99078369 456.95104980]
[285.14129639 447.83483887]
[279.39648438 432.10430908]
[284.20590210 415.88967896]
[274.91726685 404.11169434]
[265.62860107 392.33367920]
[258.32867432 395.01815796]
[250.60600281 396.04864502]
[242.83122253 395.36990356]
[235.37869263 393.00878906]
[228.60858154 389.07336426]
[222.84933472 383.74789429]
[218.38183594 377.28421021]
[215.42567444 369.98992920]
[214.12835693 362.21359253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 169]
[4 168]
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[15 158]
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[22 152]
[23 151]
[24 134]
[25 133]
[26 132]
[27 131]
[28 130]
[29 129]
[30 128]
[31 127]
[32 126]
[40 120]
[41 119]
[42 118]
[44 117]
[45 116]
[49 114]
[50 113]
[51 112]
[52 111]
[53 110]
[54 109]
[55 108]
[56 107]
[57 97]
[58 96]
[59 95]
[60 91]
[61 90]
[62 89]
[63 88]
[64 87]
[65 86]
[69 80]
[70 79]
[71 78]
[72 77]
[173 197]
[174 196]
[175 195]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
