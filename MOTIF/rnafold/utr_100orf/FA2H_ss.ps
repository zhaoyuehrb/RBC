%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGGAUGUUAGAGGCGCUCAGGGUGGCAGCAGAGCAGACGCCGGGCUGCGCGCUGGGAGCUGCGGUCUCCGGCCAUGGCCCCCGCUCCGCCCCCCGCCGCCUCCUUCUCGCCCUCCGAGGUCCAGCGGCGCCUGGCGGCCGGCGCGUGCUGGGUCCGCCGCGGGGCCCGCCUCU\
) } def
/len { sequence length } bind def

/coor [
[359.37542725 384.33154297]
[358.06631470 369.38879395]
[364.69595337 355.93338013]
[377.34216309 347.86654663]
[392.33596802 347.52658081]
[381.22448730 337.45010376]
[370.11300659 327.37365723]
[359.00152588 317.29718018]
[344.37597656 314.47897339]
[339.35092163 299.47698975]
[328.23947144 289.40051270]
[313.61389160 286.58230591]
[308.58886719 271.58032227]
[297.47738647 261.50384521]
[286.36590576 251.42739868]
[275.25445557 241.35092163]
[268.16519165 239.17999268]
[264.03720093 230.99566650]
[253.10632324 220.72357178]
[236.34902954 221.97189331]
[223.61293030 210.49981689]
[223.08874512 193.02920532]
[211.97726440 182.95274353]
[200.86579895 172.87626648]
[189.75431824 162.79980469]
[175.12875366 159.98159790]
[170.10371399 144.97961426]
[158.99224854 134.90315247]
[147.88076782 124.82668304]
[133.25521851 122.00846863]
[128.23017883 107.00648499]
[117.11870575 96.93002319]
[114.87608337 107.69831085]
[106.83567047 114.58583832]
[96.67402649 115.10449219]
[88.65262604 109.53958893]
[73.86536407 112.05686951]
[61.59295654 122.93437958]
[46.12430191 117.48895264]
[43.37221909 101.32238007]
[56.16781616 91.06544495]
[71.34808350 97.26960754]
[86.13534546 94.75232697]
[92.87661743 85.55249786]
[105.02016449 83.34848785]
[96.28976440 71.15094757]
[87.55936432 58.95340347]
[72.22046661 56.24120331]
[63.54035568 43.74679184]
[66.22055054 29.14021301]
[57.49015045 16.94266891]
[48.75974655 4.74512386]
[31.82715225 -2.45466495]
[30.76482391 -19.95814133]
[21.81931305 -31.99881744]
[7.37852001 -38.46210098]
[5.99921131 -53.29270554]
[-2.94629908 -65.33338165]
[-11.89180946 -77.37405396]
[-19.54654503 -82.41670227]
[-20.88698387 -89.70874786]
[-29.61738396 -101.90629578]
[-38.34778595 -114.10383606]
[-47.07818604 -126.30138397]
[-61.40199280 -133.01994324]
[-62.51786804 -147.87269592]
[-71.24826813 -160.07023621]
[-79.97867584 -172.26779175]
[-88.70907593 -184.46533203]
[-102.84457397 -193.82609558]
[-97.76271820 -210.00050354]
[-80.81362915 -209.59475708]
[-76.51152802 -193.19572449]
[-67.78112793 -180.99818420]
[-59.05072784 -168.80064392]
[-50.32032394 -156.60310364]
[-36.62097549 -150.75698853]
[-34.88064194 -135.03178406]
[-26.15024185 -122.83424377]
[-17.41983986 -110.63669586]
[-8.68943882 -98.43914795]
[0.14886516 -86.31956482]
[9.09437561 -74.27889252]
[18.03988647 -62.23821640]
[31.84083557 -56.63615799]
[33.85998917 -40.94432831]
[42.80550003 -28.90365219]
[54.74116516 -26.82028961]
[62.28953171 -16.83499336]
[60.95729065 -3.98527765]
[69.68769073 8.21226692]
[78.41809082 20.40981102]
[93.10861969 22.58328438]
[102.13625336 34.82896042]
[99.75690460 50.22299957]
[108.48730469 62.42054367]
[117.21771240 74.61808777]
[127.19516754 85.81855011]
[138.30664062 95.89501190]
[153.72697449 99.43395996]
[157.95724487 113.71520996]
[169.06871033 123.79167175]
[180.18019104 133.86813354]
[195.60050964 137.40708923]
[199.83078003 151.68833923]
[210.94226074 161.76480103]
[222.05372620 171.84126282]
[233.16520691 181.91772461]
[246.47215271 179.71682739]
[258.43801880 185.50645447]
[264.78182983 196.96586609]
[263.37841797 209.79269409]
[274.30929565 220.06477356]
[285.33090210 230.23945618]
[296.44238281 240.31591797]
[307.55386353 250.39237976]
[318.66534424 260.46884155]
[334.08566284 264.00778198]
[338.31591797 278.28903198]
[349.42739868 288.36550903]
[364.84771729 291.90444946]
[369.07800293 306.18569946]
[380.18948364 316.26217651]
[391.30093384 326.33862305]
[402.41241455 336.41510010]
[413.96426392 339.37448120]
[418.43597412 348.99523926]
[430.86160278 357.39785767]
[443.28723145 365.80044556]
[455.71286011 374.20306396]
[464.60491943 376.42889404]
[468.28262329 382.86669922]
[480.55718994 391.48849487]
[492.83172607 400.11032104]
[505.10626221 408.73211670]
[520.84625244 410.33282471]
[526.81372070 423.97976685]
[539.08825684 432.60156250]
[551.36285400 441.22338867]
[563.63739014 449.84518433]
[575.91192627 458.46701050]
[591.65191650 460.06771851]
[597.61938477 473.71466064]
[609.89392090 482.33645630]
[622.16845703 490.95828247]
[637.90850830 492.55899048]
[643.87597656 506.20590210]
[656.15051270 514.82769775]
[672.58703613 518.98413086]
[673.14318848 535.92895508]
[657.01452637 541.15411377]
[647.52868652 527.10223389]
[635.25415039 518.48046875]
[620.39208984 517.49645996]
[613.54669189 503.23281860]
[601.27209473 494.61099243]
[588.99755859 485.98919678]
[574.13549805 485.00515747]
[567.29010010 470.74154663]
[555.01556396 462.11975098]
[542.74102783 453.49792480]
[530.46649170 444.87612915]
[518.19195557 436.25430298]
[503.32986450 435.27029419]
[496.48443604 421.00665283]
[484.20989990 412.38485718]
[471.93536377 403.76303101]
[459.66082764 395.14123535]
[447.31024170 386.62869263]
[434.88461304 378.22607422]
[422.45898438 369.82348633]
[410.03335571 361.42086792]
[413.26138306 376.06942749]
[408.42507935 390.26837158]
[396.92663574 399.90090942]
[382.09991455 402.17425537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 125]
[6 124]
[7 123]
[8 122]
[10 120]
[11 119]
[13 117]
[14 116]
[15 115]
[16 114]
[18 113]
[19 112]
[22 108]
[23 107]
[24 106]
[25 105]
[27 103]
[28 102]
[29 101]
[31 99]
[32 98]
[36 43]
[37 42]
[45 97]
[46 96]
[47 95]
[50 92]
[51 91]
[52 90]
[54 87]
[55 86]
[57 84]
[58 83]
[59 82]
[61 81]
[62 80]
[63 79]
[64 78]
[66 76]
[67 75]
[68 74]
[69 73]
[127 172]
[128 171]
[129 170]
[130 169]
[132 168]
[133 167]
[134 166]
[135 165]
[137 163]
[138 162]
[139 161]
[140 160]
[141 159]
[143 157]
[144 156]
[145 155]
[147 153]
[148 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
