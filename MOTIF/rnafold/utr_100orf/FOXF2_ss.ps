%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCGGGCGGCGGGCUAGGGCGCUCGCAGGGCUUCUGGGCCGACCCCGCUCCGGCGCCUCCGCUUCCCGCCCGGGGCCCGCCCUCGCGGCCCGGCCUCGCUCCCGGGUCCCAGAUGACCACCGAGGGCGGGCCGCCGCCGGCCCCGCUCCGCCGCGCGUGCAGCCCGGUCCCCGGCGCGCUCCAGGCCGCCCUGAUGAGCCCGCCGCCCGCCG\
) } def
/len { sequence length } bind def

/coor [
[104.81963348 782.63305664]
[92.42087555 773.30291748]
[87.90635681 758.45709229]
[93.01200104 743.80407715]
[105.77458191 734.97814941]
[105.99375916 719.97979736]
[106.21292877 704.98138428]
[106.43209839 689.98297119]
[106.65127563 674.98455811]
[106.87044525 659.98620605]
[107.08962250 644.98779297]
[107.30879211 629.98937988]
[107.52796936 614.99096680]
[107.74713898 599.99261475]
[107.96631622 584.99420166]
[108.18548584 569.99578857]
[108.40466309 554.99737549]
[108.18548584 539.99896240]
[107.52815247 525.01342773]
[106.87081909 510.02780151]
[106.21349335 495.04223633]
[105.55615997 480.05664062]
[104.89882660 465.07104492]
[104.13202667 450.09066772]
[103.25580597 435.11627197]
[90.63629913 427.24948120]
[85.00222778 413.29522705]
[88.70859528 398.52648926]
[100.53730011 388.65795898]
[99.66107941 373.68356323]
[91.19352722 361.42999268]
[98.11147308 347.20141602]
[97.23525238 332.22702026]
[88.40909576 323.95782471]
[87.55487823 311.49163818]
[95.67443085 301.47244263]
[95.01709747 286.48684692]
[94.35976410 271.50125122]
[93.70243835 256.51565552]
[93.04510498 241.53007507]
[90.19312286 237.70266724]
[89.71320343 232.04374695]
[92.59399414 226.09832764]
[92.37482452 211.09991455]
[92.15564728 196.10151672]
[91.93647766 181.10311890]
[81.10598755 170.94261169]
[80.67005920 155.73521423]
[91.40077209 144.44409180]
[91.18160248 129.44569397]
[90.96242523 114.44730377]
[81.88180542 102.50819397]
[67.48661041 98.29176331]
[53.09141159 94.07534027]
[38.69621277 89.85890961]
[29.58403015 90.44999695]
[24.12231636 85.47427368]
[9.79026413 81.04796600]
[-0.95965189 91.94281769]
[-15.54484177 96.58295441]
[-30.61373520 93.90209198]
[-42.70361328 84.51628113]
[-49.03630829 70.58230591]
[-48.15661240 55.30210114]
[-40.26667404 42.18693542]
[-27.17954636 34.25058746]
[-11.90255260 33.31676483]
[2.05376649 39.60005569]
[11.48234940 51.65660858]
[14.21657753 66.71591187]
[28.54863167 71.14222717]
[42.91263962 75.46370697]
[57.30783844 79.68013763]
[71.70303345 83.89656830]
[86.09823608 88.11299133]
[97.76690674 78.68739319]
[96.67198181 63.72740555]
[95.57704926 48.76742172]
[94.48212433 33.80743790]
[93.38719177 18.84745407]
[92.29225922 3.88746929]
[91.19733429 -11.07251453]
[90.10240173 -26.03249931]
[89.00746918 -40.99248505]
[87.91254425 -55.95246887]
[86.81761169 -70.91245270]
[85.72268677 -85.87243652]
[79.47447968 -95.79850769]
[82.65217590 -105.72802734]
[79.17713928 -120.31994629]
[75.70211029 -134.91186523]
[72.22707367 -149.50378418]
[68.75203705 -164.09570312]
[65.27700806 -178.68763733]
[61.80197144 -193.27955627]
[47.42571259 -199.11930847]
[39.25619888 -212.31167603]
[40.43478012 -227.78393555]
[50.50826645 -239.58666992]
[65.60319519 -243.18148804]
[79.91526031 -237.18612671]
[87.94117737 -223.90589905]
[86.59481812 -208.44734192]
[76.39389038 -196.75457764]
[79.86892700 -182.16265869]
[83.34396362 -167.57073975]
[86.81899261 -152.97882080]
[90.29402924 -138.38690186]
[93.76906586 -123.79498291]
[97.24409485 -109.20306396]
[102.96054077 -123.07109070]
[113.96707916 -133.26206970]
[128.23333740 -137.89608765]
[143.12760925 -136.11827087]
[155.90235901 -128.25660706]
[164.20103455 -115.76132965]
[166.49275208 -100.93743134]
[162.35479736 -86.51947784]
[152.55047607 -75.16715240]
[138.88839722 -68.97461700]
[123.88879395 -69.08420563]
[110.31864929 -75.47570801]
[100.68267059 -86.96736908]
[101.77759552 -72.00738525]
[102.87252808 -57.04739761]
[103.96745300 -42.08741379]
[105.06238556 -27.12742805]
[106.15731812 -12.16744423]
[107.25224304 2.79253960]
[108.34717560 17.75252342]
[109.44210815 32.71250916]
[110.53703308 47.67249298]
[111.63196564 62.63247681]
[112.72689056 77.59246063]
[125.41524506 85.59281921]
[139.38597107 80.13214111]
[153.31642151 74.56953430]
[167.20585632 68.90530396]
[181.09529114 63.24107742]
[194.94297791 57.47552109]
[208.74816895 51.60895157]
[222.55335999 45.74238205]
[236.35855103 39.87580872]
[239.71163940 24.72535133]
[251.35185242 14.46449757]
[266.80328369 13.03875923]
[280.12457275 20.99636078]
[286.19335938 35.27744293]
[282.67611694 50.39063644]
[270.92529297 60.52460861]
[255.45928955 61.78264618]
[242.22512817 53.68100357]
[228.41993713 59.54757309]
[214.61474609 65.41414642]
[200.80955505 71.28071594]
[195.88442993 76.78810120]
[186.75952148 77.13051605]
[172.87008667 82.79474640]
[158.98065186 88.45897675]
[153.97558594 93.89381409]
[144.84664917 94.10285950]
[130.87593079 99.56353760]
[105.96082306 114.22812653]
[106.18000031 129.22653198]
[106.39916992 144.22492981]
[117.45523834 155.19767761]
[117.46385193 170.41130066]
[106.93487549 180.88395691]
[107.15404510 195.88235474]
[107.37322235 210.88075256]
[107.59239197 225.87915039]
[108.03069305 240.87274170]
[108.68802643 255.85833740]
[109.34535980 270.84393311]
[110.00269318 285.82949829]
[110.66001892 300.81509399]
[120.91449738 316.11148071]
[112.20964050 331.35079956]
[113.08586121 346.32519531]
[121.61608887 359.64981079]
[114.63545990 372.80734253]
[115.51168823 387.78173828]
[128.41062927 396.20330811]
[133.81419373 410.43902588]
[129.84606934 424.95513916]
[118.23018646 434.24005127]
[119.10641479 449.21441650]
[122.73083496 457.59564209]
[119.88441467 464.41369629]
[120.54174805 479.39929199]
[121.19908142 494.38488770]
[121.85641479 509.37048340]
[122.51374817 524.35607910]
[123.17107391 539.34167480]
[125.62940979 542.91253662]
[126.71615601 546.69903564]
[126.53173065 550.24414062]
[125.31451416 553.16998291]
[123.40306091 555.21655273]
[123.18388367 570.21496582]
[122.96471405 585.21337891]
[122.74553680 600.21173096]
[122.52636719 615.21014404]
[122.30718994 630.20855713]
[122.08802032 645.20697021]
[121.86885071 660.20538330]
[121.64967346 675.20373535]
[121.43050385 690.20214844]
[121.21132660 705.20056152]
[120.99215698 720.19897461]
[120.77297974 735.19732666]
[133.27221680 744.39239502]
[137.94752502 759.18835449]
[133.00114441 773.89593506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 211]
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 187]
[25 186]
[29 182]
[30 181]
[32 179]
[33 178]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[43 171]
[44 170]
[45 169]
[46 168]
[49 165]
[50 164]
[51 163]
[52 75]
[53 74]
[54 73]
[55 72]
[57 71]
[58 70]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[135 162]
[136 161]
[137 159]
[138 158]
[139 157]
[140 155]
[141 154]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
