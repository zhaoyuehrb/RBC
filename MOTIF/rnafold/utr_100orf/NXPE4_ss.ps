%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGGUUGUGAAUCCAUGCUAAAGGUAAACAAACUGCAACUUAUAUCUGCAAUUUAUUUUGGUAUAGACAAGAGGUAUGCCAGUAGCACACUGGUGGCUUCAGAAGAAAUUCUCAACACCUAGCUCGCCAGAGAGUCUAUGUAUGGGAUUGAACAAUCUGUAAACUAAAGGAUCCUAAUCAUGAAAAUAAGUAUGAUAAAUUAUAAGUCACUAUUGGCACUGUUGUUUAUAUUAGCCUCCUGGAUCAUUUUUAC\
AGUUUUCCAGAACUCCACAAAGGUUU\
) } def
/len { sequence length } bind def

/coor [
[82.60343170 918.20855713]
[91.06211090 905.12847900]
[88.07432556 890.42907715]
[85.08653259 875.72961426]
[82.09873962 861.03021240]
[79.11095428 846.33074951]
[76.12316132 831.63134766]
[73.13537598 816.93194580]
[70.14758301 802.23248291]
[67.15979767 787.53308105]
[64.17200470 772.83361816]
[61.18421555 758.13421631]
[58.19642639 743.43481445]
[43.52506256 740.66345215]
[30.99855232 732.46392822]
[22.54279137 720.05969238]
[19.47203636 705.32342529]
[22.28470802 690.49432373]
[30.58279419 677.83789062]
[43.12784195 669.29986572]
[40.14005280 654.60046387]
[37.15225983 639.90106201]
[24.83651924 627.37512207]
[30.88256264 609.96185303]
[27.73120308 595.29663086]
[24.57984543 580.63140869]
[21.42848587 565.96618652]
[14.47565174 563.15405273]
[10.21034336 577.53479004]
[11.20246029 592.50195312]
[-0.95027339 601.29461670]
[-14.85608292 595.67071533]
[-17.47988892 580.90197754]
[-6.36143160 570.83221436]
[0.56998104 557.52978516]
[-6.38285398 554.71765137]
[-18.84328079 563.06854248]
[-31.30370903 571.41943359]
[-43.76413727 579.77038574]
[-43.36449051 595.19256592]
[-51.38567734 608.37072754]
[-65.26816559 615.09979248]
[-80.58210754 613.23248291]
[-92.44087219 603.36468506]
[-97.06037903 588.64520264]
[-92.96655273 573.77093506]
[-81.46572876 563.48815918]
[-66.22776794 561.07818604]
[-52.11504745 567.30993652]
[-39.65462112 558.95904541]
[-27.19419479 550.60809326]
[-14.73376751 542.25720215]
[-29.27590561 545.93499756]
[-43.37187195 540.80627441]
[-52.15049362 528.64343262]
[-52.57811737 513.64947510]
[-44.50696945 501.00607300]
[-30.72621536 495.08230591]
[-15.99810505 497.92532349]
[-5.41226721 508.55267334]
[-2.62691450 523.29211426]
[-0.29690382 508.47421265]
[2.03310680 493.65628052]
[4.36311769 478.83834839]
[6.69312811 464.02041626]
[9.02313900 449.20248413]
[11.35314941 434.38455200]
[13.68315983 419.56661987]
[16.01317024 404.74868774]
[18.34318161 389.93075562]
[20.67319298 375.11282349]
[23.00320244 360.29489136]
[17.33679581 346.52023315]
[27.12381744 334.08944702]
[29.45382881 319.27151489]
[27.71897316 316.24612427]
[27.34004021 312.24008179]
[28.75783348 307.88928223]
[32.11725235 304.00073242]
[34.94110107 289.26895142]
[37.76494980 274.53713989]
[40.58880234 259.80535889]
[43.41265106 245.07356262]
[46.23650360 230.34175110]
[49.06035233 215.60995483]
[51.88420486 200.87815857]
[54.70805359 186.14636230]
[46.06595612 176.62107849]
[44.45132065 163.66551208]
[50.67352676 151.96720886]
[62.66536331 145.88856506]
[65.65315247 131.18914795]
[68.64093781 116.48972321]
[64.59748840 102.04498291]
[54.41241074 91.03298187]
[44.22732925 80.02098083]
[34.04225159 69.00897980]
[21.97766304 72.09844971]
[9.81197548 69.79487610]
[-0.17113239 62.59281921]
[-6.12408066 51.90046310]
[-6.97719431 39.76462173]
[-2.63044381 28.47900963]
[-12.56765842 17.24282837]
[-22.50487328 6.00664663]
[-32.44208908 -5.22953415]
[-48.15613937 -9.92002106]
[-51.68733215 -25.93447495]
[-39.40307999 -36.79859924]
[-23.94036484 -31.33631134]
[-21.20590591 -15.16674900]
[-11.26869202 -3.93056798]
[-1.33147728 7.30561304]
[8.60573769 18.54179382]
[26.12160683 16.05226135]
[41.74824905 24.67897606]
[49.10382080 41.11570740]
[45.05425262 58.82389832]
[55.23933029 69.83589935]
[65.42440796 80.84790039]
[75.60948944 91.85990143]
[88.88235474 84.87198639]
[85.56782532 70.24277496]
[82.25328827 55.61356354]
[78.85731506 41.00304031]
[75.38001251 26.41165924]
[71.90270996 11.82028008]
[58.31153488 3.75457716]
[54.48544693 -11.57958698]
[62.69439316 -25.08472443]
[78.06815338 -28.74847794]
[91.48574829 -20.39720535]
[94.98675537 -4.98557043]
[86.49408722 8.34297752]
[89.97138977 22.93435860]
[93.44869232 37.52573776]
[98.03723145 43.28009796]
[96.88249969 52.29902649]
[100.19703674 66.92823792]
[103.51157379 81.55744934]
[110.96031952 82.43276215]
[112.71118164 67.53529358]
[127.60861206 69.28639984]
[125.85781097 84.18337250]
[133.30656433 85.05867767]
[139.92214966 71.59636688]
[146.53773499 58.13404465]
[153.15333557 44.67173004]
[159.76892090 31.20941353]
[166.38450623 17.74709702]
[173.00009155 4.28477955]
[161.85984802 -5.91676855]
[154.04615784 -18.84436607]
[150.19242859 -33.45003128]
[150.61106873 -48.54974747]
[155.26814270 -62.91944885]
[163.78613281 -75.39424896]
[175.47450256 -84.96286774]
[189.38575745 -90.84962463]
[204.39215088 -92.57730103]
[219.27717590 -90.00585175]
[232.83419800 -83.34371948]
[243.96418762 -73.13098907]
[251.76490784 -60.19554901]
[255.60395813 -45.58601761]
[255.17015076 -30.48673248]
[250.49862671 -16.12171745]
[241.96812439 -3.65548158]
[230.27014160 5.90139151]
[216.35298157 11.77416992]
[201.34486389 13.48677349]
[186.46241760 10.90036964]
[179.84683228 24.36268616]
[173.23123169 37.82500458]
[166.61564636 51.28731918]
[160.00006104 64.74963379]
[153.38446045 78.21195221]
[146.76887512 91.67427063]
[157.66673279 101.98139191]
[170.73985291 94.62657166]
[183.81298828 87.27175140]
[196.88610840 79.91693115]
[209.95922852 72.56211090]
[223.03236389 65.20729065]
[224.69232178 49.77926254]
[235.12857056 38.29603958]
[250.32815552 35.17316055]
[264.44650269 41.61143112]
[272.05487061 55.13521194]
[270.22763062 70.54432678]
[259.66744995 81.91365814]
[244.43487549 84.87146759]
[230.38717651 78.28041840]
[217.31405640 85.63523865]
[204.24093628 92.99005890]
[191.16780090 100.34487915]
[178.09468079 107.69969940]
[165.02154541 115.05451965]
[164.32359314 130.03826904]
[158.28822327 143.77050781]
[147.72161865 154.41696167]
[134.03520203 160.55552673]
[119.05713654 161.36627197]
[104.78807831 156.74089050]
[93.13403320 147.29721069]
[85.65165710 134.29666138]
[83.34037018 119.47750854]
[80.35257721 134.17694092]
[77.36478424 148.87635803]
[87.28979492 163.30538940]
[83.75784302 180.11285400]
[69.43984985 188.97021484]
[66.61599731 203.70201111]
[63.79215240 218.43380737]
[60.96829987 233.16560364]
[58.14445114 247.89739990]
[55.32059860 262.62921143]
[52.49674988 277.36099243]
[49.67290115 292.09280396]
[46.84904861 306.82458496]
[44.27175903 321.60153198]
[41.94174957 336.41946411]
[47.44149780 351.25399780]
[37.82113266 362.62490845]
[35.49112320 377.44284058]
[33.16110992 392.26077271]
[30.83110046 407.07870483]
[28.50109100 421.89663696]
[26.17107964 436.71456909]
[23.84106827 451.53250122]
[21.51105881 466.35043335]
[19.18104744 481.16833496]
[16.85103607 495.98626709]
[14.52102661 510.80419922]
[12.19101524 525.62213135]
[36.09371567 562.81481934]
[39.24507523 577.48004150]
[42.39643097 592.14526367]
[45.54779053 606.81048584]
[55.91894913 614.43359375]
[58.25886536 626.68316650]
[51.85168839 636.91326904]
[54.83947754 651.61267090]
[57.82726669 666.31207275]
[72.71000671 669.27514648]
[85.29056549 677.68780518]
[93.66918182 690.24218750]
[96.59497833 705.00793457]
[93.65265656 719.72894287]
[85.32112885 732.16802979]
[72.89585114 740.44702148]
[75.88364410 755.14642334]
[78.87142944 769.84588623]
[81.85922241 784.54528809]
[84.84700775 799.24468994]
[87.83480072 813.94415283]
[90.82258606 828.64355469]
[93.81037903 843.34295654]
[96.79817200 858.04241943]
[99.78595734 872.74182129]
[102.77375031 887.44128418]
[105.76153564 902.14068604]
[118.65534210 910.88067627]
[121.47599030 925.83056641]
[113.06428528 938.06896973]
[116.05207062 952.76837158]
[119.03986359 967.46783447]
[122.02764893 982.16723633]
[125.01544189 996.86663818]
[138.84207153 1004.17132568]
[144.69062805 1018.67407227]
[139.79959106 1033.52709961]
[126.47835541 1041.71716309]
[111.01681519 1039.37744141]
[100.71542358 1027.61242676]
[100.43819427 1011.97729492]
[110.31601715 999.85443115]
[107.32822418 985.15502930]
[104.34043884 970.45562744]
[101.35264587 955.75616455]
[98.36485291 941.05676270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 262]
[3 261]
[4 260]
[5 259]
[6 258]
[7 257]
[8 256]
[9 255]
[10 254]
[11 253]
[12 252]
[13 251]
[20 244]
[21 243]
[22 242]
[24 239]
[25 238]
[26 237]
[27 236]
[36 52]
[37 51]
[38 50]
[39 49]
[61 235]
[62 234]
[63 233]
[64 232]
[65 231]
[66 230]
[67 229]
[68 228]
[69 227]
[70 226]
[71 225]
[72 224]
[74 222]
[75 221]
[79 220]
[80 219]
[81 218]
[82 217]
[83 216]
[84 215]
[85 214]
[86 213]
[87 212]
[91 209]
[92 208]
[93 207]
[94 121]
[95 120]
[96 119]
[97 118]
[103 114]
[104 113]
[105 112]
[106 111]
[122 140]
[123 139]
[124 138]
[125 136]
[126 135]
[127 134]
[145 178]
[146 177]
[147 176]
[148 175]
[149 174]
[150 173]
[151 172]
[179 198]
[180 197]
[181 196]
[182 195]
[183 194]
[184 193]
[265 281]
[266 280]
[267 279]
[268 278]
[269 277]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
