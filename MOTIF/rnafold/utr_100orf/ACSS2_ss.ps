%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCCCCACUCACCAGGCCCCGCCCCUCUACGGAGGCCCCGCCUCUAGUUCGGCCUGUUUUCUCAGUCCCGGCACCCGCCGCGACCGCAAAGGCGGCCGCGGUUCUAGGAACUUGACGUGAUGGGGCUUCCUGAGGAGCGGGUCCGGAGCGGCAGCGGGAGCCGGGGCCAGGAGGAAGCUGGAGCCGGAGGCCGGGCGCGGAGUUGGUCUCCGCCGCCCG\
) } def
/len { sequence length } bind def

/coor [
[580.66809082 565.23797607]
[590.92749023 557.96643066]
[579.95233154 547.74163818]
[568.97723389 537.51684570]
[558.00207520 527.29205322]
[547.02697754 517.06726074]
[535.76684570 507.15713501]
[524.23083496 497.56961060]
[509.49728394 495.38528442]
[503.82943726 480.61416626]
[492.29342651 471.02664185]
[480.75738525 461.43914795]
[472.18081665 463.68118286]
[463.39935303 461.69952393]
[456.40637207 455.81451416]
[452.84829712 447.24670410]
[453.63806152 437.86517334]
[442.51934814 427.79669189]
[427.89175415 424.98901367]
[422.85592651 409.99066162]
[411.73721313 399.92218018]
[400.61846924 389.85372925]
[389.49975586 379.78524780]
[378.38104248 369.71679688]
[363.75344849 366.90908813]
[358.71762085 351.91073608]
[347.59890747 341.84225464]
[336.48019409 331.77380371]
[325.36145020 321.70532227]
[315.25253296 323.12713623]
[305.82992554 318.66003418]
[300.30380249 309.55905151]
[300.70227051 298.69952393]
[289.87292480 288.32043457]
[279.04357910 277.94137573]
[268.21423340 267.56228638]
[257.38488770 257.18319702]
[246.55555725 246.80410767]
[235.72621155 236.42503357]
[224.89686584 226.04594421]
[214.06753540 215.66687012]
[203.02032471 205.51997375]
[191.76023865 195.60984802]
[177.09439087 193.00944519]
[171.84681702 178.08384705]
[160.58674622 168.17372131]
[145.92088318 165.57331848]
[140.67332458 150.64770508]
[129.41323853 140.73759460]
[118.15315247 130.82746887]
[106.89306641 120.91735077]
[95.63298035 111.00722504]
[82.09877777 104.53998566]
[67.31453705 102.00496674]
[52.40525818 107.29873657]
[41.16866684 97.52181244]
[26.38442802 94.98680115]
[11.60019016 92.45178223]
[-1.15667450 101.78119659]
[-16.76100159 99.27510071]
[-25.95501900 86.42031097]
[-23.28408241 70.84335327]
[-10.33280754 61.78575516]
[5.21504116 64.62123108]
[14.13520241 77.66754913]
[28.91944122 80.20256042]
[43.70367813 82.73757172]
[57.55549240 77.26248169]
[69.84954834 87.22073364]
[84.63378906 89.75574493]
[89.92995453 75.72183228]
[77.15702057 67.85722351]
[64.38407898 59.99261475]
[47.72645950 56.83667755]
[46.14777374 39.95639038]
[61.93134689 33.76647186]
[72.24868774 47.21967697]
[85.02162933 55.08428574]
[97.79456329 62.94889450]
[108.40116882 52.34229279]
[100.53656006 39.56935883]
[92.67194366 26.79642105]
[84.80733490 14.02348328]
[76.94272614 1.25054634]
[63.11865997 -6.44397974]
[63.03419495 -21.33834457]
[55.16958618 -34.11128235]
[47.30497742 -46.88422012]
[39.44036865 -59.65715790]
[24.76262283 -66.97123718]
[24.02813721 -83.35392761]
[37.99248886 -91.95212555]
[52.29034805 -83.92073059]
[52.21330643 -67.52176666]
[60.07791519 -54.74882889]
[67.94252777 -41.97589111]
[75.80713654 -29.20295525]
[89.06867218 -22.42203522]
[89.71566772 -6.61406279]
[97.58027649 6.15887403]
[105.44488525 18.93181038]
[113.30949402 31.70474815]
[121.17410278 44.47768402]
[126.15733337 55.37458420]
[128.23065186 66.21103668]
[127.57934570 76.34545135]
[124.51699829 85.20018768]
[119.46874237 92.28564453]
[112.95021820 97.22046661]
[105.54310608 99.74713898]
[116.80319214 109.65726471]
[128.06327820 119.56738281]
[139.32336426 129.47750854]
[150.58345032 139.38761902]
[166.05468750 142.69686890]
[170.49685669 156.91363525]
[181.75694275 166.82376099]
[197.22819519 170.13301086]
[201.67036438 184.34977722]
[212.93045044 194.25988770]
[218.03266907 195.28321838]
[221.85409546 197.89627075]
[224.00421143 201.34707642]
[224.44660950 204.83752441]
[235.27595520 215.21659851]
[246.10530090 225.59568787]
[256.93463135 235.97477722]
[267.76397705 246.35385132]
[278.59332275 256.73294067]
[289.42266846 267.11203003]
[300.25201416 277.49108887]
[311.08132935 287.87017822]
[330.85964966 291.79354858]
[335.42993164 310.58660889]
[346.54864502 320.65509033]
[357.66738892 330.72354126]
[368.78610229 340.79202271]
[384.20895386 344.31985474]
[388.44952393 358.59805298]
[399.56823730 368.66653442]
[410.68695068 378.73498535]
[421.80566406 388.80346680]
[432.92440796 398.87194824]
[448.34725952 402.39978027]
[452.58779907 416.67797852]
[463.70654297 426.74645996]
[484.89367676 429.99273682]
[490.34490967 449.90313721]
[501.88092041 459.49063110]
[513.41693115 469.07812500]
[528.97564697 471.94824219]
[533.81835938 486.03359985]
[545.35437012 495.62109375]
[549.63922119 496.20108032]
[553.16522217 497.93600464]
[555.66320801 500.44699097]
[557.01409912 503.30664062]
[557.25177002 506.09210205]
[568.22686768 516.31689453]
[579.20202637 526.54168701]
[590.17712402 536.76654053]
[601.15228271 546.99133301]
[614.24749756 554.30676270]
[628.70855713 558.29144287]
[643.16961670 562.27612305]
[657.63061523 566.26086426]
[671.25787354 558.71520996]
[685.86669922 562.96228027]
[692.97631836 576.00024414]
[707.43737793 579.98498535]
[721.89843750 583.96966553]
[736.35943604 587.95434570]
[749.12860107 578.92755127]
[764.70825195 580.27191162]
[775.74224854 591.35272217]
[777.02069092 606.93798828]
[767.93988037 619.66876221]
[752.78753662 623.53399658]
[738.71807861 616.70867920]
[732.37475586 602.41540527]
[717.91369629 598.43072510]
[703.45263672 594.44604492]
[688.99157715 590.46130371]
[676.20727539 598.01757812]
[661.48492432 594.18249512]
[653.64593506 580.72192383]
[639.18487549 576.73718262]
[624.72381592 572.75250244]
[610.26275635 568.76776123]
[605.34765625 574.43273926]
[616.67742920 584.26312256]
[606.84692383 595.59277344]
[595.51745605 585.76269531]
[590.60235596 591.42761230]
[596.58685303 605.18212891]
[602.57135010 618.93664551]
[608.55578613 632.69110107]
[614.54028320 646.44561768]
[620.52478027 660.20007324]
[626.60644531 673.91186523]
[632.78497314 687.58032227]
[638.96343994 701.24871826]
[645.14196777 714.91717529]
[651.32049561 728.58557129]
[665.76220703 735.57250977]
[669.16320801 751.25091553]
[658.91448975 763.59368896]
[642.87811279 763.13250732]
[633.35571289 750.22119141]
[637.65209961 734.76409912]
[631.47357178 721.09570312]
[625.29504395 707.42724609]
[619.11651611 693.75885010]
[612.93798828 680.09039307]
[607.32318115 675.29400635]
[606.77026367 666.18457031]
[600.78582764 652.43005371]
[594.80133057 638.67559814]
[588.81683350 624.92108154]
[582.83233643 611.16662598]
[576.84790039 597.41210938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 162]
[3 161]
[4 160]
[5 159]
[6 158]
[7 153]
[8 152]
[10 150]
[11 149]
[12 148]
[17 146]
[18 145]
[20 143]
[21 142]
[22 141]
[23 140]
[24 139]
[26 137]
[27 136]
[28 135]
[29 134]
[33 132]
[34 131]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
[40 125]
[41 124]
[42 120]
[43 119]
[45 117]
[46 116]
[48 114]
[49 113]
[50 112]
[51 111]
[52 110]
[53 70]
[54 69]
[56 67]
[57 66]
[58 65]
[71 79]
[72 78]
[73 77]
[80 103]
[81 102]
[82 101]
[83 100]
[84 99]
[86 97]
[87 96]
[88 95]
[89 94]
[163 189]
[164 188]
[165 187]
[166 186]
[169 183]
[170 182]
[171 181]
[172 180]
[194 221]
[195 220]
[196 219]
[197 218]
[198 217]
[199 216]
[200 214]
[201 213]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
