%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAGCUCAGCCUGGGCUACACAGCCAGGUGUCAGAUGUGUCUCUGCUGAUCUGAGUCUGCCUGUGGCAUGGACCUGCAUCUUCCCUGAAGCAUCUCCAGGGCUGAAAAAUCACUGACCAUGGCACCAUGGUCUCAUCCAUCUGCACAGCUGCAGCCAGUGGGAGGAGACGCCGUGAGCCCUGCCCUCAUGGUUCUGCUCUGCCUCGGGCUGAGUCUGG\
) } def
/len { sequence length } bind def

/coor [
[96.01619720 382.64828491]
[81.79885864 375.21548462]
[78.88727570 359.43884277]
[89.51497650 347.42086792]
[89.94137573 332.42694092]
[90.36778259 317.43298340]
[90.68759918 302.43640137]
[90.90082550 287.43792725]
[91.11404419 272.43942261]
[91.32727051 257.44094849]
[91.54049683 242.44247437]
[91.75371552 227.44398499]
[91.96694183 212.44549561]
[92.18016052 197.44702148]
[92.39338684 182.44853210]
[92.50000000 167.44891357]
[92.50000000 152.44891357]
[92.50000000 137.44891357]
[61.12796402 127.22110748]
[43.92966461 91.45021057]
[59.68916321 47.76419067]
[45.44990540 52.48048782]
[31.21064377 57.19678497]
[16.97138214 61.91308212]
[2.73212194 66.62937927]
[-7.93540096 78.31332397]
[-22.44995689 74.97013092]
[-36.68921661 79.68643188]
[-50.92847824 84.40272522]
[-65.16773987 89.11902618]
[-71.64144135 100.26935577]
[-83.59276581 103.90689850]
[-94.46005249 98.60435486]
[-108.76491547 103.11776733]
[-123.06977844 107.63117981]
[-137.37464905 112.14459229]
[-151.67950439 116.65799713]
[-165.98437500 121.17140961]
[-173.32345581 134.91098022]
[-187.89491272 139.28443909]
[-200.94825745 132.20307922]
[-215.25312805 136.71649170]
[-225.92480469 149.16827393]
[-241.99226379 145.88667297]
[-246.92666626 130.24751282]
[-235.65193176 118.33900452]
[-219.76654053 122.41162109]
[-205.46166992 117.89820862]
[-198.83595276 104.60778809]
[-184.39308167 99.82676697]
[-170.49778748 106.86654663]
[-156.19291687 102.35313416]
[-141.88806152 97.83972931]
[-127.58319092 93.32631683]
[-113.27832794 88.81290436]
[-98.97346497 84.29949188]
[-87.82997894 70.73854065]
[-69.88403320 74.87976837]
[-55.64477539 70.16346741]
[-41.40551376 65.44717407]
[-27.16625404 60.73087311]
[-17.51721954 49.38427353]
[-1.98417509 52.39012146]
[12.25508499 47.67382431]
[26.49434662 42.95752716]
[40.73360825 38.24123001]
[54.97286606 33.52493286]
[59.07781219 19.09754562]
[49.45415878 7.59166527]
[32.01613998 1.66528165]
[29.68067360 -15.73075962]
[19.89443970 -27.09867859]
[10.10820389 -38.46659851]
[0.32196891 -49.83451843]
[-15.19801712 -51.16410828]
[-24.96071053 -62.83220291]
[-23.59750748 -77.61994171]
[-33.38374329 -88.98786163]
[-43.16997910 -100.35578156]
[-58.03722763 -105.76646423]
[-60.47689819 -120.45990753]
[-70.26313019 -131.82781982]
[-86.04013824 -132.75613403]
[-96.47715759 -144.62390137]
[-95.38210297 -160.39021301]
[-83.40464020 -170.70118713]
[-67.65079498 -169.43949890]
[-57.46703720 -157.35368347]
[-58.89521408 -141.61405945]
[-49.10897827 -130.24613953]
[-34.94170761 -125.64856720]
[-31.80205727 -110.14202118]
[-22.01582336 -98.77410126]
[-12.22958755 -87.40618134]
[2.59644985 -86.55517578]
[12.68302441 -75.16589355]
[11.68988895 -59.62075424]
[21.47612381 -48.25283432]
[31.26235962 -36.88491440]
[41.04859543 -25.51699448]
[53.07957840 -24.30442047]
[61.32588196 -14.92015362]
[60.96004105 -2.03198767]
[70.58369446 9.47389317]
[84.60894012 4.15482044]
[84.18253326 -10.83911800]
[83.75613403 -25.83305550]
[74.70011902 -39.50495148]
[82.25351715 -54.06098557]
[98.64604187 -54.52716446]
[107.01445770 -40.42391586]
[98.75006866 -26.25945854]
[99.17647552 -11.26552105]
[99.60287476 3.72841716]
[106.95484161 5.21119547]
[121.65876770 8.17675209]
[129.01072693 9.65953064]
[135.21549988 -3.99700236]
[141.42025757 -17.65353584]
[147.62501526 -31.31006813]
[153.82978821 -44.96660233]
[160.03454590 -58.62313461]
[166.23931885 -72.27967072]
[164.11116028 -88.54014587]
[177.29185486 -98.29726410]
[192.22222900 -91.51374054]
[193.54318237 -75.16787720]
[179.89584351 -66.07490540]
[173.69108582 -52.41836929]
[167.48631287 -38.76183701]
[161.28155518 -25.10530472]
[155.07679749 -11.44877148]
[148.87202454 2.20776200]
[142.66726685 15.86429501]
[147.95167542 21.18640900]
[158.59608459 10.61774540]
[169.16458130 21.26232529]
[158.52052307 31.83063889]
[163.80494690 37.15275192]
[177.50523376 31.04520988]
[191.20552063 24.93766785]
[204.90580750 18.83012581]
[218.47276306 12.43186283]
[231.90020752 5.74578762]
[245.32766724 -0.94028753]
[258.75512695 -7.62636280]
[272.18255615 -14.31243801]
[280.78488159 -28.27424049]
[297.16735840 -27.53489685]
[304.47711182 -12.85498238]
[295.19445801 0.66406661]
[278.86865234 -0.88498884]
[265.44119263 5.80108643]
[252.01373291 12.48716164]
[238.58628845 19.17323685]
[225.15884399 25.85931206]
[223.69775391 29.06067848]
[220.61738586 31.71579742]
[216.19021606 33.07305908]
[211.01335144 32.53041458]
[197.31306458 38.63795853]
[183.61277771 44.74549866]
[169.91249084 50.85304260]
[169.48608398 65.84697723]
[182.81713867 72.72325134]
[196.14817810 79.59951782]
[211.95982361 79.04933929]
[219.72410583 91.76017761]
[233.05514526 98.63644409]
[246.38619995 105.51271057]
[255.44023132 106.66375732]
[259.85684204 112.58265686]
[273.08880615 119.64772797]
[286.32077026 126.71279907]
[299.55273438 133.77787781]
[312.78466797 140.84294128]
[326.01663208 147.90802002]
[339.24859619 154.97309875]
[352.48056030 162.03817749]
[366.92117310 156.03794861]
[381.82461548 160.77304077]
[390.15396118 174.00770569]
[387.97631836 189.49291992]
[376.31991577 199.91705322]
[360.68856812 200.35812378]
[348.46289062 190.60791016]
[345.41549683 175.27012634]
[332.18353271 168.20504761]
[318.95156860 161.13998413]
[305.71960449 154.07490540]
[292.48764038 147.00982666]
[279.25567627 139.94476318]
[266.02374268 132.87968445]
[252.79177856 125.81461334]
[239.50993347 118.84376526]
[226.17887878 111.96749878]
[212.84782410 105.09122467]
[197.98971558 106.13323975]
[189.27191162 92.93057251]
[175.94087219 86.05429840]
[162.60981750 79.17803192]
[145.04495239 126.15347290]
[107.50000000 137.44891357]
[107.50000000 152.44891357]
[107.50000000 167.44891357]
[110.62755585 176.02320862]
[107.39186859 182.66175842]
[107.17864990 197.66023254]
[106.96542358 212.65872192]
[106.75219727 227.65721130]
[106.53897858 242.65568542]
[106.32575226 257.65417480]
[106.11253357 272.65264893]
[105.89930725 287.65115356]
[105.68608856 302.64962769]
[108.69144440 311.26751709]
[105.36171722 317.85940552]
[104.93531799 332.85333252]
[104.50891113 347.84729004]
[114.43643951 360.44979858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 219]
[5 218]
[6 217]
[7 215]
[8 214]
[9 213]
[10 212]
[11 211]
[12 210]
[13 209]
[14 208]
[15 207]
[16 205]
[17 204]
[18 203]
[21 67]
[22 66]
[23 65]
[24 64]
[25 63]
[27 61]
[28 60]
[29 59]
[30 58]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[41 48]
[42 47]
[68 104]
[69 103]
[71 100]
[72 99]
[73 98]
[74 97]
[77 94]
[78 93]
[79 92]
[81 90]
[82 89]
[105 114]
[106 113]
[107 112]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[139 163]
[140 162]
[141 161]
[142 160]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
[164 201]
[165 200]
[166 199]
[168 197]
[169 196]
[170 195]
[172 194]
[173 193]
[174 192]
[175 191]
[176 190]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
