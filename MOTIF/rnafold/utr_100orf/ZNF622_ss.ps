%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGGCGUGUCGAGUGGCUCUUCCUGGCUGCUGAGGCGGGUUAAGGUCUGAGGGUCUUGUGGGGCCACGGCGCUGAUCACCAGGUGUUUGGCUUGGUCGGUUCUUAUUUCUCGCCUGGCAAUGGCGACGUACACCUGCAUAACUUGCCGGGUGGCGUUCCGCGACGCGGACAUGCAGCGGGCCCACUAUAAGACGGACUGGCACCGCUACAACCUGCGGC\
) } def
/len { sequence length } bind def

/coor [
[83.07260132 348.26571655]
[79.27619934 333.75408936]
[75.47980499 319.24246216]
[71.68340302 304.73083496]
[67.88700104 290.21920776]
[54.94254684 282.94070435]
[50.88573074 268.27792358]
[58.60786057 254.74993896]
[54.81146240 240.23831177]
[51.01506042 225.72668457]
[47.21866226 211.21505737]
[40.48134613 207.91981506]
[27.00671387 201.32934570]
[20.26939774 198.03411865]
[6.48367405 203.94628906]
[-7.30204916 209.85847473]
[-21.08777237 215.77064514]
[-34.87349701 221.68283081]
[-48.65921783 227.59500122]
[-62.44494247 233.50718689]
[-76.23066711 239.41935730]
[-78.14025116 254.59501648]
[-87.32879639 266.69738770]
[-101.24884796 272.53677368]
[-116.12325287 270.63729858]
[-127.96996307 261.60839844]
[-141.75567627 267.52056885]
[-155.54141235 273.43273926]
[-169.32713318 279.34490967]
[-175.97462463 285.59881592]
[-183.35108948 285.24160767]
[-197.21945190 290.95724487]
[-207.03028870 303.36926270]
[-221.74562073 301.06527710]
[-235.61398315 306.78091431]
[-249.48236084 312.49652100]
[-263.35073853 318.21212769]
[-266.86889648 333.32510376]
[-278.62036133 343.45837402]
[-294.08642578 344.71545410]
[-307.32009888 336.61300659]
[-313.23272705 322.26657104]
[-309.55084229 307.19265747]
[-297.69012451 297.18746948]
[-282.21133423 296.09823608]
[-269.06634521 304.34375000]
[-255.19798279 298.62814331]
[-241.32960510 292.91253662]
[-227.46124268 287.19689941]
[-218.64236450 275.19372559]
[-202.93507385 277.08886719]
[-189.06669617 271.37326050]
[-175.23930359 265.55920410]
[-161.45358276 259.64703369]
[-147.66786194 253.73484802]
[-133.88214111 247.82266235]
[-132.25744629 233.01638794]
[-123.38066864 220.93090820]
[-109.55507660 214.87124634]
[-94.45353699 216.55651855]
[-82.14284515 225.63363647]
[-68.35711670 219.72145081]
[-54.57139587 213.80928040]
[-40.78567123 207.89710999]
[-26.99994850 201.98492432]
[-13.21422672 196.07275391]
[0.57149678 190.16056824]
[14.35721970 184.24839783]
[25.15060806 173.83192444]
[31.54887199 160.26496887]
[37.94713593 146.69802856]
[37.95722961 139.31291199]
[44.53398514 132.98468018]
[51.12445450 119.51004791]
[57.71492386 106.03541565]
[56.43709183 91.08994293]
[47.65485001 78.92967224]
[38.87260818 66.76940155]
[30.00415993 54.67185593]
[21.04994774 42.63764954]
[12.09573746 30.60344315]
[3.14152575 18.56923676]
[-5.81268549 6.53503227]
[-14.76689625 -5.49917316]
[-23.72110748 -17.53337860]
[-39.32151031 -21.27596664]
[-45.99135590 -35.86680984]
[-38.61410522 -50.11306381]
[-22.84895706 -53.08621979]
[-10.78958321 -42.50552750]
[-11.68690205 -26.48759079]
[-2.73269105 -14.45338440]
[6.22151995 -2.41917920]
[15.17573166 9.61502647]
[24.12994194 21.64923096]
[33.08415222 33.68343735]
[42.03836441 45.71764374]
[48.54823685 49.20496750]
[51.03288269 57.98715591]
[59.81512451 70.14743042]
[68.59736633 82.30770111]
[75.95968628 80.87721252]
[73.09870911 66.15258026]
[70.23773956 51.42794800]
[62.96679306 38.30798721]
[73.19790649 27.33874512]
[86.79178619 33.67960358]
[84.96237183 48.56697464]
[87.82334137 63.29161072]
[90.68431854 78.01624298]
[98.04663086 76.58575439]
[101.63636780 62.02162933]
[105.22610474 47.45750427]
[108.81584167 32.89337540]
[112.40557098 18.32924843]
[103.03462219 5.81049061]
[103.95457458 -9.80000973]
[114.73104858 -21.13145065]
[130.27572632 -22.83347321]
[143.24890137 -14.10243320]
[147.52500916 0.93913859]
[141.08502197 15.18907166]
[126.96970367 21.91898346]
[123.37996674 36.48311234]
[119.79022980 51.04723740]
[116.20049286 65.61136627]
[112.61076355 80.17549133]
[118.90175629 84.25879669]
[127.06855774 71.67692566]
[139.65029907 79.84391785]
[131.48374939 92.42539978]
[137.77474976 96.50870514]
[149.61529541 87.29994202]
[161.45585632 78.09117889]
[173.29640198 68.88241577]
[185.13696289 59.67365646]
[196.97750854 50.46489334]
[208.75231934 41.17220688]
[220.46076965 31.79606247]
[223.64669800 16.07253075]
[237.99134827 8.88847351]
[252.49072266 15.75488281]
[256.02215576 31.40443802]
[245.87661743 43.83213806]
[229.83691406 43.50451660]
[218.12846375 52.88066101]
[214.87463379 59.51033020]
[206.18627930 62.30544662]
[194.34571838 71.51420593]
[182.50517273 80.72296906]
[170.66461182 89.93173218]
[158.82406616 99.14049530]
[146.98350525 108.34925842]
[152.10267639 122.44869232]
[167.09320068 121.91572571]
[182.08374023 121.38276672]
[197.07426453 120.84980011]
[212.06062317 120.21030426]
[227.04206848 119.46430969]
[242.02349854 118.71830750]
[257.00494385 117.97231293]
[271.98638916 117.22631073]
[287.50521851 110.39972687]
[298.36105347 123.42227936]
[288.85260010 137.45887756]
[272.73239136 132.20774841]
[257.75094604 132.95375061]
[242.76950073 133.69975281]
[227.78807068 134.44573975]
[212.80662537 135.19174194]
[206.28724670 138.66125488]
[197.60722351 135.84033203]
[182.61669922 136.37329102]
[167.62617493 136.90625000]
[152.63563538 137.43922424]
[113.20104980 151.89419556]
[81.34778595 138.18969727]
[71.18955994 112.62588501]
[64.59909058 126.10051727]
[58.00861740 139.57514954]
[51.51408768 153.09628296]
[45.11582565 166.66323853]
[38.71755981 180.23019409]
[50.83691025 171.39155579]
[63.93576813 164.08267212]
[78.92190552 164.72746277]
[91.34455872 173.13446045]
[97.51432800 186.80683899]
[95.59882355 201.68403625]
[86.16694641 213.34764099]
[72.01918793 218.33372498]
[61.73028946 207.41865540]
[65.52668762 221.93028259]
[69.32308960 236.44190979]
[73.11949158 250.95353699]
[86.47705078 258.96685791]
[90.12042236 273.73779297]
[82.39863586 286.42279053]
[86.19503021 300.93441772]
[89.99143219 315.44607544]
[93.78783417 329.95770264]
[97.58422852 344.46932983]
[110.82837677 357.26773071]
[105.52042389 373.99798584]
[109.52272034 388.45419312]
[113.52501678 402.91040039]
[117.52731323 417.36657715]
[132.10603333 422.68078613]
[140.74893188 435.56796265]
[140.13262939 451.07281494]
[130.49411011 463.23333740]
[115.53958130 467.37359619]
[101.01936340 461.90158081]
[92.51678467 448.92138672]
[93.30124664 433.42413330]
[103.07112122 421.36889648]
[99.06882477 406.91268921]
[95.06652832 392.45648193]
[91.06423187 378.00030518]
[80.69986725 371.77172852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 198]
[8 195]
[9 194]
[10 193]
[11 192]
[14 68]
[15 67]
[16 66]
[17 65]
[18 64]
[19 63]
[20 62]
[21 61]
[26 56]
[27 55]
[28 54]
[29 53]
[31 52]
[32 51]
[34 49]
[35 48]
[36 47]
[37 46]
[69 183]
[70 182]
[71 181]
[73 180]
[74 179]
[75 178]
[76 101]
[77 100]
[78 99]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[132 153]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[138 146]
[139 145]
[154 175]
[155 174]
[156 173]
[157 172]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
[204 219]
[205 218]
[206 217]
[207 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
