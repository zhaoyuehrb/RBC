%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGGCCCAGCUCCUCCCCCGACUCGGUCUCUCUCCCCUCCCCUCCGCCCGGCAGUUCCUCCCUCCCGCCGCCGCCUCUUCCUCGGUGAGGCGCUCUUCCAGCGGGCAGGCAGCAUGGCGGCCGUGGAGACGCGGGUGUGCGAGACAGACGGCUGCAGCAGUGAGGCCAAGCUCCAGUGUCCCACUUGCAUCAAGCUGGGCAUCCAGGGCUCGU\
) } def
/len { sequence length } bind def

/coor [
[129.13642883 301.97882080]
[112.75259399 301.27005005]
[105.41548157 286.60382080]
[114.67286682 273.06744385]
[115.32115936 258.08148193]
[115.96945190 243.09548950]
[116.61774445 228.10949707]
[117.26603699 213.12351990]
[117.91432190 198.13752747]
[118.56261444 183.15155029]
[119.21090698 168.16555786]
[116.31105804 153.44853210]
[110.02626038 139.82865906]
[103.74145508 126.20877075]
[97.45664978 112.58888245]
[97.31368256 127.58820343]
[91.61005402 141.46151733]
[81.16175079 152.22407532]
[67.46350098 158.33619690]
[52.47499847 158.92346191]
[38.34051895 153.90185547]
[27.08216095 143.98977661]
[20.31055260 130.60525513]
[18.99445152 115.66310120]
[23.32213974 101.30095673]
[32.67449188 89.57349396]
[45.71355057 82.15844727]
[60.57393265 80.11662292]
[75.12969208 83.74013519]
[87.29969025 92.51187897]
[80.05065918 79.37979889]
[72.80163574 66.24771118]
[65.55261230 53.11563110]
[52.10963440 44.77315521]
[52.73273849 29.89158821]
[45.48371124 16.75950432]
[38.23468781 3.62741971]
[30.98566055 -9.50466442]
[14.44928741 -9.65280342]
[0.32576209 -18.07315063]
[-7.57727194 -32.38533401]
[-7.18496656 -48.63588715]
[1.30086613 -62.39018250]
[-6.13664627 -75.41644287]
[-13.57415867 -88.44269562]
[-21.38397217 -101.24921417]
[-29.55959892 -113.82534790]
[-37.73522568 -126.40147400]
[-45.91085434 -138.97761536]
[-54.08648300 -151.55374146]
[-62.26211166 -164.12988281]
[-70.61811829 -176.58688354]
[-79.15277100 -188.92219543]
[-87.68741608 -201.25749207]
[-101.90219116 -208.20378113]
[-102.78091431 -223.07243347]
[-111.31556702 -235.40774536]
[-123.19635773 -235.21990967]
[-133.58738708 -240.73187256]
[-139.96350098 -250.47331238]
[-140.83868408 -261.96279907]
[-136.11097717 -272.33950806]
[-144.28660583 -284.91564941]
[-158.29528809 -292.26867676]
[-158.74516296 -307.15649414]
[-166.92079163 -319.73260498]
[-175.09642029 -332.30874634]
[-183.36245728 -344.82565308]
[-191.71846008 -357.28265381]
[-200.07446289 -369.73965454]
[-208.43048096 -382.19668579]
[-216.78648376 -394.65368652]
[-237.51669312 -394.15933228]
[-254.20904541 -406.22509766]
[-260.16021729 -425.79733276]
[-253.10658264 -444.85104370]
[-262.33770752 -456.67416382]
[-271.56884766 -468.49728394]
[-280.79998779 -480.32040405]
[-290.03112793 -492.14352417]
[-299.26226807 -503.96664429]
[-314.61505127 -502.45147705]
[-328.33935547 -509.49749756]
[-336.05584717 -522.85638428]
[-335.30218506 -538.26531982]
[-326.31887817 -550.80737305]
[-311.97244263 -556.48046875]
[-296.84082031 -553.47430420]
[-285.75241089 -542.74810791]
[-282.24551392 -527.72460938]
[-287.43914795 -513.19775391]
[-278.20800781 -501.37466431]
[-268.97686768 -489.55154419]
[-259.74572754 -477.72842407]
[-250.51460266 -465.90530396]
[-241.28346252 -454.08218384]
[-232.01936340 -456.76400757]
[-222.34796143 -456.54153442]
[-213.16111755 -453.41757202]
[-205.31132507 -447.66333008]
[-199.53259277 -439.79489136]
[-196.37187195 -430.52709961]
[-196.13722229 -420.70843506]
[-198.86799622 -411.24353027]
[-204.32946777 -403.00970459]
[-195.97346497 -390.55267334]
[-187.61746216 -378.09567261]
[-179.26144409 -365.63867188]
[-170.90544128 -353.18164062]
[-164.57218933 -349.37988281]
[-162.52029419 -340.48437500]
[-154.34466553 -327.90823364]
[-146.16903687 -315.33209229]
[-132.74511719 -308.87860107]
[-131.71046448 -293.09127808]
[-123.53484344 -280.51513672]
[-105.42758179 -277.79840088]
[-94.87982178 -262.44250488]
[-98.98026276 -243.94239807]
[-90.44561005 -231.60708618]
[-76.84129333 -225.54310608]
[-75.35211182 -209.79214478]
[-66.81746674 -197.45684814]
[-58.28281403 -185.12153625]
[-53.83299255 -183.40023804]
[-50.41495132 -178.86817932]
[-49.68597794 -172.30549622]
[-41.51034927 -159.72937012]
[-33.33472061 -147.15324402]
[-25.15909386 -134.57710266]
[-16.98346710 -122.00096893]
[-8.80783939 -109.42484283]
[-6.10226154 -108.71051025]
[-3.51581645 -106.88423920]
[-1.47240925 -103.98575592]
[-0.37386358 -100.20703125]
[-0.54790014 -95.88021088]
[6.88961220 -82.85395050]
[14.32712460 -69.82769012]
[27.95589828 -70.66283417]
[40.67639542 -65.52076721]
[49.98570633 -55.35177612]
[54.02571869 -42.10117340]
[51.95378494 -28.33729172]
[44.11774445 -16.75369072]
[51.36677170 -3.62160587]
[58.61579514 9.51047802]
[65.86482239 22.64256287]
[78.78929901 30.04574394]
[78.68469238 45.86660385]
[85.93372345 58.99868774]
[93.18274689 72.13077545]
[100.43177032 85.26285553]
[113.45803070 92.70037079]
[128.45179749 92.26809692]
[143.44557190 91.83583069]
[158.43934631 91.40355682]
[172.01080322 83.27178192]
[184.95576477 90.63909149]
[199.94953918 90.20682526]
[213.61788940 81.14546204]
[228.17687988 88.69316864]
[228.64947510 105.08550262]
[214.54949951 113.45944214]
[200.38180542 105.20059204]
[185.38803101 105.63286591]
[172.88902283 113.73372650]
[158.87161255 106.39733124]
[143.87783813 106.82959747]
[128.88406372 107.26187134]
[113.89029694 107.69413757]
[112.47918701 107.00713348]
[111.07653809 106.30408478]
[117.36133575 119.92396545]
[123.64614105 133.54385376]
[129.93093872 147.16374207]
[137.44053650 141.08941650]
[148.39814758 138.53137207]
[161.20494080 140.90748596]
[173.76458740 148.95025635]
[183.66154480 160.22190857]
[193.55850220 171.49356079]
[201.56779480 175.87437439]
[203.51544189 182.99969482]
[213.24893188 194.41281128]
[222.98243713 205.82591248]
[232.71594238 217.23901367]
[242.53141785 228.58169556]
[252.42837524 239.85334778]
[262.32534790 251.12500000]
[272.22229004 262.39666748]
[287.21640015 270.30950928]
[283.76354980 286.90814209]
[266.85775757 288.18518066]
[260.95062256 272.29360962]
[251.05368042 261.02197266]
[241.15672302 249.75030518]
[231.25976562 238.47865295]
[224.48799133 235.52792358]
[221.30282593 226.97251892]
[211.56933594 215.55941772]
[201.83583069 204.14630127]
[192.10232544 192.73320007]
[182.28684998 181.39051819]
[172.38989258 170.11886597]
[162.49293518 158.84721375]
[155.41893005 161.33886719]
[152.66062927 176.08308411]
[141.27090454 166.32218933]
[134.19689941 168.81385803]
[133.54859924 183.79983521]
[132.90031433 198.78582764]
[132.25201416 213.77180481]
[131.60372925 228.75779724]
[130.95542908 243.74377441]
[130.30714417 258.72976685]
[129.65884399 273.71575928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 217]
[5 216]
[6 215]
[7 214]
[8 213]
[9 212]
[10 211]
[11 210]
[12 176]
[13 175]
[14 174]
[15 173]
[30 153]
[31 152]
[32 151]
[33 150]
[35 148]
[36 147]
[37 146]
[38 145]
[43 139]
[44 138]
[45 137]
[46 132]
[47 131]
[48 130]
[49 129]
[50 128]
[51 127]
[52 124]
[53 123]
[54 122]
[56 120]
[57 119]
[62 116]
[63 115]
[65 113]
[66 112]
[67 111]
[68 109]
[69 108]
[70 107]
[71 106]
[72 105]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[154 171]
[155 170]
[156 169]
[157 168]
[159 166]
[160 165]
[180 206]
[181 205]
[182 204]
[184 203]
[185 202]
[186 201]
[187 200]
[188 198]
[189 197]
[190 196]
[191 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
