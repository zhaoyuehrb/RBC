%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUUCGAAUACCAGGGCAGGCCGAGCCAGCCGUGCGCCGCGCUCCAGGGCCCAGGGCGCCGCACACGCACCCACCCACCCACCCAGCCUCGCAGCGCCAUGGGCAAGAACAAGCAGCCACGCGGCCAGCAGAGGCAGGGGGGCCCGCCGGCCGCGGACGCCGCUGGGCCCGACGACAUGGAGCCGAAGAAGGGCACGG\
) } def
/len { sequence length } bind def

/coor [
[-4.44712496 518.99444580]
[8.08900070 527.23126221]
[17.68885231 538.75701904]
[23.52306175 552.57592773]
[25.08759117 567.49414062]
[22.24727249 582.22277832]
[15.24749184 595.48937988]
[4.69298887 606.14782715]
[-8.50439358 613.27728271]
[-23.20448303 616.26177979]
[-38.13728333 614.84350586]
[-52.01269531 609.14501953]
[-63.63196564 599.65856934]
[-71.99125671 587.20379639]
[-76.36839294 572.85662842]
[-76.38520050 557.85662842]
[-72.03990173 543.49902344]
[-82.60498047 554.14697266]
[-93.17005920 564.79492188]
[-97.39761353 580.04083252]
[-111.85435486 583.62579346]
[-122.41943359 594.27380371]
[-132.98451233 604.92175293]
[-139.84854126 620.42407227]
[-156.64515686 618.11975098]
[-159.08065796 601.34161377]
[-143.63247681 594.35668945]
[-133.06739807 583.70874023]
[-122.50231934 573.06072998]
[-119.03044891 558.57641602]
[-103.81802368 554.22985840]
[-93.25294495 543.58190918]
[-82.68787384 532.93389893]
[-73.81428528 520.84014893]
[-66.82747650 507.56671143]
[-59.84066391 494.29324341]
[-52.85385132 481.01980591]
[-52.51986694 473.63058472]
[-45.65270615 467.59475708]
[-38.45929718 454.43212891]
[-46.32112885 434.70315552]
[-36.92255402 415.34225464]
[-16.01353836 409.15435791]
[-9.86968231 395.47033691]
[-3.72582698 381.78628540]
[2.41802835 368.10223389]
[8.56188393 354.41818237]
[14.70573902 340.73416138]
[20.09220123 326.73464966]
[24.70515251 312.46157837]
[29.31810379 298.18850708]
[33.93105698 283.91543579]
[38.54401016 269.64236450]
[43.15695953 255.36927795]
[47.76991272 241.09620667]
[52.38286591 226.82312012]
[56.88413239 212.51443481]
[61.27344513 198.17100525]
[65.66275787 183.82757568]
[70.05207062 169.48414612]
[74.32915497 155.10685730]
[78.49375916 140.69657898]
[82.65835571 126.28630829]
[86.82295990 111.87602997]
[80.09262848 125.28134918]
[70.05607605 136.42889404]
[57.42828369 144.52449036]
[43.10884857 148.99145508]
[28.11786652 149.51153564]
[13.52328396 146.04771423]
[0.36480108 138.84671021]
[-10.42018414 128.42155457]
[-18.06336212 115.51488495]
[-22.02023888 101.04619598]
[-22.00893211 86.04619598]
[-18.03024864 71.58348846]
[-10.36762238 58.68836212]
[0.43306676 48.27946854]
[13.60239029 41.09831619]
[28.20217896 37.65648651]
[43.19235611 38.19917297]
[57.50504303 42.68771362]
[70.12062073 50.80235291]
[80.13951111 61.96376038]
[85.63520813 48.00677872]
[91.13091278 34.04980087]
[88.98773193 18.37442780]
[100.85003662 9.36693478]
[106.34573364 -4.59004498]
[111.84143829 -18.54702377]
[117.33713531 -32.50400543]
[122.83283997 -46.46098328]
[128.21929932 -60.46048355]
[133.49620056 -74.50165558]
[126.55478668 -86.04989624]
[127.52041626 -99.29396820]
[135.81675720 -109.41211700]
[148.23973083 -112.85021210]
[153.73542786 -126.80718994]
[159.23112488 -140.76417542]
[157.08795166 -156.43954468]
[168.95025635 -165.44703674]
[174.44595337 -179.40402222]
[179.83241272 -193.40351868]
[185.10931396 -207.44468689]
[190.38619995 -221.48585510]
[180.15486145 -232.86909485]
[176.39674377 -247.70605469]
[179.97546387 -262.58728027]
[190.06863403 -274.09323120]
[204.35693359 -279.57986450]
[219.55700684 -277.78643799]
[232.17597961 -269.12503052]
[239.31413269 -255.58598328]
[239.33114624 -240.28048706]
[232.22311401 -226.72561646]
[219.62341309 -218.03619385]
[204.42736816 -216.20896912]
[199.15048218 -202.16780090]
[193.87358093 -188.12663269]
[194.46372986 -180.75344849]
[188.40293884 -173.90832520]
[182.90722656 -159.95133972]
[185.44349670 -145.27426147]
[173.18811035 -135.26847839]
[167.69241333 -121.31149292]
[162.19670105 -107.35451508]
[169.55821228 -92.23748779]
[163.59497070 -76.15563965]
[147.53736877 -69.22476196]
[142.26046753 -55.18358994]
[142.85061646 -47.81041718]
[136.78982544 -40.96528244]
[131.29411316 -27.00830269]
[125.79841614 -13.05132389]
[120.30271912 0.90565574]
[114.80701447 14.86263561]
[117.34328461 29.53971291]
[105.08789062 39.54550171]
[99.59218597 53.50247955]
[94.09648895 67.45945740]
[102.97047424 79.55377197]
[111.84365845 91.64701843]
[126.80657196 90.59288025]
[141.76948547 89.53873444]
[156.73239136 88.48458862]
[170.01292419 78.86380005]
[184.87260437 85.80079651]
[186.02507019 102.15940094]
[172.28477478 111.11127472]
[157.78654480 103.44750977]
[142.82362366 104.50164795]
[127.86071014 105.55579376]
[112.89779663 106.60993195]
[101.23323822 116.04062653]
[97.06863403 130.45091248]
[92.90403748 144.86117554]
[88.73943329 159.27145386]
[89.36292267 168.39288330]
[84.39550018 173.87345886]
[80.00618744 188.21688843]
[75.61687469 202.56031799]
[71.22756195 216.90374756]
[71.70841217 226.03381348]
[66.65593719 231.43608093]
[62.04298782 245.70915222]
[57.43003464 259.98223877]
[52.81708527 274.25531006]
[48.20413208 288.52838135]
[43.59117889 302.80145264]
[38.97822952 317.07452393]
[34.36527634 331.34759521]
[47.70741653 324.49288940]
[62.36286926 327.68939209]
[71.63882446 339.47738647]
[71.29917145 354.47354126]
[61.49901581 365.82946777]
[46.71386719 368.35916138]
[33.69576263 360.90737915]
[28.38978195 346.87802124]
[22.24592781 360.56204224]
[16.10207176 374.24609375]
[9.95821667 387.93014526]
[3.81436086 401.61419678]
[-2.32949448 415.29821777]
[3.35552311 422.19812012]
[6.47256613 430.53100586]
[6.70928049 439.38113403]
[4.06818819 447.78579712]
[-1.13665354 454.83978271]
[-8.31672192 459.79315186]
[-16.67547226 462.13070679]
[-25.29666519 461.62554932]
[-32.49007416 474.78817749]
[-39.58040237 488.00662231]
[-46.56721497 501.28005981]
[-53.55402756 514.55352783]
[-60.54083633 527.82696533]
[-48.14957047 519.37377930]
[-33.83591461 514.88830566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 33]
[18 32]
[19 31]
[21 29]
[22 28]
[23 27]
[34 198]
[35 197]
[36 196]
[37 195]
[39 194]
[40 193]
[43 185]
[44 184]
[45 183]
[46 182]
[47 181]
[48 180]
[49 172]
[50 171]
[51 170]
[52 169]
[53 168]
[54 167]
[55 166]
[56 165]
[57 163]
[58 162]
[59 161]
[60 160]
[61 158]
[62 157]
[63 156]
[64 155]
[84 141]
[85 140]
[86 139]
[88 137]
[89 136]
[90 135]
[91 134]
[92 133]
[93 131]
[94 130]
[98 127]
[99 126]
[100 125]
[102 123]
[103 122]
[104 120]
[105 119]
[106 118]
[143 154]
[144 153]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
