%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGCGCGCGCGGGGCGGGGGCGCGCGGAGGGGGGGGCUGCCCCGGGGCGGCCCCCCCAGGUCGGGGCGCGGCGGGCGGCGGCGGCGGGCGCGCGUCCCGUCCAGGUCCGGAGUAACCGCCGCCGCCGCCGCCAAAGCUCGCCAACAUGGCGGACCUGGAGGCUGUGCUGGCCGAUGUCAGUUACCUGAUGGCCAUGGAGAAGAGCAAGGCGACCCCGGCCGCCCGCGCCAGCAAGAGGAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[107.81467438 227.04484558]
[121.06912231 219.75273132]
[118.23600769 205.02270508]
[115.40289307 190.29269409]
[112.56977844 175.56266785]
[109.73666382 160.83265686]
[106.90354919 146.10263062]
[92.03604126 144.11334229]
[85.43013000 157.58041382]
[78.82421875 171.04748535]
[72.21830750 184.51455688]
[65.61238861 197.98162842]
[59.00648117 211.44868469]
[67.07312775 224.59907532]
[66.72674561 240.02255249]
[58.07785797 252.79753113]
[43.88629150 258.84759521]
[28.68053055 256.24215698]
[17.31267166 245.81260681]
[13.41016102 230.88699341]
[18.21827316 216.22801208]
[30.20275879 206.51329041]
[45.53941345 204.84277344]
[52.14532471 191.37570190]
[58.75123596 177.90864563]
[65.35714722 164.44157410]
[71.96305847 150.97450256]
[78.56896973 137.50743103]
[73.36739349 132.10432434]
[58.80743408 135.71092224]
[62.96423721 121.29811096]
[57.76266098 115.89500427]
[44.05432892 121.98447418]
[30.34600067 128.07395935]
[16.63767052 134.16342163]
[2.92934179 140.25289917]
[-10.77898788 146.34237671]
[-24.48731804 152.43185425]
[-38.19564819 158.52133179]
[-51.90397644 164.61080933]
[-65.61230469 170.70027161]
[-79.32063293 176.78974915]
[-93.02896118 182.87922668]
[-102.23661041 196.44946289]
[-118.57075500 194.99081421]
[-125.22824097 180.00382996]
[-115.36040497 166.90580750]
[-99.11843872 169.17089844]
[-85.41011047 163.08142090]
[-71.70178223 156.99194336]
[-57.99345016 150.90246582]
[-44.28512192 144.81300354]
[-30.57679176 138.72352600]
[-16.86846352 132.63404846]
[-3.16013336 126.54457092]
[10.54819584 120.45510101]
[24.25652504 114.36562347]
[37.96485519 108.27614594]
[51.67318344 102.18667603]
[75.06481171 72.17003632]
[104.06459045 73.95815277]
[110.49938202 60.40848541]
[116.93416595 46.85881805]
[123.36895752 33.30915070]
[129.80374146 19.75948334]
[136.23854065 6.20981550]
[142.67332458 -7.33985186]
[149.10812378 -20.88951874]
[155.45695496 -34.47967148]
[161.71958923 -48.10976410]
[167.98222351 -61.73985291]
[167.22248840 -76.72060394]
[159.61305237 -89.64717865]
[152.00361633 -102.57376099]
[144.39418030 -115.50034332]
[136.78474426 -128.42692566]
[129.75201416 -134.21705627]
[129.16197205 -141.56579590]
[121.71689606 -154.58773804]
[114.27182007 -167.60966492]
[106.82673645 -180.63160706]
[99.38165283 -193.65353394]
[91.93657684 -206.67546082]
[84.49149323 -219.69740295]
[77.04641724 -232.71932983]
[69.60133362 -245.74127197]
[62.15625381 -258.76321411]
[54.71117401 -271.78512573]
[47.26609421 -284.80706787]
[32.28241348 -289.06466675]
[24.91754723 -302.37683105]
[29.06885719 -316.63522339]
[21.62377739 -329.65716553]
[5.49996328 -338.57434082]
[6.28661346 -356.11599731]
[-1.32282364 -369.04257202]
[-16.35923195 -373.11004639]
[-23.89213943 -386.32781982]
[-19.92177773 -400.63766479]
[-27.53121567 -413.56427002]
[-42.63921738 -418.96127319]
[-47.70282745 -434.18426514]
[-38.83767319 -447.55545044]
[-22.84434700 -448.81759644]
[-11.99155617 -437.00250244]
[-14.60463524 -421.17370605]
[-6.99519825 -408.24713135]
[7.44339466 -404.77398682]
[15.34459019 -391.77301025]
[11.60375595 -376.65200806]
[19.21319389 -363.72543335]
[30.82760429 -360.39916992]
[37.27733231 -349.71289062]
[34.64570999 -337.10226440]
[42.09078979 -324.08032227]
[56.48423004 -320.42456055]
[64.22010040 -307.32452393]
[60.28802872 -292.25216675]
[67.73310852 -279.23022461]
[75.17819214 -266.20828247]
[82.62326813 -253.18635559]
[90.06835175 -240.16441345]
[97.51342773 -227.14248657]
[104.95851135 -214.12054443]
[112.40358734 -201.09861755]
[119.84867096 -188.07667542]
[127.29375458 -175.05474854]
[134.73883057 -162.03280640]
[142.18391418 -149.01087952]
[149.71131897 -136.03636169]
[157.32075500 -123.10977936]
[164.93019104 -110.18319702]
[172.53962708 -97.25662231]
[180.14906311 -84.33003998]
[189.04631042 -91.53205872]
[199.73165894 -93.79721832]
[209.77265930 -91.09201050]
[217.09352112 -84.46392059]
[231.22467041 -89.49490356]
[245.35581970 -94.52587891]
[259.48696899 -99.55685425]
[261.19039917 -114.68496704]
[269.26034546 -127.52096558]
[282.05081177 -135.54743958]
[296.99642944 -137.21772766]
[311.12683105 -132.25378418]
[321.65713501 -121.69071198]
[335.78826904 -126.72169495]
[349.91943359 -131.75267029]
[364.05056763 -136.78364563]
[378.18170166 -141.81462097]
[392.31286621 -146.84559631]
[392.60888672 -158.04945374]
[396.28164673 -168.61026001]
[402.96969604 -177.53759766]
[412.02951050 -183.99942017]
[422.59762573 -187.39961243]
[433.67263794 -187.43289185]
[444.21035767 -184.11225891]
[453.22210693 -177.76611328]
[459.86743164 -169.00599670]
[474.23526001 -173.31477356]
[488.60308838 -177.62356567]
[492.08407593 -188.96075439]
[500.51119995 -197.13433838]
[511.71850586 -200.20420837]
[522.90173340 -197.52180481]
[531.31994629 -189.86315918]
[545.79229736 -193.80657959]
[560.26464844 -197.75001526]
[574.73699951 -201.69345093]
[589.20935059 -205.63688660]
[603.68176270 -209.58030701]
[614.83813477 -221.59976196]
[630.76306152 -217.68449402]
[635.07427979 -201.86219788]
[623.33685303 -190.40950012]
[607.62518311 -195.10794067]
[593.15283203 -191.16452026]
[578.68041992 -187.22108459]
[564.20806885 -183.27764893]
[549.73571777 -179.33421326]
[535.26336670 -175.39079285]
[527.12780762 -158.97229004]
[509.26092529 -153.64665222]
[492.91186523 -163.25575256]
[478.54403687 -158.94696045]
[464.17620850 -154.63816833]
[460.79971313 -136.00592041]
[448.34704590 -121.63195038]
[430.23025513 -115.58260345]
[411.47891235 -119.62560272]
[397.34384155 -132.71446228]
[383.21267700 -127.68347931]
[369.08154297 -122.65250397]
[354.95040894 -117.62152863]
[340.81924438 -112.59054565]
[326.68811035 -107.55957031]
[325.20220947 -92.71849060]
[317.38784790 -79.94174957]
[304.74923706 -71.79149628]
[289.76416016 -69.92930603]
[275.39822388 -74.77767181]
[264.51794434 -85.42571259]
[250.38679504 -80.39472961]
[236.25564575 -75.36375427]
[222.12451172 -70.33277893]
[218.92976379 -57.90027237]
[208.60943604 -49.16562653]
[194.45704651 -47.94711685]
[181.61231995 -55.47721863]
[175.34968567 -41.84712982]
[169.08705139 -28.21703529]
[169.15011597 -20.84491920]
[162.65779114 -14.45472908]
[156.22299194 -0.90506190]
[149.78820801 12.64460564]
[143.35340881 26.19427299]
[136.91862488 39.74393845]
[130.48384094 53.29360580]
[124.04904938 66.84327698]
[117.61425781 80.39294434]
[129.90422058 89.00365448]
[137.03100586 104.99742889]
[134.87580872 124.93273926]
[121.63356781 143.26951599]
[124.46668243 157.99954224]
[127.29979706 172.72955322]
[130.13290405 187.45957947]
[132.96601868 202.18959045]
[135.79913330 216.91961670]
[150.81292725 218.77473450]
[164.51776123 225.18038940]
[175.57099915 235.50906372]
[182.88973999 248.74880981]
[185.75697327 263.60256958]
[183.89179993 278.61511230]
[177.47695923 292.31564331]
[167.14088440 303.36196899]
[153.89622498 310.67184448]
[139.04055786 313.52911377]
[124.02926636 311.65390015]
[110.33302307 305.22985840]
[99.29364014 294.88638306]
[91.99265289 281.63684082]
[89.14532471 266.77923584]
[91.03060913 251.76922607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 231]
[3 230]
[4 229]
[5 228]
[6 227]
[7 226]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[61 222]
[62 221]
[63 220]
[64 219]
[65 218]
[66 217]
[67 216]
[68 215]
[69 213]
[70 212]
[71 211]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[92 115]
[93 114]
[95 111]
[96 110]
[99 107]
[100 106]
[138 207]
[139 206]
[140 205]
[141 204]
[147 198]
[148 197]
[149 196]
[150 195]
[151 194]
[152 193]
[161 188]
[162 187]
[163 186]
[168 183]
[169 182]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
