%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGCCCCCUCCAGCCCCCGGCUCCCGGCAGCAGAAGCAGAAGGCAGCGCCAGGGGCCGCCGCCGCCGCCGAGCUCCGCGGGGCUCGGGAGCCGGCCCCGGCGAGGAGGCGCGGAACCAUGGCCGAUGGGGGCGAGGGCGAAGACGAGAUCCAGUUCCUGCGAACUGAUGAUGAAGUGGUUCUGCAGUGCACCGCAACCAUCCACAAAGAACAACAGA\
) } def
/len { sequence length } bind def

/coor [
[127.86946106 205.53364563]
[123.05207062 191.32826233]
[118.23468781 177.12289429]
[104.80601501 170.78204346]
[99.71813965 156.44439697]
[106.46005249 142.40216064]
[101.64266968 128.19677734]
[77.95330048 117.65502167]
[72.84394073 92.23437500]
[60.03487778 84.42873383]
[47.22581863 76.62310028]
[34.41675568 68.81745911]
[21.60769653 61.01182175]
[15.02999306 60.47468948]
[10.40163803 57.19287109]
[8.54992008 52.79782867]
[-4.03207350 44.63122177]
[-16.61406708 36.46461868]
[-29.19606018 28.29801178]
[-41.77805328 20.13140869]
[-54.36005020 11.96480274]
[-69.30551910 10.68697166]
[-83.09124756 16.59914970]
[-96.87696838 22.51132584]
[-110.66268921 28.42350388]
[-124.44841003 34.33568192]
[-138.23413086 40.24785614]
[-147.86753845 52.79808044]
[-162.61413574 50.70352173]
[-176.39985657 56.61569977]
[-190.18557739 62.52787399]
[-196.83306885 68.78176880]
[-204.20953369 68.42456818]
[-218.07791138 74.14018250]
[-220.50733948 83.23734283]
[-226.75415039 90.09791565]
[-235.32664490 93.27124023]
[-244.26196289 92.16537476]
[-251.57527161 87.15323639]
[-265.67471313 92.27240753]
[-273.74160767 106.13980103]
[-289.63357544 108.33637238]
[-301.15966797 97.17710114]
[-299.47802734 81.22242737]
[-285.87866211 72.71141052]
[-270.79388428 78.17297363]
[-256.69445801 73.05380249]
[-244.82966614 56.16146851]
[-223.79353333 60.27181625]
[-209.92515564 54.55619812]
[-196.09776306 48.74215317]
[-182.31204224 42.82997513]
[-168.52630615 36.91779709]
[-159.87895203 24.79045296]
[-144.14631653 26.46213531]
[-130.36059570 20.54995728]
[-116.57486725 14.63778019]
[-102.78914642 8.72560310]
[-89.00341797 2.81342626]
[-75.21769714 -3.09875107]
[-70.29946899 -17.26953125]
[-77.45841217 -30.45093918]
[-84.61735535 -43.63234711]
[-91.77629852 -56.81375885]
[-99.39907074 -69.73248291]
[-107.47603607 -82.37220001]
[-115.55300903 -95.01192474]
[-123.62998199 -107.65164185]
[-130.88237000 -113.19268799]
[-131.73043823 -120.52893829]
[-139.62692261 -133.28219604]
[-147.52340698 -146.03546143]
[-160.89820862 -147.58805847]
[-170.79389954 -156.42944336]
[-173.74903870 -169.16664124]
[-168.90350342 -181.10147095]
[-176.61790466 -193.96568298]
[-184.33230591 -206.82991028]
[-199.40132141 -210.77484131]
[-207.04156494 -223.93087769]
[-203.18780518 -238.27256775]
[-210.90220642 -251.13677979]
[-218.61660767 -264.00100708]
[-226.33100891 -276.86520386]
[-234.04541016 -289.72943115]
[-241.75979614 -302.59365845]
[-248.85174561 -308.33862305]
[-249.49093628 -315.69601440]
[-257.02169800 -328.66857910]
[-264.55245972 -341.64117432]
[-277.73358154 -352.30389404]
[-271.13647461 -367.92163086]
[-254.30281067 -365.90576172]
[-251.57986450 -349.17190552]
[-244.04911804 -336.19934082]
[-236.51835632 -323.22677612]
[-228.89558411 -310.30804443]
[-221.18118286 -297.44381714]
[-213.46679688 -284.57962036]
[-205.75239563 -271.71539307]
[-198.03799438 -258.85119629]
[-190.32359314 -245.98696899]
[-175.85720825 -242.63146973]
[-167.85046387 -229.69522095]
[-171.46809387 -214.54429626]
[-163.75369263 -201.68008423]
[-156.03929138 -188.81587219]
[-139.56222534 -185.43112183]
[-130.45500183 -170.88839722]
[-134.77015686 -153.93193054]
[-126.87366486 -141.17868042]
[-118.97718811 -128.42543030]
[-110.99025726 -115.72861481]
[-102.91328430 -103.08889008]
[-94.83631897 -90.44917297]
[-86.75934601 -77.80944824]
[-81.07210541 -91.68948364]
[-66.71592712 -96.03690338]
[-54.28383636 -87.64386749]
[-52.94913101 -72.70336151]
[-63.69665909 -62.23958588]
[-78.59488678 -63.97270203]
[-71.43594360 -50.79129028]
[-64.27700043 -37.60988235]
[-57.11806107 -24.42847443]
[-52.38368988 -21.11412048]
[-48.74301910 -16.71748734]
[-46.42788696 -11.57737732]
[-45.56990051 -6.07735729]
[-46.19344330 -0.61719072]
[-33.61145020 7.54941416]
[-21.02945709 15.71601868]
[-8.44746304 23.88262367]
[4.13453102 32.04922867]
[16.71652412 40.21583176]
[29.41333389 48.20276260]
[42.22239304 56.00839996]
[55.03145599 63.81403732]
[67.84051514 71.61967468]
[80.64957428 79.42531586]
[88.36920929 74.26128387]
[97.34645844 71.88034058]
[106.61063385 72.53991699]
[115.16001129 76.16870117]
[122.07016754 82.37432098]
[135.85588074 76.46214294]
[149.64161682 70.54996490]
[152.94459534 55.38850403]
[164.55082703 45.08922577]
[179.99746704 43.61241531]
[193.34497070 51.52593613]
[199.46093750 65.78687286]
[195.99368286 80.91161346]
[184.27641296 91.08438110]
[168.81466675 92.39353943]
[155.55378723 84.33569336]
[141.76806641 90.24786377]
[127.98234558 96.16004181]
[128.15830994 97.79396057]
[128.23893738 99.43534851]
[142.77719116 103.12850952]
[157.31542969 106.82167053]
[171.85368347 110.51483154]
[186.41780090 114.10456085]
[201.00708008 117.59069061]
[215.59635925 121.07682037]
[230.18562317 124.56295013]
[244.77490234 128.04907227]
[253.84129333 126.99990082]
[259.54605103 131.68983459]
[274.08428955 135.38299561]
[287.53726196 127.08879852]
[302.89529419 130.81781006]
[311.04681396 144.35769653]
[307.15563965 159.67547607]
[293.53033447 167.68338013]
[278.25454712 163.63046265]
[270.39114380 149.92124939]
[255.85290527 146.22808838]
[241.28877258 142.63835144]
[226.69949341 139.15222168]
[212.11022949 135.66609192]
[197.52095032 132.17996216]
[182.93167114 128.69383240]
[175.70083618 130.19543457]
[168.16052246 125.05307770]
[153.62226868 121.35991669]
[139.08403015 117.66675568]
[124.54578400 113.97359467]
[120.73722839 119.17613220]
[115.84804535 123.37939453]
[120.66543579 137.58477783]
[134.55834961 144.62924194]
[139.24150085 159.10414124]
[132.44006348 172.30551147]
[137.25744629 186.51087952]
[142.07484436 200.71626282]
[157.09457397 199.42361450]
[171.98710632 201.76368713]
[185.88659668 207.60041809]
[197.98497009 216.59446716]
[207.57881165 228.22296143]
[214.11035156 241.80979919]
[217.19987488 256.56509399]
[216.66775513 271.63095093]
[212.54492188 286.13146973]
[205.07107544 299.22366333]
[194.68072510 310.14630127]
[181.97796631 318.26440430]
[167.70130920 323.10595703]
[152.68080139 324.38949585]
[137.78968811 322.04040527]
[123.89373016 316.19522095]
[111.80082703 307.19384766]
[102.21403503 295.55953979]
[95.69071960 281.96875000]
[92.61014557 267.21157837]
[93.15140533 252.14605713]
[97.28302765 237.64801025]
[104.76481628 224.56037903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[6 192]
[7 191]
[9 140]
[10 139]
[11 138]
[12 137]
[13 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 60]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[29 53]
[30 52]
[31 51]
[33 50]
[34 49]
[39 47]
[40 46]
[61 125]
[62 124]
[63 123]
[64 122]
[65 116]
[66 115]
[67 114]
[68 113]
[70 112]
[71 111]
[72 110]
[76 107]
[77 106]
[78 105]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[88 96]
[89 95]
[90 94]
[145 158]
[146 157]
[147 156]
[160 189]
[161 188]
[162 187]
[163 186]
[164 184]
[165 183]
[166 182]
[167 181]
[168 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
