%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGACCCAAAGGGUGCAGGACGCCUGGUCUGCCUUGUGGGUCCUGGACGGAGCCCCUACCUCUGCAAAGAUGACUUGGAGACAGGCCGUCCUGCUGUCUUGCUUCUCCGCCGUGGUGCUCCUGUCUAUGCUGAGAGAGGGAACCAGUGUAUCUGUGGGCACCAUGCAGA\
) } def
/len { sequence length } bind def

/coor [
[533.99328613 327.91232300]
[520.48730469 321.38632202]
[506.98132324 314.86035156]
[493.47534180 308.33435059]
[479.96936035 301.80838013]
[468.82092285 309.19186401]
[455.37142944 310.10015869]
[443.13632202 304.18838501]
[435.36672974 292.90841675]
[434.18594360 279.15377808]
[420.80212402 272.38079834]
[407.41833496 265.60778809]
[394.03451538 258.83477783]
[380.00573730 263.70605469]
[366.33618164 257.02792358]
[361.32183838 242.28024292]
[347.93801880 235.50724792]
[334.55422974 228.73423767]
[321.17041016 221.96124268]
[307.78659058 215.18824768]
[294.40277100 208.41523743]
[281.01895142 201.64224243]
[267.63516235 194.86924744]
[254.18968201 188.21946716]
[240.68370056 181.69348145]
[227.17771912 175.16749573]
[213.67173767 168.64151001]
[206.25280762 168.56239319]
[199.97926331 161.86956787]
[186.59544373 155.09657288]
[173.21163940 148.32357788]
[165.79539490 148.10816956]
[159.64587402 141.30122375]
[146.38874817 134.28350830]
[132.27285767 138.89624023]
[118.72827148 131.96810913]
[113.98572540 117.13079834]
[100.72859192 110.11306763]
[86.54133606 105.24257660]
[71.76921844 102.63784790]
[56.99710083 100.03312683]
[42.20168304 97.56420898]
[27.38420868 95.23130035]
[12.56673431 92.89839935]
[-1.19772899 101.13970184]
[-16.17193413 95.38185883]
[-20.86895370 80.04179382]
[-11.68563461 66.88709259]
[4.33336544 66.00891113]
[14.89964104 78.08092499]
[29.71711540 80.41382599]
[44.53458786 82.74673462]
[51.65823364 80.67293549]
[59.60182571 85.26100922]
[74.37393951 87.86573792]
[89.14605713 90.47045898]
[92.89605713 83.97526550]
[78.22388458 80.85640717]
[76.65632629 65.93853760]
[90.35974121 59.83800507]
[100.39605713 70.98488617]
[104.14605713 64.48969269]
[94.50424194 52.99902725]
[84.86242676 41.50836182]
[69.27559662 36.41102982]
[66.16183472 20.31020737]
[78.72431183 9.76903820]
[94.03982544 15.63137531]
[96.35309601 31.86654854]
[105.99491119 43.35721588]
[115.63672638 54.84788132]
[120.05303955 71.75202179]
[116.85950470 86.65635681]
[107.74632263 96.85593414]
[121.00344849 103.87366486]
[135.94000244 99.45358276]
[149.28465271 106.75941467]
[153.40647888 121.02637482]
[166.66360474 128.04409790]
[179.98463440 134.93975830]
[193.36845398 141.71275330]
[206.75225830 148.48576355]
[220.19772339 155.13552856]
[233.70370483 161.66151428]
[247.20968628 168.18750000]
[260.71566772 174.71348572]
[269.84243774 175.63725281]
[274.40814209 181.48542786]
[287.79196167 188.25842285]
[301.17578125 195.03143311]
[314.55960083 201.80442810]
[327.94338989 208.57742310]
[341.32720947 215.35043335]
[354.71102905 222.12342834]
[368.09484863 228.89642334]
[382.94766235 224.20269775]
[396.42428589 231.26214600]
[400.80749512 245.45097351]
[414.19131470 252.22396851]
[427.57513428 258.99697876]
[440.95895386 265.76995850]
[455.88241577 257.84707642]
[472.42565918 260.34167480]
[484.11499023 272.07772827]
[486.49533081 288.30239868]
[500.00131226 294.82836914]
[513.50732422 301.35437012]
[527.01330566 307.88034058]
[540.51928711 314.40634155]
[554.25585938 320.43176270]
[568.20452881 325.94851685]
[577.37451172 326.19967651]
[582.35723877 331.69683838]
[596.20227051 337.46890259]
[610.04724121 343.24096680]
[623.89221191 349.01303101]
[637.73718262 354.78509521]
[651.58215332 360.55715942]
[665.42712402 366.32922363]
[679.27209473 372.10128784]
[693.11706543 377.87335205]
[704.54583740 367.81625366]
[719.14831543 363.73526001]
[734.01379395 366.38818359]
[746.20318604 375.19613647]
[753.33013916 388.36868286]
[754.02819824 403.26760864]
[767.87316895 409.03967285]
[781.71813965 414.81173706]
[795.56311035 420.58380127]
[809.40814209 426.35586548]
[823.25311279 432.12789917]
[837.09808350 437.89996338]
[848.83734131 428.07922363]
[863.79840088 424.85021973]
[878.54321289 428.95498657]
[889.68353271 439.45028687]
[894.65948486 453.92437744]
[892.32751465 469.05117798]
[883.22357178 481.35470581]
[869.43963623 488.00769043]
[854.14318848 487.48132324]
[840.84924316 479.89654541]
[832.61254883 466.99627686]
[831.32598877 451.74493408]
[817.48101807 445.97290039]
[803.63604736 440.20083618]
[789.79107666 434.42877197]
[775.94610596 428.65670776]
[762.10113525 422.88464355]
[748.25616455 417.11257935]
[737.18139648 427.10333252]
[722.80798340 431.31222534]
[707.97180176 428.85299683]
[695.62420654 420.16064453]
[688.24511719 406.91537476]
[687.34497070 391.71832275]
[673.50000000 385.94625854]
[659.65502930 380.17419434]
[645.81005859 374.40213013]
[631.96508789 368.63006592]
[618.12011719 362.85800171]
[604.27514648 357.08593750]
[590.43017578 351.31387329]
[576.58520508 345.54180908]
[562.68780518 339.89718628]
[548.73913574 334.38043213]
[546.09014893 335.40280151]
[542.86926270 335.41702271]
[539.46600342 334.19708252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 106]
[5 105]
[10 101]
[11 100]
[12 99]
[13 98]
[16 95]
[17 94]
[18 93]
[19 92]
[20 91]
[21 90]
[22 89]
[23 88]
[24 86]
[25 85]
[26 84]
[27 83]
[29 82]
[30 81]
[31 80]
[33 79]
[34 78]
[37 75]
[38 74]
[39 56]
[40 55]
[41 54]
[42 52]
[43 51]
[44 50]
[62 71]
[63 70]
[64 69]
[110 167]
[111 166]
[113 165]
[114 164]
[115 163]
[116 162]
[117 161]
[118 160]
[119 159]
[120 158]
[121 157]
[127 151]
[128 150]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
