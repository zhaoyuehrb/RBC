%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAAGCAGUGAUAUAACUCUAGGUAAAUGCUAUGUCUACUAAUUAUAGUUUCUUAAUUUUCAUAGCUAUAUUAUGAAAAGAGUAAAUUGAAGAAAUGGAAACUGCAAAUUACACCAAGGUGACAGAAUUUGUUCUCACUGGCCUAUCCCAGACUCCAGAGGUCCAACUAGUCCUAUUUGUUAUAUUUCUAUCCU\
) } def
/len { sequence length } bind def

/coor [
[87.37461090 623.78607178]
[72.76678467 627.83416748]
[57.65562439 626.63891602]
[43.86587524 620.34454346]
[33.06271744 609.71124268]
[26.55068588 596.02294922]
[25.11613655 580.93261719]
[28.93229866 566.26251221]
[37.53835297 553.78405762]
[49.89508057 545.00415039]
[64.51033783 540.98291016]
[65.69312286 526.02966309]
[58.98349380 512.73187256]
[67.78488159 499.58480835]
[68.96767426 484.63150024]
[70.15045929 469.67822266]
[71.33324432 454.72491455]
[72.51603699 439.77160645]
[73.69882202 424.81832886]
[74.88161469 409.86502075]
[76.06439972 394.91174316]
[64.61137390 382.60244751]
[65.61974335 365.48107910]
[78.95317078 354.16403198]
[79.89975739 339.19393921]
[80.84634399 324.22384644]
[81.79293060 309.25372314]
[67.17572784 303.63916016]
[54.99291229 293.77136230]
[46.44386292 280.60632324]
[42.37498474 265.42547607]
[43.19593048 249.71078491]
[48.83836746 235.00022888]
[58.76151657 222.73724365]
[72.00393677 214.12902832]
[87.27668762 210.02778625]
[87.98683167 195.04460144]
[80.86075592 181.96530151]
[89.24272156 168.54690552]
[89.95286560 153.56372070]
[90.66300964 138.58055115]
[79.39891815 135.36647034]
[69.24514008 128.84324646]
[61.17679977 119.39601135]
[56.03522110 107.69715118]
[54.44364166 94.65982819]
[56.73899460 81.36710358]
[62.92671204 68.98192596]
[72.66382599 58.64564514]
[85.27309418 51.37371063]
[99.78818512 47.95817566]
[90.74311066 35.99211884]
[81.69802856 24.02605629]
[72.65295410 12.05999756]
[63.60787964 0.09393732]
[54.56280136 -11.87212276]
[45.51772690 -23.83818245]
[30.11381531 -23.67781448]
[17.71406364 -32.51520920]
[12.95205307 -46.79061508]
[17.45520210 -60.96311188]
[8.41012478 -72.92917633]
[-0.63495135 -84.89523315]
[-9.68002796 -96.86128998]
[-18.72510529 -108.82735443]
[-27.77018166 -120.79341125]
[-46.61367035 -122.67708588]
[-57.91095352 -137.47608948]
[-54.86641693 -155.52012634]
[-64.28473663 -167.19468689]
[-73.70305634 -178.86924744]
[-88.40939331 -174.91404724]
[-103.45201111 -177.28880310]
[-116.22469330 -185.58209229]
[-124.51448822 -198.35702515]
[-126.88513947 -213.40029907]
[-122.92591858 -228.10554504]
[-113.32279205 -239.92501831]
[-99.73954773 -246.81089783]
[-84.52957153 -247.57019043]
[-70.32808685 -242.07131958]
[-59.59557343 -231.26699829]
[-54.19151688 -217.02915955]
[-55.05220032 -201.82458496]
[-62.02849960 -188.28756714]
[-52.61017990 -176.61300659]
[-43.19186020 -164.93844604]
[-31.84265327 -166.21237183]
[-21.17917824 -161.79972839]
[-13.89891434 -152.69140625]
[-11.90370846 -141.08132935]
[-15.80412102 -129.83848572]
[-6.75904465 -117.87242889]
[2.28603196 -105.90637207]
[11.33110809 -93.94030762]
[20.37618446 -81.97425079]
[29.42126083 -70.00818634]
[44.28464890 -70.47474670]
[56.71979141 -61.99942017]
[61.83979034 -47.65930176]
[57.48378372 -32.88325882]
[66.52886200 -20.91720009]
[75.57393646 -8.95113945]
[84.61901855 3.01492047]
[93.66409302 14.98098087]
[102.70916748 26.94704056]
[111.75424194 38.91310120]
[126.74676514 39.38662720]
[136.52894592 28.01521492]
[146.31111145 16.64379883]
[156.09329224 5.27238512]
[165.87547302 -6.09902954]
[175.65763855 -17.47044373]
[185.43981934 -28.84185791]
[188.11466980 -50.09716415]
[207.85047913 -56.11791992]
[217.08332825 -67.93969727]
[226.31617737 -79.76148224]
[228.05857849 -96.06780243]
[243.15904236 -102.46372223]
[256.08352661 -92.36966705]
[253.53640747 -76.16953278]
[238.13795471 -70.52863312]
[228.90510559 -58.70685196]
[219.67225647 -46.88507080]
[222.18045044 -38.35014343]
[220.44807434 -29.48430824]
[214.74032593 -22.30572701]
[206.24159241 -18.50759315]
[196.81123352 -19.05968475]
[187.02905273 -7.68826962]
[177.24688721 3.68314457]
[167.46470642 15.05455875]
[157.68252563 26.42597389]
[147.90036011 37.79738998]
[138.11817932 49.16880417]
[141.32652283 55.94792938]
[152.23834229 45.65560150]
[165.39886475 52.85287857]
[162.62063599 67.59335327]
[147.74319458 69.50618744]
[150.95152283 76.28531647]
[165.94732666 75.93014526]
[180.94311523 75.57497406]
[195.93890381 75.21980286]
[206.66374207 63.61146164]
[222.45875549 63.07022095]
[233.95306396 73.91719055]
[234.32727051 89.71704102]
[223.35939026 101.09602356]
[207.55645752 101.30316925]
[196.29408264 90.21559143]
[181.29827881 90.57077026]
[166.30249023 90.92594147]
[151.30670166 91.28111267]
[149.74571228 104.87757874]
[144.78948975 117.05371094]
[137.06631470 127.01827240]
[127.37210846 134.20686340]
[116.59660339 138.31196594]
[105.64619446 139.29069519]
[104.93605042 154.27386475]
[104.22590637 169.25704956]
[111.30118561 183.40805054]
[102.97001648 195.75474548]
[102.25987244 210.73793030]
[115.82387543 215.58038330]
[127.45946503 224.04125977]
[136.22784424 235.42681885]
[141.42469788 248.80780029]
[142.63674927 263.09527588]
[139.77458191 277.12927246]
[133.07925415 289.77291870]
[123.10190582 300.00451660]
[110.65849304 307.00024414]
[96.76303101 310.20031738]
[95.81644440 325.17041016]
[94.86985779 340.14053345]
[93.92327881 355.11062622]
[103.93507385 364.12930298]
[106.87856293 377.07925415]
[101.89698029 389.17950439]
[91.01769257 396.09451294]
[89.83490753 411.04782104]
[88.65211487 426.00109863]
[87.46932983 440.95440674]
[86.28654480 455.90771484]
[85.10375214 470.86099243]
[83.92096710 485.81430054]
[82.73817444 500.76757812]
[89.36320496 515.13488770]
[80.64642334 527.21240234]
[79.46363068 542.16571045]
[93.26495361 548.43463135]
[104.08769226 559.04803467]
[110.62493896 572.72430420]
[112.08729553 587.81195068]
[108.29817200 602.48907471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 193]
[12 192]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[24 179]
[25 178]
[26 177]
[27 176]
[36 166]
[37 165]
[39 163]
[40 162]
[41 161]
[51 107]
[52 106]
[53 105]
[54 104]
[55 103]
[56 102]
[57 101]
[61 97]
[62 96]
[63 95]
[64 94]
[65 93]
[66 92]
[69 87]
[70 86]
[71 85]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[116 125]
[117 124]
[118 123]
[142 155]
[143 154]
[144 153]
[145 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
