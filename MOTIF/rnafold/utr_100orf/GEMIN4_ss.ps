%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCUAAGCGCGGCCGCCGUGGCUCCUGCGUCUCCCAUCGUGCCGUGCGUCCCGCGCCGCGUUCGAGUUCUCGGAGGGGAGGGGGCGUUAGCCCCGCGCAGCCGCCGGCGUCGCCGCCAUGGACCUAGGACCCUUGAACAUCUGUGAAGAAAUGACUAUUCUGCAUGGAGGCUUCUUGCUGGCCGAGCAGCUGUUCCACCCUAAGGCACUGGCAGAAU\
) } def
/len { sequence length } bind def

/coor [
[42.53129959 283.53347778]
[46.78713608 268.61141968]
[59.02187729 259.06726074]
[58.37947464 244.08102417]
[57.73707199 229.09478760]
[45.24188614 221.03201294]
[39.82629776 206.99151611]
[43.76271820 192.28240967]
[55.74400711 182.59970093]
[55.10160446 167.61346436]
[68.92181396 76.52483368]
[54.47054291 72.50479126]
[40.01927185 68.48474884]
[25.56800079 64.46470642]
[11.11672783 60.44466400]
[-3.39047503 56.63138962]
[-17.95065117 53.02565765]
[-32.51082611 49.41992950]
[-47.07099915 45.81419754]
[-61.63117599 42.20846558]
[-76.21672821 38.70678711]
[-90.82690430 35.30933380]
[-105.43708038 31.91188240]
[-120.04726410 28.51443100]
[-134.65744019 25.11697960]
[-139.63865662 26.63238144]
[-144.24401855 26.13918877]
[-147.77259827 24.11561775]
[-149.81408691 21.24847603]
[-164.26536560 17.22843361]
[-178.71662903 13.20839310]
[-193.16790771 9.18835163]
[-222.41667175 22.12559128]
[-237.37844849 21.05550385]
[-252.34024048 19.98541641]
[-267.30200195 18.91532898]
[-282.26379395 17.84524155]
[-284.82781982 26.11800003]
[-290.53677368 33.55516434]
[-299.06283569 38.95755005]
[-309.62615967 41.27220917]
[-321.06289673 39.75939560]
[-331.95358276 34.12803268]
[-346.89855957 35.41165543]
[-359.98599243 44.30152512]
[-373.32870483 37.68174362]
[-388.27368164 38.96536636]
[-403.21865845 40.24899292]
[-418.16363525 41.53261948]
[-433.10861206 42.81624222]
[-448.37222290 50.19583511]
[-459.68881226 37.57160568]
[-450.69067383 23.20254135]
[-434.39224243 27.87126732]
[-419.44726562 26.58764267]
[-404.50228882 25.30401611]
[-389.55731201 24.02039146]
[-374.61233521 22.73676682]
[-362.59387207 13.93871212]
[-348.18218994 20.46668053]
[-333.23721313 19.18305588]
[-332.01110840 11.78395844]
[-328.33273315 -10.41333199]
[-342.06481934 -16.44908524]
[-355.79687500 -22.48484039]
[-369.52893066 -28.52059364]
[-383.26101685 -34.55634689]
[-399.49398804 -32.22768784]
[-409.41302490 -45.28696060]
[-402.81427002 -60.29990768]
[-386.48596191 -61.82249451]
[-377.22525024 -48.28841400]
[-363.49319458 -42.25266266]
[-349.76110840 -36.21690750]
[-336.02905273 -30.18115234]
[-322.29699707 -24.14539909]
[-292.15847778 -19.37701607]
[-281.19372559 2.88345885]
[-266.23193359 3.95354676]
[-251.27014160 5.02363443]
[-236.30836487 6.09372234]
[-221.34658813 7.16380978]
[-213.78483582 -5.79072428]
[-222.07380676 -18.29244041]
[-230.36279297 -30.79415512]
[-238.65176392 -43.29587173]
[-246.94073486 -55.79758453]
[-261.85574341 -62.61479950]
[-263.13980103 -78.96360016]
[-249.47196960 -88.02574158]
[-234.91255188 -80.47887421]
[-234.43902588 -64.08656311]
[-226.15003967 -51.58484650]
[-217.86106873 -39.08312988]
[-209.57209778 -26.58141518]
[-201.28312683 -14.07969952]
[-189.14785767 -5.26292086]
[-174.69659424 -1.24287927]
[-160.24531555 2.77716231]
[-145.79405212 6.79720402]
[-131.25999451 10.50680161]
[-116.64981079 13.90425301]
[-102.03963470 17.30170441]
[-87.42945099 20.69915581]
[-72.81927490 24.09660721]
[-65.59716797 22.55099106]
[-58.02544403 27.64829063]
[-43.46527100 31.25402260]
[-28.90509415 34.85975266]
[-14.34491920 38.46548462]
[0.21525580 42.07121658]
[4.68999290 40.41951370]
[10.24958801 41.55659485]
[15.13676929 45.99339294]
[29.58804131 50.01343536]
[44.03931427 54.03347778]
[58.49058533 58.05351639]
[72.94185638 62.07355881]
[86.80004883 56.33330917]
[94.17604828 43.27211761]
[94.22482300 27.45098495]
[107.22045898 20.17344856]
[114.59645844 7.11225748]
[107.30622864 -6.48392105]
[108.54672241 -21.86133003]
[117.92210388 -34.11309433]
[132.44071960 -39.32971954]
[147.46974182 -35.84660339]
[158.21345520 -24.77519035]
[161.24357605 -9.64833069]
[155.59321594 4.70704985]
[143.06538391 13.71020126]
[127.65764618 14.48825169]
[120.28165436 27.54944229]
[120.76045990 42.43635178]
[107.23723602 50.64810944]
[99.86124420 63.70930099]
[104.44110107 69.64856720]
[116.31977844 60.48903275]
[125.47912598 72.36785126]
[113.60082245 81.52709961]
[118.18067932 87.46636963]
[132.68788147 83.65309143]
[147.19508362 79.83982086]
[161.70228577 76.02654266]
[176.20948792 72.21327209]
[190.71669006 68.39999390]
[202.09652710 57.40863037]
[216.37261963 61.65623093]
[230.87983704 57.84295654]
[245.38703918 54.02968216]
[259.89422607 50.21640778]
[266.40628052 35.99926376]
[280.55551147 29.34090424]
[295.66104126 33.38520813]
[304.59054565 46.22257233]
[303.12777710 61.79158783]
[291.96340942 72.74104309]
[276.36889648 73.90093994]
[263.70751953 64.72360992]
[249.20030212 68.53688049]
[234.69309998 72.35015869]
[220.18589783 76.16343689]
[209.84371948 86.88204193]
[194.52996826 82.90719604]
[180.02276611 86.72047424]
[165.51556396 90.53374481]
[151.00836182 94.34702301]
[136.50115967 98.16029358]
[121.99394989 101.97357178]
[121.13761902 116.94911194]
[135.11558533 122.39122772]
[149.09353638 127.83333588]
[163.07150269 133.27545166]
[176.69648743 125.60123444]
[192.05712891 128.53120422]
[201.90060425 140.68193054]
[201.57910156 156.31620789]
[191.24446106 168.05201721]
[175.77635193 170.34805298]
[162.47836304 162.12020874]
[157.62937927 147.25341797]
[143.65142822 141.81129456]
[129.67346191 136.36918640]
[115.69550323 130.92706299]
[107.67620087 143.60345459]
[118.58135986 153.90284729]
[129.48651123 164.20223999]
[140.39167786 174.50163269]
[156.46315002 177.76347351]
[161.41677856 193.39657593]
[150.15669250 205.31892395]
[134.26631165 201.26583862]
[130.09228516 185.40679932]
[119.18711853 175.10739136]
[108.28195953 164.80799866]
[97.37680054 154.50860596]
[90.55456543 157.62422180]
[96.78578949 171.26870728]
[103.01701355 184.91317749]
[113.15950012 195.96443176]
[105.78318024 209.02543640]
[91.08205414 206.04602051]
[89.37253571 191.14440918]
[83.14131165 177.49992371]
[76.91008759 163.85545349]
[70.08784485 166.97105408]
[70.73024750 181.95730591]
[83.49618530 190.57919312]
[88.67689514 204.89749146]
[84.48268890 219.34991455]
[72.72331238 228.45239258]
[73.36571503 243.43862915]
[74.00811768 258.42486572]
[87.01471710 266.88702393]
[92.53189087 281.39013672]
[88.43817902 296.35745239]
[76.30770111 306.03378296]
[60.80485916 306.69833374]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 214]
[4 213]
[5 212]
[9 208]
[10 207]
[11 118]
[12 117]
[13 116]
[14 115]
[15 114]
[16 111]
[17 110]
[18 109]
[19 108]
[20 107]
[21 105]
[22 104]
[23 103]
[24 102]
[25 101]
[29 100]
[30 99]
[31 98]
[32 97]
[33 82]
[34 81]
[35 80]
[36 79]
[37 78]
[43 61]
[44 60]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[119 137]
[120 136]
[122 134]
[123 133]
[142 170]
[143 169]
[144 168]
[145 167]
[146 166]
[147 165]
[149 163]
[150 162]
[151 161]
[152 160]
[171 185]
[172 184]
[173 183]
[174 182]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
