%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUGAGCUGAGCUCUUUCCCUGAAUGAAUCCAAGUAACCCUGGCCUUCUGAAAUGACCAGCAGACACACAACUGUCCAGAGGCUGCCCAAAGUAUAAACUCUGGUUCUAAAGUACCAUGUCCAGCCAAGGAAGUCCUAGUGUUGCGCUUUCUACGACGACAGUCAGUUCAGUUGCUGUGCAGGCUGGGGACUCCAAAAUCGUUAUAGCUGUCAUAA\
) } def
/len { sequence length } bind def

/coor [
[-15.60657215 725.40728760]
[-7.14349365 711.36065674]
[-7.35866404 696.36218262]
[-7.57383394 681.36370850]
[-18.40161133 671.20031738]
[-18.83348274 655.99279785]
[-8.09975243 644.70458984]
[-8.31492233 629.70611572]
[-8.53009224 614.70764160]
[-8.74526310 599.70922852]
[-8.96043301 584.71075439]
[-9.28317451 569.71423340]
[-9.71347046 554.72039795]
[-10.14376640 539.72656250]
[-24.46826744 535.27587891]
[-33.31982803 547.38580322]
[-35.21682739 563.09283447]
[-48.97377777 568.80212402]
[-57.82533646 580.91198730]
[-66.67689514 593.02191162]
[-71.14225006 609.37725830]
[-88.09455109 609.61401367]
[-93.01491547 593.38977051]
[-78.78680420 584.17034912]
[-69.93524170 572.06048584]
[-61.08368683 559.95056152]
[-59.81980515 545.10968018]
[-45.42973709 538.53424072]
[-36.57817841 526.42431641]
[-47.23486328 510.29129028]
[-50.81230545 491.57977295]
[-46.97462463 473.21041870]
[-36.52641678 457.96569824]
[-21.25617599 448.06860352]
[-3.63342071 444.85925293]
[-1.48901737 430.01333618]
[0.65538603 415.16738892]
[-1.43226540 410.87796021]
[-0.85162562 405.23217773]
[3.08015370 399.92877197]
[5.64955091 385.15048218]
[8.21894836 370.37216187]
[10.78834534 355.59387207]
[13.35774231 340.81555176]
[15.92713928 326.03726196]
[18.49653625 311.25897217]
[21.06593323 296.48065186]
[23.63533020 281.70236206]
[14.44002533 269.85134888]
[-0.51331186 268.66909790]
[-15.46664906 267.48684692]
[-30.41998672 266.30459595]
[-39.05767059 279.00445557]
[-52.89501572 285.66952515]
[-68.20984650 284.50698853]
[-80.88255310 275.82955933]
[-87.50423431 261.97137451]
[-86.29370117 246.66026306]
[-77.57656860 234.01483154]
[-63.69771576 227.43661499]
[-48.39047241 228.69512939]
[-35.77241516 237.45185852]
[-29.23773575 251.35127258]
[-14.28439999 252.53350830]
[0.66893733 253.71575928]
[15.62227440 254.89801025]
[28.50373459 247.21244812]
[34.56544495 233.49180603]
[40.62715149 219.77117920]
[46.68886185 206.05055237]
[52.65200424 192.28680420]
[58.51627350 178.48062134]
[64.38053894 164.67445374]
[70.24481201 150.86828613]
[76.10907745 137.06211853]
[81.97334290 123.25594330]
[62.63767624 94.52905273]
[83.39051819 56.99927902]
[76.17175293 43.85053635]
[68.95299530 30.70178986]
[61.73423004 17.55304527]
[54.51546860 4.40430164]
[47.29670715 -8.74444294]
[39.61113739 -21.62590218]
[31.46863937 -34.22351074]
[23.32614136 -46.82111740]
[7.82362700 -49.89480972]
[-0.89531636 -63.07645035]
[2.34210610 -78.54560089]
[15.61518860 -87.12469482]
[31.04924774 -83.72389984]
[39.48752975 -70.36085510]
[35.92375183 -54.96361542]
[44.06624603 -42.36600876]
[52.20874405 -29.76840019]
[57.83130264 -43.67475891]
[72.16666412 -48.09035492]
[84.63930511 -39.75769806]
[86.04788208 -24.82398033]
[75.35324860 -14.30614185]
[60.44545364 -15.96320438]
[67.66421509 -2.81445980]
[74.88297272 10.33428478]
[82.10173798 23.48302841]
[89.32049561 36.63177490]
[96.53926086 49.78051758]
[103.98992157 50.63933945]
[103.95870972 35.63937378]
[102.48218536 20.71222115]
[115.78730774 13.78592587]
[127.16811371 23.55717850]
[122.33433533 37.75749207]
[118.89125824 52.35698700]
[126.34192657 53.21580887]
[136.36288452 42.05424881]
[146.38383484 30.89268875]
[141.73417664 16.32121468]
[144.98095703 1.47684872]
[155.15438843 -9.67516994]
[169.44830322 -14.20730400]
[183.99356079 -10.99783802]
[194.01452637 -22.15939713]
[197.47656250 -37.59717178]
[211.73655701 -41.89857483]
[221.75750732 -53.06013107]
[231.77847290 -64.22169495]
[241.79942322 -75.38324738]
[240.54057312 -92.83415222]
[252.06750488 -105.54396057]
[268.88253784 -105.97289276]
[278.74234009 -117.27704620]
[288.60217285 -128.58120728]
[291.22552490 -144.76916504]
[306.65036011 -150.33750916]
[319.00891113 -139.55799866]
[315.58779907 -123.51967621]
[299.90631104 -118.72138977]
[290.04650879 -107.41722870]
[280.18667603 -96.11307526]
[282.85409546 -83.51046753]
[277.70056152 -71.49248505]
[266.40087891 -64.53299713]
[252.96098328 -65.36228943]
[242.94003296 -54.20073318]
[232.91906738 -43.03917313]
[222.89811707 -31.87761497]
[220.15283203 -17.23819160]
[205.17608643 -12.13843918]
[195.15512085 -0.97688019]
[199.90792847 13.13965225]
[196.93688965 27.83757591]
[186.94180298 39.14970779]
[172.53190613 43.97172546]
[157.54539490 40.91364670]
[147.52444458 52.07520676]
[137.50347900 63.23676682]
[144.14987183 76.68390656]
[159.10321045 75.50165558]
[174.05654907 74.31940460]
[187.25419617 64.58522797]
[202.17272949 71.39470673]
[203.46525574 87.74284363]
[189.80212402 96.81206512]
[175.23880005 89.27274323]
[160.28546143 90.45499420]
[145.33212280 91.63723755]
[141.93537903 108.37001038]
[133.05688477 121.48978424]
[120.82240295 129.48165894]
[107.64362335 131.85476685]
[95.77951813 129.12020874]
[89.91524506 142.92637634]
[84.05097961 156.73255920]
[78.18671417 170.53872681]
[72.32244110 184.34489441]
[66.45817566 198.15106201]
[65.98445892 207.26712036]
[60.40949249 212.11225891]
[54.34778214 225.83288574]
[48.28607178 239.55352783]
[42.22436142 253.27415466]
[48.04450607 268.99716187]
[38.41363144 284.27175903]
[35.84423447 299.05004883]
[33.27483749 313.82836914]
[30.70544052 328.60665894]
[28.13604355 343.38494873]
[25.56664658 358.16326904]
[22.99724960 372.94155884]
[20.42785263 387.71987915]
[17.85845566 402.49816895]
[15.50131226 417.31179810]
[13.35690880 432.15774536]
[11.21250629 447.00366211]
[23.55253410 452.56250000]
[33.82174301 461.59750366]
[41.05738068 473.37396240]
[44.54851151 486.89599609]
[43.90512466 500.99044800]
[39.09974670 514.40881348]
[30.47730064 525.93768311]
[18.73160553 534.50848389]
[4.85005999 539.29626465]
[5.28035641 554.29010010]
[5.71065235 569.28393555]
[9.08328438 577.76635742]
[6.03802347 584.49554443]
[6.25319386 599.49401855]
[6.46836376 614.49249268]
[6.68353415 629.49096680]
[6.89870453 644.48937988]
[17.95183754 655.46508789]
[17.95639229 670.67871094]
[7.42462254 681.14855957]
[7.63979292 696.14703369]
[7.85496283 711.14550781]
[16.71750641 724.94354248]
[8.95983410 739.39178467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 216]
[3 215]
[4 214]
[7 211]
[8 210]
[9 209]
[10 208]
[11 207]
[12 205]
[13 204]
[14 203]
[15 29]
[16 28]
[18 26]
[19 25]
[20 24]
[35 194]
[36 193]
[37 192]
[40 191]
[41 190]
[42 189]
[43 188]
[44 187]
[45 186]
[46 185]
[47 184]
[48 183]
[49 66]
[50 65]
[51 64]
[52 63]
[67 181]
[68 180]
[69 179]
[70 178]
[71 176]
[72 175]
[73 174]
[74 173]
[75 172]
[76 171]
[78 106]
[79 105]
[80 104]
[81 103]
[82 102]
[83 101]
[84 95]
[85 94]
[86 93]
[114 156]
[115 155]
[116 154]
[121 149]
[122 148]
[124 146]
[125 145]
[126 144]
[127 143]
[130 139]
[131 138]
[132 137]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
