%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGUUUCAGACUUCAGAAGGACACGGGCAGCAGACAGUGGUCAGUCCUUUCUUGGCUCUGCUGACACUCGAGCCCACAUUCCGUCACCUGCUCAGAAUCAUGCAGGUCUCCACUGCUGCCCUUGCUGUCCUCCUCUGCACCAUGGCUCUCUGCAACCAGUUCUCUGCAUCACUUGCUGCUGACACGCCGACCGCCUGCU\
) } def
/len { sequence length } bind def

/coor [
[72.71845245 92.57299805]
[79.54338837 82.83954620]
[71.22190094 70.35944366]
[62.90041733 57.87934494]
[54.57893372 45.39924622]
[46.25744629 32.91914749]
[37.93595886 20.43904877]
[29.61447334 7.95894957]
[15.52112579 0.76950443]
[14.89795685 -14.11205864]
[6.57647038 -26.59215736]
[-1.74501574 -39.07225800]
[-10.06650162 -51.55235672]
[-32.50195694 -50.58488464]
[-50.88607025 -63.25770950]
[-57.88323212 -84.32756042]
[-50.81404495 -105.23883057]
[-60.61301041 -116.59577942]
[-70.41197968 -127.95272827]
[-80.21094513 -139.30967712]
[-90.18448639 -150.51362610]
[-100.33022308 -161.56188965]
[-110.47595215 -172.61013794]
[-120.62168121 -183.65840149]
[-130.76741028 -194.70666504]
[-140.91314697 -205.75492859]
[-161.70884705 -210.91011047]
[-165.36070251 -231.21994019]
[-176.00825500 -241.78543091]
[-186.65582275 -252.35090637]
[-197.30337524 -262.91641235]
[-207.95092773 -273.48187256]
[-218.59849548 -284.04736328]
[-229.24604797 -294.61285400]
[-239.89361572 -305.17834473]
[-250.54116821 -315.74383545]
[-273.81167603 -308.70083618]
[-297.54400635 -320.43084717]
[-307.63751221 -347.22787476]
[-322.50793457 -349.19534302]
[-337.37832642 -351.16284180]
[-352.24874878 -353.13031006]
[-361.17324829 -351.15280151]
[-367.33337402 -355.24502563]
[-382.17153931 -357.44241333]
[-397.00973511 -359.63977051]
[-411.84790039 -361.83712769]
[-426.68606567 -364.03451538]
[-441.58514404 -365.77163696]
[-456.53085327 -367.04684448]
[-468.45272827 -356.67169189]
[-484.21313477 -357.84869385]
[-494.46166992 -369.87960815]
[-493.11810303 -385.62670898]
[-480.97949219 -395.74746704]
[-465.24749756 -394.23745728]
[-455.25564575 -381.99255371]
[-440.30993652 -380.71731567]
[-438.07934570 -382.42517090]
[-435.03570557 -383.34942627]
[-431.47518921 -383.17520142]
[-427.80255127 -381.70089722]
[-424.48870850 -378.87268066]
[-409.65054321 -376.67532349]
[-394.81234741 -374.47796631]
[-379.97418213 -372.28057861]
[-365.13598633 -370.08322144]
[-350.28125000 -368.00073242]
[-335.41085815 -366.03323364]
[-320.54043579 -364.06576538]
[-305.67004395 -362.09826660]
[-300.18533325 -367.21374512]
[-312.29208374 -376.06961060]
[-324.39880371 -384.92550659]
[-336.50555420 -393.78137207]
[-348.61230469 -402.63726807]
[-362.72457886 -407.72097778]
[-371.69046021 -419.74649048]
[-372.53439331 -434.72271729]
[-364.97628784 -447.67938232]
[-351.52450562 -454.31637573]
[-336.64346313 -452.43099976]
[-325.27188110 -442.64901733]
[-321.18377686 -428.21920776]
[-313.19180298 -415.52557373]
[-305.19982910 -402.83193970]
[-297.20785522 -390.13830566]
[-289.21588135 -377.44464111]
[-283.73117065 -382.56011963]
[-284.65914917 -397.53137207]
[-285.58709717 -412.50265503]
[-286.51504517 -427.47390747]
[-287.44302368 -442.44519043]
[-288.37097168 -457.41647339]
[-302.15731812 -464.18640137]
[-310.69833374 -476.95144653]
[-311.69653320 -492.27786255]
[-304.88342285 -506.04293823]
[-292.09164429 -514.54388428]
[-276.76217651 -515.49407959]
[-263.01855469 -508.63781738]
[-254.55770874 -495.81948853]
[-253.65560913 -480.48709106]
[-260.55490112 -466.76501465]
[-273.39968872 -458.34442139]
[-272.47174072 -443.37313843]
[-271.54379272 -428.40188599]
[-270.61581421 -413.43060303]
[-269.68786621 -398.45935059]
[-268.75991821 -383.48806763]
[-254.83634949 -380.03894043]
[-243.47996521 -372.17477417]
[-235.95822144 -361.22686768]
[-232.94586182 -348.83538818]
[-234.47494507 -336.70913696]
[-239.97567749 -326.39138794]
[-229.32812500 -315.82589722]
[-218.68057251 -305.26040649]
[-208.03300476 -294.69491577]
[-197.38545227 -284.12945557]
[-186.73788452 -273.56396484]
[-176.09033203 -262.99847412]
[-165.44276428 -252.43298340]
[-154.79521179 -241.86749268]
[-146.02954102 -243.34866333]
[-137.43554688 -240.58454895]
[-130.98301697 -234.07565308]
[-128.21162415 -225.19523621]
[-129.86488342 -215.90066528]
[-119.71915436 -204.85240173]
[-109.57342529 -193.80413818]
[-99.42768860 -182.75587463]
[-89.28195953 -171.70761108]
[-79.13622284 -160.65934753]
[-74.48143768 -159.56498718]
[-70.46701050 -155.53099060]
[-68.85399628 -149.10864258]
[-59.05503082 -137.75169373]
[-49.25606537 -126.39474487]
[-39.45709610 -115.03779602]
[-31.88141632 -118.09612274]
[-23.78483963 -119.29925537]
[-15.61581135 -118.57309723]
[-7.82853603 -115.95062256]
[-0.85772008 -111.57044220]
[4.90568924 -105.66950226]
[9.13642883 -98.57027435]
[11.59327030 -90.66313171]
[12.13276768 -82.38490295]
[10.71760845 -74.19471741]
[7.41909742 -66.54854584]
[2.41359711 -59.87384033]
[10.73508358 -47.39374161]
[19.05657005 -34.91364288]
[27.37805557 -22.43354416]
[40.87619400 -16.13676071]
[42.09457397 -0.36253652]
[50.41605759 12.11756229]
[58.73754501 24.59766197]
[67.05902863 37.07775879]
[75.38051605 49.55785751]
[83.70200348 62.03795624]
[92.02349091 74.51805878]
[112.01395416 73.25084686]
[129.12750244 86.88170624]
[132.99951172 110.29232025]
[144.28028870 120.17887115]
[159.75842285 123.45574951]
[164.23031616 137.66319275]
[175.51110840 147.54974365]
[186.79188538 157.43629456]
[201.89491272 153.87564087]
[216.19337463 159.90336609]
[224.18922424 173.20170593]
[222.80790710 188.65718079]
[212.58055115 200.32682800]
[197.43978882 203.72344971]
[183.20755005 197.54095459]
[175.35643005 184.15666199]
[176.90533447 168.71708679]
[165.62455750 158.83053589]
[154.34376526 148.94398499]
[139.67251587 146.37425232]
[134.39373779 131.45965576]
[123.11296082 121.57310486]
[110.56884003 129.79777527]
[115.13781738 144.08499146]
[126.71095276 154.87261963]
[123.21802521 169.35186768]
[127.78699493 183.63908386]
[141.33137512 192.23728943]
[142.91049194 208.20243835]
[131.31297302 219.28742981]
[115.43544006 216.98881531]
[107.45778656 203.06988525]
[113.49978638 188.20805359]
[108.93080902 173.92083740]
[97.68447876 164.15512085]
[100.85060120 148.65396118]
[96.28162384 134.36674500]
[83.03709412 128.29965210]
[74.04264069 117.70555115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 163]
[3 162]
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[10 155]
[11 154]
[12 153]
[13 152]
[17 140]
[18 139]
[19 138]
[20 137]
[21 134]
[22 133]
[23 132]
[24 131]
[25 130]
[26 129]
[28 124]
[29 123]
[30 122]
[31 121]
[32 120]
[33 119]
[34 118]
[35 117]
[36 116]
[39 71]
[40 70]
[41 69]
[42 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 58]
[50 57]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[166 185]
[167 184]
[169 182]
[170 181]
[171 180]
[186 200]
[187 199]
[189 197]
[190 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
