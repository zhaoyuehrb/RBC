%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUCCGAGGCCGGCCGAACUCCCGCGCUCUCCCGCCGCCUCGCCUCGCCUGGUGUCUCUCCCGACCAUGGAGGGGGUCGCGGUGGUGACGGCGGGCAGCGUAGGCGCUGCCAAAACCGAGGGAGCUGCAGCCUUGCCGCCUCCGCCUCCUGUCUCCCCGCCCGCCC\
) } def
/len { sequence length } bind def

/coor [
[229.97795105 392.45028687]
[223.00709534 379.16845703]
[216.03625488 365.88662720]
[209.06539917 352.60476685]
[197.59205627 348.69296265]
[191.68492126 337.65048218]
[195.00382996 325.15927124]
[188.28108215 311.75015259]
[181.55831909 298.34103394]
[174.83555603 284.93191528]
[168.11280823 271.52279663]
[161.39004517 258.11367798]
[149.99139404 253.98927307]
[144.29054260 242.83888245]
[147.84106445 230.41154480]
[141.36872864 216.87977600]
[129.99678040 215.49310303]
[120.62030792 208.70397949]
[115.65148163 198.11544800]
[116.43770599 186.32508850]
[122.89843750 176.28799438]
[116.93354797 162.52499390]
[110.96865082 148.76200867]
[105.00375366 134.99900818]
[99.03886414 121.23601532]
[83.65808105 112.28808594]
[80.90962219 95.40732574]
[69.40900421 85.77738190]
[57.90838623 76.14743805]
[46.40776825 66.51750183]
[30.85975075 63.59009171]
[26.06896782 49.48698425]
[14.56834984 39.85704041]
[2.97872329 30.33440781]
[-8.69891167 20.91990471]
[-20.37654495 11.50540257]
[-32.05418015 2.09090066]
[-43.73181534 -7.32360172]
[-55.40945053 -16.73810387]
[-67.08708191 -26.15260506]
[-77.86772919 -24.36482048]
[-87.64238739 -28.73665047]
[-93.26016235 -37.59286880]
[-93.05799866 -47.85850906]
[-104.37763214 -57.70056152]
[-115.69725800 -67.54261780]
[-127.01688385 -77.38467407]
[-138.33651733 -87.22673035]
[-156.47317505 -90.30155945]
[-161.57205200 -107.07547760]
[-173.07267761 -116.70541382]
[-184.66229248 -126.22805023]
[-196.33993530 -135.64254761]
[-208.01756287 -145.05705261]
[-219.69520569 -154.47155762]
[-233.99287415 -148.86157227]
[-249.17762756 -151.16787720]
[-261.16482544 -160.77011108]
[-266.72994995 -175.08529663]
[-264.37606812 -190.26274109]
[-254.73631287 -202.21977234]
[-240.40374756 -207.74002075]
[-225.23374939 -205.33856201]
[-213.30699158 -195.66137695]
[-207.83169556 -181.31158447]
[-210.28070068 -166.14918518]
[-198.60307312 -156.73469543]
[-186.92543030 -147.32019043]
[-175.24780273 -137.90568542]
[-168.03768921 -136.14846802]
[-163.44273376 -128.20603943]
[-151.94210815 -118.57609558]
[-139.84336853 -119.32460022]
[-130.17857361 -111.36074829]
[-128.49446106 -98.54635620]
[-117.17482758 -88.70429993]
[-105.85520172 -78.86224365]
[-94.53557587 -69.02018738]
[-83.21595001 -59.17813492]
[-64.03450775 -56.93050766]
[-57.67258072 -37.83024216]
[-45.99494934 -28.41573906]
[-34.31731415 -19.00123596]
[-22.63967896 -9.58673382]
[-10.96204376 -0.17223185]
[0.71559089 9.24227047]
[12.39322567 18.65677261]
[19.60334015 20.41399193]
[24.19829178 28.35642242]
[35.69890976 37.98636627]
[50.42432785 40.22497559]
[56.03771210 55.01688004]
[67.53833008 64.64682007]
[79.03894806 74.27676392]
[90.53956604 83.90670776]
[105.50782776 82.93145752]
[115.66165161 71.89063263]
[125.81547546 60.84980392]
[135.96929932 49.80897522]
[146.12312317 38.76815033]
[156.27694702 27.72732162]
[166.43077087 16.68649483]
[169.47912598 0.57316071]
[185.04513550 -4.58741903]
[197.11581421 6.51351786]
[193.27388000 22.45627975]
[177.47160339 26.84031868]
[167.31777954 37.88114548]
[157.16395569 48.92197418]
[147.01013184 59.96279907]
[136.85630798 71.00362396]
[126.70247650 82.04445648]
[116.54865265 93.08528137]
[128.50288391 84.02458191]
[143.48268127 83.24637604]
[156.31144714 91.01959229]
[162.55590820 104.65802765]
[160.05813599 119.44860077]
[149.68132019 130.28010559]
[135.01138306 133.40948486]
[121.11785126 127.75528717]
[112.80185699 115.27111816]
[118.76675415 129.03411865]
[124.73164368 142.79711914]
[130.69653320 156.56010437]
[136.66143799 170.32310486]
[154.51185608 176.57466125]
[162.03437805 193.58030701]
[154.90049744 210.40742493]
[161.37283325 223.93919373]
[176.79109192 233.97267151]
[174.79916382 251.39091492]
[181.52192688 264.80004883]
[188.24468994 278.20916748]
[194.96743774 291.61828613]
[201.69020081 305.02740479]
[208.41294861 318.43652344]
[224.01504517 328.18167114]
[222.34724426 345.63391113]
[229.31809998 358.91577148]
[236.28894043 372.19760132]
[243.25978088 385.47946167]
[257.78622437 381.50497437]
[272.82748413 380.74664307]
[287.68002319 383.23989868]
[301.64913940 388.86816406]
[314.08154297 397.36813354]
[324.39569092 408.34231567]
[332.10919189 421.27737427]
[336.86126709 435.56832886]
[338.42965698 450.54681396]
[336.74099731 465.51217651]
[331.87429810 479.76452637]
[324.05712891 492.63720703]
[313.65518188 503.52816772]
[301.15490723 511.92800903]
[287.14102173 517.44390869]
[272.26892090 519.81774902]
[257.23425293 518.93859863]
[242.74020386 514.84759521]
[229.46467590 507.73602295]
[218.02859497 497.93655396]
[208.96684265 485.90747070]
[202.70326233 472.21142578]
[199.53080750 457.48901367]
[199.59785461 442.42880249]
[202.90127563 427.73522949]
[209.28656006 414.09548950]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[15 130]
[16 129]
[21 126]
[22 125]
[23 124]
[24 123]
[25 122]
[27 95]
[28 94]
[29 93]
[30 92]
[32 90]
[33 89]
[34 87]
[35 86]
[36 85]
[37 84]
[38 83]
[39 82]
[40 81]
[44 79]
[45 78]
[46 77]
[47 76]
[48 75]
[50 72]
[51 71]
[52 69]
[53 68]
[54 67]
[55 66]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[102 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
