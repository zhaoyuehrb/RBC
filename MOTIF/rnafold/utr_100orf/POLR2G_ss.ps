%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUAGUCGCAGCAAGCGCGGAACUGGGGUUGCGGCGUCUAAGUGUUUCCGGUGGAUUCCCAGGGACUGUCGGAGGUGUGGACUCUGCCUGCCUACCUGGUCUGGGAAGAUGUUCUACCAUAUCUCCCUAGAGCACGAAAUCCUGCUGCACCCGCGCUACUUCGGCCCCAACUUGCUCAACACGGUGAAGCAGAAGCUCUUCACCGAGG\
) } def
/len { sequence length } bind def

/coor [
[206.75236511 416.44412231]
[198.05949402 400.82839966]
[193.63325500 383.50320435]
[193.77088928 365.61257935]
[198.46815491 348.33929443]
[207.41917419 332.82641602]
[220.03642273 320.10186768]
[212.18466187 307.32101440]
[204.33290100 294.54019165]
[196.48115540 281.75933838]
[183.22644043 274.96508789]
[182.59535217 259.15646362]
[174.74359131 246.37562561]
[163.05493164 243.26083374]
[156.40890503 232.67716980]
[158.83024597 220.00830078]
[151.16964722 207.11198425]
[143.50904846 194.21565247]
[135.84844971 181.31932068]
[128.18785095 168.42300415]
[120.52725983 155.52667236]
[112.86666107 142.63034058]
[80.67950439 124.47513580]
[82.19667816 98.95182037]
[67.88999176 94.44419098]
[53.58330536 89.93656158]
[39.27661896 85.42893219]
[24.96993065 80.92130280]
[10.66324425 76.41367340]
[-1.79583740 85.47333527]
[-17.02256393 85.45969391]
[-29.17777824 76.58756256]
[-33.72352600 62.42866898]
[-48.03021240 57.92104340]
[-62.37005997 53.52004242]
[-76.74227142 49.22592163]
[-91.11448669 44.93179703]
[-105.57901001 40.95970154]
[-120.12863159 37.31161118]
[-134.67825317 33.66352463]
[-149.22787476 30.01543808]
[-163.77749634 26.36734962]
[-172.59178162 34.34511948]
[-184.04541016 37.04978943]
[-195.26641846 33.92202377]
[-203.49824524 25.85028648]
[-206.77677917 14.92246151]
[-221.21133423 10.84279442]
[-235.64588928 6.76312780]
[-250.08044434 2.68346095]
[-264.51498413 -1.39620566]
[-278.94955444 -5.47587252]
[-293.38409424 -9.55553913]
[-307.81866455 -13.63520622]
[-322.25320435 -17.71487236]
[-336.68777466 -21.79454041]
[-345.79702759 -21.11711502]
[-351.30599976 -26.04389000]
[-365.67822266 -30.33801460]
[-380.05041504 -34.63213730]
[-395.87167358 -30.31706810]
[-407.32720947 -42.05175400]
[-402.63253784 -57.76455688]
[-386.61715698 -61.29149246]
[-375.75631714 -49.00435257]
[-361.38409424 -44.71022797]
[-347.01187134 -40.41610336]
[-332.60809326 -36.22909164]
[-318.17355347 -32.14942551]
[-303.73898315 -28.06975937]
[-289.30444336 -23.99009132]
[-274.86987305 -19.91042519]
[-260.43533325 -15.83075905]
[-246.00077820 -11.75109196]
[-231.56622314 -7.67142534]
[-217.13166809 -3.59175825]
[-202.69711304 0.48790839]
[-187.28691101 -9.39343834]
[-169.23817444 -4.79385090]
[-160.12940979 11.81772900]
[-145.57978821 15.46581650]
[-131.03016663 19.11390495]
[-116.48054504 22.76199150]
[-101.93092346 26.41007996]
[-98.73461151 24.92147827]
[-94.65847778 24.90708351]
[-90.40326691 26.76354980]
[-86.82035828 30.55958366]
[-72.44815063 34.85370636]
[-58.07593536 39.14783096]
[-50.76716232 38.05073166]
[-43.52258301 43.61435318]
[-29.21589661 48.12198257]
[-17.37475204 39.12613678]
[-2.32906055 38.82423019]
[10.15537453 47.54158401]
[15.17087269 62.10698700]
[29.47756004 66.61461639]
[43.78424454 71.12224579]
[58.09093094 75.62987518]
[72.39762115 80.13750458]
[86.70430756 84.64513397]
[100.18404388 78.06510162]
[105.43075562 64.01263428]
[110.67747498 49.96015930]
[115.92419434 35.90768814]
[121.17091370 21.85521889]
[118.74940491 6.22042084]
[130.44972229 -2.99652529]
[135.69642639 -17.04899597]
[140.94314575 -31.10146713]
[146.18986511 -45.15393829]
[151.43658447 -59.20640945]
[156.68330383 -73.25888062]
[149.89564514 -87.53134155]
[155.26683044 -102.39491272]
[169.61026001 -109.03130341]
[184.41621399 -103.50326538]
[190.90058899 -89.09047699]
[185.21630859 -74.34379578]
[170.73577881 -68.01216125]
[165.48905945 -53.95969391]
[160.24234009 -39.90721893]
[154.99562073 -25.85474968]
[149.74890137 -11.80227852]
[144.50218201 2.25019288]
[147.29896545 16.87986374]
[135.22338867 27.10193634]
[129.97666931 41.15440750]
[124.72994995 55.20687866]
[119.48323059 69.25935364]
[114.23651123 83.31182098]
[125.71121216 92.97263336]
[138.66421509 85.40824890]
[151.61720276 77.84387207]
[164.57020569 70.27949524]
[165.98152161 54.82673264]
[176.23150635 43.17694855]
[191.37882996 39.80971909]
[205.59902954 46.01980972]
[213.42416382 59.41932297]
[211.84530640 74.85586548]
[201.46954346 86.39376831]
[186.28659058 89.59648132]
[172.13458252 83.23249054]
[159.18159485 90.79687500]
[146.22859192 98.36125183]
[133.27558899 105.92562866]
[131.39744568 113.18666077]
[145.91943359 116.94319916]
[142.16265869 131.46513367]
[127.64113617 127.70871735]
[125.76299286 134.96974182]
[133.42358398 147.86607361]
[141.08418274 160.76240540]
[148.74478149 173.65872192]
[156.40538025 186.55505371]
[164.06597900 199.45138550]
[171.72657776 212.34771729]
[187.99145508 220.98109436]
[187.52442932 238.52386475]
[195.37619019 251.30470276]
[209.19250488 259.01312256]
[209.26199341 273.90759277]
[217.11375427 286.68841553]
[224.96549988 299.46926880]
[232.81726074 312.25012207]
[244.40275574 307.98800659]
[256.55429077 305.83724976]
[268.89044189 305.86386108]
[281.02429199 308.06549072]
[292.57550049 312.37167358]
[303.18228149 318.64587402]
[312.51269531 326.69009399]
[320.27505493 336.25082397]
[326.22705078 347.02725220]
[330.18328857 358.68069458]
[332.02105713 370.84512329]
[331.68423462 383.13876343]
[329.18484497 395.17602539]
[324.60272217 406.57971191]
[318.08300781 416.99264526]
[309.83142090 426.08901978]
[300.10791016 433.58450317]
[306.78811646 447.01489258]
[313.46829224 460.44528198]
[320.14849854 473.87564087]
[326.82870483 487.30603027]
[333.50888062 500.73638916]
[340.18908691 514.16674805]
[346.86929321 527.59716797]
[353.49301147 533.88714600]
[353.54727173 541.27758789]
[360.02676392 554.80590820]
[372.32186890 566.47924805]
[364.50836182 581.52539062]
[347.88726807 578.18237305]
[346.49841309 561.28540039]
[340.01892090 547.75708008]
[333.43890381 534.27734375]
[326.75869751 520.84698486]
[320.07852173 507.41659546]
[313.39831543 493.98620605]
[306.71813965 480.55584717]
[300.03793335 467.12545776]
[293.35772705 453.69509888]
[286.67755127 440.26470947]
[269.30697632 444.26370239]
[251.48146057 443.70114136]
[234.37950134 438.60937500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[9 165]
[10 164]
[12 162]
[13 161]
[16 159]
[17 158]
[18 157]
[19 156]
[20 155]
[21 154]
[22 153]
[24 102]
[25 101]
[26 100]
[27 99]
[28 98]
[29 97]
[33 93]
[34 92]
[35 90]
[36 89]
[37 88]
[38 84]
[39 83]
[40 82]
[41 81]
[42 80]
[47 77]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[58 67]
[59 66]
[60 65]
[103 132]
[104 131]
[105 130]
[106 129]
[107 128]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[133 148]
[134 147]
[135 146]
[136 145]
[184 207]
[185 206]
[186 205]
[187 204]
[188 203]
[189 202]
[190 201]
[191 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
