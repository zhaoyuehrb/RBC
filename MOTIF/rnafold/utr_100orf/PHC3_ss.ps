%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCAGCCCAUGUUAGUGAUGGAGGAGAGAAGAUGGCGGAAGCGGAGUGAGUGACUAGAUGAUUUAAGGACCAUAGUACAGCUAUGGAUACUGAACCAAACCCGGGAACAUCUUCUGUGUCAACAACAACCAGCAGUACCACCACCACCACCAUCACCACUUCCUCCUCUCGAAUGCAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[113.55057526 935.46350098]
[98.68629456 941.49945068]
[84.77061462 933.51611328]
[82.47845459 917.63769531]
[93.56816101 906.04467773]
[94.58081055 891.07885742]
[87.72037506 877.85827637]
[96.37166595 864.61193848]
[97.38431549 849.64617920]
[95.33343506 846.75274658]
[94.59427643 842.71557617]
[95.69191742 838.16784668]
[98.84626007 833.95416260]
[100.61560822 819.05889893]
[102.38496399 804.16357422]
[91.34458923 794.20123291]
[88.25086212 779.47393799]
[94.49532318 765.58654785]
[107.87440491 757.95068359]
[109.64375305 743.05541992]
[111.41310883 728.16015625]
[103.62850189 712.44262695]
[114.74672699 697.77648926]
[116.26425171 682.85345459]
[117.78177643 667.93041992]
[119.29930115 653.00738525]
[120.81682587 638.08435059]
[122.33435059 623.16131592]
[123.85187531 608.23828125]
[110.52601624 599.11633301]
[103.57300568 584.43701172]
[104.97330475 568.16058350]
[114.43946075 554.73114014]
[129.46884155 547.86328125]
[130.73410034 532.91674805]
[131.99937439 517.97021484]
[133.26463318 503.02368164]
[134.52990723 488.07714844]
[127.89373779 474.74258423]
[136.76751709 461.64425659]
[138.03279114 446.69769287]
[134.24026489 441.41397095]
[133.85940552 434.09277344]
[137.86627197 426.98129272]
[136.34875488 412.05825806]
[134.70524597 397.14855957]
[132.93589783 382.25329590]
[121.68583679 368.79681396]
[129.05888367 351.93420410]
[127.03821564 337.07092285]
[113.85320282 330.19390869]
[107.16680908 316.71221924]
[109.73101044 301.70294189]
[120.76904297 290.95733643]
[118.74837494 276.09405518]
[116.72769928 261.23080444]
[114.70703125 246.36752319]
[112.56090546 231.52183533]
[110.28948975 216.69480896]
[108.01807404 201.86778259]
[105.74665833 187.04075623]
[96.17131805 175.63189697]
[101.72966766 160.81922913]
[99.45825195 145.99220276]
[97.18683624 131.16517639]
[79.13643646 127.03084564]
[65.19435883 112.55340576]
[61.11625290 91.25737762]
[69.89344025 69.70765686]
[64.21176147 55.82534790]
[47.96467972 49.36886215]
[41.53034973 33.47653198]
[48.43244934 18.15111160]
[42.51710892 4.36674404]
[36.60177231 -9.41762257]
[30.68643379 -23.20199013]
[24.77109718 -36.98635864]
[18.85575867 -50.77072525]
[12.94042110 -64.55509186]
[1.13783550 -76.72617340]
[9.56598854 -91.43680573]
[26.03486443 -87.41033173]
[26.72478867 -70.47042847]
[32.64012527 -56.68606186]
[38.55546570 -42.90169525]
[44.47080231 -29.11732864]
[50.38613892 -15.33296108]
[56.30147934 -1.54859364]
[62.21681595 12.23577309]
[74.74539948 15.30028820]
[83.34456635 25.17307663]
[84.70046997 38.39109802]
[78.09407043 50.14366531]
[83.77574921 64.02597046]
[91.27147675 63.77266693]
[98.32817841 50.53624344]
[106.26291656 63.26605606]
[113.75863647 63.01274872]
[118.49016571 48.77854156]
[111.18727875 34.76271439]
[116.01367188 19.71341324]
[130.10592651 12.55911922]
[145.10336304 17.54434967]
[152.10826111 31.71145630]
[146.96475220 46.65534592]
[132.72438049 53.51007080]
[127.99284363 67.74427795]
[136.41001892 82.43536377]
[138.10682678 98.36338806]
[133.51380920 112.75397491]
[124.09954071 123.37754059]
[112.01385498 128.89375305]
[114.28527069 143.72077942]
[116.55669403 158.54780579]
[126.29449463 171.01719666]
[120.57368469 184.76934814]
[122.84510040 199.59637451]
[125.11651611 214.42340088]
[127.38793182 229.25042725]
[131.78948975 237.27995300]
[129.57029724 244.34684753]
[131.59097290 259.21011353]
[133.61164856 274.07339478]
[135.63232422 288.93667603]
[149.13845825 296.34545898]
[155.61657715 310.12542725]
[152.77201843 324.90286255]
[141.90148926 335.05026245]
[143.92216492 349.91351318]
[153.70565796 358.34057617]
[155.07234192 370.77703857]
[147.83117676 380.48391724]
[149.60054016 395.37921143]
[153.72839355 403.55282593]
[151.27178955 410.54074097]
[152.78932190 425.46377563]
[159.98759460 412.30380249]
[171.78897095 403.04486084]
[186.28387451 399.18511963]
[201.12695312 401.34906006]
[213.91653442 409.18661499]
[222.58316040 421.42953491]
[225.72453308 436.09692383]
[222.83235168 450.81546021]
[214.37460327 463.20361328]
[201.71978760 471.25689697]
[186.91552734 473.67227173]
[172.35725403 470.05889893]
[160.40055847 461.00143433]
[152.97932434 447.96295166]
[151.71406555 462.90951538]
[158.25973511 477.31314087]
[149.47644043 489.34240723]
[148.21118164 504.28894043]
[146.94590759 519.23547363]
[145.68064880 534.18200684]
[144.41537476 549.12860107]
[156.30445862 556.52081299]
[163.80885315 568.26092529]
[165.50991821 582.02362061]
[161.13188171 595.11199951]
[151.58453369 604.98614502]
[138.77491760 609.75579834]
[137.25738525 624.67883301]
[135.73986816 639.60186768]
[134.22233582 654.52490234]
[132.70481873 669.44793701]
[131.18728638 684.37097168]
[129.66976929 699.29400635]
[137.20683289 709.77850342]
[135.62203979 722.18908691]
[126.30838776 729.92950439]
[124.53903961 744.82476807]
[122.76968384 759.72003174]
[133.98764038 770.27770996]
[136.80496216 785.24151611]
[130.34722900 798.83422852]
[117.28024292 805.93292236]
[115.51088715 820.82824707]
[113.74153900 835.72351074]
[112.35009766 850.65881348]
[111.33744812 865.62463379]
[118.12545013 879.91564941]
[109.54658508 892.09155273]
[108.53394318 907.05731201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[8 182]
[9 181]
[13 180]
[14 179]
[15 178]
[19 174]
[20 173]
[21 172]
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[34 157]
[35 156]
[36 155]
[37 154]
[38 153]
[40 151]
[41 150]
[44 136]
[45 135]
[46 133]
[47 132]
[49 129]
[50 128]
[54 124]
[55 123]
[56 122]
[57 121]
[58 119]
[59 118]
[60 117]
[61 116]
[63 114]
[64 113]
[65 112]
[69 94]
[70 93]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[98 107]
[99 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
