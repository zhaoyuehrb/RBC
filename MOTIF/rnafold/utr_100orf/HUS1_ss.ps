%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGAACCACUGUUCGCGCUGCCGUGUUUCCGGGCGGGGACACUCAGGGCGCGACGCUUUUCUGUUACCCACAGAGGCCCGCCGCGGCUGCGCCAUCCGCGGCCAUGAAGUUUCGGGCCAAGAUCGUGGACGGGGCCUGUCUGAACCACUUCACACGAAUCAGUAACAUGAUAGCCAAGCUUGCCAAAACCUGCACCCUCCGCA\
) } def
/len { sequence length } bind def

/coor [
[95.88274384 273.01269531]
[88.13709259 258.55807495]
[97.01110840 244.76734924]
[97.23874664 229.76907349]
[97.46639252 214.77079773]
[97.69403839 199.77252197]
[97.92167664 184.77424622]
[87.08324432 179.80433655]
[77.54197693 173.53302002]
[69.44095612 166.21797180]
[62.87776566 158.13032532]
[57.90362167 149.54718018]
[54.52373886 140.74412537]
[52.69882584 131.98799133]
[39.27735138 138.68605042]
[25.90708923 145.48577881]
[12.58880997 152.38674927]
[-0.72946811 159.28771973]
[-14.04774666 166.18870544]
[-27.36602402 173.08967590]
[-40.68430328 179.99064636]
[-54.00258255 186.89163208]
[-56.30581665 203.64694214]
[-68.02498627 215.60990906]
[-84.40106964 218.20553589]
[-98.95056152 210.60668945]
[-112.16257477 217.70898438]
[-125.37458801 224.81129456]
[-138.58660889 231.91358948]
[-151.79861450 239.01589966]
[-165.01063538 246.11819458]
[-178.22264099 253.22050476]
[-191.43466187 260.32281494]
[-199.59660339 274.54653931]
[-215.99418640 274.31936646]
[-223.75895691 259.87496948]
[-214.90321350 246.07252502]
[-198.53695679 247.11079407]
[-185.32495117 240.00848389]
[-172.11293030 232.90618896]
[-158.90092468 225.80387878]
[-145.68890381 218.70158386]
[-132.47688293 211.59927368]
[-119.26487732 204.49697876]
[-106.05286407 197.39468384]
[-105.48987579 184.05407715]
[-98.35057068 172.64260864]
[-86.40948486 166.19841003]
[-72.73555756 166.49919128]
[-60.90355682 173.57334900]
[-47.58527756 166.67236328]
[-34.26700211 159.77139282]
[-20.94872284 152.87042236]
[-7.63044357 145.96943665]
[5.68783474 139.06846619]
[19.00611305 132.16749573]
[23.50017929 126.29721069]
[32.57928848 125.26457977]
[46.00076675 118.56652069]
[42.17662430 104.99352264]
[41.76754379 90.66949463]
[44.90894699 76.45414734]
[51.51987457 63.22749329]
[38.76309204 55.33670425]
[26.00631142 47.44591522]
[13.24953175 39.55512619]
[0.49275097 31.66433716]
[-15.38950920 33.93003082]
[-26.96402168 22.82101631]
[-25.35181046 6.85917711]
[-11.78962708 -1.71092975]
[3.31878257 3.68494868]
[8.38354015 18.90755653]
[21.14031982 26.79834557]
[33.89710236 34.68913269]
[46.65388107 42.57992172]
[59.41066360 50.47071075]
[72.04621887 42.38723373]
[70.22947693 27.49765778]
[68.41273499 12.60808182]
[66.59599304 -2.28149295]
[64.77925110 -17.17106819]
[62.96251297 -32.06064224]
[50.79975891 -41.79230499]
[49.16943359 -56.91833115]
[58.52203751 -68.45368195]
[56.70529556 -83.34326172]
[54.32505798 -98.15320587]
[51.38475037 -112.86219788]
[48.44444275 -127.57119751]
[45.50413513 -142.28019714]
[42.56382370 -156.98919678]
[39.62351608 -171.69818115]
[36.68320847 -186.40718079]
[24.18687057 -196.46804810]
[24.40551949 -212.50961304]
[37.17142487 -222.22616577]
[52.69167709 -218.16398621]
[59.06047058 -203.43923950]
[51.39220428 -189.34748840]
[54.33251190 -174.63848877]
[57.27282333 -159.92950439]
[60.21313095 -145.22050476]
[63.15343857 -130.51150513]
[66.09375000 -115.80250549]
[69.03405762 -101.09351349]
[79.41363525 -111.92237854]
[94.36491394 -110.71437836]
[102.87134552 -98.35960388]
[98.66514587 -83.96141052]
[84.84555817 -78.12882233]
[71.59487152 -85.16000366]
[73.41161346 -70.27042389]
[85.26349640 -61.32232285]
[87.31803894 -46.24805832]
[77.85208893 -33.87738419]
[79.66883087 -18.98781013]
[81.48557281 -4.09823465]
[83.30231476 10.79134083]
[85.11905670 25.68091583]
[86.93579865 40.57049179]
[108.33322906 34.89237976]
[131.95809937 37.23916626]
[154.72187805 48.39137268]
[173.30023193 67.92831421]
[184.59934998 94.17391205]
[198.57431030 88.72408295]
[212.54925537 83.27425385]
[226.52421570 77.82442474]
[240.49917603 72.37459564]
[244.55361938 40.75779343]
[257.31039429 32.86700439]
[270.06716919 24.97621346]
[282.82397461 17.08542442]
[295.58074951 9.19463634]
[305.87048340 -4.27970266]
[321.66671753 1.87783253]
[320.12265015 18.76132202]
[303.47152710 21.95141602]
[290.71475220 29.84220505]
[277.95797729 37.73299408]
[265.20120239 45.62378311]
[252.44441223 53.51457214]
[257.78802490 67.53047943]
[272.56015015 64.92575836]
[287.33227539 62.32103348]
[302.10437012 59.71631241]
[314.31222534 48.76638794]
[329.81283569 54.12020111]
[332.66049194 70.27021027]
[319.92581177 80.60266876]
[304.70910645 74.48842621]
[289.93698120 77.09314728]
[275.16488647 79.69787598]
[260.39276123 82.30259705]
[245.94900513 86.34954834]
[231.97404480 91.79937744]
[217.99908447 97.24920654]
[204.02413940 102.69903564]
[190.04917908 108.14886475]
[190.04917908 123.14886475]
[204.02413940 128.59869385]
[217.99908447 134.04852295]
[231.97404480 139.49835205]
[246.34338379 132.91824341]
[261.12753296 138.50430298]
[267.55535889 152.94239807]
[261.81332397 167.66667175]
[247.30805969 173.94148254]
[232.64530945 168.04408264]
[226.52421570 153.47331238]
[212.54925537 148.02348328]
[198.57431030 142.57365417]
[184.59934998 137.12382507]
[176.80558777 149.94010925]
[188.07380676 159.84098816]
[199.34201050 169.74186707]
[215.23153687 175.65452576]
[213.94859314 192.55987549]
[197.34877014 196.00692749]
[189.44113159 181.01008606]
[178.17292786 171.10920715]
[166.90470886 161.20831299]
[155.19754028 170.58607483]
[162.39990234 183.74380493]
[169.60224915 196.90155029]
[185.00994873 198.74073792]
[196.37107849 209.30976868]
[199.31706238 224.54461670]
[192.71510315 238.58718872]
[179.10379028 246.03782654]
[163.71696472 244.03160095]
[152.47114563 233.33995056]
[149.69061279 218.07403564]
[156.44451904 204.10389709]
[149.24215698 190.94616699]
[142.03981018 177.78842163]
[134.75984192 179.59179688]
[130.60369873 194.00451660]
[120.19991302 183.19853210]
[112.91995239 185.00189209]
[112.69230652 200.00016785]
[112.46466827 214.99844360]
[112.23702240 229.99671936]
[112.00937653 244.99497986]
[120.46077728 259.04867554]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[14 59]
[15 58]
[16 56]
[17 55]
[18 54]
[19 53]
[20 52]
[21 51]
[22 50]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[86 113]
[87 112]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
[126 160]
[127 159]
[128 158]
[129 157]
[130 156]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
[144 155]
[145 154]
[146 153]
[147 152]
[161 174]
[162 173]
[163 172]
[164 171]
[175 183]
[176 182]
[177 181]
[184 197]
[185 196]
[186 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
