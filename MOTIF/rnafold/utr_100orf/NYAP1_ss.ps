%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCUGUCUCUCCUCCUCCCUCCUCCUGCUCCGGGCGGAGCCCGGCAUGGGGGGGCCGGCGCCCGGCAGGCCAGUGGAUCCGGGACCCAGGGAGGGCCGCCCCCCGGGCCUGGUGGCACUGAGCAGGGCCCCCCAGCCCCCACCUCCUGCCCCACGAGAUGAACCUCCUCUACCGAAAAACCAAGCUGGAGUGGAGGCAGCACAAGGAAGAGGAGGCCAAGAGGAGCUCCAGUAAGGAGGUGGCCCCCGCUGGC\
UCGG\
) } def
/len { sequence length } bind def

/coor [
[243.37232971 511.88351440]
[255.16918945 502.61886597]
[269.79534912 505.94424438]
[263.97146606 492.12097168]
[258.14761353 478.29772949]
[252.32373047 464.47445679]
[237.80223083 461.27072144]
[227.83383179 449.99707031]
[226.39839172 434.83813477]
[234.25506592 421.58752441]
[228.43118286 407.76425171]
[222.60731506 393.94100952]
[216.78344727 380.11773682]
[210.95957947 366.29449463]
[205.13571167 352.47122192]
[199.31182861 338.64794922]
[187.24005127 329.92321777]
[189.01234436 314.20156860]
[183.18847656 300.37832642]
[177.36459351 286.55505371]
[171.12588501 272.91400146]
[164.47801208 259.46759033]
[157.74902344 246.06159973]
[150.93916321 232.69650269]
[144.12930298 219.33140564]
[137.31944275 205.96630859]
[130.50958252 192.60121155]
[124.69069672 188.08215332]
[123.69929504 179.03323364]
[117.05142212 165.58682251]
[110.40354919 152.14042664]
[103.75567627 138.69401550]
[97.10780334 125.24761200]
[71.59445190 98.45964813]
[60.01367950 88.92623901]
[48.43290710 79.39283752]
[36.85213470 69.85943604]
[25.21398163 60.39617920]
[13.51886559 51.00339890]
[1.82375038 41.61062241]
[-9.87136459 32.21784210]
[-27.24473953 37.49406433]
[-44.15080261 31.31692886]
[-53.85859680 16.34763908]
[-52.62476349 -1.29314685]
[-64.54343414 -10.40058422]
[-76.46209717 -19.50802231]
[-85.15196991 -22.21949768]
[-88.46886444 -28.79821205]
[-100.27661896 -38.04899597]
[-112.08437347 -47.29977798]
[-123.89212036 -56.55056381]
[-135.69987488 -65.80134583]
[-147.50762939 -75.05213165]
[-159.31538391 -84.30290985]
[-174.95039368 -86.72306061]
[-180.19734192 -100.66288757]
[-192.00509644 -109.91367340]
[-207.64010620 -112.33382416]
[-212.88706970 -126.27364349]
[-224.69480896 -135.52442932]
[-238.75193787 -140.75866699]
[-253.73442078 -141.48336792]
[-268.71691895 -142.20806885]
[-281.51449585 -132.53329468]
[-297.02139282 -136.64617920]
[-303.34204102 -151.39164734]
[-295.62774658 -165.45826721]
[-279.79629517 -168.05531311]
[-267.99221802 -157.19055176]
[-253.00971985 -156.46585083]
[-238.02723694 -155.74114990]
[-231.95379639 -169.45658875]
[-242.56039429 -180.06320190]
[-253.16700745 -190.66979980]
[-263.77359009 -201.27639771]
[-274.38021851 -211.88299561]
[-289.61529541 -209.60310364]
[-303.11383057 -216.64891052]
[-309.79614258 -230.13262939]
[-307.28738403 -244.79019165]
[-317.89398193 -255.39678955]
[-328.50057983 -266.00338745]
[-339.10720825 -276.60998535]
[-349.71380615 -287.21658325]
[-357.96768188 -291.05575562]
[-360.38351440 -298.01602173]
[-370.86117554 -308.75000000]
[-381.33883667 -319.48397827]
[-389.54574585 -323.42260742]
[-391.87728882 -330.41152954]
[-402.22451782 -341.27133179]
[-412.57171631 -352.13113403]
[-420.73043823 -356.16860962]
[-422.97735596 -363.18521118]
[-433.19259644 -374.16925049]
[-443.40783691 -385.15328979]
[-458.62207031 -392.63412476]
[-455.64529419 -409.32470703]
[-438.78295898 -411.08465576]
[-432.42379761 -395.36853027]
[-422.20855713 -384.38449097]
[-411.99331665 -373.40045166]
[-401.71191406 -362.47833252]
[-391.36471558 -351.61853027]
[-381.01748657 -340.75872803]
[-370.60485840 -329.96163940]
[-360.12719727 -319.22766113]
[-349.64953613 -308.49368286]
[-339.10720825 -297.82318115]
[-328.50057983 -287.21658325]
[-317.89398193 -276.60998535]
[-307.28738403 -266.00338745]
[-296.68078613 -255.39678955]
[-282.02322388 -257.90554810]
[-268.53952026 -251.22322083]
[-261.49368286 -237.72470093]
[-263.77359009 -222.48960876]
[-253.16700745 -211.88299561]
[-242.56039429 -201.27639771]
[-231.95379639 -190.66979980]
[-221.34719849 -180.06320190]
[-210.86186218 -162.36294556]
[-215.44403076 -147.33218384]
[-203.63627625 -138.08139038]
[-188.84584045 -136.32292175]
[-182.75431824 -121.72142029]
[-170.94656372 -112.47064209]
[-156.15612793 -110.71216583]
[-150.06459045 -96.11066437]
[-138.25685120 -86.85987854]
[-126.44908905 -77.60910034]
[-114.64134216 -68.35831451]
[-102.83358765 -59.10753250]
[-91.02583313 -49.85674667]
[-79.21808624 -40.60596466]
[-67.35466003 -31.42668724]
[-55.43599319 -22.31925011]
[-43.51732635 -13.21181202]
[-32.56068420 -18.35881615]
[-20.38327026 -18.37103653]
[-9.28574276 -13.18503094]
[-1.39066529 -3.72521305]
[1.76339436 8.26033306]
[-0.47858700 20.52272797]
[11.21652794 29.91550636]
[22.91164398 39.30828476]
[34.60675812 48.70106125]
[41.76768112 50.43383789]
[46.38553619 58.27866745]
[57.96630859 67.81207275]
[69.54708099 77.34547424]
[81.12785339 86.87887573]
[78.92277527 72.04183960]
[91.26007080 63.51006317]
[104.36380768 70.81020355]
[103.60157776 85.79182434]
[114.20817566 75.18521881]
[124.81478119 64.57862091]
[124.56414795 48.77631760]
[135.62069702 37.48347092]
[151.42475891 37.39992142]
[162.60008240 48.57524109]
[162.51652527 64.37931061]
[151.22367859 75.43585205]
[135.42138672 75.18521881]
[124.81478119 85.79182434]
[114.20817566 96.39842224]
[128.60142517 92.17533112]
[142.99465942 87.95223999]
[154.13717651 77.91011047]
[167.80233765 71.72434998]
[182.70042419 69.97875977]
[197.42536926 72.83810425]
[210.58746338 80.03250122]
[220.94445801 90.88295746]
[227.51889038 104.36542511]
[229.69026184 119.20742798]
[227.25364685 134.00820923]
[220.43901062 147.37086487]
[209.88949585 158.03425598]
[196.60076904 164.99195862]
[181.82701111 167.58734131]
[166.96253967 165.57543945]
[153.41027832 159.14614868]
[142.44924927 148.90623474]
[135.11541748 135.82608032]
[122.83481598 127.21291351]
[110.55420685 118.59973907]
[117.20207977 132.04614258]
[123.84995270 145.49255371]
[130.49783325 158.93894958]
[137.14570618 172.38536072]
[143.87469482 185.79135132]
[150.68453979 199.15644836]
[157.49440002 212.52154541]
[164.30426025 225.88664246]
[171.11412048 239.25173950]
[177.77767944 245.45359802]
[177.92440796 252.81971741]
[184.57228088 266.26614380]
[191.62319946 253.02662659]
[206.34724426 250.16258240]
[217.84683228 259.79376221]
[217.61087036 274.79190063]
[205.81401062 284.05657959]
[191.18786621 280.73120117]
[197.01173401 294.55444336]
[202.83560181 308.37771606]
[215.32394409 318.09118652]
[213.13510132 332.82409668]
[218.95896912 346.64733887]
[224.78283691 360.47061157]
[230.60670471 374.29388428]
[236.43057251 388.11712646]
[242.25445557 401.94039917]
[248.07832336 415.76364136]
[263.04843140 419.39715576]
[272.89346313 431.01300049]
[273.99783325 446.02114868]
[266.14700317 458.65057373]
[271.97085571 472.47384644]
[277.79473877 486.29711914]
[283.61859131 500.12036133]
[289.85733032 513.76141357]
[296.50518799 527.20782471]
[303.15307617 540.65423584]
[309.80093384 554.10064697]
[315.04138184 558.05017090]
[317.19958496 563.26586914]
[316.44256592 567.95324707]
[322.76358032 581.55633545]
[329.08459473 595.15948486]
[335.40560913 608.76257324]
[340.54910278 612.83758545]
[342.58065796 618.10394287]
[341.71057129 622.77160645]
[347.70104980 636.52349854]
[353.97799683 643.11639404]
[353.67971802 650.47790527]
[359.50357056 664.30120850]
[372.89364624 673.76892090]
[371.12014771 690.07189941]
[356.00750732 696.43902588]
[343.10229492 686.32031250]
[345.68032837 670.12506104]
[339.85644531 656.30181885]
[333.94915771 642.51397705]
[327.95870972 628.76208496]
[321.80249023 615.08361816]
[315.48147583 601.48046875]
[309.16046143 587.87738037]
[302.83944702 574.27423096]
[296.35452271 560.74853516]
[289.70666504 547.30212402]
[283.05877686 533.85571289]
[276.41091919 520.40930176]
[269.36001587 533.64880371]
[254.63597107 536.51281738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 224]
[4 223]
[5 222]
[6 221]
[10 217]
[11 216]
[12 215]
[13 214]
[14 213]
[15 212]
[16 211]
[18 209]
[19 208]
[20 207]
[21 201]
[22 200]
[23 198]
[24 197]
[25 196]
[26 195]
[27 194]
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[34 153]
[35 152]
[36 151]
[37 150]
[38 148]
[39 147]
[40 146]
[41 145]
[45 139]
[46 138]
[47 137]
[49 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[57 128]
[58 127]
[60 125]
[61 124]
[62 72]
[63 71]
[64 70]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[87 109]
[88 108]
[89 107]
[91 106]
[92 105]
[93 104]
[95 103]
[96 102]
[97 101]
[157 168]
[158 167]
[159 166]
[225 257]
[226 256]
[227 255]
[228 254]
[231 253]
[232 252]
[233 251]
[234 250]
[237 249]
[238 248]
[240 247]
[241 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
