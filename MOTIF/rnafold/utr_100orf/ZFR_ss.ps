%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGGUCGGAGGCGGCGGUCUGUUCUCCGCUGAGGAGGAGCGGGGCAGAGGAGGGAGGCAGCGGGUGAGAGUUCAGAGUUCAGCAGCAGCAGCCCGAGCCCAUGAUUCCCAUAUGCCCUGUAGUUUCUUUCACCUAUGUGCCCAGCCGGCUGGGGGAAGAUGCCAAAAUGGCGACCGGCAACUACUUUGGAUUCACCCACA\
) } def
/len { sequence length } bind def

/coor [
[106.55308533 426.10421753]
[118.01451874 415.46609497]
[117.09110260 400.49453735]
[116.16768646 385.52301025]
[112.61624908 379.03677368]
[115.34713745 370.31411743]
[114.65438843 355.33013916]
[113.96163177 340.34613037]
[113.26888275 325.36215210]
[104.95204926 313.00579834]
[112.04375458 298.86300659]
[111.35099792 283.87899780]
[110.65824890 268.89501953]
[109.96549988 253.91101074]
[101.64866638 241.55465698]
[108.74036407 227.41188049]
[108.04761505 212.42788696]
[106.89376068 197.47233582]
[105.27989197 182.55940247]
[103.66603088 167.64646912]
[102.05216217 152.73355103]
[100.43829346 137.82061768]
[85.09722137 134.30122375]
[72.68271637 124.91723633]
[65.28293610 111.42909241]
[52.52967834 119.32556915]
[39.77642059 127.22205353]
[27.02316284 135.11853027]
[14.26990604 143.01501465]
[1.51664889 150.91149902]
[-3.54131293 166.13636780]
[-18.64731216 171.53898621]
[-32.21332169 162.97494507]
[-33.83265686 147.01382446]
[-22.26310349 135.89964294]
[-6.37983370 138.15824890]
[6.37342358 130.26176453]
[19.12668037 122.36528015]
[31.87993813 114.46879578]
[44.63319397 106.57231140]
[57.38645172 98.67583466]
[60.48252869 83.99883270]
[52.00548172 71.62387085]
[43.52843475 59.24890900]
[35.05138779 46.87394714]
[26.57434273 34.49898529]
[18.09729767 22.12402344]
[9.62025070 9.74906063]
[1.14320469 -2.62590170]
[-11.29573631 -1.32205462]
[-23.03982353 -5.40897083]
[-31.87873840 -14.05244541]
[-36.17667770 -25.56695175]
[-35.17487335 -37.74410248]
[-29.12479973 -48.27615738]
[-37.21673965 -60.90629959]
[-45.30867767 -73.53644562]
[-53.40061569 -86.16658783]
[-62.06722260 -98.40953827]
[-71.29000092 -110.23917389]
[-80.51278687 -122.06881714]
[-93.19728851 -124.42686462]
[-100.63510132 -134.47434998]
[-99.27558136 -146.49778748]
[-108.31510162 -158.46804810]
[-117.35462189 -170.43830872]
[-126.39414215 -182.40855408]
[-135.43365479 -194.37881470]
[-150.62533569 -192.60115051]
[-164.57499695 -198.62640381]
[-173.57600403 -210.74450684]
[-175.29138184 -225.64126587]
[-169.35995483 -239.30447388]
[-178.39945984 -251.27473450]
[-187.43898010 -263.24499512]
[-202.52992249 -260.69113159]
[-217.07551575 -265.45391846]
[-227.73330688 -276.43890381]
[-232.05421448 -291.12182617]
[-229.04530334 -306.12866211]
[-219.39802551 -318.01095581]
[-205.32923889 -324.03820801]
[-190.07185364 -322.82543945]
[-177.13191223 -314.65130615]
[-169.48289490 -301.39419556]
[-168.88252258 -286.10046387]
[-175.46873474 -272.28451538]
[-166.42921448 -260.31427002]
[-157.38969421 -248.34399414]
[-142.62483215 -250.30989075]
[-128.76618958 -244.58329773]
[-119.57392883 -232.60963440]
[-117.59619141 -217.54359436]
[-123.46340179 -203.41833496]
[-114.42388153 -191.44807434]
[-105.38436127 -179.47781372]
[-96.34484863 -167.50756836]
[-87.30532837 -155.53730774]
[-70.80059052 -149.58102417]
[-68.68315125 -131.29159546]
[-59.46036911 -119.46195984]
[-50.23758698 -107.63232422]
[-47.28778839 -122.33942413]
[-34.88208771 -130.77142334]
[-20.12156105 -128.10179138]
[-11.45520592 -115.85866547]
[-13.84368515 -101.05004883]
[-25.91982079 -92.15246582]
[-40.77046967 -94.25852203]
[-32.67853165 -81.62837982]
[-24.58659363 -68.99823761]
[-16.49465561 -56.36809540]
[1.15960431 -56.15878677]
[15.28100300 -45.30162430]
[20.10438919 -27.99117851]
[13.51816654 -11.10294819]
[21.99521255 1.27201414]
[30.47225952 13.64697647]
[38.94930649 26.02193832]
[47.42635345 38.39690018]
[55.90339661 50.77186203]
[64.38044739 63.14682388]
[72.85749054 75.52178955]
[84.44844818 68.01861572]
[97.64250946 65.50630951]
[110.44144440 68.07801819]
[121.01256561 75.07761383]
[127.95101929 85.23645782]
[142.49797058 81.57775116]
[157.04492188 77.91904449]
[171.59188843 74.26033783]
[186.13883972 70.60163879]
[200.68579102 66.94293213]
[208.25000000 61.81213760]
[215.48493958 63.34172440]
[230.08650208 59.90746689]
[244.68807983 56.47320938]
[259.28964233 53.03895187]
[263.09906006 49.45402908]
[267.46646118 47.85276031]
[271.54132080 48.11496735]
[274.64465332 49.79985046]
[289.38925171 47.04360580]
[304.13385010 44.28736496]
[314.35012817 31.91774368]
[330.38769531 32.33686447]
[339.94393921 45.22321320]
[335.68807983 60.69148636]
[320.88488770 66.87574768]
[306.89010620 59.03195953]
[292.14550781 61.78820419]
[277.40090942 64.54444885]
[262.72390747 67.64051819]
[248.12232971 71.07478333]
[233.52076721 74.50904083]
[218.91918945 77.94329834]
[204.34449768 81.48988342]
[189.79754639 85.14859009]
[175.25059509 88.80729675]
[160.70362854 92.46600342]
[146.15667725 96.12471008]
[131.60972595 99.78340912]
[134.05973816 106.72245026]
[134.88749695 114.61005402]
[148.10267639 121.70645905]
[161.31785583 128.80285645]
[174.53305054 135.89926147]
[191.34799194 138.06576538]
[193.92102051 154.82331848]
[178.53062439 161.93473816]
[167.43664551 149.11445618]
[154.22145081 142.01805115]
[141.00627136 134.92164612]
[127.79109192 127.82524109]
[115.35122681 136.20674133]
[116.96508789 151.11967468]
[118.57895660 166.03260803]
[120.19282532 180.94554138]
[121.80668640 195.85845947]
[124.50150299 199.27925110]
[125.83044434 203.00526428]
[125.86563110 206.56857300]
[124.82408142 209.57298279]
[123.03160858 211.73513794]
[123.72436523 226.71913147]
[132.09074402 240.14723206]
[124.94949341 253.21826172]
[125.64224243 268.20227051]
[126.33499908 283.18624878]
[127.02774811 298.17025757]
[135.39413452 311.59835815]
[128.25288391 324.66937256]
[128.94563293 339.65338135]
[129.63838196 354.63739014]
[130.33113098 369.62136841]
[131.13923645 384.59957886]
[132.06265259 399.57113647]
[132.98606873 414.54269409]
[145.66792297 423.69171143]
[149.45178223 438.86459351]
[142.55101013 452.89718628]
[128.22393799 459.16369629]
[113.23538971 454.70529175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[6 195]
[7 194]
[8 193]
[9 192]
[11 190]
[12 189]
[13 188]
[14 187]
[16 185]
[17 184]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[42 123]
[43 122]
[44 121]
[45 120]
[46 119]
[47 118]
[48 117]
[49 116]
[55 112]
[56 111]
[57 110]
[58 109]
[59 102]
[60 101]
[61 100]
[64 98]
[65 97]
[66 96]
[67 95]
[68 94]
[73 89]
[74 88]
[75 87]
[128 162]
[129 161]
[130 160]
[131 159]
[132 158]
[133 157]
[135 156]
[136 155]
[137 154]
[138 153]
[142 152]
[143 151]
[144 150]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
