%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SH3RF3)
} def

/sequence { (\
AUGCUGCUCGGAGCGUCCUGGCUGUGCGCAUCCAAGGCGGCCGCCGCUGCUGCGCAGAGCGAGGGCGACGAGGACAGGCCAGGCGAGCGACGGCGGCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 99 0.684922676 ubox
2 76 0.061741064 ubox
2 81 0.085322414 ubox
2 85 0.019589708 ubox
2 89 0.018943555 ubox
2 92 0.005984421 ubox
2 95 0.028253242 ubox
2 98 0.759707020 ubox
3 14 0.009291428 ubox
3 41 0.003277226 ubox
3 75 0.068099222 ubox
3 79 0.244743541 ubox
3 80 0.082604906 ubox
3 84 0.031828453 ubox
3 88 0.167295782 ubox
3 91 0.008880184 ubox
3 94 0.039961551 ubox
3 97 0.828580875 ubox
3 99 0.010467427 ubox
4 13 0.009591601 ubox
4 40 0.003294617 ubox
4 73 0.027664642 ubox
4 77 0.434702272 ubox
4 78 0.214434702 ubox
4 82 0.029071000 ubox
4 83 0.029015521 ubox
4 87 0.167441611 ubox
4 93 0.039978645 ubox
4 96 0.828721461 ubox
4 98 0.010852333 ubox
5 12 0.009536494 ubox
5 39 0.003296952 ubox
5 72 0.011540069 ubox
5 76 0.454092637 ubox
5 77 0.153971698 ubox
5 81 0.032237039 ubox
5 82 0.023225171 ubox
5 85 0.080935238 ubox
5 86 0.145728609 ubox
5 89 0.032332285 ubox
5 92 0.035876783 ubox
5 95 0.827851124 ubox
6 14 0.003324155 ubox
6 38 0.003301386 ubox
6 75 0.456011409 ubox
6 79 0.020099697 ubox
6 80 0.032383060 ubox
6 84 0.164247125 ubox
6 88 0.127103042 ubox
6 91 0.019844546 ubox
6 94 0.826715782 ubox
7 13 0.003481650 ubox
7 37 0.003244283 ubox
7 72 0.476842532 ubox
7 73 0.155687015 ubox
7 78 0.020638573 ubox
7 82 0.006197312 ubox
7 83 0.164104593 ubox
7 87 0.127669769 ubox
7 93 0.821283220 ubox
8 12 0.003173514 ubox
8 71 0.504845417 ubox
8 72 0.073270830 ubox
8 73 0.081717251 ubox
8 74 0.091992408 ubox
8 77 0.014567399 ubox
8 81 0.007943849 ubox
8 82 0.157178676 ubox
8 83 0.006694290 ubox
8 86 0.128150800 ubox
8 90 0.083771669 ubox
8 92 0.162546362 ubox
8 93 0.089286032 ubox
9 70 0.511969614 ubox
9 72 0.094616073 ubox
9 73 0.093175039 ubox
9 82 0.020084523 ubox
9 85 0.128466934 ubox
9 89 0.109193136 ubox
9 92 0.802195570 ubox
10 33 0.003289603 ubox
10 69 0.508032472 ubox
10 80 0.155744516 ubox
10 84 0.126541306 ubox
10 88 0.109002176 ubox
10 91 0.813496089 ubox
11 32 0.003294620 ubox
11 79 0.155834809 ubox
12 31 0.003281796 ubox
13 29 0.003298352 ubox
13 66 0.115829756 ubox
13 79 0.014031314 ubox
13 84 0.084664400 ubox
13 88 0.807930974 ubox
14 28 0.003303038 ubox
14 65 0.114184470 ubox
14 67 0.608074292 ubox
14 70 0.006413012 ubox
14 78 0.012895945 ubox
14 83 0.082012007 ubox
14 85 0.032467605 ubox
14 87 0.774849768 ubox
14 89 0.005110052 ubox
15 27 0.003298962 ubox
15 66 0.981801529 ubox
15 69 0.011405077 ubox
15 75 0.003364504 ubox
15 84 0.064265074 ubox
15 88 0.004496283 ubox
16 26 0.003182984 ubox
16 64 0.004280241 ubox
16 65 0.982606510 ubox
16 68 0.010351955 ubox
16 74 0.003284859 ubox
16 83 0.056814633 ubox
16 86 0.036126610 ubox
16 87 0.004275368 ubox
17 63 0.003646792 ubox
17 64 0.991406111 ubox
17 65 0.003426349 ubox
17 67 0.006229607 ubox
17 82 0.055320407 ubox
17 83 0.108083568 ubox
17 85 0.036006193 ubox
18 63 0.994039804 ubox
18 64 0.003194254 ubox
18 82 0.108258944 ubox
18 83 0.004572580 ubox
19 62 0.990862344 ubox
19 81 0.107983435 ubox
19 82 0.003647538 ubox
20 60 0.004354479 ubox
20 80 0.106838066 ubox
21 60 0.994201239 ubox
21 79 0.106176781 ubox
22 59 0.994333185 ubox
22 77 0.057028315 ubox
22 78 0.089456085 ubox
23 56 0.003628520 ubox
23 58 0.990894466 ubox
23 76 0.080584538 ubox
23 77 0.059873573 ubox
24 41 0.007285772 ubox
24 55 0.004822470 ubox
24 69 0.005006965 ubox
24 75 0.086983741 ubox
25 39 0.004571401 ubox
25 40 0.006813880 ubox
25 54 0.004821441 ubox
25 56 0.994239128 ubox
25 68 0.004724958 ubox
25 74 0.079117523 ubox
25 76 0.029695432 ubox
26 38 0.012636395 ubox
26 41 0.022883001 ubox
26 44 0.003785147 ubox
26 53 0.004849895 ubox
26 55 0.997703209 ubox
26 69 0.006208580 ubox
26 75 0.032648157 ubox
27 37 0.012690797 ubox
27 39 0.049240436 ubox
27 40 0.016519733 ubox
27 43 0.003800409 ubox
27 52 0.004848276 ubox
27 54 0.997700431 ubox
27 67 0.007038501 ubox
27 70 0.005002660 ubox
28 38 0.052333838 ubox
28 41 0.003519845 ubox
28 42 0.003732046 ubox
28 50 0.004426536 ubox
28 53 0.997693740 ubox
28 66 0.007055167 ubox
28 69 0.004779507 ubox
29 37 0.052320717 ubox
29 40 0.003565759 ubox
29 49 0.004564960 ubox
29 52 0.997508193 ubox
29 65 0.006994840 ubox
30 48 0.003905809 ubox
30 51 0.884487824 ubox
31 71 0.005327178 ubox
31 74 0.035113088 ubox
32 36 0.014652658 ubox
32 40 0.006021137 ubox
32 64 0.005572077 ubox
32 70 0.005297171 ubox
32 73 0.036800693 ubox
33 39 0.006126087 ubox
33 49 0.273051030 ubox
33 52 0.012319194 ubox
33 63 0.005591862 ubox
33 72 0.036685715 ubox
34 48 0.223170072 ubox
34 51 0.022927644 ubox
35 48 0.086646622 ubox
35 51 0.038777882 ubox
36 45 0.334573872 ubox
36 47 0.065891497 ubox
36 48 0.710605334 ubox
36 50 0.040176296 ubox
36 51 0.410182225 ubox
37 44 0.334699512 ubox
37 47 0.732998593 ubox
37 50 0.583294822 ubox
38 43 0.334216288 ubox
38 46 0.736015314 ubox
38 49 0.584554643 ubox
38 67 0.026981348 ubox
38 70 0.021125250 ubox
39 45 0.735886378 ubox
39 48 0.584139443 ubox
39 66 0.025415444 ubox
39 69 0.021702108 ubox
40 44 0.724006752 ubox
40 47 0.584562366 ubox
40 66 0.033586430 ubox
41 46 0.582949842 ubox
41 64 0.023687215 ubox
41 65 0.034858038 ubox
41 73 0.006379778 ubox
42 63 0.023614207 ubox
42 64 0.034850356 ubox
42 67 0.049280319 ubox
42 70 0.010469428 ubox
42 72 0.006232882 ubox
43 60 0.004900535 ubox
43 66 0.049872002 ubox
43 69 0.010678269 ubox
44 59 0.004908738 ubox
44 65 0.049867418 ubox
45 61 0.041446290 ubox
45 64 0.049836504 ubox
45 67 0.012258392 ubox
45 70 0.004061513 ubox
46 60 0.041538463 ubox
46 66 0.012470899 ubox
46 69 0.004137782 ubox
47 57 0.010744123 ubox
47 59 0.040796695 ubox
47 63 0.026883343 ubox
47 65 0.012466651 ubox
48 56 0.018309608 ubox
48 58 0.037404096 ubox
48 61 0.042512075 ubox
48 62 0.023400980 ubox
48 64 0.011997413 ubox
48 67 0.004452579 ubox
49 55 0.024292239 ubox
49 60 0.049772596 ubox
49 66 0.005550502 ubox
50 54 0.024145369 ubox
50 57 0.027761931 ubox
50 59 0.049792068 ubox
50 63 0.006591237 ubox
50 65 0.005523086 ubox
51 56 0.026033005 ubox
51 58 0.049485302 ubox
51 61 0.010384618 ubox
51 62 0.006389161 ubox
51 64 0.005444938 ubox
52 60 0.012319600 ubox
53 59 0.012322687 ubox
53 61 0.009753200 ubox
54 60 0.009830540 ubox
55 59 0.009759489 ubox
59 66 0.080051136 ubox
59 84 0.003287492 ubox
60 65 0.080126951 ubox
60 67 0.013956049 ubox
60 70 0.008494541 ubox
60 83 0.003285908 ubox
61 66 0.013950001 ubox
61 69 0.008562410 ubox
64 80 0.073143069 ubox
65 79 0.076561476 ubox
65 84 0.040541517 ubox
65 88 0.003489048 ubox
66 78 0.076587424 ubox
66 83 0.040610389 ubox
66 85 0.039940713 ubox
66 87 0.003537123 ubox
67 84 0.122782666 ubox
67 100 0.003400571 ubox
68 99 0.003437803 ubox
69 85 0.453931764 ubox
69 89 0.015632744 ubox
69 92 0.004492551 ubox
69 98 0.003441514 ubox
70 84 0.461452826 ubox
70 88 0.015845176 ubox
70 91 0.004796563 ubox
72 80 0.755017702 ubox
73 79 0.754601943 ubox
73 100 0.103791118 ubox
74 99 0.105136759 ubox
75 98 0.104302176 ubox
77 100 0.020780301 ubox
78 84 0.305667048 ubox
78 88 0.088007272 ubox
78 94 0.060748832 ubox
78 97 0.323621050 ubox
78 99 0.027603370 ubox
79 83 0.303732942 ubox
79 87 0.088127839 ubox
79 93 0.061687265 ubox
79 96 0.324019716 ubox
79 98 0.028019992 ubox
80 92 0.061619904 ubox
80 95 0.322455056 ubox
82 100 0.354475247 ubox
83 94 0.303058586 ubox
83 97 0.098413639 ubox
83 99 0.369910109 ubox
84 92 0.096978035 ubox
84 93 0.303020797 ubox
84 95 0.004794116 ubox
84 96 0.098368853 ubox
84 98 0.371141150 ubox
85 91 0.100908701 ubox
85 94 0.006406856 ubox
85 97 0.369155096 ubox
85 100 0.008635096 ubox
86 99 0.008435348 ubox
87 94 0.385968897 ubox
87 97 0.017176037 ubox
87 99 0.005854012 ubox
88 93 0.385977063 ubox
88 95 0.067697516 ubox
88 96 0.017459660 ubox
88 98 0.006260818 ubox
89 94 0.066623172 ubox
89 97 0.006258535 ubox
89 100 0.232357016 ubox
90 99 0.235892391 ubox
91 98 0.236338907 ubox
92 97 0.235307104 ubox
92 100 0.005935428 ubox
93 99 0.006171094 ubox
94 98 0.006153934 ubox
1 99 0.9500000 lbox
2 98 0.9500000 lbox
3 97 0.9500000 lbox
4 96 0.9500000 lbox
5 95 0.9500000 lbox
6 94 0.9500000 lbox
7 93 0.9500000 lbox
9 92 0.9500000 lbox
10 91 0.9500000 lbox
13 88 0.9500000 lbox
14 87 0.9500000 lbox
15 66 0.9500000 lbox
16 65 0.9500000 lbox
17 64 0.9500000 lbox
18 63 0.9500000 lbox
19 62 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
72 80 0.9500000 lbox
73 79 0.9500000 lbox
showpage
end
%%EOF
