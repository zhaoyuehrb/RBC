%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUCCUCUCCUGGGCCGUCCUCUGAGCAGCAGACGGGGCUAAGCGUUCCCCAGCUCGCCUUCACACACAGCCCGUGCCACCACACCGACGGUACCAUGAAGGACGAGGUAGCUCUACUGGCUGCUGUCACCCUCCUGGGAGUCCUGCUGCAAGCCUACUUCUCCCUGCAGGUGAUCUCGGCGCGCAGGGCCUUCC\
) } def
/len { sequence length } bind def

/coor [
[83.79655457 65.25201416]
[68.96836090 62.98822403]
[54.15855026 68.55419159]
[42.74476242 58.98472214]
[27.91657066 56.72093201]
[13.08837986 54.45714569]
[-1.73981118 52.19335556]
[-10.70728970 53.99291992]
[-16.78565025 49.77342224]
[-31.57585716 47.27346039]
[-46.47254562 52.60255432]
[-57.73228073 42.85229492]
[-72.52249146 40.35233688]
[-87.31269836 37.85237503]
[-102.12236786 35.47042847]
[-116.95055389 33.20663834]
[-131.77874756 30.94285011]
[-146.60693359 28.67905998]
[-161.43513489 26.41527176]
[-176.26332092 24.15148163]
[-199.22848511 44.28734970]
[-228.71836853 37.92515182]
[-240.40310669 47.33083725]
[-252.08784485 56.73652267]
[-263.77258301 66.14220428]
[-266.91879272 81.87373352]
[-281.24523926 89.09399414]
[-295.76193237 82.26422882]
[-299.33285522 66.62364197]
[-289.21875000 54.17035675]
[-273.17825317 54.45746613]
[-261.49353027 45.05178452]
[-249.80879211 35.64609909]
[-238.12405396 26.24041557]
[-243.76066589 26.94445229]
[-249.51881409 27.14596367]
[-264.51834106 27.26556587]
[-279.51785278 27.38516808]
[-294.51739502 27.50477028]
[-309.51690674 27.62437439]
[-319.11059570 36.25681686]
[-331.61349487 36.04119492]
[-340.32580566 27.63898849]
[-355.32534790 27.51938438]
[-370.32485962 27.39978218]
[-379.43670654 39.95978928]
[-394.20135498 44.73320770]
[-408.94143677 39.88456726]
[-417.98913574 27.27826500]
[-417.86541748 11.76168346]
[-408.61782837 -0.69873649]
[-393.80230713 -5.31170845]
[-379.11566162 -0.30345073]
[-370.20526123 12.40025902]
[-355.20574951 12.51986217]
[-340.20620728 12.63946438]
[-325.43441772 3.17437243]
[-309.63650513 12.62485027]
[-294.63699341 12.50524807]
[-279.63745117 12.38564491]
[-264.63793945 12.26604271]
[-249.63841248 12.14644051]
[-247.00469971 5.12407875]
[-261.04934692 -0.14356123]
[-255.78149414 -14.18812180]
[-241.73728943 -8.92064476]
[-239.10357666 -15.94300652]
[-250.32513428 -25.89673042]
[-261.54669189 -35.85045624]
[-277.58255005 -36.33078003]
[-287.08953857 -49.25350571]
[-282.77468872 -64.70542145]
[-267.94799805 -70.83314514]
[-253.98324585 -62.93600082]
[-251.59295654 -47.07201385]
[-240.37139893 -37.11828995]
[-229.14984131 -27.16456413]
[-221.50312805 -29.46055603]
[-213.72843933 -30.30127335]
[-206.09465027 -29.71719742]
[-198.85531616 -27.78709412]
[-192.24017334 -24.63346481]
[-186.44793701 -20.41657639]
[-181.64038086 -15.32732868]
[-177.93786621 -9.57926559]
[-175.41679382 -3.40003276]
[-174.10838318 2.97738338]
[-173.99952698 9.32329082]
[-159.17134094 11.58708000]
[-144.34315491 13.85086918]
[-129.51495361 16.11465836]
[-114.68676758 18.37844658]
[-99.85857391 20.64223671]
[-92.76367950 18.54148865]
[-84.81273651 23.06217003]
[-70.02252960 25.56212997]
[-55.23232269 28.06208801]
[-41.39352798 22.55418015]
[-29.07589912 32.48325729]
[-14.28569221 34.98321533]
[0.52397782 37.36516571]
[15.35216904 39.62895203]
[30.18036079 41.89274216]
[45.00855255 44.15653229]
[58.75775528 38.42864227]
[71.23215485 48.16003418]
[86.06034088 50.42382431]
[99.78934479 44.38110352]
[108.13533020 31.91736984]
[116.48130798 19.45363808]
[124.82728577 6.98990583]
[133.17326355 -5.47382593]
[141.51924133 -17.93755722]
[149.86523438 -30.40129089]
[148.17411804 -46.35496521]
[159.69357300 -57.52106857]
[175.58683777 -55.33392334]
[183.66197205 -41.47131729]
[177.72441101 -26.56745911]
[162.32896423 -22.05530930]
[153.98298645 -9.59157753]
[145.63699341 2.87215424]
[137.29101562 15.33588600]
[128.94503784 27.79961777]
[120.59906006 40.26335144]
[112.25308228 52.72708130]
[117.00235748 58.53176880]
[128.61187744 49.03339386]
[138.11006165 60.64305878]
[126.50090790 70.14113617]
[131.25018311 75.94582367]
[145.11979675 70.23320770]
[158.98939514 64.52059174]
[168.56442261 51.20702744]
[184.85261536 53.11146164]
[191.09808350 68.27478027]
[180.87602234 81.09825897]
[164.70201111 78.39019775]
[150.83241272 84.10281372]
[136.96279907 89.81542969]
[131.54241943 100.33531189]
[123.71389008 107.07974243]
[136.11068726 115.52483368]
[148.50746155 123.96993256]
[160.90425110 132.41502380]
[173.30104065 140.86012268]
[185.69783020 149.30520630]
[198.09461975 157.75030518]
[206.95999146 159.99960327]
[210.62030029 166.43022156]
[222.88084412 175.07192993]
[229.43835449 176.05053711]
[233.84838867 179.65806580]
[235.38859558 184.18986511]
[247.36732483 193.21815491]
[259.34606934 202.24642944]
[273.46582031 196.36596680]
[288.53369141 198.32957458]
[300.51599121 207.51060486]
[306.25558472 221.36387634]
[304.30352783 236.13056946]
[316.28225708 245.15884399]
[331.95980835 247.28610229]
[337.46661377 261.12533569]
[349.44534302 270.15362549]
[365.46850586 269.35513306]
[375.97460938 281.47958374]
[372.90423584 297.22607422]
[358.61273193 304.51528931]
[344.06332397 297.75555420]
[340.41705322 282.13235474]
[328.43832397 273.10406494]
[313.61758423 271.62258911]
[307.25396729 257.13757324]
[295.27523804 248.10929871]
[281.61758423 254.05354309]
[266.71923828 252.35214233]
[254.59269714 243.36251831]
[248.55435181 229.41850281]
[250.31777954 214.22517395]
[238.33905029 205.19688416]
[226.36030579 196.16859436]
[214.23913574 187.33247375]
[201.97859192 178.69076538]
[189.64953613 170.14709473]
[177.25274658 161.70199585]
[164.85595703 153.25691223]
[152.45916748 144.81181335]
[140.06237793 136.36671448]
[127.66558838 127.92162323]
[115.26879883 119.47653198]
[104.86843872 126.24211121]
[91.59312439 127.36957550]
[78.51009369 121.74655914]
[69.03368378 109.91545868]
[66.04906464 94.11745453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[4 104]
[5 103]
[6 102]
[7 101]
[9 100]
[10 99]
[12 97]
[13 96]
[14 95]
[15 93]
[16 92]
[17 91]
[18 90]
[19 89]
[20 88]
[22 34]
[23 33]
[24 32]
[25 31]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[43 56]
[44 55]
[45 54]
[67 77]
[68 76]
[69 75]
[108 126]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
[131 140]
[132 139]
[133 138]
[142 191]
[143 190]
[144 189]
[145 188]
[146 187]
[147 186]
[148 185]
[150 184]
[151 183]
[154 182]
[155 181]
[156 180]
[161 175]
[162 174]
[164 172]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
