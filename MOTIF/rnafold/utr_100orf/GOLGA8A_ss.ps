%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCUGGGUCAGUUACGCAGCUGUCUUCCAGGUGACUGGAUGUGUUGAUCAGCGCUCGCUGGGAUUUGGCUGACGUGGCCCCAGCCCCGCCUCCCUCCCCACCCCACAAUGGCAGAAGAAACUGGACAGAGUAAAUUAGCUGCAGCCAAGAAAAAGUUCAAAGAAUAUUGGCAGAGAAACCGCCCUGGUGUUCCAGCAGCAGCGAAGA\
) } def
/len { sequence length } bind def

/coor [
[295.26092529 204.84674072]
[292.54238892 190.80010986]
[294.29757690 176.57926941]
[280.78305054 170.07101440]
[267.26849365 163.56275940]
[253.75396729 157.05450439]
[240.23944092 150.54624939]
[228.72148132 154.24418640]
[217.40878296 148.93203735]
[212.59815979 136.96400452]
[199.18249512 130.25430298]
[185.76683044 123.54460144]
[172.35118103 116.83490753]
[158.93551636 110.12520599]
[145.51985168 103.41551208]
[82.45204163 122.07769012]
[67.69309998 124.75604248]
[52.93415451 127.43440247]
[38.19565582 130.22306824]
[23.47843170 133.12191772]
[8.76120567 136.02075195]
[-5.95601988 138.91958618]
[-20.67324638 141.81843567]
[-35.34545898 144.93710327]
[-49.96937943 148.27491760]
[-64.59329987 151.61273193]
[-79.21721649 154.95054626]
[-85.39454651 198.22552490]
[-98.27127838 205.91902161]
[-111.14801025 213.61250305]
[-124.02474213 221.30599976]
[-136.90147400 228.99948120]
[-144.41073608 243.57833862]
[-160.80177307 244.09417725]
[-169.21287537 230.01634216]
[-160.99143982 215.82691956]
[-144.59495544 216.12275696]
[-131.71823120 208.42926025]
[-118.84149933 200.73577881]
[-105.96476746 193.04228210]
[-93.08803558 185.34880066]
[-94.64736938 178.01269531]
[-109.31958771 181.13136292]
[-123.99179840 184.25004578]
[-136.98219299 191.75001526]
[-148.12933350 181.71302795]
[-142.02821350 168.00987244]
[-127.11047363 169.57783508]
[-112.43826294 166.45915222]
[-97.76605225 163.34048462]
[-99.32538605 156.00436401]
[-114.21808624 154.21345520]
[-129.11079407 152.42254639]
[-144.00349426 150.63163757]
[-158.86210632 157.57093811]
[-172.14411926 147.95220947]
[-170.18615723 131.67036438]
[-155.00239563 125.47477722]
[-142.21258545 135.73892212]
[-127.31987762 137.52984619]
[-112.42717743 139.32075500]
[-97.53446960 141.11166382]
[-82.55503082 140.32662964]
[-67.93111420 136.98881531]
[-53.30719376 133.65100098]
[-38.68327332 130.31318665]
[-35.42860413 126.81706238]
[-29.94286537 125.32885742]
[-23.57208443 127.10120392]
[-8.85485840 124.20236206]
[5.86236715 121.30352783]
[20.57959366 118.40468597]
[35.29681778 115.50584412]
[41.25249481 111.12859344]
[50.25580215 112.67545319]
[65.01474762 109.99710083]
[79.77368927 107.31874847]
[85.04431152 93.27522278]
[75.69196320 81.54775238]
[66.33961487 69.82028198]
[50.88471222 64.33594513]
[48.17332077 48.16249466]
[60.99468994 37.93779373]
[76.15929413 44.18013763]
[78.06709290 60.46793365]
[87.41943359 72.19540405]
[96.77178192 83.92287445]
[103.73264313 81.13067627]
[117.65437317 75.54627228]
[124.61523438 72.75406647]
[123.27064514 57.81445312]
[121.92605591 42.87483978]
[107.13716125 39.74753189]
[93.92789459 32.39860153]
[83.47281647 21.48151588]
[76.70159149 7.96701097]
[74.21629333 -6.94321108]
[76.23793793 -21.92334366]
[82.58673859 -35.64136505]
[92.69818115 -46.87747574]
[105.67314911 -54.63257217]
[120.35793304 -58.21707153]
[135.44676208 -57.31224442]
[149.59794617 -51.99854660]
[161.55317688 -42.74847412]
[170.24940491 -30.38452911]
[174.91334534 -16.00611115]
[175.13032532 -0.89173526]
[170.88101196 13.61463547]
[162.54327393 26.22310638]
[150.85848999 35.81253815]
[136.86566162 41.53025055]
[138.21025085 56.46986389]
[139.55484009 71.40947723]
[144.53205872 57.25930786]
[157.71304321 50.09957504]
[172.29241943 53.62686539]
[180.74282837 66.02002716]
[178.70130920 80.88045502]
[167.22189331 90.53566742]
[152.22955322 89.99985504]
[165.64520264 96.70954895]
[179.06086731 103.41924286]
[192.47653198 110.12894440]
[205.89219666 116.83863831]
[219.30786133 123.54833984]
[237.65817261 122.02051544]
[246.74769592 137.03170776]
[260.26223755 143.53996277]
[273.77676392 150.04821777]
[287.29129028 156.55647278]
[300.80581665 163.06474304]
[312.15216064 151.88041687]
[326.61785889 145.26849365]
[342.44635010 144.01162720]
[357.72253418 148.24345398]
[370.60437012 157.43463135]
[379.54513550 170.45898438]
[383.47900391 185.73144531]
[381.94821167 201.40100098]
[395.55859375 207.70635986]
[409.16897583 214.01170349]
[422.77935791 220.31706238]
[436.38973999 226.62242126]
[457.60681152 214.04792786]
[484.59997559 228.59262085]
[499.57312012 229.48968506]
[514.54626465 230.38673401]
[529.51940918 231.28379822]
[544.49261475 232.18086243]
[550.00244141 218.09199524]
[559.59796143 206.39660645]
[572.33892822 198.24049377]
[586.97723389 194.42272949]
[602.07873535 195.31732178]
[616.16394043 200.83663940]
[627.85284424 210.43995667]
[636.00042725 223.18641663]
[639.80841064 237.82727051]
[638.90368652 252.92816162]
[633.37493896 267.00964355]
[623.76379395 278.69213867]
[611.01184082 286.83117676]
[596.36846924 290.62933350]
[581.26818848 289.71447754]
[567.19042969 284.17630005]
[555.51434326 274.55734253]
[547.38385010 261.79995728]
[543.59552002 247.15402222]
[528.62237549 246.25695801]
[513.64923096 245.35989380]
[498.67608643 244.46282959]
[483.70291138 243.56576538]
[479.85617065 250.00413513]
[492.73291016 257.69763184]
[505.60964966 265.39111328]
[518.48638916 273.08459473]
[531.36309814 280.77807617]
[544.23974609 288.47177124]
[536.54583740 301.34826660]
[523.66961670 293.65481567]
[510.79287720 285.96133423]
[497.91613770 278.26785278]
[485.03942871 270.57434082]
[472.16268921 262.88085938]
[468.31594849 269.31924438]
[476.20120239 282.07943726]
[484.08645630 294.83963013]
[491.97171021 307.59982300]
[506.66125488 314.89016724]
[507.42224121 331.27163696]
[493.47183228 339.89242554]
[479.16098022 331.88415527]
[479.21151733 315.48507690]
[471.32626343 302.72488403]
[463.44100952 289.96469116]
[455.55575562 277.20449829]
[437.68603516 269.42282104]
[428.86529541 254.82510376]
[430.08438110 240.23280334]
[416.47399902 233.92744446]
[402.86361694 227.62208557]
[389.25323486 221.31672668]
[375.64285278 215.01136780]
[365.96609497 225.34503174]
[353.55212402 232.19526672]
[339.60833740 234.88070679]
[325.49554443 233.12576294]
[312.59524536 227.08888245]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 132]
[4 131]
[5 130]
[6 129]
[7 128]
[10 126]
[11 125]
[12 124]
[13 123]
[14 122]
[15 121]
[16 77]
[17 76]
[18 75]
[19 73]
[20 72]
[21 71]
[22 70]
[23 69]
[24 66]
[25 65]
[26 64]
[27 63]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[51 62]
[52 61]
[53 60]
[54 59]
[78 87]
[79 86]
[80 85]
[90 114]
[91 113]
[92 112]
[140 204]
[141 203]
[142 202]
[143 201]
[144 200]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
