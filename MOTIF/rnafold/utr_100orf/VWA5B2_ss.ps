%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAGACUCUCGCGCUGGCCUCUGGAGCGCGGGGUGGGCGUCCCGUCACCCUGCGCCCAGCUUCCCCGGCCCGUUCCCGCAGGGCCGGCCUCCCGGCGCCAUGCCCGGCCUGUACUGCCCCUCCAGCUGGACGCCGCUGCCGCUCACGGACUCCUGGGUCCGGGCCUGCGCCAACGGCCCCUGCCUCAGCGUGCGGGCCC\
) } def
/len { sequence length } bind def

/coor [
[221.87336731 130.57373047]
[218.61723328 145.21606445]
[215.36111450 159.85838318]
[212.10498047 174.50070190]
[208.84884644 189.14302063]
[211.31272888 205.91697693]
[195.87637329 212.92807007]
[184.86607361 200.03582764]
[194.20652771 185.88690186]
[197.46266174 171.24456787]
[200.71878052 156.60224915]
[203.97491455 141.95993042]
[207.23104858 127.31760406]
[199.52893066 114.44602966]
[185.08654785 110.39417267]
[170.61294556 106.45529938]
[156.10899353 102.62966156]
[141.60505676 98.80401611]
[127.10110474 94.97837830]
[126.42672729 117.90670013]
[107.08420563 135.58351135]
[77.65172577 133.94540405]
[63.27443314 138.22248840]
[48.89714050 142.49957275]
[34.51984787 146.77665710]
[27.17962074 152.22737122]
[19.88434219 151.00634766]
[5.44195890 155.05821228]
[-9.00042439 159.11006165]
[-23.44280815 163.16192627]
[-37.88519287 167.21379089]
[-52.32757568 171.26564026]
[-66.76995850 175.31750488]
[-81.21234131 179.36936951]
[-95.65472412 183.42121887]
[-110.09710693 187.47308350]
[-124.53948975 191.52493286]
[-131.96401978 196.86026001]
[-139.23931885 195.52537537]
[-153.74325562 199.35101318]
[-167.51651001 209.23706055]
[-180.82902527 198.73880005]
[-174.42631531 183.04034424]
[-157.56890869 184.84706116]
[-143.06495667 181.02142334]
[-128.59135437 177.08255005]
[-114.14896393 173.03070068]
[-99.70658112 168.97883606]
[-85.26419830 164.92698669]
[-70.82181549 160.87512207]
[-56.37943268 156.82325745]
[-41.93704987 152.77140808]
[-27.49466705 148.71954346]
[-13.05228329 144.66767883]
[1.39010012 140.61582947]
[15.83248329 136.56396484]
[30.24276161 132.39936829]
[44.62005234 128.12228394]
[58.99734497 123.84519196]
[73.37464142 119.56810760]
[75.40056610 112.34691620]
[60.86719131 116.05918121]
[50.38551712 105.32910919]
[54.43710709 90.88665009]
[68.97042084 87.17411041]
[79.45242310 97.90453339]
[81.47835541 90.68334198]
[71.42398834 79.55186462]
[61.36961746 68.42039490]
[51.31524658 57.28892517]
[41.26087570 46.15745544]
[31.20650673 35.02598190]
[16.00171089 37.63705444]
[1.80790758 31.59226227]
[-6.84571028 18.82048035]
[-7.19780493 3.39713454]
[0.86397552 -9.75623894]
[14.76714611 -16.44244766]
[30.07525635 -14.52794647]
[41.90354156 -4.62364578]
[46.47764206 10.11002827]
[42.33797836 24.97161293]
[52.39234924 36.10308456]
[62.44671631 47.23455811]
[72.50109100 58.36602783]
[82.55545807 69.49749756]
[92.60982513 80.62896729]
[105.82826996 73.53864288]
[102.11608887 59.00524139]
[98.40391541 44.47183990]
[86.56386566 33.12524033]
[90.73254395 17.26478386]
[106.62156677 13.20634556]
[117.88567352 25.12490082]
[112.93731689 40.75966263]
[116.64949036 55.29306412]
[120.36167145 69.82646179]
[130.92674255 80.47442627]
[145.43069458 84.30007172]
[159.93464661 88.12570953]
[174.43858337 91.95135498]
[183.54289246 91.11421204]
[189.13841248 95.95178986]
[203.58079529 100.00364685]
[218.50114441 81.48493195]
[240.43426514 81.90840149]
[252.40779114 98.04553223]
[267.37069702 99.09967804]
[282.33361816 100.15381622]
[297.29653931 101.20796204]
[312.25942993 102.26210785]
[327.22235107 103.31624603]
[342.18527222 104.37039185]
[357.14819336 105.42453003]
[372.11108398 106.47867584]
[380.89962769 103.95862579]
[387.29904175 107.66802216]
[402.24365234 108.95589447]
[407.81253052 98.29013062]
[416.62869263 90.15289307]
[427.64184570 85.48175049]
[439.55075073 84.80324554]
[450.95678711 88.17366028]
[460.52832031 95.17513275]
[467.15612793 104.96732330]
[470.08193970 116.38821411]
[484.94973755 118.37516022]
[499.65322876 112.53404999]
[511.24343872 121.88906097]
[526.11126709 123.87600708]
[536.81951904 116.67649078]
[549.16644287 118.64268494]
[556.61437988 128.18089294]
[571.44934082 130.39996338]
[586.28430176 132.61903381]
[601.11926270 134.83811951]
[615.91223145 129.22752380]
[627.35479736 138.76254272]
[642.18975830 140.98161316]
[656.98272705 135.37101746]
[668.42529297 144.90603638]
[683.26025391 147.12510681]
[698.09521484 149.34417725]
[710.40698242 136.04246521]
[728.08276367 132.81611633]
[744.01873779 140.77011108]
[751.92486572 156.55427551]
[766.82196045 158.30859375]
[781.71899414 160.06292725]
[796.61602783 161.81726074]
[811.51312256 163.57159424]
[826.41015625 165.32591248]
[841.25164795 158.35014343]
[854.55725098 167.93621826]
[852.63928223 184.22282410]
[837.47082520 190.45568848]
[824.65582275 180.22297668]
[809.75878906 178.46864319]
[794.86169434 176.71432495]
[779.96466064 174.95999146]
[765.06762695 173.20565796]
[750.17053223 171.45132446]
[743.34252930 181.49992371]
[732.82623291 187.72599792]
[720.58850098 188.89376831]
[708.94860840 184.72021484]
[700.13873291 175.94047546]
[695.87609863 164.17912292]
[681.04119873 161.96005249]
[666.20623779 159.74098206]
[652.47436523 165.51029968]
[639.97064209 155.81655884]
[625.13574219 153.59748840]
[611.40386963 159.36680603]
[598.90014648 149.67306519]
[584.06524658 147.45399475]
[569.23028564 145.23490906]
[554.39532471 143.01583862]
[538.44152832 150.31802368]
[524.12432861 138.74382019]
[509.25650024 136.75688171]
[495.61645508 142.74011230]
[482.96279907 133.24298096]
[468.09500122 131.25602722]
[457.71600342 146.09948730]
[441.16455078 153.66177368]
[422.98001099 151.77400208]
[408.19799805 140.87222290]
[400.95578003 123.90050507]
[386.01116943 122.61263275]
[371.05694580 121.44158936]
[356.09402466 120.38744354]
[341.13113403 119.33330536]
[326.16821289 118.27915955]
[311.20529175 117.22502136]
[296.24237061 116.17087555]
[281.27947998 115.11672974]
[266.31655884 114.06259155]
[251.35363770 113.00844574]
[245.94285583 123.12792206]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[5 9]
[14 104]
[15 103]
[16 101]
[17 100]
[18 99]
[19 98]
[22 60]
[23 59]
[24 58]
[25 57]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[39 45]
[40 44]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[88 97]
[89 96]
[90 95]
[107 199]
[108 198]
[109 197]
[110 196]
[111 195]
[112 194]
[113 193]
[114 192]
[115 191]
[117 190]
[118 189]
[126 184]
[127 183]
[129 181]
[130 180]
[133 178]
[134 177]
[135 176]
[136 175]
[138 173]
[139 172]
[141 170]
[142 169]
[143 168]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
