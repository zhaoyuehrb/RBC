%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAUUGCACCUUCCUGCCACCCCAGGCAGUGUCUGGGCCCUCAGCUCCCCCUCCCUCCACCUACCCCCUCACACCCACCACUACGACCCCACGGGAUACCCAGCCCAGACGGAGGAAACACCGAGCCUAGAGACAUGAGAGUUGGAGGAGCAUUCCACCUUCUACUCGUGUGCCUGAGCCCAGCACUGCUGUCUGCUGUGCGGAUCAACGGGGAUGGACAGGAGGUCCUGUACC\
) } def
/len { sequence length } bind def

/coor [
[122.67321777 655.14892578]
[107.66386414 658.71588135]
[93.11637115 653.58032227]
[83.67278290 641.38104248]
[82.34652710 626.01074219]
[89.56080627 612.37414551]
[103.01355743 604.82250977]
[103.80852509 589.84362793]
[104.60349274 574.86468506]
[105.39846039 559.88574219]
[95.40526581 543.32012939]
[106.70019531 526.60925293]
[107.09781647 511.61450195]
[107.49543762 496.61978149]
[107.89305878 481.62506104]
[108.29068756 466.63031006]
[108.68830872 451.63558960]
[109.08592987 436.64086914]
[109.38416290 421.64382935]
[109.58299255 406.64514160]
[109.78182220 391.64645386]
[109.88124084 376.64678955]
[109.88124084 361.64678955]
[109.88124084 346.64678955]
[109.88124084 331.64678955]
[117.52252197 304.22842407]
[136.52351379 296.29910278]
[132.97834778 281.72406006]
[129.43318176 267.14901733]
[125.88800812 252.57398987]
[122.34284210 237.99894714]
[118.79767609 223.42390442]
[115.25251007 208.84886169]
[110.62594604 203.10272217]
[111.75830841 194.05714417]
[108.40665436 179.43638611]
[105.05499268 164.81564331]
[101.70333099 150.19488525]
[98.35167694 135.57414246]
[95.00001526 120.95338440]
[82.83983612 109.42674255]
[83.34511566 94.26023865]
[72.49533844 83.90251923]
[61.64556885 73.54479218]
[41.85525131 69.64951324]
[37.27011490 50.85430145]
[26.14958954 40.78782272]
[15.02906513 30.72134781]
[3.90854144 20.65487099]
[-10.58547497 27.63338661]
[-26.60948753 28.50975227]
[-41.70537567 23.17918396]
[-53.56877136 12.48679352]
[-60.40082932 -1.90626454]
[-61.18093491 -17.78081131]
[-55.81907272 -32.70179749]
[-67.07205200 -42.61998367]
[-78.32503510 -52.53816986]
[-89.57801819 -62.45635605]
[-100.83099365 -72.37454224]
[-116.38666534 -71.56282806]
[-127.65750122 -81.78157806]
[-128.33547974 -96.61653900]
[-139.58847046 -106.53472137]
[-151.98481750 -97.96639252]
[-166.06312561 -92.61726379]
[-181.00354004 -90.79421234]
[-195.93702698 -92.59889984]
[-209.99607849 -97.92210388]
[-222.36499023 -106.45034790]
[-232.32722473 -117.68431854]
[-239.30696106 -130.96810913]
[-242.90231323 -145.52755737]
[-242.90850830 -160.51527405]
[-239.32951355 -175.06007385]
[-232.37760925 -188.31748962]
[-243.63058472 -198.23567200]
[-254.88356018 -208.15386963]
[-268.17947388 -200.87413025]
[-283.16381836 -198.58395386]
[-298.02719116 -201.55989075]
[-310.97476196 -209.44256592]
[-320.44299316 -221.28013611]
[-325.28863525 -235.64312744]
[-324.92648315 -250.79716492]
[-319.40032959 -264.91229248]
[-309.37744141 -276.28408813]
[-296.06811523 -283.53930664]
[-281.07958984 -285.80184937]
[-266.22171021 -282.79855347]
[-253.28871155 -274.89199829]
[-243.84228516 -263.03701782]
[-239.02314758 -248.66511536]
[-239.41320801 -233.51177979]
[-244.96537781 -219.40684509]
[-233.71240234 -209.48866272]
[-222.45941162 -199.57046509]
[-210.18009949 -208.13241577]
[-196.19999695 -213.50984192]
[-181.33018494 -215.38609314]
[-166.43446350 -213.64782715]
[-152.37922668 -208.39175415]
[-139.98300171 -199.91934204]
[-129.96879578 -188.71949768]
[-122.92197418 -175.44035339]
[-119.25598907 -160.85177612]
[-119.18814850 -145.80070496]
[-122.72673798 -131.16203308]
[-129.67028809 -117.78770447]
[-118.41729736 -107.86951447]
[-103.61466217 -109.06011200]
[-92.06124878 -99.16196442]
[-90.91281128 -83.62752533]
[-79.65982819 -73.70933533]
[-68.40684509 -63.79115295]
[-57.15386581 -53.87296677]
[-45.90088654 -43.95478058]
[-33.55213928 -50.60251999]
[-19.64680672 -52.64306641]
[-5.85028267 -49.81144333]
[6.17803335 -42.42743683]
[14.98433399 -31.35962486]
[19.49610519 -17.92322922]
[19.15272141 -3.72386479]
[13.97501755 9.53434658]
[25.09554100 19.60082245]
[36.21606445 29.66729927]
[47.33658981 39.73377609]
[57.43319321 38.31018448]
[66.84870911 42.76407242]
[72.38091278 51.84708786]
[72.00329590 62.69501877]
[82.85306549 73.05274200]
[93.70283508 83.41046906]
[108.66990662 84.40391541]
[120.79345703 75.57106018]
[132.91702271 66.73819733]
[145.04057312 57.90534592]
[157.16413879 49.07248688]
[169.28768921 40.23963165]
[181.41123962 31.40677261]
[193.47599792 22.49375725]
[205.48139954 13.50097466]
[207.86042786 -1.89311457]
[220.16372681 -10.84205246]
[234.82498169 -8.47914696]
[246.83038330 -17.47192955]
[253.23684692 -31.93802261]
[268.06192017 -33.37562943]
[280.06732178 -42.36841202]
[292.07272339 -51.36119461]
[298.02273560 -66.64286804]
[314.27090454 -68.86305237]
[324.10250854 -55.73781967]
[317.40362549 -40.76927948]
[301.06552124 -39.35578537]
[289.06008911 -30.36300278]
[277.05468750 -21.37022209]
[271.50695801 -7.54735136]
[255.82316589 -5.46651936]
[243.81776428 3.52626300]
[241.96327209 18.26045799]
[229.91619873 27.55143929]
[214.47418213 25.50638580]
[202.46878052 34.49916840]
[199.00585938 41.01311493]
[190.24411011 43.53033066]
[178.12054443 52.36318588]
[165.99699402 61.19604492]
[153.87342834 70.02890015]
[141.74987793 78.86175537]
[129.62631226 87.69461823]
[117.50276184 96.52747345]
[131.93395996 92.43595886]
[145.38336182 99.07775879]
[150.90701294 113.02369690]
[145.65304565 127.07345581]
[132.33409119 133.97311401]
[117.82674408 130.16036987]
[109.62076569 117.60172272]
[112.97242737 132.22247314]
[116.32408142 146.84323120]
[119.67574310 161.46397400]
[123.02740479 176.08473206]
[126.37905884 190.70549011]
[129.82754517 205.30369568]
[133.37271118 219.87873840]
[136.91787720 234.45378113]
[140.46304321 249.02882385]
[144.00820923 263.60385132]
[147.55337524 278.17889404]
[151.09855652 292.75393677]
[159.68861389 305.05072021]
[172.15374756 313.39459229]
[184.61889648 321.73849487]
[197.08403015 330.08236694]
[209.54916382 338.42623901]
[222.01429749 346.77014160]
[238.54008484 350.55624390]
[239.47674561 367.48428345]
[223.46954346 373.07049561]
[213.67041016 359.23526001]
[201.20527649 350.89138794]
[188.74014282 342.54751587]
[176.27500916 334.20361328]
[163.80987549 325.85974121]
[151.34474182 317.51586914]
[144.72886658 321.04858398]
[151.79411316 334.28045654]
[138.56213379 341.34548950]
[131.49711609 328.11407471]
[124.88124084 331.64678955]
[124.88124084 346.64678955]
[124.88124084 361.64678955]
[124.88124084 376.64678955]
[128.00614929 385.21063232]
[124.78050232 391.84530640]
[124.58168030 406.84396362]
[124.38285065 421.84265137]
[127.39397430 430.44717407]
[124.08065796 437.03848267]
[123.68303680 452.03320312]
[123.28541565 467.02795410]
[122.88779449 482.02267456]
[122.49016571 497.01739502]
[122.09254456 512.01214600]
[121.69492340 527.00683594]
[129.60800171 534.43676758]
[132.08454895 544.77954102]
[128.54367065 554.57501221]
[120.37738037 560.68072510]
[119.58241272 575.65966797]
[118.78744507 590.63854980]
[117.99247742 605.61749268]
[130.57034302 614.55059814]
[136.30070496 628.87426758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 234]
[8 233]
[9 232]
[10 231]
[12 227]
[13 226]
[14 225]
[15 224]
[16 223]
[17 222]
[18 221]
[19 219]
[20 218]
[21 217]
[22 215]
[23 214]
[24 213]
[25 212]
[27 192]
[28 191]
[29 190]
[30 189]
[31 188]
[32 187]
[33 186]
[35 185]
[36 184]
[37 183]
[38 182]
[39 181]
[40 180]
[42 134]
[43 133]
[44 132]
[46 128]
[47 127]
[48 126]
[49 125]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[63 110]
[64 109]
[76 97]
[77 96]
[78 95]
[135 173]
[136 172]
[137 171]
[138 170]
[139 169]
[140 168]
[141 167]
[142 165]
[143 164]
[146 161]
[147 160]
[149 158]
[150 157]
[151 156]
[193 207]
[194 206]
[195 205]
[196 204]
[197 203]
[198 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
