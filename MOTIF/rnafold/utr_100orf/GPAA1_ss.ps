%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAAGUGCGGGCGAGCGCGGGUCCCCGGGUCUGACAGGAGCAGCCUGUGGGCACCGCGGCGGUAGUUGGAGGCGGGAGAGGGUCCGUAGCCGCGCCGCCCUGCCCCGCCAUGGGCCUCCUGUCGGACCCGGUUCGCCGGCGCGCGCUCGCCCGCCUAGUGCUGCGCCUCAACGCGCCGUUGUGCGUGCUGAGCUACGUGGCGGGCAUCG\
) } def
/len { sequence length } bind def

/coor [
[233.19963074 342.26754761]
[240.32046509 329.06552124]
[252.32247925 320.06820679]
[266.99166870 316.93536377]
[281.61926270 320.24359131]
[271.62106323 309.06161499]
[264.81930542 306.17062378]
[261.55880737 297.63790894]
[251.72822571 286.30831909]
[241.89764404 274.97872925]
[232.06706238 263.64913940]
[222.23648071 252.31954956]
[212.40589905 240.98995972]
[202.57531738 229.66036987]
[192.74473572 218.33076477]
[182.91416931 207.00117493]
[173.08358765 195.67158508]
[163.25300598 184.34199524]
[153.42242432 173.01239014]
[143.59184265 161.68280029]
[129.40670776 157.14062500]
[126.20648956 141.64645386]
[116.37591553 130.31686401]
[106.54533386 118.98727417]
[85.33093262 113.71774292]
[81.49354553 92.19814301]
[70.84753418 81.63109589]
[60.20152283 71.06404877]
[49.55551529 60.49700165]
[38.90950775 49.92995453]
[28.26349831 39.36290359]
[17.61748886 28.79585838]
[6.97148085 18.22880936]
[-3.67452812 7.66176224]
[-14.32053661 -2.90528560]
[-24.96654510 -13.47233295]
[-35.61255264 -24.03938103]
[-46.25856400 -34.60643005]
[-56.90457153 -45.17347717]
[-67.55058289 -55.74052429]
[-78.19658661 -66.30757141]
[-84.48098755 -68.36131287]
[-88.22308350 -72.63842773]
[-88.99637604 -77.35129547]
[-99.32304382 -88.23062897]
[-109.64971161 -99.10996246]
[-119.97637939 -109.98929596]
[-130.30305481 -120.86862946]
[-140.62971497 -131.74797058]
[-151.27572632 -142.31501770]
[-162.23164368 -152.56040955]
[-173.18754578 -162.80580139]
[-184.14346313 -173.05119324]
[-195.09936523 -183.29658508]
[-210.67219543 -182.94348145]
[-221.63710022 -193.48983765]
[-221.87776184 -208.33831787]
[-232.83366394 -218.58370972]
[-243.78958130 -228.82910156]
[-254.74548340 -239.07449341]
[-265.70138550 -249.31988525]
[-276.65728760 -259.56527710]
[-278.77163696 -244.71504211]
[-291.62216187 -236.97785950]
[-305.73596191 -242.05731201]
[-310.70886230 -256.20901489]
[-302.87503052 -269.00082397]
[-288.01083374 -271.00366211]
[-298.17437744 -282.03552246]
[-308.33792114 -293.06741333]
[-323.89389038 -293.87353516]
[-334.04400635 -305.20620728]
[-333.17962646 -320.03146362]
[-343.34317017 -331.06335449]
[-353.50671387 -342.09524536]
[-363.67025757 -353.12710571]
[-373.83383179 -364.15899658]
[-389.63314819 -364.55541992]
[-400.46392822 -376.06494141]
[-399.90048218 -391.85919189]
[-388.27709961 -402.56768799]
[-372.48968506 -401.83731079]
[-361.90466309 -390.10131836]
[-362.80194092 -374.32254028]
[-352.63839722 -363.29064941]
[-342.47485352 -352.25878906]
[-332.31130981 -341.22689819]
[-322.14776611 -330.19503784]
[-307.30145264 -329.84384155]
[-296.83703613 -318.80072021]
[-297.30606079 -303.23095703]
[-287.14251709 -292.19906616]
[-276.97897339 -281.16720581]
[-266.41192627 -270.52117920]
[-255.45600891 -260.27578735]
[-244.50009155 -250.03041077]
[-233.54418945 -239.78501892]
[-222.58827209 -229.53962708]
[-211.63237000 -219.29423523]
[-196.80107117 -220.04823303]
[-185.54428101 -209.81401062]
[-184.85397339 -194.25248718]
[-173.89807129 -184.00709534]
[-162.94215393 -173.76170349]
[-151.98625183 -163.51631165]
[-141.03033447 -153.27091980]
[-138.22740173 -153.22991943]
[-135.27182007 -152.07615662]
[-132.58750916 -149.74595642]
[-130.61358643 -146.33007812]
[-129.75038147 -142.07463074]
[-119.42371368 -131.19529724]
[-109.09704590 -120.31596375]
[-98.77037811 -109.43663025]
[-88.44371033 -98.55729675]
[-78.11704254 -87.67796326]
[-67.62953949 -76.95358276]
[-56.98353195 -66.38653564]
[-46.33752441 -55.81948471]
[-35.69151688 -45.25243759]
[-25.04550743 -34.68539047]
[-14.39949799 -24.11834145]
[-3.75348902 -13.55129433]
[6.89251947 -2.98424649]
[17.53852844 7.58280134]
[28.18453789 18.14984894]
[38.83054733 28.71689606]
[49.47655487 39.28394318]
[60.12256241 49.85099030]
[70.76856995 60.41804123]
[81.41458130 70.98508453]
[92.06059265 81.55213165]
[98.86943817 79.94807434]
[105.81543732 80.77661133]
[112.05593872 83.93724060]
[116.83386993 89.04652405]
[119.56960297 95.48462677]
[119.93124390 102.47052002]
[117.87492371 109.15669250]
[127.70550537 120.48628998]
[137.53608704 131.81587219]
[152.42436218 137.16842651]
[154.92143250 151.85221863]
[164.75201416 163.18182373]
[174.58259583 174.51141357]
[184.41317749 185.84100342]
[194.24375916 197.17059326]
[204.07434082 208.50018311]
[213.90492249 219.82978821]
[223.73550415 231.15937805]
[233.56608582 242.48896790]
[243.39665222 253.81855774]
[253.22723389 265.14816284]
[263.05783081 276.47775269]
[272.88839722 287.80734253]
[282.80303955 299.06344604]
[292.80123901 310.24542236]
[301.04916382 312.17037964]
[306.26855469 317.68423462]
[307.39761353 324.30834961]
[318.94390869 333.88345337]
[330.49020386 343.45858765]
[342.03649902 353.03369141]
[353.58282471 362.60882568]
[365.12911987 372.18392944]
[376.67541504 381.75906372]
[396.68008423 384.24417114]
[402.60488892 402.65023804]
[414.43115234 411.87734985]
[426.25741577 421.10446167]
[438.08367920 430.33154297]
[453.72351074 432.72036743]
[458.99841309 446.64962769]
[470.82467651 455.87673950]
[482.65093994 465.10382080]
[494.47720337 474.33093262]
[506.30349731 483.55801392]
[521.95599365 481.37307739]
[534.51849365 490.96264648]
[536.53784180 506.63742065]
[526.81597900 519.09777832]
[511.12075806 520.95129395]
[498.76382446 511.09823608]
[497.07638550 495.38430786]
[485.25012207 486.15719604]
[473.42385864 476.93011475]
[461.59756470 467.70300293]
[449.77130127 458.47589111]
[434.97738647 456.74707031]
[428.85659790 442.15780640]
[417.03033447 432.93072510]
[405.20407104 423.70361328]
[393.37777710 414.47653198]
[383.39022827 416.63565063]
[373.65856934 412.86163330]
[367.48339844 404.17559814]
[367.10028076 393.30535889]
[355.55398560 383.73025513]
[344.00769043 374.15512085]
[332.46139526 364.58001709]
[320.91510010 355.00488281]
[309.36877441 345.42974854]
[297.82247925 335.85464478]
[301.67291260 350.35202026]
[299.08682251 365.12741089]
[290.54132080 377.45520020]
[277.61276245 385.06127930]
[262.68606567 386.54254150]
[248.51480103 381.62573242]
[237.71310425 371.21789551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 157]
[6 156]
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[17 146]
[18 145]
[19 144]
[20 143]
[22 141]
[23 140]
[24 139]
[26 132]
[27 131]
[28 130]
[29 129]
[30 128]
[31 127]
[32 126]
[33 125]
[34 124]
[35 123]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
[41 117]
[44 116]
[45 115]
[46 114]
[47 113]
[48 112]
[49 111]
[50 106]
[51 105]
[52 104]
[53 103]
[54 102]
[57 99]
[58 98]
[59 97]
[60 96]
[61 95]
[62 94]
[68 93]
[69 92]
[70 91]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[160 203]
[161 202]
[162 201]
[163 200]
[164 199]
[165 198]
[166 197]
[168 193]
[169 192]
[170 191]
[171 190]
[173 188]
[174 187]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
