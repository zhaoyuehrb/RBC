%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGCUGUGACCAGAGCAACCAGAGCCUGCCACCCGACGCAACCCCAGGCUCACUCGCUCACCCCCCUGGGCCCUCCUGCUUCCGGCCGGGGGCACCAUGGCCUGCCGCUCCUGCGUGGUUGGCUUCAGCAGCCUCAGCAGCUGUGAGGUGACCCCGGUGGGCAGCCCCCGGCCUGGAACCUCAGGAUGGGACAGCU\
) } def
/len { sequence length } bind def

/coor [
[123.20576477 234.09785461]
[106.82500458 233.32147217]
[99.54849243 218.62507629]
[108.86167145 205.12704468]
[109.57181549 190.14385986]
[110.28196716 175.16069031]
[110.99211121 160.17750549]
[111.70225525 145.19432068]
[112.41239929 130.21115112]
[106.32395935 125.83154297]
[101.75630188 140.11917114]
[86.75646973 140.19017029]
[82.05377197 125.94641113]
[94.14708710 117.07233429]
[88.05864716 112.69273376]
[74.07912445 118.13083649]
[60.09960175 123.56893921]
[46.12008286 129.00703430]
[44.71262741 142.92936707]
[37.47665024 154.82914734]
[25.87395668 162.41218567]
[12.20157814 164.24537659]
[-0.86290240 160.02728271]
[-10.78571224 150.63591003]
[-24.84933853 155.85264587]
[-38.91296768 161.06939697]
[-52.97659302 166.28613281]
[-67.04022217 171.50286865]
[-81.10385132 176.71961975]
[-95.16747284 181.93635559]
[-95.04958344 197.09425354]
[-100.12602997 211.37730408]
[-109.78381348 223.06076050]
[-122.85671234 230.73377991]
[-137.76609802 233.46980286]
[-152.71160889 230.93846130]
[-165.88848877 223.44541931]
[-175.70556641 211.89549255]
[-180.97737122 197.68339539]
[-181.06733704 182.52529907]
[-175.96456909 168.25163269]
[-166.28527832 156.58599854]
[-153.19825745 148.93708801]
[-138.28384399 146.22853088]
[-123.34303284 148.78741455]
[-110.17999268 156.30473328]
[-100.38421631 167.87272644]
[-86.32058716 162.65599060]
[-72.25696564 157.43925476]
[-58.19333649 152.22250366]
[-44.12970734 147.00576782]
[-30.06608009 141.78901672]
[-16.00245285 136.57228088]
[-13.68673229 120.58465576]
[-3.56830406 107.87144470]
[11.66696167 101.95925140]
[27.89772415 104.54891205]
[40.68198013 115.02751923]
[54.66149902 109.58941650]
[68.64102173 104.15131378]
[82.62054443 98.71321106]
[84.03929901 83.77978516]
[85.45793915 68.84768677]
[72.75257874 60.87437057]
[60.04721832 52.90105438]
[43.64818954 52.83815384]
[35.73910141 38.47228241]
[44.45614243 24.58180809]
[60.83197021 25.45606613]
[68.02053833 40.19569016]
[80.72589874 48.16901016]
[93.43125916 56.14233017]
[108.42938995 56.37912369]
[121.38011932 48.81086731]
[134.33085632 41.24261475]
[147.22145081 33.57236862]
[160.05108643 25.80061340]
[172.88073730 18.02885818]
[185.71038818 10.25710297]
[198.54003906 2.48534727]
[207.43066406 -15.59948254]
[226.75685120 -15.19101143]
[239.33476257 -23.36390686]
[251.91265869 -31.53680229]
[264.49057007 -39.70969772]
[277.00357056 -47.98162079]
[289.45089722 -56.35205460]
[301.89822388 -64.72248840]
[314.34555054 -73.09292603]
[326.79287720 -81.46335602]
[339.24017334 -89.83379364]
[351.68750000 -98.20423126]
[364.13482666 -106.57466125]
[376.58215332 -114.94509888]
[389.02947998 -123.31552887]
[388.78402710 -130.84887695]
[391.14883423 -137.93383789]
[395.78454590 -143.70324707]
[402.07708740 -147.46832275]
[409.21862793 -148.80085754]
[416.31121826 -147.58139038]
[422.47967529 -144.00842285]
[435.54827881 -151.37129211]
[448.61685181 -158.73416138]
[461.68545532 -166.09703064]
[474.75405884 -173.45989990]
[487.82263184 -180.82276917]
[500.89123535 -188.18563843]
[510.93991089 -199.32223511]
[516.92535400 -213.07630920]
[514.53735352 -229.30064392]
[527.56024170 -239.26741028]
[542.59722900 -232.72364807]
[544.17956543 -216.40101624]
[530.67944336 -207.09085083]
[524.69396973 -193.33677673]
[529.93414307 -187.97105408]
[540.41442871 -177.23962402]
[545.65454102 -171.87390137]
[559.54644775 -177.53201294]
[573.43841553 -183.19012451]
[587.33032227 -188.84823608]
[601.22229004 -194.50633240]
[611.08447266 -206.87760925]
[625.79010010 -204.51268005]
[639.68206787 -210.17079163]
[653.57397461 -215.82890320]
[667.42083740 -221.59649658]
[681.22167969 -227.47319031]
[695.02258301 -233.34989929]
[708.82342529 -239.22660828]
[718.48907471 -251.75201416]
[733.23028564 -249.61953735]
[747.03112793 -255.49624634]
[756.44757080 -268.92242432]
[772.75720215 -267.21130371]
[779.18206787 -252.12313843]
[769.11285400 -239.17932129]
[752.90783691 -241.69537354]
[739.10699463 -235.81866455]
[730.42846680 -223.71359253]
[714.70013428 -225.42573547]
[700.89929199 -219.54902649]
[687.09838867 -213.67231750]
[673.29748535 -207.79560852]
[668.37023926 -202.27720642]
[659.23205566 -201.93696594]
[645.34014893 -196.27885437]
[631.44824219 -190.62075806]
[622.57971191 -178.65419006]
[606.88037109 -180.61441040]
[592.98846436 -174.95629883]
[579.09649658 -169.29818726]
[565.20458984 -163.64007568]
[551.31268311 -157.98196411]
[530.25701904 -155.24143982]
[514.62689209 -162.83906555]
[508.25411987 -175.11703491]
[495.18551636 -167.75416565]
[482.11691284 -160.39129639]
[469.04830933 -153.02842712]
[455.97973633 -145.66557312]
[442.91113281 -138.30270386]
[429.84252930 -130.93983459]
[420.58999634 -110.48404694]
[397.39990234 -110.86820984]
[384.95257568 -102.49777222]
[372.50527954 -94.12734222]
[360.05795288 -85.75690460]
[347.61062622 -77.38647461]
[335.16329956 -69.01603699]
[322.71597290 -60.64560318]
[310.26864624 -52.27516556]
[297.82131958 -43.90473175]
[285.37402344 -35.53429794]
[281.57403564 -29.18674660]
[272.66348267 -27.13178825]
[260.08557129 -18.95889282]
[247.50764465 -10.78599739]
[234.92974854 -2.61310267]
[233.71247864 7.54446745]
[226.95939636 15.51923847]
[216.71961975 18.51725960]
[206.31178284 15.31499290]
[193.48214722 23.08674812]
[180.65249634 30.85850334]
[167.82284546 38.63026047]
[154.99320984 46.40201569]
[150.89698792 52.56254578]
[141.89910889 54.19334793]
[128.94837952 61.76160431]
[115.99764252 69.32985687]
[127.39557648 130.92129517]
[126.68543243 145.90446472]
[125.97528839 160.88764954]
[125.26514435 175.87083435]
[124.55500031 190.85400391]
[123.84485626 205.83718872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 198]
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[15 61]
[16 60]
[17 59]
[18 58]
[24 53]
[25 52]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[63 72]
[64 71]
[65 70]
[73 192]
[74 191]
[75 190]
[76 188]
[77 187]
[78 186]
[79 185]
[80 184]
[82 180]
[83 179]
[84 178]
[85 177]
[86 175]
[87 174]
[88 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[94 167]
[95 166]
[102 164]
[103 163]
[104 162]
[105 161]
[106 160]
[107 159]
[108 158]
[109 116]
[110 115]
[119 155]
[120 154]
[121 153]
[122 152]
[123 151]
[125 149]
[126 148]
[127 147]
[128 145]
[129 144]
[130 143]
[131 142]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
