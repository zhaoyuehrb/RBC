%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGAGUUCCCAAGCGGUAGGCGGCGGCGCCGGGAGAGAAGCGCCGCCUAGCUGCGCUUCCGCAAAGAUGGCGGCGGCUGCGGGUAGCUGCGCGCGGGUGGCGGCCUGGGGCGGAAAACUGCGACGGGGGCUCGCUGUCAGCCGACAGGCUGUGCGGAGUCCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[224.30477905 194.87744141]
[213.17004395 184.82667542]
[206.06909180 182.67030334]
[201.92398071 174.48410034]
[190.97801208 164.22808838]
[176.14599609 164.96771240]
[164.89912415 154.72259521]
[164.22390747 139.16041565]
[153.27792358 128.90440369]
[142.33195496 118.64839935]
[131.38597107 108.39239502]
[106.64088440 128.47206116]
[80.45780182 117.12501526]
[65.79925537 120.30730438]
[51.14070129 123.48959351]
[36.48215485 126.67187500]
[21.82360649 129.85417175]
[14.06394577 134.75144958]
[6.86308575 132.95669556]
[-7.85208321 135.86595154]
[-22.56725311 138.77520752]
[-32.01517868 153.47486877]
[-48.83631134 156.74903870]
[-62.55698395 147.05528259]
[-77.21553040 150.23757935]
[-91.87408447 153.41986084]
[-106.53263092 156.60214233]
[-121.19117737 159.78443909]
[-135.84973145 162.96672058]
[-150.50827026 166.14900208]
[-165.16682434 169.33129883]
[-169.77310181 183.98318481]
[-181.09904480 194.35711670]
[-196.09802246 197.66258240]
[-210.73539734 193.01040649]
[-221.07379150 181.65199280]
[-224.33221436 166.64273071]
[-219.63418579 152.02000427]
[-208.24342346 141.71726990]
[-193.22401428 138.50590515]
[-178.61608887 143.24975586]
[-168.34910583 154.67274475]
[-153.69056702 151.49046326]
[-139.03201294 148.30816650]
[-124.37346649 145.12588501]
[-109.71492004 141.94360352]
[-95.05636597 138.76130676]
[-80.39781952 135.57902527]
[-65.73927307 132.39674377]
[-60.33831024 120.67223358]
[-48.99506378 114.11225128]
[-35.75106049 115.31358337]
[-25.47651291 124.06004333]
[-10.76134396 121.15077972]
[3.95382571 118.24152374]
[18.64131927 115.19561768]
[33.29986954 112.01332855]
[47.95841599 108.83103943]
[62.61696625 105.64875793]
[77.27551270 102.46646881]
[82.72471619 88.49127197]
[74.08937073 76.22624207]
[65.45403290 63.96121597]
[56.81869125 51.69618988]
[41.22288513 50.55388260]
[30.04616165 39.61702347]
[28.56582832 24.04966545]
[37.48085022 11.20223808]
[52.58182907 7.14090490]
[66.73854828 13.78330135]
[73.26662445 27.99309349]
[69.08371735 43.06084824]
[77.71905518 55.32587433]
[86.35440063 67.59090424]
[94.98973846 79.85592651]
[102.45057678 79.09045410]
[117.37224579 77.55950928]
[124.83307648 76.79403687]
[130.79797363 63.03104019]
[136.76286316 49.26804352]
[135.15141296 33.52911758]
[147.31176758 24.92823792]
[153.27665710 11.16524315]
[159.24154663 -2.59775233]
[165.20645142 -16.36074829]
[171.17134094 -30.12374306]
[169.55989075 -45.86266708]
[181.72023010 -54.46354675]
[187.68513489 -68.22653961]
[193.65002441 -81.98954010]
[199.61491394 -95.75253296]
[205.57981873 -109.51552582]
[199.53770447 -124.11924744]
[205.66877747 -138.68583679]
[220.33555603 -144.57319641]
[234.83651733 -138.28848267]
[240.56848145 -123.56027222]
[234.13079834 -109.12657166]
[219.34280396 -103.55063629]
[213.37791443 -89.78763580]
[207.41302490 -76.02464294]
[201.44812012 -62.26165009]
[195.48323059 -48.49865341]
[197.52133179 -33.74414825]
[184.93434143 -24.15884781]
[178.96943665 -10.39585304]
[173.00454712 3.36714220]
[167.03965759 17.13013649]
[161.07475281 30.89313316]
[163.11286926 45.64763641]
[150.52586365 55.23293686]
[144.56097412 68.99593353]
[138.59606934 82.75892639]
[141.64198303 97.44641876]
[152.58795166 107.70242310]
[163.53393555 117.95842743]
[174.47990417 128.21443176]
[190.05307007 127.87642670]
[201.00775146 138.43339539]
[201.23400879 153.28211975]
[212.17999268 163.53811646]
[223.22080994 173.69194031]
[234.35554504 183.74270630]
[250.01364136 178.49081421]
[266.09402466 181.82121277]
[278.23864746 192.73489380]
[283.20474243 208.19079590]
[279.73037720 223.95280457]
[291.05001831 233.79486084]
[302.36962891 243.63691711]
[313.68927002 253.47897339]
[325.00888062 263.32101440]
[336.32852173 273.16308594]
[347.64813232 283.00512695]
[359.05877686 292.74154663]
[370.55938721 302.37149048]
[381.37139893 300.78442383]
[391.06311035 305.33718872]
[396.51528931 314.29629517]
[396.12234497 324.55639648]
[407.25704956 334.60717773]
[418.39178467 344.65792847]
[429.52651978 354.70870972]
[440.66122437 364.75946045]
[456.80221558 367.65792847]
[462.10723877 383.17529297]
[451.11898804 395.34863281]
[435.14120483 391.65505981]
[430.61047363 375.89419556]
[419.47573853 365.84341431]
[408.34103394 355.79266357]
[397.20629883 345.74188232]
[386.07156372 335.69113159]
[366.93521118 333.08734131]
[360.92944336 313.87210083]
[349.42883301 304.24215698]
[342.25262451 302.35122681]
[337.80609131 294.32476807]
[326.48645020 284.48269653]
[315.16683960 274.64065552]
[303.84719849 264.79858398]
[292.52758789 254.95654297]
[281.20794678 245.11448669]
[269.88833618 235.27243042]
[257.27450562 240.56372070]
[243.54597473 239.89215088]
[231.39219666 233.33209229]
[223.21878052 222.11701965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 123]
[2 122]
[4 121]
[5 120]
[8 117]
[9 116]
[10 115]
[11 114]
[13 60]
[14 59]
[15 58]
[16 57]
[17 56]
[19 55]
[20 54]
[21 53]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[61 75]
[62 74]
[63 73]
[64 72]
[78 113]
[79 112]
[80 111]
[82 109]
[83 108]
[84 107]
[85 106]
[86 105]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[128 164]
[129 163]
[130 162]
[131 161]
[132 160]
[133 159]
[134 158]
[135 156]
[136 155]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
