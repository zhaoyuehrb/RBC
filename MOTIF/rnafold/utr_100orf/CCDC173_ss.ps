%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGCCAAGCAACCGCGUGGUACGAGUAACAACUCCACCGGCUGGCGUCCGCGGCGCUUGGCGCCACAGUCACUUUUCCAGAUCUAGGAGCAUCAUGGACACCUCGUCAGAGAUGCUGGUACGGUUUGGACGGCGCUGUGGACGGGCGAAGGAAAGUACAGAAAUAAGAAACUCUGAAGAAGAUCAAGUUCUCU\
) } def
/len { sequence length } bind def

/coor [
[143.12661743 168.67684937]
[142.43136597 160.99975586]
[132.66670227 149.61331177]
[122.90202332 138.22686768]
[113.13735199 126.84041595]
[103.37268829 115.45396423]
[103.65248108 130.45135498]
[90.32093048 137.32666016]
[78.26416016 128.40286255]
[80.94564819 113.64347076]
[69.48091125 123.31610107]
[63.92255783 138.12876892]
[49.20556641 140.42211914]
[37.74082947 150.09475708]
[26.27609444 159.76737976]
[21.72697449 167.70420837]
[14.54786301 169.50169373]
[2.92878842 178.98837280]
[-8.69028568 188.47505188]
[-20.30936050 197.96173096]
[-21.71098709 202.10336304]
[-24.12062263 205.25953674]
[-27.10207939 207.23373413]
[-30.20020676 207.99218750]
[-32.99596786 207.65597534]
[-45.20185089 216.37472534]
[-57.40773010 225.09346008]
[-63.70211411 240.23654175]
[-79.99636841 242.08837891]
[-89.52835846 228.74397278]
[-82.49239349 213.93089294]
[-66.12647247 212.88757324]
[-53.92058945 204.16883850]
[-41.71470642 195.45008850]
[-29.79604149 186.34265137]
[-18.17696571 176.85597229]
[-6.55789232 167.36929321]
[5.06118202 157.88261414]
[16.60346222 148.30264282]
[28.06819725 138.63002014]
[39.53293228 128.95738220]
[44.27124786 114.83656311]
[59.80827713 111.85136414]
[71.27301025 102.17873383]
[82.46522522 92.72834778]
[94.03962708 93.04969025]
[92.83262634 78.09832764]
[91.62562561 63.14696884]
[90.41863251 48.19561005]
[89.21163177 33.24425125]
[88.00463104 18.29289055]
[86.79763031 3.34153128]
[85.59063721 -11.60982800]
[84.38363647 -26.56118774]
[83.17663574 -41.51254654]
[81.96964264 -56.46390915]
[80.76264191 -71.41526794]
[79.55564117 -86.36662292]
[71.64103699 -99.10864258]
[58.77317047 -106.81694794]
[45.90530014 -114.52525330]
[33.03742981 -122.23355103]
[17.77062988 -118.14694214]
[4.12768555 -126.12476349]
[0.20271258 -141.43391418]
[8.32432842 -154.99174500]
[23.67412186 -158.75463867]
[37.14533234 -150.49014282]
[40.74573135 -135.10142517]
[53.61360168 -127.39311981]
[66.48146820 -119.68481445]
[79.34934235 -111.97651672]
[86.20093536 -115.02703857]
[80.10009766 -128.73031616]
[93.80346680 -134.83094788]
[99.90411377 -121.12808990]
[106.75570679 -124.17861176]
[109.63760376 -138.89916992]
[112.51950836 -153.61972046]
[115.40140533 -168.34027100]
[118.28330994 -183.06082153]
[121.16520691 -197.78137207]
[124.04711151 -212.50192261]
[126.92900848 -227.22247314]
[129.69224548 -241.96575928]
[132.33662415 -256.73083496]
[123.57537842 -269.61019897]
[126.46748352 -284.54641724]
[138.80000305 -292.81954956]
[141.44436646 -307.58462524]
[144.08874512 -322.34970093]
[146.73312378 -337.11477661]
[149.37750244 -351.87982178]
[152.02188110 -366.64489746]
[141.44584656 -377.84548950]
[139.51554871 -392.94940186]
[146.76338196 -406.13775635]
[160.22612000 -412.45382690]
[162.87049866 -427.21887207]
[165.51487732 -441.98394775]
[157.56521606 -455.91888428]
[163.63706970 -470.76852417]
[179.07263184 -475.14151001]
[192.03105164 -465.68325806]
[192.57176208 -449.64932251]
[180.27995300 -439.33956909]
[177.63557434 -424.57449341]
[174.99119568 -409.80944824]
[185.42506409 -399.21356201]
[187.64520264 -384.32952881]
[180.59291077 -370.83438110]
[166.78695679 -364.00051880]
[164.14257812 -349.23544312]
[161.49819946 -334.47039795]
[158.85382080 -319.70532227]
[156.20944214 -304.94024658]
[153.56506348 -290.17517090]
[162.25973511 -278.13613892]
[159.78828430 -263.12460327]
[147.10168457 -254.08645630]
[144.45730591 -239.32139587]
[146.37528992 -232.17352295]
[141.64956665 -224.34057617]
[138.76765442 -209.62002563]
[135.88575745 -194.89947510]
[133.00386047 -180.17892456]
[130.12196350 -165.45837402]
[127.24005890 -150.73782349]
[124.35815430 -136.01727295]
[121.47625732 -121.29671478]
[113.46743011 -94.78122711]
[94.50700378 -87.57362366]
[95.71400452 -72.62226868]
[96.92099762 -57.67090607]
[98.12799835 -42.71954727]
[99.33499908 -27.76818657]
[100.54199219 -12.81682682]
[101.74899292 2.13453269]
[102.95599365 17.08589172]
[104.16298676 32.03725052]
[105.36998749 46.98861313]
[106.57698822 61.93997192]
[107.78398895 76.89133453]
[108.99098206 91.84268951]
[114.75913239 105.68929291]
[124.52380371 117.07574463]
[134.28846741 128.46218872]
[144.05314636 139.84863281]
[153.81781006 151.23509216]
[151.07180786 136.48858643]
[153.13484192 121.63112640]
[159.79473877 108.19068146]
[170.36660767 97.54945374]
[183.76321411 90.80181122]
[198.60687256 88.64167023]
[213.37101746 91.29119110]
[226.53730774 98.47789764]
[236.75172424 109.46269989]
[242.96379089 123.11590576]
[244.53466797 138.03343201]
[241.30281067 152.68112183]
[233.60057068 165.55262756]
[222.22006226 175.32421875]
[208.33164978 180.99096680]
[193.36364746 181.97013855]
[178.85534668 178.16099548]
[166.29930115 169.95573425]
[173.05528259 183.34814453]
[179.81124878 196.74057007]
[186.67488098 210.07812500]
[193.64572144 223.35997009]
[200.61657715 236.64181519]
[207.58741760 249.92364502]
[214.35562134 256.07824707]
[214.56163025 263.47607422]
[221.31759644 276.86849976]
[228.07357788 290.26092529]
[243.16107178 294.96655273]
[250.42808533 309.00100708]
[245.56321716 324.03790283]
[231.45271301 331.15612793]
[216.46807861 326.13256836]
[209.49943542 311.94757080]
[214.68115234 297.01690674]
[207.92518616 283.62448120]
[201.16921997 270.23205566]
[194.30558777 256.89450073]
[187.33473206 243.61265564]
[180.36389160 230.33081055]
[173.39303589 217.04898071]
[167.49296570 212.58134460]
[166.41882324 203.49653625]
[159.66285706 190.10412598]
[152.90689087 176.71170044]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[10 44]
[11 43]
[13 41]
[14 40]
[15 39]
[17 38]
[18 37]
[19 36]
[20 35]
[25 34]
[26 33]
[27 32]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[55 135]
[56 134]
[57 133]
[58 132]
[59 72]
[60 71]
[61 70]
[62 69]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 121]
[86 120]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[98 108]
[99 107]
[100 106]
[167 194]
[168 193]
[169 192]
[170 190]
[171 189]
[172 188]
[173 187]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
