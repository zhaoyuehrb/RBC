%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUCACGUGAUGCAUGUCAUGGCCGCCUCCAUGGCCCGGGGAGGCGUGAGUGCCAGGGUUCUACUGCAGGCUGCCAGGGGCACCUGGUGGAACAGACCUGGGGGCACUU\
) } def
/len { sequence length } bind def

/coor [
[123.76910400 115.33184814]
[119.06240845 120.89641571]
[113.09009552 125.07359314]
[106.24867249 127.58604431]
[98.99238586 128.26695251]
[91.80299377 127.07110596]
[85.15782928 124.07791138]
[74.18270111 134.30270386]
[63.20757294 144.52751160]
[52.23244095 154.75230408]
[41.25731277 164.97711182]
[30.28218079 175.20190430]
[26.00012016 191.03213501]
[10.08246136 194.97677612]
[-1.09607172 182.97792053]
[3.96403742 167.37896729]
[20.05738258 164.22677612]
[31.03251266 154.00198364]
[42.00764084 143.77717590]
[52.98277283 133.55238342]
[63.95790100 123.32758331]
[74.93302917 113.10278320]
[72.62896729 107.13179016]
[71.72628784 100.79566193]
[72.27120972 94.41879272]
[58.87731934 87.66573334]
[45.48343277 80.91268158]
[32.08954620 74.15962219]
[18.69565582 67.40656281]
[5.30176878 60.65351105]
[-8.09211922 53.90045547]
[-21.33009338 61.82254791]
[-36.74884796 61.30721283]
[-49.42831421 52.51888275]
[-55.32251740 38.26189041]
[-52.55064392 23.08558273]
[-41.99718475 11.83267021]
[-27.02971268 8.09391212]
[-12.42429256 13.06233501]
[-2.84145999 25.15253258]
[-1.33906293 40.50656509]
[12.05482483 47.25962067]
[25.44871330 54.01268005]
[38.84260178 60.76573563]
[52.23648834 67.51879120]
[65.63037872 74.27185059]
[79.02426147 81.02490234]
[103.59268951 71.94419098]
[125.08021545 86.92259979]
[139.74354553 83.76241302]
[154.40687561 80.60221863]
[169.07020569 77.44203186]
[183.73353577 74.28184509]
[198.39686584 71.12165070]
[213.06019592 67.96146393]
[227.57618713 64.18179321]
[241.91868591 59.78945160]
[256.26119995 55.39710999]
[270.40435791 50.40001297]
[284.32269287 44.80716705]
[298.24102783 39.21431732]
[312.15936279 33.62147141]
[326.07769775 28.02862549]
[339.99603271 22.43577766]
[353.91436768 16.84292984]
[358.44549561 11.70539474]
[364.06134033 9.99992752]
[368.78176880 11.35207272]
[382.99423218 6.55561399]
[397.20669556 1.75915515]
[411.41915894 -3.03730369]
[418.67666626 -8.82826996]
[426.10217285 -7.76220655]
[440.44467163 -12.15454769]
[454.78720093 -16.54689026]
[469.12969971 -20.93923187]
[482.50402832 -31.35859871]
[496.21859741 -21.39129639]
[490.43737793 -5.45347977]
[473.52203369 -6.59673023]
[459.17953491 -2.20438838]
[444.83703613 2.18795300]
[430.49453735 6.58029461]
[416.21560669 11.17515469]
[402.00314331 15.97161388]
[387.79071045 20.76807213]
[373.57824707 25.56453133]
[359.50720215 30.76126671]
[345.58886719 36.35411453]
[331.67053223 41.94696045]
[317.75219727 47.53980637]
[303.83386230 53.13265610]
[289.91552734 58.72550201]
[275.99719238 64.31835175]
[274.27499390 67.55422211]
[270.82174683 70.06046295]
[266.02597046 70.99600983]
[260.65353394 69.73960876]
[246.31101990 74.13195038]
[231.96852112 78.52429199]
[229.97811890 81.60246277]
[226.32475281 83.80680847]
[221.46691895 84.33228302]
[216.22038269 82.62479401]
[201.55705261 85.78498077]
[186.89372253 88.94516754]
[172.23039246 92.10536194]
[157.56706238 95.26554871]
[142.90373230 98.42573547]
[128.24040222 101.58592987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[12 17]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[49 110]
[50 109]
[51 108]
[52 107]
[53 106]
[54 105]
[55 104]
[56 100]
[57 99]
[58 98]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[65 88]
[68 87]
[69 86]
[70 85]
[71 84]
[73 83]
[74 82]
[75 81]
[76 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
