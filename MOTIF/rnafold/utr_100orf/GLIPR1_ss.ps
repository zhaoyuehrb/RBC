%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAUGAACUCAUGCUCUGUUCUGUUUUCUCAAAGCUGAAGUCGGCUAGGUUUGCAAAGCUGUGGGCUGAGCACUCAGGCAAUCACACUCUCAGAAACUGCGGCGGCUCUGGACUGCAGCCUCCCAAGGCUCCAUGCCAGACAAAGCAUGCGUGUCACACUUGCUACAAUAGCCUGGAUGGUUUCUUUUGUCUCCAAUUAUUCACACACAGCAAAUAUUUUGCCAGAUAUCGAAAAUGAAGAUUUCA\
) } def
/len { sequence length } bind def

/coor [
[72.41477966 93.91771698]
[59.14989090 86.91466522]
[45.88500214 79.91161346]
[32.62011337 72.90856171]
[23.59492111 71.67549133]
[19.23286819 65.73255920]
[6.05739069 58.56270599]
[-7.11808729 51.39285278]
[-20.33853340 44.30625916]
[-33.60342026 37.30320740]
[-49.41958618 37.70261002]
[-57.06232452 24.91833305]
[-70.32721710 17.91527939]
[-83.59210205 10.91222668]
[-96.85698700 3.90917420]
[-110.12187958 -3.09387875]
[-123.38676453 -10.09693146]
[-139.20292664 -9.69752598]
[-146.84567261 -22.48180580]
[-160.11056519 -29.48485756]
[-173.37544250 -36.48791122]
[-168.29704285 -6.22212791]
[-188.87991333 11.64052391]
[-211.55838013 4.34480476]
[-224.35539246 12.17017746]
[-237.15240479 19.99555016]
[-238.50657654 35.34066010]
[-248.51974487 46.81192780]
[-263.19403076 50.14802170]
[-276.85537720 44.27391815]
[-289.65240479 52.09929276]
[-291.57818604 62.77265549]
[-298.89898682 70.47508240]
[-309.03381348 72.84033203]
[-318.59609985 69.32510376]
[-331.58648682 76.82510376]
[-344.57687378 84.32510376]
[-357.56726074 91.82510376]
[-370.55764771 99.32510376]
[-378.28414917 113.78998566]
[-394.68106079 114.06056976]
[-402.88064575 99.85848999]
[-394.44784546 85.79363251]
[-378.05764771 86.33471680]
[-365.06726074 78.83471680]
[-352.07687378 71.33471680]
[-339.08648682 63.83472061]
[-326.09609985 56.33472061]
[-317.64880371 38.92550659]
[-297.47778320 39.30227661]
[-284.68075562 31.47690582]
[-283.68441772 16.63961220]
[-274.02807617 5.09754276]
[-259.25424194 1.41155148]
[-244.97778320 7.19853687]
[-232.18077087 -0.62683588]
[-219.38375854 -8.45220852]
[-223.33226013 -15.78011990]
[-224.58102417 -25.03089333]
[-222.35980225 -35.15429688]
[-235.44377136 -42.48980713]
[-248.52774048 -49.82531738]
[-261.61172485 -57.16082764]
[-274.69567871 -64.49633789]
[-287.77966309 -71.83184814]
[-300.86361694 -79.16735840]
[-321.00595093 -78.02755737]
[-330.10598755 -95.10463715]
[-343.37088013 -102.10768890]
[-356.63577271 -109.11074066]
[-369.90066528 -116.11380005]
[-383.16555786 -123.11685181]
[-381.15716553 -108.25191498]
[-391.43270874 -97.32427216]
[-406.39297485 -98.41537476]
[-414.97421265 -110.71831512]
[-410.83023071 -125.13453674]
[-397.02529907 -131.00262451]
[-409.82232666 -138.82800293]
[-423.66360474 -132.01458740]
[-438.98861694 -133.78865051]
[-450.90722656 -143.58407593]
[-455.61621094 -158.27519226]
[-451.61300659 -173.17411804]
[-440.17495728 -183.52664185]
[-424.95196533 -186.02932739]
[-410.80157471 -179.88357544]
[-402.23916626 -167.05047607]
[-401.99694824 -151.62501526]
[-389.19992065 -143.79963684]
[-376.16250610 -136.38174438]
[-362.89761353 -129.37869263]
[-349.63272095 -122.37563324]
[-336.36782837 -115.37258148]
[-323.10293579 -108.36952972]
[-313.68051147 -112.24408722]
[-303.46343994 -110.26405334]
[-295.85641479 -102.84417725]
[-293.52810669 -92.25132751]
[-280.44415283 -84.91581726]
[-267.36016846 -77.58030701]
[-254.27619934 -70.24479675]
[-241.19223022 -62.90928650]
[-228.10826111 -55.57378006]
[-215.02429199 -48.23826981]
[-208.50556946 -51.94721985]
[-215.92326355 -64.98477173]
[-202.88560486 -72.40226746]
[-195.46813965 -59.36512375]
[-188.94941711 -63.07407379]
[-188.57095337 -78.06929779]
[-188.19248962 -93.06452179]
[-187.81402588 -108.05974579]
[-198.42420959 -119.46421051]
[-197.82678223 -134.66610718]
[-186.88897705 -144.71101379]
[-186.51051331 -159.70623779]
[-193.89715576 -173.69723511]
[-185.84120178 -186.22523499]
[-185.46273804 -201.22045898]
[-185.08427429 -216.21568298]
[-184.70581055 -231.21090698]
[-184.32734680 -246.20613098]
[-192.63697815 -260.34411621]
[-184.31367493 -274.47402954]
[-167.91975403 -274.06027222]
[-160.31985474 -259.52844238]
[-169.33212280 -245.82766724]
[-169.71058655 -230.83244324]
[-170.08905029 -215.83721924]
[-170.46751404 -200.84199524]
[-170.84597778 -185.84677124]
[-163.43226624 -172.92832947]
[-171.51528931 -159.32777405]
[-171.89375305 -144.33255005]
[-161.47660828 -133.74865723]
[-161.64680481 -118.53598022]
[-172.81880188 -107.68128204]
[-173.19726562 -92.68605804]
[-173.57572937 -77.69083405]
[-173.95419312 -62.69561005]
[-166.37239075 -49.75279999]
[-153.10749817 -42.74974442]
[-139.84262085 -35.74669266]
[-124.97525024 -36.64700317]
[-116.38371277 -23.36182022]
[-103.11882782 -16.35876656]
[-89.85393524 -9.35571384]
[-76.58905029 -2.35266066]
[-63.32416153 4.65039206]
[-50.05927277 11.65344524]
[-35.19190216 10.75313473]
[-26.60036850 24.03831863]
[-13.33548069 31.04137039]
[-5.97147703 31.38399124]
[0.05176476 38.21737289]
[13.22724247 45.38722610]
[26.40272141 52.55707932]
[39.62316513 59.64367294]
[52.88805389 66.64672852]
[66.15293884 73.64978027]
[79.41783142 80.65283203]
[100.78491211 51.07304764]
[152.22959900 53.96923828]
[165.74998474 47.47316360]
[179.27037048 40.97708893]
[192.79077148 34.48101425]
[204.44902039 22.17160988]
[219.50469971 29.96667290]
[216.18209839 46.59185410]
[199.28684998 48.00140762]
[185.76644897 54.49748230]
[172.24606323 60.99355698]
[158.72566223 67.48963165]
[160.04354858 74.87293243]
[163.99722290 97.02284241]
[178.93011475 98.44011688]
[193.86300659 99.85739899]
[208.79591370 101.27467346]
[223.72880554 102.69194794]
[238.66169739 104.10923004]
[253.59458923 105.52650452]
[268.52749634 106.94377899]
[283.46038818 108.36106110]
[291.30834961 95.27014160]
[304.06378174 86.88790894]
[319.19406128 84.87866974]
[333.69509888 89.64135742]
[344.68765259 100.23032379]
[349.98916626 114.54313660]
[348.54702759 129.73797607]
[340.64758301 142.79788208]
[327.85925293 151.12982178]
[312.72116089 153.07945251]
[298.23901367 148.25970459]
[287.28820801 137.62753296]
[282.04309082 123.29395294]
[267.11019897 121.87667847]
[252.17730713 120.45939636]
[237.24441528 119.04212189]
[222.31152344 117.62484741]
[207.37863159 116.20756531]
[192.44573975 114.79029083]
[177.51284790 113.37301636]
[162.57995605 111.95573425]
[159.37461853 118.73628998]
[172.93572998 125.14694214]
[186.49673462 131.55780029]
[180.08566284 145.11871338]
[166.52507019 138.70803833]
[152.96397400 132.29739380]
[149.75863647 139.07794189]
[160.33174133 149.71794128]
[170.90483093 160.35795593]
[181.47792053 170.99795532]
[192.05101013 181.63795471]
[207.50447083 188.61128235]
[205.08158875 205.39122009]
[188.28671265 207.70819092]
[181.41101074 192.21105957]
[170.83792114 181.57104492]
[160.26483154 170.93104553]
[149.69172668 160.29104614]
[139.11863708 149.65103149]
[132.69557190 153.52328491]
[119.84944916 161.26777649]
[113.42639160 165.14001465]
[117.89936066 179.45758057]
[129.39982605 190.32264709]
[125.80979156 204.77812195]
[130.28276062 219.09568787]
[134.75572205 233.41325378]
[149.65769958 237.40510559]
[160.01895142 248.83523560]
[162.53326416 264.05633545]
[156.39831543 278.21139526]
[143.57174683 286.78359985]
[128.14646912 287.03759766]
[115.04463959 278.89230347]
[108.44699860 264.94689941]
[110.45883179 249.65127563]
[120.43816376 237.88621521]
[115.96519470 223.56866455]
[111.49222565 209.25109863]
[100.31169891 199.41011047]
[103.58179474 183.93054199]
[99.10883331 169.61297607]
[68.27116394 145.93572998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[6 158]
[7 157]
[8 156]
[9 154]
[10 153]
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[17 146]
[19 144]
[20 143]
[21 142]
[24 57]
[25 56]
[26 55]
[30 51]
[31 50]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[65 100]
[66 99]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[78 90]
[79 89]
[110 141]
[111 140]
[112 139]
[113 138]
[116 135]
[117 134]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[164 174]
[165 173]
[166 172]
[167 171]
[176 205]
[177 204]
[178 203]
[179 202]
[180 201]
[181 200]
[182 199]
[183 198]
[184 197]
[212 224]
[213 223]
[214 222]
[215 221]
[216 220]
[227 247]
[228 246]
[230 244]
[231 243]
[232 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
