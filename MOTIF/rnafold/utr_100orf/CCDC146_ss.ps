%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACCAAGGACGCGACUUCUUGUUUGGAGAGGGUGGAGCUUUGGAGUGAGACCCAGGAGGCCAAAUCCCAAAGAGAAAAAUAGGAGCCUAAAUAAGGAUCAGGACCAAGGGAAGGGAAUCGUGAAAAAUGGAAGACAGUAGCACAGACACAGAAAAAGAAGAGGAAGAGGAGAAAGAUGAAAAGGAUCAAGAGCCCAUUUAUGCCAUAGUGCCCACAAUUAACAUUC\
) } def
/len { sequence length } bind def

/coor [
[15.30275917 488.44302368]
[10.51280212 494.93093872]
[4.06248522 499.71505737]
[-3.47288132 502.39318848]
[-11.42831993 502.74993896]
[-16.88093948 516.72381592]
[-22.33355904 530.69763184]
[-27.78617859 544.67150879]
[-33.23879623 558.64538574]
[-38.69141769 572.61926270]
[-32.11418152 586.98992920]
[-37.70318604 601.77294922]
[-52.14256668 608.19787598]
[-66.86569977 602.45288086]
[-73.13761139 587.94641113]
[-67.23728943 573.28485107]
[-52.66528320 567.16662598]
[-47.21266556 553.19274902]
[-41.76004410 539.21893311]
[-36.30742645 525.24505615]
[-30.85480499 511.27117920]
[-25.40218544 497.29730225]
[-36.16848373 478.18276978]
[-29.13921356 457.10873413]
[-8.54615211 448.06152344]
[-4.26610899 433.68511963]
[-11.55894184 420.74871826]
[-7.42316675 406.10803223]
[6.19515610 398.54635620]
[10.47519970 384.16992188]
[3.18236589 371.23355103]
[7.31814098 356.59283447]
[20.93646431 349.03115845]
[25.21650696 334.65475464]
[29.49655151 320.27835083]
[33.77659225 305.90191650]
[28.79350471 289.06991577]
[42.28744125 276.53192139]
[46.36899185 262.09790039]
[50.45054245 247.66389465]
[46.46832275 233.31149292]
[57.66875458 222.13737488]
[61.75030518 207.70335388]
[65.83185577 193.26933289]
[61.84963608 178.91694641]
[73.05006409 167.74282837]
[77.13162231 153.30880737]
[81.21317291 138.87478638]
[85.29472351 124.44076538]
[75.67895508 114.90245056]
[71.54688263 102.00405884]
[73.83016205 88.65380859]
[62.12112427 79.27839661]
[50.41208649 69.90298462]
[39.09051514 73.48278046]
[27.56361389 71.18212891]
[18.66697693 63.68475342]
[14.53221703 52.93805313]
[16.07682610 41.64833832]
[4.63056517 31.95384979]
[-6.88221359 22.33844757]
[-18.46096230 12.80259228]
[-33.98073196 14.13468742]
[-45.58739090 4.29902935]
[-46.76169586 -10.50490952]
[-58.34044647 -20.04076576]
[-69.91919708 -29.57662201]
[-81.49794769 -39.11247635]
[-96.21712494 -32.16517258]
[-112.43437195 -32.33465958]
[-126.90090179 -39.53619003]
[-136.74084473 -52.28139114]
[-140.02285767 -67.98558044]
[-136.13906860 -83.49185944]
[-147.84809875 -92.86727905]
[-161.59036255 -86.22551727]
[-176.85348511 -86.21263123]
[-190.60693359 -92.83116913]
[-200.11997986 -104.76702881]
[-203.50379944 -119.65032196]
[-200.08651733 -134.52597046]
[-190.54664612 -146.44039917]
[-176.77833557 -153.02799988]
[-161.51528931 -152.98077393]
[-147.78800964 -146.30813599]
[-138.32203674 -134.33489990]
[-134.99685669 -119.43839264]
[-138.47268677 -104.57631683]
[-126.76364899 -95.20090485]
[-114.56846619 -101.80171204]
[-100.73512268 -103.26272583]
[-87.34700775 -99.33071899]
[-76.43309021 -90.56722260]
[-69.66046143 -78.26852417]
[-68.07971191 -64.27404022]
[-71.96208954 -50.69122696]
[-60.38333893 -41.15537262]
[-48.80458832 -31.61951447]
[-37.22584152 -22.08365822]
[-22.47136497 -23.76920700]
[-10.59302521 -14.26343632]
[-8.92510700 1.22384238]
[2.65364289 10.75969887]
[9.80632782 12.58342266]
[14.32505417 20.50758743]
[25.77131462 30.20207596]
[43.90069199 27.60190964]
[58.41468811 39.28927994]
[59.78749847 58.19394302]
[71.49653625 67.56935120]
[83.20558167 76.94477081]
[96.25222015 71.72367859]
[110.20851898 73.36576080]
[121.68701935 81.47246552]
[135.25238037 75.07081604]
[148.81773376 68.66917419]
[153.89543152 56.82117081]
[165.31605530 51.76557922]
[176.74287415 55.71153259]
[190.39515686 49.49740601]
[201.43101501 39.33818054]
[208.75131226 26.24569511]
[216.07160950 13.15320873]
[208.30023193 1.53064227]
[206.30160522 -12.24029350]
[210.40904236 -25.46624184]
[219.76725769 -35.58518600]
[232.50967407 -40.66271973]
[246.13055420 -39.76169205]
[253.63055420 -52.75207520]
[250.88389587 -68.55825806]
[261.63650513 -80.46458435]
[277.63992310 -79.33753967]
[286.61767578 -66.04169464]
[281.68283081 -50.77648544]
[266.62094116 -45.25207520]
[259.12094116 -32.26169205]
[267.54125977 -18.46348572]
[267.85238647 -2.20798206]
[259.87457275 12.06634140]
[245.70429993 20.41413689]
[229.16409302 20.47350883]
[221.84379578 33.56599426]
[214.52349854 46.65848160]
[217.29788208 53.62646484]
[229.99891663 45.64626694]
[242.69995117 37.66606903]
[255.40100098 29.68586922]
[268.10205078 21.70567131]
[280.80307007 13.72547150]
[293.50411987 5.74527311]
[306.20516968 -2.23492599]
[318.90618896 -10.21512508]
[326.41546631 -23.20015144]
[337.86758423 -32.88773346]
[351.91784668 -38.14036560]
[366.91650391 -38.34129715]
[381.10241699 -33.46692657]
[392.80993652 -24.08960533]
[400.66433716 -11.31039810]
[403.74340820 3.37017918]
[401.68557739 18.22835541]
[394.73251343 31.51950455]
[383.70059204 41.68299866]
[369.88516235 47.52545929]
[354.90844727 48.36087418]
[340.52880859 44.09106827]
[325.81854248 47.02498627]
[311.10827637 49.95890808]
[296.39801025 52.89282990]
[281.68771362 55.82675171]
[266.97744751 58.76067352]
[252.26718140 61.69459534]
[237.55691528 64.62851715]
[222.84663391 67.56243896]
[225.62101746 74.53041840]
[239.93708801 79.00814056]
[254.25317383 83.48586273]
[267.32400513 74.90172577]
[282.84848022 76.77899170]
[293.49645996 88.23126984]
[294.24026489 103.85115814]
[284.72869873 116.26341248]
[269.45281982 119.60734558]
[255.62545776 112.30406189]
[249.77545166 97.80194092]
[235.45936584 93.32421875]
[221.14329529 88.84649658]
[207.47700500 83.04821014]
[199.09703064 73.54506683]
[196.60928345 63.14968109]
[182.95700073 69.36380768]
[173.53652954 84.17604065]
[155.21937561 82.23452759]
[141.65402222 88.63617706]
[128.08866882 95.03782654]
[126.15734863 111.37493896]
[115.52516174 123.92834473]
[99.72874451 128.52232361]
[95.64719391 142.95634460]
[91.56563568 157.39036560]
[87.48408508 171.82438660]
[91.17436981 187.20918274]
[80.26587677 197.35089111]
[76.18432617 211.78491211]
[72.10277557 226.21893311]
[75.79305267 241.60374451]
[64.88456726 251.74543762]
[60.80301285 266.17947388]
[56.72145844 280.61349487]
[62.32132721 292.22381592]
[58.63326263 304.15646362]
[48.15300751 310.18197632]
[43.87296295 324.55838013]
[39.59291840 338.93478394]
[35.31287766 353.31121826]
[42.57783127 367.09011841]
[38.03246307 381.60885620]
[24.85161209 388.44998169]
[20.57156754 402.82638550]
[27.83652306 416.60528564]
[23.29115295 431.12405396]
[10.11030388 437.96514893]
[5.83026028 452.34158325]
[12.00142384 457.79132080]
[16.29219055 464.77835083]
[18.34446144 472.68191528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[25 224]
[26 223]
[29 220]
[30 219]
[33 216]
[34 215]
[35 214]
[36 213]
[38 210]
[39 209]
[40 208]
[42 206]
[43 205]
[44 204]
[46 202]
[47 201]
[48 200]
[49 199]
[52 111]
[53 110]
[54 109]
[59 106]
[60 105]
[61 103]
[62 102]
[65 99]
[66 98]
[67 97]
[68 96]
[74 89]
[75 88]
[114 196]
[115 195]
[116 194]
[119 192]
[120 191]
[121 144]
[122 143]
[123 142]
[129 137]
[130 136]
[176 188]
[177 187]
[178 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
