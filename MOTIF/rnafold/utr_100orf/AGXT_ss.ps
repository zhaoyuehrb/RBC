%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAAGCCCAUCCACCAAUCCUCACCUCUCACCUCUGUGUCCGCCCUGCUGGGAAAUAUUCCAGGCUUUGGCCAAGGCCAGUGCAGCCCCAGGUUCCCGAGCGGCAGGUUGGGUGCGGACCAUGGCCUCUCACAAGCUGCUGGUGACCCCCCCCAAGGCCCUGCUCAAGCCCCUCUCCAUCCCCAACCAGCUCCUGCUGGGGCCUGGUCCUUCCAACCUGC\
) } def
/len { sequence length } bind def

/coor [
[137.93473816 113.06248474]
[129.11979675 136.04020691]
[125.95960999 150.70353699]
[122.79942322 165.36686707]
[131.57901001 178.50817871]
[128.41290283 193.99209595]
[115.17949677 202.63224792]
[99.72992706 199.30261230]
[91.23016357 185.97859192]
[94.72295380 170.56509399]
[108.13609314 162.20668030]
[111.29627991 147.54335022]
[114.45646667 132.88002014]
[108.24264526 128.68020630]
[99.84302521 141.10784912]
[91.44340515 153.53549194]
[83.04378510 165.96313477]
[74.64415741 178.39079285]
[66.24453735 190.81843567]
[57.84491730 203.24607849]
[49.44510269 215.67358398]
[37.01771927 207.27359009]
[45.41727066 194.84645081]
[53.81689453 182.41880798]
[62.21651459 169.99116516]
[70.61613464 157.56352234]
[79.01576233 145.13587952]
[87.41538239 132.70823669]
[95.81500244 120.28058624]
[89.60118103 116.08077240]
[77.17353821 124.48039246]
[64.74588776 132.88002014]
[58.06134033 147.85496521]
[41.72458267 149.28408813]
[32.54147339 135.69723511]
[39.95880890 121.07138824]
[56.34626770 120.45236969]
[68.77391052 112.05274963]
[81.20156097 103.65312958]
[81.04236603 96.15481567]
[68.21405029 103.92876434]
[55.06750870 96.70598602]
[54.74945450 81.70935822]
[67.57794189 73.93569183]
[80.72399139 81.15819550]
[80.56479645 73.65988922]
[67.79186249 65.79528046]
[55.01892471 57.93066788]
[42.24598694 50.06605911]
[29.47304916 42.20145035]
[16.64478493 34.42741394]
[3.76183605 26.74434090]
[-9.12111282 19.06126595]
[-22.00406265 11.37819290]
[-34.88701248 3.69511914]
[-33.75044250 18.65199661]
[-44.63597107 28.97213554]
[-59.51103592 27.04018211]
[-67.39914703 14.28174686]
[-62.47957611 0.11143196]
[-48.38171005 -5.01423931]
[-60.68924713 -13.58888149]
[-80.83666992 -14.39845467]
[-88.26531219 -32.25571060]
[-100.81056976 -40.47863007]
[-113.35583496 -48.70154953]
[-125.90110016 -56.92446899]
[-138.61807251 -64.87925720]
[-151.50102234 -72.56233215]
[-164.38397217 -80.24540710]
[-177.26692200 -87.92848206]
[-190.14985657 -95.61155701]
[-206.54609680 -95.30245972]
[-214.77900696 -109.48523712]
[-206.37928772 -123.56986237]
[-189.98783875 -123.06727600]
[-182.46679688 -108.49449921]
[-169.58384705 -100.81143188]
[-156.70089722 -93.12835693]
[-143.81794739 -85.44528198]
[-130.93499756 -77.76220703]
[-127.45243835 -78.26293182]
[-123.55445099 -77.10675812]
[-120.02012634 -74.11679077]
[-117.67817688 -69.46973419]
[-105.13291931 -61.24681091]
[-92.58765411 -53.02389526]
[-80.04238892 -44.80097580]
[-70.27613068 -47.77285004]
[-60.27487564 -44.82061386]
[-53.40459061 -36.68640900]
[-52.11460495 -25.89641953]
[-39.80706787 -17.32177734]
[-27.20393753 -9.18782997]
[-14.32098770 -1.50475609]
[-1.43803895 6.17831802]
[11.44491005 13.86139202]
[24.32785988 21.54446602]
[31.67669106 22.27025414]
[37.33765793 29.42851448]
[50.11059570 37.29312134]
[62.88353348 45.15773392]
[75.65647125 53.02234268]
[88.42940521 60.88695145]
[103.07000732 64.15081024]
[117.97398376 62.45627975]
[132.87796021 60.76174545]
[147.78193665 59.06721497]
[162.68591309 57.37268066]
[177.58990479 55.67814636]
[192.49388123 53.98361588]
[207.39785767 52.28908157]
[222.30183411 50.59454727]
[228.56518555 41.71433258]
[238.47598267 37.82302475]
[248.67854309 39.97908401]
[255.85867310 47.23565292]
[270.80462646 45.96356201]
[285.75057983 44.69147491]
[300.69656372 43.41938400]
[315.64251709 42.14729691]
[330.58847046 40.87520599]
[338.86596680 37.03200150]
[345.75469971 39.69239807]
[360.71716309 38.63193512]
[375.67962646 37.57146835]
[390.64208984 36.51100540]
[405.60455322 35.45054245]
[420.56701660 34.39007950]
[425.72064209 23.01124382]
[435.16619873 14.94762230]
[447.07345581 11.68105602]
[459.16918945 13.77160454]
[469.17105103 20.76259041]
[475.21829224 31.27860260]
[490.20477295 30.64198494]
[500.86547852 19.28474426]
[516.07299805 18.85261154]
[526.83465576 29.08596420]
[541.82116699 28.44934654]
[556.80761719 27.81272888]
[571.79412842 27.17611122]
[586.78057861 26.53949356]
[601.76708984 25.90287399]
[604.77734375 11.13724518]
[611.23028564 -2.47055674]
[620.74682617 -14.13138866]
[632.77038574 -23.17016792]
[646.59954834 -29.06495667]
[661.42864990 -31.47709084]
[676.39501953 -30.27064514]
[690.62908936 -25.52007484]
[703.30474854 -17.50564194]
[713.68756104 -6.69688463]
[721.17706299 6.27489328]
[725.34173584 20.65348816]
[740.32818604 20.01687050]
[755.31469727 19.38025284]
[765.97540283 8.02301311]
[781.18292236 7.59087992]
[791.94458008 17.82423401]
[806.93109131 17.18761635]
[818.79882812 6.39243793]
[834.61474609 9.08249760]
[842.24621582 23.19421196]
[835.83898926 37.90227890]
[820.30822754 41.92393112]
[807.56768799 32.17409897]
[792.58123779 32.81071854]
[782.72613525 43.91986084]
[767.53680420 44.77897263]
[755.95129395 34.36673737]
[740.96484375 35.00335693]
[725.97833252 35.63997269]
[723.04809570 50.31995773]
[716.68560791 63.88016129]
[707.25683594 75.53050232]
[695.30651855 84.59103394]
[681.52661133 90.53162384]
[666.71649170 93.00296021]
[651.73620605 91.85711670]
[637.45703125 87.15635681]
[624.71020508 79.16980743]
[614.23901367 68.35803986]
[606.65533447 55.34650803]
[602.40368652 40.88935852]
[587.41723633 41.52597809]
[572.43072510 42.16259384]
[557.44427490 42.79921341]
[542.45776367 43.43583298]
[527.47131348 44.07244873]
[517.61621094 55.18159485]
[502.42684937 56.04070282]
[490.84136963 45.62846756]
[475.85488892 46.26508713]
[466.77847290 61.42139053]
[450.27325439 68.14878082]
[432.88354492 63.57577896]
[421.62750244 49.35254669]
[406.66503906 50.41300964]
[391.70254517 51.47347260]
[376.74008179 52.53393555]
[361.77761841 53.59440231]
[346.81515503 54.65486526]
[331.86056519 55.82117081]
[316.91461182 57.09325790]
[301.96862793 58.36534882]
[287.02267456 59.63743591]
[272.07672119 60.90952301]
[257.13076782 62.18161392]
[242.10740662 74.36215210]
[223.99636841 65.49852753]
[209.09239197 67.19306183]
[194.18841553 68.88758850]
[179.28442383 70.58212280]
[164.38044739 72.27665710]
[149.47647095 73.97119141]
[134.57249451 75.66572571]
[119.66851807 77.36026001]
[104.76454163 79.05479431]
[119.54041290 80.37560272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[30 39]
[31 38]
[32 37]
[46 104]
[47 103]
[48 102]
[49 101]
[50 100]
[51 98]
[52 97]
[53 96]
[54 95]
[55 94]
[61 93]
[62 92]
[64 88]
[65 87]
[66 86]
[67 85]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[105 220]
[106 219]
[107 218]
[108 217]
[109 216]
[110 215]
[111 214]
[112 213]
[113 212]
[117 210]
[118 209]
[119 208]
[120 207]
[121 206]
[122 205]
[124 204]
[125 203]
[126 202]
[127 201]
[128 200]
[129 199]
[135 195]
[136 194]
[139 191]
[140 190]
[141 189]
[142 188]
[143 187]
[144 186]
[156 174]
[157 173]
[158 172]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
