%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:27:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCCGCCCCCCACCUGGCUCCGCGGGCAGCCGGAGCGCACCCGGCCGGAAGCCGCUGUCGGGGAGCCGGCGGUGGGGCUGGACGCAGGUGCAACUGACAUGGGUGAACCCCAGGGAUCCAUGCGGAUUCUAGUGACAGGGGGCUCUGGGCUGGUAGGCAAAGCCAUCCAGAAGGUGGUAGCAGAUGGAGCUGGACUUC\
) } def
/len { sequence length } bind def

/coor [
[265.40087891 281.52383423]
[255.34649658 270.39236450]
[245.29212952 259.26089478]
[235.23776245 248.12940979]
[225.18339539 236.99794006]
[206.40110779 232.42279053]
[202.46231079 212.65829468]
[192.06494141 201.84649658]
[181.66757202 191.03471375]
[171.27020264 180.22291565]
[160.87284851 169.41113281]
[150.47547913 158.59934998]
[139.82751465 148.03427124]
[128.93479919 137.72171021]
[118.04208374 127.40915680]
[99.03746796 136.63278198]
[76.00028229 132.59393311]
[58.04991150 114.26041412]
[53.74580765 86.66235352]
[42.08124542 96.09304810]
[30.41668320 105.52374268]
[18.75211906 114.95443726]
[7.08755684 124.38512421]
[-4.50295067 133.90669250]
[-16.01869392 143.51853943]
[-18.88484001 159.30349731]
[-33.08072281 166.77720642]
[-47.71647644 160.20649719]
[-51.56480408 144.63183594]
[-41.67359543 132.00077820]
[-25.63054276 132.00279236]
[-14.11479950 122.39094543]
[-10.99160290 115.68589783]
[-2.34313607 112.72056580]
[9.32142735 103.28987122]
[20.98599052 93.85917664]
[32.65055466 84.42848206]
[44.31511688 74.99779510]
[42.91049194 60.06370163]
[29.69204903 52.97337341]
[16.47360611 45.88304901]
[3.25516248 38.79272079]
[-9.96328163 31.70239258]
[-23.29092598 24.81952477]
[-36.72451782 18.14579773]
[-52.52601624 18.93520737]
[-60.48177338 6.34333515]
[-73.91536713 -0.33039215]
[-87.34895325 -7.00411940]
[-100.78254700 -13.67784691]
[-112.97523499 -7.94344044]
[-126.05308533 -10.24729538]
[-135.27764893 -19.52703667]
[-137.43809509 -32.23463440]
[-150.76574707 -39.11750412]
[-164.09338379 -46.00037384]
[-177.42103577 -52.88323975]
[-190.74867249 -59.76610947]
[-204.07632446 -66.64897919]
[-217.40397644 -73.53184509]
[-230.73161316 -80.41471100]
[-244.05926514 -87.29758453]
[-257.38690186 -94.18045044]
[-273.73373413 -92.87171173]
[-282.81652832 -106.52584839]
[-275.29162598 -121.09664917]
[-258.90005493 -121.59492493]
[-250.50404358 -107.50809479]
[-237.17639160 -100.62522888]
[-223.84873962 -93.74235535]
[-210.52110291 -86.85948944]
[-197.19345093 -79.97662354]
[-183.86581421 -73.09375000]
[-170.53816223 -66.21088409]
[-157.21052551 -59.32801819]
[-143.88287354 -52.44514847]
[-130.55523682 -45.56228256]
[-114.76955414 -51.35267639]
[-99.37541199 -43.78917694]
[-94.10881805 -27.11143684]
[-80.67522430 -20.43770981]
[-67.24163818 -13.76398277]
[-53.80804443 -7.09025574]
[-38.96740723 -8.35701466]
[-30.05079079 4.71220636]
[-16.61719894 11.38593388]
[-11.87816811 10.73716068]
[-6.68222380 13.06417561]
[-2.87295365 18.48394966]
[10.34548950 25.57427597]
[23.56393433 32.66460419]
[36.78237915 39.75493240]
[50.00082016 46.84526062]
[56.84284210 43.77333069]
[48.64184952 31.21372414]
[37.59869003 21.06243896]
[39.99854279 6.25565910]
[53.68273544 0.11213425]
[66.34229279 8.15798473]
[66.59024811 23.15526199]
[70.52688599 37.62947464]
[77.36890411 34.55754852]
[80.85348511 19.96790504]
[84.33806610 5.37826109]
[87.82264709 -9.21138287]
[80.68305206 -23.57820892]
[87.59433746 -38.05625153]
[103.25475311 -41.53919601]
[115.65097046 -31.35522461]
[115.27367401 -15.31660843]
[102.41229248 -5.72680187]
[98.92771149 8.86284161]
[95.44313049 23.45248413]
[91.95854950 38.04212952]
[105.28619385 44.92499542]
[115.16535950 33.63774490]
[125.04452515 22.35049057]
[134.92369080 11.06323719]
[144.80285645 -0.22401558]
[154.68202209 -11.51126862]
[164.56118774 -22.79852104]
[167.21226501 -38.98196411]
[182.64662170 -44.52388000]
[194.98670959 -33.72322083]
[191.53811646 -17.69077873]
[175.84844971 -12.91935635]
[165.96928406 -1.63210285]
[156.09011841 9.65515041]
[146.21095276 20.94240379]
[136.33178711 32.22965622]
[126.45261383 43.51691055]
[116.57344818 54.80416107]
[138.07865906 86.27534485]
[128.35464478 116.51644135]
[139.24736023 126.82900238]
[150.14006042 137.14155579]
[155.23344421 138.35537720]
[158.97364807 141.12796021]
[160.99304199 144.68067932]
[161.28726196 148.20198059]
[171.68463135 159.01376343]
[182.08200073 169.82556152]
[192.47937012 180.63734436]
[202.87672424 191.44912720]
[213.27409363 202.26092529]
[224.15332031 201.84497070]
[233.27536011 207.37522888]
[237.74955750 216.81654358]
[236.31486511 226.94357300]
[246.36923218 238.07504272]
[256.42361450 249.20651245]
[266.47796631 260.33798218]
[276.53234863 271.46945190]
[288.96353149 279.86383057]
[303.04550171 285.03082275]
[317.25009155 278.63803101]
[331.45761108 284.07870483]
[337.46463013 297.66000366]
[351.54660034 302.82699585]
[365.62857056 307.99401855]
[382.58108521 307.77377319]
[387.48565674 324.00280762]
[373.24856567 333.20834351]
[360.46157837 322.07598877]
[346.37960815 316.90896606]
[332.29760742 311.74197388]
[318.93218994 318.21505737]
[304.57745361 313.17559814]
[297.87850952 299.11282349]
[283.79653931 293.94580078]
[278.81298828 299.55065918]
[263.86239624 316.36520386]
[270.64089966 329.74624634]
[277.41940308 343.12725830]
[284.19790649 356.50830078]
[296.00949097 357.94079590]
[305.56298828 364.82974243]
[310.54980469 375.36770630]
[309.83413696 386.88388062]
[303.70962524 396.52090454]
[310.06661987 410.10723877]
[316.42358398 423.69360352]
[322.78054810 437.27993774]
[337.93615723 441.13247681]
[347.02764893 453.85565186]
[345.76229858 469.44195557]
[334.73757935 480.53201294]
[319.15902710 481.88946533]
[306.38235474 472.87332153]
[302.44030762 457.74078369]
[309.19421387 443.63693237]
[302.83721924 430.05056763]
[296.48025513 416.46423340]
[290.12329102 402.87786865]
[272.57269287 397.69335938]
[264.23489380 381.04501343]
[270.81686401 363.28680420]
[264.03836060 349.90576172]
[257.25985718 336.52474976]
[250.48135376 323.14370728]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 153]
[2 152]
[3 151]
[4 150]
[5 149]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[12 140]
[13 136]
[14 135]
[15 134]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[24 32]
[25 31]
[39 93]
[40 92]
[41 91]
[42 90]
[43 89]
[44 86]
[45 85]
[47 83]
[48 82]
[49 81]
[50 80]
[54 77]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[102 114]
[103 113]
[104 112]
[105 111]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
[154 170]
[155 169]
[158 166]
[159 165]
[160 164]
[172 200]
[173 199]
[174 198]
[175 197]
[180 194]
[181 193]
[182 192]
[183 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
