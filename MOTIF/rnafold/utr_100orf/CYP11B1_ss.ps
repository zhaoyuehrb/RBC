%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUGGAAUGGCACUCAGGGCAAAGGCAGAGGUGUGCAUGGCAGUGCCCUGGCUGUCCCUGCAAAGGGCACAGGCACUGGGCACGAGAGCCGCCCGGGUCCCCAGGA\
) } def
/len { sequence length } bind def

/coor [
[52.07078934 394.50305176]
[48.71190643 378.81555176]
[58.99367523 366.50033569]
[58.99367523 351.50033569]
[58.99367523 336.50033569]
[58.99367523 321.50033569]
[56.62487411 318.69201660]
[55.58494949 314.54208374]
[56.51438522 309.73031616]
[59.70504379 305.20727539]
[61.01238251 290.26434326]
[58.42000580 283.21789551]
[62.58125305 274.90795898]
[64.32264709 260.00936890]
[66.06404114 245.11080933]
[67.80543518 230.21223450]
[65.41909790 223.09335327]
[69.82027435 214.90797424]
[71.99425507 200.06634521]
[74.16823578 185.22473145]
[76.34220886 170.38310242]
[74.40543365 167.26113892]
[73.97794342 163.00430298]
[75.59494781 158.37803650]
[79.40745544 154.36517334]
[82.86669159 139.76950073]
[86.32592773 125.17382050]
[75.58949280 114.99428558]
[71.36372375 100.81553650]
[74.77569580 86.41927338]
[84.91539764 75.64520264]
[99.07839966 71.36693573]
[102.53763580 56.77126312]
[105.99687195 42.17559052]
[109.45610809 27.57991982]
[105.10990906 12.36738777]
[115.57376099 1.76752532]
[119.03299713 -12.82814789]
[110.99958801 -26.17363358]
[114.71566772 -40.92644501]
[127.48805237 -48.50283432]
[130.94729614 -63.09850693]
[125.21752930 -80.52252960]
[137.57821655 -92.88573456]
[140.61148071 -107.57584381]
[143.64474487 -122.26595306]
[146.67800903 -136.95605469]
[149.71127319 -151.64616394]
[152.74453735 -166.33627319]
[155.77780151 -181.02638245]
[149.54370117 -198.27639771]
[161.53958130 -210.99388123]
[164.14430237 -225.76599121]
[153.95472717 -237.62797546]
[153.82548523 -253.26501465]
[163.81761169 -265.29379272]
[179.21310425 -268.03469849]
[192.74270630 -260.19351196]
[198.01814270 -245.47265625]
[192.54852295 -230.82284546]
[178.91641235 -223.16127014]
[176.31169128 -208.38914490]
[183.02143860 -198.20768738]
[180.86396790 -185.79736328]
[170.46791077 -177.99311829]
[167.43464661 -163.30300903]
[164.40138245 -148.61289978]
[161.36811829 -133.92279053]
[158.33485413 -119.23268890]
[155.30158997 -104.54257965]
[152.26832581 -89.85247040]
[158.67910767 -79.48016357]
[156.16160583 -67.13784027]
[145.54296875 -59.63926697]
[142.08372498 -45.04359436]
[150.09727478 -32.54084778]
[146.79704285 -17.68948364]
[133.62867737 -9.36890984]
[130.16943359 5.22676325]
[134.76306152 19.39531517]
[124.05178070 31.03915787]
[120.59254456 45.63483047]
[117.13330841 60.23050308]
[113.67407227 74.82617950]
[124.41050720 85.00571442]
[128.63627625 99.18446350]
[125.22430420 113.58072662]
[115.08460236 124.35479736]
[100.92160034 128.63305664]
[97.46236420 143.22872925]
[94.00312805 157.82440186]
[91.18383789 172.55708313]
[89.00985718 187.39869690]
[86.83587646 202.24032593]
[84.66190338 217.08195496]
[82.70401001 231.95362854]
[80.96261597 246.85220337]
[79.22122192 261.75076294]
[77.47982788 276.64935303]
[75.95529938 291.57168579]
[74.64796448 306.51458740]
[73.99367523 321.50033569]
[73.99367523 336.50033569]
[73.99367523 351.50033569]
[73.99367523 366.50033569]
[84.27544403 378.81555176]
[80.91656494 394.50305176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 105]
[4 104]
[5 103]
[6 102]
[10 101]
[11 100]
[13 99]
[14 98]
[15 97]
[16 96]
[18 95]
[19 94]
[20 93]
[21 92]
[25 91]
[26 90]
[27 89]
[32 84]
[33 83]
[34 82]
[35 81]
[37 79]
[38 78]
[41 75]
[42 74]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[52 62]
[53 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
