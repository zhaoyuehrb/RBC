%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCGCACACCGAGAGCCACUUCCGGAACAAGCGUCGCGUUUCUGAGGAGAAACUCUUGGUGAGAAUUCCCAGAGUGAUAAUGGCUACCUACAGCCUGGCGAACGAGAGACUACGCGCUCUGGAAGACAUUGAACGGGAAAUCGGCGCCAUCCUUCAGAAUGCAGGUACUGUGAUCCUAG\
) } def
/len { sequence length } bind def

/coor [
[145.23173523 219.89204407]
[147.40200806 204.97499084]
[154.08570862 191.44093323]
[164.63957214 180.62088013]
[157.70382690 167.32067871]
[150.76808167 154.02047729]
[143.83233643 140.72026062]
[136.89659119 127.42005920]
[97.75148010 139.69224548]
[70.99096680 116.83874512]
[56.66280746 121.27764130]
[42.33464432 125.71654510]
[28.00648689 130.15544128]
[13.67832661 134.59434509]
[-0.64983320 139.03324890]
[-14.97799301 143.47215271]
[-29.30615234 147.91104126]
[-43.63431168 152.34994507]
[-48.71966934 166.89111328]
[-61.24580765 175.54843140]
[-76.28987885 175.17430115]
[-88.08769989 166.12171936]
[-102.41586304 170.56062317]
[-116.74402618 174.99952698]
[-131.07218933 179.43843079]
[-145.36170959 184.00015259]
[-159.61155701 188.68435669]
[-173.86140442 193.36856079]
[-188.11126709 198.05276489]
[-202.36111450 202.73698425]
[-207.01824951 215.39111328]
[-217.95808411 222.93580627]
[-231.05177307 222.79620361]
[-241.51232910 215.24780273]
[-255.84049988 219.68670654]
[-269.18093872 230.14945984]
[-282.92779541 220.22674561]
[-277.19836426 204.27023315]
[-260.27938843 205.35853577]
[-245.95123291 200.91964722]
[-238.76544189 185.72668457]
[-222.49838257 180.31362915]
[-207.04531860 188.48713684]
[-192.79547119 183.80291748]
[-178.54562378 179.11871338]
[-164.29577637 174.43450928]
[-150.04592896 169.75030518]
[-144.66001892 164.66192627]
[-135.51107788 165.11026001]
[-121.18292236 160.67135620]
[-106.85476685 156.23246765]
[-92.52660370 151.79356384]
[-87.91294098 137.65666199]
[-75.71527863 128.84297180]
[-60.48866272 128.90242004]
[-48.07321167 138.02178955]
[-33.74505234 133.58288574]
[-19.41689301 129.14398193]
[-5.08873367 124.70508575]
[9.23942566 120.26618958]
[23.56758499 115.82728577]
[37.89574432 111.38838196]
[52.22390366 106.94948578]
[66.55206299 102.51058197]
[65.74114990 92.38262177]
[68.05958557 82.02902985]
[73.55463409 72.43067169]
[81.96373749 64.57086182]
[92.71913910 59.33734131]
[104.98350525 57.42787170]
[117.71441650 59.26910400]
[129.75300598 64.95749664]
[133.32350159 50.38864136]
[136.89399719 35.81978607]
[140.46449280 21.25093079]
[144.03500366 6.68207550]
[147.60549927 -7.88677931]
[151.17599487 -22.45563507]
[144.50331116 -9.02152634]
[131.45321655 -1.62591434]
[116.49956512 -2.80417037]
[104.76878357 -12.15236378]
[100.28242493 -26.46573448]
[104.57851410 -40.83736038]
[116.18223572 -50.33951187]
[116.18223572 -65.33950806]
[116.18223572 -80.33950806]
[116.18223572 -95.33950806]
[104.83109283 -106.33619690]
[104.66400146 -122.13960266]
[115.78009033 -133.37384033]
[131.58438110 -133.37384033]
[142.70046997 -122.13960266]
[142.53337097 -106.33619690]
[131.18223572 -95.33950806]
[131.18223572 -80.33950806]
[131.18223572 -65.33950806]
[131.18223572 -50.33951187]
[138.32699585 -48.05864716]
[152.61653137 -43.49692535]
[159.76129150 -41.21606445]
[168.45260620 -53.44149017]
[177.14392090 -65.66691589]
[169.72808838 -79.00738525]
[168.84342957 -94.24484253]
[174.66560364 -108.35388184]
[186.03860474 -118.53314209]
[200.70433044 -122.76153564]
[215.75088501 -120.19949341]
[228.19076538 -111.35572052]
[235.55401611 -97.98615265]
[236.37866211 -82.74533081]
[230.50096130 -68.65932465]
[219.08796692 -58.52492523]
[204.40570068 -54.35432434]
[189.36935425 -56.97559738]
[180.67803955 -44.75017548]
[171.98672485 -32.52474976]
[165.74484253 -18.88513565]
[162.17434692 -4.31628036]
[158.60385132 10.25257492]
[155.03335571 24.82143021]
[151.46286011 39.39028549]
[147.89234924 53.95914078]
[144.32185364 68.52799225]
[148.50868225 74.75057220]
[158.62677002 63.67698669]
[168.74485779 52.60340500]
[177.41917419 40.36590958]
[192.17384338 37.66413116]
[204.62162781 46.03388977]
[207.68659973 60.71741486]
[199.62649536 73.36789703]
[185.02133179 76.79393005]
[170.95182800 81.99482727]
[156.88233948 87.19572449]
[161.06916809 93.41830444]
[175.90975952 95.59935760]
[190.75033569 97.78041840]
[205.78590393 91.23336029]
[218.81097412 101.19727325]
[216.42646790 117.42213440]
[201.08537292 123.21720123]
[188.56929016 112.62100220]
[173.72869873 110.43994904]
[158.88810730 108.25888824]
[150.19679260 120.48431396]
[157.13253784 133.78451538]
[164.06828308 147.08473206]
[171.00402832 160.38493347]
[177.93977356 173.68513489]
[192.85298157 171.22471619]
[207.77630615 173.49121094]
[221.25013733 180.25022888]
[231.96058655 190.82855225]
[238.86759949 204.18130493]
[241.30592346 218.99499512]
[239.04917908 233.81684875]
[232.33081055 247.19718933]
[221.82002258 257.83129883]
[228.75576782 271.13150024]
[241.99725342 279.79025269]
[241.02160645 294.65286255]
[247.95735168 307.95309448]
[254.89309692 321.25329590]
[261.82885742 334.55349731]
[268.76458740 347.85369873]
[281.44949341 359.10220337]
[274.15209961 374.40530396]
[257.42697144 371.62942505]
[255.46438599 354.78942871]
[248.52864075 341.48922729]
[241.59289551 328.18902588]
[234.65715027 314.88882446]
[227.72140503 301.58862305]
[214.97601318 293.88119507]
[215.45556641 278.06726074]
[208.51982117 264.76705933]
[193.78373718 267.29858398]
[178.96661377 265.14849854]
[165.52134705 258.51489258]
[154.77023315 248.03610229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[22 52]
[23 51]
[24 50]
[25 49]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[34 40]
[35 39]
[72 125]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[85 98]
[86 97]
[87 96]
[88 95]
[101 118]
[102 117]
[103 116]
[137 146]
[138 145]
[139 144]
[160 178]
[161 177]
[163 175]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
