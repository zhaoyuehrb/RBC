%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCGUCGGCGGGAGCGGCGCAGCGCGGGCCGGGCCGGGACGGGGACUGUCGGCUGCAGGCGGCCAUGCCCACCAACUUCACCGUGGUGCCCGUGGAGGCUCACGCCGACGGCGGCGGGGACGAGACUGCCGAGCGGACGGAGGCUCCGGGCACCCCCGAGGGCC\
) } def
/len { sequence length } bind def

/coor [
[14.58517170 262.90612793]
[7.53756189 276.14736938]
[7.88379192 291.96481323]
[-4.92610931 299.56451416]
[-11.97371864 312.80578613]
[-19.02132797 326.04705811]
[-26.06893730 339.28833008]
[-33.11654663 352.52960205]
[-34.39664459 361.61819458]
[-40.42330551 365.95181274]
[-47.71874619 379.05816650]
[-46.92079544 395.43789673]
[-60.85173035 404.09011841]
[-75.18059540 396.11419678]
[-75.16709137 379.71505737]
[-60.82509995 371.76272583]
[-53.52965927 358.65637207]
[-46.35781479 345.48199463]
[-39.31020737 332.24072266]
[-32.26259613 318.99945068]
[-25.21498680 305.75817871]
[-18.16737747 292.51690674]
[-19.01770020 277.64660645]
[-5.70370674 269.09976196]
[1.34390259 255.85850525]
[-2.51948047 246.34222412]
[-0.44094455 236.05949402]
[7.12608814 228.47914124]
[17.83644104 226.29423523]
[25.37713432 213.32743835]
[32.91782379 200.36064148]
[40.45851898 187.39382935]
[35.20212555 177.21153259]
[35.53674316 165.63723755]
[41.49494171 155.56880188]
[51.68679047 149.58340454]
[63.62245560 149.27809143]
[71.64555359 136.60411072]
[79.66865540 123.93012238]
[87.69175720 111.25614166]
[86.28294373 96.32244110]
[76.03120422 85.37247467]
[65.77946472 74.42250061]
[55.52772903 63.47253418]
[40.44779587 58.68648911]
[37.39756775 44.10755157]
[27.14582634 33.15758133]
[14.27660751 31.94544601]
[5.96263313 22.57806206]
[6.26794100 10.45851231]
[-3.77600598 -0.68236405]
[-18.76323891 -5.75122929]
[-21.53868866 -20.38496208]
[-31.58263588 -31.52583885]
[-39.68982315 -35.82875443]
[-41.70831299 -42.97204208]
[-51.54091263 -54.29988098]
[-57.71983337 -56.84042358]
[-61.14404678 -61.44356537]
[-61.52052689 -66.24372864]
[-70.92007446 -77.93341064]
[-80.31961823 -89.62308502]
[-89.71916199 -101.31275940]
[-105.19605255 -106.73474884]
[-107.97261810 -122.89714050]
[-95.19256592 -133.17344666]
[-80.00292206 -126.99227905]
[-78.02948761 -110.71230316]
[-68.62994385 -99.02262878]
[-59.23039627 -87.33295441]
[-49.83084869 -75.64327240]
[-40.21307373 -64.13248444]
[-30.38047409 -52.80464172]
[-20.44175911 -41.56978607]
[-10.39781284 -30.42890930]
[3.87101078 -26.15691376]
[7.36487055 -10.72631073]
[17.40881729 0.41456518]
[34.35721588 4.89543581]
[38.09579849 22.90584373]
[48.34753799 33.85581207]
[62.69419479 37.85864258]
[66.47769928 53.22079468]
[76.72943878 64.17076874]
[86.98117828 75.12073517]
[97.23291779 86.07070923]
[111.38114929 91.05342102]
[126.23210144 88.94409180]
[141.08305359 86.83476257]
[155.93400574 84.72543335]
[170.78495789 82.61610413]
[185.63591003 80.50677490]
[200.48686218 78.39745331]
[205.97447205 74.58699799]
[211.69912720 74.20970154]
[215.93496704 76.49902344]
[230.85475159 74.94980621]
[245.77453613 73.40058899]
[260.69430542 71.85137177]
[273.62158203 62.73015213]
[287.07989502 69.11158752]
[301.99969482 67.56237030]
[316.91946411 66.01315308]
[325.17343140 61.99901199]
[332.13409424 64.57783508]
[347.08038330 63.30954742]
[362.01406860 61.90073013]
[376.93383789 60.35151291]
[391.85363770 58.80229950]
[397.43545532 48.24783325]
[407.32910156 41.78144073]
[418.99685669 40.92285156]
[429.51226807 45.77079391]
[436.29434204 55.00725937]
[451.26184082 54.02034760]
[466.22933960 53.03343582]
[481.19683838 52.04652023]
[496.16433716 51.05960846]
[511.13183594 50.07269669]
[519.29260254 36.87490845]
[533.66497803 31.02561951]
[548.72247314 34.77400208]
[558.67523193 46.67872238]
[559.69616699 62.16217422]
[551.39276123 75.27065277]
[536.95776367 80.96368408]
[521.94177246 77.05218506]
[512.11871338 65.04019165]
[497.15124512 66.02710724]
[482.18374634 67.01402283]
[467.21624756 68.00093079]
[452.24874878 68.98784637]
[437.28125000 69.97476196]
[426.10916138 84.43724823]
[407.60095215 86.21452332]
[393.40286255 73.72208405]
[378.48306274 75.27130127]
[363.56329346 76.82051086]
[357.20770264 80.65556335]
[348.34866333 78.25582886]
[333.40237427 79.52412415]
[318.46868896 80.93293762]
[303.54888916 82.48215485]
[288.62911987 84.03137207]
[276.76901245 93.04177856]
[262.24353027 86.77115631]
[247.32374573 88.32037354]
[232.40396118 89.86959076]
[217.48419189 91.41880798]
[202.59617615 93.24839783]
[187.74523926 95.35772705]
[172.89428711 97.46705627]
[158.04333496 99.57638550]
[143.19238281 101.68571472]
[128.34143066 103.79504395]
[113.49047852 105.90436554]
[100.36574554 119.27924347]
[92.34264374 131.95321655]
[84.31954193 144.62721252]
[76.29644012 157.30119324]
[81.17079926 175.57379150]
[71.34749603 191.36032104]
[53.42531967 194.93452454]
[45.88462830 207.90132141]
[38.34393692 220.86813354]
[30.80324364 233.83493042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[10 17]
[11 16]
[29 166]
[30 165]
[31 164]
[32 163]
[37 160]
[38 159]
[39 158]
[40 157]
[41 86]
[42 85]
[43 84]
[44 83]
[46 81]
[47 80]
[50 78]
[51 77]
[53 75]
[54 74]
[56 73]
[57 72]
[60 71]
[61 70]
[62 69]
[63 68]
[87 156]
[88 155]
[89 154]
[90 153]
[91 152]
[92 151]
[93 150]
[96 149]
[97 148]
[98 147]
[99 146]
[101 144]
[102 143]
[103 142]
[105 141]
[106 140]
[107 138]
[108 137]
[109 136]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
