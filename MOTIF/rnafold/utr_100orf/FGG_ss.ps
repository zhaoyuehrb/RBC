%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUGGUAAGGAGGCCCCGUGAUCAGCUCCAGCCAUUUGCAGUCCUGGCUAUCCCAGGAGCUUACAUAAAGGGACAAUUGGAGCCUGAGAGGUGACAGUGCUGACACUACAAGGCUCGGAGCUCCGGGCACUCAGACAUCAUGAGUUGGUCCUUGCACCCCCGGAAUUUAAUUCUCUACUUCUAUGCUCUUUUAUUUCUCUCUUCAACAUGUGUAGCAUAUGUUGCUACCAGAGACAACU\
) } def
/len { sequence length } bind def

/coor [
[85.19260406 335.03433228]
[97.21375275 325.22250366]
[96.24080658 310.25408936]
[95.26785278 295.28567505]
[94.29489899 280.31726074]
[93.32195282 265.34884644]
[92.34899902 250.38044739]
[91.37605286 235.41203308]
[90.40309906 220.44361877]
[123.60463715 191.32853699]
[118.45401001 177.24055481]
[113.30338287 163.15258789]
[108.15275574 149.06460571]
[103.00212860 134.97663879]
[97.85150146 120.88866425]
[84.08827209 114.92429352]
[70.28662872 120.79920197]
[56.48497772 126.67411041]
[45.08416748 143.31530762]
[26.00607109 140.09413147]
[12.36159134 146.32536316]
[-1.28288853 152.55657959]
[-4.50050974 165.62277222]
[-14.50549507 174.32810974]
[-27.50419426 175.66831970]
[-38.73553085 169.37747192]
[-52.45975113 175.43104553]
[-66.18396759 181.48461914]
[-79.90818787 187.53819275]
[-93.63240814 193.59176636]
[-107.35662842 199.64533997]
[-120.83474731 206.22868347]
[-134.04631042 213.33181763]
[-147.25788879 220.43495178]
[-160.46945190 227.53807068]
[-173.68101501 234.64120483]
[-174.06597900 249.99526978]
[-182.09007263 263.09143066]
[-195.59487915 270.40689087]
[-210.94766235 269.97378540]
[-224.01861572 261.90869141]
[-231.29168701 248.38101196]
[-230.81048584 233.02966309]
[-222.70445251 219.98406982]
[-209.15403748 212.75341797]
[-193.80427551 213.28274536]
[-180.78414917 221.42964172]
[-167.57258606 214.32650757]
[-154.36100769 207.22337341]
[-141.14944458 200.12025452]
[-127.93787384 193.01712036]
[-142.00195312 187.80160522]
[-148.36804199 174.21951294]
[-143.37889099 160.07354736]
[-129.90072632 153.49032593]
[-115.67650604 158.25181580]
[-108.87783813 171.62260437]
[-113.41020966 185.92112732]
[-99.68598938 179.86753845]
[-85.96176910 173.81396484]
[-72.23754883 167.76039124]
[-58.51332474 161.70681763]
[-44.78910446 155.65324402]
[-39.37445068 139.72102356]
[-23.80125809 132.50148010]
[-7.51411390 138.91210938]
[6.13036633 132.68087769]
[19.77484703 126.44965363]
[22.46002579 116.61688995]
[30.27107430 109.73214722]
[40.79740906 108.24105072]
[50.61007309 112.87245941]
[64.41172028 106.99755096]
[78.21337128 101.12265015]
[80.83435059 94.09552765]
[66.04201508 96.58287048]
[56.49183273 85.01593018]
[61.73410034 70.96179962]
[76.52648926 68.47477722]
[86.07631683 80.04128265]
[88.69729614 73.01415253]
[82.11395264 59.53604126]
[75.53060913 46.05792618]
[68.94725800 32.57981110]
[62.36391449 19.10169792]
[55.69322586 5.66659880]
[48.93547058 -7.72491884]
[42.17771530 -21.11643600]
[35.41996002 -34.50795364]
[28.66220474 -47.89947128]
[13.47824192 -50.49821091]
[2.86008930 -61.41188431]
[0.72952080 -76.30902100]
[7.69614029 -89.44691467]
[0.93838507 -102.83843231]
[-11.03475285 -107.59819794]
[-16.39216805 -118.87420654]
[-12.75881481 -130.39849854]
[-19.34215927 -143.87661743]
[-25.92550468 -157.35473633]
[-32.50885010 -170.83285522]
[-46.40455246 -179.54154968]
[-45.54013062 -195.91789246]
[-30.80482674 -203.11531067]
[-17.35705566 -193.72970581]
[-19.03073502 -177.41619873]
[-12.44738960 -163.93807983]
[-5.86404514 -150.45996094]
[0.71929944 -136.98185730]
[15.78346634 -127.96252441]
[14.32990265 -109.59618378]
[21.08765793 -96.20466614]
[35.79461670 -94.00390625]
[46.51237869 -83.44011688]
[48.98357773 -68.41525269]
[42.05372238 -54.65722656]
[48.81147766 -41.26570892]
[55.56923294 -27.87419128]
[62.32698822 -14.48267365]
[69.08473969 -1.09115624]
[74.89193726 3.45489955]
[75.84203339 12.51835346]
[82.42537689 25.99646759]
[89.00872040 39.47458267]
[95.59206390 52.95269775]
[102.17540741 66.43080902]
[116.67266083 70.28173828]
[129.07667542 61.84726715]
[141.48069763 53.41279602]
[153.88471985 44.97832489]
[166.28874207 36.54385376]
[167.69767761 25.78498459]
[174.64303589 17.73581886]
[184.65782166 14.88691807]
[194.38137817 17.94399452]
[207.00018311 9.83438301]
[219.61898804 1.72477078]
[216.98966980 -13.22054195]
[220.27375793 -27.99409103]
[228.94042969 -40.35137939]
[241.64349365 -48.42723465]
[256.43054199 -51.01729965]
[271.04284668 -47.75756454]
[283.26052856 -39.17515182]
[295.87930298 -47.28476715]
[308.49810791 -55.39437866]
[321.11691284 -63.50399017]
[333.73571777 -71.61360168]
[346.35452271 -79.72321320]
[358.97332764 -87.83282471]
[371.48580933 -96.10556793]
[383.88983154 -104.54003906]
[396.29382324 -112.97451019]
[395.08499146 -128.28575134]
[401.70822144 -142.14318848]
[414.38189697 -150.81922913]
[429.69683838 -151.98007202]
[443.53344727 -145.31344604]
[452.16973877 -132.61265564]
[453.28256226 -117.29412842]
[446.57260132 -103.47848511]
[433.84478760 -94.88206482]
[418.52285767 -93.81725311]
[404.72830200 -100.57048798]
[392.32427979 -92.13601685]
[379.92025757 -83.70154572]
[378.16458130 -79.28040314]
[373.62432861 -75.90602112]
[367.08294678 -75.21402740]
[354.46414185 -67.10440826]
[341.84533691 -58.99480057]
[329.22653198 -50.88518524]
[316.60772705 -42.77557373]
[303.98892212 -34.66596222]
[291.37011719 -26.55635071]
[294.10156250 -11.87750244]
[290.99655151 2.76846290]
[282.49777222 15.14327145]
[269.87469482 23.34356499]
[255.03382874 26.09363556]
[240.23107910 22.94379616]
[227.72860718 14.34357357]
[215.10980225 22.45318604]
[202.49099731 30.56279755]
[194.88642883 48.35381317]
[174.72320557 48.94787216]
[162.31919861 57.38234329]
[149.91517639 65.81681824]
[137.51115417 74.25128937]
[125.10713196 82.68576050]
[139.39105225 78.10649872]
[154.11538696 80.96899414]
[165.64331055 90.56623077]
[171.12748718 104.52774048]
[169.21336365 119.40510559]
[160.37370300 131.52371216]
[146.79185486 137.89030457]
[131.82247925 136.93238831]
[119.16291046 128.88656616]
[111.93947601 115.73803711]
[117.09010315 129.82600403]
[122.24073029 143.91398621]
[127.39135742 158.00195312]
[132.54199219 172.08993530]
[137.69261169 186.17790222]
[145.05165100 199.24865723]
[154.42572021 210.95877075]
[163.79980469 222.66888428]
[173.17388916 234.37898254]
[182.54797363 246.08909607]
[191.92204285 257.79919434]
[201.29612732 269.50930786]
[210.67021179 281.21942139]
[220.04428101 292.92953491]
[234.66299438 301.51614380]
[230.45881653 317.94055176]
[213.51245117 318.44738770]
[208.33418274 302.30361938]
[198.96009827 290.59350586]
[189.58601379 278.88339233]
[180.21194458 267.17327881]
[170.83786011 255.46318054]
[161.46377563 243.75306702]
[152.08970642 232.04295349]
[142.71562195 220.33285522]
[133.34153748 208.62274170]
[126.34902954 211.33473206]
[105.37151337 219.47067261]
[106.34445953 234.43908691]
[107.31741333 249.40750122]
[108.29036713 264.37591553]
[109.26331329 279.34432983]
[110.23626709 294.31274414]
[111.20921326 309.28115845]
[112.18216705 324.24957275]
[125.37233734 332.42263794]
[131.20820618 346.80047607]
[127.44578552 361.85449219]
[115.53179169 371.79614258]
[100.04739380 372.80261230]
[86.94666290 364.48693848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 235]
[3 234]
[4 233]
[5 232]
[6 231]
[7 230]
[8 229]
[9 228]
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[15 200]
[16 74]
[17 73]
[18 72]
[20 68]
[21 67]
[22 66]
[26 63]
[27 62]
[28 61]
[29 60]
[30 59]
[31 58]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[94 112]
[95 111]
[98 109]
[99 108]
[100 107]
[101 106]
[127 190]
[128 189]
[129 188]
[130 187]
[131 186]
[135 184]
[136 183]
[137 182]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[151 166]
[152 165]
[153 164]
[206 226]
[207 225]
[208 224]
[209 223]
[210 222]
[211 221]
[212 220]
[213 219]
[214 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
