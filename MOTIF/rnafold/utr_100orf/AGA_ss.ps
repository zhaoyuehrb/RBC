%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGACGCCUGAGCGAACCCCCGAGAGAGCGGGCGUGGGCGCCAGGCGGGCGGGGCACUGGGGAUUAAUUGUUCGGCGAUCGCUGGCUGCCGGGACUUUUCUCGCGCUGGUCUCUUCGGUGGUCAGGGAUGGCGCGGAAGUCGAACUUGCCUGUGCUUCUCGUGCCGUUUCUGCUCUGCCAGGCCCUAGUGCGCUGCUCCAGCCCUCUGCCCCUGGUCGUCAACACUU\
) } def
/len { sequence length } bind def

/coor [
[-124.51041412 652.57788086]
[-134.72584534 659.90301514]
[-138.98771667 674.28485107]
[-131.70536804 688.05456543]
[-136.23239136 702.57904053]
[-149.40458679 709.43682861]
[-153.66645813 723.81860352]
[-157.92832947 738.20043945]
[-153.57777405 754.01196289]
[-165.28674316 765.49377441]
[-181.01004028 760.83435059]
[-184.57289124 744.82690430]
[-172.31013489 733.93853760]
[-168.04826355 719.55676270]
[-163.78639221 705.17492676]
[-171.09556580 692.24774170]
[-166.97828674 677.60186768]
[-153.36953735 670.02294922]
[-149.10765076 655.64117432]
[-162.21641541 648.35003662]
[-172.18692017 659.55664062]
[-182.15744019 670.76330566]
[-192.12796021 681.96997070]
[-190.95692444 697.73077393]
[-201.33662415 709.64874268]
[-217.10896301 710.65307617]
[-228.91650391 700.14794922]
[-229.75402832 684.36584473]
[-219.12464905 672.67004395]
[-203.33459473 671.99945068]
[-193.36407471 660.79278564]
[-183.39356995 649.58618164]
[-173.42304993 638.37951660]
[-164.07661438 612.73101807]
[-141.11318970 607.38818359]
[-134.73767090 593.81048584]
[-128.36215210 580.23284912]
[-122.17350006 566.56903076]
[-116.17287445 552.82153320]
[-110.17224884 539.07409668]
[-104.17162323 525.32666016]
[-98.26544189 511.53836060]
[-92.45397186 497.70986938]
[-86.64250183 483.88140869]
[-80.83103180 470.05291748]
[-75.01956177 456.22445679]
[-75.95766449 451.55343628]
[-73.98038483 446.24258423]
[-68.85430145 442.09979248]
[-62.66564941 428.43597412]
[-56.47699356 414.77212524]
[-50.28834152 401.10827637]
[-44.09968948 387.44442749]
[-37.91103745 373.78060913]
[-31.72238350 360.11676025]
[-37.19499588 346.31146240]
[-31.11347008 332.36621094]
[-16.59610367 326.71963501]
[-10.40744972 313.05581665]
[-4.21879673 299.39196777]
[1.96985590 285.72811890]
[8.15850925 272.06427002]
[14.34716129 258.40042114]
[1.35179627 265.89178467]
[-13.64798355 265.97302246]
[-26.72370911 258.62280273]
[-34.45082092 245.76623535]
[-34.80557632 230.77043152]
[-27.69506264 217.56283569]
[-14.98153687 209.60253906]
[0.00530406 208.97436523]
[13.34037876 215.84281921]
[21.53120613 228.40905762]
[22.43250275 243.38240051]
[30.43164444 230.69328308]
[38.43078613 218.00416565]
[46.42992783 205.31504822]
[54.42906570 192.62593079]
[54.26914215 187.86433411]
[57.09004593 182.94934082]
[62.82575226 179.70263672]
[71.16999817 167.23774719]
[79.51424408 154.77284241]
[87.85848999 142.30795288]
[96.20272827 129.84306335]
[104.54697418 117.37816620]
[91.08047485 114.47601318]
[84.31050110 103.35150909]
[87.53120422 91.51210022]
[80.97002411 78.02317810]
[74.31647491 64.57958221]
[67.57086945 51.18194199]
[60.82526016 37.78429794]
[54.07965469 24.38665771]
[47.33404922 10.98901653]
[33.33420563 2.44873643]
[34.00082779 -13.93685627]
[48.64815521 -21.31166840]
[62.20827103 -12.08912563]
[60.73169327 4.24341059]
[67.47729492 17.64105225]
[74.22290039 31.03869438]
[80.96850586 44.43633652]
[87.71411896 57.83397675]
[93.52206421 62.38889313]
[94.45893860 71.46199799]
[101.02011871 84.95092010]
[112.96997833 89.76270294]
[117.71404266 102.98131561]
[129.38632202 93.56018066]
[141.05860901 84.13904572]
[152.73089600 74.71791077]
[164.40318298 65.29677582]
[165.81323242 61.22048950]
[168.20185852 58.11140060]
[171.14726257 56.15776062]
[174.20980835 55.39239883]
[176.98390198 55.70024490]
[189.15534973 46.93348694]
[201.32678223 38.16672516]
[213.49821472 29.39996529]
[225.66966248 20.63320541]
[232.84417725 3.66780305]
[250.36621094 2.60194874]
[262.41622925 -6.33095789]
[274.46627808 -15.26386452]
[286.51629639 -24.19677162]
[298.56631470 -33.12967682]
[310.61636353 -42.06258392]
[322.66638184 -50.99549103]
[334.71640015 -59.92839813]
[346.76644897 -68.86130524]
[358.81646729 -77.79421234]
[370.86648560 -86.72711945]
[382.91650391 -95.66002655]
[394.96655273 -104.59293365]
[406.95501709 -113.60828400]
[418.88137817 -122.70565796]
[430.80770874 -131.80302429]
[442.73406982 -140.90040588]
[454.66043091 -149.99777222]
[456.66152954 -154.79129028]
[459.96621704 -158.02226257]
[463.76440430 -159.45603943]
[467.26983643 -159.21202087]
[479.56039429 -167.81098938]
[482.06356812 -183.41578674]
[494.91662598 -192.61222839]
[510.49407959 -189.94421387]
[519.55413818 -176.99464417]
[516.72155762 -161.44625854]
[503.67694092 -152.52365112]
[488.15936279 -155.52043152]
[475.86880493 -146.92146301]
[463.75778198 -138.07142639]
[451.83145142 -128.97404480]
[439.90509033 -119.87667847]
[427.97872925 -110.77930450]
[416.05239868 -101.68193817]
[412.64486694 -95.13453674]
[403.89944458 -92.54290771]
[391.84942627 -83.61000061]
[379.79940796 -74.67709351]
[367.74935913 -65.74418640]
[355.69934082 -56.81127930]
[343.64932251 -47.87837219]
[331.59927368 -38.94546509]
[319.54925537 -30.01255798]
[307.49923706 -21.07965088]
[295.44918823 -12.14674377]
[283.39916992 -3.21383667]
[271.34915161 5.71906996]
[259.29910278 14.65197659]
[257.21563721 26.55961609]
[247.26081848 34.10153198]
[234.43641663 32.80464554]
[222.26498413 41.57140350]
[210.09353638 50.33816528]
[197.92210388 59.10492325]
[185.75067139 67.87168121]
[173.82431030 76.96905518]
[162.15203857 86.39019012]
[150.47975159 95.81133270]
[138.80746460 105.23246765]
[127.13518524 114.65360260]
[117.01187134 125.72241211]
[108.66762543 138.18730164]
[100.32337952 150.65220642]
[91.97913361 163.11709595]
[83.63489532 175.58198547]
[75.29064941 188.04687500]
[67.11818695 200.62507629]
[59.11904526 213.31419373]
[51.11990356 226.00331116]
[43.12076187 238.69242859]
[35.12162399 251.38154602]
[28.01100349 264.58908081]
[21.82235146 278.25292969]
[15.63369751 291.91677856]
[9.44504452 305.58062744]
[3.25639200 319.24444580]
[-2.93226075 332.90829468]
[2.39856625 347.54455566]
[-4.07225466 361.31347656]
[-18.05854225 366.30541992]
[-24.24719429 379.96923828]
[-30.43584633 393.63308716]
[-36.62450027 407.29693604]
[-42.81315231 420.96078491]
[-49.00180435 434.62460327]
[-55.19046021 448.28845215]
[-61.19108582 462.03591919]
[-67.00255585 475.86437988]
[-72.81402588 489.69287109]
[-78.62548828 503.52136230]
[-84.43695831 517.34985352]
[-84.87478638 526.46063232]
[-90.42417145 531.32727051]
[-96.42479706 545.07470703]
[-102.42542267 558.82220459]
[-108.42604828 572.56964111]
[-108.06869507 579.15081787]
[-110.68776703 584.17626953]
[-114.78450012 586.60833740]
[-121.16001129 600.18603516]
[-127.53553009 613.76367188]
[-120.76428223 621.03594971]
[-117.39602661 631.08001709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[6 15]
[7 14]
[8 13]
[20 33]
[21 32]
[22 31]
[23 30]
[35 226]
[36 225]
[37 224]
[38 221]
[39 220]
[40 219]
[41 218]
[42 216]
[43 215]
[44 214]
[45 213]
[46 212]
[49 211]
[50 210]
[51 209]
[52 208]
[53 207]
[54 206]
[55 205]
[58 202]
[59 201]
[60 200]
[61 199]
[62 198]
[63 197]
[74 196]
[75 195]
[76 194]
[77 193]
[78 192]
[81 191]
[82 190]
[83 189]
[84 188]
[85 187]
[86 186]
[89 107]
[90 106]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[109 185]
[110 184]
[111 183]
[112 182]
[113 181]
[118 180]
[119 179]
[120 178]
[121 177]
[122 176]
[124 173]
[125 172]
[126 171]
[127 170]
[128 169]
[129 168]
[130 167]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[145 154]
[146 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
