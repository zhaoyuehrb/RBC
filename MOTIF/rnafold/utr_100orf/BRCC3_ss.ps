%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCUGGGCGGAGCGCACAGCGCUGGGCGCUGGGGAGGCUGCGCCGCAGCACCCGGUUGGUCAGGACCAAGUGGGCCCGAGGCGGACGUGAGAAGGGUCGGGCCAAGAUGGCGGUGCAGGUGGUGCAGGCGGUGCAGGCGGUUCAUCUCGAGUCUGACGCUUUCCUCGUUUGUCUCAACCACGCUCUGAGCACAGAGAAGGAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[81.92194366 157.68667603]
[86.52214813 143.40948486]
[79.09067535 142.39794922]
[68.20876312 152.72190857]
[64.13612366 160.89996338]
[57.08483887 163.11773682]
[46.04898071 173.27696228]
[35.08978653 183.51884460]
[24.20787811 193.84280396]
[13.32596874 204.16674805]
[2.44405985 214.49070740]
[-2.24211836 229.60197449]
[-16.80055618 232.74858093]
[-27.68246460 243.07254028]
[-38.56437302 253.39649963]
[-35.66448212 271.29348755]
[-44.01398468 287.20950317]
[-60.10326767 294.86074829]
[-77.41036987 291.35467529]
[-87.97704315 302.00106812]
[-98.54370880 312.64743042]
[-109.11038208 323.29382324]
[-119.67704773 333.94021606]
[-130.24371338 344.58660889]
[-137.11006165 360.08786011]
[-153.90634155 357.78103638]
[-156.33934021 341.00259399]
[-140.89010620 334.01992798]
[-130.32342529 323.37353516]
[-119.75676727 312.72717285]
[-109.19009399 302.08078003]
[-98.62342834 291.43438721]
[-88.05675507 280.78799438]
[-91.75628662 269.22378540]
[-90.17807007 257.11242676]
[-83.56080627 246.76080322]
[-73.10884857 240.16688538]
[-60.77339554 238.63420105]
[-48.88832855 242.51458740]
[-38.00642014 232.19062805]
[-27.12451172 221.86666870]
[-23.21668053 207.49385071]
[-7.87989569 203.60879517]
[3.00201321 193.28483582]
[13.88392162 182.96089172]
[24.76583099 172.63693237]
[27.45513725 165.75167847]
[35.88975525 162.24110413]
[46.92561340 152.08187866]
[57.88480759 141.83999634]
[68.76671600 131.51605225]
[62.08795166 112.45572662]
[64.98451996 94.52732849]
[50.99026108 89.12725830]
[36.99600601 83.72718811]
[23.00174713 78.32711792]
[7.34140539 80.57751465]
[-1.74704611 68.77711487]
[-15.74130440 63.37704849]
[-29.73556137 57.97697830]
[-43.72982025 52.57691193]
[-57.72407913 47.17684174]
[-73.83326721 50.24701309]
[-84.34040070 37.65605545]
[-78.43663025 22.35646057]
[-62.19525528 20.08714485]
[-52.32400894 33.18258286]
[-38.32975006 38.58265305]
[-24.33549309 43.98272324]
[-10.34123516 49.38278961]
[3.65302277 54.78285980]
[18.31240082 52.14621735]
[28.40181541 64.33286285]
[42.39607239 69.73293304]
[56.39033127 75.13300323]
[70.38459015 80.53306580]
[79.55524445 71.05097961]
[91.55831146 65.57948303]
[104.73088837 64.87660980]
[117.24805450 69.03972626]
[127.15588379 57.77762604]
[137.06372070 46.51552963]
[146.97155762 35.25343323]
[156.87937927 23.99133492]
[166.78721619 12.72923851]
[176.69505310 1.46714079]
[186.60289001 -9.79495621]
[196.51072693 -21.05705452]
[206.41854858 -32.31915283]
[203.17068481 -47.37762070]
[209.34036255 -61.29841232]
[222.36997986 -68.82791138]
[237.15779114 -67.26002502]
[247.06562805 -78.52212524]
[256.97344971 -89.78421783]
[266.88128662 -101.04631805]
[270.18740845 -116.51823425]
[284.40325928 -120.96329498]
[294.31109619 -132.22538757]
[304.21893311 -143.48748779]
[314.12677002 -154.74958801]
[324.03460693 -166.01168823]
[333.94244385 -177.27378845]
[343.85025024 -188.53587341]
[342.41360474 -205.96945190]
[353.80508423 -218.79615784]
[370.61120605 -219.40390015]
[380.34863281 -230.81364441]
[390.08605957 -242.22338867]
[399.82351685 -253.63314819]
[409.56094360 -265.04287720]
[419.29837036 -276.45263672]
[416.69796753 -289.66921997]
[422.10586548 -301.79315186]
[433.34289551 -308.48904419]
[446.19137573 -307.50457764]
[456.09921265 -318.76666260]
[466.00704956 -330.02877808]
[465.18099976 -345.58367920]
[475.38940430 -356.86392212]
[490.22372437 -357.55554199]
[500.13156128 -368.81762695]
[510.03939819 -380.07974243]
[513.34552002 -395.55166626]
[527.56134033 -399.99670410]
[537.46917725 -411.25881958]
[540.16143799 -427.43545532]
[555.60980225 -432.93811035]
[567.92236328 -422.10610962]
[564.43304443 -406.08248901]
[548.73126221 -401.35098267]
[538.82342529 -390.08886719]
[536.22601318 -375.42251587]
[521.30151367 -370.17190552]
[511.39364624 -358.90979004]
[501.48580933 -347.64770508]
[502.69003296 -332.84616089]
[492.80252075 -321.28366089]
[477.26913452 -320.12094116]
[467.36129761 -308.85882568]
[457.45346069 -297.59674072]
[459.24368286 -280.87518311]
[448.16870117 -267.77423096]
[430.70812988 -266.71520996]
[420.97070312 -255.30546570]
[411.23324585 -243.89570618]
[401.49581909 -232.48596191]
[391.75839233 -221.07620239]
[382.02096558 -209.66645813]
[384.82394409 -197.08885193]
[379.79537964 -185.01329041]
[368.56448364 -177.93502808]
[355.11236572 -178.62805176]
[345.20452881 -167.36595154]
[335.29669189 -156.10385132]
[325.38885498 -144.84175110]
[315.48101807 -133.57965088]
[305.57318115 -122.31755829]
[295.66537476 -111.05545807]
[293.06793213 -96.38908386]
[278.14340210 -91.13848114]
[268.23556519 -79.87638855]
[258.32772827 -68.61428833]
[248.41989136 -57.35219193]
[251.85926819 -42.88468933]
[246.05139160 -29.00187492]
[233.03022766 -21.10868263]
[217.68064880 -22.41131783]
[207.77281189 -11.14922047]
[197.86499023 0.11287678]
[187.95715332 11.37497425]
[178.04931641 22.63707161]
[168.14147949 33.89916992]
[158.23364258 45.16126633]
[148.32582092 56.42336273]
[138.41798401 67.68546295]
[128.51014709 78.94755554]
[138.32180786 97.29223633]
[136.42622375 119.66226959]
[121.67343140 138.71745300]
[129.40007019 151.57432556]
[142.75827026 153.30587769]
[152.53710938 162.28414917]
[155.31770325 175.06594849]
[150.30374146 186.93661499]
[157.83627319 199.90817261]
[165.36878967 212.87971497]
[172.90130615 225.85127258]
[180.43382263 238.82283020]
[194.91802979 246.51307678]
[195.22969055 262.90927124]
[181.04818726 271.14437866]
[166.96224976 262.74685669]
[167.46228027 246.35534668]
[159.92976379 233.38378906]
[152.39723206 220.41224670]
[144.86471558 207.44068909]
[137.33219910 194.46914673]
[120.90776825 190.85620117]
[112.00224304 176.19395447]
[116.54321289 159.30096436]
[108.81656647 146.44410706]
[101.38509369 145.43257141]
[102.00195312 160.41987610]
[108.11048889 174.11972046]
[101.84675598 187.74931335]
[87.47226715 192.03581238]
[74.76663971 184.06292725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 51]
[4 50]
[6 49]
[7 48]
[8 46]
[9 45]
[10 44]
[11 43]
[13 41]
[14 40]
[15 39]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[24 28]
[53 76]
[54 75]
[55 74]
[56 73]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[80 177]
[81 176]
[82 175]
[83 174]
[84 173]
[85 172]
[86 171]
[87 170]
[88 169]
[89 168]
[93 164]
[94 163]
[95 162]
[96 161]
[98 159]
[99 158]
[100 157]
[101 156]
[102 155]
[103 154]
[104 153]
[107 149]
[108 148]
[109 147]
[110 146]
[111 145]
[112 144]
[116 141]
[117 140]
[118 139]
[121 136]
[122 135]
[123 134]
[125 132]
[126 131]
[180 202]
[181 201]
[185 198]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
