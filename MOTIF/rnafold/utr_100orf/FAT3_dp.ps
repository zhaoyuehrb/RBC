%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAT3)
} def

/sequence { (\
GAUGGAAGUAUGAUGUGAUGGAUAUAAUUAUGGGACACUGUGUGGGCACACGGCCUCCUGCUUGUUGCCUCAUCCUCCUGCUUUUCAAGCUUUUGGCCACUGUCUCCCAGGGGCUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 77 0.009707143 ubox
1 84 0.003172489 ubox
1 85 0.010445195 ubox
1 86 0.421167221 ubox
1 92 0.014280765 ubox
1 93 0.010286189 ubox
1 94 0.010626075 ubox
2 76 0.009609140 ubox
2 84 0.009767129 ubox
2 85 0.392465642 ubox
2 91 0.016192032 ubox
2 92 0.011691893 ubox
2 93 0.011413909 ubox
3 87 0.624508474 ubox
3 95 0.004881067 ubox
3 116 0.004107626 ubox
4 75 0.012273013 ubox
4 78 0.031318093 ubox
4 79 0.004818844 ubox
4 82 0.008127919 ubox
4 83 0.019346411 ubox
4 84 0.045276864 ubox
4 85 0.461206988 ubox
4 86 0.690075925 ubox
4 91 0.005785991 ubox
4 94 0.023728606 ubox
5 74 0.012280698 ubox
5 77 0.031369833 ubox
5 78 0.005018573 ubox
5 81 0.008315045 ubox
5 82 0.008384932 ubox
5 83 0.040628183 ubox
5 84 0.767057208 ubox
5 85 0.596367987 ubox
5 86 0.063502537 ubox
5 90 0.005856864 ubox
5 93 0.029345092 ubox
6 73 0.010269340 ubox
6 76 0.023868841 ubox
6 82 0.029216155 ubox
6 83 0.862233419 ubox
6 84 0.485867707 ubox
6 85 0.058494468 ubox
6 92 0.029975647 ubox
7 76 0.020763616 ubox
7 79 0.008927628 ubox
7 82 0.934643367 ubox
7 83 0.342059334 ubox
7 84 0.028583450 ubox
7 91 0.030117069 ubox
8 75 0.028899564 ubox
8 78 0.009687959 ubox
8 81 0.998334033 ubox
8 82 0.024762798 ubox
8 83 0.007698400 ubox
8 90 0.030149555 ubox
9 80 0.997643555 ubox
9 89 0.029877059 ubox
10 73 0.025658148 ubox
10 79 0.973863396 ubox
11 72 0.027047038 ubox
11 87 0.029553229 ubox
12 71 0.027060348 ubox
12 74 0.043968313 ubox
12 77 0.972598767 ubox
12 86 0.029947508 ubox
13 70 0.026736507 ubox
13 73 0.041504707 ubox
13 76 0.956212343 ubox
13 85 0.029272579 ubox
14 24 0.003209446 ubox
14 72 0.035361286 ubox
15 23 0.003307604 ubox
15 31 0.007790323 ubox
15 68 0.019465353 ubox
15 71 0.031955948 ubox
15 73 0.953050235 ubox
15 81 0.018013171 ubox
16 22 0.003306816 ubox
16 30 0.008162273 ubox
16 67 0.019422184 ubox
16 72 0.983509319 ubox
16 80 0.017527679 ubox
17 29 0.008291830 ubox
17 66 0.019176029 ubox
17 71 0.986388856 ubox
17 74 0.142476777 ubox
17 77 0.011357501 ubox
17 79 0.005986146 ubox
18 28 0.008307972 ubox
18 65 0.019125367 ubox
18 70 0.972862191 ubox
18 73 0.142407119 ubox
18 76 0.011275530 ubox
19 27 0.008242798 ubox
19 64 0.018396143 ubox
19 72 0.138421921 ubox
20 62 0.006536226 ubox
20 63 0.015273283 ubox
20 69 0.991487211 ubox
20 70 0.007553337 ubox
20 71 0.121892193 ubox
20 75 0.017161269 ubox
20 78 0.008634129 ubox
21 29 0.004808532 ubox
21 61 0.008552528 ubox
21 62 0.012658293 ubox
21 66 0.009454020 ubox
21 68 0.992358996 ubox
21 69 0.042338999 ubox
21 70 0.096670068 ubox
21 71 0.016678388 ubox
21 74 0.017169187 ubox
21 77 0.008636475 ubox
22 28 0.005242304 ubox
22 31 0.026913654 ubox
22 65 0.013641219 ubox
22 70 0.022510253 ubox
22 73 0.017001478 ubox
22 76 0.007620471 ubox
23 27 0.004713444 ubox
23 30 0.027819640 ubox
23 60 0.005803176 ubox
23 64 0.014014889 ubox
23 67 0.071325587 ubox
23 72 0.016004004 ubox
24 29 0.027473933 ubox
24 31 0.004249220 ubox
24 63 0.013572745 ubox
24 65 0.985597003 ubox
24 66 0.060831677 ubox
25 30 0.004130605 ubox
25 64 0.987343113 ubox
25 67 0.101548460 ubox
26 63 0.982522190 ubox
26 66 0.106962940 ubox
27 62 0.947626104 ubox
27 65 0.108707743 ubox
28 64 0.106766165 ubox
29 42 0.010511985 ubox
29 60 0.267226901 ubox
29 64 0.014548043 ubox
30 41 0.012402786 ubox
30 59 0.169422353 ubox
30 63 0.018209781 ubox
30 65 0.004184680 ubox
31 40 0.012505253 ubox
31 60 0.794384637 ubox
31 64 0.004143600 ubox
32 39 0.013037425 ubox
32 55 0.007669550 ubox
32 56 0.034326794 ubox
32 57 0.090053345 ubox
32 58 0.106309787 ubox
32 59 0.967325363 ubox
32 69 0.003514340 ubox
32 76 0.003588835 ubox
32 79 0.005299842 ubox
33 38 0.013138784 ubox
33 54 0.007656767 ubox
33 55 0.042010525 ubox
33 56 0.087733356 ubox
33 57 0.102330336 ubox
33 58 0.989246877 ubox
33 59 0.004547042 ubox
33 68 0.003493665 ubox
33 75 0.005274746 ubox
33 78 0.005891537 ubox
34 54 0.042118358 ubox
34 55 0.094895566 ubox
34 56 0.082192600 ubox
34 57 0.989745672 ubox
34 58 0.003990936 ubox
34 66 0.003276102 ubox
34 74 0.005280890 ubox
34 77 0.005895139 ubox
35 43 0.006335718 ubox
35 56 0.983941058 ubox
35 65 0.003748301 ubox
35 73 0.004560550 ubox
35 76 0.005780001 ubox
36 42 0.006583833 ubox
36 44 0.013299254 ubox
36 64 0.003773565 ubox
37 41 0.005338049 ubox
37 43 0.013328686 ubox
37 63 0.003707231 ubox
38 42 0.013203777 ubox
38 53 0.997797269 ubox
39 50 0.013443386 ubox
39 52 0.998011012 ubox
40 49 0.015564698 ubox
40 51 0.998681988 ubox
40 54 0.009219371 ubox
40 61 0.004078993 ubox
40 73 0.006580911 ubox
41 48 0.015961033 ubox
41 50 0.998460449 ubox
41 52 0.032211549 ubox
41 53 0.006544737 ubox
41 60 0.004043662 ubox
41 72 0.007730505 ubox
42 47 0.016365027 ubox
42 49 0.998095188 ubox
42 51 0.040226189 ubox
42 71 0.007886165 ubox
42 73 0.003623365 ubox
43 48 0.933719228 ubox
43 50 0.041726987 ubox
43 72 0.004591041 ubox
44 49 0.043540164 ubox
44 56 0.009913301 ubox
44 70 0.013058775 ubox
44 71 0.005068301 ubox
45 55 0.018449861 ubox
45 69 0.016369162 ubox
46 54 0.018488710 ubox
46 68 0.016397367 ubox
47 53 0.018482703 ubox
47 67 0.016411968 ubox
48 65 0.009016811 ubox
48 66 0.013589986 ubox
49 64 0.012729613 ubox
50 63 0.012421031 ubox
50 65 0.008992693 ubox
51 64 0.009095717 ubox
52 62 0.014545926 ubox
52 63 0.006520373 ubox
53 61 0.016138790 ubox
54 60 0.016129279 ubox
60 68 0.039541380 ubox
61 67 0.039919900 ubox
80 90 0.031600396 ubox
81 89 0.031657062 ubox
82 88 0.031280049 ubox
83 87 0.026053769 ubox
85 96 0.004170227 ubox
86 95 0.040631535 ubox
86 116 0.160228608 ubox
87 93 0.007554653 ubox
87 94 0.041704403 ubox
87 115 0.115475447 ubox
88 92 0.006978361 ubox
88 93 0.037027065 ubox
88 94 0.010551960 ubox
88 115 0.868422102 ubox
89 93 0.008150884 ubox
89 97 0.013639529 ubox
89 114 0.902563324 ubox
89 117 0.162335640 ubox
90 96 0.013735575 ubox
90 112 0.004067911 ubox
90 113 0.902682418 ubox
90 116 0.163467469 ubox
91 95 0.012441615 ubox
91 111 0.004810565 ubox
91 112 0.901582504 ubox
92 110 0.005044488 ubox
92 111 0.897985494 ubox
93 109 0.004889673 ubox
93 110 0.898574155 ubox
94 109 0.901619691 ubox
94 116 0.224170721 ubox
95 104 0.024935247 ubox
95 105 0.004464669 ubox
95 106 0.005721019 ubox
95 107 0.039885471 ubox
95 108 0.901313061 ubox
95 115 0.414949277 ubox
96 103 0.045250265 ubox
96 104 0.010530512 ubox
96 105 0.008185421 ubox
96 106 0.054886168 ubox
96 107 0.894151032 ubox
96 114 0.429714740 ubox
97 102 0.117521521 ubox
97 112 0.024618617 ubox
97 113 0.429376073 ubox
98 111 0.031140103 ubox
98 112 0.422404081 ubox
98 116 0.004138298 ubox
99 115 0.003950113 ubox
100 110 0.418092674 ubox
100 111 0.083945484 ubox
101 109 0.421812300 ubox
101 110 0.081582214 ubox
102 108 0.420750833 ubox
102 114 0.015622800 ubox
103 111 0.005724781 ubox
103 113 0.015498841 ubox
104 110 0.006335902 ubox
104 112 0.015523477 ubox
105 109 0.005793258 ubox
105 111 0.015262436 ubox
106 110 0.014741830 ubox
106 111 0.004225369 ubox
4 85 0.9500000 lbox
5 84 0.9500000 lbox
6 83 0.9500000 lbox
7 82 0.9500000 lbox
8 81 0.9500000 lbox
9 80 0.9500000 lbox
10 79 0.9500000 lbox
12 77 0.9500000 lbox
13 76 0.9500000 lbox
15 73 0.9500000 lbox
16 72 0.9500000 lbox
17 71 0.9500000 lbox
18 70 0.9500000 lbox
20 69 0.9500000 lbox
21 68 0.9500000 lbox
24 65 0.9500000 lbox
25 64 0.9500000 lbox
26 63 0.9500000 lbox
27 62 0.9500000 lbox
31 60 0.9500000 lbox
32 59 0.9500000 lbox
33 58 0.9500000 lbox
34 57 0.9500000 lbox
35 56 0.9500000 lbox
38 53 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
88 115 0.9500000 lbox
89 114 0.9500000 lbox
90 113 0.9500000 lbox
91 112 0.9500000 lbox
92 111 0.9500000 lbox
93 110 0.9500000 lbox
94 109 0.9500000 lbox
95 108 0.9500000 lbox
96 107 0.9500000 lbox
showpage
end
%%EOF
