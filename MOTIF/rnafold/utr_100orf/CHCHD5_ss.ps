%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUGGCUACUCAGGGCGCCGCCAUGACGAGCCGGGCCGGAAGAAGAGGUAGGGCGCCGCCGUGACAGAUUAGUCCUAAAGGGAACGGGGUUGUUAGUUCAAUUGGCUACCGGAAAAAACCAGGCUGGGCUGGGCGCCGCCAUGACAACCGAUACCGGAAAAGGCGGGUCGUUCCCCCCGGACAGCCCUACGCCGGCAAAGGUCUCGAGAUGCAGGCGGCCCUAGAGGUCACCGCUCGCUACUGUGGCCGGGA\
GCUGGAGCAGUAUGGCCAGUGUGUGGCGGCCAAGCCGGAAUCCUGGCAGCGGGACU\
) } def
/len { sequence length } bind def

/coor [
[612.07061768 750.56091309]
[600.24584961 759.78991699]
[585.70300293 763.46502686]
[570.91339111 760.96166992]
[558.39013672 752.70532227]
[550.26123047 740.09893799]
[547.90814209 725.28460693]
[551.73065186 710.77984619]
[561.07916260 699.04937744]
[574.36517334 692.08648682]
[589.33099365 691.07440186]
[603.43109131 696.18359375]
[593.59777832 684.85632324]
[583.76452637 673.52905273]
[573.87432861 662.25146484]
[563.92749023 651.02380371]
[553.98065186 639.79614258]
[544.03381348 628.56848145]
[534.08697510 617.34082031]
[524.08374023 606.16339111]
[514.02435303 595.03643799]
[503.96493530 583.90954590]
[489.12261963 583.41876221]
[478.76245117 572.27777100]
[479.37780762 556.71313477]
[469.31842041 545.58618164]
[459.25903320 534.45922852]
[444.41671753 533.96850586]
[434.05654907 522.82751465]
[434.67193604 507.26281738]
[424.61254883 496.13589478]
[414.55316162 485.00894165]
[404.49377441 473.88201904]
[394.37847900 462.80584717]
[384.20758057 451.78076172]
[367.36614990 451.80654907]
[355.50167847 439.38134766]
[356.33651733 421.88275146]
[346.05511475 410.96063232]
[335.77371216 400.03851318]
[325.49230957 389.11642456]
[315.21087646 378.19430542]
[314.68637085 393.18511963]
[305.82931519 405.29101562]
[291.70050049 410.32852173]
[277.18243408 406.55682373]
[267.29217529 395.27929688]
[265.44750977 380.39315796]
[272.28591919 367.04263306]
[285.44421387 359.84130859]
[300.37561035 361.27789307]
[290.88891602 349.65884399]
[281.40225220 338.03976440]
[271.91555786 326.42068481]
[262.42889404 314.80160522]
[252.94219971 303.18252563]
[243.45552063 291.56344604]
[230.28303528 293.55105591]
[217.74311829 288.74411011]
[209.13705444 278.29394531]
[206.78656006 264.85208130]
[211.40826416 251.89794922]
[202.03904724 240.18394470]
[192.66984558 228.46994019]
[173.58192444 233.81091309]
[152.59854126 221.46586609]
[137.72686768 223.42376709]
[122.85519409 225.38165283]
[113.43420410 238.07104492]
[97.78781128 240.29945374]
[85.19873810 230.74484253]
[83.13586426 215.07575989]
[92.82305908 202.58840942]
[108.51306915 200.69131470]
[120.89730072 210.50997925]
[135.76898193 208.55209351]
[150.64065552 206.59419250]
[153.99163818 199.88442993]
[139.15789795 197.65731812]
[136.69215393 182.86135864]
[150.00199890 175.94413757]
[160.69361877 186.46492004]
[164.04460144 179.75515747]
[156.67578125 166.68991089]
[149.30696106 153.62467957]
[141.93814087 140.55943298]
[134.56932068 127.49419403]
[127.20050812 114.42895508]
[119.83168793 101.36371613]
[109.10620117 133.42434692]
[59.24049377 127.92278290]
[45.95865631 120.95193481]
[32.67681503 113.98109436]
[16.86166573 114.41886902]
[9.18792915 101.65317535]
[-4.09391117 94.68232727]
[-17.37575150 87.71147919]
[-30.65759277 80.74063110]
[-43.93943405 73.76978302]
[-57.22127151 66.79893494]
[-74.05599976 64.79189301]
[-76.78771210 48.05946350]
[-61.46540451 40.80251312]
[-50.25042343 53.51709366]
[-36.96858597 60.48794174]
[-23.68674469 67.45879364]
[-10.40490437 74.42963409]
[2.87693644 81.40048218]
[16.15877724 88.37133026]
[31.02392006 87.43495178]
[39.64766312 100.69924927]
[52.92950439 107.67009735]
[66.21134186 114.64094543]
[71.32448578 109.15407562]
[60.35074997 98.92778015]
[49.37701416 88.70149231]
[38.40343094 78.47502899]
[48.63006210 67.50160980]
[59.60330582 77.72775269]
[70.57704163 87.95404816]
[81.55078125 98.18033600]
[86.66392517 92.69346619]
[78.77500153 79.93553925]
[70.88607025 67.17760468]
[62.99714661 54.41967392]
[47.55920410 51.03656006]
[39.10562515 37.68318558]
[42.65177155 22.28187370]
[56.09377289 13.96994781]
[71.45673370 17.67872620]
[79.62607574 31.20785713]
[75.75508118 46.53074646]
[83.64400482 59.28867722]
[91.53293610 72.04660797]
[99.42185974 84.80454254]
[113.74267578 80.34199524]
[112.98780060 65.36100006]
[109.44638062 56.99945068]
[112.30152130 50.22551727]
[111.69753265 35.23768234]
[111.09354401 20.24984550]
[110.48955536 5.26201057]
[109.88556671 -9.72582436]
[98.69583130 -13.86616421]
[89.56936646 -21.49758530]
[83.54860687 -31.71826172]
[81.31112671 -43.33241653]
[83.09341431 -54.99020386]
[88.66613007 -65.34458160]
[97.36333466 -73.20699310]
[108.16195679 -77.68373108]
[108.01091766 -92.68297577]
[107.85988617 -107.68221283]
[99.05641937 -121.51807404]
[106.87580109 -135.93296814]
[123.27411652 -136.09809875]
[131.38218689 -121.84358215]
[122.85912323 -107.83324432]
[123.01016235 -92.83400726]
[123.16119385 -77.83477020]
[139.37310791 -69.61269379]
[149.17120361 -54.20007706]
[149.74191284 -35.85984802]
[140.83824158 -19.71775627]
[124.87339783 -10.32981300]
[125.47738647 4.65802145]
[126.08137512 19.64585686]
[126.68536377 34.63368988]
[127.28936005 49.62152481]
[127.96879578 64.60613251]
[128.72366333 79.58712769]
[132.89692688 93.99489594]
[140.26574707 107.06013489]
[147.63456726 120.12537384]
[155.00338745 133.19061279]
[162.37220764 146.25585938]
[169.74102783 159.32109070]
[177.10984802 172.38633728]
[201.72451782 180.51731873]
[211.45263672 200.99595642]
[204.38385010 219.10073853]
[213.75305176 230.81474304]
[223.12226868 242.52874756]
[240.03192139 241.52511597]
[254.05770874 250.72329712]
[259.76165771 266.31930542]
[255.07460022 282.07678223]
[264.56127930 293.69586182]
[274.04794312 305.31491089]
[283.53463745 316.93399048]
[293.02133179 328.55307007]
[302.50799561 340.17214966]
[311.99468994 351.79122925]
[323.61642456 356.85787964]
[326.13299561 367.91290283]
[336.41439819 378.83499146]
[346.69583130 389.75711060]
[356.97723389 400.67922974]
[367.25863647 411.60134888]
[380.64688110 410.45233154]
[392.09378052 417.11196899]
[397.54934692 428.96569824]
[395.23266602 441.60986328]
[405.40356445 452.63494873]
[413.47726440 456.79098511]
[415.62069702 463.82263184]
[425.68008423 474.94955444]
[435.73947144 486.07650757]
[445.79885864 497.20343018]
[461.34655762 498.15576172]
[471.38970947 509.58337402]
[470.38598633 524.39984131]
[480.44537354 535.52679443]
[490.50476074 546.65374756]
[506.05245972 547.60607910]
[516.09558105 559.03363037]
[515.09185791 573.85015869]
[525.15124512 584.97705078]
[535.21063232 596.10400391]
[543.24206543 600.34112549]
[545.31463623 607.39398193]
[555.26147461 618.62164307]
[565.20831299 629.84930420]
[575.15515137 641.07696533]
[585.10198975 652.30462646]
[593.09033203 656.62243652]
[595.09173584 663.69580078]
[604.92504883 675.02301025]
[614.75830078 686.35028076]
[625.31140137 697.01013184]
[636.53906250 706.95697021]
[647.76672363 716.90380859]
[656.21728516 720.22723389]
[659.05670166 727.00781250]
[670.18365479 737.06719971]
[681.31054688 747.12658691]
[692.43750000 757.18597412]
[703.56445312 767.24536133]
[747.04864502 754.30023193]
[759.88537598 762.06030273]
[772.72210693 769.82037354]
[785.55877686 777.58044434]
[798.39550781 785.34051514]
[811.23223877 793.10058594]
[829.48901367 787.89038086]
[845.45330811 797.56066895]
[849.16107178 815.52587891]
[862.15142822 823.02587891]
[875.14184570 830.52587891]
[888.13220215 838.02587891]
[901.12255859 845.52587891]
[914.11297607 853.02587891]
[924.37438965 849.62402344]
[934.61035156 852.34613037]
[941.53399658 860.07006836]
[943.05859375 870.10888672]
[955.89532471 877.86895752]
[968.73205566 885.62902832]
[981.56878662 893.38909912]
[998.25158691 896.40893555]
[999.96807861 913.27575684]
[984.23553467 919.59436035]
[973.80871582 906.22583008]
[960.97198486 898.46575928]
[948.13525391 890.70568848]
[935.29852295 882.94561768]
[915.95672607 883.91674805]
[906.61297607 866.01623535]
[893.62255859 858.51623535]
[880.63220215 851.01623535]
[867.64184570 843.51623535]
[854.65142822 836.01623535]
[841.66107178 828.51623535]
[831.60107422 833.76641846]
[820.13647461 833.52978516]
[810.09454346 827.74969482]
[804.00708008 817.75085449]
[803.47216797 805.93731689]
[790.63543701 798.17724609]
[777.79876709 790.41717529]
[764.96203613 782.65710449]
[752.12530518 774.89703369]
[739.28857422 767.13696289]
[733.45526123 771.85101318]
[746.02697754 780.03338623]
[742.12969971 794.51824951]
[727.14947510 795.28765869]
[721.78857422 781.27905273]
[715.95520020 785.99310303]
[720.84826660 800.17260742]
[725.74127197 814.35205078]
[730.63433838 828.53155518]
[735.52734375 842.71105957]
[748.25915527 853.04711914]
[745.40692139 869.19635010]
[729.90478516 874.54577637]
[717.70007324 863.59240723]
[721.34790039 847.60412598]
[716.45483398 833.42462158]
[711.56176758 819.24511719]
[706.66876221 805.06561279]
[701.77569580 790.88610840]
[693.50506592 778.37231445]
[682.37811279 768.31292725]
[671.25115967 758.25354004]
[660.12426758 748.19415283]
[648.99731445 738.13470459]
[637.81988525 728.13146973]
[626.59222412 718.18463135]
[615.36456299 708.23779297]
[620.33184814 722.39147949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 229]
[13 228]
[14 227]
[15 225]
[16 224]
[17 223]
[18 222]
[19 221]
[20 219]
[21 218]
[22 217]
[25 214]
[26 213]
[27 212]
[30 209]
[31 208]
[32 207]
[33 206]
[34 204]
[35 203]
[38 199]
[39 198]
[40 197]
[41 196]
[42 195]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[62 183]
[63 182]
[64 181]
[66 77]
[67 76]
[68 75]
[83 178]
[84 177]
[85 176]
[86 175]
[87 174]
[88 173]
[89 172]
[91 113]
[92 112]
[93 111]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[122 135]
[123 134]
[124 133]
[125 132]
[136 171]
[137 170]
[139 169]
[140 168]
[141 167]
[142 166]
[143 165]
[151 160]
[152 159]
[153 158]
[230 310]
[231 309]
[232 308]
[234 307]
[235 306]
[236 305]
[237 304]
[238 303]
[239 283]
[240 282]
[241 281]
[242 280]
[243 279]
[244 278]
[247 273]
[248 272]
[249 271]
[250 270]
[251 269]
[252 268]
[256 266]
[257 265]
[258 264]
[259 263]
[289 302]
[290 301]
[291 300]
[292 299]
[293 298]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
