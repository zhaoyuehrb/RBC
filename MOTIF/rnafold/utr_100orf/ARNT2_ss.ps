%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGGCGGCGGGGAGAGCGGAGGGAGCGCCGCCCGCCCGCGCCGUCCUUUGUGUGGCGGCGGCGGCGCCUGGGCCUGACCGGGUCCCCGGGGCUGAGCGCCGGGCUCCGCGCCGCCCCUCCCGCGCCCCUGCCAAGCGGGCGCCUAUCCUCUCCGAGCAAGAUGGCAACCCCGGCGGCGGUCAACCCUCCGGAAAUGGCUUCAGACAUACCUGGAUCUGUGACGUUGCCCGUUGCCCCCAUGGCGGCCAC\
CGGACAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[118.76766968 258.63531494]
[116.30791473 243.83836365]
[106.58828735 232.55218506]
[111.95783997 217.67002869]
[109.49808502 202.87307739]
[107.03833008 188.07614136]
[104.57857513 173.27919006]
[94.85894775 161.99299622]
[100.22850800 147.11083984]
[97.76875305 132.31390381]
[80.18266296 125.62108612]
[69.28437042 110.28187561]
[68.75173950 91.47282410]
[55.58847427 84.28056335]
[40.59483337 88.50293732]
[27.34786987 81.02145386]
[23.41488266 66.70128632]
[10.25162125 59.50902939]
[-2.91164041 52.31677628]
[-16.07490158 45.12451935]
[-29.23816490 37.93226624]
[-42.40142822 30.74001122]
[-69.55487061 45.33922577]
[-86.91721344 26.20873451]
[-101.63540649 23.31484222]
[-116.35360718 20.42095184]
[-131.07180786 17.52706146]
[-145.79000854 14.63317013]
[-160.50820923 11.73927879]
[-169.49734497 13.15240192]
[-175.38209534 8.72378159]
[-190.06523132 5.65691662]
[-204.74836731 2.59005165]
[-219.83895874 7.34235382]
[-230.71542358 -2.83368754]
[-245.39855957 -5.90055275]
[-260.08169556 -8.96741772]
[-274.56015015 0.87955064]
[-291.34637451 -2.73699403]
[-300.13220215 -17.09540749]
[-314.85040283 -19.98929787]
[-329.56860352 -22.88319016]
[-344.28680420 -25.77708054]
[-344.49673462 -6.14920712]
[-361.98651123 12.02229595]
[-376.46389771 15.94718456]
[-390.94131470 19.87207413]
[-405.41873169 23.79696274]
[-419.89611816 27.72185135]
[-434.37353516 31.64673996]
[-448.85092163 35.57162857]
[-454.24304199 50.12170410]
[-467.17630005 58.69551849]
[-482.67761230 57.99626160]
[-494.78640747 48.29281235]
[-498.84658813 33.31634521]
[-493.29696655 18.82562065]
[-480.27145386 10.39261436]
[-464.77862549 11.25998974]
[-452.77581787 21.09422493]
[-438.29840088 17.16933632]
[-423.82101440 13.24444675]
[-409.34359741 9.31955814]
[-394.86621094 5.39466906]
[-380.38879395 1.46978009]
[-365.91137695 -2.45510864]
[-365.07479858 -9.90830231]
[-363.40158081 -24.81468964]
[-362.56497192 -32.26788330]
[-375.81195068 -39.30476379]
[-389.05892944 -46.34164047]
[-402.30590820 -53.37852097]
[-411.31866455 -54.63233948]
[-415.66662598 -60.57692337]
[-428.82989502 -67.76918030]
[-444.65014648 -67.59626007]
[-452.10906982 -80.48865509]
[-465.27233887 -87.68090820]
[-478.43560791 -94.87316132]
[-491.59884644 -102.06542206]
[-496.74966431 -101.94586945]
[-501.01763916 -103.62683868]
[-503.86895752 -106.47849274]
[-505.09320068 -109.75089264]
[-517.99444580 -117.40321350]
[-530.89569092 -125.05554199]
[-543.79693604 -132.70787048]
[-560.19238281 -132.35966492]
[-568.45910645 -146.52276611]
[-560.09295654 -160.62738037]
[-543.70037842 -160.16389465]
[-536.14459229 -145.60910034]
[-523.24334717 -137.95677185]
[-510.34213257 -130.30445862]
[-497.44088745 -122.65213013]
[-484.40661621 -115.22868347]
[-471.24334717 -108.03642273]
[-458.08007812 -100.84416962]
[-444.91680908 -93.65191650]
[-430.03808594 -94.33927155]
[-421.63763428 -80.93244171]
[-408.47436523 -73.74018097]
[-395.26904297 -66.62549591]
[-382.02206421 -59.58861542]
[-368.77508545 -52.55173874]
[-355.52810669 -45.51485825]
[-341.39291382 -40.49528122]
[-326.67471313 -37.60139084]
[-311.95651245 -34.70749664]
[-297.23831177 -31.81360626]
[-287.66842651 -40.41225433]
[-274.70098877 -41.96264267]
[-263.03137207 -35.67824173]
[-257.01483154 -23.65054893]
[-242.33169556 -20.58368301]
[-227.64855957 -17.51681900]
[-213.60820007 -22.48848343]
[-201.68150330 -12.09307957]
[-186.99836731 -9.02621460]
[-172.31523132 -5.95934963]
[-157.61431885 -2.97892022]
[-142.89611816 -0.08502929]
[-128.17791748 2.80886173]
[-113.45971680 5.70275259]
[-98.74151611 8.59664345]
[-84.02331543 11.49053478]
[-76.07678223 0.40495816]
[-60.56338120 -3.94094634]
[-58.97790146 -18.85692024]
[-57.39242172 -33.77289200]
[-55.80694199 -48.68886566]
[-54.22146606 -63.60483932]
[-52.63598633 -78.52081299]
[-51.13828659 -93.44585419]
[-49.72842026 -108.37944794]
[-57.04505539 -123.05592346]
[-47.76877975 -136.57934570]
[-31.44222832 -135.03796387]
[-24.86076164 -120.01743317]
[-34.79482651 -106.96958160]
[-36.20469284 -92.03598785]
[-33.71320724 -85.10522461]
[-37.72001266 -76.93533325]
[-39.30549240 -62.01935959]
[-40.89097214 -47.10338593]
[-42.47644806 -32.18741608]
[-44.06192780 -17.27144051]
[-45.64740753 -2.35546780]
[-37.39166641 -14.87915516]
[-22.57715797 -17.23082733]
[-10.84893703 -7.87941933]
[-9.84271526 7.08679342]
[-20.21359825 17.92398834]
[-35.20917130 17.57674789]
[-22.04590988 24.76900291]
[-8.88264751 31.96125793]
[4.28061485 39.15351486]
[17.44387627 46.34576797]
[30.60713959 53.53802490]
[44.78273392 49.11217499]
[58.23460770 56.21862793]
[62.78073120 71.11730194]
[75.94399261 78.30956268]
[85.73439789 70.91977692]
[97.57063293 67.70038605]
[109.75525665 69.11308289]
[120.54088593 74.95526886]
[128.38075256 84.38911438]
[132.15052795 96.06171417]
[147.05691528 97.73491669]
[161.96330261 99.40811920]
[176.86968994 101.08132172]
[191.77607727 102.75452423]
[206.68246460 104.42772675]
[214.74295044 97.18865204]
[225.23739624 95.59444427]
[234.68554688 99.93074036]
[240.08648682 108.55586243]
[254.94938660 110.57935333]
[269.81228638 112.60285187]
[284.67517090 114.62634277]
[299.53805542 116.64983368]
[314.40093994 118.67332458]
[329.26382446 120.69682312]
[338.15432739 118.75760651]
[344.28930664 122.83255768]
[359.12734985 125.03078461]
[373.96539307 127.22901154]
[383.55191040 115.31072235]
[397.72332764 109.82727051]
[412.63757324 112.15792847]
[424.30468750 121.57782745]
[429.65420532 135.47920227]
[444.49224854 137.67742920]
[459.33029175 139.87565613]
[474.16836548 142.07389832]
[489.00640869 144.27212524]
[501.61590576 135.12673950]
[516.63250732 137.56742859]
[525.27349854 149.64501953]
[540.11157227 151.84324646]
[554.94958496 154.04148865]
[565.71496582 142.86621094]
[580.99884033 140.18611145]
[594.92425537 147.03173828]
[602.13659668 160.77078247]
[599.86260986 176.12033081]
[588.97662354 187.17816162]
[573.66461182 189.69229126]
[559.81427002 182.69601440]
[552.75140381 168.87953186]
[537.91333008 166.68130493]
[523.07525635 164.48307800]
[511.30374146 173.53659058]
[496.22451782 171.51864624]
[486.80816650 159.11016846]
[471.97012329 156.91194153]
[457.13208008 154.71371460]
[442.29400635 152.51548767]
[427.45596313 150.31726074]
[418.30575562 162.07052612]
[404.40866089 167.70312500]
[389.45928955 165.60955811]
[377.48641968 156.25288391]
[371.76718140 142.06706238]
[356.92910767 139.86883545]
[342.09106445 137.67060852]
[327.24032593 135.55970764]
[312.37744141 133.53622437]
[297.51455688 131.51272583]
[282.65167236 129.48922729]
[267.78878784 127.46573639]
[252.92588806 125.44224548]
[238.06300354 123.41875458]
[220.71600342 132.00503540]
[205.00926208 119.33411407]
[190.10287476 117.66091156]
[175.19648743 115.98770905]
[160.29010010 114.31450653]
[145.38371277 112.64130402]
[130.47732544 110.96810150]
[123.50204468 122.28947449]
[112.56569672 129.85414124]
[115.02545166 144.65109253]
[124.92101288 156.99566650]
[119.37551880 170.81942749]
[121.83527374 185.61637878]
[124.29502869 200.41333008]
[126.75479126 215.21026611]
[136.65036011 227.55484009]
[131.10485840 241.37861633]
[133.56460571 256.17556763]
[136.19830322 270.94253540]
[139.00555420 285.67752075]
[141.81280518 300.41247559]
[144.62005615 315.14746094]
[157.02496338 325.32083130]
[156.66133118 341.35977173]
[143.80813599 350.96054077]
[128.32522583 346.75827026]
[122.08978271 331.97656250]
[129.88508606 317.95471191]
[127.07783508 303.21972656]
[124.27058411 288.48477173]
[121.46333313 273.74978638]
[118.11553955 270.38720703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 252]
[2 251]
[4 249]
[5 248]
[6 247]
[7 246]
[9 244]
[10 243]
[13 163]
[14 162]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[24 126]
[25 125]
[26 124]
[27 123]
[28 122]
[29 121]
[31 120]
[32 119]
[33 118]
[35 116]
[36 115]
[37 114]
[40 110]
[41 109]
[42 108]
[43 107]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[69 106]
[70 105]
[71 104]
[72 103]
[74 102]
[75 101]
[77 99]
[78 98]
[79 97]
[80 96]
[84 95]
[85 94]
[86 93]
[87 92]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 141]
[135 140]
[169 241]
[170 240]
[171 239]
[172 238]
[173 237]
[174 236]
[178 234]
[179 233]
[180 232]
[181 231]
[182 230]
[183 229]
[184 228]
[186 227]
[187 226]
[188 225]
[193 220]
[194 219]
[195 218]
[196 217]
[197 216]
[200 213]
[201 212]
[202 211]
[253 265]
[254 264]
[255 263]
[256 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
