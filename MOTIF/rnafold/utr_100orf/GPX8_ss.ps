%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUAAGCCGGUUUCAAGUUUCAGCUCCUCCUUGAAUUCCAGGCUGCUGAGACUUCCCUCUAGAAUCCUCCAACAUGGAGCCUCUUGCAGCUUACCCGCUAAAAUGUUCCGGGCCCAGAGCAAAGGUAUUUGCAGUUUUGCUGUCUAUAGUUCUAUGCACAGUAACGCUAUUUC\
) } def
/len { sequence length } bind def

/coor [
[101.19442749 161.30653381]
[93.13648224 160.71820068]
[85.25382996 159.07910156]
[77.68238831 156.42506409]
[70.55170441 152.80932617]
[63.98275375 148.30155945]
[58.08587265 142.98643494]
[52.95890427 136.96214294]
[48.68560410 130.33851624]
[45.33425140 123.23503876]
[42.95657349 115.77873230]
[28.10925102 117.91345215]
[15.55067825 127.53596497]
[1.85181856 121.68870544]
[-12.99550343 123.82342529]
[-27.84282494 125.95814514]
[-42.52790070 129.01568604]
[-56.99343109 132.98411560]
[-71.45896149 136.95252991]
[-85.92449188 140.92095947]
[-100.39002991 144.88938904]
[-114.85556030 148.85781860]
[-129.32109070 152.82623291]
[-143.78662109 156.79466248]
[-158.25215149 160.76309204]
[-172.71768188 164.73150635]
[-185.33297729 178.12500000]
[-202.12197876 173.06407166]
[-216.51437378 177.29005432]
[-230.90676880 181.51605225]
[-233.85076904 196.53575134]
[-243.44659424 208.45962524]
[-257.48919678 214.54765320]
[-272.75167847 213.40084839]
[-285.72683716 205.28273010]
[-293.43307495 192.05880737]
[-294.09957886 176.76780701]
[-287.57315063 162.92352295]
[-275.35354614 153.70724487]
[-260.24871826 151.23681641]
[-245.72967529 156.07992554]
[-235.13275146 167.12365723]
[-220.74035645 162.89765930]
[-206.34796143 158.67167664]
[-200.26235962 148.19395447]
[-188.28097534 144.56793213]
[-176.68611145 150.26597595]
[-162.22058105 146.29756165]
[-147.75505066 142.32913208]
[-133.28952026 138.36070251]
[-118.82398224 134.39227295]
[-104.35845184 130.42385864]
[-89.89292145 126.45542908]
[-75.42739105 122.48700714]
[-60.96185684 118.51857758]
[-46.49632645 114.55015564]
[-59.45395660 106.99371338]
[-64.66421509 92.92768860]
[-59.75594330 78.75345612]
[-46.96286392 70.92165375]
[-32.10705566 72.99649811]
[-21.94933319 84.03373718]
[-21.11242867 99.01037598]
[-29.97754669 111.11082458]
[-15.13022518 108.97610474]
[-0.28290400 106.84137726]
[11.21368980 97.37155151]
[25.97452927 103.06613159]
[40.82184982 100.93141174]
[42.10356903 87.71488953]
[46.29949570 75.11673737]
[53.19843674 63.77108002]
[62.45312881 54.24900818]
[73.59774017 47.02980423]
[86.07131195 42.47685242]
[99.24597931 40.81932449]
[112.45859528 42.14065170]
[117.44886780 27.99508095]
[122.43914032 13.84950924]
[122.34603882 4.68243217]
[127.64678955 -0.50264978]
[132.88874817 -14.55689526]
[138.13072205 -28.61114120]
[143.37268066 -42.66538620]
[134.96990967 -55.57661438]
[135.77153015 -70.78223419]
[145.26080322 -82.46202087]
[159.63597107 -86.26895142]
[164.87792969 -100.32320404]
[170.11988831 -114.37744904]
[163.80287170 -128.61587524]
[169.31918335 -142.79420471]
[182.93228149 -148.72877502]
[188.17424011 -162.78302002]
[193.41619873 -176.83726501]
[188.08642578 -191.96913147]
[196.71575928 -205.49371338]
[212.68449402 -207.03611755]
[223.74279785 -195.41314697]
[221.40768433 -179.54093933]
[207.47044373 -171.59530640]
[202.22848511 -157.54106140]
[196.98652649 -143.48681641]
[203.38830566 -130.08708191]
[198.27241516 -115.75940704]
[184.17413330 -109.13548279]
[178.93217468 -95.08123779]
[173.69021606 -81.02699280]
[182.06123352 -68.73617554]
[181.58410645 -53.69502258]
[172.23236084 -41.67844009]
[157.42692566 -37.42342377]
[152.18496704 -23.36917877]
[146.94299316 -9.31493282]
[141.70103455 4.73931313]
[136.58471680 18.83978271]
[131.59443665 32.98535538]
[126.60416412 47.13092422]
[143.98327637 58.61272049]
[156.60900879 75.70407867]
[162.71319580 96.49530029]
[177.52005005 94.09590912]
[192.32690430 91.69651031]
[207.13375854 89.29711914]
[221.94061279 86.89772797]
[234.29928589 76.11833954]
[249.72406006 81.68682861]
[252.34725952 97.87481689]
[239.47035217 108.02947998]
[224.33999634 101.70458221]
[209.53314209 104.10397339]
[194.72628784 106.50336456]
[179.91943359 108.90275574]
[165.11257935 111.30215454]
[160.88659668 125.69454956]
[172.04570007 135.71823120]
[183.20481873 145.74191284]
[198.64173889 149.20773315]
[202.93965149 163.46878052]
[214.09877014 173.49246216]
[225.25787354 183.51614380]
[236.41697693 193.53984070]
[247.57609558 203.56352234]
[258.73519897 213.58720398]
[269.89431763 223.61090088]
[285.33123779 227.07670593]
[289.62915039 241.33775330]
[300.78826904 251.36143494]
[311.94735718 261.38513184]
[323.10647583 271.40881348]
[339.25442505 274.26803589]
[344.59716797 289.77249146]
[333.63848877 301.97247314]
[317.65179443 298.31771851]
[313.08279419 282.56790161]
[301.92367554 272.54421997]
[290.76455688 262.52053833]
[279.60546875 252.49685669]
[264.96670532 249.74800110]
[259.87060547 234.77000427]
[248.71151733 224.74632263]
[237.55239868 214.72262573]
[226.39329529 204.69894409]
[215.23419189 194.67526245]
[204.07507324 184.65156555]
[192.91596985 174.62788391]
[178.27722168 171.87902832]
[173.18112183 156.90103149]
[162.02201843 146.87733459]
[150.86291504 136.85365295]
[145.41334534 143.08258057]
[139.21180725 148.52072144]
[132.37127686 153.07884216]
[125.01512909 156.68362427]
[117.27484894 159.27890015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 69]
[12 68]
[14 66]
[15 65]
[16 64]
[17 56]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[26 47]
[28 44]
[29 43]
[30 42]
[77 118]
[78 117]
[79 116]
[81 115]
[82 114]
[83 113]
[84 112]
[88 108]
[89 107]
[90 106]
[93 103]
[94 102]
[95 101]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
[135 170]
[136 169]
[137 168]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
