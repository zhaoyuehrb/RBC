%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCAUCCCUGACCGGGCCGAGGCUGCUGGAUGCCGCGUCUCCGCUUCUGCUGCCUGCCGGGCGGGCUCCGGUGGCCGCAGCAAAGUGGGGCACCAAGGCCCUGUGCUAAGCACUCAUAAUCCUCUGGGGGUGCUACCCCUACAAACAGCACCCCCACCAUGUUUAACCUAAUGAAGAAAGACAAGGACAAAGAUGGCGGGCGGAAGGAGAAGAAGGAGAAAAAGGAGAAAAAGGAGCGGAUGUCAGCGGCAGAGC\
UUC\
) } def
/len { sequence length } bind def

/coor [
[114.43421173 751.28546143]
[107.82063293 757.68347168]
[100.09680176 762.67089844]
[91.55854034 766.06030273]
[82.53218079 767.72528076]
[73.36206055 767.60546875]
[69.40660095 782.07452393]
[65.45113373 796.54364014]
[72.12149048 811.13421631]
[64.74474335 825.38073730]
[48.97969437 828.35449219]
[36.91994858 817.77416992]
[37.81670761 801.75622559]
[50.98205185 792.58819580]
[54.93751526 778.11907959]
[58.89297867 763.65002441]
[42.09072113 750.90936279]
[32.52597809 732.06707764]
[32.15697098 710.89483643]
[41.09677887 691.65002441]
[57.58276749 678.21923828]
[78.32398987 673.33374023]
[80.67948914 658.51983643]
[83.03499603 643.70593262]
[85.39049530 628.89202881]
[87.74599457 614.07812500]
[90.10150146 599.26428223]
[92.45700073 584.45037842]
[94.81250000 569.63647461]
[84.17368317 559.24639893]
[81.66326141 544.40856934]
[88.45063782 530.77825928]
[102.12049103 523.67602539]
[104.47599030 508.86215210]
[106.83149719 494.04824829]
[109.18699646 479.23434448]
[105.31519318 469.77484131]
[110.50524902 459.50375366]
[110.14139557 444.50817871]
[109.77753448 429.51257324]
[109.41368103 414.51699829]
[109.04982758 399.52142334]
[99.11979675 385.03659058]
[108.11138916 368.95104980]
[107.56567383 353.96099854]
[107.01995850 338.97091675]
[106.47424316 323.98083496]
[105.92852783 308.99078369]
[97.73331451 296.55340576]
[104.96343231 282.48089600]
[104.41771698 267.49081421]
[103.59936523 252.51316833]
[102.50865936 237.55287170]
[101.41794586 222.59257507]
[100.32723999 207.63227844]
[99.23652649 192.67199707]
[98.14582062 177.71170044]
[97.05510712 162.75140381]
[95.96440125 147.79110718]
[76.11724854 141.59196472]
[60.75888443 127.57556152]
[52.77591705 108.37631989]
[53.66875076 87.60273743]
[39.96310425 81.50722504]
[26.25745583 75.41172028]
[12.55180931 69.31620789]
[-1.15383852 63.22070312]
[-15.75347328 68.65102386]
[-29.56611633 62.27407074]
[-34.65312576 48.32208252]
[-48.35877609 42.22657394]
[-62.06442261 36.13106537]
[-75.77007294 30.03555870]
[-84.85234833 29.41290474]
[-89.60428619 23.78209686]
[-103.23499298 17.52079582]
[-119.00510406 18.79131508]
[-127.34084320 6.44770670]
[-140.97154236 0.18640494]
[-155.70259094 5.91109991]
[-170.13310242 -0.53372020]
[-175.70173645 -15.32445717]
[-169.10470581 -29.68602943]
[-154.25592041 -35.09797287]
[-139.96488953 -28.34947395]
[-134.71025085 -13.44429970]
[-121.07954407 -7.18299770]
[-106.28439331 -8.90136909]
[-96.97369385 3.89009070]
[-83.34298706 10.15139198]
[-69.67456055 16.32991028]
[-55.96891403 22.42541885]
[-42.26326752 28.52092743]
[-28.55761909 34.61643600]
[-14.78989410 29.04998589]
[-0.80358607 35.03645706]
[4.94166994 49.51505280]
[18.64731789 55.61056137]
[32.35296631 61.70606995]
[46.05861282 67.80158234]
[59.76425934 73.89708710]
[62.62497711 59.70658493]
[70.27597046 45.63975143]
[62.80224228 32.63423157]
[55.32852173 19.62871742]
[47.85479736 6.62320042]
[34.72059250 -4.09729528]
[41.38621902 -19.68593788]
[58.21088028 -17.59617424]
[60.86031342 -0.85052294]
[68.33403778 12.15499401]
[75.80776215 25.16051102]
[83.28148651 38.16602707]
[90.72073364 37.21339417]
[88.81546783 22.33488655]
[86.91020203 7.45638037]
[85.00493622 -7.42212629]
[78.59523010 -20.98367691]
[89.51233673 -31.27040291]
[102.66915894 -24.06636429]
[99.88343811 -9.32739353]
[101.78871155 5.55111313]
[103.69397736 20.42961884]
[105.59924316 35.30812454]
[113.03849792 34.35549164]
[116.99395752 19.88641167]
[120.94942474 5.41732979]
[124.90488434 -9.05175114]
[128.86035156 -23.52083206]
[132.81581116 -37.98991394]
[136.77127075 -52.45899582]
[140.72674561 -66.92807770]
[144.68220520 -81.39715576]
[148.63766479 -95.86624146]
[137.08538818 -105.84158325]
[131.01315308 -119.84482574]
[131.62661743 -135.09561157]
[138.80398560 -148.56588745]
[151.12016296 -157.58111572]
[166.12979126 -160.35131836]
[180.85267639 -156.32646179]
[192.36558533 -146.30570984]
[198.38262939 -132.27865601]
[197.70910645 -117.03041077]
[190.47875977 -103.58850861]
[178.12716675 -94.62184906]
[163.10675049 -91.91077423]
[159.15129089 -77.44169617]
[155.19581604 -62.97261429]
[151.24035645 -48.50353241]
[147.28489685 -34.03445053]
[143.32943726 -19.56536865]
[139.37396240 -5.09628820]
[135.41850281 9.37279320]
[131.46304321 23.84187508]
[127.50757599 38.31095505]
[139.51321411 47.30343246]
[152.28614807 39.43881989]
[159.98068237 25.61475372]
[174.87504578 25.53028870]
[187.64797974 17.66567993]
[200.42091370 9.80107021]
[213.19386292 1.93646133]
[225.96679688 -5.92814779]
[223.52243042 -20.93126678]
[227.01045227 -35.72660828]
[235.89895630 -48.05799484]
[248.83248901 -56.04497528]
[263.83880615 -58.46959686]
[278.62954712 -54.96212006]
[290.94924927 -46.05741119]
[298.91918945 -33.11336899]
[301.32406616 -18.10387421]
[297.79714966 -3.31775880]
[288.87625122 8.99019909]
[275.92172241 16.94312668]
[260.90908813 19.32825851]
[246.12760925 15.78188038]
[233.83140564 6.84478903]
[221.05847168 14.70939827]
[208.28552246 22.57400703]
[195.51258850 30.43861771]
[182.73965454 38.30322647]
[175.95874023 51.56476593]
[160.15075684 52.21175766]
[147.37782288 60.07636642]
[154.34146118 74.07984924]
[157.40629578 88.96463776]
[156.58737183 103.69680023]
[152.16195679 117.30841827]
[144.63716125 128.96119690]
[134.70272827 137.99794006]
[123.17333221 143.97882080]
[110.92469025 146.70040894]
[112.01540375 161.66069031]
[113.10610962 176.62098694]
[114.19682312 191.58128357]
[115.28752899 206.54158020]
[116.37824249 221.50186157]
[117.46894836 236.46215820]
[118.55966187 251.42245483]
[121.45671844 255.69247437]
[122.35670471 260.19696045]
[121.50080872 264.14285278]
[119.40778351 266.94509888]
[119.95349884 281.93518066]
[128.18774414 295.44473267]
[120.91859436 308.44506836]
[121.46431732 323.43511963]
[122.01003265 338.42520142]
[122.55574799 353.41528320]
[123.10146332 368.40533447]
[131.98822021 377.72628784]
[132.15036011 390.20327759]
[124.04541016 399.15756226]
[124.40927124 414.15313721]
[124.77312469 429.14874268]
[125.13697815 444.14431763]
[125.50083160 459.13989258]
[132.59472656 445.92337036]
[143.68460083 435.82315063]
[157.50476074 429.99194336]
[172.47793579 429.09530640]
[186.89523315 433.23553467]
[199.11120605 441.94012451]
[207.73164368 454.21563721]
[211.77270508 468.66107178]
[210.77316284 483.62771606]
[204.84712219 497.40747070]
[194.67091370 508.42767334]
[181.40592957 515.43054199]
[166.56611633 517.61688232]
[151.84515381 514.73718262]
[138.92311096 507.12002563]
[129.27479553 495.63479614]
[124.00090027 481.58984375]
[121.64539337 496.40374756]
[119.28989410 511.21765137]
[116.93439484 526.03155518]
[127.72717285 537.02343750]
[129.95208740 552.08679199]
[122.96321869 565.41418457]
[109.62640381 571.99194336]
[107.27089691 586.80584717]
[104.91539764 601.61975098]
[102.55989838 616.43365479]
[100.20439148 631.24755859]
[97.84889221 646.06146240]
[95.49339294 660.87536621]
[93.13788605 675.68927002]
[101.61820221 679.45611572]
[109.19904327 684.79394531]
[115.59339142 691.49694824]
[120.55986023 699.30773926]
[123.91184235 707.92724609]
[125.52444458 717.02600098]
[125.33921814 726.25695801]
[123.36622620 735.26861572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 16]
[7 15]
[8 14]
[22 250]
[23 249]
[24 248]
[25 247]
[26 246]
[27 245]
[28 244]
[29 243]
[33 239]
[34 238]
[35 237]
[36 236]
[38 219]
[39 218]
[40 217]
[41 216]
[42 215]
[44 212]
[45 211]
[46 210]
[47 209]
[48 208]
[50 206]
[51 205]
[52 201]
[53 200]
[54 199]
[55 198]
[56 197]
[57 196]
[58 195]
[59 194]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[70 94]
[71 93]
[72 92]
[73 91]
[75 90]
[76 89]
[78 87]
[79 86]
[103 113]
[104 112]
[105 111]
[106 110]
[125 156]
[126 155]
[127 154]
[128 153]
[129 152]
[130 151]
[131 150]
[132 149]
[133 148]
[134 147]
[157 186]
[158 185]
[160 183]
[161 182]
[162 181]
[163 180]
[164 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
