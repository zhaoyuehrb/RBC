%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUUGGGGCUGAAGUUCCCUGUGGGAGGCUGUUUUCUGAGGGAGCUGAGUGUUUACAGCCACUCAGCCCUGCUCUGCUCAGCUGAAGCAGAAAACAGAGACCUUUUGCAUUACUUUGGUUCAAGAGCAAGGAGGCGACUGCAUGAGACCAUGGCUGAGACACCUAGUCCUCCAGGCACUGAGGAACUCCAGGGCAUUCUGUGGGUCUCAUGGGAAGCCAGCACCUCUACCUGUUCCUCAGA\
) } def
/len { sequence length } bind def

/coor [
[230.06069946 227.40954590]
[218.92214966 217.36302185]
[204.79475403 222.08343506]
[190.10368347 219.07872009]
[178.81449890 209.05770874]
[174.02552795 194.63679504]
[177.11796570 179.65733337]
[165.97941589 169.61080933]
[154.84086609 159.56428528]
[143.70230103 149.51776123]
[132.56375122 139.47123718]
[121.42520142 129.42471313]
[110.28664398 119.37819672]
[100.28247070 121.93740845]
[90.21571350 119.63662720]
[79.33953094 129.96661377]
[68.46334839 140.29660034]
[57.58716202 150.62658691]
[46.71097946 160.95657349]
[35.83479691 171.28656006]
[24.95861244 181.61656189]
[14.08242893 191.94654846]
[13.51274204 207.51295471]
[2.33559084 217.83409119]
[-12.50109386 217.19505310]
[-23.37727737 227.52503967]
[-34.25345993 237.85502625]
[-45.12964249 248.18501282]
[-56.00582504 258.51501465]
[-60.13528442 274.38571167]
[-76.01422882 278.48342896]
[-87.30776215 266.59274292]
[-82.39806366 250.94580078]
[-66.33581543 247.63882446]
[-55.45962906 237.30883789]
[-44.58344650 226.97885132]
[-33.70726395 216.64886475]
[-22.83108139 206.31887817]
[-22.70549965 191.46896362]
[-11.82265854 180.83795166]
[3.75244141 181.07035828]
[14.62862492 170.74037170]
[25.50480843 160.41038513]
[36.38098907 150.08039856]
[47.25717545 139.75041199]
[58.13335800 129.42042542]
[69.00953674 119.09043121]
[79.88572693 108.76044464]
[78.06166840 99.80252075]
[80.04668427 90.87888336]
[85.49613190 83.53890991]
[80.02458191 69.57244873]
[74.55302429 55.60598373]
[69.08147430 41.63952255]
[63.60992050 27.67305756]
[58.13836670 13.70659447]
[52.10741425 6.87616301]
[52.68754959 -0.47507548]
[47.39626694 -14.51082802]
[42.10498810 -28.54657936]
[36.81370544 -42.58233261]
[31.52242470 -56.61808395]
[26.23114204 -70.65383911]
[20.58022499 -84.54869843]
[14.57341576 -98.29344940]
[8.56660748 -112.03820038]
[2.55979872 -125.78295898]
[-3.53536940 -139.48875427]
[-9.71864414 -153.15502930]
[-16.33853531 -166.61523438]
[-23.38818741 -179.85542297]
[-30.43783760 -193.09559631]
[-43.75315094 -201.64036560]
[-42.90512085 -216.51081848]
[-49.95477295 -229.75099182]
[-56.73500824 -235.83831787]
[-57.00870895 -243.20733643]
[-63.88730621 -256.53717041]
[-70.76590729 -269.86703491]
[-77.64450836 -283.19686890]
[-84.52310181 -296.52673340]
[-95.03246307 -299.22116089]
[-102.18581390 -307.08410645]
[-103.80852509 -317.36752319]
[-99.60460663 -326.65148926]
[-106.13770294 -340.15402222]
[-112.67080688 -353.65655518]
[-119.20391083 -367.15908813]
[-132.17932129 -376.21166992]
[-130.75767517 -391.03829956]
[-137.29078674 -404.54083252]
[-143.82388306 -418.04336548]
[-150.35699463 -431.54589844]
[-169.34281921 -434.14593506]
[-182.80018616 -447.57617188]
[-185.39700317 -466.25833130]
[-176.25971985 -482.58679199]
[-183.30937195 -495.82696533]
[-190.35902405 -509.06716919]
[-197.40867615 -522.30731201]
[-212.27204895 -528.34552002]
[-216.67999268 -543.77117920]
[-207.25111389 -556.75097656]
[-191.21842957 -557.32800293]
[-180.88085938 -545.05957031]
[-184.16848755 -529.35699463]
[-177.11885071 -516.11682129]
[-170.06919861 -502.87661743]
[-163.01954651 -489.63644409]
[-151.91534424 -490.20596313]
[-141.34890747 -486.58383179]
[-132.85182190 -479.25469971]
[-127.67070007 -469.24343872]
[-126.58431244 -457.97195435]
[-129.78684998 -447.05712891]
[-136.85444641 -438.07901001]
[-130.32135010 -424.57647705]
[-123.78824615 -411.07391357]
[-117.25514221 -397.57138062]
[-104.74702454 -389.48458862]
[-105.70137024 -373.69219971]
[-99.16827393 -360.18966675]
[-92.63516998 -346.68713379]
[-86.10206604 -333.18457031]
[-69.35482788 -323.49411011]
[-71.19325256 -303.40533447]
[-64.31465912 -290.07546997]
[-57.43605804 -276.74563599]
[-50.55745697 -263.41577148]
[-43.67885971 -250.08593750]
[-36.71458817 -236.80064392]
[-29.66493797 -223.56045532]
[-16.85386467 -215.96272278]
[-17.19765663 -200.14524841]
[-10.14800549 -186.90507507]
[-3.09835410 -173.66488647]
[3.59556317 -187.08842468]
[18.23587418 -190.35359192]
[29.99930000 -181.04650879]
[30.18938065 -166.04771423]
[18.66559410 -156.44549561]
[3.94763231 -159.33830261]
[10.13090706 -145.67202759]
[15.73923588 -140.88414001]
[16.30455208 -131.78976440]
[22.31136131 -118.04501343]
[28.31816864 -104.30025482]
[34.32497787 -90.55550385]
[36.85885239 -89.40600586]
[39.09532166 -87.19458008]
[40.63167572 -84.02767181]
[41.11043167 -80.15400696]
[40.26689529 -75.94512177]
[45.55817795 -61.90936661]
[50.84945679 -47.87361526]
[56.14073944 -33.83786011]
[61.43202209 -19.80210876]
[66.72330475 -5.76635695]
[72.10482788 8.23504162]
[77.57638550 22.20150566]
[83.04793549 36.16796875]
[88.51949310 50.13443375]
[93.99104309 64.10089874]
[99.46260071 78.06735992]
[118.04327393 87.51922607]
[120.33316803 108.23963928]
[131.47172546 118.28616333]
[142.61027527 128.33268738]
[153.74882507 138.37921143]
[164.88739014 148.42573547]
[176.02593994 158.47225952]
[187.16448975 168.51878357]
[201.74658203 163.90254211]
[216.58346558 167.18334961]
[227.71212769 177.38232422]
[232.21148682 191.68658447]
[228.96867371 206.22445679]
[240.10722351 216.27098083]
[258.20825195 219.70716858]
[262.93991089 236.61592102]
[274.20690918 246.51820374]
[285.47387695 256.42050171]
[296.74087524 266.32278442]
[308.00784302 276.22506714]
[319.27481079 286.12734985]
[330.54180908 296.02960205]
[341.80877686 305.93188477]
[353.07574463 315.83416748]
[358.15127563 316.84991455]
[361.95983887 319.44158936]
[364.11480713 322.86834717]
[364.57711792 326.34298706]
[375.45327759 336.67297363]
[386.32946777 347.00296021]
[400.22174072 340.89715576]
[415.35250854 340.57617188]
[429.41540527 346.05776978]
[440.27883911 356.47763062]
[446.30889893 370.22549438]
[446.61523438 385.19381714]
[441.18228149 399.10110474]
[452.05847168 409.43109131]
[462.93466187 419.76107788]
[478.26928711 423.65463257]
[482.16915894 438.02963257]
[493.04531860 448.35961914]
[503.92150879 458.68960571]
[519.25616455 462.58316040]
[523.15600586 476.95816040]
[534.03216553 487.28814697]
[550.09442139 490.59512329]
[555.00415039 506.24206543]
[543.71057129 518.13275146]
[527.83166504 514.03503418]
[523.70220947 498.16430664]
[512.82598877 487.83432007]
[498.26931763 484.67965698]
[493.59152222 469.56579590]
[482.71533203 459.23580933]
[471.83917236 448.90582275]
[457.28247070 445.75112915]
[452.60467529 430.63726807]
[441.72848511 420.30728149]
[430.85229492 409.97729492]
[417.24313354 416.11895752]
[402.27886963 416.58358765]
[388.23883057 411.26922607]
[377.27352905 400.95663452]
[371.07525635 387.19454956]
[370.61694336 372.06732178]
[375.99948120 357.87915039]
[365.12329102 347.54916382]
[354.24713135 337.21917725]
[343.17346191 327.10116577]
[331.90649414 317.19888306]
[320.63952637 307.29660034]
[309.37252808 297.39431763]
[298.10556030 287.49203491]
[286.83859253 277.58975220]
[275.57159424 267.68746948]
[264.30462646 257.78518677]
[253.03764343 247.88290405]
[240.96395874 248.35125732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[51 164]
[52 163]
[53 162]
[54 161]
[55 160]
[56 159]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[63 153]
[64 148]
[65 147]
[66 146]
[67 145]
[68 143]
[69 142]
[70 136]
[71 135]
[72 134]
[74 132]
[75 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[85 124]
[86 123]
[87 122]
[88 121]
[90 119]
[91 118]
[92 117]
[93 116]
[97 109]
[98 108]
[99 107]
[100 106]
[180 242]
[181 241]
[182 240]
[183 239]
[184 238]
[185 237]
[186 236]
[187 235]
[188 234]
[192 233]
[193 232]
[194 231]
[201 224]
[202 223]
[203 222]
[205 220]
[206 219]
[207 218]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
