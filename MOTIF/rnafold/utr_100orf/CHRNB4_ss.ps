%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCAGCAAACCUCGGGGGCCAGGACCGGCGCUCACUCGACCGCGCGGCUCACGGGUGCCCUGUGACCCCACAGCGGAGCUCGCGGCGGCUGCCACCCGGCCCCGCCGGCCAUGAGGCGCGCGCCUUCCCUGGUCCUUUUCUUCCUGGUCGCCCUUUGCGGGCGCGGGAACUGCCGCGUGGCCAAUGCGGAGGAAAAGCUGAUGGACGACC\
) } def
/len { sequence length } bind def

/coor [
[99.59759521 322.39126587]
[98.27189636 307.44995117]
[96.94619751 292.50863647]
[88.11433411 280.51501465]
[94.60169220 266.08502197]
[93.27599335 251.14370728]
[91.95029449 236.20240784]
[90.62458801 221.26110840]
[76.27967072 213.27839661]
[69.45161438 198.16671753]
[73.01217651 181.80065918]
[85.75158691 170.67285156]
[84.20566559 155.75273132]
[82.65974426 140.83259583]
[81.11382294 125.91247559]
[74.19577026 112.60305786]
[62.87270737 102.76495361]
[51.54964447 92.92685699]
[40.22658157 83.08875275]
[28.90352058 73.25064850]
[17.58045769 63.41254807]
[6.25739574 53.57444382]
[-5.06566668 43.73634338]
[-16.38872910 33.89823914]
[-27.71179199 24.06013870]
[-42.74991989 27.40093231]
[-56.70854187 21.31732368]
[-64.31835175 8.33446026]
[-62.84180832 -6.46276283]
[-74.16487122 -16.30086517]
[-85.48793793 -26.13896751]
[-96.81099701 -35.97706985]
[-108.13405609 -45.81517029]
[-103.93298340 -31.41548538]
[-106.31119537 -16.60521507]
[-114.80937958 -4.24475861]
[-127.78622437 3.27863431]
[-142.73544312 4.51192522]
[-156.76979065 -0.78307885]
[-167.17872620 -11.58372211]
[-171.95193481 -25.80401039]
[-170.16749573 -40.69749069]
[-162.17008972 -53.38769913]
[-149.50427246 -61.42369843]
[-134.61630249 -63.25344086]
[-120.38326263 -58.52457809]
[-129.79725647 -70.20262146]
[-139.21124268 -81.88066864]
[-153.89599609 -87.76867676]
[-155.85986328 -102.53324890]
[-165.27384949 -114.21129608]
[-174.68785095 -125.88934326]
[-184.10183716 -137.56738281]
[-195.77987671 -146.98138428]
[-209.18988037 -153.70237732]
[-222.59988403 -160.42338562]
[-236.00988770 -167.14437866]
[-249.41989136 -173.86538696]
[-265.22406006 -173.13163757]
[-273.13543701 -185.75144958]
[-286.54544067 -192.47245789]
[-300.00463867 -199.09437561]
[-313.51229858 -205.61686707]
[-327.01995850 -212.13935852]
[-340.52764893 -218.66184998]
[-354.03530884 -225.18434143]
[-370.34109497 -223.43710327]
[-379.78726196 -236.84240723]
[-372.65637207 -251.61003113]
[-356.28408813 -252.54829407]
[-347.51281738 -238.69201660]
[-334.00515747 -232.16952515]
[-320.49746704 -225.64703369]
[-306.98980713 -219.12454224]
[-293.48214722 -212.60205078]
[-286.09304810 -212.52427673]
[-279.82443237 -205.88246155]
[-266.41442871 -199.16145325]
[-251.56941223 -200.37593079]
[-242.69888306 -187.27539062]
[-229.28887939 -180.55438232]
[-215.87889099 -173.83338928]
[-202.46888733 -167.11238098]
[-189.05888367 -160.39137268]
[-177.52095032 -169.97657776]
[-181.66969299 -184.39143372]
[-185.81842041 -198.80628967]
[-189.96716309 -213.22114563]
[-194.11589050 -227.63600159]
[-198.26463318 -242.05085754]
[-209.15266418 -248.96371460]
[-212.31195068 -261.05413818]
[-206.57672119 -271.70358276]
[-210.51240540 -286.17803955]
[-214.44808960 -300.65252686]
[-226.46156311 -311.81533813]
[-222.53778076 -327.73812866]
[-206.71318054 -332.04092407]
[-195.26675415 -320.29736328]
[-199.97361755 -304.58819580]
[-196.03793335 -290.11373901]
[-192.10224915 -275.63925171]
[-178.99945068 -263.96420288]
[-183.84977722 -246.19958496]
[-179.70103455 -231.78472900]
[-175.55230713 -217.36987305]
[-171.40356445 -202.95503235]
[-167.25483704 -188.54017639]
[-163.10609436 -174.12532043]
[-162.04132080 -166.93489075]
[-162.77249146 -160.26966858]
[-165.00743103 -154.53889465]
[-168.36843872 -150.04780579]
[-172.42379761 -146.98138428]
[-163.00979614 -135.30332947]
[-153.59580994 -123.62528992]
[-144.18180847 -111.94724274]
[-130.17041016 -106.89452362]
[-127.53320312 -91.29466248]
[-118.11920929 -79.61661530]
[-108.70521545 -67.93856812]
[-98.29595947 -57.13823318]
[-86.97289276 -47.30013275]
[-75.64983368 -37.46202850]
[-64.32676697 -27.62392807]
[-53.00370789 -17.78582573]
[-38.55771637 -21.31447601]
[-24.63930702 -15.59242916]
[-16.66586113 -2.62024593]
[-17.87368965 12.73707581]
[-6.55062675 22.57517815]
[4.77243567 32.41328049]
[16.09549904 42.25138092]
[27.41856003 52.08948517]
[38.74162292 61.92758560]
[50.06468582 71.76568604]
[61.38774872 81.60379028]
[72.71080780 91.44189453]
[84.03387451 101.27999878]
[79.14062500 89.00958252]
[84.50240326 72.99280548]
[101.70073700 61.33933258]
[126.45747375 62.05488586]
[141.40814209 60.83940887]
[156.35882568 59.62392807]
[171.30949402 58.40844727]
[186.26016235 57.19296646]
[201.21083069 55.97748947]
[206.85572815 52.54031754]
[212.53651428 52.47808075]
[216.61929321 54.95329666]
[231.59931946 54.17930603]
[246.57933044 53.40531158]
[261.55935669 52.63132095]
[276.53936768 51.85733032]
[288.30764771 40.95379639]
[304.14758301 43.49873734]
[311.90808105 57.53989029]
[305.63598633 72.30608368]
[290.14273071 76.46996307]
[277.31335449 66.83734894]
[262.33334351 67.61133575]
[247.35333252 68.38533020]
[232.37330627 69.15932465]
[217.39329529 69.93331909]
[202.42631531 70.92816162]
[187.47564697 72.14363861]
[172.52497864 73.35912323]
[157.57429504 74.57460022]
[142.62362671 75.79007721]
[127.67295837 77.00556183]
[125.43965149 84.16533661]
[139.75912476 88.63216400]
[135.29208374 102.95156860]
[120.97304535 98.48487854]
[118.73973846 105.64465332]
[130.34803772 115.14450836]
[141.95634460 124.64437103]
[153.56465149 134.14422607]
[165.17295837 143.64408875]
[181.21524048 143.48667908]
[191.22831726 156.02133179]
[187.53103638 171.63253784]
[172.95960999 178.34471130]
[158.69200134 171.00883484]
[155.67309570 155.25238037]
[144.06478882 145.75253296]
[132.45649719 136.25267029]
[120.84819031 126.75281525]
[109.23988342 117.25296021]
[96.03394318 124.36655426]
[97.57987213 139.28668213]
[99.12579346 154.20680237]
[100.67171478 169.12692261]
[113.07891846 175.12928772]
[120.83884430 186.38888550]
[122.01287842 199.90435791]
[116.40092468 212.13658142]
[105.56589508 219.93540955]
[106.89159393 234.87670898]
[108.21729279 249.81800842]
[109.54299927 264.75930786]
[118.46968079 277.82165527]
[111.88749695 291.18295288]
[113.21319580 306.12423706]
[114.53890228 321.06555176]
[127.46221161 329.87020874]
[131.65272522 344.93585205]
[125.13182831 359.14895630]
[110.97846985 365.79849243]
[95.87544250 361.74478149]
[86.95392609 348.90185547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[5 202]
[6 201]
[7 200]
[8 199]
[12 194]
[13 193]
[14 192]
[15 191]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[23 132]
[24 131]
[25 130]
[29 126]
[30 125]
[31 124]
[32 123]
[33 122]
[46 121]
[47 120]
[48 119]
[50 117]
[51 116]
[52 115]
[53 114]
[54 84]
[55 83]
[56 82]
[57 81]
[58 80]
[60 78]
[61 77]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[85 109]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[93 102]
[94 101]
[95 100]
[143 171]
[144 170]
[145 169]
[146 168]
[147 167]
[148 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[176 190]
[177 189]
[178 188]
[179 187]
[180 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
