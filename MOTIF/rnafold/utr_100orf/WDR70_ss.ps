%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCUUGAAGGCGGUACUUCCUCCAGCAUUUGCCGCAAGUUAUUGGCAAGUUCCCCUGCAGUUGUUUGGGCUGUCCCUGUGGCUGGUUCUGGGGUGUGCGGCCAGCCAUGGAGCGCUCUGGGCCCAGCGAAGUGACAGGCUCAGACGCGUCGGGACCGGACCCGCAGCUUGCGGUCACCAUGGGCUUCACGGGGUUCGGUAAAAAAG\
) } def
/len { sequence length } bind def

/coor [
[89.37096405 152.56149292]
[89.08612061 137.56420898]
[88.80127716 122.56690979]
[81.47872162 124.18867493]
[74.53860474 137.48660278]
[67.59849548 150.78453064]
[67.93826294 155.11686707]
[66.97750854 158.94636536]
[65.03425598 161.92573547]
[62.50666428 163.84675598]
[59.82073593 164.65435791]
[52.09409332 177.51123047]
[51.61731720 193.32525635]
[38.42955017 200.24855042]
[30.70290565 213.10540771]
[33.17196655 228.95732117]
[22.21220779 240.67326355]
[6.23101711 239.26576233]
[-2.51220465 225.81452942]
[2.68959522 210.63819885]
[17.84604073 205.37876892]
[25.57268524 192.52189636]
[25.49679756 177.62748718]
[39.23722839 169.78459167]
[46.96387482 156.92771912]
[54.30056763 143.84442139]
[61.24068069 130.54649353]
[68.18079376 117.24856567]
[58.27296066 105.98646545]
[44.19911575 111.17557526]
[30.12527275 116.36469269]
[16.05142593 121.55380249]
[1.97758138 126.74291229]
[-12.09626389 131.93202209]
[-26.17010880 137.12113953]
[-40.24395370 142.31024170]
[-44.32896042 157.27996826]
[-56.45381546 166.96331787]
[-71.95626831 167.63688660]
[-84.87530518 159.04164124]
[-90.24329376 144.48265076]
[-85.99613190 129.55813599]
[-73.76694489 120.00686646]
[-58.25809860 119.50151825]
[-45.43306732 128.23640442]
[-31.35922050 123.04728699]
[-17.28537560 117.85817719]
[-3.21153021 112.66906738]
[10.86231518 107.47995758]
[24.93616104 102.29084015]
[39.01000595 97.10173035]
[53.08385086 91.91262054]
[70.99369812 81.43574524]
[87.94071960 82.48075867]
[98.35735321 92.06959534]
[98.58281708 77.07128906]
[98.80828857 62.07298660]
[91.27928925 48.15807343]
[99.20701599 35.54853821]
[99.43247986 20.55023193]
[96.43205261 11.92096138]
[99.77574921 5.32863140]
[100.22662354 -9.66459084]
[97.35623932 -18.33798599]
[100.79864502 -24.87931252]
[101.47483826 -39.86406326]
[102.15102386 -54.84881592]
[102.82721710 -69.83356476]
[103.50341034 -84.81831360]
[104.17959595 -99.80307007]
[104.85578918 -114.78781891]
[105.53198242 -129.77256775]
[106.09552765 -144.76197815]
[106.54640961 -159.75520325]
[106.99728394 -174.74842834]
[107.44816589 -189.74165344]
[100.12917328 -203.76815796]
[108.24554443 -216.25711060]
[108.69641876 -231.25032043]
[98.39494324 -239.92898560]
[95.02247620 -252.76882935]
[99.59365082 -265.02487183]
[110.22943115 -272.30035400]
[110.90562439 -287.28512573]
[111.58181000 -302.26986694]
[112.25800323 -317.25460815]
[112.93419647 -332.23937988]
[105.82685852 -346.37429810]
[114.13003540 -358.73983765]
[114.80622101 -373.72460938]
[115.48241425 -388.70935059]
[116.15860748 -403.69409180]
[116.83479309 -418.67886353]
[117.51098633 -433.66360474]
[118.18717194 -448.64834595]
[118.86336517 -463.63311768]
[119.53955841 -478.61785889]
[120.21574402 -493.60260010]
[112.98371887 -499.65710449]
[109.40232086 -508.23364258]
[110.15837097 -517.35900879]
[114.95613861 -524.99609375]
[122.61186218 -529.49847412]
[123.96286774 -544.43750000]
[125.31387329 -559.37652588]
[117.93946075 -574.02404785]
[127.16236877 -587.58392334]
[143.49487305 -586.10687256]
[150.13548279 -571.11242676]
[140.25291443 -558.02551270]
[138.90190125 -543.08648682]
[137.55090332 -528.14746094]
[147.81921387 -510.24514771]
[135.20050049 -492.92642212]
[134.52430725 -477.94165039]
[133.84811401 -462.95690918]
[133.17192078 -447.97216797]
[132.49574280 -432.98739624]
[131.81954956 -418.00265503]
[131.14335632 -403.01791382]
[130.46716309 -388.03314209]
[129.79096985 -373.04840088]
[129.11479187 -358.06365967]
[136.27047729 -345.00051880]
[127.91894531 -331.56317139]
[127.24275208 -316.57843018]
[126.56656647 -301.59368896]
[125.89037323 -286.60891724]
[125.21417999 -271.62417603]
[137.07798767 -259.70504761]
[136.64279175 -242.55569458]
[123.68964386 -230.79945374]
[123.23876190 -215.80622864]
[130.58999634 -202.85212708]
[122.44138336 -189.29077148]
[121.99050903 -174.29754639]
[121.53962708 -159.30432129]
[121.08875275 -144.31109619]
[124.03027344 -137.52975464]
[120.51673126 -129.09637451]
[119.84053802 -114.11162567]
[119.16435242 -99.12687683]
[118.48815918 -84.14212799]
[117.81196594 -69.15737915]
[117.13578033 -54.17262650]
[116.45958710 -39.18787384]
[115.78340149 -24.20312309]
[115.21984863 -9.21371269]
[114.76896667 5.77950954]
[114.43078613 20.77569771]
[114.20532227 35.77400208]
[121.75045013 48.61613464]
[113.80658722 62.29845047]
[113.58112335 77.29675293]
[113.35565948 92.29505920]
[119.89292145 105.79558563]
[131.79893494 114.91955566]
[143.70495605 124.04351807]
[155.61097717 133.16748047]
[167.51698303 142.29145813]
[179.42300415 151.41542053]
[191.32902527 160.53938293]
[203.23504639 169.66334534]
[215.14105225 178.78732300]
[234.88990784 175.09889221]
[250.74127197 186.93879700]
[252.74565125 206.31521606]
[265.05087280 214.89320374]
[277.35607910 223.47117615]
[289.66131592 232.04914856]
[301.96652222 240.62712097]
[314.27172852 249.20509338]
[330.01736450 250.74966431]
[336.03347778 264.37521362]
[348.33868408 272.95318604]
[364.78997803 277.05093384]
[365.40652466 293.99368286]
[349.29660034 299.27636719]
[339.76071167 285.25842285]
[327.45547485 276.68041992]
[312.58999634 275.74942017]
[305.69375610 261.51031494]
[293.38854980 252.93234253]
[281.08334351 244.35437012]
[268.77810669 235.77638245]
[256.47290039 227.19841003]
[244.16767883 218.62043762]
[234.91920471 223.08042908]
[224.57305908 223.29994202]
[214.99539185 219.17231750]
[207.94157410 211.38105774]
[204.73454285 201.28752136]
[206.01708984 190.69332886]
[194.11106873 181.56936646]
[182.20506287 172.44540405]
[170.29904175 163.32144165]
[158.39302063 154.19746399]
[146.48699951 145.07350159]
[134.58099365 135.94953918]
[122.67497253 126.82556915]
[110.76895905 117.70160675]
[103.44639587 119.32337189]
[109.52064514 133.03845215]
[115.59490204 146.75354004]
[124.42053986 158.88235474]
[121.97583771 173.68179321]
[109.71839905 182.32791138]
[94.95655823 179.66557312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 28]
[5 27]
[6 26]
[11 25]
[12 24]
[14 22]
[15 21]
[29 52]
[30 51]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[55 155]
[56 154]
[57 153]
[59 151]
[60 150]
[62 149]
[63 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 138]
[74 137]
[75 136]
[76 135]
[78 133]
[79 132]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[103 112]
[104 111]
[105 110]
[156 201]
[157 200]
[158 199]
[159 198]
[160 197]
[161 196]
[162 195]
[163 194]
[164 193]
[167 187]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
