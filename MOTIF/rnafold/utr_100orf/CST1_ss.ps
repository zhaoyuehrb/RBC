%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUCCCUGCCUCGGGCUCUCACCCUCCUCUCCUGCAGCUCCAGCUUUGUGCUCUGCCUCUGAGGAGACCAUGGCCCAGUAUCUGAGUACCCUGCUGCUCCUGCUGGCCACCCUAGCUGUGGCCCUGGCCUGGAGCCCCAAGGAGGAGGAUAGGAUAAUCCCGGGUGGCA\
) } def
/len { sequence length } bind def

/coor [
[115.07753754 316.92398071]
[112.89351654 302.08383179]
[110.70950317 287.24368286]
[94.71820068 279.81918335]
[86.28610229 264.15719604]
[88.93872070 246.41000366]
[101.80472565 233.67750549]
[99.08017731 218.92701721]
[96.35562134 204.17654419]
[93.63106537 189.42605591]
[90.77191925 174.70106506]
[87.77841949 160.00280762]
[84.78491974 145.30453491]
[81.79141235 130.60627747]
[70.80451965 120.39412689]
[55.92695236 118.48151398]
[41.04938889 116.56890106]
[26.17182350 114.65628815]
[11.29425907 112.74367523]
[4.03408051 124.89220428]
[-7.27790880 133.32490540]
[-20.90982437 136.79199219]
[-34.79027557 134.80076599]
[-46.82310104 127.68538666]
[-55.20394135 116.55126953]
[-58.69076538 103.10349274]
[-73.53091431 100.91947937]
[-88.37106323 98.73545837]
[-103.21121216 96.55144501]
[-118.05136871 94.36742401]
[-132.89151001 92.18341064]
[-142.46662903 104.11087799]
[-156.63276672 109.60789490]
[-171.54922485 107.29151917]
[-183.22535706 97.88279724]
[-188.58819580 83.98655701]
[-203.42834473 81.80253601]
[-218.26849365 79.61852264]
[-233.10864258 77.43450165]
[-237.15972900 79.21757507]
[-241.16149902 79.56079102]
[-244.66101074 78.66067505]
[-247.31781006 76.84238434]
[-248.93656921 74.51094055]
[-263.57769775 71.24948883]
[-278.21884155 67.98802948]
[-292.47500610 75.34611511]
[-307.05685425 68.65666199]
[-310.77847290 53.05123520]
[-300.78491211 40.50099564]
[-284.74240112 40.63340759]
[-274.95739746 53.34689331]
[-260.31625366 56.60834885]
[-245.67510986 59.86980057]
[-230.92462158 62.59435272]
[-216.08447266 64.77836609]
[-201.24432373 66.96238708]
[-186.40417480 69.14640808]
[-177.26522827 57.38438034]
[-163.37351990 51.73846817]
[-148.42216492 53.81772614]
[-136.44033813 63.16292572]
[-130.70750427 77.34325409]
[-115.86734772 79.52727509]
[-101.02719879 81.71128845]
[-86.18704987 83.89530945]
[-71.34689331 86.07933044]
[-56.50674820 88.26334381]
[-47.81960678 74.87146759]
[-34.11674500 66.57093811]
[-18.10867310 65.06283569]
[-2.98778868 70.69876862]
[8.20827961 82.40055084]
[13.20687103 97.86611176]
[28.08443451 99.77872467]
[42.96199799 101.69133759]
[57.83956528 103.60395050]
[72.71712494 105.51655579]
[76.27254486 83.34265900]
[95.58097076 70.17929840]
[95.30701447 55.18179703]
[95.03305054 40.18429947]
[94.75909424 25.18680191]
[85.84252930 11.42355633]
[93.54350281 -3.05494428]
[109.93991852 -3.35445929]
[118.16454315 10.83312702]
[109.75659180 24.91284180]
[110.03054810 39.91033936]
[110.30451202 54.90783691]
[110.57846832 69.90533447]
[123.16350555 78.06726074]
[136.96868896 72.20069122]
[150.77388000 66.33412170]
[154.33639526 49.81718063]
[166.90797424 38.77746201]
[183.41598511 37.40652466]
[197.35426331 46.04641724]
[211.05000305 39.92868805]
[224.74574280 33.81095505]
[238.44148254 27.69322395]
[252.13723755 21.57549286]
[262.57104492 6.42328501]
[279.93243408 8.87235641]
[293.51416016 2.50550580]
[307.09588623 -3.86134458]
[320.55905151 -10.47519016]
[333.89916992 -17.33382607]
[347.23931885 -24.19246101]
[360.57943726 -31.05109596]
[373.91958618 -37.90972900]
[387.25970459 -44.76836395]
[390.54504395 -60.05694199]
[402.92071533 -69.61604309]
[418.54336548 -68.93214417]
[430.03637695 -58.32817078]
[431.97317505 -42.81098938]
[423.43920898 -29.70734024]
[408.46398926 -25.20436668]
[394.11834717 -31.42823219]
[380.77819824 -24.56959724]
[367.43807983 -17.71096230]
[354.09793091 -10.85232830]
[340.75781250 -3.99369311]
[327.41769409 2.86494160]
[325.12347412 7.09193659]
[320.13134766 9.90370274]
[313.46270752 9.72037888]
[299.88101196 16.08722878]
[286.29928589 22.45408058]
[281.87713623 33.73817444]
[270.58325195 39.14397812]
[258.25497437 35.27123642]
[244.55921936 41.38896561]
[230.86347961 47.50669861]
[217.16773987 53.62442780]
[203.47198486 59.74216080]
[201.92956543 73.02400208]
[193.95420837 83.89091492]
[181.54818726 89.43350220]
[167.91683960 88.10232544]
[156.64045715 80.13931274]
[142.83526611 86.00588226]
[129.03007507 91.87245178]
[127.23918152 110.99864960]
[114.46825409 124.67674255]
[96.48967743 127.61277008]
[99.48318481 142.31103516]
[102.47668457 157.00929260]
[105.47018433 171.70756531]
[110.26569366 179.52627563]
[108.38155365 186.70149231]
[111.10610962 201.45198059]
[113.83065796 216.20246887]
[116.55521393 230.95295715]
[128.48548889 234.82473755]
[137.57466125 243.36288452]
[142.13084412 254.89353943]
[141.34211731 267.19412231]
[135.42047119 277.92181396]
[125.54965210 285.05966187]
[127.73366547 299.89981079]
[129.91767883 314.73995972]
[144.01420593 321.00827026]
[152.46495056 333.91519165]
[152.57330322 349.34216309]
[144.30470276 362.36651611]
[130.29762268 368.83221436]
[115.02168274 366.67608643]
[103.35135651 356.58615112]
[99.01062775 341.78204346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[7 155]
[8 154]
[9 153]
[10 152]
[11 150]
[12 149]
[13 148]
[14 147]
[15 78]
[16 77]
[17 76]
[18 75]
[19 74]
[26 68]
[27 67]
[28 66]
[29 65]
[30 64]
[31 63]
[36 58]
[37 57]
[38 56]
[39 55]
[44 54]
[45 53]
[46 52]
[80 91]
[81 90]
[82 89]
[83 88]
[92 144]
[93 143]
[94 142]
[98 137]
[99 136]
[100 135]
[101 134]
[102 133]
[104 130]
[105 129]
[106 128]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
