%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACUGAGGGCGCCGUGCGCCGAAGCUUGUGGCGUCAAUGCGCCCGCCGUGUCCAUGGAGAGAAGCUGAGGCGGCCGACCUUCGGCCCGAGGCACCGGGGCGCCGGGACGGCGAAGAUGUCGGCUUCCUUAGUCCGGGCAACUGUCCGGGCUGUGAGCAAGAGGAAGCUGCAGCCCACCCGGGCAGCCCUCACCCUGACACCUUCAGCAGUAAACA\
) } def
/len { sequence length } bind def

/coor [
[-55.18373871 274.38812256]
[-67.84552765 266.41137695]
[-78.82729340 276.62905884]
[-89.80905914 286.84674072]
[-100.79082489 297.06439209]
[-111.69867706 307.36093140]
[-122.53205872 317.73580933]
[-127.27245331 335.53182983]
[-144.47093201 339.03286743]
[-155.15368652 349.56277466]
[-165.83642578 360.09268188]
[-176.51918030 370.62258911]
[-187.20193481 381.15246582]
[-197.88468933 391.68237305]
[-198.16560364 407.25668335]
[-209.14944458 417.78332520]
[-223.99542236 417.41952515]
[-234.67817688 427.94943237]
[-245.28477478 438.55603027]
[-255.81468201 449.23876953]
[-266.34457397 459.92153931]
[-276.87448120 470.60427856]
[-287.40438843 481.28701782]
[-285.74923706 496.83676147]
[-294.51934814 509.78353882]
[-309.57376099 514.01428223]
[-323.80419922 507.53137207]
[-330.49151611 493.39581299]
[-326.47814941 478.28201294]
[-313.65911865 469.32623291]
[-298.08712769 470.75714111]
[-287.55722046 460.07437134]
[-277.02734375 449.39163208]
[-266.49743652 438.70886230]
[-255.96752930 428.02612305]
[-253.51197815 421.05947876]
[-245.20806885 417.26666260]
[-234.52532959 406.73675537]
[-234.67514038 391.88708496]
[-223.99131775 381.05609131]
[-208.41458130 380.99963379]
[-197.73184204 370.46972656]
[-187.04908752 359.93981934]
[-176.36633301 349.40991211]
[-165.68357849 338.88000488]
[-155.00082397 328.35012817]
[-154.60116577 316.26345825]
[-145.79194641 307.40356445]
[-132.90692139 306.90240479]
[-122.07353973 296.52755737]
[-119.41824341 289.63458252]
[-111.00849152 286.08264160]
[-100.02672577 275.86495972]
[-89.04496765 265.64727783]
[-78.06320190 255.42961121]
[-85.10769653 242.22640991]
[-88.49703217 227.63842773]
[-87.99431610 212.65872192]
[-83.62780762 198.30860901]
[-75.68941498 185.56802368]
[-64.71517944 175.30862427]
[-51.44906235 168.23417664]
[-36.79255676 164.83218384]
[-21.74338531 165.34042358]
[-7.32759905 169.73025513]
[5.47037458 177.70816040]
[16.45213890 167.49049377]
[27.43390465 157.27281189]
[38.41566849 147.05514526]
[49.39743423 136.83747864]
[60.37919998 126.61979675]
[71.36096191 116.40213013]
[66.99745941 99.76219940]
[71.60030365 83.18687439]
[60.76691818 72.81201172]
[49.93353271 62.43714523]
[39.10015106 52.06228256]
[28.26676750 41.68741608]
[17.43338585 31.31255341]
[1.81196213 24.72411728]
[3.81847906 7.88932467]
[20.55082130 5.15709162]
[27.80824852 20.47916985]
[38.64163208 30.85403442]
[49.47501373 41.22889709]
[60.30839920 51.60376358]
[71.14178467 61.97862625]
[81.97516632 72.35349274]
[95.87429810 67.25549316]
[110.60361481 68.74639893]
[123.19924927 76.52620697]
[135.89189148 68.53266144]
[148.58453369 60.53910828]
[148.47122192 46.75881577]
[155.12779236 34.81610107]
[166.72277832 27.77718353]
[180.17324829 27.38855362]
[191.96409607 33.64481735]
[204.77061462 25.83500481]
[217.57711792 18.02519226]
[230.38363647 10.21537781]
[243.19015503 2.40556455]
[255.94006348 -5.49632263]
[268.63269043 -13.48987389]
[281.32534790 -21.48342323]
[293.96005249 -29.56822395]
[306.53619385 -37.74385071]
[319.11233521 -45.91947937]
[322.50845337 -61.12158585]
[335.37890625 -69.23368073]
[349.85086060 -65.90231323]
[362.42700195 -74.07794189]
[375.00311279 -82.25357056]
[361.08352661 -87.84329224]
[356.63342285 -102.16797638]
[364.93539429 -114.66106415]
[379.86553955 -116.10707092]
[390.41067505 -105.43936157]
[388.79217529 -90.52685547]
[401.92425537 -97.77587891]
[407.92098999 -104.65915680]
[415.29821777 -105.03319550]
[428.53341675 -112.09222412]
[441.76858521 -119.15126038]
[455.00378418 -126.21029663]
[468.23895264 -133.26933289]
[481.47415161 -140.32835388]
[494.70932007 -147.38739014]
[507.94451904 -154.44642639]
[521.17968750 -161.50546265]
[534.41485596 -168.56449890]
[547.22137451 -176.37431335]
[559.55670166 -184.90895081]
[571.89196777 -193.44360352]
[584.22729492 -201.97825623]
[596.56262207 -210.51290894]
[608.89788818 -219.04756165]
[621.23321533 -227.58221436]
[633.56854248 -236.11686707]
[645.90380859 -244.65150452]
[652.42468262 -259.69845581]
[668.74487305 -261.30566406]
[678.07562256 -247.81976318]
[670.81823730 -233.11389160]
[654.43847656 -232.31620789]
[642.10314941 -223.78155518]
[629.76788330 -215.24690247]
[617.43255615 -206.71224976]
[605.09722900 -198.17759705]
[592.76196289 -189.64295959]
[580.42663574 -181.10830688]
[568.09136963 -172.57365417]
[555.75604248 -164.03900146]
[570.66461182 -162.38534546]
[581.82867432 -152.36715698]
[585.08087158 -137.72396851]
[579.20733643 -123.92174530]
[566.40045166 -116.11252594]
[551.44073486 -117.21130371]
[539.91235352 -126.80793762]
[536.11846924 -141.32023621]
[541.47387695 -155.32931519]
[528.23870850 -148.27027893]
[515.00354004 -141.21124268]
[501.76837158 -134.15220642]
[488.53317261 -127.09317780]
[475.29800415 -120.03414154]
[462.06280518 -112.97511292]
[448.82763672 -105.91607666]
[435.59243774 -98.85704803]
[422.35726929 -91.79801178]
[409.17327881 -84.64379883]
[396.04119873 -77.39476776]
[383.17874146 -69.67743683]
[370.60263062 -61.50180817]
[358.02648926 -53.32618332]
[355.19757080 -38.74767685]
[342.56005859 -30.27727509]
[327.28796387 -33.34334564]
[314.71182251 -25.16771889]
[302.13568115 -16.99209023]
[298.24304199 -10.71427536]
[289.31890869 -8.79078293]
[276.62625122 -0.79723191]
[263.93362427 7.19631863]
[259.95089722 13.41738701]
[250.99996948 15.21207905]
[238.19345093 23.02189255]
[225.38693237 30.83170509]
[212.58042908 38.64152145]
[199.77391052 46.45133209]
[198.97409058 62.84999847]
[188.45051575 75.66781616]
[172.19885254 79.72574615]
[156.57807922 73.23175049]
[143.88543701 81.22530365]
[131.19281006 89.21884918]
[132.88928223 102.74211884]
[128.97680664 115.79773712]
[120.12262726 126.15921021]
[107.83671570 132.05947876]
[94.21433258 132.49230957]
[81.57863617 127.38388824]
[70.59687042 137.60156250]
[59.61510849 147.81924438]
[48.63334274 158.03691101]
[37.65157700 168.25457764]
[26.66981316 178.47225952]
[15.68804741 188.68992615]
[22.72389984 202.02903748]
[26.06450272 216.72346497]
[25.48799515 231.77017212]
[21.03968048 246.14372253]
[13.02851963 258.86611938]
[2.00568914 269.07327271]
[-11.27334023 276.07385254]
[-25.90058136 279.39590454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 55]
[3 54]
[4 53]
[5 52]
[6 50]
[7 49]
[9 46]
[10 45]
[11 44]
[12 43]
[13 42]
[14 41]
[17 38]
[18 37]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[66 209]
[67 208]
[68 207]
[69 206]
[70 205]
[71 204]
[72 203]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[91 197]
[92 196]
[93 195]
[98 191]
[99 190]
[100 189]
[101 188]
[102 187]
[103 185]
[104 184]
[105 183]
[106 181]
[107 180]
[108 179]
[111 176]
[112 175]
[113 174]
[119 173]
[120 172]
[122 171]
[123 170]
[124 169]
[125 168]
[126 167]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[132 153]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
