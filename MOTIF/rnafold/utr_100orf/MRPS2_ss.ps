%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGCGCGGAUGGCGACGGAAGGGGAGGCCGCUCGGCCUGGCCUGGAGGGAGACCUCGCUCUGCCCCGCGUCCCAGCCAUGGCGACAUCCUCGGCCGCGCUGCCCCGAAUACUCGGCGCGGGUGCCCGGGCCCCGUCGCGCUGGUUGGGCUUUCUCGGGAAGGCGACCCCCCGGCCUG\
) } def
/len { sequence length } bind def

/coor [
[116.53328705 122.51863861]
[111.79463959 130.96412659]
[104.55920410 144.10371399]
[97.32377625 157.24328613]
[90.08834839 170.38287354]
[96.51846313 184.38143921]
[93.50801849 199.30760193]
[82.41693878 209.47874451]
[67.64028931 211.14866638]
[60.40486145 224.28825378]
[67.12360382 238.27532959]
[64.30466461 253.53419495]
[53.03200150 264.19754028]
[37.64016724 266.16503906]
[24.04764366 258.68020630]
[17.48103333 244.62106323]
[20.46532822 229.39366150]
[31.85301018 218.85325623]
[47.26528168 217.05282593]
[54.50070953 203.91323853]
[48.01152802 190.53308105]
[50.67696762 175.72230530]
[61.68109894 165.19792175]
[76.94876862 163.14744568]
[84.18419647 150.00785828]
[91.41962433 136.86828613]
[98.65505219 123.72870636]
[88.76078796 112.45468140]
[74.79315948 117.92325592]
[60.82553101 123.39183044]
[46.85789871 128.86039734]
[32.89026642 134.32897949]
[23.08330345 147.47262573]
[6.83100557 145.28291321]
[0.85234368 130.01243591]
[11.29765320 117.37014008]
[27.42169571 120.36134338]
[41.38932419 114.89276886]
[55.35695648 109.42420197]
[69.32458496 103.95562744]
[83.29222107 98.48705292]
[95.38140106 89.60720825]
[104.77729797 77.91459656]
[114.17320251 66.22199249]
[123.56909943 54.52938461]
[126.18215942 38.92545700]
[140.18571472 33.85105515]
[149.58161926 22.15844727]
[152.52926636 13.48353004]
[159.24346924 10.34629917]
[168.84089661 -1.18147099]
[178.43832397 -12.70924091]
[163.50476074 -14.11958122]
[155.14797974 -26.57607460]
[159.50636292 -40.92893219]
[173.37849426 -46.63541794]
[186.57475281 -39.50388718]
[189.40200806 -24.77289391]
[199.96247864 -35.42541885]
[210.52296448 -46.07794571]
[221.08343506 -56.73047256]
[224.91690063 -65.05197144]
[231.92085266 -67.47424316]
[242.66462708 -77.94187927]
[243.61750793 -90.82247162]
[252.80418396 -99.32071686]
[264.91754150 -99.27155304]
[275.84136963 -109.55114746]
[286.76519775 -119.83073425]
[297.68902588 -130.11032104]
[294.44982910 -148.94506836]
[303.11956787 -165.80860901]
[320.05276489 -174.00364685]
[338.36343384 -170.39750671]
[348.73742676 -181.23170471]
[359.11141968 -192.06591797]
[369.48544312 -202.90013123]
[379.85943604 -213.73432922]
[390.23342896 -224.56854248]
[400.60745239 -235.40275574]
[410.98144531 -246.23696899]
[410.81219482 -261.81286621]
[421.48724365 -272.65252686]
[436.33752441 -272.71789551]
[446.71154785 -283.55209351]
[457.08554077 -294.38632202]
[467.45953369 -305.22052002]
[477.83355713 -316.05471802]
[474.59661865 -332.64337158]
[481.80447388 -347.74710083]
[496.44323730 -355.50942993]
[512.66143799 -353.05139160]
[522.84588623 -364.06402588]
[533.03027344 -375.07666016]
[543.21466064 -386.08929443]
[553.39904785 -397.10189819]
[557.08831787 -412.48696899]
[571.41015625 -416.57769775]
[581.59454346 -427.59033203]
[591.77893066 -438.60296631]
[595.32128906 -447.05249023]
[602.23693848 -449.71640015]
[612.61096191 -460.55059814]
[622.98492432 -471.38479614]
[633.35894775 -482.21902466]
[637.31463623 -497.53771973]
[651.70532227 -501.37927246]
[662.07934570 -512.21350098]
[672.45330811 -523.04766846]
[682.82733154 -533.88189697]
[686.19940186 -549.93060303]
[701.86614990 -554.77685547]
[713.71093750 -543.43518066]
[709.54888916 -527.57299805]
[693.66156006 -523.50787354]
[683.28753662 -512.67370605]
[672.91351318 -501.83947754]
[662.53955078 -491.00527954]
[659.32586670 -476.46148682]
[644.19317627 -471.84500122]
[633.81915283 -461.01080322]
[623.44512939 -450.17660522]
[613.07116699 -439.34237671]
[602.79156494 -428.41854858]
[592.60717773 -417.40591431]
[582.42279053 -406.39331055]
[579.46197510 -391.79592896]
[564.41168213 -386.91751099]
[554.22729492 -375.90487671]
[544.04290771 -364.89224243]
[533.85845947 -353.87960815]
[523.67407227 -342.86700439]
[527.48095703 -330.05499268]
[524.42895508 -316.93124390]
[515.21234131 -306.95462036]
[502.16452026 -302.80874634]
[488.66775513 -305.68072510]
[478.29376221 -294.84652710]
[467.91973877 -284.01229858]
[457.54574585 -273.17810059]
[447.17175293 -262.34390259]
[447.75061035 -247.50473022]
[437.38424683 -236.36952209]
[421.81564331 -235.86296082]
[411.44165039 -225.02874756]
[401.06765747 -214.19454956]
[390.69363403 -203.36033630]
[380.31964111 -192.52612305]
[369.94564819 -181.69190979]
[359.57162476 -170.85771179]
[349.19763184 -160.02349854]
[353.23208618 -149.57431030]
[353.06228638 -138.32319641]
[348.67449951 -127.90575409]
[340.67086792 -119.85077667]
[330.18719482 -115.35592651]
[318.73184204 -115.10975647]
[307.96859741 -119.18649292]
[297.04476929 -108.90690613]
[286.12094116 -98.62731171]
[275.19711304 -88.34772491]
[271.07037354 -71.30266571]
[253.13226318 -67.19810486]
[242.38848877 -56.73047256]
[231.73596191 -46.16999435]
[221.17549133 -35.51746750]
[210.61500549 -24.86494255]
[200.05453491 -14.21241665]
[189.96607971 -3.11181927]
[180.36866760 8.41595078]
[170.77124023 19.94372177]
[161.27423096 31.55434799]
[151.87832642 43.24695587]
[149.93733215 58.01454544]
[135.26170349 63.92528534]
[125.86580658 75.61788940]
[116.46990967 87.31050110]
[107.07400513 99.00310516]
[112.23887634 101.59222412]
[116.16411591 106.81008148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[4 25]
[5 24]
[9 20]
[10 19]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[42 178]
[43 177]
[44 176]
[45 175]
[47 173]
[48 172]
[50 171]
[51 170]
[52 169]
[58 168]
[59 167]
[60 166]
[61 165]
[63 164]
[64 163]
[67 161]
[68 160]
[69 159]
[70 158]
[74 151]
[75 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
[92 132]
[93 131]
[94 130]
[95 129]
[96 128]
[98 126]
[99 125]
[100 124]
[102 123]
[103 122]
[104 121]
[105 120]
[107 118]
[108 117]
[109 116]
[110 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
