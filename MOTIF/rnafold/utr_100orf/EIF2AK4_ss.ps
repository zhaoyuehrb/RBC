%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGCCCCGCAGGCUGCCGGGGGCCCACCGCCGCCCAGGCAAGGCCGCCCUGCCUUGGGCGCAGCGCUGCCAUGGCUGGGGGCCGUGGGGCCCCCGGGCGCGGCCGGGACGAGCCUCCGGAGAGCUACCCGCAACGACAGGACCACGAGCUACAGGCCCUGGAGGCCAUUU\
) } def
/len { sequence length } bind def

/coor [
[209.67565918 217.47605896]
[213.46334839 202.96214294]
[224.22850037 192.51651001]
[238.84745789 189.16757202]
[225.94882202 181.51086426]
[212.98120117 173.97158813]
[199.94566345 166.55035400]
[186.91012573 159.12911987]
[172.02165222 159.55632019]
[163.85681152 146.00469971]
[150.82127380 138.58348083]
[139.05377197 141.48075867]
[128.12333679 135.37489319]
[124.17401886 123.07170868]
[111.27538300 115.41499329]
[97.20964050 118.89365387]
[84.74996948 111.49751282]
[81.06790924 97.48364258]
[68.16927338 89.82692719]
[55.27063751 82.17021179]
[42.37200546 74.51350403]
[29.47336960 66.85678864]
[16.57473564 59.20007706]
[3.67610264 51.54336548]
[-9.22253132 43.88665390]
[-22.12116432 36.22994232]
[-35.01979828 28.57322884]
[-47.98742294 21.03394699]
[-61.02296448 13.61271667]
[-76.84382629 13.50909328]
[-84.07627106 0.48829868]
[-97.11180878 -6.93293142]
[-110.14735413 -14.35416126]
[-119.18881989 -15.89017868]
[-123.35045624 -22.03035164]
[-136.24908447 -29.68706322]
[-149.14772034 -37.34377670]
[-162.04635620 -45.00048828]
[-174.94499207 -52.65719986]
[-190.76136780 -53.04809189]
[-197.75617981 -66.19806671]
[-210.65481567 -73.85478210]
[-226.47119141 -74.24567413]
[-233.46600342 -87.39564514]
[-246.36463928 -95.05236053]
[-259.26327515 -102.70907593]
[-275.07965088 -103.09996033]
[-282.07446289 -116.24993896]
[-294.97308350 -123.90665436]
[-310.78945923 -124.29753876]
[-317.78427124 -137.44752502]
[-330.68289185 -145.10423279]
[-343.58154297 -152.76094055]
[-356.48016357 -160.41766357]
[-371.17755127 -155.07716370]
[-385.85144043 -160.48194885]
[-393.57321167 -174.08003235]
[-390.69696045 -189.45080566]
[-378.58071899 -199.33668518]
[-362.94540405 -199.06983948]
[-351.17355347 -188.77627563]
[-348.82345581 -173.31628418]
[-335.92483521 -165.65957642]
[-323.02618408 -158.00286865]
[-310.12756348 -150.34616089]
[-295.23376465 -150.50292969]
[-287.31637573 -136.80528259]
[-274.41772461 -129.14857483]
[-259.52395630 -129.30534363]
[-251.60655212 -115.60770416]
[-238.70791626 -107.95099640]
[-225.80928040 -100.29428101]
[-210.91551208 -100.45104980]
[-202.99809265 -86.75341797]
[-190.09947205 -79.09670258]
[-175.20568848 -79.25347137]
[-167.28828430 -65.55583191]
[-154.38964844 -57.89912415]
[-141.49101257 -50.24240875]
[-128.59237671 -42.58569717]
[-115.69374084 -34.92898560]
[-102.72612000 -27.38970375]
[-89.69058228 -19.96847343]
[-76.65503693 -12.54724312]
[-61.76655960 -12.97443485]
[-53.60173416 0.57717508]
[-40.56619263 7.99840546]
[-33.17119598 8.57717419]
[-27.36308670 15.67459488]
[-14.46445274 23.33130646]
[-1.56581891 30.98801994]
[11.33281517 38.64473343]
[24.23144913 46.30144501]
[37.13008118 53.95815659]
[50.02871704 61.61486816]
[62.92734909 69.27158356]
[75.82598114 76.92829132]
[88.72461700 84.58500671]
[102.79035950 81.10634613]
[115.25003052 88.50248718]
[118.93209076 102.51635742]
[131.83073425 110.17307281]
[150.22706604 109.95351410]
[158.24250793 125.54793549]
[171.27804565 132.96916199]
[187.09890747 133.07278442]
[194.33135986 146.09358215]
[207.36689758 153.51481628]
[220.40243530 160.93603516]
[229.44390869 162.47206116]
[233.60554504 168.61222839]
[246.50418091 176.26895142]
[258.38018799 176.85600281]
[264.68670654 185.34701538]
[278.55789185 191.05578613]
[292.42907715 196.76457214]
[306.30026245 202.47335815]
[320.17144775 208.18212891]
[334.04263306 213.89091492]
[347.91381836 219.59968567]
[361.78500366 225.30847168]
[371.60794067 220.53358459]
[382.21649170 221.94430542]
[390.11825562 228.83145142]
[392.84722900 238.72383118]
[406.50198364 244.93252563]
[420.15670776 251.14122009]
[432.66067505 242.33224487]
[447.79513550 240.97369385]
[461.48654175 247.33070374]
[470.10009766 259.60516357]
[471.40444946 274.44311523]
[485.05920410 280.65179443]
[497.41223145 276.86120605]
[508.66949463 282.34112549]
[513.01721191 293.65332031]
[526.55700684 300.10894775]
[539.61676025 291.89642334]
[555.04315186 292.07113647]
[567.91363525 300.57730103]
[574.12121582 314.70065308]
[571.68518066 329.93447876]
[561.38281250 341.41769409]
[546.50158691 345.48608398]
[531.78997803 340.84143066]
[521.94250488 328.96578979]
[520.10137939 313.64868164]
[506.56161499 307.19308472]
[489.18402100 309.52798462]
[478.85052490 294.30654907]
[465.19577026 288.09783936]
[453.15670776 296.86865234]
[438.24475098 298.44628906]
[424.45413208 292.30743408]
[415.52923584 280.00933838]
[413.94802856 264.79595947]
[400.29327393 258.58728027]
[386.63851929 252.37858582]
[367.60824585 255.68516541]
[356.07623291 239.17965698]
[342.20504761 233.47087097]
[328.33386230 227.76210022]
[314.46264648 222.05331421]
[300.59146118 216.34454346]
[286.72027588 210.63575745]
[272.84909058 204.92698669]
[258.97790527 199.21820068]
[265.08642578 212.91806030]
[263.20495605 227.79959106]
[253.87904358 239.54811096]
[239.81260681 244.75726318]
[225.08401489 241.91673279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 112]
[5 111]
[6 109]
[7 108]
[8 107]
[10 105]
[11 104]
[14 102]
[15 101]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[23 93]
[24 92]
[25 91]
[26 90]
[27 89]
[28 87]
[29 86]
[31 84]
[32 83]
[33 82]
[35 81]
[36 80]
[37 79]
[38 78]
[39 77]
[41 75]
[42 74]
[44 72]
[45 71]
[46 70]
[48 68]
[49 67]
[51 65]
[52 64]
[53 63]
[54 62]
[114 167]
[115 166]
[116 165]
[117 164]
[118 163]
[119 162]
[120 161]
[121 160]
[125 158]
[126 157]
[127 156]
[132 151]
[133 150]
[136 148]
[137 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
