%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGGCGCAUCUGCGCAGGCGCCCGGCUCCUAAGUCUACCCAGGAACUGACCCUGCUCUCUCCUUUCCCUGUUAGACAUGGGCACUCCACAGAAGGAUGUUAUUAUCAAGUCAGAUGCACCGGACACUUUGUUAUUGGAGAAACAUGCAGAUUAUAUCGCAUCCUAUGGCUCAAAGA\
) } def
/len { sequence length } bind def

/coor [
[226.47477722 240.24739075]
[215.26321411 231.83203125]
[208.08811951 219.73854065]
[206.06333923 205.77944946]
[209.52790833 192.06167603]
[197.66108704 182.88681030]
[182.85968018 181.22322083]
[176.67463684 166.66107178]
[164.80780029 157.48620605]
[152.94096375 148.31134033]
[141.07414246 139.13645935]
[129.20730591 129.96159363]
[117.34046936 120.78671265]
[105.47364044 111.61183929]
[97.16596985 123.85994720]
[77.93898773 127.45220947]
[63.56356430 131.73556519]
[49.18814087 136.01893616]
[34.81271744 140.30229187]
[20.43729401 144.58566284]
[16.91141319 155.97557068]
[8.40260601 164.15563965]
[-2.88534164 167.16828918]
[-14.10560322 164.37387085]
[-22.48619270 156.58241272]
[-37.00308228 160.35864258]
[-51.51997375 164.13487244]
[-62.92782593 175.09715271]
[-77.19303894 170.81311035]
[-91.70993042 174.58934021]
[-106.22682190 178.36557007]
[-120.74371338 182.14179993]
[-124.74986267 196.96900940]
[-135.64421082 207.79530334]
[-150.49624634 211.70846558]
[-165.31083679 207.65585327]
[-176.10292053 196.72761536]
[-179.96949768 181.86338806]
[-175.87048340 167.06158447]
[-164.90846252 156.30380249]
[-150.03219604 152.48382568]
[-135.24330139 156.62922668]
[-124.51993561 167.62490845]
[-110.00304413 163.84867859]
[-95.48616028 160.07244873]
[-80.96926880 156.29621887]
[-70.59976196 145.60404968]
[-55.29619980 149.61798096]
[-40.77931213 145.84175110]
[-26.26242065 142.06552124]
[-17.98778343 125.75981140]
[-0.12457737 120.56316376]
[16.15393066 130.21023560]
[30.52935410 125.92687225]
[44.90477753 121.64350891]
[59.28020096 117.36014557]
[73.65562439 113.07678223]
[77.07813263 106.40322113]
[63.73112488 99.55798340]
[70.57658386 86.21108246]
[83.92315674 93.05609894]
[87.34566498 86.38253784]
[82.43587494 72.20883179]
[77.52608490 58.03512192]
[72.61629486 43.86141205]
[67.70650482 29.68770599]
[62.79671860 15.51399994]
[56.78397751 1.77183962]
[49.70577240 -11.45309925]
[42.62756729 -24.67803764]
[35.43358231 -37.84035492]
[28.12437057 -50.93903351]
[20.81515884 -64.03771210]
[7.81711626 -74.92289734]
[14.67868614 -90.42629242]
[31.47567177 -88.12464142]
[33.91383743 -71.34692383]
[41.22304916 -58.24824524]
[48.53226089 -45.14956665]
[54.55484009 -40.82810593]
[55.85250854 -31.75624275]
[62.93071365 -18.53130531]
[70.00891876 -5.30636597]
[72.93514252 -20.01817131]
[83.26010895 -30.89911652]
[97.79837036 -34.59221268]
[112.06458282 -29.95806503]
[121.65732574 -18.42640114]
[123.61705017 -3.55497003]
[117.33914948 10.06809616]
[104.76046753 18.23980904]
[89.76179504 18.43903160]
[76.97042847 10.60421085]
[81.88021851 24.77791786]
[86.79000092 38.95162582]
[91.69979095 53.12533188]
[96.60958099 67.29904175]
[101.51937103 81.47274780]
[99.34953308 66.63051605]
[102.84744263 52.04406357]
[111.51268005 39.80014038]
[124.10559082 31.65038300]
[138.82461548 28.76070023]
[153.56404114 31.54449654]
[166.21520996 39.60351944]
[174.96824646 51.78483200]
[178.57092285 66.34576416]
[176.50784302 81.20320892]
[169.07414246 94.23164368]
[157.33329773 103.56720734]
[142.96498108 107.87433624]
[128.02473450 106.53684998]
[114.64851379 99.74501038]
[126.51534271 108.91988373]
[138.38217163 118.09475708]
[150.24900818 127.26963043]
[162.11584473 136.44450378]
[173.98268127 145.61936951]
[185.84950256 154.79425049]
[201.49971008 157.11408997]
[206.83595276 171.01997375]
[218.70278931 180.19485474]
[233.18139648 172.80168152]
[249.37655640 172.45683289]
[264.05105591 179.17857361]
[274.29367065 191.57768250]
[278.09677124 207.14428711]
[274.74960327 222.75582886]
[286.77563477 231.72102356]
[298.80163574 240.68621826]
[310.82766724 249.65141296]
[323.00918579 258.40417480]
[335.34243774 266.94180298]
[347.67565918 275.47943115]
[360.00891113 284.01705933]
[372.34216309 292.55468750]
[388.09274292 294.04766846]
[394.15344238 307.65347290]
[406.48669434 316.19110107]
[418.81994629 324.72872925]
[417.40075684 309.79602051]
[426.83038330 298.13058472]
[441.72882080 296.38806152]
[453.59588623 305.56262207]
[455.66094971 320.41979980]
[446.74575806 332.48294067]
[431.93582153 334.86929321]
[443.30334473 344.65600586]
[454.67089844 354.44268799]
[463.24288940 357.68353271]
[466.15008545 364.50225830]
[477.34411621 374.48693848]
[488.53814697 384.47161865]
[504.38308716 390.50265503]
[502.97406006 407.39794922]
[486.34899902 410.72106934]
[478.55346680 395.66561890]
[467.35943604 385.68093872]
[456.16540527 375.69628906]
[444.88418579 365.81021118]
[433.51666260 356.02352905]
[422.14913940 346.23684692]
[410.28228760 337.06195068]
[397.94906616 328.52432251]
[385.61581421 319.98669434]
[370.74737549 319.10440063]
[363.80453491 304.88793945]
[351.47128296 296.35031128]
[339.13803101 287.81268311]
[326.80477905 279.27505493]
[314.47155762 270.73742676]
[309.66934204 270.70251465]
[304.84445190 267.63085938]
[301.86248779 261.67742920]
[289.83645630 252.71223450]
[277.81042480 243.74703979]
[265.78439331 234.78184509]
[253.80433655 241.80793762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 122]
[6 121]
[8 119]
[9 118]
[10 117]
[11 116]
[12 115]
[13 114]
[14 113]
[16 57]
[17 56]
[18 55]
[19 54]
[20 53]
[25 50]
[26 49]
[27 48]
[29 46]
[30 45]
[31 44]
[32 43]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[67 93]
[68 83]
[69 82]
[70 81]
[71 79]
[72 78]
[73 77]
[128 177]
[129 176]
[130 175]
[131 174]
[132 171]
[133 170]
[134 169]
[135 168]
[136 167]
[138 165]
[139 164]
[140 163]
[147 162]
[148 161]
[149 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
