%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCCCGGCCGUGACGUCACGGCAGCGCGCCGGCCGCGAGAGAGGGCCCCGUCGCGACCGCGUCCCCUUGGGUCCUUGAUCCUGAGCUGACCGGGUAGCCAUGGCCUUGCGGCUCCUGAAGCUGGCAGCGACGUCCGCGUCCGCCCGGGUCGUGGCGGCGGGCGCCCAGCGCGUGAGAGGAAUUCAUAGCAGUGUGCAGU\
) } def
/len { sequence length } bind def

/coor [
[103.54976654 210.93478394]
[102.85015869 195.95111084]
[102.15055847 180.96743774]
[101.45095062 165.98376465]
[94.15411377 164.24993896]
[90.68622589 178.84355164]
[76.09265900 175.37542725]
[79.56043243 160.78228760]
[72.26359558 159.04846191]
[64.89868164 172.11590576]
[57.53377151 185.18334961]
[50.16886139 198.25079346]
[42.80394745 211.31823730]
[35.43903732 224.38568115]
[36.15002823 240.76940918]
[22.17336082 249.34756470]
[7.88703251 241.29568481]
[7.98759270 224.89685059]
[22.37159348 217.02076721]
[29.73650551 203.95333862]
[37.10141754 190.88589478]
[44.46632767 177.81845093]
[51.83123779 164.75100708]
[59.19615173 151.68356323]
[53.81101608 146.46337891]
[43.04074478 136.02301025]
[37.65560913 130.80282593]
[24.82353401 138.57057190]
[11.99145794 146.33831787]
[-0.84061670 154.10604858]
[-6.05153275 169.27925110]
[-21.21113586 174.52958679]
[-34.69027328 165.82945251]
[-36.14890671 149.85284424]
[-24.46809769 138.85565186]
[-8.60836124 141.27398682]
[4.22371387 133.50624084]
[17.05578804 125.73849487]
[29.88786316 117.97074890]
[34.33216858 97.21612549]
[44.22153091 80.54177094]
[57.60750580 69.16048431]
[72.35124207 63.52293777]
[86.39113617 63.32368851]
[97.98744965 67.59448242]
[100.54110718 52.81344986]
[103.09475708 38.03242111]
[105.64841461 23.25138855]
[108.08705139 8.45094872]
[110.41052246 -6.36800814]
[112.73399353 -21.18696404]
[115.05746460 -36.00592041]
[117.38093567 -50.82487869]
[119.70441437 -65.64383698]
[115.22951508 -65.86567688]
[110.55792999 -67.23039246]
[105.96537018 -69.80509949]
[101.74314117 -73.59329224]
[98.18395233 -78.53183746]
[87.99765778 -89.54271698]
[77.81136322 -100.55359650]
[69.68027496 -104.73195648]
[67.55391693 -111.81581879]
[57.54009628 -122.98378754]
[47.52627563 -134.15174866]
[31.98260307 -135.16761780]
[21.98625565 -146.63616943]
[23.05053139 -161.44842529]
[13.03670979 -172.61639404]
[3.02288771 -183.78436279]
[-6.99093437 -194.95231628]
[-17.00475693 -206.12028503]
[-27.01857948 -217.28823853]
[-42.43960190 -215.56437683]
[-55.91205978 -223.26322937]
[-62.25552368 -237.42445374]
[-59.03079987 -252.60275269]
[-47.47785950 -262.96176147]
[-32.03904724 -264.51824951]
[-18.65089607 -256.67367554]
[-12.46142673 -242.44448853]
[-15.85061741 -227.30206299]
[-5.83679485 -216.13409424]
[4.17702723 -204.96614075]
[14.19084930 -193.79817200]
[24.20467186 -182.63021851]
[34.21849442 -171.46224976]
[49.05869293 -170.91084290]
[59.37322617 -159.72760010]
[58.69423676 -144.16557312]
[68.70806122 -132.99760437]
[78.72187805 -121.82964325]
[88.82224274 -110.73989105]
[99.00853729 -99.72901154]
[109.19483185 -88.71813202]
[108.40693665 -103.69742584]
[121.49782562 -111.02058411]
[133.85009766 -102.51051331]
[131.67034912 -87.66872406]
[142.83830261 -97.68254852]
[154.00627136 -107.69636536]
[165.17422485 -117.71018982]
[176.34219360 -127.72401428]
[187.51014709 -137.73783875]
[198.67811584 -147.75166321]
[209.84606934 -157.76547241]
[221.01403809 -167.77929688]
[232.18200684 -177.79312134]
[237.49696350 -195.42007446]
[254.79345703 -198.36798096]
[265.80432129 -208.55427551]
[276.81521606 -218.74057007]
[270.86431885 -250.08052063]
[279.79394531 -262.13296509]
[288.72357178 -274.18542480]
[297.55920410 -286.30694580]
[306.30032349 -298.49682617]
[302.24792480 -313.60018921]
[308.89868164 -327.75299072]
[323.11230469 -334.27267456]
[338.17761230 -330.08087158]
[346.98117065 -317.15679932]
[345.36621094 -301.60284424]
[334.09530640 -290.76306152]
[318.49020386 -289.75570679]
[309.74908447 -277.56585693]
[308.40499878 -270.29287720]
[300.77603149 -265.25579834]
[291.84640503 -253.20333862]
[282.91674805 -241.15089417]
[292.57843018 -229.67689514]
[305.97512817 -236.42433167]
[319.37185669 -243.17175293]
[332.76858521 -249.91917419]
[341.30697632 -263.92019653]
[357.69265747 -263.25579834]
[365.06945801 -248.60945129]
[355.84875488 -235.04809570]
[339.51602173 -236.52244568]
[326.11929321 -229.77502441]
[312.72256470 -223.02760315]
[299.32583618 -216.28018188]
[287.00149536 -207.72969055]
[275.99063110 -197.54339600]
[264.97973633 -187.35710144]
[264.19482422 -175.28149414]
[255.09848022 -166.70498657]
[242.19581604 -166.62516785]
[231.02786255 -156.61134338]
[219.85989380 -146.59751892]
[208.69194031 -136.58369446]
[197.52397156 -126.56987000]
[186.35601807 -116.55605316]
[175.18804932 -106.54222870]
[164.02009583 -96.52840424]
[152.85212708 -86.51458740]
[141.68417358 -76.50076294]
[134.52336121 -63.32036209]
[132.19989014 -48.50140381]
[129.87641907 -33.68244934]
[127.55294800 -18.86349297]
[125.22947693 -4.04453564]
[122.90600586 10.77442074]
[124.97716522 17.87462044]
[120.42944336 25.80504227]
[117.87578583 40.58607101]
[115.32213593 55.36710358]
[112.76847839 70.14813232]
[150.87573242 87.35646057]
[156.30461121 145.48020935]
[165.60475159 157.24913025]
[178.30548096 159.52438354]
[185.80891418 169.52427673]
[184.52661133 181.55725098]
[193.64259338 193.46937561]
[202.75859070 205.38150024]
[211.87457275 217.29362488]
[220.99057007 229.20574951]
[236.64012146 232.73721313]
[243.50648499 247.23660278]
[236.32240295 261.58123779]
[220.59886169 264.76712036]
[208.39762878 254.35034180]
[209.07844543 238.32173157]
[199.96244812 226.40960693]
[190.84646606 214.49748230]
[181.73046875 202.58535767]
[172.61448669 190.67323303]
[156.07234192 184.82374573]
[153.83584595 166.54927063]
[144.53570557 154.78036499]
[137.51043701 157.40631104]
[135.03375244 172.20042419]
[123.45989227 162.65820312]
[116.43462372 165.28414917]
[117.13423157 180.26782227]
[117.83383942 195.25151062]
[118.53343964 210.23518372]
[127.83712769 223.73974609]
[120.55027771 238.43103027]
[104.16897583 239.19589233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[27 39]
[28 38]
[29 37]
[30 36]
[45 168]
[46 167]
[47 166]
[48 165]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[54 158]
[59 95]
[60 94]
[61 93]
[63 92]
[64 91]
[65 90]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[99 157]
[100 156]
[101 155]
[102 154]
[103 153]
[104 152]
[105 151]
[106 150]
[107 149]
[108 148]
[110 145]
[111 144]
[112 143]
[113 130]
[114 129]
[115 128]
[116 126]
[117 125]
[131 142]
[132 141]
[133 140]
[134 139]
[170 191]
[171 190]
[174 188]
[175 187]
[176 186]
[177 185]
[178 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
