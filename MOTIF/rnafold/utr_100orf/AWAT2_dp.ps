%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AWAT2)
} def

/sequence { (\
GGCACAAUGCUCUUGCCCUCUAAGAAGGACCUCAAGACUGCCCUGGAUGUCUUUGCUGUUUUCCAGUGGUCCUUCAGUGCCUUGCUUAUCACAACCACUGUGAUUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.013585590 ubox
1 12 0.006064208 ubox
1 17 0.047783443 ubox
1 18 0.005736483 ubox
1 81 0.996716981 ubox
1 82 0.006667415 ubox
1 86 0.014768194 ubox
2 10 0.016759279 ubox
2 16 0.048034968 ubox
2 17 0.004882764 ubox
2 80 0.998428093 ubox
2 81 0.005432470 ubox
2 85 0.016999520 ubox
3 9 0.016780137 ubox
3 15 0.048107560 ubox
3 79 0.998444062 ubox
3 84 0.016949713 ubox
4 8 0.013620267 ubox
4 14 0.043919407 ubox
4 78 0.997721729 ubox
4 83 0.015835749 ubox
5 15 0.014191552 ubox
5 77 0.996274146 ubox
5 84 0.007197338 ubox
6 14 0.024818135 ubox
6 83 0.007673493 ubox
7 13 0.024505145 ubox
7 82 0.008760749 ubox
8 15 0.011369718 ubox
8 22 0.019764617 ubox
8 76 0.029080244 ubox
8 79 0.004916544 ubox
9 14 0.010748239 ubox
9 16 0.988282728 ubox
9 21 0.010117800 ubox
9 39 0.004180816 ubox
9 75 0.012507890 ubox
9 78 0.007896016 ubox
9 80 0.014266038 ubox
9 85 0.009144927 ubox
10 15 0.990968481 ubox
10 77 0.008423830 ubox
10 79 0.014264120 ubox
10 84 0.009155686 ubox
11 23 0.005597213 ubox
11 25 0.048512466 ubox
11 37 0.018457131 ubox
11 76 0.008803425 ubox
12 24 0.059393189 ubox
12 36 0.019909979 ubox
12 77 0.014069680 ubox
13 23 0.076739559 ubox
13 35 0.019923378 ubox
13 76 0.014068392 ubox
14 22 0.079705353 ubox
14 23 0.032940474 ubox
14 34 0.019918483 ubox
15 21 0.075101422 ubox
15 33 0.019859320 ubox
15 80 0.013662971 ubox
15 85 0.006418309 ubox
16 28 0.006078882 ubox
16 79 0.013681004 ubox
16 84 0.006419972 ubox
17 27 0.006049790 ubox
17 28 0.017711781 ubox
18 24 0.020488209 ubox
18 27 0.017766602 ubox
18 77 0.015821041 ubox
19 23 0.032431026 ubox
19 25 0.010068719 ubox
19 26 0.016461954 ubox
19 28 0.004266679 ubox
19 29 0.013490445 ubox
19 76 0.022557658 ubox
20 24 0.012033554 ubox
20 27 0.004858713 ubox
20 28 0.013749930 ubox
20 77 0.017988554 ubox
21 26 0.004704726 ubox
21 27 0.013431726 ubox
21 76 0.035171927 ubox
21 88 0.017602517 ubox
22 78 0.003336251 ubox
22 87 0.022479671 ubox
23 86 0.023320876 ubox
24 74 0.004506144 ubox
24 75 0.995801008 ubox
24 85 0.023368320 ubox
25 73 0.003598165 ubox
25 74 0.997353270 ubox
25 83 0.023861437 ubox
26 53 0.003185986 ubox
26 73 0.998648774 ubox
26 82 0.024141812 ubox
27 52 0.003382656 ubox
27 72 0.999392384 ubox
27 81 0.024187675 ubox
28 51 0.003439462 ubox
28 71 0.999397335 ubox
28 80 0.024181754 ubox
29 50 0.003460891 ubox
29 70 0.998907953 ubox
29 78 0.006406013 ubox
30 49 0.003466722 ubox
30 69 0.998643909 ubox
30 77 0.005657231 ubox
31 66 0.022512594 ubox
31 68 0.995662072 ubox
31 69 0.008414869 ubox
31 77 0.023088910 ubox
32 46 0.025351583 ubox
32 47 0.044879614 ubox
32 65 0.044020887 ubox
32 68 0.009137030 ubox
32 69 0.003744290 ubox
32 76 0.023063666 ubox
33 40 0.079993535 ubox
33 45 0.030794261 ubox
33 46 0.047570569 ubox
33 49 0.005982438 ubox
33 55 0.117283361 ubox
33 58 0.007151681 ubox
33 68 0.015510633 ubox
34 39 0.072931380 ubox
34 44 0.023869581 ubox
34 48 0.005870381 ubox
34 53 0.755425933 ubox
34 54 0.111768854 ubox
34 57 0.006259166 ubox
34 61 0.007948928 ubox
34 62 0.394784601 ubox
34 67 0.024317737 ubox
34 74 0.023502076 ubox
35 44 0.054064510 ubox
35 52 0.854779841 ubox
35 53 0.080927988 ubox
35 54 0.007684139 ubox
35 60 0.006836211 ubox
35 61 0.421161118 ubox
35 62 0.022482567 ubox
35 73 0.025020017 ubox
36 43 0.060491921 ubox
36 51 0.869830083 ubox
36 52 0.010533799 ubox
36 53 0.003719006 ubox
36 59 0.004975026 ubox
36 60 0.428745138 ubox
36 61 0.020855917 ubox
36 62 0.006749565 ubox
36 63 0.035179857 ubox
36 71 0.008862431 ubox
36 72 0.024517571 ubox
36 75 0.006140281 ubox
37 50 0.869790441 ubox
37 52 0.003389426 ubox
37 59 0.430169598 ubox
37 60 0.015541341 ubox
37 61 0.005775675 ubox
37 62 0.032104247 ubox
37 67 0.066698448 ubox
37 70 0.010423741 ubox
37 73 0.003483016 ubox
37 74 0.005943803 ubox
38 46 0.023266957 ubox
38 49 0.869285143 ubox
38 58 0.428244039 ubox
38 66 0.065810925 ubox
38 69 0.010647094 ubox
39 45 0.031392544 ubox
39 49 0.007192078 ubox
39 58 0.004681625 ubox
39 65 0.064252143 ubox
39 68 0.010844557 ubox
40 44 0.016054307 ubox
40 48 0.037082334 ubox
40 50 0.008420159 ubox
40 56 0.427920628 ubox
40 57 0.004502929 ubox
40 59 0.025605422 ubox
40 64 0.062413771 ubox
40 67 0.035814102 ubox
40 70 0.041524698 ubox
41 49 0.009494727 ubox
41 55 0.427996620 ubox
41 58 0.025862537 ubox
41 66 0.029890028 ubox
41 69 0.049097814 ubox
42 68 0.051610512 ubox
43 66 0.212632846 ubox
44 55 0.011021523 ubox
44 58 0.007781144 ubox
44 65 0.216802073 ubox
45 51 0.245389681 ubox
45 52 0.307400473 ubox
45 53 0.041099456 ubox
45 54 0.060671921 ubox
45 57 0.013237883 ubox
45 60 0.016955531 ubox
45 61 0.045514177 ubox
45 62 0.004859847 ubox
45 63 0.017592604 ubox
45 64 0.218033426 ubox
46 50 0.159475531 ubox
46 51 0.314443481 ubox
46 52 0.035911716 ubox
46 53 0.062046479 ubox
46 54 0.050333990 ubox
46 56 0.013442916 ubox
46 59 0.016885839 ubox
46 60 0.047756392 ubox
46 61 0.005716140 ubox
46 62 0.017453072 ubox
46 63 0.218159142 ubox
47 52 0.056373926 ubox
47 53 0.050509000 ubox
47 59 0.048646948 ubox
47 60 0.006420825 ubox
47 61 0.020304121 ubox
47 62 0.214563655 ubox
48 55 0.009626014 ubox
48 58 0.047980929 ubox
49 54 0.011563011 ubox
49 56 0.058363003 ubox
49 57 0.023117244 ubox
49 59 0.013049469 ubox
50 55 0.054708356 ubox
50 58 0.010301687 ubox
53 66 0.012426022 ubox
54 65 0.024891562 ubox
54 68 0.045193249 ubox
55 64 0.026388122 ubox
55 67 0.835472120 ubox
56 66 0.868670802 ubox
57 65 0.868727751 ubox
58 64 0.866180523 ubox
59 66 0.004107365 ubox
60 65 0.004211211 ubox
76 86 0.020789766 ubox
76 87 0.003882992 ubox
76 99 0.003495355 ubox
77 85 0.022245805 ubox
77 86 0.003970653 ubox
77 98 0.003726589 ubox
78 84 0.021908397 ubox
78 97 0.003726400 ubox
79 83 0.010173631 ubox
79 85 0.017914658 ubox
79 96 0.003713175 ubox
80 84 0.017815989 ubox
82 94 0.005814127 ubox
82 103 0.008467527 ubox
83 93 0.006662432 ubox
83 102 0.009035634 ubox
83 106 0.021522329 ubox
84 92 0.006773428 ubox
84 101 0.009766564 ubox
84 105 0.042543069 ubox
85 100 0.009825064 ubox
86 103 0.005167335 ubox
87 102 0.004174816 ubox
87 106 0.104152734 ubox
88 101 0.003933559 ubox
88 104 0.895774377 ubox
88 105 0.090990973 ubox
89 103 0.983561528 ubox
90 102 0.999583962 ubox
91 101 0.999448416 ubox
92 100 0.999572275 ubox
92 102 0.003381187 ubox
92 106 0.007640504 ubox
93 99 0.951712672 ubox
93 105 0.007711417 ubox
94 101 0.004874029 ubox
94 104 0.007287265 ubox
95 100 0.005550732 ubox
96 102 0.008267265 ubox
97 101 0.006713754 ubox
1 81 0.9500000 lbox
2 80 0.9500000 lbox
3 79 0.9500000 lbox
4 78 0.9500000 lbox
5 77 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
24 75 0.9500000 lbox
25 74 0.9500000 lbox
26 73 0.9500000 lbox
27 72 0.9500000 lbox
28 71 0.9500000 lbox
29 70 0.9500000 lbox
30 69 0.9500000 lbox
31 68 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
55 67 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
58 64 0.9500000 lbox
88 104 0.9500000 lbox
89 103 0.9500000 lbox
90 102 0.9500000 lbox
91 101 0.9500000 lbox
92 100 0.9500000 lbox
93 99 0.9500000 lbox
showpage
end
%%EOF
