%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGUAACUGGGUUGCAGGCCCGCGGCUGCGGAGUGCGCAGGCGCGCCGAGAUGGCCGCGCUCCUGGCCGCCUAGAGCCGGAGCGGCCCGCGGAGCUGCGGAGGCAGCCAUGGUCGGGGCGCUGUGCGGCUGCUGGUUCCGCCUGGGCGGGGCCCGCCCGCUCAUCCCGUUGGGCCCGACUGUGGUACAGACCUCCAUGAGCCGGUCCC\
) } def
/len { sequence length } bind def

/coor [
[-105.49695587 222.06462097]
[-120.44097900 220.76997375]
[-128.87300110 208.36428833]
[-124.57833862 193.99378967]
[-138.81632996 198.71392822]
[-153.05430603 203.43405151]
[-159.52827454 214.58979797]
[-171.48429871 218.22808838]
[-182.35415649 212.92028809]
[-196.66084290 217.42791748]
[-210.96752930 221.93554688]
[-225.27421570 226.44317627]
[-239.58090210 230.95080566]
[-253.88758850 235.45843506]
[-264.72479248 246.98518372]
[-279.18890381 243.43016052]
[-293.49560547 247.93778992]
[-307.76834106 252.55178833]
[-322.00631714 257.27194214]
[-336.24432373 261.99206543]
[-343.38360596 275.83648682]
[-357.89019775 280.42056274]
[-371.04473877 273.52899170]
[-385.28274536 278.24914551]
[-399.52072144 282.96926880]
[-413.75872803 287.68939209]
[-427.99670410 292.40954590]
[-442.23471069 297.12966919]
[-456.47268677 301.84979248]
[-470.71066284 306.56994629]
[-484.83969116 311.60684204]
[-498.85272217 316.95803833]
[-512.86572266 322.30923462]
[-522.99761963 334.46057129]
[-537.64770508 331.77276611]
[-551.66076660 337.12396240]
[-565.67376709 342.47515869]
[-579.68676758 347.82632446]
[-589.60369873 360.88723755]
[-605.83703613 358.56124878]
[-611.68737793 343.24111938]
[-601.13635254 330.68692017]
[-585.03796387 333.81332397]
[-571.02496338 328.46212769]
[-557.01196289 323.11093140]
[-542.99890137 317.75976562]
[-533.86932373 305.99114990]
[-518.21691895 308.29620361]
[-504.20391846 302.94500732]
[-490.19088745 297.59384155]
[-488.42520142 294.54183960]
[-485.09350586 292.19345093]
[-480.54263306 291.27539062]
[-475.43081665 292.33193970]
[-461.19281006 287.61181641]
[-446.95483398 282.89169312]
[-432.71682739 278.17153931]
[-418.47885132 273.45141602]
[-404.24087524 268.73126221]
[-390.00286865 264.01113892]
[-375.76489258 259.29101562]
[-369.33236694 245.90600586]
[-354.96026611 240.91629028]
[-340.96444702 247.75407410]
[-326.72647095 243.03393555]
[-312.48846436 238.31381226]
[-307.12863159 233.22518921]
[-298.00323486 233.63110352]
[-283.69653320 229.12347412]
[-273.88265991 217.91914368]
[-258.39523315 221.15174866]
[-244.08853149 216.64411926]
[-229.78184509 212.13648987]
[-215.47515869 207.62886047]
[-201.16847229 203.12123108]
[-186.86178589 198.61360168]
[-175.71748352 185.05737305]
[-157.77444458 189.19607544]
[-143.53645325 184.47593689]
[-129.29846191 179.75579834]
[-115.24599457 174.50907898]
[-101.39851379 168.74304199]
[-87.55102539 162.97702026]
[-78.77587891 150.94181824]
[-63.06179810 152.77980042]
[-49.21431351 147.01377869]
[-35.36682892 141.24774170]
[-21.51934242 135.48170471]
[-12.74419785 123.44650269]
[2.96988392 125.28450012]
[16.81736946 119.51846313]
[25.59251595 107.48326111]
[41.30659485 109.32125854]
[55.15408325 103.55522156]
[69.00156403 97.78919220]
[82.84905243 92.02315521]
[90.60544586 79.18421173]
[89.26721191 64.24402618]
[87.92897797 49.30384445]
[86.59074402 34.36365891]
[76.71936798 21.26831818]
[83.37279510 6.27952290]
[99.70654297 4.81646299]
[108.91786194 18.38420868]
[101.53092957 33.02542496]
[102.86916351 47.96561050]
[104.20739746 62.90579605]
[105.54563141 77.84597778]
[118.08702850 86.07479095]
[132.32501221 81.35465240]
[146.56300354 76.63452148]
[160.80099487 71.91438293]
[175.03898621 67.19425201]
[189.27697754 62.47411728]
[203.51496887 57.75398254]
[217.75296021 53.03384781]
[231.99093628 48.31371307]
[246.22892761 43.59357834]
[260.46691895 38.87344742]
[274.55807495 33.73148727]
[288.48986816 28.17226028]
[302.42166138 22.61303329]
[314.17340088 6.23440838]
[333.17114258 9.83614349]
[346.93124390 3.86458063]
[356.51043701 -8.72706223]
[371.26593018 -6.69610596]
[385.02603149 -12.66766930]
[398.78613281 -18.63923264]
[412.54623413 -24.61079407]
[416.78280640 -29.68651581]
[422.14221191 -31.57695770]
[426.80606079 -30.54852295]
[440.73785400 -36.10774994]
[450.68771362 -48.40859985]
[465.37619019 -45.93922043]
[479.30798340 -51.49844742]
[493.23977661 -57.05767059]
[507.17160034 -62.61689758]
[521.10339355 -68.17612457]
[535.03515625 -73.73535156]
[548.96697998 -79.29457855]
[562.89880371 -84.85379791]
[572.62011719 -98.06090546]
[588.88629150 -95.97685242]
[594.96411133 -80.74554443]
[584.60113525 -68.03564453]
[568.45800781 -70.92200470]
[554.52618408 -65.36277771]
[540.59442139 -59.80355072]
[526.66259766 -54.24432373]
[512.73083496 -48.68510056]
[498.79901123 -43.12587357]
[484.86721802 -37.56664658]
[470.93542480 -32.00741959]
[461.98205566 -20.10420227]
[446.29708862 -22.17595100]
[432.36529541 -16.61672592]
[418.51779175 -10.85069180]
[404.75769043 -4.87912893]
[390.99758911 1.09243405]
[377.23748779 7.06399679]
[368.64251709 19.22851372]
[352.90280151 17.62468338]
[339.14270020 23.59624672]
[336.26113892 33.39979553]
[328.29171753 40.14048767]
[317.70999146 41.40826035]
[307.98089600 36.54483414]
[294.04907227 42.10405731]
[280.11727905 47.66328430]
[278.88824463 50.18273163]
[276.58718872 52.36714554]
[273.33666992 53.80576706]
[269.40563965 54.13975906]
[265.18704224 53.11143494]
[250.94906616 57.83156967]
[236.71107483 62.55170441]
[222.47308350 67.27183533]
[208.23509216 71.99197388]
[193.99711609 76.71210480]
[179.75912476 81.43224335]
[165.52113342 86.15237427]
[151.28314209 90.87250519]
[137.04515076 95.59264374]
[122.80716705 100.31277466]
[120.28758240 107.29508209]
[115.83454132 112.71755981]
[110.16700745 116.12111664]
[104.08073425 117.33553314]
[98.34211731 116.47616577]
[93.59349823 113.90444946]
[90.28129578 110.15938568]
[88.61508942 105.87064362]
[74.76760101 111.63667297]
[60.92011642 117.40270996]
[47.07262802 123.16873932]
[37.30701828 135.61636353]
[22.58340263 133.36595154]
[8.73591709 139.13198853]
[-1.02969289 151.57960510]
[-15.75330925 149.32919312]
[-29.60079575 155.09523010]
[-43.44828033 160.86125183]
[-57.29576492 166.62728882]
[-67.06137848 179.07492065]
[-81.78499603 176.82450867]
[-95.63247681 182.59053040]
[-109.47996521 188.35656738]
[-96.81728363 196.39749146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 80]
[5 79]
[6 78]
[9 76]
[10 75]
[11 74]
[12 73]
[13 72]
[14 71]
[16 69]
[17 68]
[18 66]
[19 65]
[20 64]
[23 61]
[24 60]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[31 50]
[32 49]
[33 48]
[35 46]
[36 45]
[37 44]
[38 43]
[81 209]
[82 208]
[83 207]
[85 205]
[86 204]
[87 203]
[88 202]
[90 200]
[91 199]
[93 197]
[94 196]
[95 195]
[96 194]
[97 108]
[98 107]
[99 106]
[100 105]
[109 186]
[110 185]
[111 184]
[112 183]
[113 182]
[114 181]
[115 180]
[116 179]
[117 178]
[118 177]
[119 176]
[120 171]
[121 170]
[122 169]
[124 165]
[125 164]
[127 162]
[128 161]
[129 160]
[130 159]
[133 158]
[134 157]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
