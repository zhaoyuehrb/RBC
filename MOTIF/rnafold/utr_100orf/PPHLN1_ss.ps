%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:06:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCGCGCGCCGGAAGUACCUACCUGGGAUAACGGCGGCGAGCGGACGGCUGCAUUUACGGGGUCUCCCGGAGGGCCAGAGUCGUGGCUUACAGAAGAGACGAAAUGUGGUCUGAGGGACGAUAUGAAUAUGAAAGAAUUCCGAGAGAACGAGCACCUCCUCGAAGUCAUCCCAGUGAUGGCUACAAUAGACUAGUUAAUAUUG\
) } def
/len { sequence length } bind def

/coor [
[106.82903290 194.10356140]
[103.20513916 179.54789734]
[99.58124542 164.99221802]
[95.95734406 150.43655396]
[81.34810638 147.03506470]
[71.66741180 158.49298096]
[61.98670959 169.95091248]
[58.83694077 178.52940369]
[52.06996155 181.50828552]
[42.21565247 192.81724548]
[32.36134720 204.12622070]
[22.50704002 215.43518066]
[12.65273380 226.74414062]
[18.71691132 239.51251221]
[19.45355606 253.58518982]
[14.78439903 266.83520508]
[5.44572020 277.27252197]
[-7.12754917 283.34292603]
[-21.02224350 284.15942383]
[-34.13806152 279.63165283]
[-44.16368103 290.78903198]
[-44.74703217 306.82147217]
[-57.73057556 316.24523926]
[-73.15444946 311.83120728]
[-79.18677521 296.96545410]
[-71.20007324 283.05169678]
[-55.32105255 280.76342773]
[-45.29542923 269.60604858]
[-51.65208435 254.94706726]
[-50.97815704 238.92517090]
[-43.35785294 224.74929810]
[-30.27168655 215.28076172]
[-14.30912018 212.45581055]
[1.34377122 216.88983154]
[11.19807720 205.58087158]
[21.05238342 194.27191162]
[30.90669060 182.96295166]
[40.76099777 171.65397644]
[50.52878571 160.27020264]
[60.20948410 148.81228638]
[69.89018250 137.35435486]
[54.95326233 120.13408661]
[49.36331940 97.37842560]
[34.42607117 98.74905396]
[19.48882103 100.11967468]
[4.55157375 101.49030304]
[-8.52233315 111.39005280]
[-23.52552032 104.76914215]
[-25.02399254 88.43859863]
[-11.47625256 79.19788361]
[3.18094754 86.55305481]
[18.11819649 85.18242645]
[33.05544281 83.81180573]
[47.99269104 82.44117737]
[52.24230957 76.26131439]
[38.47652817 70.30284882]
[23.50269127 69.41730499]
[14.23416710 57.62347412]
[16.91346550 42.86470413]
[29.73603439 35.08127594]
[44.06565475 39.51546478]
[50.25107574 53.18010330]
[60.74154663 63.90157700]
[64.99116516 57.72171402]
[60.92506027 43.28333282]
[56.85895920 28.84495354]
[52.68288040 14.43799686]
[48.39706802 0.06330381]
[44.11125565 -14.31138992]
[39.82544327 -28.68608284]
[27.31655884 -33.68669891]
[20.07839584 -44.81690979]
[20.56633186 -57.88995743]
[28.37821770 -68.13998413]
[24.31211662 -82.57836151]
[20.24601364 -97.01673889]
[16.17991257 -111.45512390]
[12.11380959 -125.89350128]
[8.04770756 -140.33187866]
[-7.89573669 -145.97448730]
[-17.24277115 -159.86952209]
[-16.47502708 -176.43188477]
[-6.09281397 -189.14517212]
[-10.37862682 -203.51986694]
[-14.66443920 -217.89456177]
[-18.95025253 -232.26925659]
[-32.57160950 -239.82546997]
[-36.71326065 -254.46450806]
[-29.42561722 -267.40380859]
[-33.71142960 -281.77850342]
[-37.99724197 -296.15319824]
[-50.27810287 -307.02117920]
[-46.74190521 -323.03451538]
[-31.02639198 -327.72009277]
[-19.29833221 -316.25778198]
[-23.62254906 -300.43902588]
[-19.33673668 -286.06433105]
[-15.05092430 -271.68963623]
[-1.86733007 -264.85382080]
[2.68386626 -250.33688354]
[-4.57555866 -236.55506897]
[-0.28974584 -222.18037415]
[3.99606681 -207.80567932]
[8.28187943 -193.43098450]
[21.23387146 -190.18348694]
[30.96726036 -180.88485718]
[34.86503983 -167.88728333]
[31.80635452 -154.55598450]
[22.48608780 -144.39797974]
[26.55218887 -129.95960999]
[30.61829185 -115.52122498]
[34.68439484 -101.08283997]
[38.75049591 -86.64446259]
[42.81659698 -72.20608521]
[57.82384872 -64.61915588]
[62.80033493 -48.20310974]
[54.20013428 -32.97189713]
[58.48594666 -18.59720230]
[62.77175903 -4.22250891]
[67.05757141 10.15218449]
[71.98320770 15.66615486]
[71.29734039 24.77885056]
[75.36344147 39.21723175]
[79.42954254 53.65560913]
[99.10811615 50.06139755]
[118.33737183 54.35723114]
[134.12568665 65.63475800]
[146.42025757 57.04152679]
[158.71482849 48.44829178]
[171.00938416 39.85506058]
[171.15869141 24.33870125]
[180.42678833 11.89354134]
[195.24990845 7.30499697]
[209.92825317 12.33745575]
[218.81771851 25.05583572]
[218.50010681 40.56966019]
[209.09753418 52.91354752]
[194.22552490 57.34101868]
[179.60261536 52.14962387]
[167.30805969 60.74285889]
[155.01348877 69.33609009]
[142.71893311 77.92932129]
[147.44111633 92.16663361]
[162.43414307 91.70919037]
[177.42716980 91.25174713]
[192.42018127 90.79430389]
[200.90631104 87.40352631]
[207.64495850 90.44596863]
[222.64321899 90.21721649]
[230.69746399 77.05923462]
[244.59680176 70.36506653]
[259.90600586 72.27080536]
[271.73995972 82.16833496]
[276.32250977 96.89939117]
[272.19134521 111.76334381]
[260.66473389 122.01715851]
[245.42076111 124.38888550]
[231.32373047 118.12171173]
[222.87196350 105.21546936]
[207.87370300 105.44422150]
[192.87762451 105.78732300]
[177.88461304 106.24476624]
[162.89158630 106.70220947]
[147.89855957 107.15965271]
[143.77894592 113.52292633]
[138.89230347 118.82601929]
[151.05439758 127.60574341]
[163.21649170 136.38546753]
[175.37858582 145.16519165]
[187.54066467 153.94491577]
[199.70275879 162.72463989]
[211.86485291 171.50436401]
[227.86817932 170.37612915]
[238.62168884 182.28166199]
[235.87620544 198.08804321]
[221.73782349 205.66998291]
[207.05230713 199.21125793]
[203.08512878 183.66645813]
[190.92303467 174.88673401]
[178.76094055 166.10700989]
[166.59886169 157.32728577]
[154.43676758 148.54756165]
[142.27467346 139.76783752]
[130.11257935 130.98811340]
[121.69827271 140.09973145]
[110.51300812 146.81266785]
[114.13690948 161.36833191]
[117.76080322 175.92399597]
[121.38469696 190.47966003]
[136.47161865 191.76950073]
[150.32125854 197.89044189]
[161.43133545 208.17854309]
[168.59669495 221.51782227]
[171.04010010 236.46133423]
[168.49649048 251.38812256]
[161.24180603 264.67901611]
[150.06297302 274.89236450]
[136.17257690 280.92025757]
[121.07733917 282.10885620]
[106.41469574 278.32922363]
[93.77513885 269.99136353]
[84.52970123 257.99966431]
[79.68125916 243.65492249]
[79.75575256 228.51315308]
[84.74507904 214.21682739]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[5 41]
[6 40]
[7 39]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[20 28]
[21 27]
[43 54]
[44 53]
[45 52]
[46 51]
[64 124]
[65 123]
[66 122]
[67 120]
[68 119]
[69 118]
[70 117]
[74 114]
[75 113]
[76 112]
[77 111]
[78 110]
[79 109]
[83 104]
[84 103]
[85 102]
[86 101]
[89 98]
[90 97]
[91 96]
[127 142]
[128 141]
[129 140]
[130 139]
[143 164]
[144 163]
[145 162]
[146 161]
[148 160]
[149 159]
[166 184]
[167 183]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
