%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUCGGCCGGGCGGUGUGUUGUCAUCCGCGGAGCGACGACCGGAGGCUGCGGCGGAGCCCCGGCGGGGCGUUUGGUUUCGGUUUGGCCCUGACUGGGAUUAGUGUUGACGAUCGAAAUGGGAGUCCCCAAGUUUUACAGAUGGAUCUCAGAGCGGUAUCCCUGUCUCAGCGAAGUGGUGAAAGAGCAUCAGAUUCCUGAAUUUGACAACUUGUACC\
) } def
/len { sequence length } bind def

/coor [
[73.30190277 304.62963867]
[72.26800537 308.02075195]
[70.38343048 310.56390381]
[68.03797913 312.08886719]
[64.20767975 326.59158325]
[60.37738419 341.09429932]
[67.17355347 355.62673950]
[59.92017365 369.93643188]
[44.18141174 373.04626465]
[32.03070068 362.57058716]
[32.78902817 346.54547119]
[45.87466812 337.26400757]
[49.70496750 322.76129150]
[53.53526688 308.25854492]
[56.94795609 293.65194702]
[59.94023514 278.95343018]
[62.93251038 264.25491333]
[65.92478943 249.55639648]
[58.47110748 231.71089172]
[72.07514191 216.82974243]
[74.64453888 202.05143738]
[77.21393585 187.27313232]
[79.78333282 172.49482727]
[82.35272980 157.71653748]
[84.92212677 142.93823242]
[87.49152374 128.15992737]
[80.65345001 123.98238373]
[75.12378693 118.18289948]
[71.27651215 111.15370178]
[69.37181854 103.37017059]
[54.51089478 101.33230591]
[39.78749847 107.12300873]
[28.22940254 97.72834778]
[13.36847687 95.69048309]
[-1.49244869 93.65261841]
[-16.35337448 91.61475372]
[-27.11174011 102.64035034]
[-42.12396622 105.18718719]
[-55.59791946 98.48519897]
[-62.45967865 85.29223633]
[-77.32060242 83.25437164]
[-92.18153381 81.21650696]
[-107.04245758 79.17864227]
[-121.90338135 77.14077759]
[-136.76431274 75.10291290]
[-151.62522888 73.06504822]
[-166.34863281 78.85575104]
[-177.90672302 69.46109009]
[-192.76765442 67.42322540]
[-207.62857056 65.38535309]
[-222.35197449 71.17605591]
[-233.91006470 61.78139877]
[-248.77099609 59.74353409]
[-263.49438477 65.53423309]
[-275.05249023 56.13957596]
[-289.91342163 54.10171127]
[-304.77432251 52.06384659]
[-319.74606323 58.75556564]
[-332.86660767 48.91769791]
[-330.63864136 32.67059708]
[-315.35415649 26.72788811]
[-302.73648071 37.20291901]
[-287.87554932 39.24078369]
[-273.01461792 41.27865219]
[-259.35418701 35.34218597]
[-246.73312378 44.88260651]
[-231.87220764 46.92047501]
[-218.21176147 40.98400879]
[-205.59071350 50.52442932]
[-190.72978210 52.56229782]
[-175.86886597 54.60016251]
[-162.20841980 48.66369629]
[-149.58737183 58.20412064]
[-134.72644043 60.24198532]
[-119.86551666 62.27985001]
[-105.00459290 64.31771851]
[-90.14366913 66.35558319]
[-75.28273773 68.39344788]
[-60.42181396 70.43131256]
[-50.26185989 59.57252502]
[-35.48114395 56.74507141]
[-21.70868492 63.23912811]
[-14.31550884 76.75382996]
[0.54541677 78.79169464]
[15.40634251 80.82955933]
[30.26726723 82.86742401]
[43.92770767 76.93096161]
[56.54875946 86.47138214]
[71.40968323 88.50924683]
[79.79679108 75.12039948]
[94.19045258 67.22514343]
[111.22488403 67.35372925]
[126.57415771 76.07337952]
[134.89653015 63.59386444]
[143.21888733 51.11435318]
[144.43838501 35.34021759]
[157.93696594 29.04438591]
[166.25933838 16.56487465]
[174.58171082 4.08536482]
[182.90406799 -8.39414597]
[191.22644043 -20.87365723]
[187.48573303 -37.96534348]
[197.07727051 -52.19249344]
[213.65824890 -55.02090073]
[221.80075073 -67.61850739]
[222.79383850 -83.40851593]
[236.20072937 -89.89733124]
[244.34321594 -102.49494171]
[252.48571777 -115.09255219]
[260.62820435 -127.69015503]
[262.65646362 -136.59033203]
[268.97894287 -140.40890503]
[277.30133057 -152.88842773]
[285.62368774 -165.36793518]
[293.94607544 -177.84744263]
[301.63162231 -190.72889709]
[308.66104126 -203.97984314]
[315.69042969 -217.23078918]
[322.71984863 -230.48173523]
[329.55844116 -243.83213806]
[336.20483398 -257.27926636]
[342.85122681 -270.72640991]
[349.49761963 -284.17355347]
[347.90036011 -300.49472046]
[361.39193726 -309.81726074]
[376.09335327 -302.55090332]
[376.88107300 -286.17068481]
[362.94476318 -277.52716064]
[356.29837036 -264.08001709]
[349.65197754 -250.63288879]
[343.00558472 -237.18576050]
[343.65878296 -232.46018982]
[341.35446167 -227.27345276]
[335.97079468 -223.45233154]
[328.94137573 -210.20138550]
[321.91198730 -196.95043945]
[314.88256836 -183.69949341]
[329.18365479 -188.22489929]
[343.09353638 -182.61105347]
[350.24719238 -169.42678833]
[347.37124634 -154.70507812]
[335.78164673 -145.18240356]
[320.78167725 -145.21626282]
[309.23516846 -154.79113770]
[306.42556763 -169.52507019]
[298.10321045 -157.04556274]
[289.78082275 -144.56605530]
[281.45846558 -132.08654785]
[273.22583008 -119.54766083]
[265.08331299 -106.95005035]
[256.94082642 -94.35243988]
[248.79833984 -81.75483704]
[248.38764954 -66.86589050]
[234.39836121 -59.47600937]
[226.25585938 -46.87840271]
[230.69754028 -34.78657913]
[227.31503296 -22.15528679]
[217.12635803 -13.65188122]
[203.70594788 -12.55128860]
[195.38357544 -0.07177807]
[187.06121826 12.40773296]
[178.73884583 24.88724327]
[170.41647339 37.36675262]
[169.79225159 52.24827194]
[155.69839478 59.43672180]
[147.37603760 71.91623688]
[139.05366516 84.39574432]
[142.04594421 99.09426117]
[154.58482361 107.32690430]
[167.12370300 115.55954742]
[179.66258240 123.79219055]
[188.54798889 125.88420868]
[192.32112122 132.23394775]
[204.74061584 140.64559937]
[217.16011047 149.05726624]
[235.55522156 149.95300293]
[242.59109497 166.03254700]
[255.12997437 174.26519775]
[267.66885376 182.49783325]
[280.20773315 190.73048401]
[292.74661255 198.96313477]
[308.16903687 195.50987244]
[321.47119141 204.04379272]
[324.76119995 219.50184631]
[316.08712769 232.71305847]
[300.59515381 235.83943176]
[287.47640991 227.02616882]
[284.51397705 211.50201416]
[271.97509766 203.26936340]
[259.43621826 195.03672791]
[246.89732361 186.80407715]
[234.35844421 178.57142639]
[222.45793152 180.71951294]
[211.94549561 173.96842957]
[208.74844360 161.47676086]
[196.32894897 153.06510925]
[183.90945435 144.65344238]
[171.42994690 136.33106995]
[158.89106750 128.09843445]
[146.35217285 119.86578369]
[133.81329346 111.63314056]
[128.04087830 120.13668823]
[120.31816864 126.36501312]
[111.44475555 129.93629456]
[102.26982880 130.72932434]
[99.70042419 145.50762939]
[97.13102722 160.28593445]
[94.56163025 175.06422424]
[91.99223328 189.84252930]
[89.42283630 204.62083435]
[86.85343933 219.39913940]
[93.61294556 227.91119385]
[94.55590057 238.51934814]
[89.61158752 247.70353699]
[80.62329865 252.54867554]
[77.63101959 267.24719238]
[74.63874817 281.94570923]
[71.64646912 296.64419556]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[15 218]
[16 217]
[17 216]
[18 215]
[20 211]
[21 210]
[22 209]
[23 208]
[24 207]
[25 206]
[26 205]
[30 89]
[31 88]
[33 86]
[34 85]
[35 84]
[36 83]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[45 74]
[46 73]
[48 71]
[49 70]
[50 69]
[52 67]
[53 66]
[55 64]
[56 63]
[57 62]
[93 167]
[94 166]
[95 165]
[97 163]
[98 162]
[99 161]
[100 160]
[101 159]
[104 155]
[105 154]
[107 152]
[108 151]
[109 150]
[110 149]
[112 148]
[113 147]
[114 146]
[115 145]
[116 137]
[117 136]
[118 135]
[119 134]
[120 131]
[121 130]
[122 129]
[123 128]
[168 201]
[169 200]
[170 199]
[171 198]
[173 197]
[174 196]
[175 195]
[177 192]
[178 191]
[179 190]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
