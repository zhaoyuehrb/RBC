%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGCCCCCGUUUCCUGGAGCCCGCGCCGUGCCGCGCUACGCCCGCCGGGAGCCGGGCAGAGCGGCCAAGAUGUCGCAGCCCAAGAAAAGAAAGCUUGAGUCGGGGGGCGGCGGCGAAGGAGGGGAGGGAACUGAAGAGGAAGAUGGCGCGGAGCGGGAGGCGGCCCUGG\
) } def
/len { sequence length } bind def

/coor [
[68.91683197 503.14343262]
[54.10973740 499.80960083]
[41.50903702 491.34872437]
[32.81887054 478.90502930]
[29.21450806 464.16143799]
[31.18341255 449.11193848]
[38.45930481 435.79180908]
[50.05818176 426.00250244]
[64.41139221 421.06793213]
[64.95922089 406.07794189]
[65.50704956 391.08795166]
[66.05487823 376.09796143]
[66.60270691 361.10797119]
[67.15054321 346.11798096]
[67.69837189 331.12799072]
[68.24620056 316.13800049]
[68.79402924 301.14801025]
[69.34185791 286.15802002]
[59.91578674 279.65429688]
[54.76153946 269.29339600]
[55.27097321 257.61224365]
[61.43291092 247.53443909]
[71.80697632 241.63847351]
[72.90190887 226.67849731]
[73.99683380 211.71850586]
[75.09176636 196.75852966]
[76.18669891 181.79853821]
[77.28162384 166.83856201]
[78.37655640 151.87857056]
[79.47148895 136.91859436]
[80.56641388 121.95860291]
[81.00920105 86.99626160]
[74.64234924 73.41453552]
[68.27549744 59.83281326]
[61.90864563 46.25109100]
[55.54179382 32.66936493]
[51.81946564 30.27461624]
[49.32516861 27.12651443]
[48.14494324 23.71127701]
[48.19546127 20.49223709]
[49.24670792 17.85578728]
[43.88824463 3.84554505]
[38.52978134 -10.16469669]
[33.17131805 -24.17493820]
[27.81285286 -38.18518066]
[15.65624237 -48.31076050]
[18.33643150 -62.96223831]
[12.97796726 -76.97248077]
[7.61950397 -90.98272705]
[2.26104045 -104.99296570]
[-3.47921085 -118.85115814]
[-9.59694195 -132.54690552]
[-15.71467304 -146.24264526]
[-21.83240509 -159.93838501]
[-30.92874718 -166.97541809]
[-31.50528145 -177.17361450]
[-40.00889969 -189.53033447]
[-48.51251602 -201.88703918]
[-57.01613617 -214.24375916]
[-67.85409546 -215.60746765]
[-75.97186279 -222.58343506]
[-78.83014679 -232.66960144]
[-75.71253204 -242.44793701]
[-83.75918579 -255.10697937]
[-91.80583954 -267.76602173]
[-99.85249329 -280.42504883]
[-107.89914703 -293.08410645]
[-123.37788391 -296.27536011]
[-131.99653625 -309.52279663]
[-128.64179993 -324.96691895]
[-115.30399323 -333.44503784]
[-99.89618683 -329.92721558]
[-91.55957031 -316.50051880]
[-95.24010468 -301.13076782]
[-87.19345093 -288.47171021]
[-79.14679718 -275.81268311]
[-71.10014343 -263.15362549]
[-63.05348969 -250.49458313]
[-45.30683136 -242.87123108]
[-44.65942001 -222.74737549]
[-36.15579987 -210.39067078]
[-27.65218163 -198.03395081]
[-19.14856339 -185.67723083]
[-18.04363632 -200.63647461]
[-10.35043144 -213.51338196]
[2.29867172 -221.57565308]
[17.21972466 -223.11259460]
[31.24670410 -217.79809570]
[41.40329742 -206.75982666]
[45.53442764 -192.33992004]
[42.76353455 -177.59806824]
[33.67855835 -165.66226196]
[20.20719528 -159.06512451]
[5.20786047 -159.20645142]
[-8.13666153 -166.05612183]
[-2.01893044 -152.36036682]
[4.09880066 -138.66462708]
[10.21653175 -124.96888733]
[13.39971256 -123.37310028]
[15.95512867 -120.13677216]
[17.11135292 -115.57805634]
[16.27128220 -110.35142517]
[21.62974548 -96.34118652]
[26.98820877 -82.33094788]
[32.34667206 -68.32070160]
[44.12001038 -59.19722748]
[41.82309341 -43.54364395]
[47.18155670 -29.53340149]
[52.54001999 -15.52315998]
[57.89848328 -1.51291823]
[63.25694656 12.49732304]
[69.12351990 26.30251694]
[75.49037170 39.88423920]
[81.85722351 53.46596146]
[88.22406769 67.04768372]
[94.59091949 80.62940979]
[89.52288818 66.51151276]
[91.87067413 51.69638824]
[101.05535126 39.83714294]
[114.81217957 33.85802841]
[129.74899292 35.23337173]
[142.18267822 43.62404251]
[149.04736328 56.96106720]
[148.65032959 71.95581055]
[141.08947754 84.91087341]
[128.22918701 92.63180542]
[113.24171448 93.21503448]
[128.21919250 94.03655243]
[142.59660339 86.14842987]
[156.47433472 94.88572693]
[155.57618713 111.26026154]
[140.82609558 118.42731476]
[127.39768219 109.01403809]
[112.42019653 108.19252014]
[125.17031860 116.09406281]
[139.94432068 118.68810272]
[151.06797791 128.75111389]
[155.12458801 143.19216919]
[150.86814880 157.57557678]
[139.60603333 167.48339844]
[124.79749298 169.87236023]
[110.99107361 164.00866699]
[102.42751312 151.69342041]
[101.73770905 136.70709229]
[95.52639771 123.05353546]
[94.43147278 138.01351929]
[93.33654022 152.97351074]
[92.24160767 167.93348694]
[91.14668274 182.89347839]
[90.05175018 197.85345459]
[88.95682526 212.81344604]
[87.86189270 227.77342224]
[86.76696014 242.73341370]
[99.68560791 256.55126953]
[98.46150208 275.10879517]
[84.33185577 286.70584106]
[83.78402710 301.69583130]
[83.23619080 316.68582153]
[82.68836212 331.67581177]
[82.14053345 346.66580200]
[81.59270477 361.65579224]
[81.04486847 376.64578247]
[80.49703979 391.63577271]
[79.94921112 406.62576294]
[79.40138245 421.61578369]
[93.35610199 427.58486938]
[104.20945740 438.19473267]
[110.49363708 452.01043701]
[111.35874176 467.16351318]
[106.68778229 481.60467529]
[97.11246490 493.38082886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[16 158]
[17 157]
[18 156]
[23 153]
[24 152]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[30 146]
[31 145]
[32 116]
[33 115]
[34 114]
[35 113]
[36 112]
[41 111]
[42 110]
[43 109]
[44 108]
[45 107]
[47 105]
[48 104]
[49 103]
[50 102]
[51 98]
[52 97]
[53 96]
[54 95]
[56 83]
[57 82]
[58 81]
[59 80]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
