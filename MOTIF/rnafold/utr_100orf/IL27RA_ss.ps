%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGCGGCCUGCCGGGGUGGUUCGGCUUCCCGUUGCCGCCUCGGGCGCUGUACCCAGAGCUCGAAGAGGAGCAGCGCGGCCGCGCGGACCCGGCAAGGCUGGGCCGGACUCGGGGCUCCCGAGGGACGCCAUGCGGGGAGGCAGGGGCGCCCCUUUCUGGCUGUGGCCGCUGCCCAAGCUGGCGCUGCUGCCUCUGUUGUGGGUGCUUUUCCAGCGGACGCGUCCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[-86.95816803 808.73388672]
[-82.66410065 793.82281494]
[-70.40493774 784.31005859]
[-71.00892639 769.32220459]
[-71.61291504 754.33435059]
[-79.85641479 741.92895508]
[-72.68106842 727.82843018]
[-73.28505707 712.84057617]
[-73.88904572 697.85278320]
[-82.55924225 689.43182373]
[-83.19412231 676.96087646]
[-74.90969086 667.08862305]
[-75.31240845 652.09405518]
[-75.71512604 637.09942627]
[-76.11785126 622.10485840]
[-89.91754150 616.22534180]
[-101.01065063 626.32202148]
[-112.10375977 636.41870117]
[-123.19686890 646.51538086]
[-134.28997803 656.61206055]
[-145.38308716 666.70874023]
[-156.47621155 676.80541992]
[-167.56932068 686.90209961]
[-178.66242981 696.99877930]
[-183.85861206 714.67230225]
[-201.14700317 717.72460938]
[-212.10356140 727.96929932]
[-223.06011963 738.21398926]
[-227.31346130 754.05200195]
[-243.22393799 758.02551270]
[-254.42422485 746.04693604]
[-249.39242554 730.43884277]
[-233.30482483 727.25744629]
[-222.34826660 717.01275635]
[-211.39169312 706.76806641]
[-210.67590332 694.70275879]
[-201.64566040 686.07818604]
[-188.75910950 685.90563965]
[-177.66600037 675.80902100]
[-166.57287598 665.71234131]
[-155.47976685 655.61566162]
[-144.38665771 645.51898193]
[-133.29354858 635.42230225]
[-122.20043945 625.32562256]
[-111.10733032 615.22894287]
[-100.01421356 605.13226318]
[-91.49324799 592.78747559]
[-85.98635864 578.83489990]
[-95.35752869 567.25708008]
[-97.69078064 552.44451904]
[-92.26057434 538.35980225]
[-80.43182373 528.82159424]
[-65.31842804 526.46942139]
[-59.81154251 512.51684570]
[-54.30465698 498.56430054]
[-48.79777145 484.61172485]
[-43.29088593 470.65914917]
[-37.78400040 456.70657349]
[-32.27711487 442.75399780]
[-34.80162048 428.07492065]
[-22.53820610 418.07894897]
[-17.03132057 404.12637329]
[-11.52443504 390.17379761]
[-12.50183392 387.56265259]
[-12.51220322 384.40994263]
[-11.34525204 381.07907104]
[-8.92490196 378.00241089]
[-5.32923031 375.63311768]
[0.91864359 361.99624634]
[7.16651726 348.35940552]
[13.41439152 334.72253418]
[19.66226578 321.08566284]
[25.81845665 307.40716553]
[31.88269043 293.68765259]
[37.94692230 279.96813965]
[44.01115417 266.24862671]
[50.07538986 252.52911377]
[56.13962173 238.80960083]
[60.98504257 224.61375427]
[64.57477570 210.04963684]
[68.16451263 195.48550415]
[71.75424957 180.92137146]
[75.34398651 166.35725403]
[78.93371582 151.79312134]
[82.52345276 137.22898865]
[86.11318970 122.66486359]
[89.70292664 108.10073853]
[87.79496002 93.22257996]
[80.64642334 80.03552246]
[73.49789429 66.84846497]
[66.66811371 60.80749130]
[66.34326172 53.43603134]
[59.37241745 40.15419006]
[52.40156937 26.87234879]
[45.43072128 13.59050941]
[38.45987320 0.30866894]
[31.48902702 -12.97317123]
[18.77444839 -24.18815231]
[26.03139687 -39.51045609]
[42.76382446 -36.77874756]
[44.77086639 -19.94401932]
[51.74171448 -6.66217852]
[58.71256256 6.61966181]
[65.68341064 19.90150261]
[72.65425873 33.18334198]
[79.62510681 46.46518326]
[86.68495178 59.69993210]
[93.83348846 72.88698578]
[100.98201752 86.07405090]
[108.29874420 84.42618561]
[122.93220520 81.13045502]
[130.24893188 79.48258972]
[131.05409241 64.50421143]
[131.85923767 49.52584076]
[132.66438293 34.54746246]
[133.46952820 19.56908798]
[134.27468872 4.59071255]
[129.08724976 -11.55013275]
[143.16128540 -21.00306892]
[156.14086914 -10.09588909]
[149.25306702 5.39586163]
[148.44790649 20.37423706]
[147.64276123 35.35261154]
[146.83761597 50.33098984]
[146.03245544 65.30936432]
[145.22731018 80.28774261]
[152.02462769 83.45737457]
[158.36412048 69.86286163]
[171.95852661 76.20259094]
[165.61923218 89.79665375]
[172.41654968 92.96628571]
[183.37310791 82.72159576]
[194.32966614 72.47689819]
[205.28622437 62.23220444]
[203.51885986 46.92917633]
[211.01368713 33.67470551]
[224.71405029 27.44862938]
[239.27917480 30.44784355]
[250.23573303 20.20314789]
[261.19229126 9.95845413]
[272.14886475 -0.28624055]
[272.84014893 -15.84772682]
[284.09759521 -26.08122444]
[298.92883301 -25.32628059]
[309.88540649 -35.57097626]
[314.13873291 -51.40894318]
[330.04922485 -55.38245392]
[341.24948120 -43.40390396]
[336.21768188 -27.79579544]
[320.13009644 -24.61441422]
[309.17352295 -14.36972046]
[308.93191528 0.47875509]
[297.96636963 11.02441216]
[282.39355469 10.67032051]
[271.43698120 20.91501427]
[260.48043823 31.15970993]
[249.52386475 41.40440369]
[251.53933716 56.13790131]
[244.40829468 69.38977814]
[230.68093872 75.97863770]
[215.53092957 73.18876648]
[204.57435608 83.43345642]
[193.61779785 93.67815399]
[182.66123962 103.92285156]
[104.26705170 111.69047546]
[100.67731476 126.25460052]
[97.08757782 140.81872559]
[93.49784851 155.38285828]
[89.90811157 169.94697571]
[86.31837463 184.51110840]
[82.72863770 199.07524109]
[79.13890839 213.63935852]
[75.54917145 228.20349121]
[80.06201172 225.18858337]
[84.95683289 222.68388367]
[99.82185364 224.69168091]
[114.68686676 226.69947815]
[127.10398865 216.92242432]
[142.78755188 218.87217712]
[152.43276978 231.39196777]
[150.31732178 247.05404663]
[137.69624329 256.56634521]
[122.05741882 254.28543091]
[112.67906952 241.56449890]
[97.81405640 239.55670166]
[82.94903564 237.54890442]
[69.85913849 244.87382507]
[63.79490280 258.59335327]
[57.73067093 272.31286621]
[51.66643906 286.03237915]
[45.60220337 299.75189209]
[39.53797150 313.47140503]
[38.93359375 322.56942749]
[33.29912949 327.33352661]
[27.05125618 340.97039795]
[20.80338097 354.60726929]
[14.55550766 368.24414062]
[8.30763435 381.88101196]
[2.42813516 395.68069458]
[-3.07875061 409.63327026]
[-8.58563614 423.58581543]
[-6.45501947 439.26290894]
[-18.32454300 448.26089478]
[-23.83142853 462.21347046]
[-29.33831406 476.16604614]
[-34.84519958 490.11862183]
[-40.35208511 504.07116699]
[-45.85897064 518.02374268]
[-51.36585617 531.97631836]
[-41.93294144 544.01654053]
[-39.80718231 559.06243896]
[-45.46032715 573.05914307]
[-57.28129578 582.28521729]
[-72.03379059 584.34179688]
[-77.54067230 598.29437256]
[-66.24655914 605.41802979]
[-61.12325668 621.70214844]
[-60.72053528 636.69671631]
[-60.31781387 651.69134521]
[-59.91509628 666.68591309]
[-49.92332458 682.16229248]
[-58.90121078 697.24877930]
[-58.29722214 712.23663330]
[-57.69323349 727.22442627]
[-49.40653229 740.70190430]
[-56.62508011 753.73040771]
[-56.02109146 768.71820068]
[-55.41710281 783.70605469]
[-42.43223572 792.20153809]
[-36.95224762 806.71875000]
[-41.08430481 821.67553711]
[-53.23955154 831.32067871]
[-68.74404144 831.94549561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 228]
[4 227]
[5 226]
[7 224]
[8 223]
[9 222]
[12 220]
[13 219]
[14 218]
[15 217]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[26 35]
[27 34]
[28 33]
[47 215]
[48 214]
[53 209]
[54 208]
[55 207]
[56 206]
[57 205]
[58 204]
[59 203]
[61 201]
[62 200]
[63 199]
[68 198]
[69 197]
[70 196]
[71 195]
[72 194]
[73 192]
[74 191]
[75 190]
[76 189]
[77 188]
[78 187]
[79 173]
[80 172]
[81 171]
[82 170]
[83 169]
[84 168]
[85 167]
[86 166]
[87 165]
[88 109]
[89 108]
[90 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
[131 164]
[132 163]
[133 162]
[134 161]
[138 157]
[139 156]
[140 155]
[141 154]
[144 151]
[145 150]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
