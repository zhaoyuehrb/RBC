%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAAUUACGUCUGGGUCCAAGCAAACAUGAGGCAGCUGCCAGCCGGCCUGGGCAGUCUUGUCUGCCUCGGCUGUGAAGUGGGGAGGCUGGCAACAGUUUUCUUCAGCGCCCAGGAUGCAGCCGGCUAAGGAAGUGACAAAGGCGUCGGACGGCAGCCUCCUGGGGGACCUCGGGCACACACCACUUAGCAAGAAGGAGGGUAUCAAGUGGCAGA\
) } def
/len { sequence length } bind def

/coor [
[162.30302429 323.03036499]
[156.27212524 315.89953613]
[151.75010681 307.71929932]
[148.91461182 298.80465698]
[147.87826538 289.49972534]
[148.68420410 280.16421509]
[151.30424500 271.15966797]
[155.63992310 262.83535767]
[161.52616882 255.51481628]
[168.73756409 249.48324585]
[162.39830017 235.88862610]
[156.05902100 222.29400635]
[149.71974182 208.69938660]
[143.38047791 195.10476685]
[136.94250488 181.55661011]
[130.40618896 168.05563354]
[123.86985779 154.55465698]
[117.33354187 141.05366516]
[110.79721832 127.55268860]
[103.64434052 125.29739380]
[102.90778351 140.27929688]
[102.17123413 155.26119995]
[104.84959412 170.02014160]
[97.58271027 183.14234924]
[83.65155029 188.70318604]
[69.34600830 184.19194031]
[61.12498856 171.64543152]
[62.70027161 156.72837830]
[73.35874939 146.17666626]
[81.34866333 133.48173523]
[89.33858490 120.78681183]
[82.18570709 118.53151703]
[69.08762360 125.84178925]
[55.98953629 133.15206909]
[48.05346298 147.50305176]
[31.65434456 147.53512573]
[23.66219139 133.21530151]
[32.29864502 119.27457428]
[48.67926025 120.05397797]
[61.77734756 112.74370575]
[74.87543488 105.43342590]
[73.57307434 98.04737091]
[59.47757721 92.91735840]
[70.96834564 83.27525330]
[69.66598511 75.88919830]
[54.85755157 73.49959564]
[40.04911423 71.10999298]
[25.24067688 68.72039032]
[10.43224049 66.33078766]
[-4.42429686 71.77081299]
[-15.75642490 62.10478210]
[-30.56486130 59.71517563]
[-45.37329865 57.32557297]
[-60.18173599 54.93597031]
[-74.99017334 52.54636765]
[-89.79860687 50.15676498]
[-102.46317291 59.61109161]
[-118.09137726 57.25845718]
[-127.41127777 44.49464417]
[-124.89354706 28.89218903]
[-112.03190613 19.70775604]
[-96.45694733 22.39030647]
[-87.40900421 35.34832764]
[-72.60057068 37.73793030]
[-57.79213333 40.12753296]
[-42.98369598 42.51713943]
[-28.17525864 44.90674210]
[-13.36682224 47.29634476]
[0.43051648 41.68539810]
[12.82184315 51.52234650]
[27.63027954 53.91194916]
[42.43871689 56.30155563]
[57.24715424 58.69115829]
[72.05558777 61.08076096]
[76.62129974 55.13061142]
[64.72113800 45.99900436]
[73.85292816 34.09898758]
[85.75272369 43.23030853]
[90.31843567 37.28015900]
[84.17755127 23.59478378]
[77.83827209 10.00016594]
[71.30194855 -3.50081515]
[64.76563263 -17.00179672]
[58.22930908 -30.50277710]
[51.69298553 -44.00375748]
[45.15666199 -57.50474167]
[38.62034225 -71.00572205]
[32.08401871 -84.50669861]
[25.54769707 -98.00768280]
[19.01137543 -111.50866699]
[5.14611149 -120.26574707]
[6.06761408 -136.63897705]
[20.82791901 -143.78498840]
[34.24288940 -134.35256958]
[32.51235580 -118.04498291]
[39.04867935 -104.54400635]
[45.58499908 -91.04302216]
[52.12132263 -77.54204559]
[58.65764618 -64.04106140]
[65.19396973 -50.54008102]
[71.73028564 -37.03910065]
[78.26660919 -23.53811836]
[84.80293274 -10.03713703]
[91.33925629 3.46384382]
[95.47278595 5.84927988]
[98.15364838 10.85490322]
[97.86292267 17.45389748]
[104.00380707 31.13927460]
[127.24268341 65.95490265]
[117.52355194 94.97703552]
[128.87277222 85.16912079]
[140.22198486 75.36120605]
[151.57121277 65.55329895]
[162.92044067 55.74538422]
[174.26965332 45.93746948]
[185.61888123 36.12955475]
[191.00117493 21.25200653]
[205.68994141 18.78429794]
[217.03915405 8.97638416]
[222.42144775 -5.90116501]
[237.11021423 -8.36887455]
[248.45944214 -18.17678833]
[259.80865479 -27.98470116]
[271.15786743 -37.79261398]
[268.89273071 -44.68095016]
[268.39178467 -51.89281845]
[269.67504883 -58.98494339]
[272.65310669 -65.52404785]
[277.13345337 -71.11335754]
[282.83267212 -75.41664886]
[289.39459229 -78.17847443]
[296.41232300 -79.23930359]
[303.45364380 -78.54473114]
[310.08755493 -76.14810181]
[315.91061401 -72.20664978]
[328.32174683 -80.63068390]
[340.73284912 -89.05471039]
[353.14395142 -97.47874451]
[355.86788940 -113.04652405]
[368.84988403 -122.06000519]
[384.38800049 -119.17164612]
[393.26373291 -106.09505463]
[390.21124268 -90.58835602]
[377.04156494 -81.85137939]
[361.56799316 -85.06763458]
[349.15689087 -76.64360046]
[336.74575806 -68.21956635]
[324.33465576 -59.79553604]
[322.60537720 -36.79570389]
[304.21508789 -22.44356155]
[280.96578979 -26.44339371]
[269.61657715 -16.63547897]
[258.26733398 -6.82756662]
[246.91812134 2.98034692]
[242.34759521 17.15636826]
[226.84707642 20.32560539]
[215.49784851 30.13351822]
[210.92732239 44.30953979]
[195.42678833 47.47877884]
[184.07757568 57.28668976]
[172.72834778 67.09460449]
[161.37911987 76.90251923]
[150.02990723 86.71043396]
[138.68067932 96.51834106]
[127.33145905 106.32625580]
[124.29819489 121.01636505]
[130.83451843 134.51734924]
[137.37084961 148.01832581]
[143.90716553 161.51931763]
[150.44348145 175.02029419]
[156.99716187 181.37771606]
[156.97509766 188.76550293]
[163.31436157 202.36010742]
[169.65364075 215.95472717]
[175.99291992 229.54934692]
[182.33218384 243.14396667]
[203.56887817 242.08508301]
[223.12014771 250.33128357]
[237.12582397 266.21307373]
[242.83863831 286.55752563]
[239.16299438 307.32211304]
[226.86495972 324.39801025]
[234.92445374 337.04885864]
[242.98394775 349.69973755]
[251.04344177 362.35061646]
[259.10293579 375.00149536]
[267.16244507 387.65234375]
[285.44570923 396.14843750]
[285.44018555 415.48675537]
[293.86422729 427.89788818]
[309.17648315 426.70193481]
[323.02835083 433.33679199]
[331.69372559 446.01776123]
[332.84167480 461.33370972]
[326.16342163 475.16467285]
[313.45535278 483.79028320]
[298.13589478 484.89022827]
[284.32589722 478.16864014]
[275.74020386 465.43359375]
[274.68829346 450.11077881]
[281.45312500 436.32189941]
[273.02908325 423.91079712]
[262.86538696 422.90185547]
[254.76333618 416.32855225]
[251.54847717 406.17251587]
[254.51155090 395.71185303]
[246.45205688 383.06097412]
[238.39256287 370.41009521]
[230.33306885 357.75924683]
[222.27357483 345.10836792]
[214.21408081 332.45748901]
[205.37420654 335.32266235]
[196.13677979 336.40277100]
[186.85888672 335.65301514]
[177.89982605 333.09936523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[32 41]
[33 40]
[34 39]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[79 108]
[80 107]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[110 165]
[111 164]
[112 163]
[113 162]
[114 161]
[115 160]
[116 159]
[118 157]
[119 156]
[121 154]
[122 153]
[123 152]
[124 151]
[135 148]
[136 147]
[137 146]
[138 145]
[182 211]
[183 210]
[184 209]
[185 208]
[186 207]
[187 206]
[189 202]
[190 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
