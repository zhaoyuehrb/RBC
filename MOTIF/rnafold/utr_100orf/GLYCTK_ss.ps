%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCCCUAGUACUUCCGUUCUCCAGCGCUGGGCACCGCGGCCGGAGCUGUGGGCUGGCAGCCAUGGGUGCCAGGCAGUGCUGAGAGCAGUGGGGCAUGGCUGCAGCCCUGCAGGUCCUGCCCCGCUUGGCCCGAGCCCCCUUGCAUCCACUCCUCUGGCGGGGCUCAGUGGCCCGUCUGGCCAGCAGCAUGGCCU\
) } def
/len { sequence length } bind def

/coor [
[95.16363525 165.95143127]
[92.48848724 180.71096802]
[85.29574585 193.87396240]
[74.31931305 204.09736633]
[60.67915726 210.33804321]
[45.76702499 211.95925903]
[31.10445213 208.79556274]
[18.18750763 201.16978455]
[8.33415318 189.85998535]
[2.54975843 176.02015686]
[1.42452478 161.06242371]
[5.07326365 146.51296997]
[13.12368107 133.85632324]
[24.75436783 124.38388062]
[38.77860260 119.06214905]
[53.76477814 118.43405151]
[67.69254303 112.86472321]
[81.62030792 107.29539490]
[66.72746277 105.50561523]
[51.83462524 103.71583557]
[36.94178772 101.92604828]
[22.04894638 100.13626862]
[7.15610695 98.34648895]
[-1.74942446 100.43109894]
[-7.95924950 96.40757751]
[-22.82165527 94.38053131]
[-37.68405914 92.35349274]
[-52.54646683 90.32644653]
[-67.40887451 88.29940796]
[-82.27127838 86.27236176]
[-97.13368225 84.24531555]
[-100.89890289 93.45455933]
[-108.73564148 101.07736206]
[-119.87397766 105.32643890]
[-132.77796936 104.81540680]
[-145.35632324 98.87591553]
[-160.18450928 101.13970184]
[-175.01269531 103.40348816]
[-189.84089661 105.66728210]
[-204.66908264 107.93106842]
[-219.49726868 110.19486237]
[-234.32546997 112.45864868]
[-246.78227234 123.12448883]
[-262.15545654 117.41506958]
[-264.63040161 101.20375824]
[-251.66110229 91.16735840]
[-236.58926392 97.63045502]
[-221.76106262 95.36666870]
[-206.93287659 93.10287476]
[-192.10467529 90.83908844]
[-177.27648926 88.57530212]
[-162.44830322 86.31150818]
[-147.62010193 84.04772186]
[-145.12004089 69.25685883]
[-142.62019348 54.46730804]
[-155.88058472 47.45576096]
[-169.14099121 40.44421387]
[-182.40139771 33.43266678]
[-195.66178894 26.42112160]
[-208.92219543 19.40957451]
[-217.98294067 18.16186333]
[-222.33682251 12.17902279]
[-235.48373413 4.95691061]
[-252.27725220 2.63015437]
[-254.69033813 -14.15118504]
[-239.23283386 -21.11550331]
[-228.26162720 -8.18999386]
[-215.11471558 -0.96788126]
[-201.91064453 6.14917469]
[-188.65023804 13.16072178]
[-175.38984680 20.17226791]
[-162.12944031 27.18381500]
[-148.86904907 34.19536209]
[-135.60864258 41.20690918]
[-105.23738098 46.51117325]
[-95.10663605 69.38291168]
[-80.24423218 71.40995789]
[-65.38182831 73.43699646]
[-50.51942062 75.46404266]
[-35.65701675 77.49108887]
[-20.79461098 79.51812744]
[-5.93220615 81.54517365]
[8.94588947 83.45364380]
[23.83872986 85.24343109]
[38.73156738 87.03321075]
[53.62440872 88.82299042]
[68.51725006 90.61277771]
[83.41008759 92.40255737]
[96.00532532 84.25639343]
[100.48104095 69.93968964]
[104.95676422 55.62298965]
[109.43247986 41.30628967]
[113.90820312 26.98958778]
[118.38391876 12.67288589]
[122.85964203 -1.64381552]
[127.33535767 -15.96051693]
[131.81108093 -30.27721786]
[128.54396057 -45.75741196]
[139.72637939 -55.59625244]
[144.20208740 -69.91294861]
[148.67781067 -84.22965240]
[153.03923035 -98.58158875]
[157.28608704 -112.96784210]
[161.53292847 -127.35409546]
[165.77978516 -141.74034119]
[161.41271973 -157.54733276]
[173.10968018 -169.04138184]
[188.83782959 -164.39840698]
[192.41740417 -148.39468384]
[180.16603088 -137.49349976]
[175.91918945 -123.10724640]
[171.67233276 -108.72099304]
[167.42549133 -94.33473969]
[168.54818726 -87.02104187]
[162.99450684 -79.75393677]
[158.51879883 -65.43723297]
[154.04307556 -51.12053299]
[157.63034058 -36.66436386]
[146.12777710 -25.80149841]
[141.65206909 -11.48479748]
[137.17634583 2.83190393]
[132.70062256 17.14860535]
[128.22489929 31.46530724]
[123.74918365 45.78200912]
[119.27346802 60.09870911]
[114.79774475 74.41541290]
[110.32202911 88.73210907]
[121.37039185 82.46088409]
[134.20832825 79.24653625]
[149.10116577 81.03631592]
[163.99400330 82.82610321]
[178.88684082 84.61588287]
[197.03410339 75.85601044]
[212.00125122 88.08764648]
[226.94360352 89.40160370]
[241.88594055 90.71556091]
[256.82827759 92.02951050]
[271.77062988 93.34346771]
[286.71295166 94.65742493]
[301.65530396 95.97138214]
[316.60763550 97.16615295]
[331.56903076 98.24166107]
[338.02600098 84.50586700]
[349.01156616 74.03297424]
[363.04006958 68.23934937]
[378.21420288 67.90854645]
[392.48184204 73.08528900]
[403.91342163 83.06948090]
[410.96286011 96.51082611]
[412.67678833 111.59150696]
[408.82345581 126.27197266]
[399.92395020 138.56681824]
[387.18185425 146.81326294]
[372.32049561 149.89605713]
[357.34967041 147.39825439]
[344.29409790 139.65768433]
[334.91943359 127.72117615]
[330.49353027 113.20305634]
[315.53213501 112.12754059]
[308.62710571 114.78673553]
[300.34133911 110.91371918]
[285.39898682 109.59976196]
[270.45666504 108.28581238]
[255.51432800 106.97185516]
[240.57197571 105.65789795]
[225.62963867 104.34394073]
[210.68730164 103.02999115]
[203.46762085 110.28105164]
[193.23248291 112.39962006]
[183.31927490 108.44794464]
[177.09706116 99.50872803]
[162.20422363 97.71894073]
[147.31138611 95.92916107]
[132.41854858 94.13937378]
[127.62313080 99.90600586]
[141.55557251 105.46361542]
[140.57514954 120.43154144]
[126.03679657 124.12426758]
[118.03231049 111.43927765]
[113.23690796 117.20590973]
[117.71262360 131.52261353]
[122.18834686 145.83930969]
[126.66406250 160.15600586]
[131.13978577 174.47271729]
[145.25505066 181.58149719]
[150.12997437 196.61515808]
[142.87234497 210.65446472]
[127.78799438 215.37017822]
[113.82618713 207.96452332]
[109.27023315 192.83116150]
[116.82308197 178.94842529]
[112.34735870 164.63172913]
[107.87164307 150.31503296]
[103.39591980 135.99832153]
[98.92020416 121.68162537]
[95.98422241 136.39149475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 88]
[19 87]
[20 86]
[21 85]
[22 84]
[23 83]
[25 82]
[26 81]
[27 80]
[28 79]
[29 78]
[30 77]
[31 76]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[62 68]
[63 67]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[99 117]
[100 116]
[101 115]
[102 113]
[103 112]
[104 111]
[105 110]
[129 174]
[130 173]
[131 172]
[132 171]
[134 167]
[135 166]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[141 159]
[142 158]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
