%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCGCUGACGGGUCGUUAGCGGAUACGGCGGCCGCAGGGGCGGAGUCAAGGGCCUUUGCCCGCCUUGGCGGCCGGCUCUACGUUCCCUGUUCUCGCCUGCAGCUCCGCCAUGGCUCCUAAAGGCAGCUCCAAACAGCAGUCUGAGGAGGACCUGCUCCUGCAGGAUUUCAGCCGCAAUCUCUCGGCCAAGUCCUCCGCGCUCUUCUUCG\
) } def
/len { sequence length } bind def

/coor [
[99.53033447 376.86114502]
[92.68090057 390.20599365]
[85.83145905 403.55084229]
[78.98201752 416.89569092]
[72.53104401 430.43768311]
[66.48419189 444.16485596]
[60.43733978 457.89202881]
[54.39048767 471.61923218]
[48.34363556 485.34640503]
[42.29678345 499.07357788]
[36.24993515 512.80078125]
[30.20308113 526.52795410]
[29.35123825 543.46051025]
[12.84461975 547.32934570]
[4.55749130 532.53881836]
[16.47589684 520.48107910]
[22.52274895 506.75393677]
[28.56960106 493.02673340]
[34.61645126 479.29956055]
[40.66330338 465.57235718]
[46.71015549 451.84518433]
[52.75700760 438.11801147]
[58.80385590 424.39080811]
[57.91646194 421.73251343]
[58.02817535 418.56265259]
[59.33906555 415.25988770]
[61.90862274 412.26818848]
[65.63716125 410.04626465]
[72.48660278 396.70141602]
[79.33604431 383.35653687]
[86.18547821 370.01168823]
[92.13045502 356.24008179]
[97.14453888 342.10293579]
[102.15863037 327.96578979]
[113.56690216 306.99734497]
[130.84315491 302.06610107]
[127.97132874 287.34356689]
[125.09949493 272.62106323]
[122.22766876 257.89852905]
[119.35583496 243.17601013]
[116.48400116 228.45349121]
[113.61216736 213.73097229]
[110.74034119 199.00845337]
[107.86850739 184.28593445]
[104.99667358 169.56341553]
[100.63107300 163.60063171]
[102.19306183 154.60154724]
[99.53971100 139.83808899]
[96.88636017 125.07462311]
[80.69210052 121.77674103]
[68.03231049 107.94448090]
[65.55843353 87.10468292]
[50.69164276 85.11006927]
[35.82485199 83.11544800]
[20.95805931 81.12083435]
[6.00585508 87.85608673]
[-7.14324760 78.05644226]
[-4.96257973 61.80292511]
[10.30457497 55.81576920]
[22.95267487 66.25404358]
[37.81946564 68.24865723]
[52.68626022 70.24327850]
[67.55305481 72.23789215]
[76.20720673 59.98613358]
[69.35776520 46.64127731]
[62.50832748 33.29642105]
[49.32321930 24.55207634]
[50.39511871 9.69609070]
[43.54568100 -3.64876533]
[36.69624329 -16.99362183]
[29.84680367 -30.33847809]
[22.99736595 -43.68333435]
[16.14792633 -57.02819061]
[10.80970478 -60.92672348]
[8.57634544 -66.15148926]
[9.29987717 -70.87153625]
[2.84889936 -84.41350555]
[-3.60207868 -97.95547485]
[-10.05305672 -111.49744415]
[-22.97324944 -120.62866211]
[-21.46158791 -135.44636536]
[-27.91256523 -148.98832703]
[-40.83275604 -158.11955261]
[-39.32109451 -172.93724060]
[-45.77207565 -186.47921753]
[-61.06842804 -187.00852966]
[-74.36094666 -194.59584045]
[-82.59511566 -207.49766541]
[-83.87877655 -222.74925232]
[-77.91695404 -236.84588623]
[-66.07962799 -246.54827881]
[-51.08693695 -249.62689209]
[-36.38409042 -245.37426758]
[-25.34968758 -234.76763916]
[-20.51936150 -220.24432373]
[-23.00308037 -205.14169312]
[-32.23010635 -192.93019104]
[-25.77912903 -179.38822937]
[-13.32035351 -171.22561646]
[-14.37059784 -155.43930054]
[-7.91962004 -141.89733887]
[4.53915453 -133.73472595]
[3.48891068 -117.94841766]
[9.93988895 -104.40645599]
[16.39086723 -90.86448669]
[22.84184456 -77.32251740]
[29.49278259 -63.87762833]
[36.34222031 -50.53277206]
[43.19166183 -37.18791580]
[50.04109955 -23.84305954]
[56.89053726 -10.49820423]
[63.73997498 2.84665251]
[76.43516541 10.63648224]
[75.85317993 26.44698143]
[82.70262146 39.79183960]
[89.55206299 53.13669586]
[104.35321808 55.57098770]
[115.11582184 45.12272263]
[125.87843323 34.67445755]
[136.64103699 24.22619057]
[137.61203003 11.36512375]
[146.79067993 2.88433552]
[158.88667297 2.92938352]
[169.80291748 -7.35825157]
[180.71917725 -17.64588547]
[191.63542175 -27.93352127]
[196.37193298 -43.02908325]
[210.94078064 -46.12716293]
[221.85702515 -56.41479874]
[232.77328491 -66.70243073]
[232.99104309 -82.50522614]
[244.37736511 -93.46546936]
[260.17697144 -93.08065033]
[271.01623535 -81.57907867]
[270.46438599 -65.78442383]
[258.84884644 -55.06738281]
[243.06091309 -55.78618240]
[232.14466858 -45.49854660]
[221.22840881 -35.21091080]
[217.27270508 -20.85118866]
[201.92306519 -17.01726913]
[191.00680542 -6.72963333]
[180.09056091 3.55800128]
[169.17430115 13.84563637]
[165.04463196 30.90213585]
[147.08930969 34.98880005]
[136.32670593 45.43706512]
[125.56408691 55.88533020]
[114.80148315 66.33359528]
[131.00547791 98.99227905]
[111.64981842 122.42127228]
[114.30316925 137.18472290]
[116.95652771 151.94818115]
[119.71919250 166.69158936]
[122.59102631 181.41410828]
[125.46286011 196.13662720]
[128.33468628 210.85914612]
[131.20652771 225.58166504]
[134.07835388 240.30418396]
[136.95018005 255.02670288]
[139.82202148 269.74920654]
[142.69384766 284.47174072]
[145.56567383 299.19424438]
[153.66679382 311.81851196]
[165.85409546 320.56320190]
[178.04139709 329.30789185]
[190.22869873 338.05261230]
[202.41600037 346.79730225]
[214.60330200 355.54199219]
[226.79060364 364.28668213]
[239.62062073 362.96734619]
[249.59129333 370.50109863]
[251.68661499 382.41430664]
[263.74301147 391.33862305]
[275.79937744 400.26296997]
[287.85577393 409.18728638]
[302.61441040 404.39538574]
[317.36056519 409.22555542]
[326.42401123 421.82052612]
[326.31973267 437.33724976]
[317.08776855 449.80923462]
[302.27801514 454.44076538]
[287.58511353 449.45089722]
[278.65881348 436.75836182]
[278.93142700 421.24365234]
[266.87506104 412.31933594]
[254.81866455 403.39501953]
[242.76228333 394.47067261]
[225.24426270 393.42327881]
[218.04591370 376.47396851]
[205.85861206 367.72927856]
[193.67131042 358.98458862]
[181.48400879 350.23989868]
[169.29670715 341.49520874]
[157.10940552 332.75051880]
[144.92210388 324.00582886]
[137.76551819 326.24932861]
[142.25230408 340.56256104]
[127.93899536 345.04913330]
[123.45235443 330.73635864]
[116.29577637 332.97988892]
[111.28169250 347.11703491]
[106.26760101 361.25418091]
[118.97402191 353.28253174]
[133.97390747 353.33993530]
[146.61897278 361.40853882]
[152.99061584 374.98800659]
[151.11436462 389.87020874]
[141.57164001 401.44329834]
[127.31961823 406.12088013]
[112.77485657 402.45346069]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[12 16]
[32 203]
[33 202]
[34 201]
[36 163]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[47 153]
[48 152]
[49 151]
[52 63]
[53 62]
[54 61]
[55 60]
[64 116]
[65 115]
[66 114]
[68 112]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[76 106]
[77 105]
[78 104]
[79 103]
[81 101]
[82 100]
[84 98]
[85 97]
[117 149]
[118 148]
[119 147]
[120 146]
[123 144]
[124 143]
[125 142]
[126 141]
[128 139]
[129 138]
[130 137]
[164 196]
[165 195]
[166 194]
[167 193]
[168 192]
[169 191]
[170 190]
[173 188]
[174 187]
[175 186]
[176 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
