%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCCAGCUGCCUGAGACCCUCCUGCAGCCUUCUCAAGGGACAGCCCCACUCUGCCUCUUGCUCCUCCAGGGCAGCACCAUGCAGCCCCUGUGGCUCUGCUGGGCACUCUGGGUGUUGCCCCUGGCCAGCCCCGGGGCCGCCCUGACCGGGGAGCAGCUCCUGGGCAGCCUGCUGCGGC\
) } def
/len { sequence length } bind def

/coor [
[80.26110840 241.73712158]
[71.61414337 254.04122925]
[58.53643036 261.34072876]
[43.64796066 262.23458862]
[38.05838013 276.15423584]
[32.58980560 290.12185669]
[27.24265480 304.13644409]
[21.89550400 318.15100098]
[25.02652550 334.24847412]
[12.47535706 344.80310059]
[-2.84643531 338.95718384]
[-5.17710543 322.72451782]
[7.88094044 312.80383301]
[13.22809124 298.78927612]
[18.57524300 284.77471924]
[18.02053642 277.38452148]
[24.13873100 270.56466675]
[29.72831345 256.64501953]
[19.59285164 245.70252991]
[15.19540977 231.38568115]
[17.45939636 216.51843262]
[25.98871803 204.05766296]
[39.13582993 196.50514221]
[54.31975937 195.40533447]
[59.90934372 181.48568726]
[65.49892426 167.56604004]
[71.08850861 153.64639282]
[76.67809296 139.72674561]
[82.26766968 125.80709839]
[87.85725403 111.88745117]
[76.47029877 121.65152740]
[61.48909760 122.40226746]
[49.18304062 113.82549286]
[44.70201492 99.51045227]
[49.92125702 85.44775391]
[62.65659714 77.52240753]
[77.57850647 79.05104065]
[88.44298553 89.39507294]
[83.58544922 75.20336914]
[78.72792053 61.01166916]
[73.87039185 46.81996918]
[62.08104706 36.26905060]
[65.27986908 21.72199440]
[60.42234039 7.53029346]
[55.56481171 -6.66140890]
[50.70728302 -20.85311127]
[45.72677612 -35.00212479]
[40.62366486 -49.10737991]
[35.52055740 -63.21263885]
[30.41744804 -77.31789398]
[15.65468979 -81.71871185]
[6.42190218 -93.82692719]
[6.09313965 -108.87206268]
[14.58495331 -121.07972717]
[9.48184395 -135.18498230]
[4.37873507 -149.29023743]
[-0.72437388 -163.39549255]
[-5.82748318 -177.50074768]
[-15.95730114 -181.55477905]
[-22.04589272 -190.34266663]
[-22.27276802 -200.81129456]
[-16.80492973 -209.48249817]
[-21.41541672 -223.75637817]
[-36.34910965 -227.06274414]
[-47.54882050 -237.33227539]
[-52.07439804 -251.73315430]
[-48.80598068 -266.36782837]
[-38.71907043 -277.32772827]
[-43.32955551 -291.60162354]
[-47.94004440 -305.87548828]
[-52.92055130 -320.02450562]
[-58.26770020 -334.03906250]
[-63.61485291 -348.05361938]
[-68.96200562 -362.06817627]
[-81.11043549 -372.20358276]
[-78.41841888 -386.85287476]
[-83.76557159 -400.86746216]
[-89.11272430 -414.88201904]
[-100.40812683 -427.52520752]
[-91.38591766 -441.87915039]
[-75.09532166 -437.18310547]
[-75.09815979 -420.22915649]
[-69.75100708 -406.21459961]
[-64.40385437 -392.20004272]
[-52.63788986 -383.06707764]
[-54.94744110 -367.41534424]
[-49.60028839 -353.40078735]
[-44.25313950 -339.38619995]
[-38.90598679 -325.37164307]
[-35.82669449 -323.60235596]
[-33.46161270 -320.24008179]
[-32.55624771 -315.64163208]
[-33.66617203 -310.48596191]
[-29.05568504 -296.21209717]
[-24.44519806 -281.93823242]
[-9.85292244 -278.94973755]
[1.35882604 -268.99218750]
[6.11247540 -254.66496277]
[3.03632712 -239.78430176]
[-7.14154577 -228.36685181]
[-2.53105879 -214.09298706]
[12.73115826 -202.24613953]
[8.27777386 -182.60386658]
[13.38088322 -168.49861145]
[18.48399162 -154.39334106]
[23.58710098 -140.28808594]
[28.69021034 -126.18283081]
[43.02713013 -122.23432159]
[52.40076828 -110.46151733]
[53.05238342 -95.24873352]
[44.52270508 -82.42100525]
[49.62581253 -68.31575012]
[54.72892380 -54.21049118]
[59.83203125 -40.10523224]
[65.07843018 -34.87091446]
[64.89898682 -25.71063995]
[69.75651550 -11.51893806]
[74.61404419 2.67276359]
[79.47157288 16.86446571]
[90.91347504 26.40029716]
[88.06209564 41.96243668]
[92.91962433 56.15414047]
[97.77715302 70.34584045]
[102.63468170 84.53754425]
[112.72312927 95.63813782]
[126.38720703 101.82627869]
[140.05128479 108.01441193]
[152.39276123 104.20580292]
[163.65533447 109.66200256]
[168.02572632 120.95957184]
[181.58035278 127.38392639]
[195.13496399 133.80828857]
[208.68957520 140.23263550]
[224.47380066 139.15138245]
[232.66087341 151.59408569]
[246.21548462 158.01844788]
[259.77011108 164.44281006]
[273.32470703 170.86715698]
[286.87933350 177.29151917]
[302.66354370 176.21026611]
[310.85061646 188.65296936]
[324.40524292 195.07733154]
[338.01510620 201.38380432]
[351.67916870 207.57194519]
[365.34326172 213.76008606]
[380.80334473 209.47457886]
[393.70800781 219.00605774]
[394.15789795 235.04280090]
[381.80789185 245.28279114]
[366.13186646 241.87077332]
[359.15512085 227.42416382]
[345.49105835 221.23602295]
[331.82696533 215.04788208]
[324.41671753 215.15289307]
[317.98089600 208.63194275]
[304.42626953 202.20758057]
[289.61157227 203.74836731]
[280.45498657 190.84613037]
[266.90036011 184.42178345]
[253.34574890 177.99742126]
[239.79113770 171.57305908]
[226.23651123 165.14871216]
[211.42181396 166.68948364]
[202.26522827 153.78726196]
[188.71060181 147.36289978]
[175.15599060 140.93855286]
[161.60137939 134.51419067]
[144.22492981 136.88560486]
[133.86314392 121.67848969]
[120.19907379 115.49034882]
[106.53499603 109.30221558]
[105.05417633 113.55615997]
[101.77690125 117.47702789]
[96.18731689 131.39668274]
[90.59774017 145.31632996]
[85.00815582 159.23597717]
[79.41857147 173.15562439]
[73.82898712 187.07527161]
[68.23941040 200.99491882]
[78.44583893 212.29049683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 18]
[5 17]
[6 15]
[7 14]
[8 13]
[24 179]
[25 178]
[26 177]
[27 176]
[28 175]
[29 174]
[30 173]
[38 124]
[39 123]
[40 122]
[41 121]
[43 119]
[44 118]
[45 117]
[46 116]
[47 114]
[48 113]
[49 112]
[50 111]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[62 101]
[63 100]
[68 95]
[69 94]
[70 93]
[71 89]
[72 88]
[73 87]
[74 86]
[76 84]
[77 83]
[78 82]
[125 171]
[126 170]
[127 169]
[130 167]
[131 166]
[132 165]
[133 164]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[141 156]
[142 155]
[143 153]
[144 152]
[145 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
