%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACGCUGGUAGCUCCUGGCCAGCUCAAGGUGUUUCCUUUUGCCUGGUAACCAGGAGGAGUGGCUGAGGCAGGGCAUGGAGCGGAGCAACGCAGCUACAAAGUGCGGAGAGGAGCCCCGCUCUGGAUCCCGCCGGCUCCCCAAGGCUGAAGGAGACAAGUCUGGAUCCGCAGGAG\
) } def
/len { sequence length } bind def

/coor [
[89.71130371 134.34162903]
[82.23548889 133.73983765]
[75.04675293 146.90502930]
[73.67230225 155.96896362]
[67.61039734 160.23936462]
[60.18782425 173.27413940]
[52.76524734 186.30891418]
[45.34267426 199.34368896]
[37.92009735 212.37846375]
[30.49752426 225.41325378]
[37.01557159 239.49496460]
[33.97874069 254.71195984]
[22.55474663 265.21301270]
[7.13635397 266.96023560]
[-6.34775257 259.28179932]
[-12.71265888 245.13020325]
[-9.51092815 229.94703674]
[2.02630830 219.57052612]
[17.46274757 217.99067688]
[24.88532257 204.95590210]
[32.30789948 191.92112732]
[39.73047256 178.88633728]
[47.15304947 165.85156250]
[54.57562256 152.81678772]
[61.88156891 139.71629333]
[69.07030487 126.55110931]
[62.91982651 109.97988892]
[64.56871033 93.42279816]
[72.79090881 80.16143799]
[85.14479828 72.43804169]
[98.61446381 71.08592987]
[101.80294037 56.42872620]
[104.99142456 41.77152252]
[108.17990112 27.11432076]
[111.36837769 12.45711708]
[114.55686188 -2.20008588]
[117.74533844 -16.85728836]
[120.93382263 -31.51449203]
[124.12229919 -46.17169571]
[127.31077576 -60.82889938]
[122.68373871 -75.95837402]
[132.94958496 -86.75010681]
[136.13807678 -101.40731049]
[139.32655334 -116.06451416]
[142.51502991 -130.72171021]
[134.18147278 -143.19375610]
[119.41980743 -145.85705566]
[102.75879669 -142.71907043]
[95.13121796 -157.86029053]
[107.56918335 -169.38128662]
[122.08310699 -160.61872864]
[136.84477234 -157.95542908]
[147.48638916 -169.25680542]
[160.57165527 -170.97091675]
[165.56193542 -185.11648560]
[165.46882629 -194.28356934]
[170.76957703 -199.46865845]
[176.01153564 -213.52290344]
[181.25350952 -227.57714844]
[186.49546814 -241.63139343]
[191.73742676 -255.68563843]
[196.85375977 -269.78610229]
[201.84402466 -283.93167114]
[206.83430481 -298.07723999]
[193.23725891 -291.74319458]
[178.71159363 -295.48553467]
[169.86788940 -307.60119629]
[170.73086548 -322.57635498]
[180.90779114 -333.59588623]
[195.76718140 -335.64486694]
[208.54661560 -327.79080200]
[213.43019104 -313.60763550]
[220.14445496 -327.02102661]
[226.85871887 -340.43438721]
[221.02787781 -356.91104126]
[228.75094604 -372.21313477]
[244.82423401 -377.11187744]
[251.29800415 -390.64297485]
[257.77178955 -404.17407227]
[264.24554443 -417.70513916]
[270.71932983 -431.23623657]
[277.19311523 -444.76730347]
[283.66687012 -458.29840088]
[290.14065552 -471.82949829]
[289.11697388 -487.61755371]
[301.58947754 -495.75915527]
[308.06326294 -509.29025269]
[299.23727417 -529.20611572]
[307.82394409 -548.91900635]
[327.88473511 -555.83587646]
[333.12667847 -569.89007568]
[338.36865234 -583.94433594]
[343.61062622 -597.99859619]
[343.68115234 -607.16589355]
[349.07360840 -612.25549316]
[354.56558228 -626.21392822]
[351.60140991 -642.34301758]
[364.26119995 -652.76708984]
[379.52163696 -646.76281738]
[381.68411255 -630.50689697]
[368.52401733 -620.72198486]
[363.03204346 -606.76354980]
[357.66485596 -592.75665283]
[352.42291260 -578.70239258]
[347.18093872 -564.64813232]
[341.93896484 -550.59387207]
[348.00897217 -544.35980225]
[351.72784424 -536.44531250]
[352.66171265 -527.70684814]
[350.67984009 -519.10034180]
[345.97195435 -511.57659912]
[339.03057861 -505.97628784]
[330.59951782 -502.93612671]
[321.59436035 -502.81646729]
[315.12057495 -489.28540039]
[316.60726929 -474.46517944]
[303.67172241 -465.35571289]
[297.19796753 -451.82461548]
[290.72418213 -438.29354858]
[284.25042725 -424.76245117]
[277.77664185 -411.23138428]
[271.30285645 -397.70028687]
[264.82910156 -384.16918945]
[258.35531616 -370.63812256]
[264.30468750 -359.18743896]
[262.53625488 -346.20855713]
[253.47471619 -336.48187256]
[240.27209473 -333.72015381]
[233.55783081 -320.30676270]
[226.84358215 -306.89337158]
[220.97987366 -293.08697510]
[215.98959351 -278.94140625]
[210.99932861 -264.79583740]
[211.74166870 -257.41802979]
[205.79167175 -250.44367981]
[200.54971313 -236.38943481]
[195.30775452 -222.33517456]
[190.06579590 -208.28092957]
[184.82382202 -194.22668457]
[179.70750427 -180.12622070]
[174.71722412 -165.98065186]
[181.65142822 -142.71658325]
[157.17222595 -127.53323364]
[153.98374939 -112.87602997]
[150.79527283 -98.21883392]
[147.60679626 -83.56163025]
[152.46189880 -69.48052979]
[141.96798706 -57.64041901]
[138.77949524 -42.98321533]
[135.59101868 -28.32601166]
[132.40254211 -13.66880989]
[129.21406555 0.98839349]
[126.02558136 15.64559650]
[122.83710480 30.30279922]
[119.64862823 44.96000290]
[116.46014404 59.61720657]
[113.27166748 74.27440643]
[129.75807190 86.00247192]
[135.97509766 107.86266327]
[126.28433228 131.15672302]
[131.27459717 145.30229187]
[136.26487732 159.44786072]
[141.25515747 173.59342957]
[155.61813354 180.18737793]
[161.03326416 195.03500366]
[154.28784180 209.32746887]
[139.38378906 214.58532715]
[125.16343689 207.68916321]
[120.06345367 192.73036194]
[127.10958099 178.58370972]
[122.11930847 164.43814087]
[117.12903595 150.29257202]
[112.13876343 136.14698792]
[104.66294098 135.54521179]
[103.45911407 150.49682617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 26]
[3 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[37 151]
[38 150]
[39 149]
[40 148]
[42 146]
[43 145]
[44 144]
[45 143]
[46 52]
[47 51]
[54 141]
[55 140]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 133]
[63 132]
[64 131]
[72 130]
[73 129]
[74 128]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[86 115]
[87 114]
[90 106]
[91 105]
[92 104]
[93 103]
[95 102]
[96 101]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
