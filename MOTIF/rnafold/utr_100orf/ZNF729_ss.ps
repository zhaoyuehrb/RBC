%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCUCGCCUUCACUGCUGUGUGUCCUCAGCCUCUGUGGCCCUGUAACCUGCGGCAUUGGAAGAUCCACAGCUAACAUGCCAGGUGCCCCUGGCAGCCUAGAAAUGGGACCAUUGACAUUUAGAGAUGUGACCAUAGAAUUCUCUCUGGAGGAGUGGCAAUGCCUGGACACGGUUC\
) } def
/len { sequence length } bind def

/coor [
[6.54294777 394.08740234]
[3.89453793 408.85174561]
[1.24612796 423.61608887]
[4.40091038 440.27392578]
[-10.73260498 447.91677856]
[-22.26613617 435.49044800]
[-13.51821804 420.96768188]
[-10.86980820 406.20333862]
[-8.22139835 391.43899536]
[-18.05688667 386.31283569]
[-26.24306679 378.80636597]
[-32.21723557 369.42468262]
[-35.56591034 358.80209351]
[-36.05345154 347.65924072]
[-33.63861465 336.75430298]
[-28.47791862 326.83139038]
[-20.91551208 318.56967163]
[-11.46024227 312.53701782]
[-0.75142086 309.15084839]
[10.48440266 308.64938354]
[14.43094158 294.17788696]
[18.37747955 279.70635986]
[22.32401848 265.23483276]
[26.27055740 250.76332092]
[30.21709442 236.29180908]
[34.16363525 221.82028198]
[28.69819260 216.68423462]
[14.33687019 221.01464844]
[17.76730728 206.41215515]
[12.30186653 201.27610779]
[-1.89672828 206.11344910]
[-16.09532356 210.95080566]
[-24.43681717 224.65478516]
[-40.36938095 226.53440857]
[-51.67091370 215.14779663]
[-49.67184448 199.22978210]
[-35.90569305 190.99130249]
[-20.93266869 196.75221252]
[-6.73407412 191.91485596]
[7.46452045 187.07751465]
[-7.51659346 187.83000183]
[-21.43157578 182.22882080]
[-31.71352959 171.30720520]
[-36.46574783 157.07989502]
[-34.81158447 142.17138672]
[-27.05618477 129.33184814]
[-14.63018703 120.92978668]
[0.17418617 118.51513672]
[14.62597370 122.53332520]
[26.05925560 132.24311829]
[32.36493301 145.85334778]
[32.37980270 160.85334778]
[26.10296440 174.47361755]
[35.88006592 163.09783936]
[45.65716934 151.72206116]
[55.43427277 140.34628296]
[65.21137238 128.97050476]
[74.98847198 117.59473419]
[84.76557922 106.21895599]
[70.50218201 110.86174774]
[56.80759048 104.74143219]
[50.75235748 91.01794434]
[55.46281052 76.77674866]
[68.50692749 69.37060547]
[83.15000916 72.62332916]
[91.83230591 84.85751343]
[90.76824951 69.89530182]
[89.70420074 54.93308640]
[76.70059204 46.67400742]
[71.11883545 32.50724030]
[74.90450287 17.94246292]
[86.40295410 8.51253605]
[85.33890533 -6.44967604]
[84.27484894 -21.41188812]
[71.27124023 -29.67096519]
[65.68948364 -43.83773422]
[69.47515106 -58.40251160]
[80.97360992 -67.83243561]
[79.90955353 -82.79464722]
[78.84550476 -97.75686646]
[77.78145599 -112.71907806]
[76.71739960 -127.68128967]
[75.65335083 -142.64349365]
[74.58929443 -157.60571289]
[64.95970917 -170.87986755]
[71.88686371 -185.74414062]
[88.24469757 -186.90744019]
[97.20567322 -173.17306519]
[89.55150604 -158.66976929]
[90.61556244 -143.70755005]
[91.67961121 -128.74534607]
[92.74366760 -113.78312683]
[93.80771637 -98.82091522]
[94.87177277 -83.85870361]
[95.93582153 -68.89649200]
[108.65304565 -61.18868637]
[114.46176147 -47.30622482]
[110.94100952 -32.49211884]
[99.23706055 -22.47594070]
[100.30111694 -7.51372814]
[101.36516571 7.44848394]
[114.08238983 15.15628910]
[119.89111328 29.03875160]
[116.37035370 43.85285568]
[104.66641235 53.86903381]
[105.73046112 68.83124542]
[106.79451752 83.79345703]
[109.21247864 87.49826050]
[110.33470917 91.33646393]
[110.25465393 94.92465973]
[125.24933624 95.32396698]
[140.24401855 95.72327423]
[155.23870850 96.12258148]
[170.23338318 96.52188873]
[177.12806702 86.79116821]
[187.76161194 81.66266632]
[199.42916870 82.31198883]
[209.22457886 88.46109772]
[214.76431274 98.47659302]
[229.73538208 99.40782928]
[244.70645142 100.33905792]
[259.67752075 101.27028656]
[274.64859009 102.20151520]
[289.61965942 103.13274384]
[304.59072876 104.06397247]
[319.56176758 104.99520111]
[335.83599854 96.41036987]
[350.08013916 106.63804626]
[365.06536865 107.30341339]
[373.88937378 94.64875031]
[388.16290283 88.79471588]
[403.33132935 91.60930634]
[414.55450439 102.19441223]
[418.25109863 117.17235565]
[413.24154663 131.76373291]
[401.12442017 141.31246948]
[385.76620483 142.77163696]
[372.06768799 135.67558289]
[364.39999390 122.28865051]
[349.41476440 121.62327576]
[340.26315308 129.56359863]
[327.75393677 129.11251831]
[318.63055420 119.96626282]
[303.65948486 119.03503418]
[288.68841553 118.10380554]
[273.71734619 117.17257690]
[258.74627686 116.24134827]
[243.77522278 115.31011963]
[228.80415344 114.37889099]
[213.83308411 113.44766235]
[200.89517212 126.36658478]
[182.30337524 125.74710846]
[169.83407593 111.51657104]
[154.83940125 111.11726379]
[139.84471130 110.71795654]
[124.85002899 110.31864929]
[109.85533905 109.91934204]
[96.14134979 115.99605560]
[86.36425018 127.37183380]
[76.58715057 138.74760437]
[66.81004333 150.12338257]
[57.03294373 161.49916077]
[47.25584412 172.87493896]
[37.47874069 184.25071716]
[51.08056641 198.91633606]
[48.63515091 225.76683044]
[44.68861389 240.23834229]
[40.74207306 254.70985413]
[36.79553604 269.18136597]
[32.84899902 283.65289307]
[28.90246010 298.12442017]
[24.95592117 312.59591675]
[40.00885773 324.56066895]
[48.33574295 341.83871460]
[48.31611252 360.96975708]
[39.99639130 378.14273071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[20 172]
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[30 40]
[31 39]
[32 38]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[66 107]
[67 106]
[68 105]
[72 101]
[73 100]
[74 99]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[110 157]
[111 156]
[112 155]
[113 154]
[114 153]
[119 150]
[120 149]
[121 148]
[122 147]
[123 146]
[124 145]
[125 144]
[126 143]
[128 140]
[129 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
