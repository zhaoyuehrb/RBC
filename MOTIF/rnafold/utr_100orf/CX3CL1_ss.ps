%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAUAAAAAGCCACAGAUCUCUGGCGGCGGCAAGGGGACAGCACUGAGCUCUGCCGCCUGGCUCUAGCCGCCUGCCUGGCCCCCGCCGGGACUCUUGCCCACCCUCAGCCAUGGCUCCGAUAUCUCUGUCGUGGCUGCUCCGCUUGGCCACCUUCUGCCAUCUGACUGUCCUGCUGGCUGGACAGCACCACGGUGUGACGAAAUGCAACA\
) } def
/len { sequence length } bind def

/coor [
[106.55204010 200.79139709]
[119.48409271 192.80200195]
[117.04979706 178.00083923]
[114.61550140 163.19967651]
[112.18120575 148.39852905]
[104.81994629 146.96261597]
[106.63800049 161.85202026]
[93.03905487 168.18200684]
[82.81671143 157.20458984]
[90.09742737 144.09077454]
[82.73616791 142.65486145]
[74.91765594 155.45606995]
[67.09913635 168.25726318]
[59.28062057 181.05847168]
[65.36409760 195.33331299]
[61.86239243 210.45010376]
[50.12197876 220.59616089]
[34.65728378 221.87008667]
[21.41480446 213.78205872]
[15.48653793 199.44206238]
[19.15202522 184.36413574]
[31.00181389 174.34605408]
[46.47941589 173.23995972]
[54.29793167 160.43875122]
[62.11645126 147.63754272]
[69.93496704 134.83634949]
[60.74487686 122.98129272]
[46.39886093 127.36214447]
[32.05284500 131.74299622]
[17.70683098 136.12385559]
[3.36081624 140.50469971]
[-10.98519897 144.88555908]
[-25.33121300 149.26640320]
[-32.62406540 154.76528931]
[-39.92235947 153.60418701]
[-54.33171463 157.77197266]
[-68.74107361 161.93975830]
[-76.40873718 175.49868774]
[-91.08124542 179.52015686]
[-103.96035767 172.12664795]
[-118.36972046 176.29443359]
[-129.33802795 188.48574829]
[-145.32183838 184.81835938]
[-149.87837219 169.06495667]
[-138.32026672 157.43128967]
[-122.53750610 161.88507080]
[-108.12815094 157.71728516]
[-101.18444824 144.59019470]
[-86.63068390 140.15820312]
[-72.90885925 147.53039551]
[-58.49950027 143.36260986]
[-44.09014511 139.19482422]
[-29.71206474 134.92039490]
[-15.36604977 130.53953552]
[-1.02003539 126.15869141]
[13.32597923 121.77783966]
[27.67199326 117.39698792]
[42.01800919 113.01613617]
[56.36402512 108.63528442]
[56.91960144 93.64557648]
[42.93724823 88.21475983]
[28.95489311 82.78394318]
[14.97253895 77.35312653]
[-1.14336300 80.38788605]
[-11.62279129 67.77385712]
[-5.68540812 52.48728180]
[10.56091499 50.25366974]
[20.40335464 63.37077332]
[34.38570786 68.80158997]
[48.36806488 74.23240662]
[62.35041809 79.66322327]
[66.81258392 73.63502502]
[54.75633621 64.71051788]
[63.68103409 52.65440750]
[75.73690796 61.57864380]
[80.19907379 55.55045319]
[70.92139435 43.76382065]
[61.64371490 31.97719002]
[52.36603546 20.19055748]
[43.08835983 8.40392685]
[33.81068039 -3.38270497]
[18.39091682 -8.96508408]
[15.78229618 -25.15542412]
[28.66834450 -35.29849243]
[43.79299927 -28.95996857]
[45.59730911 -12.66038322]
[54.87498856 -0.87375206]
[64.15266418 10.91287899]
[73.43034363 22.69951057]
[82.70802307 34.48614120]
[91.98570251 46.27277374]
[99.45607758 45.60680389]
[96.96495819 30.81510544]
[94.47384644 16.02340698]
[91.98272705 1.23170972]
[89.49160767 -13.55998898]
[81.59579468 -26.31365967]
[85.45407104 -40.80895996]
[98.64529419 -47.94980240]
[112.89171600 -43.25517273]
[119.25341797 -29.67103767]
[113.73812866 -15.72151852]
[113.90280151 -0.72242218]
[114.06747437 14.27667427]
[114.23214722 29.27577019]
[114.39682770 44.27486420]
[121.86720276 43.60889816]
[128.91363525 30.36700249]
[135.96006775 17.12510872]
[143.00650024 3.88321424]
[150.05293274 -9.35867977]
[157.09936523 -22.60057449]
[164.14581299 -35.84246826]
[171.19224548 -49.08436203]
[178.23867798 -62.32625580]
[185.28511047 -75.56815338]
[176.21476746 -87.84381104]
[173.37733459 -102.84086609]
[177.33615112 -117.58164215]
[187.30522156 -129.13934326]
[201.30516052 -135.21919250]
[216.55627441 -134.61401367]
[230.03044128 -127.44397736]
[239.05236816 -115.13269043]
[241.83073425 -100.12458038]
[237.81388855 -85.39950562]
[227.79939270 -73.88114929]
[213.77561951 -67.85648346]
[198.52700806 -68.52171326]
[191.48057556 -55.27982330]
[184.43412781 -42.03792953]
[177.38769531 -28.79603386]
[170.34126282 -15.55413914]
[163.29483032 -2.31224537]
[156.24839783 10.92964840]
[149.20196533 24.17154312]
[142.15553284 37.41343689]
[135.10910034 50.65533066]
[143.11231995 61.35620499]
[148.22572327 73.07499695]
[150.40997314 85.08818054]
[149.79689026 96.70783234]
[164.59805298 94.27353668]
[173.81555176 81.71665192]
[188.86070251 79.45878601]
[200.77497864 88.32364655]
[215.57612610 85.88935852]
[230.37728882 83.45506287]
[245.17843628 81.02076721]
[252.02035522 67.09353638]
[265.75750732 59.87753677]
[281.10763550 62.14746475]
[292.16836548 73.03049469]
[294.68655396 88.34186554]
[287.69396973 102.19406128]
[273.87936401 109.26061249]
[258.55474854 106.82429504]
[247.61273193 95.82192230]
[232.81158447 98.25621796]
[218.01042175 100.69051361]
[203.20927429 103.12480164]
[194.76171875 115.33850861]
[179.78591919 118.01807404]
[167.03234863 109.07469177]
[152.23118591 111.50898743]
[148.70790100 126.08933258]
[160.76428223 135.01365662]
[172.82066345 143.93798828]
[184.87704468 152.86231995]
[196.93342590 161.78663635]
[212.36354065 159.65376282]
[224.46330261 168.87603760]
[226.40159607 183.59944153]
[238.45797729 192.52377319]
[250.51435852 201.44810486]
[262.57073975 210.37242126]
[274.62713623 219.29675293]
[290.21923828 216.71571350]
[303.02078247 225.98373413]
[305.43682861 241.60224915]
[296.03396606 254.30508423]
[280.39077759 256.55587769]
[267.78808594 247.01925659]
[265.70278931 231.35313416]
[253.64642334 222.42880249]
[241.59002686 213.50448608]
[229.53364563 204.58015442]
[217.47726440 195.65582275]
[202.82969666 198.10211182]
[190.47567749 189.22332764]
[188.00910950 173.84301758]
[175.95271301 164.91870117]
[163.89633179 155.99436951]
[151.83995056 147.07003784]
[139.78356934 138.14572144]
[126.98236847 145.96423340]
[129.41665649 160.76539612]
[131.85095215 175.56654358]
[134.28524780 190.36770630]
[149.09487915 193.79452515]
[161.46290588 202.63197327]
[169.50328064 215.53239441]
[171.98991394 230.52856445]
[168.54360962 245.33367920]
[159.68989563 257.69006348]
[146.77891541 265.71347046]
[131.77947998 268.18035889]
[116.97891998 264.71459961]
[104.63418579 255.84463501]
[96.62777710 242.92311096]
[94.18061066 227.92044067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[11 26]
[12 25]
[13 24]
[14 23]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[33 53]
[35 52]
[36 51]
[37 50]
[40 47]
[41 46]
[60 71]
[61 70]
[62 69]
[63 68]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[107 138]
[108 137]
[109 136]
[110 135]
[111 134]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[142 165]
[143 164]
[146 161]
[147 160]
[148 159]
[149 158]
[166 195]
[167 194]
[168 193]
[169 192]
[170 191]
[173 188]
[174 187]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
