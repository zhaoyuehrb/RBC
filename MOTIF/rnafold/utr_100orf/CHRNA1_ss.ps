%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAAGCACCCAGCCAGAGUGCCAGUGAGAAGCACAGGCCACCACUCUGCCCUGGUCCACACAAGCUCCGGUAGCCCAUGGAGCCCUGGCCUCUCCUCCUGCUCUUUAGCCUUUGCUCAGCUGGCCUCGUCCUGGGCUCCGAACAUGAGACCCGUCUGGUGGCAAAGCUAUUUAAAG\
) } def
/len { sequence length } bind def

/coor [
[75.33277893 247.27818298]
[68.79813385 233.55351257]
[68.01811218 218.37258911]
[73.11164856 204.05043030]
[83.30203247 192.77105713]
[97.03529358 186.25447083]
[96.24587250 171.27525330]
[95.45645142 156.29603577]
[77.94039917 151.99290466]
[62.67414856 142.38713074]
[51.21467590 128.45838928]
[37.36911011 134.22903442]
[23.52354431 139.99967957]
[9.67797852 145.77030945]
[-1.13918936 160.65573120]
[-18.43517303 157.76063538]
[-32.17733383 163.77337646]
[-45.91949463 169.78610229]
[-59.66165161 175.79884338]
[-73.40381622 181.81158447]
[-87.14597321 187.82432556]
[-100.66865540 194.31564331]
[-113.95520020 201.27751160]
[-127.24173737 208.23939514]
[-135.87443542 221.49787903]
[-150.73893738 220.55145264]
[-164.02548218 227.51333618]
[-177.31202698 234.47521973]
[-183.44845581 249.29830933]
[-198.90289307 253.60408020]
[-211.82003784 244.08950806]
[-212.29095459 228.05335999]
[-199.95439148 217.79721069]
[-184.27391052 221.18867493]
[-170.98736572 214.22679138]
[-157.70082092 207.26490784]
[-150.01846313 194.50439453]
[-134.20361328 194.95285034]
[-120.91707611 187.99098206]
[-107.63053131 181.02909851]
[-106.67308807 178.36505127]
[-104.58726501 175.92570496]
[-101.45545959 174.14851379]
[-97.51878357 173.43222046]
[-93.15871429 174.08216858]
[-79.41654968 168.06942749]
[-65.67439270 162.05668640]
[-51.93223190 156.04394531]
[-38.19007492 150.03120422]
[-24.44791412 144.01846313]
[-19.73799896 132.85673523]
[-8.31429005 127.74320221]
[3.90733814 131.92474365]
[17.75290489 126.15410614]
[31.59847069 120.38346863]
[45.44403839 114.61282349]
[43.79722214 105.57991028]
[43.63578796 96.39952087]
[44.96400452 87.31429291]
[47.74676895 78.56433868]
[51.91053391 70.38089752]
[57.34525681 62.98026657]
[63.90729904 56.55802917]
[71.42324066 51.28392029]
[79.69442749 47.29732895]
[88.50228119 44.70361710]
[97.61399841 43.57133102]
[106.78878021 43.93040085]
[115.78414154 45.77133179]
[124.36234283 49.04547501]
[132.57237244 36.49176788]
[140.78239441 23.93806076]
[142.87013245 15.01483631]
[149.24827576 11.23783016]
[157.67735291 -1.16985786]
[166.10641479 -13.57754612]
[174.53549194 -25.98523331]
[182.96456909 -38.39292145]
[191.39364624 -50.80060959]
[193.63766479 -59.68582153]
[200.08111572 -63.35030746]
[208.72663879 -75.60815430]
[217.37216187 -87.86600494]
[211.80627441 -99.09630585]
[211.55648804 -111.55542755]
[216.60885620 -122.86777496]
[225.94429016 -130.90264893]
[237.74354553 -134.17550659]
[249.74153137 -132.12194824]
[258.81192017 -144.06883240]
[267.88229370 -156.01571655]
[276.95269775 -167.96261597]
[278.82437134 -186.26789856]
[295.23266602 -192.45668030]
[304.09197998 -204.56091309]
[295.11459351 -218.81585693]
[292.29479980 -235.38722229]
[296.03585815 -251.73757935]
[305.73852539 -265.37423706]
[319.89697266 -274.22927856]
[336.33230591 -276.97320557]
[352.52795410 -273.21435547]
[360.95703125 -285.62203979]
[369.38610840 -298.02972412]
[370.04400635 -314.41567993]
[384.68737793 -321.79830933]
[398.25241089 -312.58297729]
[396.78454590 -296.24966431]
[381.79379272 -289.60064697]
[373.36471558 -277.19296265]
[364.93563843 -264.78527832]
[372.92605591 -254.16687012]
[377.25558472 -241.57878113]
[377.48791504 -228.24618530]
[373.58627319 -215.47126770]
[365.91836548 -204.50611877]
[355.22171021 -196.42999268]
[342.53277588 -192.04309082]
[329.08651733 -191.78726196]
[316.19622803 -195.70159912]
[307.33688354 -183.59736633]
[308.87402344 -171.58050537]
[301.56726074 -161.41877747]
[288.89956665 -158.89222717]
[279.82919312 -146.94534302]
[270.75878906 -134.99844360]
[261.68841553 -123.05155945]
[267.57696533 -106.42665100]
[262.28158569 -89.43901062]
[247.73515320 -78.92095947]
[229.63002014 -79.22047424]
[220.98448181 -66.96263123]
[212.33895874 -54.70478058]
[203.80133057 -42.37153625]
[195.37225342 -29.96385002]
[186.94317627 -17.55616188]
[178.51411438 -5.14847279]
[170.08503723 7.25921535]
[161.65596008 19.66690254]
[153.33609009 32.14808273]
[145.12606812 44.70178986]
[136.91604614 57.25549316]
[152.20684814 78.45160675]
[156.31803894 104.26210022]
[148.36927795 129.15991211]
[160.07327271 138.54162598]
[171.77725220 147.92335510]
[187.38433838 150.51748657]
[192.47570801 164.51489258]
[204.17970276 173.89660645]
[215.88368225 183.27833557]
[232.16665649 185.22695923]
[238.37095642 200.40716553]
[228.11413574 213.20285034]
[211.94754028 210.45092773]
[206.50196838 194.98231506]
[194.79797363 185.60060120]
[183.09399414 176.21887207]
[168.32405090 174.29577637]
[162.39553833 159.62733459]
[150.69154358 150.24562073]
[138.98756409 140.86389160]
[134.89064026 144.41317749]
[130.47235107 147.55337524]
[125.77336121 150.25555420]
[120.83698273 152.49484253]
[115.70867157 154.25057983]
[110.43566895 155.50662231]
[111.22509003 170.48582458]
[112.01451111 185.46504211]
[126.35665894 190.50202942]
[137.67617798 200.64781189]
[144.24690247 214.35525513]
[145.06686401 229.53405762]
[140.01103210 243.86956787]
[129.85035706 255.17572021]
[116.13427734 261.72842407]
[100.95441437 262.52841187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 170]
[7 169]
[8 168]
[11 56]
[12 55]
[13 54]
[14 53]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[21 45]
[22 40]
[23 39]
[24 38]
[26 36]
[27 35]
[28 34]
[70 142]
[71 141]
[72 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[79 134]
[81 133]
[82 132]
[83 131]
[89 127]
[90 126]
[91 125]
[92 124]
[94 121]
[95 120]
[102 111]
[103 110]
[104 109]
[145 162]
[146 161]
[147 160]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
