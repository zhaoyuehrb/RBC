%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAACGAAACUCCAUCAGGCUCCGCCCCACGGUCUGCGGAGUGAGCCAAUCAGGGCACAGCCUGCGUUGACCGCGUGCCGGGUGUCAUGGCGGCCUGCAGGUACUGCUGCUCGUGCCUCCGGCUCCGGCCCCUGAGCGAUGGUCCUUUCCUUCUGCCACGGCGGGAUCGGGCACUCACCCAGUUGC\
) } def
/len { sequence length } bind def

/coor [
[241.10142517 345.00234985]
[232.61221313 332.63571167]
[224.12301636 320.26910400]
[215.63380432 307.90246582]
[207.14460754 295.53585815]
[193.56268311 289.42187500]
[192.13146973 273.66552734]
[183.64225769 261.29888916]
[180.89312744 260.66116333]
[178.23376465 258.88513184]
[176.10305786 256.00045776]
[174.92063904 252.19644165]
[175.03163147 247.81056213]
[167.38737488 234.90454102]
[159.74313354 221.99851990]
[152.09887695 209.09248352]
[144.45463562 196.18646240]
[140.11381531 194.15188599]
[137.01458740 189.35842896]
[136.77888489 182.71897888]
[129.57015991 169.56474304]
[122.36142731 156.41049194]
[115.15270233 143.25624084]
[104.39532471 145.62222290]
[93.38410950 145.35346985]
[82.75497437 142.46546936]
[73.12176514 137.12501526]
[65.04081726 129.64054871]
[58.97881317 120.44429016]
[55.28585052 110.06733704]
[54.17519760 99.10898590]
[39.42789841 96.36724091]
[24.68059921 93.62548828]
[9.93330002 90.88374329]
[-4.81399870 88.14199066]
[-19.60505295 85.64705658]
[-34.43572998 83.39962006]
[-49.26641083 81.15218353]
[-64.09709167 78.90474701]
[-78.92776489 76.65731049]
[-91.56754303 85.76081848]
[-106.57594299 83.27033234]
[-115.17684937 71.16413879]
[-130.00753784 68.91670227]
[-144.81120300 74.49899292]
[-156.23553467 64.94211578]
[-171.06620789 62.69467926]
[-185.89689636 60.44724274]
[-198.47018433 70.02262878]
[-214.12022400 67.82002258]
[-223.56214905 55.14619827]
[-221.19419861 39.52030945]
[-208.42126465 30.21291924]
[-192.82127380 32.74593735]
[-183.64945984 45.61656570]
[-168.81877136 47.86400223]
[-153.98809814 50.11143875]
[-140.24522400 44.36839294]
[-127.76009369 54.08602142]
[-112.92941284 56.33345795]
[-101.12789917 47.31903839]
[-86.05546570 49.38698959]
[-76.68032837 61.82662964]
[-61.84965134 64.07406616]
[-47.01897430 66.32150269]
[-32.18829346 68.56893921]
[-17.35761642 70.81637573]
[-13.03539944 68.74257660]
[-7.36254549 69.37592316]
[-2.07225108 73.39469910]
[12.67504787 76.13644409]
[27.42234612 78.87818909]
[42.16964340 81.61994171]
[56.91694260 84.36168671]
[64.83568573 70.60310364]
[76.97280884 60.37103271]
[91.87232208 54.89293289]
[107.74684143 54.82596970]
[112.66722107 40.65593338]
[117.58759308 26.48589706]
[122.50796509 12.31586075]
[127.42833710 -1.85417533]
[132.34870911 -16.02421188]
[132.20922852 -25.17794991]
[137.47149658 -30.38873482]
[142.62796021 -44.47457504]
[147.78442383 -58.56041336]
[147.02268982 -65.16022491]
[149.36874390 -70.36392212]
[153.35571289 -73.02592468]
[158.97998047 -86.93159485]
[156.98153687 -102.62607574]
[168.92646790 -111.52371979]
[174.55073547 -125.42938995]
[180.17498779 -139.33505249]
[172.11375427 -156.46234131]
[178.99409485 -173.75447083]
[196.02471924 -180.42886353]
[201.18118286 -194.51470947]
[206.33764648 -208.60054016]
[211.49411011 -222.68638611]
[204.61502075 -236.91500854]
[209.89076233 -251.81272888]
[224.19131470 -258.54098511]
[239.03242493 -253.10804749]
[245.60913086 -238.73715210]
[240.01957703 -223.95431519]
[225.57994080 -217.52992249]
[220.42347717 -203.44407654]
[215.26701355 -189.35824585]
[210.11054993 -175.27239990]
[217.05352783 -166.18992615]
[218.75863647 -154.76420593]
[214.68627930 -143.82542419]
[205.74258423 -136.13990784]
[194.08065796 -133.71080017]
[188.45640564 -119.80512238]
[182.83213806 -105.89945221]
[185.23286438 -91.19960022]
[172.88565063 -81.30732727]
[167.26138306 -67.40165710]
[161.87026978 -53.40394974]
[156.71380615 -39.31810760]
[151.55734253 -25.23226929]
[146.51873779 -11.10383892]
[141.59837341 3.06619740]
[136.67799377 17.23623466]
[131.75762939 31.40627098]
[126.83725739 45.57630539]
[121.91687775 59.74634171]
[135.73242188 71.29633331]
[144.03219604 87.27710724]
[145.53503418 105.22182465]
[140.00894165 122.36048126]
[128.30694580 136.04751587]
[135.51567078 149.20176697]
[142.72439575 162.35601807]
[149.93312073 175.51025391]
[157.36065674 188.54222107]
[165.00489807 201.44824219]
[172.64915466 214.35426331]
[180.29339600 227.26028442]
[187.93765259 240.16630554]
[196.00888062 252.80969238]
[204.49809265 265.17633057]
[218.68721008 272.17486572]
[219.51123047 287.04663086]
[228.00042725 299.41326904]
[236.48963928 311.77990723]
[244.97883606 324.14651489]
[253.46804810 336.51315308]
[263.98565674 347.20797729]
[276.20870972 355.90264893]
[288.43176270 364.59732056]
[300.65478516 373.29199219]
[312.87783813 381.98666382]
[325.10089111 390.68130493]
[341.46884155 391.69238281]
[348.53396606 406.49157715]
[339.02828979 419.85473633]
[322.73043823 418.03500366]
[316.40621948 402.90435791]
[304.18316650 394.20968628]
[291.96011353 385.51504517]
[279.73709106 376.82037354]
[267.51403809 368.12570190]
[255.29100037 359.43103027]
[249.48348999 364.17684937]
[237.86848450 373.66851807]
[232.06097412 378.41433716]
[238.14675903 392.12432861]
[244.23254395 405.83428955]
[259.06903076 411.27987671]
[265.63348389 425.65637207]
[260.03134155 440.43444824]
[245.58624268 446.84652710]
[230.86822510 441.08847046]
[224.60920715 426.57638550]
[230.52256775 411.92007446]
[224.43678284 398.21011353]
[218.35101318 384.50012207]
[203.60363770 381.75881958]
[192.41993713 371.76257324]
[188.04734802 357.41403198]
[191.75555420 342.87960815]
[202.46777344 332.37969971]
[217.07350159 328.96316528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[7 145]
[8 144]
[13 143]
[14 142]
[15 141]
[16 140]
[17 139]
[20 138]
[21 137]
[22 136]
[23 135]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[43 60]
[44 59]
[46 57]
[47 56]
[48 55]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[85 124]
[86 123]
[87 122]
[90 121]
[91 120]
[93 118]
[94 117]
[95 116]
[98 111]
[99 110]
[100 109]
[101 108]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
[170 181]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
