%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2W3)
} def

/sequence { (\
AUGGAUGGAACCAAUGGCAGCACCCAAACCCAUUUCAUCCUACUGGGAUUCUCUGACCGACCCCAUCUGGAGAGGAUCCUCUUUGUGGUCAUCCUGAUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.004819020 ubox
1 38 0.020806802 ubox
1 86 0.017829381 ubox
1 98 0.005789235 ubox
2 13 0.004221967 ubox
2 26 0.006566393 ubox
2 32 0.005654305 ubox
2 37 0.024413623 ubox
2 42 0.100475552 ubox
2 45 0.006403478 ubox
2 85 0.018275421 ubox
2 91 0.003341246 ubox
2 96 0.004438300 ubox
2 97 0.006166201 ubox
2 100 0.008863538 ubox
3 12 0.005021296 ubox
3 25 0.007289451 ubox
3 31 0.005893849 ubox
3 35 0.012120741 ubox
3 36 0.025336416 ubox
3 40 0.992603665 ubox
3 41 0.024530564 ubox
3 44 0.016398801 ubox
3 68 0.006065770 ubox
3 90 0.003322598 ubox
3 94 0.092642576 ubox
4 11 0.005003841 ubox
4 24 0.007277879 ubox
4 30 0.005882170 ubox
4 34 0.020928175 ubox
4 35 0.020755491 ubox
4 39 0.994607692 ubox
4 40 0.017661077 ubox
4 43 0.017056155 ubox
4 67 0.006434342 ubox
4 93 0.092802445 ubox
4 99 0.006474449 ubox
5 33 0.025832042 ubox
5 34 0.014943037 ubox
5 38 0.994526786 ubox
5 66 0.006435804 ubox
5 92 0.092768257 ubox
5 98 0.006453486 ubox
6 22 0.007273105 ubox
6 26 0.005870533 ubox
6 32 0.030050523 ubox
6 37 0.994154325 ubox
6 42 0.004398247 ubox
6 65 0.006435166 ubox
6 91 0.092502172 ubox
6 97 0.005763916 ubox
7 21 0.007358127 ubox
7 25 0.005972576 ubox
7 31 0.030496219 ubox
7 35 0.004914397 ubox
7 36 0.992731651 ubox
7 40 0.026552942 ubox
7 64 0.006433837 ubox
7 90 0.090291473 ubox
7 94 0.007111754 ubox
8 24 0.005962200 ubox
8 29 0.003448678 ubox
8 30 0.030481154 ubox
8 33 0.005575900 ubox
8 34 0.025711833 ubox
8 35 0.987077455 ubox
8 36 0.064965846 ubox
8 39 0.032496005 ubox
8 63 0.006418796 ubox
8 89 0.051694275 ubox
8 90 0.018556519 ubox
8 93 0.007131910 ubox
9 33 0.034278186 ubox
9 34 0.935858497 ubox
9 35 0.086965937 ubox
9 38 0.031959773 ubox
9 89 0.018344925 ubox
9 92 0.006863214 ubox
10 33 0.788396951 ubox
10 34 0.068849729 ubox
10 86 0.008774518 ubox
10 89 0.058570547 ubox
11 17 0.037930980 ubox
11 85 0.008531516 ubox
11 88 0.072214353 ubox
12 16 0.037686661 ubox
12 85 0.012892239 ubox
12 87 0.072211335 ubox
13 34 0.310878612 ubox
13 35 0.007336376 ubox
13 83 0.003196739 ubox
13 84 0.012582733 ubox
13 86 0.059113660 ubox
14 33 0.521562635 ubox
14 34 0.007819679 ubox
14 38 0.005565108 ubox
14 82 0.003271541 ubox
14 83 0.010824161 ubox
14 86 0.004774160 ubox
15 22 0.027528041 ubox
15 26 0.725150962 ubox
15 32 0.630079963 ubox
15 37 0.005944483 ubox
15 59 0.006564346 ubox
15 85 0.006142970 ubox
16 21 0.029053566 ubox
16 24 0.128847289 ubox
16 25 0.751173929 ubox
16 30 0.110499397 ubox
16 31 0.630397687 ubox
16 36 0.006049309 ubox
16 58 0.008557434 ubox
16 81 0.004592201 ubox
16 82 0.004557106 ubox
16 84 0.003374932 ubox
17 23 0.133985667 ubox
17 24 0.744907335 ubox
17 29 0.118360053 ubox
17 30 0.625026893 ubox
17 35 0.004843405 ubox
17 57 0.008560909 ubox
17 81 0.004944711 ubox
17 83 0.003194023 ubox
17 86 0.003245802 ubox
18 45 0.005724513 ubox
18 55 0.008575020 ubox
18 85 0.003872138 ubox
19 44 0.005823214 ubox
19 54 0.008569259 ubox
19 82 0.004265384 ubox
19 84 0.003767881 ubox
20 43 0.005805882 ubox
20 53 0.008537105 ubox
20 81 0.004387865 ubox
22 89 0.003422491 ubox
23 47 0.006230351 ubox
23 88 0.004050973 ubox
24 46 0.006381871 ubox
24 87 0.004053772 ubox
25 45 0.006547711 ubox
25 85 0.005062611 ubox
26 35 0.005676573 ubox
26 44 0.006143406 ubox
26 50 0.003552946 ubox
26 84 0.005066779 ubox
27 33 0.004755158 ubox
27 34 0.007857490 ubox
27 35 0.004331158 ubox
27 49 0.003701135 ubox
27 83 0.004985240 ubox
28 33 0.007193232 ubox
28 34 0.004450972 ubox
28 82 0.004548214 ubox
28 89 0.005088699 ubox
29 47 0.007598356 ubox
29 88 0.005720361 ubox
30 46 0.008978008 ubox
30 87 0.005603978 ubox
30 88 0.011415398 ubox
31 45 0.010137682 ubox
31 85 0.005911073 ubox
31 87 0.011535879 ubox
32 38 0.003362081 ubox
32 44 0.009421183 ubox
32 84 0.005802665 ubox
32 86 0.011565005 ubox
33 37 0.003227378 ubox
33 85 0.011137934 ubox
35 88 0.007891885 ubox
36 45 0.017130285 ubox
36 85 0.006583835 ubox
36 87 0.010940357 ubox
37 44 0.015929408 ubox
37 49 0.003309724 ubox
37 84 0.006585583 ubox
37 86 0.011206187 ubox
37 89 0.005537548 ubox
38 48 0.003675258 ubox
38 85 0.010829678 ubox
38 88 0.005549942 ubox
39 45 0.003405993 ubox
39 46 0.010834786 ubox
39 47 0.003797787 ubox
39 70 0.003605607 ubox
39 87 0.005943689 ubox
39 88 0.017859286 ubox
40 45 0.015673982 ubox
40 46 0.003855539 ubox
40 69 0.003622864 ubox
40 87 0.018032405 ubox
40 88 0.052178903 ubox
41 45 0.005590749 ubox
41 85 0.170646274 ubox
41 87 0.080923730 ubox
42 84 0.179673536 ubox
42 86 0.199112546 ubox
42 89 0.021593471 ubox
43 85 0.211105695 ubox
43 88 0.023665296 ubox
44 65 0.011211655 ubox
44 85 0.027666673 ubox
44 87 0.023561762 ubox
44 96 0.023276494 ubox
44 100 0.003905766 ubox
45 58 0.003589332 ubox
45 64 0.012435447 ubox
45 79 0.029275051 ubox
45 80 0.870352117 ubox
45 81 0.331513641 ubox
45 82 0.019843122 ubox
45 83 0.024368939 ubox
45 84 0.010724030 ubox
45 86 0.005643942 ubox
45 95 0.034198362 ubox
45 99 0.003435282 ubox
46 57 0.003588666 ubox
46 63 0.012429038 ubox
46 78 0.022426332 ubox
46 79 0.997396955 ubox
46 80 0.041308315 ubox
46 81 0.010770409 ubox
46 82 0.005883841 ubox
46 94 0.035209319 ubox
47 62 0.012401053 ubox
47 77 0.011859747 ubox
47 78 0.998439435 ubox
47 79 0.029546513 ubox
47 81 0.005147053 ubox
47 93 0.035216394 ubox
47 99 0.011329801 ubox
48 77 0.998818415 ubox
48 80 0.004573343 ubox
48 92 0.035148027 ubox
48 98 0.011337289 ubox
49 60 0.007154999 ubox
49 74 0.004088025 ubox
49 76 0.998594011 ubox
49 91 0.023509110 ubox
49 97 0.010996555 ubox
50 59 0.006972780 ubox
50 60 0.007630213 ubox
50 73 0.007048903 ubox
50 75 0.998272984 ubox
50 76 0.005879854 ubox
50 96 0.010336096 ubox
51 59 0.007933466 ubox
51 72 0.007879958 ubox
51 74 0.999017948 ubox
51 75 0.007479273 ubox
51 96 0.003752919 ubox
52 60 0.003460833 ubox
52 71 0.008122863 ubox
52 73 0.998929762 ubox
52 75 0.003657938 ubox
53 59 0.003640597 ubox
53 70 0.008256211 ubox
53 72 0.998963922 ubox
53 74 0.009062664 ubox
54 65 0.010475482 ubox
54 69 0.008075632 ubox
54 71 0.930302841 ubox
54 73 0.009455567 ubox
54 91 0.028238610 ubox
55 64 0.014860263 ubox
55 67 0.032804250 ubox
55 68 0.007089920 ubox
55 90 0.033307065 ubox
56 66 0.030724617 ubox
56 89 0.033306233 ubox
57 70 0.955168144 ubox
57 88 0.033234452 ubox
58 69 0.958211895 ubox
58 87 0.033184430 ubox
59 67 0.422849342 ubox
59 68 0.833304421 ubox
59 86 0.026428923 ubox
59 90 0.017159763 ubox
60 66 0.405300149 ubox
60 86 0.017151897 ubox
60 89 0.017178988 ubox
61 70 0.094124305 ubox
61 85 0.021084433 ubox
61 88 0.016991508 ubox
62 69 0.093855783 ubox
62 70 0.063145611 ubox
62 87 0.016878777 ubox
63 69 0.062912563 ubox
63 70 0.111009523 ubox
63 88 0.006814871 ubox
64 69 0.111065043 ubox
64 85 0.019034631 ubox
64 87 0.007169853 ubox
65 84 0.018241160 ubox
65 86 0.008019550 ubox
66 85 0.007795162 ubox
68 85 0.016735433 ubox
69 79 0.013378935 ubox
69 82 0.012768894 ubox
69 84 0.028330053 ubox
70 78 0.013387352 ubox
70 81 0.013117948 ubox
70 83 0.033059676 ubox
71 77 0.013253769 ubox
71 80 0.013122350 ubox
71 82 0.035032887 ubox
71 84 0.004107694 ubox
72 79 0.013054243 ubox
72 81 0.035312575 ubox
72 83 0.004452954 ubox
73 80 0.035294828 ubox
73 82 0.004499087 ubox
73 95 0.004330129 ubox
74 79 0.035137748 ubox
74 81 0.004501182 ubox
74 94 0.004431314 ubox
75 80 0.003514520 ubox
75 93 0.004432073 ubox
76 92 0.004413969 ubox
77 91 0.003955462 ubox
78 88 0.004429375 ubox
79 87 0.004483149 ubox
80 88 0.005809996 ubox
80 97 0.006668657 ubox
81 87 0.018756800 ubox
81 88 0.013587269 ubox
81 96 0.009368375 ubox
82 87 0.013660098 ubox
82 97 0.010733353 ubox
83 96 0.011102563 ubox
83 97 0.029836210 ubox
84 91 0.016145104 ubox
84 96 0.031963051 ubox
84 100 0.018117213 ubox
85 90 0.017703108 ubox
85 92 0.003209012 ubox
85 95 0.026518866 ubox
85 98 0.008168171 ubox
85 99 0.022357434 ubox
86 91 0.003204346 ubox
86 96 0.009175548 ubox
86 97 0.008589865 ubox
86 100 0.565480811 ubox
87 93 0.006022087 ubox
87 94 0.093640233 ubox
87 95 0.011945096 ubox
87 99 0.981751625 ubox
88 92 0.003967925 ubox
88 93 0.093582212 ubox
88 94 0.012389497 ubox
88 98 0.986147571 ubox
89 97 0.987126003 ubox
90 96 0.987130502 ubox
91 95 0.800007777 ubox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
45 80 0.9500000 lbox
46 79 0.9500000 lbox
47 78 0.9500000 lbox
48 77 0.9500000 lbox
49 76 0.9500000 lbox
50 75 0.9500000 lbox
51 74 0.9500000 lbox
52 73 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
87 99 0.9500000 lbox
88 98 0.9500000 lbox
89 97 0.9500000 lbox
90 96 0.9500000 lbox
91 95 0.9500000 lbox
showpage
end
%%EOF
