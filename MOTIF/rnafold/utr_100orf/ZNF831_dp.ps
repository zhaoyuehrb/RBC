%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF831)
} def

/sequence { (\
AUGGAGGUUCCAGAACCCACCUGCCCUGCCCCUCCUGCGAGGGACCAGCCAGCUCCCACUCCUGGCCCUCCAGGGGCCCCAGGUGGCCAGGCCUCACCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 12 0.086606158 ubox
2 19 0.003635181 ubox
2 72 0.003202917 ubox
2 89 0.009968317 ubox
2 96 0.117602476 ubox
3 11 0.096164574 ubox
3 18 0.004195211 ubox
3 21 0.004329510 ubox
3 71 0.003560060 ubox
3 88 0.013529944 ubox
3 93 0.008293680 ubox
3 95 0.100568654 ubox
3 98 0.145281577 ubox
3 99 0.018452010 ubox
3 100 0.025155896 ubox
4 10 0.096149988 ubox
4 17 0.003306353 ubox
4 20 0.004333151 ubox
4 70 0.003560779 ubox
4 87 0.013504178 ubox
4 92 0.008295124 ubox
4 94 0.043633818 ubox
4 95 0.902701897 ubox
4 97 0.122030698 ubox
4 98 0.012616978 ubox
4 99 0.009542909 ubox
4 100 0.377400089 ubox
5 9 0.083651440 ubox
5 69 0.003560129 ubox
5 94 0.914989067 ubox
5 99 0.382867439 ubox
6 17 0.018368939 ubox
6 68 0.003558330 ubox
6 88 0.009266344 ubox
6 93 0.917417710 ubox
6 94 0.008337390 ubox
6 95 0.028814853 ubox
6 98 0.383636949 ubox
7 16 0.020475530 ubox
7 67 0.003550085 ubox
7 87 0.009272589 ubox
7 92 0.916203299 ubox
7 93 0.010337018 ubox
7 94 0.026898251 ubox
7 97 0.383590841 ubox
8 14 0.004100092 ubox
8 15 0.020583677 ubox
8 90 0.023446796 ubox
8 91 0.763633239 ubox
8 96 0.370802775 ubox
9 13 0.006425254 ubox
9 14 0.019530901 ubox
9 89 0.029548714 ubox
9 90 0.626131607 ubox
9 91 0.205478613 ubox
10 65 0.003438276 ubox
10 86 0.014533126 ubox
10 90 0.286742839 ubox
10 91 0.510805524 ubox
11 23 0.007936656 ubox
11 64 0.003444990 ubox
11 85 0.013613156 ubox
11 90 0.536252813 ubox
12 22 0.008118555 ubox
12 63 0.003443118 ubox
12 84 0.010049610 ubox
12 94 0.097441394 ubox
13 21 0.008137373 ubox
13 62 0.003333543 ubox
13 93 0.098285541 ubox
13 95 0.031381496 ubox
14 94 0.030826531 ubox
16 86 0.111672325 ubox
16 91 0.041637506 ubox
17 85 0.079289096 ubox
17 86 0.990587491 ubox
17 90 0.030597539 ubox
17 91 0.015280142 ubox
18 85 0.996035526 ubox
18 90 0.015127704 ubox
19 84 0.999055983 ubox
20 83 0.999315654 ubox
20 86 0.011810269 ubox
20 91 0.027638920 ubox
21 82 0.999309301 ubox
21 85 0.011799491 ubox
21 86 0.013085208 ubox
21 90 0.028236778 ubox
22 81 0.998819608 ubox
22 85 0.013090884 ubox
22 89 0.028220928 ubox
23 29 0.004319169 ubox
23 77 0.018321941 ubox
23 80 0.995625913 ubox
23 84 0.014490263 ubox
23 87 0.019402603 ubox
23 88 0.021515522 ubox
23 92 0.004841090 ubox
24 28 0.004994472 ubox
24 75 0.008819778 ubox
24 76 0.020530248 ubox
24 83 0.012486585 ubox
24 86 0.026599292 ubox
24 91 0.004771369 ubox
25 74 0.008903461 ubox
25 75 0.020357609 ubox
25 76 0.014548661 ubox
25 82 0.009837216 ubox
25 83 0.023352484 ubox
25 85 0.021821261 ubox
25 86 0.008563951 ubox
25 90 0.004642059 ubox
26 48 0.004297930 ubox
26 73 0.008980491 ubox
26 74 0.015216411 ubox
26 75 0.014368530 ubox
26 76 0.003976480 ubox
26 82 0.029048764 ubox
26 83 0.014142581 ubox
26 85 0.008541289 ubox
26 86 0.004024129 ubox
26 90 0.003265137 ubox
27 47 0.004359062 ubox
27 72 0.009036331 ubox
27 73 0.006842009 ubox
27 74 0.003526765 ubox
27 75 0.003260157 ubox
27 81 0.030836109 ubox
27 82 0.013303772 ubox
27 85 0.004107207 ubox
27 89 0.003437029 ubox
28 46 0.004369389 ubox
28 71 0.008975466 ubox
28 77 0.995077205 ubox
28 80 0.031010507 ubox
28 84 0.010945367 ubox
28 87 0.005161956 ubox
29 75 0.006571954 ubox
29 76 0.995211132 ubox
29 83 0.011299424 ubox
29 86 0.005659149 ubox
30 43 0.008656572 ubox
30 74 0.006110863 ubox
30 75 0.993071125 ubox
30 76 0.038625020 ubox
30 82 0.011272739 ubox
30 85 0.005647575 ubox
31 42 0.008685403 ubox
31 73 0.005487943 ubox
31 74 0.936474748 ubox
31 75 0.049432356 ubox
31 76 0.052838078 ubox
31 83 0.005401647 ubox
32 41 0.008697516 ubox
32 73 0.876098522 ubox
32 74 0.044447826 ubox
32 75 0.057274899 ubox
32 76 0.066109150 ubox
32 82 0.005186542 ubox
33 40 0.008725210 ubox
33 72 0.644781607 ubox
33 73 0.020747310 ubox
33 74 0.008542171 ubox
33 75 0.083946475 ubox
33 81 0.004393747 ubox
34 39 0.008832919 ubox
34 73 0.024851407 ubox
34 74 0.346907506 ubox
35 73 0.480270252 ubox
36 72 0.754581051 ubox
36 73 0.003287304 ubox
37 71 0.957031624 ubox
39 70 0.999592788 ubox
40 69 0.999773328 ubox
41 68 0.999928263 ubox
42 67 0.999927429 ubox
42 68 0.004391125 ubox
43 66 0.999237545 ubox
43 67 0.005690973 ubox
45 65 0.998739700 ubox
46 64 0.998833154 ubox
47 54 0.003990734 ubox
47 60 0.006773680 ubox
47 63 0.998115582 ubox
48 53 0.005519633 ubox
48 59 0.009565249 ubox
48 62 0.993802146 ubox
48 66 0.035424164 ubox
49 65 0.047457908 ubox
50 64 0.047516092 ubox
51 60 0.877266503 ubox
51 63 0.047591926 ubox
52 59 0.899941057 ubox
52 62 0.047333408 ubox
56 65 0.003602571 ubox
57 64 0.003616875 ubox
73 95 0.003661888 ubox
74 94 0.003684258 ubox
75 93 0.003807121 ubox
76 92 0.003809115 ubox
77 91 0.003807492 ubox
78 90 0.003801758 ubox
81 99 0.003469141 ubox
82 98 0.003809302 ubox
83 97 0.003816400 ubox
84 96 0.003715470 ubox
85 93 0.011190505 ubox
86 92 0.014040829 ubox
87 91 0.014912677 ubox
89 99 0.082888666 ubox
90 98 0.088833997 ubox
90 99 0.005856164 ubox
91 97 0.088616999 ubox
91 98 0.006178036 ubox
4 95 0.9500000 lbox
5 94 0.9500000 lbox
6 93 0.9500000 lbox
7 92 0.9500000 lbox
8 91 0.9500000 lbox
9 90 0.9500000 lbox
17 86 0.9500000 lbox
18 85 0.9500000 lbox
19 84 0.9500000 lbox
20 83 0.9500000 lbox
21 82 0.9500000 lbox
22 81 0.9500000 lbox
23 80 0.9500000 lbox
28 77 0.9500000 lbox
29 76 0.9500000 lbox
30 75 0.9500000 lbox
31 74 0.9500000 lbox
32 73 0.9500000 lbox
36 72 0.9500000 lbox
37 71 0.9500000 lbox
39 70 0.9500000 lbox
40 69 0.9500000 lbox
41 68 0.9500000 lbox
42 67 0.9500000 lbox
43 66 0.9500000 lbox
45 65 0.9500000 lbox
46 64 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
showpage
end
%%EOF
