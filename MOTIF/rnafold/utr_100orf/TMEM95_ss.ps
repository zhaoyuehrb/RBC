%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGCCAGGGCUGCAGAGCAUUCCUCGGCUCAGCUGGGGCAGCGCCGCCCCAUCCCCCAGUGGUCCUCAUGUGGAGGCUGGCACUAGGCGGGGUUUUCCUGGCAGCCGCCCAGGCUUGUGUCUUCUGUCGCCUCCCAGCCCACGACUUGUCAGGCCGCCUGGCUCGGC\
) } def
/len { sequence length } bind def

/coor [
[83.42272949 232.24761963]
[83.29776001 216.44383240]
[94.44375610 205.23925781]
[94.16657257 190.24182129]
[93.88938904 175.24438477]
[93.61220551 160.24694824]
[93.33502197 145.24949646]
[93.05783844 130.25205994]
[92.78065491 115.25462341]
[88.94301605 100.75384521]
[81.76534271 87.58262634]
[74.58766937 74.41140747]
[61.19014740 65.99612427]
[61.89397812 51.11816025]
[54.71630478 37.94694138]
[47.53863144 24.77572250]
[40.36095810 11.60450363]
[33.18328476 -1.56671500]
[25.76344681 -14.60304928]
[18.10397911 -27.50004768]
[10.44451046 -40.39704514]
[2.78504276 -53.29404068]
[-15.21746349 -62.30713272]
[-14.71347332 -81.61392975]
[-22.84427452 -94.21909332]
[-30.97507477 -106.82424927]
[-39.45212173 -119.19921112]
[-48.26889801 -131.33447266]
[-57.08567810 -143.46972656]
[-65.90245819 -155.60498047]
[-74.71923828 -167.74023438]
[-80.65022278 -170.80261230]
[-83.66342163 -175.67932129]
[-83.62776947 -180.49078369]
[-91.99011230 -192.94354248]
[-100.35245514 -205.39630127]
[-108.71479034 -217.84906006]
[-117.07713318 -230.30181885]
[-125.43947601 -242.75457764]
[-133.80181885 -255.20733643]
[-147.91865540 -262.35055542]
[-148.59059143 -277.23001099]
[-156.95292664 -289.68276978]
[-165.31527710 -302.13552856]
[-179.43209839 -309.27874756]
[-180.10403442 -324.15817261]
[-188.46638489 -336.61093140]
[-196.82872009 -349.06369019]
[-205.19107056 -361.51644897]
[-213.55340576 -373.96923828]
[-226.50706482 -371.15509033]
[-239.61280823 -372.91833496]
[-251.30535889 -379.02639771]
[-260.19573975 -388.72909546]
[-265.23623657 -400.85067749]
[-265.84384155 -413.93240356]
[-261.96768188 -426.40789795]
[-254.09236145 -436.79092407]
[-261.98886108 -449.54418945]
[-269.88531494 -462.29745483]
[-277.78179932 -475.05072021]
[-285.67828369 -487.80395508]
[-298.05520630 -491.52374268]
[-304.36380005 -502.34100342]
[-301.68331909 -514.16204834]
[-309.34277344 -527.05902100]
[-317.00225830 -539.95605469]
[-332.37719727 -543.61474609]
[-340.59057617 -557.11718750]
[-336.76953125 -572.45263672]
[-323.18099976 -580.52276611]
[-307.88684082 -576.53979492]
[-299.96078491 -562.86669922]
[-304.10525513 -547.61547852]
[-296.44577026 -534.71850586]
[-288.78631592 -521.82153320]
[-273.04788208 -514.09606934]
[-272.92504883 -495.70043945]
[-265.02856445 -482.94720459]
[-257.13208008 -470.19393921]
[-249.23559570 -457.44067383]
[-241.33911133 -444.68740845]
[-224.63066101 -446.96136475]
[-208.55046082 -441.70449829]
[-196.33235168 -429.92337036]
[-190.45549011 -413.94158936]
[-192.14144897 -396.94177246]
[-201.10064697 -382.33157349]
[-192.73831177 -369.87881470]
[-184.37596130 -357.42605591]
[-176.01362610 -344.97329712]
[-167.65127563 -332.52053833]
[-154.13258362 -326.26800537]
[-152.86251831 -310.49786377]
[-144.50016785 -298.04510498]
[-136.13783264 -285.59234619]
[-122.61912537 -279.33981323]
[-121.34906006 -263.56967163]
[-112.98671722 -251.11692810]
[-104.62437439 -238.66415405]
[-96.26203156 -226.21139526]
[-87.89968872 -213.75863647]
[-79.53734589 -201.30587769]
[-71.17501068 -188.85311890]
[-62.58398056 -176.55700684]
[-53.76720047 -164.42175293]
[-44.95042419 -152.28649902]
[-36.13364410 -140.15124512]
[-27.31686592 -128.01599121]
[-23.87014961 -127.11312866]
[-20.69873619 -124.47283173]
[-18.62500954 -120.24733734]
[-18.36991310 -114.95505524]
[-10.23911285 -102.34989166]
[-2.10831261 -89.74472809]
[8.08017254 -88.48416138]
[16.04612923 -81.66472626]
[18.98336411 -71.36921692]
[15.68204021 -60.95351028]
[23.34150887 -48.05651093]
[31.00097656 -35.15951538]
[38.66044617 -22.26251793]
[43.02168274 -20.23002052]
[46.13352585 -15.41566849]
[46.35450363 -8.74438858]
[53.53217697 4.42683029]
[60.70985031 17.59804916]
[67.88751984 30.76926804]
[75.06520081 43.94048691]
[87.94932556 51.41367722]
[87.75888824 67.23373413]
[94.93656158 80.40495300]
[102.11423492 93.57617188]
[106.32939148 88.29953003]
[112.38072968 84.49364471]
[119.85016632 82.62159729]
[128.21772766 83.03984070]
[136.88694763 85.97751617]
[145.21420288 91.52162170]
[156.29934692 101.62705231]
[167.38447571 111.73249054]
[185.44429016 115.23342896]
[190.14627075 132.12342834]
[201.41625977 142.02229309]
[217.45426941 142.42439270]
[227.02416992 155.30059814]
[222.78475952 170.77337646]
[207.98814392 176.97334290]
[193.98501587 169.14440918]
[191.51737976 153.29228210]
[180.24740601 143.39340210]
[168.13511658 143.85615540]
[158.66122437 135.66731262]
[157.27903748 122.81761932]
[146.19390869 112.71218872]
[135.10877991 102.60675049]
[128.27610779 105.69942474]
[126.80040741 120.62665558]
[114.61076355 111.88476562]
[107.77809143 114.97743988]
[108.05527496 129.97488403]
[108.33245850 144.97232056]
[108.60964203 159.96975708]
[108.88682556 174.96719360]
[109.16400909 189.96463013]
[109.44119263 204.96206665]
[120.99360657 215.74713135]
[121.45269775 231.54475403]
[110.54610443 242.98248291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 166]
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[9 160]
[10 133]
[11 132]
[12 131]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[19 122]
[20 121]
[21 120]
[22 119]
[24 115]
[25 114]
[26 113]
[27 109]
[28 108]
[29 107]
[30 106]
[31 105]
[34 104]
[35 103]
[36 102]
[37 101]
[38 100]
[39 99]
[40 98]
[42 96]
[43 95]
[44 94]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[58 82]
[59 81]
[60 80]
[61 79]
[62 78]
[65 76]
[66 75]
[67 74]
[139 156]
[140 155]
[141 154]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
