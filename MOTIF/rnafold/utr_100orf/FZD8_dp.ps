%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FZD8)
} def

/sequence { (\
ACAGCAUGGAGUGGGGUUACCUGUUGGAAGUGACCUCGCUGCUGGCCGCCUUGGCGCUGCUGCAGCGCUCUAGCGGCGCUGCGGCCGCCUCGGCCAAGGAGCUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.015202811 ubox
2 8 0.026433117 ubox
2 11 0.016095445 ubox
2 13 0.004164831 ubox
2 41 0.013603300 ubox
2 44 0.501901201 ubox
2 104 0.844430402 ubox
3 7 0.021469377 ubox
3 12 0.004562766 ubox
3 40 0.013455814 ubox
3 43 0.509440059 ubox
3 103 0.845879340 ubox
4 12 0.014748021 ubox
4 39 0.013256098 ubox
4 42 0.511238892 ubox
4 46 0.056816574 ubox
4 102 0.846133151 ubox
5 11 0.015569328 ubox
5 13 0.003483025 ubox
5 38 0.013136953 ubox
5 41 0.511189864 ubox
5 44 0.009245681 ubox
5 45 0.057225663 ubox
5 101 0.845205676 ubox
5 104 0.008517378 ubox
6 12 0.004404871 ubox
6 40 0.359744110 ubox
6 43 0.015584379 ubox
6 103 0.007450495 ubox
7 11 0.004152747 ubox
7 41 0.022057204 ubox
7 44 0.108094171 ubox
7 48 0.083529290 ubox
7 96 0.007563921 ubox
8 40 0.015594182 ubox
8 43 0.335235428 ubox
8 47 0.119048470 ubox
8 95 0.006954901 ubox
8 103 0.003167108 ubox
9 37 0.006732753 ubox
9 39 0.013522490 ubox
9 42 0.410065323 ubox
9 46 0.118952975 ubox
9 94 0.005613453 ubox
9 102 0.003224787 ubox
10 36 0.005627737 ubox
10 40 0.903158373 ubox
10 43 0.008213332 ubox
11 39 0.997352314 ubox
11 42 0.008134468 ubox
12 38 0.997272886 ubox
12 41 0.007562007 ubox
13 37 0.999699100 ubox
14 36 0.999306319 ubox
14 37 0.003630349 ubox
15 35 0.999972492 ubox
16 34 0.999980181 ubox
17 29 0.004193796 ubox
17 30 0.005383580 ubox
17 33 0.999678292 ubox
18 28 0.008786252 ubox
18 29 0.013628049 ubox
18 32 0.998769211 ubox
19 31 0.993697212 ubox
20 27 0.330530601 ubox
20 30 0.804966369 ubox
21 26 0.384873699 ubox
21 27 0.239772244 ubox
21 30 0.489145156 ubox
22 26 0.218531772 ubox
22 29 0.684116926 ubox
24 30 0.003328082 ubox
25 29 0.013827401 ubox
38 46 0.007039478 ubox
38 102 0.062289035 ubox
39 45 0.007088193 ubox
39 98 0.006364983 ubox
39 99 0.014405420 ubox
39 101 0.062645601 ubox
40 44 0.006434812 ubox
40 48 0.003565715 ubox
40 97 0.008434398 ubox
40 98 0.020845936 ubox
40 100 0.149046171 ubox
41 47 0.014913761 ubox
41 49 0.018272454 ubox
41 82 0.008624108 ubox
41 88 0.006219805 ubox
41 94 0.003887712 ubox
41 102 0.031525857 ubox
42 48 0.025768393 ubox
42 81 0.008617880 ubox
42 87 0.006220361 ubox
42 93 0.003957665 ubox
42 98 0.423435170 ubox
42 99 0.106333464 ubox
42 101 0.031642768 ubox
42 105 0.103388961 ubox
43 87 0.006819485 ubox
43 92 0.003847445 ubox
43 96 0.652639242 ubox
43 97 0.300347846 ubox
43 98 0.073772431 ubox
43 100 0.024637369 ubox
43 104 0.108652890 ubox
44 86 0.018051083 ubox
44 91 0.003244500 ubox
44 95 0.808722371 ubox
44 103 0.142504967 ubox
45 55 0.021470927 ubox
45 77 0.020238492 ubox
45 85 0.018185801 ubox
45 88 0.003416050 ubox
45 94 0.809338029 ubox
45 102 0.421784268 ubox
46 54 0.021492714 ubox
46 76 0.020273142 ubox
46 84 0.018187557 ubox
46 87 0.003420331 ubox
46 93 0.809308644 ubox
46 99 0.071399554 ubox
46 101 0.422126818 ubox
46 105 0.209512560 ubox
47 53 0.021484485 ubox
47 75 0.020275141 ubox
47 83 0.018187326 ubox
47 92 0.809201588 ubox
47 98 0.071706068 ubox
47 104 0.213687368 ubox
48 52 0.013302163 ubox
48 55 0.007929384 ubox
48 74 0.020275782 ubox
48 82 0.018187667 ubox
48 85 0.003621975 ubox
48 91 0.791763254 ubox
48 94 0.098721469 ubox
48 102 0.075260629 ubox
48 103 0.195088582 ubox
49 54 0.007983205 ubox
49 73 0.019794742 ubox
49 81 0.018155507 ubox
49 84 0.003665939 ubox
49 93 0.099300673 ubox
49 99 0.573329107 ubox
49 101 0.058736179 ubox
50 73 0.004284789 ubox
50 83 0.003664328 ubox
50 92 0.099595247 ubox
50 98 0.577190210 ubox
50 99 0.024026400 ubox
51 72 0.005918885 ubox
51 97 0.577169221 ubox
51 98 0.017834087 ubox
52 81 0.003361127 ubox
52 96 0.577317344 ubox
52 97 0.012526778 ubox
53 69 0.019277253 ubox
53 70 0.004250705 ubox
53 80 0.018303674 ubox
53 86 0.003378174 ubox
53 89 0.801429077 ubox
53 90 0.139161033 ubox
53 91 0.008412089 ubox
53 95 0.577770846 ubox
54 68 0.020310508 ubox
54 79 0.018554978 ubox
54 88 0.803016632 ubox
54 89 0.140168157 ubox
54 90 0.012864489 ubox
54 94 0.577768577 ubox
55 67 0.020319010 ubox
55 78 0.018555662 ubox
55 87 0.803051703 ubox
55 92 0.042583143 ubox
55 93 0.575883929 ubox
56 66 0.020319547 ubox
56 77 0.018555755 ubox
56 85 0.008633503 ubox
56 86 0.785366353 ubox
56 88 0.592191609 ubox
56 91 0.031156925 ubox
56 102 0.010446330 ubox
57 65 0.020319665 ubox
57 76 0.018555900 ubox
57 84 0.011963937 ubox
57 87 0.592568628 ubox
57 101 0.010459991 ubox
58 64 0.020294456 ubox
58 75 0.018541942 ubox
58 83 0.011025093 ubox
58 87 0.014264165 ubox
58 100 0.010425643 ubox
59 63 0.019971280 ubox
59 74 0.018555306 ubox
59 82 0.007738997 ubox
59 85 0.996302235 ubox
59 86 0.017350411 ubox
59 88 0.003253471 ubox
60 73 0.018555365 ubox
60 81 0.007367705 ubox
60 84 0.999460760 ubox
60 98 0.010398384 ubox
61 72 0.018480450 ubox
61 83 0.998735940 ubox
61 97 0.010079325 ubox
62 68 0.005586498 ubox
62 71 0.017097037 ubox
62 79 0.005788028 ubox
62 82 0.999560140 ubox
63 67 0.005603628 ubox
63 78 0.005798814 ubox
63 81 0.999583962 ubox
64 80 0.999359641 ubox
65 79 0.999594427 ubox
66 75 0.005964034 ubox
66 78 0.999584350 ubox
67 74 0.007227033 ubox
67 77 0.999572454 ubox
68 73 0.007413722 ubox
68 76 0.998730629 ubox
69 75 0.900352328 ubox
69 76 0.038400271 ubox
70 75 0.342267416 ubox
70 76 0.005241220 ubox
71 75 0.010043774 ubox
78 102 0.014077817 ubox
79 98 0.004804780 ubox
79 99 0.009181219 ubox
79 101 0.014088197 ubox
80 97 0.004816026 ubox
80 98 0.009240744 ubox
80 100 0.013976023 ubox
83 95 0.023093470 ubox
84 94 0.023123149 ubox
85 93 0.023126941 ubox
86 92 0.025457376 ubox
87 91 0.023860189 ubox
87 94 0.012302393 ubox
88 93 0.012427839 ubox
88 99 0.010527349 ubox
89 98 0.010656321 ubox
89 105 0.003719201 ubox
90 97 0.010147169 ubox
90 100 0.004293432 ubox
90 105 0.011883679 ubox
91 98 0.003270179 ubox
91 99 0.004424396 ubox
91 104 0.020626629 ubox
92 103 0.020721051 ubox
93 102 0.020750452 ubox
94 101 0.020710186 ubox
94 105 0.005569549 ubox
95 104 0.017490493 ubox
96 103 0.016237184 ubox
97 103 0.007463575 ubox
98 102 0.007975127 ubox
2 104 0.9500000 lbox
3 103 0.9500000 lbox
4 102 0.9500000 lbox
5 101 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
43 96 0.9500000 lbox
44 95 0.9500000 lbox
45 94 0.9500000 lbox
46 93 0.9500000 lbox
47 92 0.9500000 lbox
48 91 0.9500000 lbox
53 89 0.9500000 lbox
54 88 0.9500000 lbox
55 87 0.9500000 lbox
56 86 0.9500000 lbox
59 85 0.9500000 lbox
60 84 0.9500000 lbox
61 83 0.9500000 lbox
62 82 0.9500000 lbox
63 81 0.9500000 lbox
64 80 0.9500000 lbox
65 79 0.9500000 lbox
66 78 0.9500000 lbox
67 77 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
showpage
end
%%EOF
