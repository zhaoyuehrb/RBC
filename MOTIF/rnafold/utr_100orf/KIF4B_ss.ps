%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUUGAAACUUGGCGGUUAAAGCUCCGGCUGGGACAGGGCGGCGGGAGACCCCGGGUGAACGGGGAAGGGACAUUUAGUUUGAGACGGUGCUGAGAUAGGAUCAUGAAGGAAGAGGUGAAGGGAAUUCCUGUAAGAGUGGCACUGCGUUGUCGCCCUCUGGUCCCCAAAGAGAUUAGCGAGGGCUGCCAGAUGUGCCUUUCCU\
) } def
/len { sequence length } bind def

/coor [
[-116.03598022 281.97332764]
[-118.37929535 291.72631836]
[-123.12966919 300.54132080]
[-129.96382141 307.83682251]
[-138.42132568 313.13403320]
[-147.93563843 316.08837891]
[-157.87205505 316.51187134]
[-167.56999207 314.38507080]
[-176.38699341 309.85781860]
[-183.74119568 303.23858643]
[-196.76953125 310.67245483]
[-209.79788208 318.10632324]
[-222.82621765 325.54019165]
[-235.85455322 332.97406006]
[-248.88288879 340.40792847]
[-254.78854370 347.38180542]
[-262.16708374 347.85409546]
[-275.30728149 355.08840942]
[-288.44744873 362.32272339]
[-274.99707031 368.96252441]
[-271.64904785 383.58410645]
[-280.87005615 395.41513062]
[-295.86657715 395.73913574]
[-305.58996582 384.31741333]
[-302.87588501 369.56384277]
[-316.52899170 375.77615356]
[-330.18206787 381.98846436]
[-343.83517456 388.20074463]
[-353.19177246 400.95867920]
[-367.98065186 399.18719482]
[-381.63375854 405.39947510]
[-395.28686523 411.61178589]
[-408.93997192 417.82409668]
[-411.91052246 433.05416870]
[-423.28869629 443.60485840]
[-438.69934082 445.41918945]
[-452.21673584 437.79949951]
[-458.64318848 423.67575073]
[-455.50759888 408.47879028]
[-444.01565552 398.05218506]
[-428.58621216 396.40512085]
[-415.15228271 404.17098999]
[-401.49917603 397.95867920]
[-387.84606934 391.74639893]
[-374.19296265 385.53408813]
[-365.81292725 373.22048950]
[-350.04748535 374.54763794]
[-336.39437866 368.33535767]
[-322.74127197 362.12304688]
[-309.08816528 355.91073608]
[-295.68179321 349.18252563]
[-282.54159546 341.94821167]
[-269.40139771 334.71389771]
[-256.31677246 327.37957764]
[-243.28842163 319.94570923]
[-230.26008606 312.51184082]
[-217.23173523 305.07797241]
[-204.20339966 297.64410400]
[-191.17506409 290.21026611]
[-192.43942261 270.04571533]
[-183.26480103 251.95906067]
[-166.11859131 240.98580933]
[-145.69944763 240.22500610]
[-127.64976501 249.96443176]
[-115.35519409 241.37118530]
[-103.06063080 232.77795410]
[-90.76606750 224.18472290]
[-78.47149658 215.59149170]
[-66.17693329 206.99826050]
[-53.88236618 198.40502930]
[-41.58780289 189.81179810]
[-35.58861160 176.17878723]
[-19.84490776 174.61468506]
[-7.55034256 166.02145386]
[4.74422312 157.42822266]
[17.03878975 148.83499146]
[29.33335495 140.24176025]
[41.62792206 131.64852905]
[47.62710953 118.01551819]
[63.37081528 116.45142365]
[75.66538239 107.85819244]
[76.09954071 90.90644073]
[87.04344940 77.95339203]
[103.68474579 74.69490814]
[110.10453796 61.13813019]
[105.02301788 46.41345978]
[111.72671509 32.75640488]
[125.79575348 28.00269890]
[132.21554565 14.44591713]
[138.63533020 0.88913536]
[145.05511475 -12.66764641]
[151.47491455 -26.22442818]
[157.89469910 -39.78120804]
[164.31448364 -53.33798981]
[170.73426819 -66.89477539]
[162.97862244 -85.42536163]
[171.21839905 -103.41069031]
[189.73658752 -109.44905853]
[195.52963257 -123.28526306]
[201.32267761 -137.12147522]
[207.11572266 -150.95767212]
[212.90876770 -164.79388428]
[218.70181274 -178.63009644]
[223.74842834 -192.75566101]
[228.03424072 -207.13035583]
[232.32005310 -221.50505066]
[236.60586548 -235.87974548]
[225.99519348 -246.98420715]
[222.37388611 -261.91006470]
[226.71609497 -276.64239502]
[237.85374451 -287.21820068]
[252.79090881 -290.79269409]
[267.50952148 -286.40435791]
[278.05038452 -275.23358154]
[281.57803345 -260.28530884]
[277.14358521 -245.58050537]
[265.93981934 -235.07470703]
[250.98056030 -231.59393311]
[246.69474792 -217.21923828]
[242.40893555 -202.84454346]
[238.12312317 -188.46984863]
[251.29043579 -195.65469360]
[266.02032471 -192.82096863]
[275.58200073 -181.26353455]
[275.60626221 -166.26354980]
[266.08200073 -154.67526245]
[251.36134338 -151.79391479]
[238.17086792 -158.93614197]
[232.53802490 -172.83705139]
[226.74497986 -159.00083923]
[220.95193481 -145.16462708]
[215.15888977 -131.32843018]
[209.36584473 -117.49221802]
[203.57278442 -103.65601349]
[209.88339233 -95.55129242]
[212.27706909 -85.47922516]
[210.25625610 -75.24343109]
[204.12013245 -66.70555878]
[194.92243958 -61.44674683]
[184.29104614 -60.47498322]
[177.87126160 -46.91820145]
[171.45147705 -33.36141968]
[165.03169250 -19.80463982]
[158.61190796 -6.24785805]
[152.19210815 7.30892324]
[145.77232361 20.86570549]
[139.35253906 34.42248535]
[144.58993530 48.31871796]
[138.27247620 62.15867615]
[123.66131592 67.55791473]
[117.24153137 81.11470032]
[121.45195007 86.08100128]
[124.27172089 91.94962311]
[125.51802826 98.34012604]
[125.11008453 104.83822632]
[138.35906982 111.87132263]
[151.60804749 118.90441895]
[164.85704041 125.93751526]
[178.10601807 132.97061157]
[191.35501099 140.00370789]
[204.70970154 146.83393860]
[218.16700745 153.45971680]
[231.62431335 160.08549500]
[245.08161926 166.71127319]
[258.53890991 173.33705139]
[272.20346069 165.98449707]
[287.57546997 168.10130310]
[298.74411011 178.87355042]
[301.41479492 194.15905762]
[294.56060791 208.08026123]
[280.81713867 215.28416443]
[265.46899414 213.00071716]
[254.41786194 202.10795593]
[251.91314697 186.79435730]
[238.45584106 180.16857910]
[224.99853516 173.54280090]
[211.54122925 166.91702271]
[198.08392334 160.29124451]
[193.35081482 160.95535278]
[188.15072632 158.65046692]
[184.32191467 153.25268555]
[171.07292175 146.21958923]
[157.82394409 139.18649292]
[144.57496643 132.15339661]
[131.32597351 125.12030792]
[118.07699585 118.08721161]
[101.55896759 125.52439117]
[84.25861359 120.15275574]
[71.96405029 128.74598694]
[65.08546448 142.99365234]
[50.22115326 143.94308472]
[37.92658615 152.53633118]
[25.63202286 161.12956238]
[13.33745670 169.72279358]
[1.04289067 178.31602478]
[-11.25167465 186.90925598]
[-18.13025475 201.15692139]
[-32.99456787 202.10635376]
[-45.28913498 210.69958496]
[-57.58369827 219.29283142]
[-69.87826538 227.88606262]
[-82.17282867 236.47929382]
[-94.46739960 245.07252502]
[-106.76196289 253.66575623]
[-119.05652618 262.25900269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 59]
[11 58]
[12 57]
[13 56]
[14 55]
[15 54]
[17 53]
[18 52]
[19 51]
[25 50]
[26 49]
[27 48]
[28 47]
[30 45]
[31 44]
[32 43]
[33 42]
[64 205]
[65 204]
[66 203]
[67 202]
[68 201]
[69 200]
[70 199]
[71 198]
[73 196]
[74 195]
[75 194]
[76 193]
[77 192]
[78 191]
[80 189]
[81 188]
[84 151]
[85 150]
[88 147]
[89 146]
[90 145]
[91 144]
[92 143]
[93 142]
[94 141]
[95 140]
[98 134]
[99 133]
[100 132]
[101 131]
[102 130]
[103 129]
[104 121]
[105 120]
[106 119]
[107 118]
[155 186]
[156 185]
[157 184]
[158 183]
[159 182]
[160 181]
[161 178]
[162 177]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
