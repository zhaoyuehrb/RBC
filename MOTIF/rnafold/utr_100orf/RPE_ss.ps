%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGAGAAGGGGCGGGGCCAAAACUGCGCGCCCAAUCGGGGUGACGCUCUAGCCUUGCCGGGGACUCGUGGGUAACUUGCUUUUGGGAGCCAGCGGUAUGGCGUCGGGCUGCAAGAUUGGCCCGUCCAUCCUCAACAGCGACCUGGCCAAUUUAGGGGCCGAGUGCCUCCGGAUGCUAGACUCUGGGGCCGAUUAUC\
) } def
/len { sequence length } bind def

/coor [
[84.98700714 165.19226074]
[96.86537933 155.20806885]
[95.67662811 140.25524902]
[94.48787689 125.30242920]
[87.96314240 121.60407257]
[88.08223724 136.60360718]
[75.15185547 144.20658875]
[62.10224533 136.81011963]
[61.98287964 121.81059265]
[74.91367340 114.20736694]
[68.38893890 110.50901031]
[54.94903183 117.17001343]
[41.50912476 123.83100891]
[28.06921577 130.49200439]
[14.62930965 137.15301514]
[1.18940353 143.81401062]
[-12.25050354 150.47500610]
[-25.69041061 157.13600159]
[-24.91004372 169.14706421]
[-28.22038460 180.68324280]
[-35.21035385 190.39674377]
[-45.04040146 197.16093445]
[-56.54330444 200.20100403]
[-68.36273193 199.18267822]
[-79.11318207 194.24879456]
[-87.54238129 185.99980164]
[-101.28400421 192.01376343]
[-115.02563477 198.02770996]
[-128.71911621 204.15049744]
[-142.36360168 210.38172913]
[-156.00807190 216.61294556]
[-169.65255737 222.84417725]
[-183.29704285 229.07540894]
[-190.22816467 243.54396057]
[-205.89334106 247.00543213]
[-218.27558899 236.80447388]
[-217.87629700 220.76638794]
[-205.00178528 211.19422913]
[-189.52825928 215.43092346]
[-175.88378906 209.19969177]
[-162.23930359 202.96847534]
[-148.59481812 196.73724365]
[-134.95034790 190.50602722]
[-130.16682434 184.86166382]
[-121.03958893 184.28608704]
[-107.29796600 178.27212524]
[-93.55633545 172.25817871]
[-92.38484955 154.18673706]
[-82.16242981 139.13558960]
[-65.64209747 131.31164551]
[-47.35133743 132.95448303]
[-32.35140991 143.69610596]
[-18.91150284 137.03509521]
[-5.47159576 130.37409973]
[7.96831083 123.71310425]
[21.40821838 117.05210114]
[34.84812546 110.39110565]
[48.28803253 103.73010254]
[61.72793579 97.06910706]
[69.12464905 84.01963806]
[67.93589783 69.06681061]
[66.74714661 54.11399078]
[65.55839539 39.16117096]
[64.36965179 24.20834732]
[50.60352707 17.54192734]
[42.07880402 4.96314096]
[41.00200272 -10.09364796]
[47.56243134 -23.57759094]
[59.90814590 -31.91119385]
[58.71939468 -46.86401749]
[57.53064728 -61.81683731]
[56.34189606 -76.76966095]
[55.15314865 -91.72248077]
[40.28116226 -103.44526672]
[38.71616364 -121.99696350]
[50.98628235 -135.57185364]
[49.32370758 -150.47943115]
[47.66113663 -165.38700867]
[45.99856186 -180.29458618]
[44.33599091 -195.20216370]
[32.27458572 -205.05915833]
[30.80086708 -220.20124817]
[40.27233505 -231.63920593]
[38.60976028 -246.54678345]
[29.39054871 -259.40432739]
[35.66950607 -272.91076660]
[34.00693512 -287.81835938]
[24.78772163 -300.67590332]
[31.06668091 -314.18234253]
[29.40410805 -329.08993530]
[27.74153519 -343.99749756]
[26.07896233 -358.90509033]
[13.57890987 -368.57586670]
[11.66122627 -384.26339722]
[21.46363831 -396.66049194]
[37.17054749 -398.41220093]
[49.46332550 -388.47927856]
[51.04888153 -372.75473022]
[40.98653793 -360.56765747]
[42.64911270 -345.66006470]
[44.31168365 -330.75250244]
[45.97425842 -315.84490967]
[55.07455063 -304.05364990]
[48.91451263 -289.48092651]
[50.57708359 -274.57336426]
[59.67737961 -262.78207397]
[53.51733780 -248.20935059]
[55.17991257 -233.30177307]
[66.93856812 -224.23152161]
[68.83701324 -209.13679504]
[59.24356461 -196.86474609]
[60.90613937 -181.95716858]
[62.56871033 -167.04959106]
[64.23128510 -152.14201355]
[65.89385986 -137.23443604]
[76.14830780 -132.20483398]
[82.76593018 -122.74905396]
[84.00508118 -111.15370941]
[79.44222260 -100.29187012]
[70.10597229 -92.91123199]
[71.29471588 -77.95840454]
[72.48346710 -63.00558472]
[73.67221832 -48.05276489]
[74.86096954 -33.09994507]
[88.36832428 -26.82166100]
[96.97682953 -14.54364681]
[98.29254913 0.49414799]
[91.86237335 14.26185036]
[79.32247162 23.01959801]
[80.51122284 37.97241974]
[81.69996643 52.92524338]
[82.88871765 67.87806702]
[84.07746887 82.83088684]
[89.95976257 73.49282074]
[100.78501129 66.73526764]
[115.20230865 64.95201874]
[130.78842163 69.79325867]
[144.44862366 81.71919250]
[159.35620117 83.38176727]
[168.24272156 81.22132111]
[174.48643494 85.19080353]
[189.36575317 87.08969116]
[204.03439331 81.16163635]
[215.67977905 90.44786835]
[230.55911255 92.34675598]
[245.43843079 94.24564362]
[260.31774902 96.14453125]
[275.19708252 98.04341125]
[285.73513794 86.65356445]
[300.96191406 83.66613007]
[315.02239990 90.22984314]
[322.51007080 103.82082367]
[320.54571533 119.21305847]
[309.88470459 130.48793030]
[294.62640381 133.30999756]
[280.63796997 126.59414673]
[273.29818726 112.92273712]
[258.41885376 111.02384949]
[243.53953552 109.12496185]
[228.66021729 107.22607422]
[213.78089905 105.32718658]
[200.17652893 111.39106750]
[187.46687317 101.96901703]
[172.58755493 100.07012939]
[157.69363403 98.28934479]
[142.78605652 96.62677002]
[135.38934326 109.67623901]
[144.47349548 121.61267090]
[153.55763245 133.54910278]
[162.64178467 145.48551941]
[171.72592163 157.42195129]
[180.81007385 169.35838318]
[189.89422607 181.29479980]
[205.40388489 180.81553650]
[218.21421814 189.57196045]
[223.39938354 204.19706726]
[218.96556091 219.06719971]
[206.61766052 228.46449280]
[191.10371399 228.77549744]
[178.38911438 219.88061523]
[173.36293030 205.20011902]
[177.95779419 190.37895203]
[168.87364197 178.44252014]
[159.78950500 166.50610352]
[150.70535278 154.56967163]
[141.62121582 142.63323975]
[132.53706360 130.69680786]
[123.45291901 118.76038361]
[109.44070435 124.11367798]
[110.62944794 139.06649780]
[111.81819916 154.01931763]
[125.12488556 162.00129700]
[131.16754150 176.29345703]
[127.62263489 191.40019226]
[115.85327148 201.51263428]
[100.38500214 202.74237061]
[87.16568756 194.61651611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[11 59]
[12 58]
[13 57]
[14 56]
[15 55]
[16 54]
[17 53]
[18 52]
[26 47]
[27 46]
[28 45]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[60 133]
[61 132]
[62 131]
[63 130]
[64 129]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[83 108]
[84 107]
[86 105]
[87 104]
[89 102]
[90 101]
[91 100]
[92 99]
[138 166]
[139 165]
[141 164]
[142 163]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[167 188]
[168 187]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
