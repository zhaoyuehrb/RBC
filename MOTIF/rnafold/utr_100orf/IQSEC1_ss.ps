%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:27:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCCCUCCACUUCUUGCCUGAGCCGCCUGCUCCUCUUGGAAACACGUUGAGCCUCCCCGCUGGAGAGGGAGCCAGAACAGGGAAGAACGGAUUCACACAGGAUGGCUUGCAGAAGACGCUAUUUCGUCGAGGGCGAGGCCCCCAGCAGUGAGACUGGCACAUCCCUGGACAGCCCCUCAGCCUACCCCCAGGGCCCCUUGG\
) } def
/len { sequence length } bind def

/coor [
[102.64882660 183.02651978]
[98.64852142 197.92620850]
[87.21251678 208.28099060]
[71.98999786 210.78666687]
[57.83841324 204.64369202]
[49.27347946 191.81225586]
[49.02824402 176.38684082]
[57.18095398 163.28964233]
[71.13011169 156.69990540]
[72.97343445 141.81359863]
[74.81675720 126.92729187]
[73.46582794 123.78834534]
[72.46458435 120.62663269]
[61.07350922 130.38591003]
[49.68243790 140.14517212]
[38.29136276 149.90444946]
[42.12028885 164.63879395]
[39.18414688 179.51380920]
[30.11784554 191.58949280]
[16.76247025 198.50288391]
[1.79160607 198.93031311]
[-11.82382488 192.84051514]
[-23.21489906 202.59979248]
[-34.60597229 212.35906982]
[-45.99704742 222.11834717]
[-48.65978241 237.93887329]
[-62.75829315 245.59469604]
[-77.47740936 239.21290588]
[-81.52587891 223.68907166]
[-71.79807281 210.93174744]
[-55.75632095 210.72726440]
[-44.36524582 200.96798706]
[-32.97417450 191.20872498]
[-21.58309937 181.44944763]
[-25.51232338 167.06101990]
[-22.79355812 152.33290100]
[-13.91338348 140.19602966]
[-0.58990461 133.08934021]
[14.55945015 132.46963501]
[28.53208923 138.51338196]
[39.92316055 128.75410461]
[51.31423569 118.99482727]
[62.70531082 109.23555756]
[60.82000732 101.97637939]
[48.17740250 110.04883575]
[36.59327316 100.51951599]
[42.07653046 86.55764008]
[57.04939651 87.45803070]
[55.16409302 80.19885254]
[40.46369171 77.21588135]
[25.40047264 82.05427551]
[14.46608162 71.94050598]
[-0.23432237 68.95752716]
[-14.93472576 65.97455597]
[-27.96912193 74.91212463]
[-43.49011230 71.93313599]
[-52.28937149 58.80497742]
[-49.14645386 43.31634521]
[-35.92599487 34.65637970]
[-20.47146225 37.96287537]
[-11.95175266 51.27415466]
[2.74865079 54.25712585]
[17.44905472 57.24010086]
[31.46080017 52.18834305]
[43.44666290 62.51547623]
[58.14706802 65.49845123]
[72.21593475 60.29586029]
[81.43872070 48.46622467]
[90.66149902 36.63658524]
[99.88428497 24.80695152]
[109.10706329 12.97731495]
[111.91783905 4.28008747]
[118.56408691 1.03796852]
[127.96794128 -10.64824009]
[122.24405670 -23.41479111]
[122.57875061 -37.33557892]
[128.84968567 -49.69426346]
[139.78175354 -58.10389709]
[153.20591736 -60.96788788]
[166.48953247 -57.78287888]
[176.07223511 -69.32289124]
[185.65493774 -80.86289978]
[195.23764038 -92.40290833]
[204.82034302 -103.94291687]
[214.40304565 -115.48292542]
[208.50877380 -130.92837524]
[211.19097900 -147.14611816]
[221.62448120 -159.72680664]
[236.88977051 -165.29841614]
[252.78945923 -162.42970276]
[262.19332886 -174.11590576]
[271.59716797 -185.80210876]
[274.22085571 -201.40426636]
[288.22787476 -206.46913147]
[297.63171387 -218.15533447]
[307.03558350 -229.84155273]
[316.43942261 -241.52775574]
[325.84329224 -253.21395874]
[321.19317627 -269.47381592]
[327.09048462 -285.14654541]
[341.02664185 -294.12762451]
[357.40414429 -293.04534912]
[366.62692261 -304.87496948]
[365.81982422 -317.75152588]
[373.74966431 -327.41540527]
[385.74154663 -329.02963257]
[395.14541626 -340.71585083]
[404.54925537 -352.40206909]
[413.95312500 -364.08825684]
[423.35696411 -375.77447510]
[432.67056274 -387.53274536]
[441.89334106 -399.36239624]
[436.24435425 -413.57632446]
[438.45385742 -428.61010742]
[447.82943726 -440.44079590]
[461.77462769 -445.95330811]
[476.50744629 -443.76028442]
[485.73022461 -455.58990479]
[494.95300293 -467.41955566]
[504.17578125 -479.24917603]
[501.98513794 -494.90090942]
[511.57012939 -507.46688843]
[527.24414062 -509.49194336]
[539.70806885 -499.77462769]
[541.56726074 -484.08007812]
[531.71875000 -471.71957397]
[516.00543213 -470.02639771]
[506.78265381 -458.19677734]
[497.55987549 -446.36712646]
[488.33706665 -434.53750610]
[494.05740356 -420.78454590]
[492.11282349 -405.91598511]
[482.92630005 -393.93792725]
[468.88549805 -388.12820435]
[453.72299194 -390.13958740]
[444.50021362 -378.30996704]
[442.86587524 -371.09796143]
[435.04318237 -366.37060547]
[425.63934326 -354.68441772]
[416.23547363 -342.99819946]
[406.83160400 -331.31198120]
[397.42776489 -319.62579346]
[395.67709351 -302.16671753]
[378.45654297 -295.65219116]
[369.23376465 -283.82257080]
[374.10198975 -271.38772583]
[372.17327881 -258.06451416]
[363.84576416 -247.34973145]
[351.21099854 -242.10882568]
[337.52951050 -243.81010437]
[328.12564087 -232.12390137]
[318.72180176 -220.43769836]
[309.31793213 -208.75148010]
[299.91406250 -197.06527710]
[297.96301270 -182.29901123]
[283.28338623 -176.39825439]
[273.87951660 -164.71205139]
[264.47567749 -153.02583313]
[270.23870850 -140.64093018]
[270.10153198 -126.91533661]
[264.03384399 -114.52924347]
[253.16908264 -105.92584991]
[239.59289551 -102.82947540]
[225.94305420 -105.90022278]
[216.36035156 -94.36021423]
[206.77764893 -82.82020569]
[197.19494629 -71.28019714]
[187.61224365 -59.74018478]
[178.02954102 -48.20017624]
[184.00283813 -33.18854141]
[181.57826233 -17.12014580]
[171.32369995 -4.39317417]
[155.96327209 1.46060443]
[139.65415955 -1.24438310]
[130.25028992 10.44182587]
[120.93669891 22.20009613]
[111.71392059 34.02973175]
[102.49113464 45.85936737]
[93.26835632 57.68900681]
[84.04557037 69.51863861]
[125.17159271 74.77423859]
[132.70109558 117.02682495]
[139.38717651 130.45426941]
[146.07325745 143.88171387]
[152.75932312 157.30917358]
[168.00427246 160.79133606]
[177.40303040 173.28924561]
[176.51776123 188.90174866]
[165.76649475 200.25711060]
[150.22563171 201.99366760]
[137.23310852 193.29148865]
[132.92356873 178.25946045]
[139.33187866 163.99523926]
[132.64579773 150.56779480]
[125.95972443 137.14035034]
[119.27365112 123.71289825]
[111.88100433 124.97732544]
[114.40961456 139.76266479]
[99.62424469 142.29103088]
[97.09571075 127.50618744]
[89.70306396 128.77061462]
[87.85974121 143.65692139]
[86.01641846 158.54322815]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 203]
[10 202]
[11 201]
[13 43]
[14 42]
[15 41]
[16 40]
[22 34]
[23 33]
[24 32]
[25 31]
[49 66]
[50 65]
[52 63]
[53 62]
[54 61]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[73 175]
[74 174]
[80 169]
[81 168]
[82 167]
[83 166]
[84 165]
[85 164]
[90 158]
[91 157]
[92 156]
[94 154]
[95 153]
[96 152]
[97 151]
[98 150]
[102 145]
[103 144]
[106 142]
[107 141]
[108 140]
[109 139]
[110 138]
[111 136]
[112 135]
[117 130]
[118 129]
[119 128]
[120 127]
[182 196]
[183 195]
[184 194]
[185 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
