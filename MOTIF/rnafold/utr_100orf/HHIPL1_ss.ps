%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAAGGGGAGCGCCCGCCCCUUCCCUGCCGCCGCGAGCGCCCCGGGAGGGGACCGGGGCUGCCGUCCCUCCGCCUCUUCCCCCGCGGGGCGUAGCGAUGGCCCGGGCCAGGGCCGGGGCGCUGCUGGCGCUUUGGGUGCUCGGGGCCGCCGCGCAUCCGCAGUGCCUGGACUUCAGGCCGCCCUUCCGGCCGACGC\
) } def
/len { sequence length } bind def

/coor [
[79.75454712 124.90347290]
[73.12464142 138.35874939]
[66.49473572 151.81401062]
[59.86483002 165.26928711]
[53.23492432 178.72456360]
[46.60501862 192.17984009]
[39.97511292 205.63510132]
[33.34520721 219.09037781]
[26.71530342 232.54565430]
[20.08539772 246.00093079]
[27.43377304 259.66769409]
[25.31224442 275.03906250]
[14.53658199 286.20440674]
[-0.74975187 288.87042236]
[-14.66884995 282.01196289]
[-21.86853600 268.26626587]
[-19.58038139 252.91882324]
[-8.68423080 241.87104797]
[6.63012505 239.37101746]
[13.26003075 225.91574097]
[19.88993645 212.46047974]
[26.51984215 199.00520325]
[33.14974594 185.54992676]
[39.77965164 172.09465027]
[46.40955734 158.63938904]
[53.03946304 145.18411255]
[59.66936874 131.72883606]
[66.29927063 118.27356720]
[61.86717224 103.94330597]
[48.79857635 96.58043671]
[35.72998428 89.21756744]
[22.66138840 81.85469818]
[6.84021568 81.82181549]
[-0.45037326 68.83348846]
[-13.51896763 61.47062302]
[-26.58756256 54.10775375]
[-39.20411301 56.81901169]
[-49.94004059 50.40959549]
[-53.31496811 38.78698349]
[-66.26570129 31.21872711]
[-79.21643829 23.65047264]
[-92.16716766 16.08221626]
[-105.11790466 8.51396179]
[-118.06864166 0.94570673]
[-131.01937866 -6.62254858]
[-143.97010803 -14.19080353]
[-156.98017883 -21.65659714]
[-170.04876709 -29.01946640]
[-179.07127380 -30.50802040]
[-183.26422119 -36.60312271]
[-196.21496582 -44.17137527]
[-209.16569519 -51.73963165]
[-222.11642456 -59.30788803]
[-235.06716919 -66.87614441]
[-241.68130493 -67.29363251]
[-246.38084412 -70.51103973]
[-248.30187988 -74.89327240]
[-261.00723267 -82.86659241]
[-273.71258545 -90.83991241]
[-286.41796875 -98.81322479]
[-299.12332153 -106.78654480]
[-312.01489258 -98.61523438]
[-327.17617798 -96.85510254]
[-341.59689331 -101.85562897]
[-352.41381836 -112.62395477]
[-357.47924805 -127.02201843]
[-355.78738403 -142.19108582]
[-347.67422485 -155.11930847]
[-334.75057983 -163.23979187]
[-319.58245850 -164.94020081]
[-305.18154907 -159.88293457]
[-294.40710449 -149.07209778]
[-289.39843750 -134.65419006]
[-291.14999390 -119.49190521]
[-278.44464111 -111.51858521]
[-265.73928833 -103.54527283]
[-253.03392029 -95.57195282]
[-240.32855225 -87.59863281]
[-227.49891663 -79.82687378]
[-214.54817200 -72.25862122]
[-201.59744263 -64.69036865]
[-188.64671326 -57.12211227]
[-175.69596863 -49.55385590]
[-162.68589783 -42.08806229]
[-149.61730957 -34.72519302]
[-142.23934937 -34.18035507]
[-136.40185547 -27.14153671]
[-123.45111847 -19.57328224]
[-110.50038147 -12.00502777]
[-97.54965210 -4.43677235]
[-84.59891510 3.13148284]
[-71.64818573 10.69973755]
[-58.69744873 18.26799393]
[-45.74671555 25.83624840]
[-28.22288132 24.97842026]
[-19.22469330 41.03915787]
[-6.15609932 48.40202713]
[6.91249514 55.76489639]
[21.79891396 55.27113724]
[30.02425575 68.78610229]
[43.09284973 76.14897156]
[56.16144562 83.51184082]
[69.23004150 90.87471008]
[81.77623749 75.23704529]
[100.40052795 70.60552979]
[117.23432159 77.87089539]
[125.79521179 93.10884857]
[140.79100037 93.46401978]
[155.78680420 93.81919098]
[170.78259277 94.17436981]
[185.78259277 94.17436981]
[200.77839661 93.81919098]
[215.77418518 93.46401978]
[230.76997375 93.10884857]
[245.76577759 92.75367737]
[250.23851013 90.02487946]
[254.84913635 89.35806274]
[258.78686523 90.45901489]
[261.47610474 92.75367737]
[276.47192383 93.10884857]
[291.46771240 93.46401978]
[300.13088989 90.53645325]
[306.69689941 93.94502258]
[321.68524170 94.53688049]
[336.67355347 95.12873840]
[351.67309570 95.24713898]
[366.66888428 94.89196777]
[381.66140747 94.41843414]
[396.64971924 93.82658386]
[411.63803101 93.23472595]
[426.62637329 92.64286804]
[441.61468506 92.05101776]
[456.60299683 91.45915985]
[470.08712769 83.18337250]
[483.10977173 90.41246796]
[498.09811401 89.82061005]
[513.08642578 89.22875977]
[528.07476807 88.63690186]
[543.06304932 88.04505157]
[558.05139160 87.45319366]
[573.03967285 86.86133575]
[586.52380371 78.58554840]
[599.54650879 85.81464386]
[614.53479004 85.22279358]
[629.52313232 84.63093567]
[641.42309570 73.87125397]
[657.23089600 76.60853577]
[664.82012939 90.74298096]
[658.36901855 105.43184662]
[642.82629395 109.40709686]
[630.11499023 99.61925507]
[615.12664795 100.21110535]
[600.13836670 100.80296326]
[587.72625732 109.03641510]
[573.63153076 101.84965515]
[558.64324951 102.44151306]
[543.65490723 103.03337097]
[528.66662598 103.62522125]
[513.67828369 104.21707916]
[498.68997192 104.80892944]
[483.70162964 105.40078735]
[471.28958130 113.63423920]
[457.19485474 106.44747925]
[442.20654297 107.03933716]
[427.21820068 107.63118744]
[412.22988892 108.22304535]
[397.24157715 108.81490326]
[382.25326538 109.40675354]
[375.68722534 112.81533051]
[367.02404785 109.88775635]
[352.02825928 110.24292755]
[349.99526978 112.18649292]
[347.06622314 113.43778992]
[343.50231934 113.65007782]
[339.68600464 112.57804871]
[336.08169556 110.11705780]
[321.09338379 109.52519989]
[306.10507202 108.93334198]
[291.11254883 108.45981598]
[276.11672974 108.10464478]
[261.12094116 107.74947357]
[246.12094116 107.74947357]
[231.12515259 108.10464478]
[216.12934875 108.45981598]
[201.13356018 108.81498718]
[186.13777161 109.17015839]
[183.44850159 111.46482086]
[179.51078796 112.56578064]
[174.90016174 111.89896393]
[170.42742920 109.17015839]
[155.43162537 108.81498718]
[140.43583679 108.45981598]
[125.44004059 108.10464478]
[122.88326263 115.19818878]
[118.33727264 121.47810364]
[112.06314087 126.38500977]
[104.47917938 129.44378662]
[96.13365936 130.30760193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[29 103]
[30 102]
[31 101]
[32 100]
[34 98]
[35 97]
[36 96]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 89]
[45 88]
[46 87]
[47 85]
[48 84]
[50 83]
[51 82]
[52 81]
[53 80]
[54 79]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[107 193]
[108 192]
[109 191]
[110 190]
[111 186]
[112 185]
[113 184]
[114 183]
[115 182]
[119 181]
[120 180]
[121 179]
[123 178]
[124 177]
[125 176]
[126 171]
[127 170]
[128 168]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[143 153]
[144 152]
[145 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
