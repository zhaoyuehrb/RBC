%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUCCCGGCAUCUGCACGUGGUUAUGCUGCCGGAGUUUGGGCCGCCACUGUAGGAAAAGUAACUUCAGCUGCAGCCCCAAAGCGAGUGAGCCGAGCCGGAGCCAUGGAGGGCCAGAGCGUGGAGGAGCUGCUCGCAAAGGCAGAGCAGGACGAGGCAGAGAAGUUGCAACGCAUCACGGUGCACAAGGAGCUGGAGCUGCAGU\
) } def
/len { sequence length } bind def

/coor [
[100.81974030 283.48303223]
[100.13036346 268.49890137]
[99.44099426 253.51473999]
[86.54287720 242.72561646]
[85.41419983 225.60939026]
[97.24036407 212.72212219]
[96.32144928 197.75028992]
[95.40253448 182.77845764]
[94.48361969 167.80664062]
[93.56470490 152.83480835]
[81.92517090 147.03541565]
[72.65906525 138.90620422]
[66.16381836 129.23379517]
[53.32938385 136.99763489]
[40.49495316 144.76148987]
[27.66052246 152.52534485]
[14.82608986 160.28918457]
[9.09969616 167.41206360]
[1.73495650 168.07192993]
[-11.21694279 175.63819885]
[-24.16884232 183.20445251]
[-37.12074280 190.77072144]
[-50.07264328 198.33697510]
[-50.30451965 205.85758972]
[-53.10567093 212.76747131]
[-58.08433533 218.22596741]
[-64.58708954 221.58671570]
[-71.78435516 222.47416687]
[-78.77613831 220.82492065]
[-84.70458984 216.88986206]
[-98.19767761 223.44245911]
[-111.69076538 229.99507141]
[-114.27861023 245.29483032]
[-125.38872528 256.12741089]
[-140.74903870 258.32748413]
[-154.45320129 251.04905701]
[-161.23168945 237.09083557]
[-158.47801208 221.82005310]
[-147.25105286 211.10861206]
[-131.86776733 209.07531738]
[-118.24336243 216.50198364]
[-104.75027466 209.94937134]
[-91.25718689 203.39677429]
[-80.76059723 183.55049133]
[-57.63890076 185.38507080]
[-44.68700409 177.81881714]
[-31.73510361 170.25256348]
[-18.78320312 162.68629456]
[-5.83130360 155.12004089]
[7.06224012 147.45475769]
[19.89667130 139.69090271]
[32.73110199 131.92706299]
[45.56553650 124.16320801]
[58.39996719 116.39935303]
[55.29357910 100.91513062]
[57.76371002 85.31675720]
[65.50225067 71.54991913]
[77.54392242 61.33184433]
[92.38668823 55.93709946]
[108.17910767 56.03860855]
[113.35738373 41.96077347]
[118.53565979 27.88293648]
[123.71392822 13.80510044]
[128.89221191 -0.27273566]
[134.07048035 -14.35057163]
[139.24874878 -28.42840767]
[144.42703247 -42.50624466]
[139.73367310 -54.52354813]
[144.34004211 -66.14427948]
[155.26850891 -71.33728027]
[160.66191101 -85.33410645]
[166.05531311 -99.33094025]
[171.44869995 -113.32776642]
[158.33053589 -133.21257019]
[162.30445862 -156.48348999]
[180.93679810 -170.62887573]
[180.24742126 -185.61302185]
[179.44325256 -200.59144592]
[178.52433777 -215.56327820]
[177.60542297 -230.53509521]
[168.47639465 -239.65124512]
[168.02174377 -252.14337158]
[175.94006348 -261.29208374]
[175.25068665 -276.27624512]
[164.31835938 -284.14871216]
[159.98095703 -296.69750977]
[163.61071777 -309.26654053]
[173.66662598 -317.32751465]
[173.20695496 -332.32046509]
[169.81468201 -340.80688477]
[172.85688782 -347.54629517]
[172.62702942 -362.54455566]
[172.39715576 -377.54278564]
[161.71122742 -385.74658203]
[157.76042175 -398.42239380]
[161.77363586 -410.87426758]
[172.07185364 -418.62329102]
[172.07185364 -433.62329102]
[172.07185364 -448.62329102]
[160.72071838 -459.61999512]
[160.55363464 -475.42340088]
[171.66970825 -486.65762329]
[187.47399902 -486.65762329]
[198.59008789 -475.42340088]
[198.42300415 -459.61999512]
[187.07185364 -448.62329102]
[187.07185364 -433.62329102]
[187.07185364 -418.62329102]
[199.46049500 -407.25280762]
[199.80134583 -390.10278320]
[187.39540100 -377.77264404]
[187.62525940 -362.77441406]
[187.85513306 -347.77615356]
[188.19990540 -332.78012085]
[188.65957642 -317.78717041]
[201.39085388 -306.80166626]
[202.25709534 -289.67013550]
[190.23483276 -276.96563721]
[190.92420959 -261.98147583]
[201.17114258 -247.73730469]
[192.57723999 -231.45401001]
[193.49615479 -216.48219299]
[194.41506958 -201.51036072]
[197.96424866 -195.02359009]
[195.23156738 -186.30239868]
[195.92094421 -171.31825256]
[202.82365417 -169.12695312]
[209.04879761 -165.42607117]
[214.27143860 -160.40878296]
[227.76452637 -166.96138000]
[241.25761414 -173.51397705]
[254.75070190 -180.06657410]
[268.24380493 -186.61918640]
[281.73687744 -193.17178345]
[295.17935181 -199.82757568]
[308.57046509 -206.58618164]
[317.09713745 -220.59431458]
[333.48336792 -219.94358826]
[340.87240601 -205.30342102]
[331.66302490 -191.73435974]
[315.32907104 -193.19509888]
[301.93795776 -186.43649292]
[297.38085938 -180.61346436]
[288.28948975 -179.67869568]
[274.79638672 -173.12609863]
[261.30331421 -166.57348633]
[247.81021118 -160.02088928]
[234.31712341 -153.46829224]
[220.82403564 -146.91569519]
[221.60758972 -138.26863098]
[220.01364136 -129.69894409]
[216.14314270 -121.85060883]
[210.26882935 -115.31847382]
[202.81604004 -110.60318756]
[194.33198547 -108.07286072]
[185.44554138 -107.93437195]
[180.05213928 -93.93753815]
[174.65873718 -79.94071198]
[169.26533508 -65.94387817]
[172.92047119 -48.78182983]
[158.50486755 -37.32796860]
[153.32658386 -23.25013351]
[148.14831543 -9.17229748]
[142.97004700 4.90553904]
[137.79176331 18.98337555]
[132.61349487 33.06121063]
[127.43521881 47.13904572]
[122.25694275 61.21688461]
[137.26286316 71.61406708]
[147.42153931 87.78073120]
[150.54965210 107.46515656]
[145.50259399 127.61239624]
[156.70089722 137.59228516]
[167.89918518 147.57217407]
[179.09748840 157.55204773]
[195.25653076 160.34800720]
[200.65995789 175.83137512]
[189.74917603 188.07421875]
[173.74827576 184.48213196]
[169.11759949 168.75035095]
[157.91929626 158.77046204]
[146.72100830 148.79057312]
[135.52270508 138.81069946]
[128.77616882 142.08699036]
[135.32876587 155.58007812]
[145.73023987 166.38792419]
[138.66557312 179.62010193]
[123.89792633 176.99015808]
[121.83567810 162.13269043]
[115.28307343 148.63960266]
[108.53652954 151.91589355]
[109.45544434 166.88772583]
[110.37435913 181.85954285]
[111.29327393 196.83137512]
[112.21218872 211.80320740]
[123.26387024 219.50721741]
[127.79306030 231.98806763]
[124.35634613 244.61123657]
[114.42514038 252.82536316]
[115.11451721 267.80950928]
[115.80389404 282.79367065]
[125.09835815 296.30459595]
[117.80147552 310.99087524]
[101.41965485 311.74456787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[13 54]
[14 53]
[15 52]
[16 51]
[17 50]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[30 43]
[31 42]
[32 41]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[70 159]
[71 158]
[72 157]
[73 156]
[76 126]
[77 125]
[78 123]
[79 122]
[80 121]
[83 119]
[84 118]
[88 115]
[89 114]
[91 113]
[92 112]
[93 111]
[97 108]
[98 107]
[99 106]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
[134 144]
[135 142]
[136 141]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
