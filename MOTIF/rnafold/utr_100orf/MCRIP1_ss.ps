%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACUUCCGGCGGGGCCUCCCAGCUGGAAGAGGCGGUGGCGGCGGGUCGGGGCGAGAGGCUGAGGGGAUCUGGCGGUGGAGCGCUAGGAUCAGACGCCCCCGCGAUGACCAGCUCCCCCGUCUCCAGAGUCGUGUACAACGGCAAGAGGACCAGCAGCCCCCGCUCCCCACCCAGCAGCAGCGAGAUCUUCACCCCAGCCCACG\
) } def
/len { sequence length } bind def

/coor [
[-10.91935444 614.32867432]
[-18.74707794 627.12426758]
[-26.57480240 639.91986084]
[-27.17618370 655.72961426]
[-40.41810226 662.54876709]
[-48.24582672 675.34436035]
[-56.07355118 688.13989258]
[-63.90127563 700.93548584]
[-71.72899628 713.73107910]
[-79.55672455 726.52667236]
[-87.38444519 739.32220459]
[-95.21216583 752.11779785]
[-102.94210052 764.97271729]
[-110.57378387 777.88616943]
[-118.20546722 790.79962158]
[-117.83103943 807.19445801]
[-131.98091125 815.48382568]
[-146.09889221 807.14031982]
[-145.66162109 790.74694824]
[-131.11892700 783.16790771]
[-123.48723602 770.25445557]
[-115.85555267 757.34100342]
[-115.15847015 749.98028564]
[-108.00774384 744.29010010]
[-100.18002319 731.49450684]
[-92.35229492 718.69891357]
[-84.52457428 705.90332031]
[-76.69684601 693.10778809]
[-68.86912537 680.31219482]
[-61.04140091 667.51660156]
[-53.21367645 654.72106934]
[-53.17218781 639.82647705]
[-39.37037659 632.09210205]
[-31.54265404 619.29656982]
[-23.71492958 606.50097656]
[-16.98672867 593.09460449]
[-11.40535641 579.17163086]
[-5.82398462 565.24871826]
[-0.24261272 551.32574463]
[4.15268469 536.98419189]
[7.33100271 522.32476807]
[2.46614027 508.24703979]
[12.95184708 496.39962769]
[16.13016510 481.74023438]
[19.19660950 467.05700684]
[22.15100479 452.35083008]
[25.10540009 437.64465332]
[28.05979347 422.93847656]
[22.98081398 408.93658447]
[33.28462982 396.93066406]
[36.23902512 382.22448730]
[39.19342041 367.51834106]
[42.03559113 352.79006958]
[44.76537704 338.04052734]
[47.49515915 323.29101562]
[38.77935791 313.79769897]
[37.09891129 300.82391357]
[43.28977203 289.07888794]
[55.28939056 282.95617676]
[58.24378586 268.25000000]
[61.19818115 253.54383850]
[64.15257263 238.83766174]
[67.10697174 224.13148499]
[58.66748428 211.91221619]
[61.45416641 196.95597839]
[74.32808685 188.18672180]
[77.28248596 173.48054504]
[67.37602997 159.89227295]
[70.42042542 143.01080322]
[85.01280975 133.36634827]
[87.74259949 118.61682892]
[90.47238159 103.86730957]
[90.70112610 88.86905670]
[88.42241669 74.04315186]
[86.14370728 59.21724701]
[83.86499786 44.39134216]
[81.58628845 29.56543541]
[71.84234619 17.10083580]
[77.55639648 3.34587574]
[75.27768707 -11.48003006]
[72.99897003 -26.30593491]
[70.72026062 -41.13183975]
[68.44155121 -55.95774841]
[60.15795517 -60.47677612]
[54.96142578 -68.18765259]
[53.91370392 -77.28840637]
[57.12428665 -85.72116089]
[63.75395966 -91.63744354]
[62.15570450 -106.55204773]
[58.12832260 -114.75521088]
[60.64857864 -121.70604706]
[59.27795410 -136.64329529]
[57.90732574 -151.58053589]
[48.50748825 -160.41639709]
[47.67538834 -172.88854980]
[55.31290054 -182.27230835]
[54.17022324 -197.22871399]
[53.02754974 -212.18513489]
[43.32832718 -225.40849304]
[50.17726517 -240.30895996]
[66.52876282 -241.55822754]
[75.56179810 -227.87113953]
[67.98396301 -213.32780457]
[69.12664032 -198.37139893]
[70.26931000 -183.41497803]
[80.94267273 -169.48704529]
[72.84457397 -152.95117188]
[74.21520233 -138.01391602]
[75.58583069 -123.07666779]
[77.07031250 -108.15030670]
[78.66857147 -93.23569489]
[92.24367523 -77.69235229]
[83.26745605 -58.23645782]
[85.54616547 -43.41055298]
[87.82488251 -28.58464622]
[90.10359192 -13.75874043]
[92.38230133 1.06716526]
[101.96324921 12.47131634]
[96.41219330 27.28672409]
[98.69090271 42.11262894]
[100.96961212 56.93853378]
[103.24832153 71.76444244]
[105.52703094 86.59034729]
[112.30542755 89.80023956]
[111.08684540 74.84982300]
[123.42505646 66.31937408]
[136.98170471 72.73946381]
[138.19995117 87.68990326]
[125.86220551 96.22003174]
[132.64059448 99.42992401]
[145.55406189 91.79824066]
[158.46751404 84.16655731]
[171.38096619 76.53487396]
[184.29443359 68.90319061]
[189.66543579 53.78591919]
[204.87968445 48.69610596]
[218.26611328 57.53822327]
[219.55580139 73.52935028]
[207.75939941 84.40247345]
[191.92611694 81.81665039]
[179.01264954 89.44833374]
[166.09919739 97.08001709]
[153.18574524 104.71170044]
[140.27227783 112.34338379]
[120.86391449 114.25295258]
[105.22190094 106.59709930]
[102.49211121 121.34661865]
[99.76232910 136.09613037]
[108.62213135 146.24415588]
[109.99822998 159.44941711]
[103.61102295 170.86633301]
[91.98865509 176.43493652]
[89.03426361 191.14111328]
[97.52263641 204.20193481]
[94.31696320 219.07400513]
[81.81314087 227.08587646]
[78.85874939 241.79205322]
[75.90435791 256.49822998]
[72.94995880 271.20440674]
[69.99556732 285.91058350]
[79.95153809 300.29223633]
[76.49588776 317.09432983]
[62.24467850 326.02081299]
[59.51489258 340.77032471]
[56.78511047 355.51983643]
[58.30078506 364.53173828]
[53.89959335 370.47271729]
[50.94519806 385.17889404]
[47.99080276 399.88507080]
[52.85846710 414.93884277]
[42.76596832 425.89288330]
[39.81157303 440.59906006]
[36.85717773 455.30523682]
[33.90278244 470.01141357]
[35.28085327 479.04537964]
[30.78957367 484.91854858]
[27.61125565 499.57797241]
[32.24878311 514.70422363]
[21.99041176 525.50305176]
[18.81209373 540.16247559]
[29.73172569 529.87841797]
[44.15414047 525.75604248]
[58.85924530 528.71575928]
[70.56381989 538.09674072]
[76.65458679 551.80450439]
[75.77165222 566.77850342]
[68.11215973 579.67547607]
[55.38623047 587.61596680]
[40.43519974 588.82702637]
[26.59718513 583.03826904]
[16.96180534 571.54223633]
[13.68032837 556.90710449]
[8.09895706 570.83007812]
[2.51758504 584.75299072]
[-3.06378675 598.67596436]
[9.41967487 590.35949707]
[24.32793999 588.70312500]
[38.33243179 594.07659912]
[48.30636597 605.28021240]
[52.02285767 619.81250000]
[48.65212250 634.42883301]
[38.94674683 645.86590576]
[25.07365608 651.57000732]
[10.13029575 650.26770020]
[-2.54692197 642.24975586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 22]
[14 21]
[15 20]
[36 195]
[37 194]
[38 193]
[39 192]
[40 180]
[41 179]
[43 177]
[44 176]
[45 174]
[46 173]
[47 172]
[48 171]
[50 169]
[51 168]
[52 167]
[53 165]
[54 164]
[55 163]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[66 153]
[67 152]
[70 148]
[71 147]
[72 146]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
[88 111]
[89 110]
[91 109]
[92 108]
[93 107]
[96 105]
[97 104]
[98 103]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
