%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCAUCCGGCGCGGUGUUUAGACUCCACUGAUGUCGUGGCGCUUUAGGGGAAGAAGUUGGUGUUUCGCUGGGCCCUGGUACUGAAGACGCGGUCCGGGUCGCCCCUAGCUGUUUCCUACUCACCCAAAGCCCCGCACCCGCCUUUUCUCUCUCUCCUCUGGCAGGAUGAGGCGUGCAGGCCUGGGUGAAGGAGUACCUCCUGGCAACUAUGGGAACUAUGGCUAUGCUAAUAGUGGGUAUAGUGCCUGUGAAGA\
AGAAAAUGAGA\
) } def
/len { sequence length } bind def

/coor [
[80.90668488 205.77746582]
[91.44153595 194.90109253]
[104.93827057 188.03691101]
[102.82736969 173.18617249]
[100.71647644 158.33544922]
[98.60557556 143.48472595]
[92.57544708 142.86889648]
[86.68943024 141.42094421]
[81.06178284 139.16899109]
[72.30221558 151.34561157]
[63.54265213 163.52221680]
[54.78308487 175.69883728]
[46.02351761 187.87545776]
[44.24555969 203.59643555]
[30.53225708 209.40975952]
[21.77269173 221.58638000]
[13.01312447 233.76298523]
[11.87218285 253.91123962]
[-6.13284874 261.01489258]
[-14.60346985 273.39422607]
[-23.07409096 285.77359009]
[-31.54471207 298.15295410]
[-28.38664246 313.63851929]
[-37.17305374 326.77526855]
[-52.69112396 329.76943970]
[-65.73425293 320.84463501]
[-68.56419373 305.29577637]
[-59.50198364 292.34771729]
[-43.92407227 289.68234253]
[-35.45345306 277.30297852]
[-26.98283005 264.92361450]
[-18.51220894 252.54425049]
[-21.28495789 242.75268555]
[-18.16206551 232.83711243]
[-9.93935490 226.12428284]
[0.83650792 225.00341797]
[9.59607506 212.82681274]
[18.35564041 200.65019226]
[19.50705719 185.80015564]
[33.84690094 179.11589050]
[42.60646820 166.93927002]
[51.36603546 154.76264954]
[60.12560272 142.58604431]
[68.88516998 130.40942383]
[63.48831558 123.65930176]
[59.53216934 115.97561646]
[57.17283249 107.66155243]
[56.50340271 99.04516602]
[57.55029678 90.46646118]
[43.70056152 84.70583344]
[29.85082436 78.94520569]
[16.00108910 73.18458557]
[2.15135455 67.42395782]
[-11.69838047 61.66332626]
[-27.41174316 63.50745392]
[-36.19158554 51.47567749]
[-50.04132080 45.71504974]
[-63.89105606 39.95442200]
[-77.74079132 34.19379425]
[-91.59053040 28.43316650]
[-105.44026184 22.67253876]
[-97.89345551 35.63578415]
[-98.46881104 50.62474442]
[-106.98715210 62.97131729]
[-120.79555511 68.83033752]
[-135.59358215 66.37709045]
[-146.77259827 56.37560272]
[-150.85104370 41.94070435]
[-146.55874634 27.56794357]
[-135.23249817 17.73351860]
[-120.39734650 15.50053596]
[-133.56060791 8.30828094]
[-146.72386169 1.11602557]
[-159.88713074 -6.07622957]
[-173.13410950 -13.11310768]
[-186.46295166 -19.99363518]
[-199.79180908 -26.87416267]
[-213.12066650 -33.75469208]
[-226.44952393 -40.63521957]
[-235.47639465 -41.78290939]
[-239.89401245 -47.67591858]
[-253.14099121 -54.71279907]
[-266.38796997 -61.74967575]
[-279.63494873 -68.78655243]
[-294.67156982 -63.92082977]
[-308.70645142 -71.18704224]
[-313.41293335 -86.27427673]
[-305.99871826 -100.23154449]
[-290.86257935 -104.77824402]
[-276.98446655 -97.21690369]
[-272.59805298 -82.03353119]
[-259.35107422 -74.99665070]
[-246.10411072 -67.95977020]
[-232.85713196 -60.92289352]
[-219.56898499 -53.96407318]
[-206.24014282 -47.08354568]
[-192.91128540 -40.20301819]
[-179.58242798 -33.32249069]
[-166.25357056 -26.44196129]
[-161.54182434 -27.00243950]
[-156.42364502 -24.63249969]
[-152.69487000 -19.23949242]
[-139.53161621 -12.04723644]
[-126.36834717 -4.85498142]
[-113.20508575 2.33727384]
[-99.67963409 8.82280445]
[-85.82990265 14.58343220]
[-71.98016357 20.34405899]
[-58.13042831 26.10468674]
[-44.28069305 31.86531448]
[-30.43095779 37.62594223]
[-15.70822144 35.36977768]
[-5.93775320 47.81359100]
[7.91198206 53.57421875]
[21.76171684 59.33484650]
[35.61145401 65.09547424]
[49.46118927 70.85610199]
[63.31092453 76.61672974]
[81.19925690 57.04548264]
[108.91266632 50.52589417]
[137.31228638 61.44675446]
[144.58184814 48.32603073]
[151.85142517 35.20531082]
[159.12100220 22.08458900]
[166.39056396 8.96386719]
[173.66014099 -4.15685415]
[180.92971802 -17.27757645]
[178.12913513 -29.84516335]
[184.42697144 -40.61433792]
[195.98712158 -44.10324860]
[203.41056824 -57.13752747]
[210.83401489 -70.17180634]
[208.18148804 -82.77147675]
[214.60560608 -93.46580505]
[226.20600891 -96.81845856]
[233.78230286 -109.76448822]
[241.35859680 -122.71052551]
[248.93489075 -135.65655518]
[249.35217285 -142.19979858]
[252.51779175 -146.86791992]
[256.84484863 -148.81507874]
[264.72366333 -161.57925415]
[272.60247803 -174.34342957]
[280.48129272 -187.10760498]
[288.36010742 -199.87178040]
[289.02471924 -215.67901611]
[302.29379272 -222.44517517]
[310.17260742 -235.20935059]
[312.00665283 -244.12214661]
[318.21997070 -248.07659912]
[326.24844360 -260.74719238]
[327.09896851 -276.54550171]
[340.44671631 -283.15509033]
[348.47518921 -295.82565308]
[344.77258301 -311.19012451]
[353.08990479 -324.62878418]
[368.49264526 -328.16873169]
[381.84262085 -319.70980835]
[385.21951294 -304.27050781]
[376.61990356 -291.01071167]
[361.14578247 -287.79721069]
[353.11730957 -275.12661743]
[352.84103394 -260.23458862]
[338.91900635 -252.71871948]
[330.89056396 -240.04814148]
[322.93676758 -227.33053589]
[315.05795288 -214.56636047]
[314.95690918 -199.67208862]
[301.12429810 -191.99296570]
[293.24548340 -179.22879028]
[285.36666870 -166.46461487]
[277.48782349 -153.70043945]
[269.60900879 -140.93626404]
[261.88092041 -128.08026123]
[254.30462646 -115.13423157]
[246.72833252 -102.18819427]
[239.15203857 -89.24216461]
[239.97918701 -71.69820404]
[223.86828613 -62.74835968]
[216.44483948 -49.71408081]
[209.02139282 -36.67980194]
[210.05490112 -19.14678574]
[194.05043030 -10.00800419]
[186.78086853 3.11271739]
[179.51129150 16.23343849]
[172.24171448 29.35416031]
[164.97215271 42.47488022]
[157.70257568 55.59560394]
[150.43299866 68.71632385]
[158.68383789 81.24324799]
[173.60887146 79.74555206]
[188.53392029 78.24785614]
[203.45895386 76.75015259]
[218.38400269 75.25245667]
[233.54028320 67.65484619]
[245.03663635 80.11557770]
[236.24539185 94.61213684]
[219.88169861 90.17749786]
[204.95664978 91.67519379]
[190.03161621 93.17289734]
[175.10656738 94.67059326]
[160.18153381 96.16829681]
[156.59838867 110.73404694]
[169.12530518 118.98487091]
[181.65223694 127.23569489]
[194.17916870 135.48652649]
[203.03416443 137.58190918]
[206.80415344 143.90884399]
[219.23313904 152.30648804]
[231.66210938 160.70413208]
[244.09109497 169.10177612]
[256.52008057 177.49942017]
[271.04428101 172.36581421]
[285.63577271 176.71797180]
[294.75875854 188.68606567]
[295.08123779 203.55328369]
[307.51019287 211.95092773]
[319.93917847 220.34857178]
[332.36816406 228.74621582]
[344.79714966 237.14385986]
[357.27532959 245.46824646]
[369.80224609 253.71907043]
[382.32916260 261.96990967]
[398.88269043 265.63281250]
[399.94540405 282.55343628]
[383.98022461 288.25869751]
[374.07833862 274.49682617]
[361.55142212 266.24600220]
[349.02447510 257.99517822]
[341.73489380 256.94409180]
[336.39950562 249.57284546]
[323.97052002 241.17520142]
[311.54153442 232.77755737]
[299.11254883 224.37991333]
[286.68359375 215.98226929]
[272.76989746 221.23080444]
[258.26199341 217.23268127]
[248.77934265 205.31913757]
[248.12243652 189.92840576]
[235.69345093 181.53076172]
[223.26446533 173.13311768]
[210.83549500 164.73547363]
[198.40650940 156.33782959]
[185.92834473 148.01344299]
[173.40141296 139.76261902]
[160.87448120 131.51179504]
[148.34756470 123.26097107]
[131.97442627 136.57345581]
[113.45630646 141.37382507]
[115.56719971 156.22454834]
[117.67810059 171.07528687]
[119.78899384 185.92601013]
[134.66386414 188.75743103]
[147.81217957 196.26745605]
[157.80770874 207.64146423]
[163.56620789 221.64569092]
[164.46304321 236.76106262]
[160.40092468 251.34797668]
[151.82048035 263.82415771]
[139.65246582 272.83624268]
[125.21677399 277.40673828]
[110.07926941 277.03982544]
[95.88195801 271.77529907]
[84.16486359 262.18423462]
[76.19896698 249.30700684]
[72.84834290 234.54042053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 252]
[4 251]
[5 250]
[6 249]
[9 44]
[10 43]
[11 42]
[12 41]
[13 40]
[15 38]
[16 37]
[17 36]
[19 32]
[20 31]
[21 30]
[22 29]
[49 118]
[50 117]
[51 116]
[52 115]
[53 114]
[54 113]
[56 111]
[57 110]
[58 109]
[59 108]
[60 107]
[61 106]
[71 105]
[72 104]
[73 103]
[74 102]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[81 94]
[82 93]
[83 92]
[84 91]
[121 189]
[122 188]
[123 187]
[124 186]
[125 185]
[126 184]
[127 183]
[130 181]
[131 180]
[132 179]
[135 177]
[136 176]
[137 175]
[138 174]
[141 173]
[142 172]
[143 171]
[144 170]
[145 169]
[147 167]
[148 166]
[150 165]
[151 164]
[153 162]
[154 161]
[190 202]
[191 201]
[192 200]
[193 199]
[194 198]
[203 247]
[204 246]
[205 245]
[206 244]
[208 243]
[209 242]
[210 241]
[211 240]
[212 239]
[216 235]
[217 234]
[218 233]
[219 232]
[220 231]
[221 229]
[222 228]
[223 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
