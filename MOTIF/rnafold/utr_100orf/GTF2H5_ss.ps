%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCACUCUGCCGGCAACGCCGAGGCGCUUCUGCAUCUGUGGGCCGAGCAUUCUUCAGGUCAUCUGAACCUUCUGAGAAAACAUGGUCAACGUCUUGAAAGGAGUGCUUAUAGAAUGUGAUCCUGCCAUGAAGCAGUUUCUGCUGUACUUGGAUGAGUCCAAUGCCCUGGGGAAGAAGUUCA\
) } def
/len { sequence length } bind def

/coor [
[-218.11082458 459.38726807]
[-228.89695740 469.81121826]
[-239.68310547 480.23519897]
[-244.22958374 495.38906860]
[-258.75836182 498.66995239]
[-269.54449463 509.09390259]
[-280.33062744 519.51788330]
[-280.30227661 536.99987793]
[-292.67434692 548.86859131]
[-309.46575928 548.14331055]
[-320.07235718 558.74993896]
[-330.67895508 569.35650635]
[-334.54687500 577.65856934]
[-341.55834961 580.05175781]
[-352.34451294 590.47570801]
[-350.32504272 605.74749756]
[-357.60028076 619.12377930]
[-371.19610596 625.57489014]
[-385.80871582 622.81628418]
[-396.59484863 633.24023438]
[-407.38101196 643.66418457]
[-411.37258911 659.57012939]
[-427.21539307 663.80548096]
[-438.61166382 652.01324463]
[-433.83792114 636.32427979]
[-417.80496216 632.87805176]
[-407.01882935 622.45410156]
[-396.23269653 612.03009033]
[-398.49081421 597.33184814]
[-391.57925415 583.96417236]
[-377.96243286 577.14990234]
[-362.76846313 579.68957520]
[-351.98233032 569.26556396]
[-341.28555298 558.74993896]
[-330.67895508 548.14331055]
[-320.07235718 537.53674316]
[-321.87384033 524.76403809]
[-315.89395142 513.11547852]
[-304.12020874 506.95391846]
[-290.75460815 508.73175049]
[-279.96847534 498.30776978]
[-269.18231201 487.88378906]
[-265.40734863 473.47552490]
[-250.10707092 469.44906616]
[-239.32092285 459.02508545]
[-228.53479004 448.60110474]
[-217.92817688 437.99450684]
[-207.50421143 427.20837402]
[-197.08024597 416.42224121]
[-186.65628052 405.63607788]
[-183.38357544 386.59292603]
[-163.95278931 381.28463745]
[-153.90315247 370.14889526]
[-143.85350037 359.01318359]
[-133.80386353 347.87744141]
[-123.75422668 336.74169922]
[-113.70458221 325.60595703]
[-103.65494537 314.47021484]
[-93.60530090 303.33447266]
[-83.55565643 292.19873047]
[-80.77272797 277.56640625]
[-65.78290558 272.50521851]
[-55.73326492 261.36947632]
[-45.68362427 250.23373413]
[-46.70032120 235.41813660]
[-36.66718674 223.98175049]
[-21.12033272 223.01579285]
[-11.07069206 211.88005066]
[-15.78715706 197.75134277]
[-12.77832222 183.06111145]
[-2.75415325 171.77473450]
[11.66809654 166.98980713]
[26.64668655 170.08642578]
[36.69632721 158.95068359]
[46.74596786 147.81495667]
[56.79560852 136.67921448]
[66.84525299 125.54346466]
[76.89488983 114.40773010]
[72.86973572 102.31888580]
[74.78497314 89.72230530]
[82.22125244 79.37611389]
[93.55033875 73.54569244]
[106.29163361 73.50765991]
[113.64328766 60.43275452]
[120.99493408 47.35784531]
[128.34658813 34.28293991]
[135.69824219 21.20803261]
[143.04989624 8.13312626]
[129.66088867 14.89584732]
[114.66577148 15.27863884]
[100.94915009 9.20786285]
[91.14968109 -2.14864922]
[87.15247345 -16.60625458]
[89.72647858 -31.38375473]
[98.37652588 -43.63841629]
[111.43861389 -51.01281357]
[126.40000916 -52.08834457]
[140.38258362 -46.65810776]
[150.69653320 -35.76671600]
[155.35777283 -21.50933647]
[153.46931458 -6.62782431]
[163.32736206 -17.93351936]
[173.18542480 -29.23921585]
[183.04347229 -40.54491043]
[182.14884949 -56.09603119]
[192.30737305 -67.42118073]
[207.13850403 -68.17824554]
[216.99655151 -79.48394012]
[212.59747314 -94.27081299]
[216.91307068 -109.08226776]
[228.56625366 -119.19202423]
[243.83851624 -121.37409210]
[257.85653687 -114.93217468]
[266.14724731 -101.92188263]
[266.06509399 -86.49473572]
[257.63626099 -73.57348633]
[243.55039978 -67.28126526]
[228.30224609 -69.62588501]
[218.44419861 -58.32019043]
[219.71368408 -43.52411270]
[209.87727356 -31.91809654]
[194.34918213 -30.68685532]
[184.49111938 -19.38116074]
[174.63307190 -8.07546425]
[164.77500916 3.23023057]
[156.12480164 15.48477936]
[148.77314758 28.55968666]
[141.42149353 41.63459396]
[134.06983948 54.70949936]
[126.71819305 67.78440857]
[119.36653900 80.85931396]
[122.71260071 84.98114014]
[125.19524384 89.67390442]
[126.72008514 94.75922394]
[141.66545105 96.03820801]
[156.61082458 97.31719208]
[171.55619812 98.59617615]
[186.50157166 99.87516022]
[201.11338806 92.43023682]
[214.71755981 101.58768463]
[213.31927490 117.92710876]
[198.35697937 124.63991547]
[185.22259521 114.82053375]
[170.27722168 113.54154968]
[155.33184814 112.26256561]
[140.38647461 110.98358154]
[125.44110107 109.70459747]
[109.98914337 125.33072662]
[88.03063202 124.45736694]
[77.98098755 135.59310913]
[67.93135071 146.72885132]
[57.88171005 157.86459351]
[47.83206940 169.00033569]
[37.78242874 180.13607788]
[42.39458847 194.71945190]
[39.10963058 209.55541992]
[28.90753174 220.68122864]
[14.60201359 225.17657471]
[0.06504811 221.92970276]
[-9.98459244 233.06544495]
[-9.35559177 248.62956238]
[-19.70598984 259.77963257]
[-34.54788589 260.28338623]
[-44.59752655 271.41909790]
[-54.64716721 282.55484009]
[-58.14891434 297.98367310]
[-72.41992188 302.24838257]
[-82.46955872 313.38409424]
[-92.51920319 324.51983643]
[-102.56884003 335.65557861]
[-112.61848450 346.79132080]
[-122.66812134 357.92706299]
[-132.71775818 369.06280518]
[-142.76741028 380.19854736]
[-152.81704712 391.33428955]
[-151.63241577 402.17681885]
[-156.52214050 411.67974854]
[-165.64971924 416.80337524]
[-175.87013245 416.06005859]
[-186.29409790 426.84619141]
[-196.71807861 437.63235474]
[-207.14204407 448.41848755]
[-209.12307739 454.76660156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[5 42]
[6 41]
[7 40]
[10 36]
[11 35]
[12 34]
[14 33]
[15 32]
[19 28]
[20 27]
[21 26]
[47 182]
[48 181]
[49 180]
[50 179]
[52 175]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[62 165]
[63 164]
[64 163]
[67 160]
[68 159]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[101 125]
[102 124]
[103 123]
[104 122]
[107 119]
[108 118]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
