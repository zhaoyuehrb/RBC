%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGCCCUAGACGCGUAAAUAAGACGCCGACCGGCGCGGCGCUAGCCUCGGGGCUUGACGGGAUUGUGGCGGUCCUCUCUCCCAAUUCGGAAGCUACAGCUACCUCCGGACGCUCUCAAGAUGGCGACCUCUCUGGGUUCCAACACCUACAACAGGCAGAACUGGGAGGAUGCGGACUUCCCCAUUCUGUGCCAGACAUGUCUUGGAGAAAACCCAUAUA\
) } def
/len { sequence length } bind def

/coor [
[319.10107422 186.15710449]
[307.40420532 179.01692200]
[297.94757080 169.08105469]
[291.38168335 157.02337646]
[288.16058350 143.66395569]
[288.51068115 129.91342163]
[274.19351196 125.43923187]
[259.87631226 120.96504974]
[245.49754333 116.69300079]
[231.05999756 112.62393188]
[216.56655884 108.75865936]
[202.02011108 105.09794617]
[187.47366333 101.43723297]
[180.22636414 102.85183716]
[172.74879456 97.62113190]
[158.25537109 93.75585938]
[143.76193237 89.89058685]
[129.26849365 86.02531433]
[141.51557922 94.68607330]
[150.75448608 106.50312042]
[156.20455933 120.47798157]
[157.40528870 135.42985535]
[154.25523376 150.09535217]
[147.02055359 163.23535156]
[136.31253052 173.73956299]
[123.03596497 180.72042847]
[108.31353760 183.58807373]
[96.41860199 192.72648621]
[84.52365875 201.86488342]
[72.62872314 211.00329590]
[66.86536407 226.35633850]
[50.64546204 228.77435303]
[40.65465927 215.76988220]
[47.17063904 200.72084045]
[63.49031830 199.10835266]
[75.38525391 189.96995544]
[87.28019714 180.83154297]
[99.17513275 171.69314575]
[92.16800690 158.42965698]
[85.16152191 145.16732788]
[70.90879059 149.84275818]
[56.65605927 154.51818848]
[46.12634659 167.09027100]
[30.02269173 163.99119568]
[24.91115189 148.40901184]
[36.05004120 136.37335205]
[51.98062897 140.26545715]
[66.23336029 135.59002686]
[80.48609161 130.91459656]
[80.64456940 123.41627502]
[80.96151733 108.41962433]
[81.11999512 100.92129517]
[67.07753754 95.64785004]
[53.03507233 90.37439728]
[38.99261093 85.10095215]
[33.86040878 85.95302582]
[29.36173820 84.86541748]
[26.12798691 82.40235138]
[24.47611237 79.29660797]
[10.66899967 73.43456268]
[-5.05746555 75.16339874]
[-13.74883080 63.06755447]
[-27.55594444 57.20550537]
[-41.36306000 51.34346008]
[-55.17017365 45.48141098]
[-68.97728729 39.61936569]
[-82.78440094 33.75731659]
[-96.59151459 27.89526939]
[-113.53395844 27.27078629]
[-117.62401581 10.81758595]
[-102.94605255 2.33267164]
[-90.72946930 14.08815479]
[-76.92235565 19.95020294]
[-63.11523819 25.81225014]
[-49.30812454 31.67429733]
[-35.50101089 37.53634644]
[-21.69389725 43.39839172]
[-7.88678312 49.26044083]
[6.85210466 47.11231232]
[16.53104591 59.62744904]
[30.33816147 65.48949432]
[44.26605988 71.05848694]
[58.30852127 76.33193970]
[72.35098267 81.60538483]
[86.39344788 86.87883759]
[91.78930664 81.66973877]
[88.16272736 67.11474609]
[102.58103943 71.25155640]
[107.97689819 66.04246521]
[103.20118713 51.82301712]
[98.42548370 37.60357285]
[93.64977264 23.38412857]
[88.87406158 9.16468430]
[83.79895782 -4.95067310]
[78.42672729 -18.95564079]
[73.05449677 -32.96060944]
[59.97871017 -42.85787582]
[62.28031921 -59.09470749]
[77.59162140 -64.96804047]
[90.16165924 -54.43589783]
[87.05946350 -38.33283997]
[92.43169403 -24.32787323]
[97.80392456 -10.32290459]
[100.84957886 -8.56269360]
[103.19724274 -5.24421740]
[104.12577057 -0.71004105]
[103.09350586 4.38897467]
[107.86921692 18.60841942]
[112.64492798 32.82786179]
[117.42063141 47.04730606]
[122.19634247 61.26675034]
[133.13377380 71.53187561]
[147.62719727 75.39714813]
[162.12063599 79.26242065]
[176.61407471 83.12769318]
[191.13436890 86.89078522]
[205.68081665 90.55149841]
[220.22726440 94.21221161]
[226.66665649 92.77715302]
[232.05809021 94.53914642]
[235.12905884 98.18639374]
[249.56660461 102.25545502]
[256.04385376 101.00237274]
[261.38351440 102.91555786]
[264.35052490 106.64786530]
[278.66769409 111.12204742]
[292.98486328 115.59623718]
[302.36566162 102.07008362]
[315.45089722 92.11425018]
[330.95385742 86.69324493]
[347.35452271 86.32637787]
[363.04864502 91.03800964]
[376.50463867 100.35630798]
[386.41302490 113.36045074]
[391.81396484 128.77163696]
[392.19006348 145.07882690]
[406.62759399 149.14788818]
[421.06515503 153.21694946]
[435.50268555 157.28601074]
[449.94024658 161.35507202]
[464.48669434 165.01579285]
[479.13049316 168.26525879]
[493.77429199 171.51470947]
[508.41809082 174.76417542]
[523.06188965 178.01362610]
[538.21051025 173.44960022]
[548.95941162 183.76028442]
[563.60321045 187.00975037]
[570.92669678 173.80949402]
[581.66217041 163.21839905]
[594.93371582 156.08869934]
[609.66156006 152.99067688]
[624.65051270 154.16705322]
[638.68640137 159.51394653]
[650.63482666 168.59005737]
[659.53265381 180.65303040]
[664.66552734 194.72016907]
[665.62561035 209.64851379]
[680.26947021 212.89797974]
[694.91326904 216.14743042]
[709.55706787 219.39689636]
[724.20086670 222.64636230]
[738.84466553 225.89581299]
[752.07348633 217.67173767]
[766.87811279 221.17576599]
[774.63696289 233.83813477]
[789.28082275 237.08758545]
[803.92462158 240.33705139]
[818.56842041 243.58650208]
[833.21221924 246.83596802]
[847.85601807 250.08543396]
[860.15307617 240.42536926]
[875.78076172 240.98139954]
[887.36016846 251.49095154]
[889.42388916 266.99176025]
[880.99743652 280.16482544]
[866.05957031 284.79019165]
[851.66351318 278.68392944]
[844.60656738 264.72921753]
[829.96276855 261.47976685]
[815.31896973 258.23031616]
[800.67517090 254.98085022]
[786.03131104 251.73139954]
[771.38751221 248.48193359]
[759.00103760 256.67404175]
[744.10388184 253.58723450]
[735.59521484 240.53961182]
[720.95141602 237.29016113]
[706.30761719 234.04069519]
[691.66381836 230.79124451]
[677.01995850 227.54177856]
[662.37615967 224.29232788]
[655.19189453 237.41343689]
[644.59075928 247.98918152]
[631.42578125 255.15643311]
[616.75982666 258.32681274]
[601.77972412 257.23504639]
[587.70001221 251.96110535]
[575.66485596 242.92436218]
[566.65466309 230.85035706]
[561.40649414 216.71249390]
[560.35375977 201.65354919]
[545.70996094 198.40409851]
[531.60876465 203.20054626]
[519.81243896 192.65744019]
[505.16864014 189.40797424]
[490.52484131 186.15852356]
[475.88104248 182.90905762]
[461.23724365 179.65959167]
[458.80780029 181.04145813]
[455.68692017 181.54855347]
[452.20355225 180.91358948]
[448.77685547 178.99259949]
[445.87118530 175.79261780]
[431.43362427 171.72355652]
[416.99609375 167.65449524]
[402.55853271 163.58543396]
[388.12100220 159.51637268]
[381.03805542 171.15855408]
[371.17169189 180.57720947]
[359.19097900 187.12445068]
[345.91073608 190.34745789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 127]
[7 126]
[8 125]
[9 122]
[10 121]
[11 118]
[12 117]
[13 116]
[15 115]
[16 114]
[17 113]
[18 112]
[27 38]
[28 37]
[29 36]
[30 35]
[40 49]
[41 48]
[42 47]
[52 85]
[53 84]
[54 83]
[55 82]
[59 81]
[60 80]
[62 78]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[89 111]
[90 110]
[91 109]
[92 108]
[93 107]
[94 103]
[95 102]
[96 101]
[136 218]
[137 217]
[138 216]
[139 215]
[140 214]
[141 209]
[142 208]
[143 207]
[144 206]
[145 205]
[147 203]
[148 202]
[158 192]
[159 191]
[160 190]
[161 189]
[162 188]
[163 187]
[166 184]
[167 183]
[168 182]
[169 181]
[170 180]
[171 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
