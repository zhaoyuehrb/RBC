%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACCAGUAAGGAUAGCAUCAACUGGCAAACGGAGAAGGAGGAGAACAGAGUGGAGAGGAACCCUGUUAGGAGAAAUUGAGCGGCAUUCCAUCUGGUAGGCAAGUUUGCAUUUCUCCUUUUUGGGAUCUGCCCAGGAAUGUUGUCAAGUGUAAUGGCUCCCCUGUGGGCCUGCAUCCUGGUGGCUGCAGGAAUUCUAGCCACAGAUACACAUCAUCCCCAGGAUUCUGCUCUGUAUC\
) } def
/len { sequence length } bind def

/coor [
[63.14146805 319.28552246]
[56.90743256 326.71102905]
[48.76129532 331.91406250]
[39.45964050 334.43228149]
[29.86013412 334.05178833]
[23.73507690 347.74426270]
[17.61001968 361.43673706]
[11.48496246 375.12918091]
[5.35990572 388.82165527]
[9.81276131 398.71908569]
[8.12887478 409.21856689]
[1.10010779 416.90322876]
[-8.78273773 419.40667725]
[-15.26560402 432.93341064]
[-21.74847031 446.46014404]
[-23.14152336 463.35675049]
[-39.76345062 466.69558716]
[-47.57321548 451.64752197]
[-35.27519989 439.97726440]
[-28.79233551 426.45053101]
[-22.30946732 412.92379761]
[-25.17847061 393.79061890]
[-8.33256245 382.69659424]
[-2.20750523 369.00415039]
[3.91755176 355.31167603]
[10.04260826 341.61920166]
[16.16766548 327.92672729]
[4.75778675 311.09716797]
[5.89078283 290.65579224]
[19.27248001 274.97723389]
[39.55579758 270.58779907]
[44.76836014 256.52261353]
[49.98092270 242.45745850]
[55.19348145 228.39227295]
[60.40604401 214.32710266]
[65.61860657 200.26191711]
[60.85879517 189.15417480]
[65.07151794 177.40122986]
[76.51477814 171.47727966]
[81.91176605 157.48184204]
[87.30875397 143.48638916]
[65.65977478 111.62014008]
[78.08573914 83.87847137]
[68.92176819 72.00321960]
[54.36531067 65.80481720]
[52.71530914 51.00188828]
[43.55133057 39.12664032]
[34.38735580 27.25139046]
[25.22337914 15.37614155]
[8.31506252 16.09165573]
[-5.54638720 6.67563534]
[-11.00268078 -8.99227810]
[-6.08805370 -24.66422272]
[-15.40733051 -36.41799164]
[-24.72660828 -48.17176056]
[-38.18421173 -48.16481400]
[-49.03380966 -55.79349899]
[-53.44893646 -68.09375763]
[-50.03064728 -80.50583649]
[-59.19462204 -92.38108063]
[-68.35859680 -104.25633240]
[-82.91505432 -110.45473480]
[-84.56505585 -125.25766754]
[-93.72903442 -137.13291931]
[-102.89300537 -149.00816345]
[-118.06530762 -147.07200623]
[-132.07710266 -152.95132446]
[-141.20410156 -164.97480774]
[-143.07489014 -179.85285950]
[-137.28639221 -193.57723999]
[-146.45036316 -205.45249939]
[-155.61434937 -217.32774353]
[-164.77832031 -229.20298767]
[-173.94229126 -241.07824707]
[-183.10627747 -252.95349121]
[-192.27024841 -264.82873535]
[-201.43421936 -276.70397949]
[-210.59820557 -288.57925415]
[-219.84002686 -300.39401245]
[-229.15930176 -312.14776611]
[-238.47857666 -323.90155029]
[-247.79785156 -335.65530396]
[-257.11712646 -347.40908813]
[-274.39743042 -353.79632568]
[-276.26419067 -371.25387573]
[-285.73718262 -382.88412476]
[-301.12515259 -382.16537476]
[-313.83715820 -390.54739380]
[-319.11358643 -404.64077759]
[-315.12722778 -418.96722412]
[-324.60018921 -430.59747314]
[-340.11093140 -435.92190552]
[-342.98919678 -452.06649780]
[-330.27410889 -462.42306519]
[-315.04583740 -456.33767700]
[-312.96994019 -440.07043457]
[-303.49697876 -428.44018555]
[-288.66027832 -429.44531250]
[-275.92602539 -421.42642212]
[-270.28948975 -407.28134155]
[-274.10690308 -392.35708618]
[-264.63394165 -380.72683716]
[-252.64746094 -379.18997192]
[-244.65924072 -369.59481812]
[-245.36335754 -356.72836304]
[-236.04408264 -344.97457886]
[-226.72480774 -333.22082520]
[-217.40553284 -321.46704102]
[-208.08625793 -309.71328735]
[-201.48043823 -306.43103027]
[-198.72294617 -297.74322510]
[-189.55897522 -285.86798096]
[-180.39500427 -273.99270630]
[-171.23101807 -262.11746216]
[-162.06704712 -250.24221802]
[-152.90307617 -238.36697388]
[-143.73908997 -226.49171448]
[-134.57511902 -214.61647034]
[-125.41114044 -202.74122620]
[-110.66761780 -204.86112976]
[-96.74994659 -199.27951050]
[-87.43320465 -187.40245056]
[-85.29830933 -172.35787964]
[-91.01776123 -158.17213440]
[-81.85378265 -146.29689026]
[-72.68980408 -134.42164612]
[-58.78882217 -129.07263184]
[-56.48334885 -113.42031097]
[-47.31937408 -101.54505920]
[-38.15539932 -89.66980743]
[-21.39085388 -88.22858429]
[-10.65146351 -74.83891296]
[-12.97283840 -57.49103546]
[-3.65356183 -45.73727036]
[5.66571522 -33.98350143]
[18.88426590 -35.78094482]
[31.36679077 -30.77639771]
[39.81751633 -20.17613029]
[41.94859314 -6.67858362]
[37.09862900 6.21216536]
[46.26260376 18.08741570]
[55.42658234 29.96266365]
[64.59055328 41.83791351]
[78.49153900 47.18692017]
[80.79701233 62.83924866]
[89.96099091 74.71449280]
[108.93445587 67.98619843]
[131.29586792 76.28063202]
[145.30043030 100.07041168]
[160.29751587 100.36614990]
[175.29460144 100.66188812]
[190.29168701 100.95761871]
[205.28875732 101.25335693]
[223.41789246 89.80491638]
[240.58160400 101.28451538]
[255.57868958 100.98877716]
[270.57577515 100.69303894]
[285.57284546 100.39730072]
[300.56994629 100.10156250]
[315.25967407 97.06651306]
[329.14599609 91.39464569]
[343.03231812 85.72277069]
[352.64639282 72.43737793]
[368.92892456 74.38961792]
[375.12985229 89.57120514]
[364.87017822 102.36462402]
[348.70419312 99.60909271]
[334.81787109 105.28096008]
[320.93154907 110.95283508]
[323.57940674 125.71727753]
[338.57131958 126.21012115]
[353.56320190 126.70295715]
[368.55511475 127.19579315]
[383.54702759 127.68863678]
[398.53890991 128.18147278]
[412.58584595 120.90177155]
[425.05203247 129.05305481]
[440.04394531 129.54589844]
[454.24487305 121.34435272]
[468.31091309 129.77519226]
[467.77209473 146.16548157]
[453.18273926 153.65429688]
[439.55111694 144.53779602]
[424.55920410 144.04495239]
[411.58459473 151.35990906]
[398.04608154 143.17337036]
[383.05416870 142.68054199]
[368.06228638 142.18769836]
[353.07037354 141.69485474]
[338.07846069 141.20202637]
[323.08657837 140.70918274]
[316.68035889 154.27236938]
[303.29074097 161.03392029]
[288.57293701 158.13803101]
[278.74307251 146.80780029]
[277.95288086 131.82862854]
[286.53607178 119.52705383]
[300.86569214 115.09864807]
[285.86859131 115.39438629]
[270.87152100 115.69012451]
[255.87442017 115.98586273]
[240.87733459 116.28160095]
[235.86932373 123.57310486]
[227.95190430 127.81690216]
[218.83251953 127.95484161]
[210.54435730 123.83015442]
[204.99302673 116.25044250]
[189.99594116 115.95470428]
[174.99885559 115.65896606]
[160.00177002 115.36323547]
[145.00468445 115.06749725]
[141.11331177 121.47898102]
[148.32720947 134.63038635]
[133.33053589 134.30194092]
[129.43914795 140.71342468]
[136.62394714 153.88076782]
[143.80874634 167.04809570]
[150.99356079 180.21542358]
[163.88789368 191.22325134]
[156.87977600 206.66094971]
[140.10534668 204.20028687]
[137.82621765 187.40022278]
[130.64141846 174.23289490]
[123.45661926 161.06556702]
[116.27182007 147.89822388]
[101.30420685 148.88337708]
[95.90721893 162.87882996]
[90.51023102 176.87426758]
[93.77787018 195.00511169]
[79.68378448 205.47448730]
[74.47122192 219.53965759]
[69.25865936 233.60482788]
[64.04609680 247.67001343]
[58.83353806 261.73519897]
[53.62097549 275.80035400]
[60.82846451 282.50350952]
[65.68432617 291.03118896]
[67.75856018 300.59262085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 27]
[6 26]
[7 25]
[8 24]
[9 23]
[13 21]
[14 20]
[15 19]
[31 235]
[32 234]
[33 233]
[34 232]
[35 231]
[36 230]
[39 228]
[40 227]
[41 226]
[43 146]
[44 145]
[46 143]
[47 142]
[48 141]
[49 140]
[53 135]
[54 134]
[55 133]
[59 130]
[60 129]
[61 128]
[63 126]
[64 125]
[65 124]
[70 119]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
[76 113]
[77 112]
[78 111]
[79 109]
[80 108]
[81 107]
[82 106]
[83 105]
[85 102]
[86 101]
[90 97]
[91 96]
[149 211]
[150 210]
[151 209]
[152 208]
[153 207]
[155 202]
[156 201]
[157 200]
[158 199]
[159 198]
[160 169]
[161 168]
[162 167]
[170 191]
[171 190]
[172 189]
[173 188]
[174 187]
[175 186]
[177 184]
[178 183]
[215 225]
[216 224]
[217 223]
[218 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
