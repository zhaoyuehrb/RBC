%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CHSY3)
} def

/sequence { (\
AUGGCUGUGCGCUCUCGCCGCCCGUGGAUGAGCGUGGCAUUAGGGCUGGUGCUGGGCUUCACCGCCGCGUCCUGGCUCAUCGCCCCCAGGGUGGCGGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.041226510 ubox
2 7 0.040936804 ubox
2 9 0.022157996 ubox
2 11 0.024668298 ubox
3 8 0.031442380 ubox
3 10 0.201772894 ubox
3 13 0.030242910 ubox
3 14 0.007936479 ubox
3 58 0.003282566 ubox
4 10 0.575023839 ubox
4 12 0.035525566 ubox
4 57 0.003577048 ubox
4 100 0.005264744 ubox
5 9 0.571864043 ubox
5 11 0.036229830 ubox
5 56 0.003577258 ubox
5 99 0.005237137 ubox
6 55 0.003531565 ubox
6 98 0.004864236 ubox
9 52 0.003564226 ubox
9 100 0.009959630 ubox
10 51 0.003567337 ubox
10 99 0.009162946 ubox
11 50 0.003556952 ubox
11 100 0.991487722 ubox
12 49 0.003555789 ubox
12 99 0.999080802 ubox
13 48 0.003249982 ubox
13 98 0.999061054 ubox
14 97 0.994737038 ubox
14 99 0.018581220 ubox
15 96 0.164680690 ubox
15 97 0.097405952 ubox
15 98 0.017915245 ubox
16 96 0.985703495 ubox
16 97 0.012728446 ubox
17 46 0.003257182 ubox
17 95 0.999943195 ubox
18 45 0.003252532 ubox
18 94 0.999978989 ubox
19 44 0.003244741 ubox
19 93 0.999947278 ubox
20 38 0.004502967 ubox
20 92 0.999569383 ubox
21 37 0.004505769 ubox
21 91 0.999444837 ubox
22 36 0.004504840 ubox
22 90 0.998887009 ubox
22 91 0.032387665 ubox
23 34 0.004563471 ubox
23 69 0.013199856 ubox
23 89 0.997558743 ubox
23 90 0.045574000 ubox
24 33 0.005551251 ubox
24 62 0.003977924 ubox
24 65 0.075215222 ubox
24 66 0.005055750 ubox
24 68 0.031932360 ubox
24 83 0.229213562 ubox
25 32 0.005497593 ubox
25 61 0.004006251 ubox
25 64 0.075485024 ubox
25 67 0.031935907 ubox
25 82 0.222734697 ubox
25 88 0.823968135 ubox
26 60 0.003999332 ubox
26 63 0.076239308 ubox
26 66 0.031934765 ubox
26 72 0.006198433 ubox
26 81 0.170031627 ubox
26 84 0.113094175 ubox
26 85 0.181120302 ubox
26 86 0.227577550 ubox
26 87 0.858400243 ubox
27 62 0.076212148 ubox
27 65 0.031915870 ubox
27 71 0.006235785 ubox
27 80 0.089008842 ubox
27 81 0.426920164 ubox
27 83 0.096680391 ubox
27 84 0.165289903 ubox
27 85 0.211063621 ubox
27 86 0.835163578 ubox
28 35 0.008479673 ubox
28 40 0.007278804 ubox
28 70 0.005428666 ubox
28 80 0.553830089 ubox
29 34 0.008229734 ubox
29 39 0.007702033 ubox
29 42 0.004577810 ubox
29 61 0.067460879 ubox
29 64 0.005501121 ubox
29 69 0.004544526 ubox
29 79 0.564773812 ubox
29 82 0.074146813 ubox
29 88 0.011083592 ubox
30 38 0.007775444 ubox
30 41 0.006094001 ubox
30 59 0.051828177 ubox
30 60 0.068344506 ubox
30 63 0.004725181 ubox
30 68 0.003753472 ubox
30 71 0.030005143 ubox
30 73 0.003410598 ubox
30 78 0.565395690 ubox
30 81 0.076710930 ubox
30 87 0.011161261 ubox
31 40 0.006201098 ubox
31 53 0.005218418 ubox
31 58 0.072210384 ubox
31 59 0.048493087 ubox
31 70 0.025647654 ubox
31 73 0.008360076 ubox
31 77 0.565246236 ubox
31 80 0.073847495 ubox
32 38 0.015282324 ubox
32 52 0.005369998 ubox
32 57 0.087079288 ubox
32 58 0.006910739 ubox
32 70 0.066195012 ubox
32 72 0.007324485 ubox
32 76 0.564993550 ubox
32 83 0.809225343 ubox
33 37 0.015258261 ubox
33 51 0.005368274 ubox
33 56 0.087352792 ubox
33 69 0.077334105 ubox
33 74 0.025950014 ubox
33 75 0.562120999 ubox
33 82 0.810193125 ubox
34 40 0.023001097 ubox
34 50 0.003689391 ubox
34 68 0.095098072 ubox
34 73 0.033148661 ubox
34 76 0.005219915 ubox
34 80 0.169477232 ubox
34 81 0.792572749 ubox
34 83 0.007079152 ubox
35 39 0.022358668 ubox
35 42 0.004659932 ubox
35 48 0.004626824 ubox
35 54 0.085072975 ubox
35 67 0.095089468 ubox
35 74 0.054622096 ubox
35 75 0.005429468 ubox
35 79 0.723997902 ubox
35 82 0.007082099 ubox
36 41 0.007156748 ubox
36 47 0.016730704 ubox
36 53 0.089921974 ubox
36 66 0.095129018 ubox
36 71 0.077993497 ubox
36 72 0.320636039 ubox
36 73 0.052936054 ubox
36 77 0.336610851 ubox
36 78 0.729432212 ubox
36 81 0.006993175 ubox
36 84 0.048300547 ubox
36 85 0.006832928 ubox
37 46 0.017635988 ubox
37 52 0.090731547 ubox
37 65 0.095125249 ubox
37 68 0.015733386 ubox
37 70 0.080373608 ubox
37 71 0.320231253 ubox
37 72 0.051924931 ubox
37 76 0.762920820 ubox
37 77 0.245338932 ubox
37 80 0.006301203 ubox
37 83 0.048495003 ubox
37 84 0.005974611 ubox
38 45 0.017629921 ubox
38 51 0.090775720 ubox
38 64 0.094988230 ubox
38 67 0.016537729 ubox
38 69 0.143640849 ubox
38 74 0.048505667 ubox
38 75 0.762184861 ubox
38 82 0.048556035 ubox
39 50 0.090754937 ubox
39 70 0.227851334 ubox
39 73 0.035556644 ubox
39 80 0.020631696 ubox
40 49 0.090642935 ubox
40 69 0.214264114 ubox
40 75 0.250102469 ubox
40 79 0.018553186 ubox
41 48 0.088289107 ubox
41 74 0.835847796 ubox
42 47 0.080854214 ubox
42 53 0.003553713 ubox
42 58 0.004541792 ubox
42 59 0.024738746 ubox
42 73 0.921590179 ubox
43 52 0.003583170 ubox
43 57 0.004551772 ubox
43 58 0.027292502 ubox
43 59 0.068755447 ubox
43 60 0.013002220 ubox
43 63 0.020771522 ubox
43 66 0.053599910 ubox
43 71 0.004503030 ubox
43 72 0.930884032 ubox
43 73 0.005734741 ubox
43 78 0.052958909 ubox
43 85 0.003901895 ubox
44 53 0.031693631 ubox
44 57 0.027376760 ubox
44 58 0.079497251 ubox
44 59 0.009246044 ubox
44 62 0.020718278 ubox
44 63 0.017565137 ubox
44 65 0.044465028 ubox
44 66 0.329707779 ubox
44 70 0.004795010 ubox
44 71 0.930914030 ubox
44 72 0.006668403 ubox
44 77 0.053953309 ubox
44 84 0.003911314 ubox
45 52 0.033593110 ubox
45 57 0.080959025 ubox
45 62 0.017614348 ubox
45 65 0.331206565 ubox
45 68 0.035859471 ubox
45 70 0.930227748 ubox
45 71 0.006816669 ubox
45 76 0.054258368 ubox
45 83 0.003910603 ubox
46 51 0.033608457 ubox
46 55 0.027493662 ubox
46 56 0.080913196 ubox
46 64 0.325061817 ubox
46 67 0.035325155 ubox
46 69 0.930029125 ubox
46 75 0.054263938 ubox
46 82 0.003862197 ubox
47 54 0.027040184 ubox
47 55 0.080221655 ubox
47 61 0.023797915 ubox
47 64 0.081236191 ubox
47 67 0.896514792 ubox
47 69 0.003721219 ubox
47 74 0.053677692 ubox
48 53 0.016965860 ubox
48 58 0.019435127 ubox
48 60 0.024768072 ubox
48 63 0.335453827 ubox
48 66 0.914471233 ubox
48 68 0.072623979 ubox
48 72 0.024231584 ubox
48 73 0.050813635 ubox
49 57 0.019742983 ubox
49 59 0.021113110 ubox
49 62 0.335628578 ubox
49 65 0.914307325 ubox
49 68 0.149803104 ubox
49 71 0.024317649 ubox
49 72 0.050961205 ubox
50 56 0.019646126 ubox
50 61 0.335394742 ubox
50 64 0.909232100 ubox
50 67 0.152081490 ubox
50 69 0.020846414 ubox
51 57 0.044294393 ubox
51 60 0.332823381 ubox
51 63 0.878988440 ubox
51 65 0.082308434 ubox
51 66 0.149015968 ubox
51 68 0.037641633 ubox
51 70 0.051658276 ubox
52 56 0.047617975 ubox
52 64 0.087313922 ubox
52 67 0.037458243 ubox
52 69 0.052348754 ubox
52 75 0.003194377 ubox
53 61 0.868535961 ubox
53 64 0.167835621 ubox
53 67 0.004291998 ubox
53 69 0.005601209 ubox
54 60 0.876643001 ubox
54 63 0.288533422 ubox
54 66 0.009813885 ubox
54 68 0.016678575 ubox
54 72 0.007140932 ubox
54 85 0.006987671 ubox
55 59 0.568008629 ubox
55 62 0.296395844 ubox
55 63 0.040965917 ubox
55 65 0.008235428 ubox
55 66 0.069067169 ubox
55 71 0.007147441 ubox
55 84 0.007019613 ubox
56 62 0.042834590 ubox
56 65 0.069436947 ubox
56 70 0.007109929 ubox
56 83 0.007019900 ubox
57 64 0.069570169 ubox
57 69 0.007328303 ubox
57 82 0.007009907 ubox
61 70 0.003698172 ubox
62 69 0.003992434 ubox
62 97 0.004057315 ubox
63 69 0.004845859 ubox
63 96 0.004098968 ubox
64 68 0.004716308 ubox
64 76 0.027495393 ubox
64 95 0.004106208 ubox
65 75 0.027537956 ubox
65 94 0.004106299 ubox
66 74 0.027607942 ubox
66 93 0.004105998 ubox
67 73 0.022477432 ubox
67 76 0.021999284 ubox
67 83 0.025625483 ubox
67 92 0.004073927 ubox
68 74 0.005667938 ubox
68 75 0.022021702 ubox
68 82 0.025676135 ubox
68 91 0.003978131 ubox
69 73 0.004103930 ubox
69 81 0.025497535 ubox
70 79 0.004806818 ubox
71 90 0.010080565 ubox
72 89 0.013560925 ubox
73 79 0.008443637 ubox
73 88 0.015228808 ubox
74 78 0.008576541 ubox
74 84 0.104240886 ubox
74 85 0.007872461 ubox
74 87 0.014108499 ubox
75 83 0.104827894 ubox
75 84 0.006375768 ubox
75 86 0.013544114 ubox
75 100 0.003739612 ubox
76 82 0.104910202 ubox
76 99 0.003811074 ubox
77 98 0.003803924 ubox
78 97 0.003755213 ubox
80 94 0.003375313 ubox
81 93 0.003709945 ubox
82 92 0.004675345 ubox
83 91 0.004738399 ubox
84 90 0.004778744 ubox
85 89 0.004831697 ubox
11 100 0.9500000 lbox
12 99 0.9500000 lbox
13 98 0.9500000 lbox
14 97 0.9500000 lbox
16 96 0.9500000 lbox
17 95 0.9500000 lbox
18 94 0.9500000 lbox
19 93 0.9500000 lbox
20 92 0.9500000 lbox
21 91 0.9500000 lbox
22 90 0.9500000 lbox
23 89 0.9500000 lbox
25 88 0.9500000 lbox
26 87 0.9500000 lbox
27 86 0.9500000 lbox
32 83 0.9500000 lbox
33 82 0.9500000 lbox
34 81 0.9500000 lbox
35 79 0.9500000 lbox
36 78 0.9500000 lbox
37 76 0.9500000 lbox
38 75 0.9500000 lbox
41 74 0.9500000 lbox
42 73 0.9500000 lbox
43 72 0.9500000 lbox
44 71 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
47 67 0.9500000 lbox
48 66 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
53 61 0.9500000 lbox
54 60 0.9500000 lbox
showpage
end
%%EOF
