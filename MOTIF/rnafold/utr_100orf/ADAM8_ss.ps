%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAAAAGAGCCUCGGGCCAGGAGCGCAGGAACCAGACCGUGUCCCGCGGGGCUGUCACCUCCGCCUCUGCUCCCCGACCCGGCCAUGCGCGGCCUCGGGCUCUGGCUGCUGGGCGCGAUGAUGCUGCCUGCGAUUGCCCCCAGCCGGCCCUGGGCCCUCAUGGAGCAGUAUGAGGUCGUGUUGC\
) } def
/len { sequence length } bind def

/coor [
[119.01759338 131.93750000]
[112.48027802 135.01307678]
[105.47148895 136.76596069]
[98.25601196 137.12992859]
[91.10640717 136.09123230]
[84.29278564 133.68911743]
[78.07253265 130.01431274]
[72.68063354 125.20565796]
[68.32079315 119.44480896]
[65.15769196 112.94938660]
[63.31084061 105.96477509]
[48.32406998 105.33496094]
[33.33729935 104.70514679]
[18.33941460 104.45315552]
[3.33994365 104.57915497]
[-11.65952682 104.70515442]
[-26.65899849 104.83115387]
[-41.65847015 104.95715332]
[-58.52879333 115.96644592]
[-74.94250488 105.76791382]
[-89.92927551 106.39772034]
[-104.91604614 107.02753448]
[-119.90281677 107.65734863]
[-133.36595154 115.96726227]
[-146.40687561 108.77117157]
[-161.39364624 109.40098572]
[-176.38041687 110.03079987]
[-189.84355164 118.34071350]
[-202.88446045 111.14462280]
[-217.87123108 111.77443695]
[-232.85800171 112.40425110]
[-241.49061584 125.16294098]
[-255.81326294 130.33161926]
[-270.26217651 126.12527466]
[-279.35476685 114.35825348]
[-294.34152222 114.98806763]
[-309.32830811 115.61788177]
[-324.62860107 125.84663391]
[-339.85656738 117.14239502]
[-354.83065796 118.02388763]
[-369.80471802 118.90537262]
[-384.77880859 119.78686523]
[-399.75289917 120.66835785]
[-415.20932007 127.63504791]
[-426.18252563 114.71121979]
[-416.80145264 100.58918762]
[-400.63436890 105.69427490]
[-385.66030884 104.81278992]
[-370.68621826 103.93129730]
[-355.71215820 103.04980469]
[-340.73806763 102.16831970]
[-332.45867920 93.33119965]
[-319.97656250 92.48580933]
[-309.95809937 100.63111115]
[-294.97134399 100.00129700]
[-279.98455811 99.37148285]
[-271.91128540 86.88307953]
[-257.86627197 81.47928619]
[-243.16046143 85.42805481]
[-233.48782349 97.41747284]
[-218.50105286 96.78766632]
[-203.51428223 96.15785217]
[-191.12309265 87.89298248]
[-177.01022339 95.04402924]
[-162.02345276 94.41421509]
[-147.03668213 93.78440094]
[-134.64550781 85.51953888]
[-120.53263092 92.67057800]
[-105.54586029 92.04076385]
[-90.55908966 91.41094971]
[-75.57231903 90.78113556]
[-69.34300995 82.64907837]
[-59.45482254 79.22702026]
[-49.10548019 81.87783051]
[-41.78446579 89.95767975]
[-26.78499603 89.83168030]
[-11.78552532 89.70568085]
[3.21394539 89.57968903]
[18.21341705 89.45368958]
[20.94244194 87.19006348]
[24.91057396 86.14688873]
[29.52704430 86.89524841]
[33.96710968 89.71837616]
[48.95388412 90.34819031]
[63.94065475 90.97799683]
[76.39630890 71.28521729]
[98.12738800 62.87633896]
[120.59433746 69.05575562]
[134.96842957 87.39517212]
[149.81575012 85.26045227]
[164.66307068 83.12573242]
[179.51039124 80.99100494]
[194.35771179 78.85628510]
[209.20503235 76.72156525]
[224.05236816 74.58683777]
[238.89968872 72.45211792]
[253.74700928 70.31739044]
[268.59432983 68.18267059]
[283.08862305 64.32067108]
[297.02969360 58.78475189]
[310.97079468 53.24882507]
[324.91186523 47.71290207]
[338.85293579 42.17697906]
[352.79400635 36.64105606]
[363.86618042 21.93958092]
[381.11251831 25.13623047]
[394.95864868 19.36688995]
[408.80474854 13.59754944]
[422.65084839 7.82820845]
[436.49697876 2.05886745]
[450.29412842 -3.82657552]
[464.04135132 -9.82770538]
[477.78860474 -15.82883549]
[491.53582764 -21.82996559]
[505.28305054 -27.83109474]
[514.83514404 -40.44330215]
[529.59497070 -38.44407272]
[543.34222412 -44.44520187]
[557.08947754 -50.44633102]
[570.83666992 -56.44746017]
[584.58392334 -62.44858932]
[588.83105469 -67.55941772]
[594.21575928 -69.45723724]
[598.89526367 -68.41177368]
[612.83630371 -73.94769287]
[626.77740479 -79.48361969]
[634.42858887 -93.58462524]
[650.24829102 -96.25251007]
[662.10089111 -85.44071198]
[660.89416504 -69.44310760]
[647.55377197 -60.53169632]
[632.31329346 -65.54254150]
[618.37225342 -60.00662231]
[604.43115234 -54.47069931]
[590.58508301 -48.70135880]
[576.83782959 -42.70022583]
[563.09057617 -36.69909668]
[549.34338379 -30.69796753]
[535.59613037 -24.69683647]
[527.02728271 -12.51387119]
[511.28417969 -14.08386135]
[497.53695679 -8.08273125]
[483.78973389 -2.08160138]
[470.04248047 3.91952848]
[456.29525757 9.92065811]
[451.41268921 15.48979473]
[442.26629639 15.90497589]
[428.42019653 21.67431641]
[414.57409668 27.44365692]
[400.72799683 33.21299744]
[386.88186646 38.98233795]
[381.97915649 50.05512238]
[370.47375488 54.96875381]
[358.32992554 50.58213043]
[344.38885498 56.11805344]
[330.44778442 61.65397644]
[316.50671387 67.18990326]
[302.56564331 72.72582245]
[288.62457275 78.26174927]
[303.40136719 80.83979034]
[316.11291504 88.80319977]
[324.87982178 100.97454834]
[328.40576172 115.55424500]
[326.16949463 130.38661194]
[318.50161743 143.27861023]
[306.53585815 152.32409668]
[292.04141235 156.18563843]
[277.16140747 154.29231262]
[264.09585571 146.92402649]
[254.77658081 135.17025757]
[250.58151245 120.76881409]
[252.13088989 105.84905243]
[259.19561768 92.61691284]
[270.72903442 83.02999115]
[255.88172913 85.16471863]
[241.03440857 87.29943848]
[226.18708801 89.43415833]
[211.33976746 91.56888580]
[196.49244690 93.70360565]
[181.64512634 95.83832550]
[166.79779053 97.97305298]
[151.95046997 100.10777283]
[137.10314941 102.24249268]
[135.96853638 109.37750244]
[133.47512817 116.15824890]
[129.71711731 122.32859039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 85]
[12 84]
[13 83]
[14 79]
[15 78]
[16 77]
[17 76]
[18 75]
[20 71]
[21 70]
[22 69]
[23 68]
[25 66]
[26 65]
[27 64]
[29 62]
[30 61]
[31 60]
[35 56]
[36 55]
[37 54]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[89 183]
[90 182]
[91 181]
[92 180]
[93 179]
[94 178]
[95 177]
[96 176]
[97 175]
[98 174]
[99 159]
[100 158]
[101 157]
[102 156]
[103 155]
[104 154]
[106 151]
[107 150]
[108 149]
[109 148]
[110 147]
[111 145]
[112 144]
[113 143]
[114 142]
[115 141]
[117 139]
[118 138]
[119 137]
[120 136]
[121 135]
[124 134]
[125 133]
[126 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
