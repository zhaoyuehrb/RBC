%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUUCCUCUUCGCCCGGGUGGCGUUGGGCCCGCGCGGGCGCUCGGGUGACUGCAGCUGCUCAGCUCCCCUCCCCCGCCCCGCGCCGCGCGGCCGCCCGUCGCUUCGCACAGGGCUGGAUGGUUGUAUUGGGCAGGGUGGCUCCAGGAUGUUAGGAACUGUGAAGAUGGAAGGGCAUGAAACCAGCGACUGGAACAGCUACUACGCAGACACGCAGGAGGCCUACUCCUCCGUCCCGGUCAGCAACA\
) } def
/len { sequence length } bind def

/coor [
[215.57196045 267.33786011]
[211.08462524 250.35891724]
[212.05603027 232.80645752]
[218.40209961 216.39390564]
[206.57417297 207.16893005]
[194.74624634 197.94395447]
[182.91831970 188.71897888]
[171.09040833 179.49398804]
[159.20451355 170.34381104]
[147.26113892 161.26879883]
[135.31777954 152.19378662]
[123.37440491 143.11877441]
[111.43103790 134.04376221]
[96.52763367 135.74337769]
[86.93423462 147.27449036]
[77.34082794 158.80560303]
[67.74742126 170.33671570]
[58.15402222 181.86782837]
[55.27595901 197.42506409]
[41.18812180 202.26055908]
[31.59471893 213.79167175]
[22.00131416 225.32278442]
[12.48084450 236.91419983]
[3.03368688 248.56542969]
[3.26378012 264.60684204]
[-9.22537613 274.67660522]
[-24.85317039 271.05010986]
[-31.63129616 256.50924683]
[-24.36015511 242.20854187]
[-8.61754513 239.11827087]
[0.82961261 227.46704102]
[2.59665132 220.30998230]
[10.47020054 215.72938538]
[20.06360435 204.19827271]
[29.65700722 192.66716003]
[31.84888458 177.93470764]
[46.62290573 172.27442932]
[56.21630859 160.74331665]
[65.80971527 149.21218872]
[75.40311432 137.68107605]
[84.99652100 126.14996338]
[76.09559631 118.52674103]
[70.75078583 108.05590820]
[69.79221344 96.30199432]
[73.39224243 85.03329468]
[81.03530884 75.95580292]
[70.87242126 64.92331696]
[60.70953751 53.89083481]
[50.54664993 42.85834885]
[35.50589752 37.95055771]
[32.57361984 23.34744072]
[22.41073227 12.31495571]
[12.24784565 1.28247046]
[8.11483192 0.14658327]
[4.87295389 -2.01737785]
[2.73450112 -4.80762959]
[1.76116920 -7.79470444]
[1.86792505 -10.57240582]
[-7.72547865 -22.10351944]
[-17.31888199 -33.63463593]
[-26.91228676 -45.16574860]
[-36.50569153 -56.69686508]
[-46.09909439 -68.22798157]
[-55.69249725 -79.75909424]
[-65.43061829 -91.16825867]
[-75.31191254 -102.45364380]
[-90.84250641 -103.65294647]
[-100.70277405 -115.23870087]
[-99.46372223 -130.03735352]
[-109.34501648 -141.32275391]
[-124.25714874 -146.60847473]
[-126.82003784 -161.28092957]
[-136.70132446 -172.56631470]
[-146.58262634 -183.85171509]
[-157.42796326 -183.94042969]
[-166.25984192 -189.84968567]
[-170.30877686 -199.43696594]
[-168.46527100 -209.45672607]
[-178.05867004 -220.98783875]
[-187.65206909 -232.51895142]
[-197.24548340 -244.05006409]
[-216.46229553 -250.19221497]
[-218.85015869 -269.39471436]
[-228.73146057 -280.68011475]
[-238.61274719 -291.96548462]
[-254.14334106 -293.16479492]
[-264.00360107 -304.75054932]
[-262.76455688 -319.54919434]
[-272.64584351 -330.83459473]
[-282.52713013 -342.11999512]
[-292.47943115 -353.34283447]
[-302.50231934 -364.50265503]
[-312.52520752 -375.66247559]
[-328.27468872 -380.23260498]
[-331.92828369 -396.21957397]
[-319.72750854 -407.17736816]
[-304.22344971 -401.83352661]
[-301.36538696 -385.68536377]
[-291.34249878 -374.52554321]
[-281.31961060 -363.36572266]
[-274.52890015 -360.49652100]
[-271.24176025 -352.00128174]
[-261.36047363 -340.71588135]
[-251.47917175 -329.43051147]
[-236.64651489 -328.70394897]
[-226.46470642 -317.39971924]
[-227.32736206 -301.84680176]
[-217.44606018 -290.56140137]
[-207.56477356 -279.27600098]
[-197.37982178 -279.52294922]
[-188.54745483 -274.01852417]
[-184.09864807 -264.36816406]
[-185.71435547 -253.64347839]
[-176.12095642 -242.11236572]
[-166.52755737 -230.58125305]
[-156.93415833 -219.05012512]
[-138.34500122 -213.67599487]
[-135.29722595 -193.73300171]
[-125.41593933 -182.44761658]
[-115.53464508 -171.16221619]
[-101.32929230 -166.68370056]
[-98.05962372 -151.20404053]
[-88.17832947 -139.91865540]
[-73.34567261 -139.19209290]
[-63.16387558 -127.88787079]
[-64.02651978 -112.33493805]
[-54.14522552 -101.04954529]
[-49.54702759 -99.84490967]
[-45.64753723 -95.75372314]
[-44.16138077 -89.35249329]
[-34.56797791 -77.82138062]
[-24.97457504 -66.29026794]
[-15.38117123 -54.75915146]
[-5.78776789 -43.22803879]
[3.80563593 -31.69692421]
[13.39903927 -20.16580963]
[23.28033066 -8.88041687]
[33.44321823 2.15206838]
[43.60610580 13.18455315]
[57.91993713 17.30322838]
[61.57913208 32.69546127]
[71.74201965 43.72794724]
[81.90490723 54.76043320]
[92.06779480 65.79291534]
[107.06660461 65.60366821]
[116.94789124 54.31827545]
[126.82918549 43.03288269]
[121.25907898 28.77692032]
[122.96359253 13.56662083]
[131.55105591 0.89720172]
[145.04811096 -6.31999826]
[160.35324097 -6.42651844]
[173.94944763 0.60211784]
[182.71241760 13.15078163]
[184.62847900 28.33588219]
[179.25733948 42.66799545]
[167.83325195 52.85370636]
[152.98138428 56.55241013]
[138.11457825 52.91417694]
[128.23329163 64.19956970]
[118.35198975 75.48496246]
[130.34362793 98.39955902]
[120.50605011 122.10038757]
[132.44941711 131.17539978]
[144.39279175 140.25041199]
[156.33616638 149.32542419]
[168.27952576 158.40045166]
[176.98225403 161.09063721]
[180.31538391 167.66607666]
[192.14329529 176.89105225]
[203.97122192 186.11602783]
[215.79914856 195.34100342]
[227.62707520 204.56597900]
[237.62078857 196.81857300]
[249.08282471 191.49882507]
[261.43414307 188.87120056]
[274.05172729 189.06428528]
[286.30001831 192.06452942]
[297.56295776 197.71701050]
[307.27487183 205.73355103]
[314.94897461 215.70732117]
[320.20178223 227.13356018]
[322.77212524 239.43502808]
[322.53436279 251.99125671]
[319.50427246 264.16979980]
[313.83828735 275.35809326]
[325.18579102 285.16799927]
[336.59497070 294.90609741]
[348.06533813 304.57205200]
[359.53570557 314.23800659]
[371.00607300 323.90396118]
[382.47640991 333.56991577]
[393.94677734 343.23587036]
[401.14328003 337.71115112]
[410.82794189 335.11270142]
[421.73086548 336.48587036]
[432.17315674 342.30966187]
[440.31918335 352.34860229]
[454.15005493 358.15435791]
[468.68313599 351.94421387]
[483.31945801 357.90686035]
[489.37561035 372.50476074]
[483.25854492 387.07723999]
[468.59744263 392.97872925]
[454.09045410 386.70794678]
[448.34429932 371.98526001]
[434.51342773 366.17950439]
[429.93835449 372.12243652]
[441.82409668 381.27279663]
[432.67355347 393.15838623]
[420.78817749 384.00833130]
[416.21307373 389.95126343]
[425.36325073 401.83715820]
[434.51342773 413.72302246]
[449.06268311 419.93832397]
[450.69549561 434.74316406]
[459.84567261 446.62905884]
[468.99584961 458.51492310]
[478.14602661 470.40081787]
[487.29620361 482.28671265]
[502.95584106 485.77319336]
[509.86383057 500.25280762]
[502.72097778 514.61798096]
[487.00668335 517.84906006]
[474.77557373 507.46737671]
[475.41030884 491.43688965]
[466.26013184 479.55099487]
[457.10995483 467.66510010]
[447.95977783 455.77923584]
[438.80960083 443.89334106]
[424.91485596 438.52819824]
[422.62756348 422.87319946]
[413.47738647 410.98733521]
[404.32720947 399.10144043]
[380.89410400 379.11337280]
[384.28082275 354.70623779]
[372.81045532 345.04028320]
[361.34008789 335.37432861]
[349.86975098 325.70837402]
[338.39938354 316.04241943]
[326.92901611 306.37646484]
[319.80667114 304.47430420]
[315.37588501 296.51550293]
[304.02838135 286.70559692]
[289.32699585 296.12014771]
[272.42120361 300.54370117]
[254.95803833 299.53411865]
[238.64221191 293.17926025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 167]
[10 166]
[11 165]
[12 164]
[13 163]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[20 35]
[21 34]
[22 33]
[23 31]
[24 30]
[46 144]
[47 143]
[48 142]
[49 141]
[51 139]
[52 138]
[53 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[63 131]
[64 130]
[65 127]
[66 126]
[69 123]
[70 122]
[72 120]
[73 119]
[74 118]
[78 116]
[79 115]
[80 114]
[81 113]
[83 109]
[84 108]
[85 107]
[88 104]
[89 103]
[90 102]
[91 100]
[92 99]
[93 98]
[145 161]
[146 160]
[147 159]
[186 244]
[187 243]
[188 241]
[189 240]
[190 239]
[191 238]
[192 237]
[193 236]
[198 207]
[199 206]
[212 234]
[213 233]
[214 232]
[216 230]
[217 229]
[218 228]
[219 227]
[220 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
