%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGACCCGCCCCGCGGCGCAUUGUGGGAUCUGUCGGCUUGUCAGGUGGUGGAGGAAAAGGCGCUCCGUCAUGGGGAUCCAGACGAGCCCCGUCCUGCUGGCCUCCCUGGGGGUGGGGCUGGUCACUCUGCUCGGCCUGGCUGUGGGCUCCUACUUGGUUCGGAGGUCCC\
) } def
/len { sequence length } bind def

/coor [
[29.31862450 667.46612549]
[27.95064735 652.52862549]
[26.58267021 637.59112549]
[25.21469307 622.65368652]
[23.84671593 607.71618652]
[22.47873878 592.77868652]
[20.97440338 577.85430908]
[19.33383560 562.94427490]
[4.66352272 559.81665039]
[-2.91542816 572.76116943]
[-10.49437904 585.70562744]
[-18.07332993 598.65008545]
[-17.63204384 615.04333496]
[-31.74798012 623.39031982]
[-45.89987183 615.10443115]
[-45.52946854 598.70947266]
[-31.01780701 591.07116699]
[-23.43885612 578.12670898]
[-15.85990620 565.18218994]
[-8.28095531 552.23773193]
[-13.57661629 538.88104248]
[-12.86762714 525.09100342]
[-6.74362326 513.34271240]
[3.27466726 505.55496216]
[15.08280468 502.77929688]
[17.26682281 487.93914795]
[19.45084000 473.09899902]
[21.63485718 458.25885010]
[23.81887436 443.41870117]
[26.00289345 428.57855225]
[24.17253876 425.52420044]
[23.75204086 421.42211914]
[25.22175407 416.95458984]
[28.73451233 412.99429321]
[31.72801399 398.29605103]
[34.72151566 383.59777832]
[29.67979813 369.58242798]
[40.01551437 357.60394287]
[43.00901413 342.90570068]
[36.59154129 332.62454224]
[38.99134064 320.33572388]
[49.45458221 312.75244141]
[52.71603394 298.11132812]
[55.97748947 283.47018433]
[59.23894119 268.82904053]
[62.50039291 254.18789673]
[65.76184845 239.54675293]
[69.02330017 224.90562439]
[72.01679993 210.20735168]
[74.74135590 195.45687866]
[77.46590424 180.70639038]
[80.19046021 165.95590210]
[82.91500854 151.20541382]
[85.63956451 136.45492554]
[88.36412048 121.70444489]
[82.49260712 117.31958008]
[78.17131805 111.40112305]
[75.78289795 104.47312164]
[75.53882599 97.14904785]
[77.46072388 90.07741547]
[81.37840271 83.88439178]
[73.56429291 71.08049774]
[58.46508408 67.25274658]
[50.72286606 54.15646362]
[54.46508789 39.78526306]
[46.65098572 26.98136902]
[38.83687973 14.17747211]
[31.02277374 1.37357569]
[15.83082962 -3.78242731]
[10.52569962 -18.92294121]
[19.17702675 -32.43346024]
[35.14825439 -33.94986725]
[46.18761826 -22.30890846]
[43.82667160 -6.44052935]
[51.64077759 6.36336708]
[59.45487976 19.16726303]
[67.26898956 31.97115898]
[81.76100159 35.21416473]
[89.86801147 48.08782196]
[86.36818695 63.26639175]
[94.18229675 76.07028961]
[101.34875488 75.41020966]
[108.40002441 76.85012817]
[117.56763458 64.97768402]
[126.73523712 53.10523605]
[129.04548645 37.45361328]
[142.94812012 32.10886002]
[152.11572266 20.23641014]
[161.28332520 8.36396408]
[170.45092773 -3.50848365]
[179.61853027 -15.38093090]
[188.78614807 -27.25337791]
[197.95375061 -39.12582397]
[207.12135315 -50.99827194]
[216.28895569 -62.87071991]
[225.45655823 -74.74316406]
[234.62417603 -86.61561584]
[230.42028809 -101.43565369]
[235.68742371 -115.72238159]
[248.20903015 -124.06943512]
[263.06683350 -123.45011139]
[272.23443604 -135.32255554]
[277.12924194 -151.55453491]
[294.08190918 -151.34448242]
[298.57302856 -134.99620056]
[284.10690308 -126.15495300]
[274.93930054 -114.28250122]
[279.29650879 -100.06446838]
[274.38800049 -85.83876801]
[261.89807129 -77.12930298]
[246.49661255 -77.44800568]
[237.32901001 -65.57556152]
[228.16140747 -53.70311356]
[218.99380493 -41.83066559]
[209.82620239 -29.95821953]
[200.65858459 -18.08577347]
[191.49098206 -6.21332502]
[182.32337952 5.65912199]
[173.15577698 17.53156853]
[163.98815918 29.40401649]
[154.82055664 41.27646255]
[153.16603088 56.07888794]
[138.60768127 62.27284241]
[129.44007874 74.14528656]
[120.27247620 86.01773834]
[122.48544312 110.04399109]
[103.11460114 124.42900085]
[100.39005280 139.17948914]
[97.66549683 153.92997742]
[94.94094086 168.68045044]
[92.21639252 183.43093872]
[89.49183655 198.18142700]
[86.76728821 212.93191528]
[88.63136292 219.33731079]
[87.17370605 224.87832642]
[83.66443634 228.16706848]
[80.40298462 242.80821228]
[77.14153290 257.44934082]
[73.88008118 272.09048462]
[70.61862946 286.73162842]
[67.35717010 301.37277222]
[64.09571838 316.01391602]
[70.03080750 333.42736816]
[57.70727921 345.89920044]
[54.71377563 360.59744263]
[59.54137802 375.66412354]
[49.41978073 386.59127808]
[46.42627716 401.28955078]
[43.43277359 415.98779297]
[40.84304428 430.76254272]
[38.65902710 445.60269165]
[36.47500992 460.44287109]
[34.29098892 475.28302002]
[32.10697174 490.12316895]
[29.92295647 504.96331787]
[46.32762527 518.69708252]
[48.98605347 541.56005859]
[34.24385071 561.30371094]
[35.88441849 576.21374512]
[39.94689178 584.43719482]
[37.41622925 591.41070557]
[38.78420639 606.34820557]
[40.15218353 621.28570557]
[41.52016068 636.22314453]
[42.88813782 651.16064453]
[44.25611496 666.09814453]
[56.56283188 676.01379395]
[58.17047501 691.73614502]
[48.12525558 703.93731689]
[32.38682938 705.37866211]
[20.29252052 695.20501709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 162]
[6 161]
[7 159]
[8 158]
[9 20]
[10 19]
[11 18]
[12 17]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[34 149]
[35 148]
[36 147]
[38 145]
[39 144]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[61 81]
[62 80]
[65 77]
[66 76]
[67 75]
[68 74]
[83 125]
[84 124]
[85 123]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
[101 107]
[102 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
