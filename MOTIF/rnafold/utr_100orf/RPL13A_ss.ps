%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUUCUGCCGCCCCUGUUUCAAGGGAUAAGAAACCCUGCGACAAAACCUCCUCCUUUUCCAAGCGGCUGCCGAAGAUGGCGGAGGUGCAGGUCCUGGUGCUUGAUGGUCGAGGCCAUCUCCUGGGCCGCCUGGCGGCCAUCGUGGCUAAACAGGUACUGCUGGGCCGGAAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[95.83686829 285.92358398]
[95.57064819 270.92596436]
[95.30442810 255.92831421]
[94.90512085 240.93362427]
[94.37275696 225.94308472]
[93.84039307 210.95252991]
[93.30803680 195.96197510]
[92.77567291 180.97143555]
[89.93032837 177.10032654]
[89.50760651 171.39355469]
[92.50000000 165.44143677]
[92.50000000 150.44143677]
[92.50000000 135.44143677]
[92.50000000 120.44142914]
[88.94614410 118.75938416]
[85.75272369 116.46563721]
[72.63127899 123.73390198]
[59.50983047 131.00216675]
[46.38838196 138.27043152]
[38.06561661 151.72561646]
[23.18315315 151.12432861]
[10.06170750 158.39257812]
[4.04769182 165.31030273]
[-3.35775042 165.67105103]
[-16.60612869 172.70529175]
[-29.85450554 179.73951721]
[-31.88973045 195.12254333]
[-42.60255814 206.34819031]
[-57.87369156 209.09994507]
[-71.83106232 202.31973267]
[-79.10778046 188.61465454]
[-76.90579987 173.25460815]
[-66.07182312 162.14584351]
[-50.77173996 159.55990601]
[-36.88874435 166.49114990]
[-23.64036560 159.45690918]
[-10.39198685 152.42266846]
[2.79344463 145.27113342]
[15.91489124 138.00286865]
[23.29912376 125.06755829]
[39.12012100 125.14897919]
[52.24156570 117.88071442]
[65.36301422 110.61245728]
[78.48445892 103.34419250]
[77.66374969 93.04228210]
[81.83569336 82.79980469]
[90.70429230 75.03794098]
[80.33560944 64.19864655]
[69.96691895 53.35935211]
[59.59822845 42.52005768]
[49.22954178 31.68076515]
[38.86085129 20.84147072]
[23.73041534 16.21757317]
[20.52386475 1.67221951]
[10.15517616 -9.16707516]
[-0.30929640 -19.91392517]
[-10.86872959 -30.56748772]
[-21.42816162 -41.22105026]
[-31.98759460 -51.87461090]
[-42.54702759 -62.52817154]
[-53.44796753 -61.94881058]
[-62.66963959 -67.36846924]
[-67.27364349 -76.77898407]
[-65.94927216 -86.94954681]
[-76.12394714 -97.97115326]
[-91.93449402 -102.32531738]
[-95.80654907 -118.26078796]
[-83.75688171 -129.38452148]
[-68.18115234 -124.25337982]
[-65.10233307 -108.14583588]
[-54.92765808 -97.12422180]
[-36.10432053 -92.78041077]
[-31.89346695 -73.08760834]
[-21.33403397 -62.43404388]
[-10.77460098 -51.78048325]
[-0.21516782 -41.12691879]
[10.34426498 -30.47335815]
[17.30794334 -27.92818832]
[20.99447060 -19.53576279]
[31.36315918 -8.69646931]
[45.75195694 -4.84786987]
[49.70014572 10.47278309]
[60.06883621 21.31207657]
[70.43752289 32.15137100]
[80.80621338 42.99066544]
[91.17489624 53.82995987]
[101.54358673 64.66925049]
[116.04956055 68.48721313]
[130.41088867 64.15682983]
[144.77221680 59.82645035]
[159.13354492 55.49607086]
[166.64747620 41.85134506]
[181.27360535 37.66430664]
[194.23545837 44.91177750]
[208.59678650 40.58139801]
[222.95811462 36.25101852]
[237.31944275 31.92063904]
[245.60534668 14.91076851]
[263.37911987 9.42156982]
[279.26019287 18.48133278]
[293.45880127 13.64398766]
[307.65740967 8.80664158]
[321.81250000 3.84348202]
[335.92300415 -1.24510109]
[350.03350830 -6.33368397]
[364.14401245 -11.42226696]
[378.25451660 -16.51085091]
[392.36502075 -21.59943390]
[406.47552490 -26.68801689]
[420.58602905 -31.77659988]
[434.69653320 -36.86518097]
[448.71450806 -42.20339966]
[462.63552856 -47.78956985]
[476.55654907 -53.37574005]
[490.47753906 -58.96191025]
[497.04138184 -75.16107178]
[512.97082520 -81.49117279]
[528.24945068 -74.49628448]
[542.06915283 -80.32864380]
[551.52862549 -93.72452545]
[567.83270264 -91.96104431]
[574.20910645 -76.85231018]
[564.09832764 -63.94090271]
[547.90148926 -66.50896454]
[534.08184814 -60.67660141]
[530.93945312 -48.16170502]
[521.00817871 -39.62169647]
[507.77603149 -38.35205841]
[496.06372070 -45.04089355]
[482.14270020 -39.45472336]
[468.22167969 -33.86855316]
[454.30065918 -28.28238297]
[451.62438965 -24.29253578]
[446.39941406 -21.95892143]
[439.78512573 -22.75467873]
[425.67462158 -17.66609573]
[411.56411743 -12.57751179]
[397.45361328 -7.48892927]
[383.34310913 -2.40034604]
[369.23260498 2.68823695]
[355.12210083 7.77681971]
[341.01159668 12.86540318]
[326.90109253 17.95398521]
[321.65914917 23.19734573]
[312.49475098 23.00523567]
[298.29614258 27.84258270]
[284.09756470 32.67992783]
[281.38809204 43.80007553]
[273.55563354 52.30973816]
[262.47000122 56.00594711]
[250.86177063 53.85584641]
[241.64982605 46.28197098]
[227.28849792 50.61235046]
[212.92716980 54.94272995]
[198.56584167 59.27310944]
[191.77095032 72.47784424]
[177.26820374 77.07404327]
[163.46392822 69.85740662]
[149.10260010 74.18778229]
[134.74127197 78.51815796]
[120.37993622 82.84854126]
[123.39314270 106.21751404]
[107.50000000 120.44142914]
[107.50000000 135.44143677]
[107.50000000 150.44143677]
[107.50000000 165.44143677]
[107.76622009 180.43907166]
[108.29858398 195.42962646]
[108.83094788 210.42016602]
[109.36330414 225.41072083]
[109.89566803 240.40127563]
[113.33663940 248.89732361]
[110.30206299 255.66209412]
[110.56828308 270.65972900]
[110.83451080 285.65737915]
[113.36679840 304.87292480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[4 171]
[5 170]
[6 169]
[7 168]
[8 167]
[11 166]
[12 165]
[13 164]
[14 163]
[16 44]
[17 43]
[18 42]
[19 41]
[21 39]
[22 38]
[24 37]
[25 36]
[26 35]
[47 87]
[48 86]
[49 85]
[50 84]
[51 83]
[52 82]
[54 80]
[55 79]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[64 71]
[65 70]
[88 161]
[89 160]
[90 159]
[91 158]
[94 155]
[95 154]
[96 153]
[97 152]
[100 147]
[101 146]
[102 145]
[103 143]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[110 136]
[111 135]
[112 132]
[113 131]
[114 130]
[115 129]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
