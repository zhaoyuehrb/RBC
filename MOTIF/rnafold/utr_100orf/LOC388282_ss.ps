%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAGGGCCCUGAAUGCCAGGACGGGAAUUUAAUCUAAUUCAACUUCAGCAAUGGGCUGAGGGACAGCUUCAUGCCAGGCAAAGGGAAAAACUCUUUACACACAGGAUUGCCUUUGCUUUCAUUCAAUCCCCGCAACAACAUGUGUGCAAACCUCCCACCUGGCAUCCUGC\
) } def
/len { sequence length } bind def

/coor [
[48.48739624 468.72509766]
[35.32017136 458.04516602]
[41.93766022 442.43603516]
[42.48232651 427.44592285]
[43.02698898 412.45581055]
[43.57165527 397.46569824]
[44.11632156 382.47561646]
[33.00981522 392.55755615]
[18.02792168 393.29434204]
[5.98575544 384.35083008]
[2.36117768 369.79534912]
[8.80297279 356.24902344]
[22.38083267 349.87393188]
[36.91832352 353.57003784]
[45.80198669 365.65438843]
[48.24261856 350.85427856]
[50.68325043 336.05416870]
[53.12388229 321.25405884]
[55.56451416 306.45394897]
[58.00514984 291.65383911]
[60.44578171 276.85372925]
[62.88641357 262.05361938]
[56.08843231 252.02085876]
[58.02526855 239.65136719]
[68.19567108 231.68086243]
[70.90464783 216.92750549]
[73.61362457 202.17416382]
[76.32260132 187.42080688]
[68.14273834 184.78285217]
[60.24975967 181.38140869]
[52.71472931 177.24713135]
[45.60551071 172.41723633]
[38.98611832 166.93521118]
[32.91616058 160.85043335]
[27.45030022 154.21768188]
[22.63775635 147.09671021]
[18.52186775 139.55162048]
[15.13969612 131.65036011]
[12.52169991 123.46408844]
[10.69145393 115.06652069]
[9.66543961 106.53327942]
[9.45289707 97.94120789]
[10.05573940 89.36766815]
[11.46853733 80.88987732]
[13.67857075 72.58417511]
[-0.19261681 66.87539673]
[-14.06380367 61.16661835]
[-27.93499184 55.45783997]
[-41.80617905 49.74905777]
[-55.67736435 44.04027939]
[-69.54855347 38.33150101]
[-84.85009766 43.15253067]
[-98.07869720 34.07598877]
[-99.08650970 18.06462097]
[-87.10042572 7.40097952]
[-71.31513977 10.26529694]
[-63.83977509 24.46031380]
[-49.96858597 30.16909218]
[-36.09740067 35.87787247]
[-22.22621155 41.58665085]
[-8.35502434 47.29543304]
[5.51616287 53.00421143]
[19.38735008 58.71298981]
[23.79357719 51.05515671]
[28.92495728 43.86307144]
[34.73266602 37.20516205]
[41.16143799 31.14478874]
[48.15009689 25.73962021]
[40.61081696 12.77199745]
[25.53227806 7.29319525]
[20.55122948 -7.95700836]
[29.48870468 -21.27996254]
[45.48863602 -22.45543671]
[56.27724838 -10.58170795]
[53.57843781 5.23271561]
[61.11771774 18.20033836]
[96.71129608 9.48922157]
[132.84321594 15.59419441]
[139.42149353 2.11361051]
[145.99978638 -11.36697292]
[152.57807922 -24.84755707]
[159.15635681 -38.32814026]
[165.73464966 -51.80872345]
[172.31292725 -65.28930664]
[178.89122009 -78.76988983]
[185.46951294 -92.25047302]
[184.56805420 -108.04598236]
[197.10317993 -116.09083557]
[203.68147278 -129.57142639]
[203.21031189 -133.96974182]
[204.09494019 -137.88528442]
[206.01132202 -140.94647217]
[208.54713440 -142.92764282]
[211.25787354 -143.76524353]
[218.79716492 -156.73286438]
[226.33644104 -169.70048523]
[233.87571716 -182.66810608]
[228.40200806 -197.31640625]
[233.67332458 -212.03874207]
[247.20074463 -219.88368225]
[262.59701538 -217.14709473]
[272.59249878 -205.12110901]
[272.46762085 -189.48402405]
[262.28134155 -177.61918640]
[246.84335327 -175.12882996]
[239.30406189 -162.16120911]
[231.76478577 -149.19358826]
[224.22549438 -136.22596741]
[217.16206360 -122.99313354]
[210.58377075 -109.51255035]
[211.95574951 -94.68126678]
[198.95008850 -85.67218781]
[192.37181091 -72.19160461]
[185.79351807 -58.71102142]
[179.21522522 -45.23043823]
[172.63694763 -31.74985313]
[166.05865479 -18.26926994]
[159.48036194 -4.78868580]
[152.90208435 8.69189835]
[146.32379150 22.17248154]
[153.74636841 27.10044861]
[160.64884949 32.73385620]
[166.96443176 39.01818466]
[172.63200378 45.89262772]
[177.59674072 53.29066086]
[181.81057739 61.14069366]
[185.23274231 69.36676788]
[187.83012390 77.88926697]
[189.57759094 86.62573242]
[190.45822144 95.49161530]
[190.46351624 104.40113068]
[189.59338379 113.26805115]
[187.85627747 122.00658417]
[185.26901245 130.53216553]
[198.92375183 136.74084473]
[212.57850647 142.94953918]
[226.28906250 149.03399658]
[240.05430603 154.99371338]
[253.81953430 160.95343018]
[270.75714111 161.69793701]
[274.73052979 178.17970276]
[259.99282837 186.56040955]
[247.85981750 174.71867371]
[234.09457397 168.75895691]
[220.32934570 162.79924011]
[212.91526794 163.02804565]
[206.36981201 156.60429382]
[192.71505737 150.39559937]
[179.06031799 144.18690491]
[169.09927368 158.55174255]
[156.56422424 170.73545837]
[141.92208862 180.28421021]
[125.71830750 186.84230042]
[108.55650330 190.16542053]
[91.07595825 190.12979126]
[88.36697388 204.88313293]
[85.65799713 219.63648987]
[82.94902039 234.38984680]
[89.53398895 251.56864929]
[77.68652344 264.49423218]
[75.24589539 279.29434204]
[72.80525970 294.09445190]
[70.36462402 308.89456177]
[67.92399597 323.69467163]
[65.48336029 338.49481201]
[63.04272842 353.29492188]
[60.60209656 368.09503174]
[59.10643005 383.02026367]
[58.56176376 398.01037598]
[58.01709747 413.00048828]
[57.47243500 427.99060059]
[56.92776871 442.98071289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[5 170]
[6 169]
[7 168]
[15 167]
[16 166]
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[25 158]
[26 157]
[27 156]
[28 155]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[68 76]
[69 75]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[88 110]
[89 109]
[94 108]
[95 107]
[96 106]
[97 105]
[134 149]
[135 148]
[136 147]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
