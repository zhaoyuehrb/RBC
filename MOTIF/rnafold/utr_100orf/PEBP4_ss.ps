%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAAAGUACUUGUGUCCGGGUGGUGGACUGGAUUAGCUGCGGAGCCCUGGAAGCUGCCUGUCCUUCUCCCUGUGCUUAACCAGAGGUGCCCAUGGGUUGGACAAUGAGGCUGGUCACAGCAGCACUGUUACUGGGUCUCAUGAUGGUGGUCACUGGAGACGAGGAUGAGAACAGCCCGUGUGCCCAUGAGG\
) } def
/len { sequence length } bind def

/coor [
[-164.54576111 207.48011780]
[-174.32084656 206.97135925]
[-183.46116638 203.55259705]
[-191.12419128 197.55796814]
[-196.60928345 189.55813599]
[-211.24856567 192.82791138]
[-225.88784790 196.09767151]
[-240.52713013 199.36743164]
[-255.16641235 202.63720703]
[-269.80569458 205.90696716]
[-271.58575439 212.00885010]
[-274.98287964 217.33326721]
[-279.70565796 221.46560669]
[-285.36068726 224.09169006]
[-291.48516846 225.02156067]
[-297.58474731 224.20303345]
[-303.17352295 221.72416687]
[-307.81268311 217.80433655]
[-311.14498901 212.77505493]
[-326.06112671 214.35917664]
[-340.97723389 215.94328308]
[-353.88311768 225.09472656]
[-367.35632324 218.74478149]
[-382.27246094 220.32890320]
[-395.17834473 229.48033142]
[-408.65155029 223.13040161]
[-423.56765747 224.71452332]
[-438.48379517 226.29862976]
[-453.39990234 227.88275146]
[-466.30578613 237.03417969]
[-479.77899170 230.68424988]
[-494.69512939 232.26835632]
[-500.27609253 235.85845947]
[-505.97500610 236.05068970]
[-510.12139893 233.65313721]
[-525.08117676 234.75090027]
[-540.04095459 235.84866333]
[-555.00073242 236.94642639]
[-569.96051025 238.04417419]
[-584.93731689 248.74552917]
[-600.42895508 240.51448059]
[-615.36883545 241.85559082]
[-630.30877686 243.19671631]
[-643.40222168 253.07061768]
[-658.39227295 246.42007446]
[-659.85852051 230.08660889]
[-646.29254150 220.87268066]
[-631.64990234 228.25679016]
[-616.70996094 226.91566467]
[-601.77001953 225.57455444]
[-593.76916504 216.48925781]
[-581.32287598 215.25775146]
[-571.05828857 223.08439636]
[-556.09851074 221.98664856]
[-541.13873291 220.88888550]
[-526.17895508 219.79112244]
[-511.21917725 218.69335938]
[-496.27923584 217.35224915]
[-481.36312866 215.76812744]
[-469.52413940 206.72999573]
[-454.98400879 212.96662903]
[-440.06790161 211.38250732]
[-425.15179443 209.79840088]
[-410.23565674 208.21427917]
[-398.39669800 199.17614746]
[-383.85656738 205.41278076]
[-368.94046021 203.82867432]
[-357.10147095 194.79054260]
[-342.56134033 201.02716064]
[-327.64523315 199.44305420]
[-312.72912598 197.85893250]
[-295.48803711 181.58477783]
[-273.07546997 191.26768494]
[-258.43618774 187.99792480]
[-243.79689026 184.72814941]
[-229.15760803 181.45838928]
[-214.51832581 178.18862915]
[-199.87904358 174.91885376]
[-193.26327515 155.73301697]
[-176.29699707 144.34593201]
[-155.75769043 145.50814819]
[-139.97259521 158.91624451]
[-125.64760590 154.46714783]
[-119.73341370 143.90405273]
[-107.82341766 140.08587646]
[-96.14390564 145.58203125]
[-81.74838257 141.36668396]
[-76.20417786 136.46232605]
[-67.08416748 137.20195007]
[-52.62194061 133.22148132]
[-42.40416718 122.38421631]
[-27.04555321 126.18204498]
[-12.58332920 122.20157623]
[1.87889397 118.22111511]
[16.34111786 114.24065399]
[30.80334091 110.26018524]
[45.26556396 106.27972412]
[59.72778702 102.29925537]
[74.19001007 98.31879425]
[88.65223694 94.33832550]
[100.94340515 85.74023438]
[109.64124298 73.51945496]
[118.33908081 61.29866791]
[127.03692627 49.07788467]
[128.73530579 33.34810257]
[142.41902161 27.46547127]
[151.11686707 15.24468613]
[148.69647217 -0.14295386]
[157.69140625 -12.41266346]
[172.37608337 -14.62530708]
[181.07392883 -26.84609222]
[189.77175903 -39.06687546]
[198.46960449 -51.28766251]
[199.48492432 -67.65534973]
[214.28593445 -74.71665192]
[227.64663696 -65.20750427]
[225.82267761 -48.91010666]
[210.69038391 -42.58982086]
[201.99255371 -30.36903572]
[193.29470825 -18.14825249]
[184.59686279 -5.92746687]
[187.31600952 8.67191219]
[178.66925049 21.18943024]
[163.33764648 23.94252586]
[154.63980103 36.16331100]
[153.56355286 51.01898193]
[139.25770569 57.77572250]
[130.55986023 69.99650574]
[121.86203003 82.21729279]
[113.16418457 94.43807983]
[116.18866730 101.30120850]
[125.26210785 121.89058685]
[140.15046692 123.71728516]
[152.52746582 114.25960541]
[167.60035706 116.32421875]
[176.54052734 128.18208313]
[191.42887878 130.00877380]
[206.31724548 131.83546448]
[221.20559692 133.66215515]
[236.09396362 135.48886108]
[254.25917053 126.77174377]
[269.20001221 139.03221130]
[284.13992310 140.37333679]
[299.07986450 141.71444702]
[314.01980591 143.05555725]
[328.66244507 135.67144775]
[342.22839355 144.88539124]
[340.76217651 161.21885681]
[325.77212524 167.86938477]
[312.67868042 157.99548340]
[297.73873901 156.65437317]
[282.79882812 155.31326294]
[267.85888672 153.97213745]
[260.62249756 161.21275330]
[250.37864685 163.31106567]
[240.47018433 159.33535767]
[234.26725769 150.37721252]
[219.37890625 148.55052185]
[204.49055481 146.72383118]
[189.60218811 144.89712524]
[174.71383667 143.07043457]
[163.17222595 152.41532898]
[148.04730225 150.77488708]
[138.32377625 138.60563660]
[123.43540955 136.77894592]
[118.54470062 150.95924377]
[106.82541656 160.32185364]
[91.91520691 161.96063232]
[78.44216919 155.36689758]
[70.58832550 142.58734131]
[70.79148102 127.58870697]
[78.98858643 115.02656555]
[92.63269806 108.80055237]
[78.17047119 112.78101349]
[63.70825195 116.76148224]
[49.24602890 120.74194336]
[34.78380585 124.72241211]
[20.32158089 128.70288086]
[5.85935879 132.68333435]
[-8.60286427 136.66380310]
[-23.06508827 140.64427185]
[-34.31729507 151.76625061]
[-48.64147568 147.68370056]
[-63.10369873 151.66416931]
[-77.53305054 155.76220703]
[-91.92856598 159.97753906]
[-104.32364655 173.58583069]
[-121.19850922 168.79214478]
[-135.52351379 173.24124146]
[-136.44810486 183.13420105]
[-140.29777527 192.26213074]
[-146.69862366 199.78434753]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 78]
[6 77]
[7 76]
[8 75]
[9 74]
[10 73]
[19 71]
[20 70]
[21 69]
[23 67]
[24 66]
[26 64]
[27 63]
[28 62]
[29 61]
[31 59]
[32 58]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[41 50]
[42 49]
[43 48]
[82 189]
[83 188]
[86 186]
[87 185]
[89 184]
[90 183]
[92 181]
[93 180]
[94 179]
[95 178]
[96 177]
[97 176]
[98 175]
[99 174]
[100 173]
[101 130]
[102 129]
[103 128]
[104 127]
[106 125]
[107 124]
[110 121]
[111 120]
[112 119]
[113 118]
[132 165]
[133 164]
[136 161]
[137 160]
[138 159]
[139 158]
[140 157]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
