%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCAAACCGACCACCACCUGGUAGCAUCUUGGGGUUUCCUGGGCGUGGCCUGUAAAUUUGUAUCAUCACAAGGGGCCAGUGACCAGUAACCAGUGACCAGUGGCCUUCAUACUGGACACAUGCACUGGUUGGCUUCAGCCACCCAGACAUCCGCUAGUAUCGUCUCUUCUUCCCUUCUAUCUGCAGUUGAUGUUUCUUCUUCUCUGACCAUGUCAGAAU\
) } def
/len { sequence length } bind def

/coor [
[71.07859039 166.13201904]
[72.98404694 151.25402832]
[74.88931274 136.37553406]
[67.45005798 135.42289734]
[59.76698303 148.30584717]
[52.08390808 161.18879700]
[44.40083694 174.07174683]
[53.32943726 189.21617126]
[53.35283661 206.70751953]
[44.55490494 221.72198486]
[29.43981171 230.16459656]
[12.21998596 229.78594971]
[4.90456200 242.88116455]
[-2.41086245 255.97637939]
[-9.72628689 269.07159424]
[-6.75623035 284.83731079]
[-17.33929253 296.89462280]
[-33.35705566 295.99414062]
[-42.52206039 282.82666016]
[-37.80369949 267.49316406]
[-22.82149887 261.75616455]
[-15.50607395 248.66094971]
[-8.19064999 235.56573486]
[-0.87522578 222.47052002]
[-8.47216415 212.38673401]
[-11.70564938 200.13430786]
[-10.06172466 187.52236938]
[-3.74933219 176.42701721]
[6.32550859 168.51213074]
[18.68958855 164.97999573]
[31.51788712 166.38867188]
[39.20096207 153.50572205]
[46.88403320 140.62277222]
[54.56710815 127.73982239]
[48.77786636 113.90202332]
[34.20983887 110.32814789]
[19.64181137 106.75426483]
[5.07378578 103.18038940]
[-6.33605146 109.18392181]
[-18.39239120 105.91291809]
[-24.77915001 95.64580536]
[-39.29514313 91.86613464]
[-53.81113815 88.08646393]
[-68.32713318 84.30679321]
[-81.25313568 95.22211456]
[-97.97237396 96.26872253]
[-111.87986755 87.23172760]
[-117.59968567 71.84075165]
[-132.16770935 68.26687622]
[-146.73573303 64.69299316]
[-161.30375671 61.11911392]
[-175.87178040 57.54523849]
[-190.43981934 53.97135925]
[-184.97334290 67.93981171]
[-192.35975647 80.99511719]
[-207.14851379 83.50360870]
[-218.42683411 73.61423492]
[-217.87229919 58.62448883]
[-205.89329529 49.59531403]
[-220.17221069 45.00045395]
[-234.45111084 40.40559387]
[-248.73002625 35.81073380]
[-263.00894165 31.21587372]
[-276.95410156 38.65278244]
[-292.04898071 33.97087860]
[-299.33804321 19.94785500]
[-294.49679565 4.90332031]
[-280.39749146 -2.23706841]
[-265.40499878 2.76295424]
[-258.41406250 16.93696404]
[-244.13516235 21.53182411]
[-229.85624695 26.12668419]
[-215.57734680 30.72154427]
[-201.29843140 35.31640625]
[-186.86593628 39.40333176]
[-172.29791260 42.97721100]
[-157.72988892 46.55109024]
[-143.16184998 50.12496948]
[-128.59382629 53.69884872]
[-114.02580261 57.27272415]
[-104.67864227 47.74625397]
[-91.74158478 44.05082703]
[-78.56253052 47.25392532]
[-68.60712433 56.62325287]
[-64.54746246 69.79080200]
[-50.03146744 73.57047272]
[-35.51547241 77.35014343]
[-20.99947739 81.12981415]
[-4.35235691 75.56560516]
[8.64766502 88.61235809]
[23.21569061 92.18624115]
[37.78371811 95.76011658]
[52.35174179 99.33399963]
[59.59941864 78.97682190]
[74.58175659 64.78101349]
[73.30966949 49.83504868]
[72.03758240 34.88908386]
[63.15781784 21.79479790]
[69.78789520 8.45720673]
[68.51580811 -6.48875570]
[67.24372101 -21.43471718]
[65.97162628 -36.38068008]
[64.69953918 -51.32664108]
[63.42745209 -66.27260590]
[50.53581238 -75.12357330]
[46.39936829 -90.20415497]
[52.97122192 -104.39375305]
[67.14834595 -110.99247742]
[82.23673248 -106.88461304]
[91.11211395 -94.00976562]
[89.58380127 -78.44704437]
[78.37341309 -67.54469299]
[79.64550018 -52.59873199]
[80.91759491 -37.65277100]
[82.18968201 -22.70680618]
[83.46176910 -7.76084423]
[84.73385620 7.18511772]
[93.52263641 19.21037102]
[86.98354340 33.61699677]
[88.25563049 48.56295776]
[89.52771759 63.50892258]
[96.61680603 65.95737457]
[96.89292908 50.95991516]
[111.24173737 46.58823013]
[119.83332825 58.88394547]
[110.79496765 70.85427094]
[117.88404846 73.30271912]
[128.10885620 62.32759094]
[138.33364868 51.35246277]
[148.55845642 40.37733078]
[152.30418396 25.00592995]
[166.64097595 20.96785545]
[176.86576843 9.99272633]
[187.09056091 -0.98240358]
[197.31536865 -11.95753384]
[200.46755981 -28.05087852]
[216.06651306 -33.11098862]
[228.06535339 -21.93245506]
[224.12072754 -6.01479578]
[208.29049683 -1.73273396]
[198.06570435 9.24239635]
[187.84089661 20.21752548]
[177.61610413 31.19265556]
[174.60169983 45.77904129]
[159.53358459 50.60213089]
[149.30877686 61.57726288]
[139.08398438 72.55239105]
[128.85917664 83.52751923]
[133.75608826 97.70568848]
[148.57470703 100.03123474]
[163.39334106 102.35678864]
[178.21197510 104.68233490]
[193.03060913 107.00788116]
[207.86347961 101.50366974]
[219.23730469 111.12060547]
[234.05592346 113.44615936]
[248.87455750 115.77170563]
[257.82934570 114.01136017]
[263.88583374 118.23644257]
[278.67007446 120.77145386]
[293.45431519 123.30646515]
[299.75668335 109.59725952]
[309.39328003 97.98698425]
[321.70703125 89.26724243]
[335.85839844 84.03256989]
[350.88247681 82.63986206]
[365.75491333 85.18408966]
[379.46166992 91.49177551]
[391.06823730 101.13284302]
[399.78320312 113.44996643]
[405.01242065 127.60333252]
[406.39932251 142.62794495]
[403.84936523 157.49938965]
[397.53637695 171.20373535]
[387.89083862 182.80656433]
[375.57034302 191.51678467]
[361.41494751 196.74053955]
[346.38980103 198.12162781]
[331.51934814 195.56593323]
[317.81744385 189.24766541]
[306.21835327 179.59762573]
[297.51287842 167.27377319]
[292.29458618 153.11637878]
[290.91928101 138.09069824]
[276.13504028 135.55569458]
[261.35083008 133.02067566]
[246.54901123 130.59033203]
[231.73037720 128.26478577]
[216.91174316 125.93923950]
[203.13880920 131.60978699]
[190.70506287 121.82651520]
[175.88642883 119.50096130]
[161.06779480 117.17541504]
[146.24916077 114.84986877]
[131.43052673 112.52431488]
[126.47547150 118.15435791]
[138.36511230 127.29965210]
[150.25476074 136.44494629]
[163.26000977 143.91912842]
[161.29455566 158.78981018]
[146.79408264 162.62858582]
[137.72817993 150.67790222]
[127.14676666 140.04617310]
[116.56535339 129.41444397]
[111.61029053 135.04447937]
[115.79923248 149.44770813]
[119.98817444 163.85092163]
[124.17712402 178.25415039]
[128.36605835 192.65736389]
[132.55500793 207.06059265]
[142.78407288 220.58103943]
[132.62368774 234.15318298]
[116.76928711 228.14701843]
[118.15178680 211.24952698]
[113.96284485 196.84631348]
[109.77390289 182.44308472]
[105.58495331 168.03987122]
[101.39601135 153.63665771]
[97.20706940 139.23342896]
[89.76781464 138.28079224]
[87.86254883 153.15930176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 34]
[5 33]
[6 32]
[7 31]
[12 24]
[13 23]
[14 22]
[15 21]
[35 93]
[36 92]
[37 91]
[38 90]
[41 88]
[42 87]
[43 86]
[44 85]
[48 80]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[95 121]
[96 120]
[97 119]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
[127 148]
[128 147]
[129 146]
[130 145]
[132 143]
[133 142]
[134 141]
[135 140]
[149 195]
[150 194]
[151 193]
[152 192]
[153 191]
[155 189]
[156 188]
[157 187]
[159 186]
[160 185]
[161 184]
[205 219]
[206 218]
[207 217]
[208 216]
[209 215]
[210 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
