%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAACACGGCUUCUCCUGGUACGGGCUGGUUACGCCCUCCAGCUGCGCCCCCUACACGACGACAGACGCGUCCCCCAGCCCUUCUCCUGUCCUACCACUUGUGGCGGCCAUGAAGGGGACCCCCAGCUCCCUGGACACCCUGAUGUGGAUCUACCACUUCCACAGCUCCACCGAGGUGGCCCUCCAGCCCCCGCUUCUGUCUUCCCUGG\
) } def
/len { sequence length } bind def

/coor [
[-33.39588547 311.25967407]
[-42.14400482 319.16531372]
[-52.27420425 325.18701172]
[-63.38721848 329.09024048]
[-75.04560852 330.72402954]
[-86.79097748 330.02658081]
[-98.16201782 327.02780151]
[-108.71258545 321.84786987]
[-118.02925873 314.69250488]
[-129.57556152 324.26763916]
[-141.12185669 333.84277344]
[-138.06027222 347.49154663]
[-141.16322327 361.06314087]
[-149.76960754 371.92169189]
[-162.15519714 377.98358154]
[-175.87783813 378.11700439]
[-188.25897217 372.35290527]
[-199.94654846 381.75506592]
[-211.63412476 391.15722656]
[-223.32171631 400.55935669]
[-223.86662292 411.42269897]
[-230.17042542 420.01583862]
[-239.95719910 423.64453125]
[-249.91149902 421.33694458]
[-261.87384033 430.38693237]
[-273.83618164 439.43695068]
[-285.79849243 448.48693848]
[-286.40646362 464.11270142]
[-296.95443726 475.65713501]
[-312.46200562 477.66934204]
[-325.60699463 469.19918823]
[-330.18270874 454.24603271]
[-324.02865601 439.87030029]
[-310.05056763 432.85977173]
[-294.84851074 436.52459717]
[-282.88616943 427.47460938]
[-270.92382812 418.42462158]
[-258.96148682 409.37460327]
[-252.76330566 391.05877686]
[-232.72386169 388.87179565]
[-221.03628540 379.46963501]
[-209.34869385 370.06747437]
[-197.66111755 360.66534424]
[-200.52703857 344.76254272]
[-194.94992065 329.49652100]
[-182.36302185 319.06640625]
[-166.14134216 316.39193726]
[-150.69697571 322.29644775]
[-139.15068054 312.72134399]
[-127.60437775 303.14620972]
[-134.97006226 286.32461548]
[-136.83555603 268.03970337]
[-133.01191711 250.04537964]
[-123.85635376 234.07069397]
[-110.23892975 221.65374756]
[-93.45986176 213.99360657]
[-75.12536621 211.83451843]
[-56.99391174 215.39360046]
[-40.80757523 224.33903503]
[-30.16156387 213.77198792]
[-26.57928276 199.31457520]
[-11.33413792 195.08419800]
[-0.68812913 184.51715088]
[9.95788002 173.95010376]
[20.60388756 163.38305664]
[31.24989700 152.81600952]
[41.89590454 142.24896240]
[45.47818756 127.79155731]
[60.72333145 123.56117249]
[71.36933899 112.99412537]
[82.01535034 102.42707825]
[69.50725555 110.70642853]
[54.51897049 111.29913330]
[41.39614868 104.03335571]
[33.94357681 91.01570892]
[34.32203293 76.02048492]
[42.42178345 63.39534760]
[55.89441681 56.80079269]
[70.83372498 58.14882660]
[82.90824127 67.04859924]
[88.61684418 80.91730499]
[85.73157501 66.19741821]
[82.84630585 51.47752380]
[79.96102905 36.75763321]
[77.07575989 22.03774071]
[64.17700958 17.17840576]
[55.43307495 6.66355610]
[53.04563141 -6.69195604]
[57.53300476 -19.38083458]
[67.62225342 -28.12435913]
[64.95645142 -42.88557816]
[62.29065704 -57.64679337]
[59.51504898 -72.38775635]
[56.62977600 -87.10765076]
[53.74450302 -101.82753754]
[50.85923004 -116.54743195]
[38.40060806 -126.65496826]
[38.67925644 -142.69560242]
[51.48141479 -152.36433411]
[66.98636627 -148.24412537]
[73.30004120 -133.49566650]
[65.57912445 -119.43270111]
[68.46439362 -104.71281433]
[71.34966278 -89.99291992]
[74.23493958 -75.27303314]
[78.60633850 -69.31378174]
[77.05187225 -60.31258774]
[79.71767426 -45.55137253]
[82.38346863 -30.79015541]
[97.38845062 -24.13223076]
[105.55001831 -9.69787788]
[103.47924805 6.92178488]
[91.79564667 19.15246964]
[94.68092346 33.87236023]
[97.56619263 48.59225082]
[100.45146942 63.31214142]
[103.33673859 78.03203583]
[115.75423431 86.44665527]
[130.49519348 83.67104340]
[145.23616028 80.89543152]
[151.94694519 67.02922821]
[165.37881470 59.85717773]
[180.28202820 61.94483948]
[190.97027588 72.28404236]
[205.71124268 69.50843048]
[220.45220947 66.73282623]
[232.58235168 56.57554626]
[246.52154541 61.82416534]
[261.26251221 59.04855347]
[276.00347900 56.27294159]
[284.92840576 43.50644684]
[299.91735840 40.90157318]
[312.03326416 49.48880768]
[326.77423096 46.71319580]
[341.51519775 43.93758392]
[356.25616455 41.16197205]
[359.43341064 26.32348633]
[368.02651978 13.86548805]
[380.70034790 5.66869736]
[395.50674438 2.95602894]
[410.18380737 6.11021948]
[422.50152588 14.62017441]
[430.60055542 27.16349030]
[445.34152222 24.38787842]
[457.47164917 14.23060036]
[471.41085815 19.47922134]
[486.15182495 16.70360947]
[500.89279175 13.92799854]
[515.63372803 11.15238762]
[525.83374023 -1.23064220]
[541.87188721 -0.83259016]
[551.44500732 12.04119205]
[547.20953369 27.51504135]
[532.41442871 33.71874237]
[518.40936279 25.89335060]
[503.66839600 28.66896248]
[488.92742920 31.44457245]
[474.18646240 34.22018433]
[463.11071777 44.17893219]
[448.11712646 39.12884140]
[433.37615967 41.90445328]
[430.39364624 56.53434372]
[422.01443481 68.94136810]
[409.48959351 77.21746826]
[394.71060181 80.07550049]
[379.92355347 77.04938507]
[367.38806152 68.56974030]
[359.03176880 55.90293503]
[344.29080200 58.67854691]
[329.54983521 61.45415878]
[314.80886841 64.22976685]
[306.64578247 76.63538361]
[291.73587036 79.66024017]
[278.77908325 71.01390839]
[264.03811646 73.78952026]
[249.29714966 76.56512451]
[238.22138977 86.52387238]
[223.22781372 81.47378540]
[208.48684692 84.24939728]
[193.74589539 87.02500916]
[187.54983521 100.54339600]
[174.42646790 107.90824890]
[159.30599976 106.11238861]
[148.01176453 95.63639069]
[133.27081299 98.41200256]
[118.52984619 101.18761444]
[116.94890594 106.24430847]
[114.06190491 110.51290894]
[110.18115997 113.67898560]
[105.68709564 115.53868103]
[100.99183655 116.01073456]
[96.50176239 115.13716888]
[92.58239746 113.07308960]
[81.93638611 123.64013672]
[71.29038239 134.20718384]
[66.94662476 149.42041016]
[52.46295547 152.89497375]
[41.81694412 163.46202087]
[31.17093658 174.02906799]
[20.52492714 184.59611511]
[9.87891865 195.16316223]
[-0.76709014 205.73020935]
[-5.11084557 220.94343567]
[-19.59451675 224.41798401]
[-30.24052620 234.98503113]
[-24.01590347 245.05062866]
[-19.90106201 256.14038086]
[-18.05536270 267.81768799]
[-18.54888344 279.62344360]
[-21.35977364 291.09384155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 50]
[10 49]
[11 48]
[17 43]
[18 42]
[19 41]
[20 40]
[24 38]
[25 37]
[26 36]
[27 35]
[59 205]
[60 204]
[62 202]
[63 201]
[64 200]
[65 199]
[66 198]
[67 197]
[69 195]
[70 194]
[71 193]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[90 109]
[91 108]
[92 107]
[93 105]
[94 104]
[95 103]
[96 102]
[118 186]
[119 185]
[120 184]
[124 180]
[125 179]
[126 178]
[128 176]
[129 175]
[130 174]
[133 171]
[134 170]
[135 169]
[136 168]
[143 161]
[144 160]
[146 158]
[147 157]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
