%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HHLA1)
} def

/sequence { (\
AUGCUGGGCUUCCUGUCACGUGGUCCUUCAAUGAAGCUGUGCAUGGGCCUGGCAUGUGUCUUGUCCCUUUGGAACACAGUGUCUGGCAUCAAAGGAGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 44 0.084767456 ubox
1 55 0.911565484 ubox
1 57 0.023268815 ubox
1 59 0.007218913 ubox
1 89 0.013259473 ubox
2 30 0.003430532 ubox
2 43 0.100883110 ubox
2 54 0.974295311 ubox
2 56 0.015235427 ubox
2 58 0.005205562 ubox
2 88 0.016029045 ubox
3 29 0.003818602 ubox
3 42 0.105576588 ubox
3 53 0.994136248 ubox
3 64 0.005639473 ubox
3 87 0.016826695 ubox
4 41 0.105490846 ubox
4 52 0.994174170 ubox
4 63 0.006495519 ubox
4 86 0.016827872 ubox
5 39 0.004482388 ubox
5 51 0.990262304 ubox
5 85 0.016690768 ubox
6 26 0.004881015 ubox
6 38 0.004653225 ubox
6 49 0.006420271 ubox
6 50 0.990254088 ubox
6 61 0.006897568 ubox
6 84 0.015991641 ubox
7 17 0.004910173 ubox
7 25 0.004901084 ubox
7 37 0.003329929 ubox
7 38 0.104247931 ubox
7 48 0.006244636 ubox
7 49 0.994162808 ubox
7 60 0.007360300 ubox
7 83 0.015976831 ubox
8 16 0.004981740 ubox
8 24 0.004899032 ubox
8 37 0.105556306 ubox
8 48 0.994147070 ubox
8 59 0.007370188 ubox
8 82 0.015936444 ubox
9 15 0.005033977 ubox
9 23 0.004879362 ubox
9 36 0.105610386 ubox
9 46 0.017296710 ubox
9 47 0.984526305 ubox
9 58 0.007373855 ubox
9 81 0.015914282 ubox
10 22 0.004790291 ubox
10 35 0.105521966 ubox
10 45 0.023291652 ubox
10 46 0.732381143 ubox
10 47 0.055188526 ubox
10 97 0.004352978 ubox
11 34 0.104916753 ubox
11 45 0.530245757 ubox
11 46 0.401999132 ubox
11 47 0.071441527 ubox
11 96 0.005274662 ubox
12 23 0.022601793 ubox
12 33 0.103409195 ubox
12 45 0.567717383 ubox
12 46 0.506068271 ubox
12 47 0.091135335 ubox
12 95 0.005482633 ubox
13 22 0.024893370 ubox
13 23 0.012701328 ubox
13 36 0.003974713 ubox
13 45 0.523880842 ubox
13 46 0.134402366 ubox
13 79 0.005404861 ubox
13 94 0.005484190 ubox
14 20 0.005432924 ubox
14 22 0.012494103 ubox
14 30 0.064533595 ubox
14 35 0.004008802 ubox
14 43 0.936548577 ubox
14 45 0.140702683 ubox
14 54 0.014426034 ubox
14 78 0.005113627 ubox
14 93 0.005136510 ubox
15 19 0.006189827 ubox
15 21 0.008245993 ubox
15 29 0.066431535 ubox
15 32 0.023483980 ubox
15 37 0.008590155 ubox
15 42 0.956306370 ubox
15 44 0.179711009 ubox
15 53 0.015800095 ubox
15 77 0.004973702 ubox
16 23 0.014710006 ubox
16 31 0.025057942 ubox
16 34 0.014624679 ubox
16 36 0.008453107 ubox
16 41 0.216319702 ubox
16 43 0.182050151 ubox
16 46 0.019803081 ubox
16 52 0.015795182 ubox
16 76 0.004256871 ubox
17 22 0.015502444 ubox
17 33 0.016963213 ubox
17 39 0.094102911 ubox
17 41 0.966020523 ubox
17 45 0.038099305 ubox
17 46 0.010689843 ubox
17 51 0.015763867 ubox
17 58 0.004133073 ubox
18 24 0.023349566 ubox
18 32 0.017327926 ubox
18 38 0.092466650 ubox
18 40 0.983273571 ubox
18 44 0.038503315 ubox
18 50 0.015516717 ubox
18 57 0.004172638 ubox
19 23 0.023794277 ubox
19 33 0.038400447 ubox
19 39 0.980621113 ubox
19 41 0.030995749 ubox
19 45 0.053228021 ubox
19 56 0.004176545 ubox
20 32 0.046152346 ubox
20 37 0.387019127 ubox
20 38 0.684310189 ubox
20 40 0.039218585 ubox
20 42 0.042856786 ubox
20 44 0.056387025 ubox
20 55 0.004120065 ubox
21 30 0.174691291 ubox
21 31 0.038221325 ubox
21 33 0.009345363 ubox
21 36 0.364729527 ubox
21 39 0.060809330 ubox
21 41 0.042695500 ubox
21 43 0.056499330 ubox
21 54 0.004088235 ubox
22 28 0.005896963 ubox
22 29 0.183114542 ubox
22 32 0.012982885 ubox
22 38 0.491852222 ubox
22 40 0.040663223 ubox
22 42 0.056321910 ubox
22 49 0.016824991 ubox
23 27 0.004846771 ubox
23 28 0.162385051 ubox
23 32 0.074034192 ubox
23 37 0.592697516 ubox
23 40 0.005724704 ubox
23 42 0.004685529 ubox
23 48 0.016949719 ubox
24 31 0.074049993 ubox
24 34 0.496403560 ubox
24 36 0.371159538 ubox
24 39 0.008688338 ubox
24 41 0.005966043 ubox
24 47 0.016877448 ubox
24 96 0.004036689 ubox
25 33 0.501745545 ubox
25 46 0.017089364 ubox
25 95 0.004350426 ubox
26 36 0.701438386 ubox
26 45 0.017068257 ubox
26 94 0.004351677 ubox
27 34 0.059037927 ubox
27 35 0.762497567 ubox
27 36 0.008192831 ubox
27 93 0.004327458 ubox
28 33 0.055218220 ubox
28 34 0.775863234 ubox
28 35 0.019060444 ubox
28 92 0.004155992 ubox
29 33 0.769772719 ubox
29 39 0.004788500 ubox
29 41 0.003882726 ubox
29 45 0.003223015 ubox
30 38 0.004841091 ubox
30 40 0.003443300 ubox
31 40 0.010743619 ubox
31 44 0.010708266 ubox
31 89 0.003166763 ubox
32 39 0.010686284 ubox
32 43 0.011214153 ubox
32 88 0.003186979 ubox
33 38 0.007195816 ubox
33 42 0.011263291 ubox
36 42 0.009486152 ubox
36 80 0.005266323 ubox
37 41 0.009487943 ubox
37 79 0.006145111 ubox
38 78 0.006155772 ubox
39 77 0.006159561 ubox
40 76 0.006153774 ubox
41 75 0.006140302 ubox
42 71 0.005769574 ubox
43 70 0.005710926 ubox
44 91 0.051363931 ubox
45 66 0.006151610 ubox
45 67 0.004150469 ubox
45 90 0.080374037 ubox
46 65 0.007500210 ubox
46 66 0.004136043 ubox
46 89 0.072662898 ubox
46 90 0.006332471 ubox
47 64 0.007554443 ubox
47 65 0.004115134 ubox
47 87 0.105637080 ubox
48 63 0.008486620 ubox
48 86 0.105772579 ubox
49 85 0.105486820 ubox
51 60 0.009068959 ubox
51 83 0.104569175 ubox
51 84 0.003324909 ubox
52 59 0.009095755 ubox
52 82 0.105768401 ubox
52 83 0.003517205 ubox
53 58 0.009134891 ubox
53 79 0.003231852 ubox
53 81 0.105861594 ubox
54 62 0.003623837 ubox
54 64 0.003561714 ubox
54 80 0.101977737 ubox
55 63 0.005407773 ubox
55 78 0.087919495 ubox
55 79 0.060523856 ubox
56 62 0.014215109 ubox
56 77 0.107816457 ubox
56 89 0.005966256 ubox
57 63 0.007408936 ubox
57 76 0.108120958 ubox
57 78 0.011888739 ubox
57 88 0.006776107 ubox
58 62 0.006139627 ubox
58 75 0.108136023 ubox
58 77 0.013105673 ubox
58 87 0.006915260 ubox
59 63 0.004380595 ubox
59 73 0.037828466 ubox
59 74 0.100617316 ubox
59 76 0.011995725 ubox
59 86 0.006842940 ubox
59 96 0.003451327 ubox
59 98 0.121172145 ubox
60 71 0.004369952 ubox
60 72 0.053515889 ubox
60 85 0.006528748 ubox
60 95 0.003274701 ubox
60 97 0.129506433 ubox
60 100 0.827781318 ubox
61 71 0.052464710 ubox
61 72 0.015929827 ubox
61 73 0.007538950 ubox
61 74 0.003748631 ubox
61 79 0.003522078 ubox
61 96 0.126888288 ubox
61 97 0.008861723 ubox
61 98 0.029585909 ubox
61 99 0.852467852 ubox
61 100 0.043204870 ubox
62 71 0.017547607 ubox
62 72 0.006982661 ubox
62 73 0.003300128 ubox
62 76 0.008049628 ubox
62 78 0.003651650 ubox
62 95 0.024677945 ubox
62 96 0.012358260 ubox
62 97 0.030353788 ubox
62 98 0.842079628 ubox
62 99 0.067651448 ubox
63 70 0.015980886 ubox
63 75 0.010418865 ubox
63 77 0.003682036 ubox
64 73 0.092110701 ubox
64 74 0.008114437 ubox
64 96 0.846987553 ubox
64 98 0.406185255 ubox
65 72 0.092834728 ubox
65 95 0.695566817 ubox
65 97 0.435010845 ubox
66 71 0.092387960 ubox
66 72 0.006956531 ubox
66 94 0.496809091 ubox
66 95 0.709178467 ubox
67 71 0.007420326 ubox
67 94 0.860709108 ubox
67 95 0.010322356 ubox
68 92 0.030449056 ubox
68 93 0.988211528 ubox
68 94 0.010440899 ubox
69 79 0.004303722 ubox
69 86 0.005994042 ubox
69 91 0.024645311 ubox
69 92 0.990598894 ubox
69 93 0.023514834 ubox
70 78 0.007025037 ubox
70 85 0.008953380 ubox
70 88 0.007811893 ubox
70 91 0.989914400 ubox
70 92 0.022328656 ubox
70 93 0.003252822 ubox
71 77 0.007677720 ubox
71 84 0.015494463 ubox
71 87 0.008161290 ubox
71 90 0.978595449 ubox
72 83 0.029961698 ubox
72 89 0.890616936 ubox
72 90 0.168104206 ubox
73 82 0.024914264 ubox
73 89 0.221027735 ubox
74 80 0.011400988 ubox
74 82 0.035730779 ubox
75 79 0.011522716 ubox
75 81 0.040252119 ubox
75 85 0.168389863 ubox
76 80 0.032643461 ubox
76 82 0.021462528 ubox
76 84 0.156236398 ubox
77 81 0.026790201 ubox
77 85 0.968815955 ubox
78 84 0.967165882 ubox
79 83 0.946147676 ubox
79 87 0.029714579 ubox
79 89 0.087774831 ubox
80 86 0.029608554 ubox
80 88 0.109071404 ubox
81 87 0.109438090 ubox
81 90 0.003478433 ubox
82 86 0.102379971 ubox
82 95 0.007930831 ubox
82 96 0.005135553 ubox
82 98 0.006797758 ubox
83 94 0.010128049 ubox
83 95 0.005431202 ubox
83 97 0.007265675 ubox
84 91 0.003350719 ubox
84 93 0.010140952 ubox
84 94 0.005240464 ubox
84 96 0.007199483 ubox
85 90 0.003981594 ubox
89 96 0.018524850 ubox
89 98 0.023516647 ubox
90 94 0.003600100 ubox
90 95 0.019874856 ubox
90 97 0.025261603 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
9 47 0.9500000 lbox
10 46 0.9500000 lbox
11 45 0.9500000 lbox
14 43 0.9500000 lbox
15 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
29 33 0.9500000 lbox
60 100 0.9500000 lbox
61 99 0.9500000 lbox
62 98 0.9500000 lbox
64 96 0.9500000 lbox
65 95 0.9500000 lbox
66 94 0.9500000 lbox
68 93 0.9500000 lbox
69 92 0.9500000 lbox
70 91 0.9500000 lbox
71 90 0.9500000 lbox
72 89 0.9500000 lbox
77 85 0.9500000 lbox
78 84 0.9500000 lbox
79 83 0.9500000 lbox
showpage
end
%%EOF
