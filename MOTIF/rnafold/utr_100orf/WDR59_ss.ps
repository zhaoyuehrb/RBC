%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCUGAUUCUCUGGCUGUGUGGGGCGCACGGUCCCGGGAUACUGGGGACGGCGGGGUGGGAGGGCGCCGUCCUGGGGCCGCGGCGGCCGGGCGGGGGAGAUGGCGGCGCGAUGGAGCAGCGAAAACGUGGUUGUAGAGUUCCGUGACUCCCAGGCAACUGCGAUGUCUGUGGACUGUCUUGGGCAGCAUGCAGUGCUUU\
) } def
/len { sequence length } bind def

/coor [
[78.03593445 125.30538177]
[74.13497162 139.78924561]
[70.23400116 154.27311707]
[66.33303070 168.75698853]
[62.43206406 183.24085999]
[70.53277588 196.81118774]
[66.58421326 212.11427307]
[52.92898941 220.07106018]
[37.66850662 215.96092224]
[29.85653687 202.22233582]
[34.12778473 187.00616455]
[47.94819641 179.33988953]
[51.84916306 164.85601807]
[55.75012970 150.37214661]
[59.65110016 135.88827515]
[63.55206680 121.40441132]
[74.82080078 108.21055603]
[89.35292053 101.06210327]
[74.67910004 97.95099640]
[60.00528336 94.83988953]
[45.33146286 91.72878265]
[30.22660637 96.43558502]
[19.38086319 86.22680664]
[4.70704269 83.11569977]
[-9.96677876 80.00459290]
[-21.19011879 86.36914825]
[-33.35110855 83.47145844]
[-40.05336380 73.39656067]
[-54.67728424 70.05874634]
[-69.30120087 66.72093201]
[-86.76290131 72.55715942]
[-99.15498352 60.13509369]
[-113.82880402 57.02398682]
[-128.50262451 53.91287994]
[-143.17645264 50.80177689]
[-157.85026550 47.69067001]
[-172.52409363 44.57956314]
[-187.19790649 41.46845627]
[-177.67466736 53.05758286]
[-175.81886292 67.94233704]
[-182.20495605 81.51502228]
[-194.85610962 89.57408142]
[-209.85603333 89.62476349]
[-222.56135559 81.65139008]
[-229.03904724 68.12217712]
[-227.28387451 53.22522354]
[-217.83917236 41.57199860]
[-203.62675476 36.76979065]
[-217.72654724 31.65160751]
[-231.82633972 26.53342628]
[-245.92613220 21.41524506]
[-260.02593994 16.29706383]
[-274.12573242 11.17888165]
[-288.22552490 6.06070042]
[-302.32531738 0.94251907]
[-316.42510986 -4.17566252]
[-327.69223022 6.18342638]
[-342.48583984 10.10864735]
[-357.40649414 6.69801331]
[-369.02554321 -3.26473713]
[-374.67300415 -17.49023628]
[-373.05111694 -32.70956802]
[-364.53262329 -45.42544556]
[-351.07495117 -52.71584702]
[-335.77062988 -52.90549469]
[-322.13644409 -45.95080948]
[-313.30545044 -33.44992828]
[-311.30691528 -18.27545738]
[-297.20712280 -13.15727615]
[-283.10733032 -8.03909397]
[-269.00753784 -2.92091298]
[-254.90774536 2.19726849]
[-240.80795288 7.31545019]
[-226.70816040 12.43363190]
[-212.60836792 17.55181313]
[-198.50856018 22.66999435]
[-184.08680725 26.79463577]
[-169.41297913 29.90574265]
[-154.73916626 33.01684952]
[-140.06533813 36.12795639]
[-125.39151764 39.23905945]
[-110.71769714 42.35016632]
[-96.04387665 45.46127319]
[-85.73073578 39.13174820]
[-73.47700500 41.60813904]
[-65.96338654 52.09701157]
[-51.33946991 55.43482590]
[-36.71554947 58.77264023]
[-20.25291443 52.70198059]
[-6.85567236 65.33077240]
[7.81814861 68.44187927]
[22.49197006 71.55298615]
[36.54725266 66.62366486]
[48.44256592 77.05496216]
[63.11638641 80.16606903]
[77.79020691 83.27717590]
[92.46402740 86.38828278]
[106.78617096 81.93000031]
[117.10166168 71.04006958]
[127.41715240 60.15013504]
[137.73265076 49.26020432]
[148.04814148 38.37026978]
[146.13610840 25.03377342]
[152.16806030 13.20469952]
[163.74110413 7.10182333]
[176.52348328 8.75603294]
[187.00625610 -1.97296071]
[197.48904419 -12.70195484]
[207.97181702 -23.43094826]
[212.08186340 -38.70897293]
[226.51057434 -42.40513611]
[236.99336243 -53.13412857]
[236.98126221 -68.71096039]
[247.76512146 -79.44235229]
[262.61532593 -79.35789490]
[273.09811401 -90.08688354]
[277.20816040 -105.36491394]
[291.63687134 -109.06107330]
[302.11965942 -119.79006958]
[312.60241699 -130.51905823]
[316.71246338 -145.79708862]
[331.14117432 -149.49324036]
[341.62396240 -160.22224426]
[352.10675049 -170.95123291]
[355.64056396 -186.96510315]
[371.35540771 -191.65301514]
[383.08514404 -180.19242859]
[378.76327515 -164.37303162]
[362.83575439 -160.46846008]
[352.35296631 -149.73945618]
[341.87017822 -139.01046753]
[338.50991821 -124.49984741]
[323.33142090 -120.03627777]
[312.84863281 -109.30728912]
[302.36587524 -98.57829285]
[299.00561523 -84.06767273]
[283.82711792 -79.60410309]
[273.34432983 -68.87511444]
[273.77346802 -54.03087234]
[263.29525757 -43.00081635]
[247.72235107 -42.65134811]
[237.23957825 -31.92235374]
[233.87931824 -17.41173744]
[218.70080566 -12.94816780]
[208.21803284 -2.21917391]
[197.73524475 8.50981998]
[187.25247192 19.23881340]
[188.16780090 36.02880859]
[176.42776489 48.53417969]
[158.93806458 48.68576431]
[148.62257385 59.57569504]
[138.30708313 70.46562958]
[127.99159241 81.35556030]
[117.67610168 92.24549103]
[117.79216766 107.24504089]
[128.27494812 117.97403717]
[138.75773621 128.70303345]
[149.24050903 139.43202209]
[159.72329712 150.16102600]
[167.96456909 154.11563110]
[170.28367615 161.13809204]
[180.59916687 172.02803040]
[190.91465759 182.91795349]
[201.23014832 193.80789185]
[209.40925598 197.88957214]
[211.61940002 204.94708252]
[221.76513672 215.99534607]
[231.91087341 227.04360962]
[240.02581787 231.25135803]
[242.12649536 238.34222412]
[252.10003662 249.54617310]
[262.07357788 260.75012207]
[272.04711914 271.95407104]
[286.70761108 267.70758057]
[301.75732422 270.25100708]
[314.20809937 279.07940674]
[321.58786011 292.43988037]
[322.43133545 307.67965698]
[316.57107544 321.77291870]
[305.17059326 331.92141724]
[290.49349976 336.11013794]
[275.45391846 333.50744629]
[263.03799438 324.63009644]
[255.71089172 311.24069214]
[254.92744446 295.99768066]
[260.84317017 281.92761230]
[250.86962891 270.72366333]
[240.89608765 259.51971436]
[230.92254639 248.31576538]
[220.86260986 237.18933105]
[210.71687317 226.14106750]
[200.57113647 215.09280396]
[190.34022522 204.12338257]
[180.02473450 193.23344421]
[169.70924377 182.34352112]
[159.39375305 171.45358276]
[148.99429321 160.64379883]
[138.51152039 149.91481018]
[128.02873230 139.18580627]
[117.54595947 128.45681763]
[107.06317902 117.72782135]
[99.80636597 119.62221527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[18 97]
[19 96]
[20 95]
[21 94]
[23 92]
[24 91]
[25 90]
[28 88]
[29 87]
[30 86]
[32 83]
[33 82]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[98 154]
[99 153]
[100 152]
[101 151]
[102 150]
[106 147]
[107 146]
[108 145]
[109 144]
[111 142]
[112 141]
[115 138]
[116 137]
[118 135]
[119 134]
[120 133]
[122 131]
[123 130]
[124 129]
[155 201]
[156 200]
[157 199]
[158 198]
[159 197]
[161 196]
[162 195]
[163 194]
[164 193]
[166 192]
[167 191]
[168 190]
[170 189]
[171 188]
[172 187]
[173 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
