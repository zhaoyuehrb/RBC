%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCGGCCUGGGCCUGCGCCGCUCAGCUCUCUGGAAACUAGCGCCUCAGCUGCGCGGCGCGUAGGUCGCGGGGAGCUCCGAACCGCCGGCGCCCGGCCAUGGCGGUCUCCAGGCUAGAUCGCCUUUUUAUUUUACUGGAUACUGGCACUACUCCUGUUACAAGAAAAGCUGCUGCACAGCAACUUGGAGAAGUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[87.04039001 108.37720490]
[73.43190765 114.68666077]
[59.82342529 120.99610901]
[46.21494293 127.30555725]
[32.60645676 133.61500549]
[18.99797440 139.92445374]
[5.38948965 146.23391724]
[-8.21899414 152.54336548]
[-21.82747841 158.85281372]
[-35.43596268 165.16226196]
[-37.81690216 168.81993103]
[-40.92765427 171.27694702]
[-44.29917526 172.45132446]
[-47.48419571 172.42245483]
[-50.10818863 171.41000366]
[-64.08771515 176.84811401]
[-78.06723785 182.28620911]
[-92.04675293 187.72431946]
[-106.02627563 193.16241455]
[-120.00579834 198.60052490]
[-133.98532104 204.03862000]
[-147.96484375 209.47673035]
[-158.02108765 221.69076538]
[-172.68757629 219.09399414]
[-186.66709900 224.53210449]
[-200.64662170 229.97019958]
[-214.62614441 235.40830994]
[-228.60566711 240.84640503]
[-231.18649292 252.46337891]
[-238.97837830 261.29861450]
[-249.95579529 265.23049927]
[-261.34844971 263.38977051]
[-270.34020996 256.34875488]
[-284.48443604 261.34283447]
[-287.92813110 276.38092041]
[-298.97131348 287.15365601]
[-314.09014893 290.22348022]
[-328.46032715 284.61077881]
[-337.49630737 272.10662842]
[-338.31478882 256.70098877]
[-330.65457153 243.30976868]
[-316.96002197 236.20605469]
[-301.60098267 237.65663147]
[-289.47851562 247.19859314]
[-275.33428955 242.20451355]
[-268.45532227 225.24761963]
[-251.07186890 218.58021545]
[-234.04376221 226.86688232]
[-220.06423950 221.42878723]
[-206.08471680 215.99067688]
[-192.10519409 210.55258179]
[-178.12568665 205.11447144]
[-169.06935120 193.28941345]
[-153.40295410 195.49720764]
[-139.42343140 190.05911255]
[-125.44390106 184.62100220]
[-111.46437836 179.18289185]
[-97.48485565 173.74479675]
[-83.50534058 168.30668640]
[-69.52581787 162.86859131]
[-55.54629517 157.43048096]
[-41.74541092 151.55378723]
[-28.13692856 145.24432373]
[-14.52844429 138.93487549]
[-0.91996098 132.62542725]
[12.68852329 126.31597900]
[26.29700661 120.00652313]
[39.90549088 113.69707489]
[53.51397324 107.38762665]
[67.12245941 101.07817078]
[80.73094177 94.76872253]
[87.04039001 81.16024017]
[83.06288910 66.69720459]
[79.08538055 52.23416519]
[75.10787201 37.77112961]
[66.71718597 50.20480728]
[52.02069473 53.20701218]
[39.42583466 45.06026840]
[36.13774490 30.42508888]
[44.03744888 17.67382812]
[58.60575867 14.10110474]
[71.50818634 21.75026131]
[68.91641998 6.97586536]
[66.32466125 -7.79852962]
[63.73289108 -22.57292557]
[61.14112473 -37.34732056]
[58.54936218 -52.12171555]
[55.72468567 -66.85335541]
[52.66780472 -81.53856659]
[49.61092377 -96.22377777]
[37.03518295 -106.18521881]
[37.12659073 -122.22801208]
[49.81502914 -132.04550171]
[65.36701202 -128.10655212]
[71.85239410 -113.43278503]
[64.29613495 -99.28066254]
[67.35301971 -84.59545135]
[70.40989685 -69.91023254]
[73.85046387 -66.58506775]
[75.23261261 -61.05993271]
[73.32375336 -54.71348190]
[75.91551971 -39.93908691]
[78.50728607 -25.16469002]
[81.09905243 -10.39029598]
[83.69081879 4.38409948]
[86.28258514 19.15849495]
[89.57090759 33.79362106]
[93.54841614 48.25665665]
[97.52592468 62.71969604]
[101.50342560 77.18273163]
[116.33505249 79.42394257]
[124.40840912 66.78191376]
[132.48176575 54.13988495]
[140.55513000 41.49785614]
[136.90704346 26.12037086]
[145.27198792 12.71129704]
[160.68719482 9.22600174]
[174.00706482 17.73224831]
[177.32919312 33.18342972]
[168.68260193 46.41263580]
[153.19715881 49.57121277]
[145.12379456 62.21324158]
[137.05043030 74.85527039]
[128.97708130 87.49729919]
[142.12303162 80.27345276]
[155.26898193 73.04959869]
[168.41493225 65.82575226]
[176.99743652 53.52369308]
[188.99308777 44.51790237]
[203.20152283 39.70954895]
[218.20095825 39.57979584]
[232.49046326 44.14162064]
[244.64012146 52.93854141]
[253.43415833 65.09027863]
[257.99261475 79.38085938]
[257.85931396 94.38026428]
[253.04759216 108.58757019]
[244.03895569 120.58108521]
[231.73487854 129.16067505]
[217.36654663 133.46781921]
[202.37179565 133.07148743]
[188.25105286 128.01136780]
[176.41925049 118.79582977]
[161.72579956 115.77879333]
[147.03234863 112.76176453]
[132.33889771 109.74472809]
[143.78717041 119.43684387]
[155.23544312 129.12895203]
[166.68371582 138.82106018]
[178.13198853 148.51316833]
[189.58026123 158.20529175]
[201.02853394 167.89739990]
[216.56047058 170.90899658]
[221.27476501 185.03785706]
[232.72303772 194.72996521]
[241.94934082 192.70216370]
[250.93951416 195.11694336]
[257.70486450 201.30891418]
[260.80953979 209.79214478]
[259.67431641 218.61526489]
[270.65090942 228.83850098]
[281.62750244 239.06173706]
[292.60409546 249.28497314]
[304.18731689 246.55673218]
[315.53195190 249.73072815]
[323.84658813 257.90570068]
[327.14370728 268.96508789]
[324.71395874 280.12411499]
[335.36233521 290.68875122]
[346.01071167 301.25341797]
[356.65908813 311.81808472]
[372.64312744 313.19287109]
[381.41384888 326.62619019]
[376.24313354 341.81311035]
[361.09747314 347.10357666]
[347.59533691 338.43914795]
[346.09442139 322.46646118]
[335.44604492 311.90179443]
[324.79766846 301.33715820]
[314.14929199 290.77249146]
[295.88830566 291.95266724]
[282.32437134 279.19888306]
[282.38082886 260.26156616]
[271.40426636 250.03831482]
[260.42767334 239.81507874]
[249.45109558 229.59184265]
[229.01416016 226.74870300]
[223.03092957 206.17823792]
[211.58265686 196.48612976]
[196.86958313 194.16777039]
[191.33642578 179.34567261]
[179.88815308 169.65356445]
[168.43988037 159.96144104]
[156.99160767 150.26933289]
[145.54333496 140.57722473]
[134.09506226 130.88511658]
[122.64678192 121.19300842]
[105.46810150 125.23582458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 71]
[2 70]
[3 69]
[4 68]
[5 67]
[6 66]
[7 65]
[8 64]
[9 63]
[10 62]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[20 56]
[21 55]
[22 54]
[24 52]
[25 51]
[26 50]
[27 49]
[28 48]
[33 45]
[34 44]
[72 110]
[73 109]
[74 108]
[75 107]
[82 106]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 98]
[89 97]
[90 96]
[111 124]
[112 123]
[113 122]
[114 121]
[146 197]
[147 196]
[148 195]
[149 194]
[150 193]
[151 192]
[152 191]
[154 189]
[155 188]
[160 186]
[161 185]
[162 184]
[163 183]
[168 180]
[169 179]
[170 178]
[171 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
