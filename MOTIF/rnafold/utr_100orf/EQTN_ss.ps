%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:15:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAGACACAGGACCUGCUGGGCCACAGAAAGGAGGCUCUGGGUAGACGCACUAGAUUACUGGAUAAAUCACUUCAAUUUCCCAAUGAAUUUUAUAUUGUUUAUUUUUAUACCUGGAGUUUUUUCCUUAAAAAGUAGCACUUUGAAGCCUACUAUUGAAGCAUUGCCUAAUGUGCUACCUUUAA\
) } def
/len { sequence length } bind def

/coor [
[21.17812157 351.83489990]
[11.17323589 363.01086426]
[-2.30875063 369.58627319]
[-17.27517891 370.58926392]
[-31.51398849 365.87161255]
[-42.92066193 356.13058472]
[-49.80927277 342.80590820]
[-51.16167831 327.86697388]
[-46.77639389 313.51885986]
[-58.03647995 323.42898560]
[-69.29656219 333.33911133]
[-80.55664825 343.24920654]
[-85.80421448 358.17483521]
[-100.47006989 360.77523804]
[-111.73014832 370.68536377]
[-122.99023438 380.59545898]
[-128.23780823 395.52108765]
[-142.90365601 398.12149048]
[-154.16374207 408.03161621]
[-150.48748779 422.88906860]
[-154.14820862 437.75033569]
[-164.30465698 449.20043945]
[-178.62298584 454.60821533]
[-193.81294250 452.73098755]
[-206.38397217 444.00015259]
[-213.44735718 430.42196655]
[-213.37998962 415.11660767]
[-206.19732666 401.60113525]
[-193.54991150 392.98129272]
[-178.34402466 391.23788452]
[-164.07385254 396.77151489]
[-152.81378174 386.86138916]
[-148.37159729 372.64462280]
[-132.90036011 369.33538818]
[-121.64027405 359.42526245]
[-110.38018799 349.51513672]
[-105.93801880 335.29837036]
[-90.46676636 331.98913574]
[-79.20668793 322.07901001]
[-67.94660187 312.16888428]
[-56.68651581 302.25875854]
[-46.68114471 291.08325195]
[-38.07170486 278.80001831]
[-29.46226311 266.51678467]
[-20.85282135 254.23358154]
[-12.24337959 241.95034790]
[-10.97596169 234.65168762]
[-3.38198972 229.53334045]
[5.43478918 217.39808655]
[14.25156784 205.26283264]
[23.06834602 193.12757874]
[24.28964233 178.28312683]
[38.66078568 171.66642761]
[47.47756577 159.53117371]
[56.29434586 147.39590454]
[43.20238495 130.50553894]
[36.35082245 110.26348877]
[36.49245071 88.89378357]
[43.61170959 68.74432373]
[56.92639160 52.02895737]
[74.97360992 40.58420563]
[95.77050018 35.66751862]
[96.53433990 20.68698120]
[97.29817963 5.70644188]
[90.27365875 -8.46983051]
[98.64902496 -20.78658485]
[99.41286469 -35.76712418]
[100.17671204 -50.74766541]
[97.49680328 -56.83203506]
[98.20279694 -62.50006866]
[101.22940063 -66.22132111]
[102.50148773 -81.16728210]
[103.77357483 -96.11324310]
[105.04566193 -111.05920410]
[106.31774902 -126.00517273]
[107.58984375 -140.95112610]
[93.10803986 -147.56767273]
[81.78356934 -158.72134399]
[74.97074127 -173.05249023]
[73.47550964 -188.82304382]
[77.46011353 -204.12728882]
[86.42574310 -217.12219238]
[99.27486420 -226.24928284]
[114.44558716 -230.42163086]
[115.46369934 -245.38703918]
[116.48181152 -260.35244751]
[117.49992371 -275.31784058]
[118.51803589 -290.28326416]
[119.53614807 -305.24865723]
[120.55426025 -320.21408081]
[108.56277466 -330.06210327]
[104.68257904 -345.08621216]
[110.40568542 -359.50930786]
[123.53144836 -367.78543091]
[139.01274109 -366.73220825]
[150.89668274 -356.75466919]
[154.61367798 -341.68936157]
[148.73443604 -327.32919312]
[135.51966858 -319.19595337]
[134.50155640 -304.23056030]
[133.48344421 -289.26513672]
[132.46533203 -274.29974365]
[131.44721985 -259.33432007]
[130.42910767 -244.36892700]
[129.41099548 -229.40351868]
[142.53259277 -224.05918884]
[153.37649536 -214.90731812]
[160.87234497 -202.83386230]
[164.27494812 -189.01397705]
[163.23825073 -174.79765320]
[157.85050964 -161.57785034]
[148.62698364 -150.65399170]
[136.46066284 -143.10421753]
[122.53580475 -139.67904663]
[121.26371765 -124.73307800]
[119.99162292 -109.78711700]
[118.71953583 -94.84115601]
[117.44744873 -79.89519501]
[116.17536163 -64.94923401]
[115.15724945 -49.98382187]
[114.39340973 -35.00328445]
[113.62957001 -20.02274513]
[120.70872498 -6.91798115]
[112.27871704 6.47028255]
[111.51487732 21.45082092]
[110.75103760 36.43136215]
[123.43213654 39.93760300]
[135.13739014 45.94520569]
[145.37930298 54.20397568]
[153.73133850 64.36996460]
[159.84568787 76.01980591]
[163.46771240 88.66832733]
[164.44654846 101.78877258]
[179.29055786 103.94641113]
[194.13456726 106.10404968]
[208.97857666 108.26169586]
[223.84036255 110.29322052]
[238.71887207 112.19848633]
[249.26182556 100.81315613]
[264.48986816 97.83225250]
[278.54754639 104.40199280]
[286.02935791 117.99618530]
[284.05841064 133.38757324]
[273.39257812 144.65786743]
[258.13308716 147.47340393]
[244.14750671 140.75154114]
[236.81359863 127.07699585]
[221.93508911 125.17173004]
[214.88493347 127.44594574]
[206.82092285 123.10569763]
[191.97691345 120.94805908]
[177.13290405 118.79042053]
[162.28890991 116.63277435]
[159.60435486 124.57392883]
[155.91215515 132.09965515]
[151.27473450 139.08271790]
[145.77049255 145.40505981]
[139.49246216 150.95980835]
[132.54681396 155.65304565]
[125.05092621 159.40545654]
[117.13154602 162.15357971]
[108.92254639 163.85095215]
[100.56271362 164.46890259]
[92.19335938 163.99697876]
[83.95598602 162.44314575]
[75.98983765 159.83367920]
[68.42959595 156.21269226]
[59.61281967 168.34794617]
[50.79604340 180.48320007]
[48.94411087 196.19564819]
[35.20360184 201.94435120]
[26.38682365 214.07960510]
[17.57004356 226.21485901]
[8.75326538 238.35011292]
[0.03984100 250.55979919]
[-8.56960106 262.84301758]
[-17.17904282 275.12625122]
[-25.78848457 287.40945435]
[-34.39792633 299.69268799]
[-20.62348366 293.75427246]
[-5.62653971 293.45153809]
[8.37633705 298.82919312]
[19.31549835 309.09246826]
[25.57412148 322.72439575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 41]
[10 40]
[11 39]
[12 38]
[14 36]
[15 35]
[16 34]
[18 32]
[19 31]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[48 174]
[49 173]
[50 172]
[51 171]
[53 169]
[54 168]
[55 167]
[62 126]
[63 125]
[64 124]
[66 122]
[67 121]
[68 120]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[133 153]
[134 152]
[135 151]
[136 150]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
