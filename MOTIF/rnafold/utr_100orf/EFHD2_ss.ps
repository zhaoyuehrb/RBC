%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGAGGAAGAGCGCGGCCGGCGGCGCUGCGCUGAGAGCAGGGGCCCGGCCAAGGCGAGUGCCGCGCGGGCCACCAUGGCCACGGACGAGCUGGCCACCAAGCUGAGCCGGCGGCUGCAGAUGGAGGGCGAGGGCGGCGGCGAGACCCCGGAGCAGCCCGGGCUGAACGGGGCAG\
) } def
/len { sequence length } bind def

/coor [
[94.23425293 308.18179321]
[79.34658051 310.01403809]
[64.59958649 307.27066040]
[51.36679459 300.20715332]
[40.88069534 289.48141479]
[34.11795044 276.09240723]
[31.70844269 261.28720093]
[33.87658691 246.44471741]
[40.42044449 232.94738770]
[50.73052979 222.05232239]
[63.84656525 214.77430725]
[78.54693604 211.79118347]
[93.46247101 213.38081360]
[107.20394135 219.39512634]
[118.49197388 229.27455139]
[113.55564117 215.11006165]
[108.61930847 200.94558716]
[97.12458038 191.47349548]
[99.88941956 175.89573669]
[94.95308685 161.73126221]
[90.01675415 147.56677246]
[85.08042145 133.40229797]
[72.92962646 124.60694122]
[57.93196106 124.34221649]
[42.93429947 124.07749176]
[27.93663597 123.81275940]
[12.93897152 123.54803467]
[-2.05869222 123.28330994]
[-17.05635643 123.01857758]
[-32.05401993 122.75385284]
[-40.71978378 125.73838043]
[-47.31340790 122.34977722]
[-62.30406570 121.82041168]
[-77.29472351 121.29103851]
[-92.28537750 120.76166534]
[-99.95626068 132.23419189]
[-112.20063782 138.36262512]
[-125.76541138 137.63859558]
[-137.10549927 130.35862732]
[-143.31031799 118.51855469]
[-158.28929138 117.72470856]
[-172.47961426 124.72080994]
[-184.77955627 116.32077789]
[-199.75854492 115.52693176]
[-215.89546204 120.72653198]
[-225.35900879 106.65963745]
[-214.46162415 93.67182159]
[-198.96469116 100.54795074]
[-183.98570251 101.34180450]
[-170.86679077 94.28891754]
[-157.49543762 102.74572754]
[-142.51646423 103.53958130]
[-132.60543823 90.47068787]
[-116.70139313 85.82750702]
[-101.00414276 91.62599945]
[-91.75600433 105.77101135]
[-76.76535034 106.30038452]
[-61.77469254 106.82975006]
[-46.78403473 107.35912323]
[-31.78929329 107.75618744]
[-16.79162979 108.02091980]
[-1.79396510 108.28564453]
[13.20369911 108.55036926]
[28.20136261 108.81510162]
[43.19902802 109.07982635]
[58.19668961 109.34455109]
[73.19435120 109.60928345]
[69.27393341 90.49297333]
[78.98186493 70.95694733]
[73.05867767 57.17594528]
[67.01411438 43.44775391]
[60.84864044 29.77343941]
[54.68316269 16.09912491]
[48.51768875 2.42480898]
[42.35221100 -11.24950695]
[30.32985497 -23.20355606]
[38.48861694 -38.06528473]
[55.02811050 -34.33950806]
[56.02652740 -17.41498184]
[62.19200516 -3.74066687]
[68.35748291 9.93364906]
[74.52295685 23.60796356]
[80.68843079 37.28227997]
[86.32115173 42.10213470]
[86.83967590 51.25276184]
[92.76286316 65.03376007]
[100.06631470 66.73951721]
[95.71742249 52.38378143]
[105.97549438 41.43973923]
[120.58232117 44.85157013]
[124.93089294 59.20740509]
[114.67321777 70.15103149]
[121.97666931 71.85678864]
[133.39134216 62.12513733]
[138.87319946 47.28398514]
[153.57817078 44.91474915]
[164.99285889 35.18309784]
[176.40753174 25.45144463]
[182.14863586 7.96979761]
[199.49998474 5.43067122]
[210.74114990 -4.50091600]
[221.98229980 -14.43250370]
[223.56246948 -27.25337410]
[233.15510559 -35.29377365]
[245.25349426 -34.65122986]
[256.66818237 -44.38288116]
[268.08285522 -54.11453247]
[279.41122437 -63.94653320]
[290.65237427 -73.87812042]
[301.89352417 -83.80970764]
[313.13467407 -93.74129486]
[321.00137329 -108.75966644]
[337.61053467 -105.35791016]
[338.93960571 -88.45613098]
[323.06628418 -82.50014496]
[311.82510376 -72.56855774]
[300.58395386 -62.63696671]
[289.34280396 -52.70537949]
[286.40307617 -45.89975739]
[277.81451416 -42.69985199]
[266.39984131 -32.96820068]
[254.98515320 -23.23654747]
[250.02949524 -6.41519070]
[231.91389465 -3.19134855]
[220.67272949 6.74023914]
[209.43157959 16.67182732]
[208.36515808 28.74024582]
[199.05484009 37.10591888]
[186.13919067 36.86612701]
[174.72450256 46.59777832]
[163.30981445 56.32942963]
[158.64442444 70.47451019]
[143.12300110 73.53981781]
[131.70831299 83.27146912]
[132.66709900 106.92164612]
[119.15483856 124.29021454]
[99.24491119 128.46595764]
[104.18124390 142.63044739]
[109.11757660 156.79492188]
[114.05390930 170.95941162]
[125.90171814 181.44464111]
[122.78379059 196.00924683]
[127.72013092 210.17373657]
[132.65646362 224.33821106]
[137.58692932 227.42976379]
[140.69384766 231.78323364]
[141.78291321 236.54002380]
[141.01528931 240.88751221]
[149.48591614 253.26687622]
[157.95654297 265.64624023]
[166.42715454 278.02560425]
[174.89778137 290.40493774]
[188.35162354 291.35107422]
[198.64767456 299.75799561]
[202.16046143 312.37567139]
[197.82086182 324.52673340]
[206.07168579 337.05364990]
[214.32250977 349.58059692]
[222.57333374 362.10751343]
[237.46749878 368.97015381]
[238.70170593 385.32281494]
[225.00631714 394.34323120]
[210.46997070 386.75201416]
[210.04641724 370.35833740]
[201.79559326 357.83142090]
[193.54476929 345.30447388]
[185.29393005 332.77755737]
[168.70353699 330.10546875]
[158.97540283 315.99169922]
[162.51841736 298.87557983]
[154.04779053 286.49621582]
[145.57717896 274.11685181]
[137.10655212 261.73748779]
[128.63594055 249.35812378]
[129.88816833 264.30575562]
[126.57368469 278.93499756]
[119.00119019 291.88323975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 144]
[16 143]
[17 142]
[19 140]
[20 139]
[21 138]
[22 137]
[23 67]
[24 66]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[32 59]
[33 58]
[34 57]
[35 56]
[40 52]
[41 51]
[43 49]
[44 48]
[69 86]
[70 85]
[71 83]
[72 82]
[73 81]
[74 80]
[75 79]
[93 134]
[94 133]
[96 131]
[97 130]
[98 129]
[100 126]
[101 125]
[102 124]
[105 122]
[106 121]
[107 120]
[108 118]
[109 117]
[110 116]
[111 115]
[148 174]
[149 173]
[150 172]
[151 171]
[152 170]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
