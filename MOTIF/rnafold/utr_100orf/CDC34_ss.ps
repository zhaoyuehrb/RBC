%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAAGCGCCGGUGGGGCGGCGGCGCCAGAGCUGCUGGAGCGCUCGGGGUCCCCGGGCGGCGGCGGCGGCGCAGAGGAGGAGGCAGGCGGCGGCCCCGGUGGCUCCCCCCCGGACGGUGCGCGGCCCGGCCCGUCUCGCGAACUCGCGGUGGUCGCGCGGCCCCGCGCUGCUCCGACCCCGGGCCCCUCCGCCGCCGCCAUGGCUCGGCCGCUAGUGCCCAGCUCGCAGAAGGCGCUGCUGCUGGAGCUCAAGGG\
GCUGCAGGAAGAGCCGGUCGAGGGAUUCCGCGUGACACUGGUGG\
) } def
/len { sequence length } bind def

/coor [
[26.36185455 586.48681641]
[13.36650658 594.96624756]
[-2.12930298 594.15411377]
[-14.16711998 584.36279297]
[-18.11815834 569.35711670]
[-12.46316147 554.90722656]
[0.62340653 546.56927490]
[1.40844584 531.58984375]
[2.19348526 516.61035156]
[2.97852445 501.63092041]
[3.76356387 486.65148926]
[4.54860306 471.67205811]
[5.33364248 456.69259644]
[6.11868191 441.71316528]
[-1.01424193 439.39553833]
[-12.16120625 449.43270874]
[-15.28008938 434.76028442]
[-22.41301346 432.44265747]
[-30.58259964 445.02270508]
[-38.75218582 457.60275269]
[-46.92177200 470.18283081]
[-55.09135437 482.76287842]
[-63.26094055 495.34295654]
[-71.43052673 507.92300415]
[-67.89988708 523.32788086]
[-76.36690521 536.67272949]
[-91.80824280 540.04028320]
[-105.06283569 531.43267822]
[-108.26696777 515.95660400]
[-99.51967621 502.79373169]
[-84.01058197 499.75341797]
[-75.84100342 487.17337036]
[-67.67141724 474.59329224]
[-59.50182724 462.01324463]
[-51.33224487 449.43316650]
[-43.16265869 436.85311890]
[-34.99307251 424.27307129]
[-32.58989716 408.58874512]
[-24.11765289 397.05065918]
[-12.61861038 391.49215698]
[-1.38598156 391.99859619]
[3.24927330 377.73275757]
[7.88452816 363.46691895]
[4.45886183 348.97158813]
[16.08195877 338.23782349]
[20.71721458 323.97195435]
[25.35246849 309.70611572]
[29.98772430 295.44027710]
[34.62297821 281.17443848]
[39.25823212 266.90856934]
[43.89348984 252.64273071]
[48.52874374 238.37687683]
[53.16399765 224.11103821]
[57.72449493 209.82110596]
[62.21010590 195.50750732]
[66.69571686 181.19390869]
[63.11844635 166.73526001]
[74.62850952 155.88034058]
[79.11412048 141.56674194]
[83.59973145 127.25313568]
[88.08534241 112.93952942]
[87.30030060 97.96008301]
[81.34308624 84.19376373]
[75.38586426 70.42744446]
[69.42864990 56.66112900]
[63.47142792 42.89480972]
[57.51420975 29.12849045]
[51.55699158 15.36217022]
[45.59977341 1.59585083]
[39.64255524 -12.17046833]
[33.68533707 -25.93678856]
[28.67370796 -30.12900925]
[26.77951622 -35.42290497]
[27.75086403 -40.05434036]
[22.08325195 -53.94240189]
[16.41563988 -67.83045959]
[10.74802876 -81.71852112]
[4.63753223 -88.44166565]
[5.09462357 -95.78180695]
[-0.42724472 -109.72845459]
[-22.10649681 -120.56287384]
[-19.78111649 -148.89355469]
[-26.73055840 -162.18661499]
[-33.67999649 -175.47966003]
[-40.62944031 -188.77272034]
[-47.57888031 -202.06576538]
[-54.59782791 -215.32225037]
[-61.68608856 -228.54180908]
[-68.77435303 -241.76135254]
[-75.86260986 -254.98091125]
[-82.64239502 -261.02850342]
[-82.95506287 -268.37622070]
[-89.90450287 -281.66928101]
[-96.85394287 -294.96231079]
[-103.80338287 -308.25537109]
[-113.66400909 -319.55883789]
[-125.89093018 -328.24804688]
[-138.11784363 -336.93725586]
[-150.34475708 -345.62646484]
[-159.10646057 -348.02883911]
[-162.65357971 -354.47125244]
[-174.78883362 -363.28802490]
[-190.79553223 -362.20861816]
[-201.51268005 -374.14688110]
[-198.71899414 -389.94482422]
[-184.55755615 -397.48361206]
[-169.89179993 -390.98013306]
[-165.97204590 -375.42327881]
[-153.83679199 -366.60650635]
[-141.65554810 -357.85339355]
[-129.42861938 -349.16418457]
[-117.20171356 -340.47497559]
[-104.97479248 -331.78573608]
[-98.77169037 -336.00137329]
[-110.62400055 -345.19500732]
[-105.54288483 -359.30819702]
[-90.55028534 -358.83694458]
[-86.36547852 -344.43261719]
[-80.16237640 -348.64825439]
[-83.74037933 -363.21527100]
[-87.31838226 -377.78228760]
[-90.89637756 -392.34927368]
[-94.47438049 -406.91629028]
[-98.05238342 -421.48330688]
[-101.63038635 -436.05032349]
[-105.20838928 -450.61734009]
[-109.45070648 -455.58663940]
[-110.43551636 -461.12228394]
[-108.70539093 -465.52688599]
[-111.97753906 -480.16561890]
[-115.24968719 -494.80438232]
[-123.92056274 -482.56445312]
[-138.69006348 -479.94497681]
[-151.04133606 -488.45651245]
[-153.85197449 -503.19085693]
[-145.50122070 -515.65136719]
[-130.80456543 -518.65270996]
[-118.23697662 -510.46432495]
[-120.58349609 -525.27966309]
[-122.93001556 -540.09497070]
[-133.66520691 -552.49206543]
[-128.04168701 -567.89685059]
[-111.84444427 -570.46221924]
[-101.73580933 -557.54919434]
[-108.11468506 -542.44146729]
[-105.76817322 -527.62615967]
[-103.42165375 -512.81085205]
[-100.61093140 -498.07653809]
[-97.33878326 -483.43777466]
[-94.06663513 -468.79904175]
[-90.64137268 -454.19534302]
[-87.06336975 -439.62832642]
[-83.48537445 -425.06130981]
[-79.90737152 -410.49429321]
[-76.32936859 -395.92727661]
[-72.75136566 -381.36026001]
[-69.17336273 -366.79327393]
[-65.59535980 -352.22625732]
[-90.51033020 -315.20480347]
[-83.56089020 -301.91177368]
[-76.61145020 -288.61871338]
[-69.66201019 -275.32565308]
[-62.64305878 -262.06918335]
[-55.55479813 -248.84962463]
[-48.46653748 -235.63006592]
[-41.37827301 -222.41052246]
[-35.47687149 -218.02188110]
[-34.28582382 -209.01521301]
[-27.33638573 -195.72215271]
[-20.38694382 -182.42910767]
[-13.43750381 -169.13604736]
[-6.48806381 -155.84300232]
[8.49528408 -155.13639832]
[16.66486931 -167.71646118]
[24.83445549 -180.29650879]
[25.15190887 -196.69259644]
[39.63882828 -204.37771606]
[53.39231110 -195.44610596]
[52.26395416 -179.08583069]
[37.41451263 -172.12692261]
[29.24492836 -159.54687500]
[21.07534218 -146.96681213]
[23.40851593 -128.13864136]
[13.51940250 -115.25032043]
[19.04127121 -101.30367279]
[24.63608742 -87.38613129]
[30.30369949 -73.49806976]
[35.97130966 -59.61001205]
[41.63892365 -45.72195435]
[47.45165634 -31.89400673]
[53.40887451 -18.12768745]
[59.36609268 -4.36136770]
[65.32331085 9.40495205]
[71.28053284 23.17127037]
[77.23774719 36.93759155]
[83.19496918 50.70391083]
[89.15218353 64.47023010]
[95.10940552 78.23654938]
[101.06661987 92.00286865]
[103.95573425 89.08980560]
[108.08277893 87.19525909]
[113.11450958 86.69816589]
[118.61698914 87.87574768]
[124.08488464 90.87898254]
[138.87481689 93.38051605]
[153.67765808 95.80457306]
[168.49298096 98.15108490]
[183.30830383 100.49760437]
[198.12362671 102.84412384]
[212.93896484 105.19064331]
[227.77960205 99.70742035]
[239.13980103 109.34044647]
[253.95512390 111.68696594]
[264.94049072 100.88751221]
[280.00244141 98.65346527]
[293.33407593 105.63425446]
[299.91995239 118.96707916]
[314.73529053 121.31359100]
[329.56268311 123.58250427]
[344.40179443 125.77375031]
[359.24087524 127.96499634]
[374.07995605 130.15625000]
[388.91903687 132.34748840]
[399.69027710 125.30976868]
[411.97866821 127.40917206]
[419.31500244 136.98901367]
[434.13034058 139.33552551]
[448.94564819 141.68203735]
[463.76098633 144.02856445]
[476.39797974 134.53742981]
[492.03295898 136.84460449]
[501.38995361 149.58125305]
[498.91763306 165.19096375]
[486.08276367 174.41276550]
[470.50006104 171.77552795]
[461.41445923 158.84388733]
[446.59915161 156.49737549]
[431.78381348 154.15084839]
[416.96847534 151.80433655]
[400.91983032 158.95455933]
[386.72778320 147.18656921]
[371.88870239 144.99533081]
[357.04962158 142.80407715]
[342.21054077 140.61283875]
[327.37145996 138.42158508]
[320.32962036 140.54273987]
[312.38876343 136.12892151]
[297.57345581 133.78240967]
[287.18981934 144.42752075]
[272.35351562 146.94694519]
[258.71908569 140.16783142]
[251.60861206 126.50228882]
[236.79328918 124.15576935]
[223.01232910 129.80682373]
[210.59243774 120.00596619]
[195.77711487 117.65944672]
[180.96179199 115.31292725]
[166.14646912 112.96641541]
[151.33114624 110.61989594]
[144.26748657 112.66718292]
[136.37329102 108.17045593]
[121.58335114 105.66892242]
[134.63433838 113.06295776]
[137.97785950 127.68557739]
[129.43708801 140.01664734]
[114.57254791 142.02798462]
[103.06185913 132.41007996]
[102.39894867 117.42514038]
[97.91333771 131.73873901]
[93.42772675 146.05235291]
[88.94210815 160.36595154]
[92.19853973 175.84840393]
[81.00932312 185.67951965]
[76.52371216 199.99311829]
[72.03810120 214.30671692]
[72.46082306 223.38197327]
[67.42984772 228.74629211]
[62.79459000 243.01213074]
[58.15933609 257.27798462]
[53.52408218 271.54382324]
[48.88882828 285.80969238]
[44.25357056 300.07553101]
[39.61831665 314.34136963]
[34.98306274 328.60720825]
[30.34780693 342.87307739]
[33.44192886 358.38876343]
[22.15037537 368.10217285]
[17.51512146 382.36801147]
[12.87986660 396.63385010]
[28.30065536 414.08239746]
[21.09812546 442.49819946]
[20.31308556 457.47763062]
[19.52804565 472.45709229]
[18.74300766 487.43652344]
[17.95796776 502.41598511]
[17.17292786 517.39538574]
[16.38788795 532.37487793]
[15.60284996 547.35430908]
[27.74617577 557.01446533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 298]
[8 297]
[9 296]
[10 295]
[11 294]
[12 293]
[13 292]
[14 291]
[18 37]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[41 289]
[42 288]
[43 287]
[45 285]
[46 284]
[47 283]
[48 282]
[49 281]
[50 280]
[51 279]
[52 278]
[53 277]
[54 275]
[55 274]
[56 273]
[58 271]
[59 270]
[60 269]
[61 268]
[62 199]
[63 198]
[64 197]
[65 196]
[66 195]
[67 194]
[68 193]
[69 192]
[70 191]
[71 190]
[74 189]
[75 188]
[76 187]
[77 186]
[79 185]
[80 184]
[82 172]
[83 171]
[84 170]
[85 169]
[86 168]
[87 166]
[88 165]
[89 164]
[90 163]
[92 162]
[93 161]
[94 160]
[95 159]
[96 113]
[97 112]
[98 111]
[99 110]
[101 109]
[102 108]
[119 158]
[120 157]
[121 156]
[122 155]
[123 154]
[124 153]
[125 152]
[126 151]
[129 150]
[130 149]
[131 148]
[138 147]
[139 146]
[140 145]
[173 182]
[174 181]
[175 180]
[204 262]
[205 261]
[206 259]
[207 258]
[208 257]
[209 256]
[210 255]
[212 253]
[213 252]
[217 248]
[218 247]
[219 245]
[220 244]
[221 243]
[222 242]
[223 241]
[226 239]
[227 238]
[228 237]
[229 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
