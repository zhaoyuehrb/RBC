%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:14:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCAGGACUGCCCGGCCCAGCCUUGGAGGAAGACUUCUGGGCAGAAGCGGAACACAGGAGCAGAGACACAUAGUCUUGGCUCCAGUUUCGUUUCAGUUAUGCCCACCCUUUCAGUGUUCAUGGAUGUGCCCCUCGCCCACAAGCUAGAGGGCAGCUUGUUAAAGACCUACAAACAAGAUGAUUACCCGAACAAGAUAU\
) } def
/len { sequence length } bind def

/coor [
[147.89445496 285.95285034]
[157.75794983 274.61575317]
[169.16706848 264.83569336]
[161.16532898 252.14820862]
[153.16358948 239.46072388]
[145.16184998 226.77323914]
[137.16011047 214.08576965]
[129.15837097 201.39828491]
[122.92612457 197.41444397]
[121.13252258 188.44938660]
[113.33005524 175.63839722]
[105.52758789 162.82739258]
[97.72512054 150.01640320]
[89.92265320 137.20541382]
[82.12018585 124.39442444]
[72.59862518 112.80391693]
[61.54606628 102.66286469]
[50.49350739 92.52181244]
[35.09406662 88.89305878]
[30.94709969 74.58739471]
[19.89454079 64.44634247]
[4.49510193 60.81758881]
[0.34813288 46.51192856]
[-10.70442486 36.37087631]
[-26.10386467 32.74211884]
[-30.25083351 18.43646049]
[-41.30339050 8.29540634]
[-52.35594940 -1.84564638]
[-63.40850830 -11.98669910]
[-74.77262115 -21.77735519]
[-86.43717957 -31.20804787]
[-98.10174561 -40.63874054]
[-109.76631165 -50.06943512]
[-121.43087006 -59.50012589]
[-131.43855286 -55.76227188]
[-142.01397705 -56.51435089]
[-151.25009155 -61.55345917]
[-157.50932312 -69.90969086]
[-159.71382141 -80.03214264]
[-157.53065491 -90.07654572]
[-168.74035645 -100.04361725]
[-179.95007324 -110.01068878]
[-191.15977478 -119.97776031]
[-202.36947632 -129.94483948]
[-213.57917786 -139.91191101]
[-225.16969299 -149.43347168]
[-237.12330627 -158.49497986]
[-249.07691956 -167.55650330]
[-261.03054810 -176.61801147]
[-272.98416138 -185.67953491]
[-284.93777466 -194.74104309]
[-296.89138794 -203.80256653]
[-308.84500122 -212.86407471]
[-320.79861450 -221.92558289]
[-332.75222778 -230.98710632]
[-343.43408203 -228.88273621]
[-353.30578613 -232.92561340]
[-359.19509888 -241.55538940]
[-359.35430908 -251.78230286]
[-371.01885986 -261.21298218]
[-382.68344116 -270.64367676]
[-394.34799194 -280.07437134]
[-406.01254272 -289.50506592]
[-421.60864258 -292.16461182]
[-426.64129639 -306.18322754]
[-438.30584717 -315.61392212]
[-449.97042847 -325.04461670]
[-461.63497925 -334.47531128]
[-473.29953003 -343.90597534]
[-489.34060669 -343.65322876]
[-499.42800903 -356.12817383]
[-495.82357788 -371.76107788]
[-481.29229736 -378.55972290]
[-466.98135376 -371.30877686]
[-463.86886597 -355.57055664]
[-452.20428467 -346.13986206]
[-440.53973389 -336.70916748]
[-428.87515259 -327.27847290]
[-417.21060181 -317.84777832]
[-402.44885254 -315.86279297]
[-396.58184814 -301.16964722]
[-384.91729736 -291.73895264]
[-373.25274658 -282.30825806]
[-361.58816528 -272.87756348]
[-349.92361450 -263.44686890]
[-330.65808105 -261.85116577]
[-323.69070435 -242.94071960]
[-311.73709106 -233.87921143]
[-299.78347778 -224.81768799]
[-287.82986450 -215.75617981]
[-275.87625122 -206.69465637]
[-263.92263794 -197.63314819]
[-251.96902466 -188.57162476]
[-240.01541138 -179.51011658]
[-228.06178284 -170.44859314]
[-216.10816956 -161.38708496]
[-215.48921204 -176.37431335]
[-203.48124695 -185.36366272]
[-188.92660522 -181.73562622]
[-182.54296875 -168.16178894]
[-189.03106689 -154.63757324]
[-203.61210632 -151.12161255]
[-192.40240479 -141.15454102]
[-181.19270325 -131.18746948]
[-169.98300171 -121.22039795]
[-158.77328491 -111.25332642]
[-147.56358337 -101.28624725]
[-128.26002502 -103.85963440]
[-113.04470062 -91.22180176]
[-112.00017548 -71.16468811]
[-100.33561707 -61.73399734]
[-88.67105103 -52.30330658]
[-77.00649261 -42.87261200]
[-65.34192657 -33.44191742]
[-62.53590393 -33.60765076]
[-59.49498749 -32.66730881]
[-56.64181137 -30.52576256]
[-54.42561722 -27.24308014]
[-53.26745605 -23.03925705]
[-42.21489716 -12.89820480]
[-31.16233826 -2.75715137]
[-20.10977936 7.38390207]
[-5.50089407 10.28730011]
[-0.56337208 25.31831741]
[10.48918629 35.45936966]
[25.09807205 38.36277008]
[30.03559494 53.39378357]
[41.08815384 63.53483963]
[55.69703674 66.43824005]
[60.63455963 81.46925354]
[71.68711853 91.61030579]
[82.73967743 101.75135803]
[92.82769775 85.81085968]
[109.69854736 89.28994751]
[124.07584381 85.01286316]
[135.09690857 73.66179657]
[149.50202942 77.44885254]
[163.87931824 73.17176056]
[171.18284607 59.15626907]
[186.28254700 54.48994446]
[200.22003174 61.94123840]
[204.72645569 77.08943176]
[197.12821960 90.94736481]
[181.93324280 95.29338074]
[168.15640259 87.54905701]
[153.77911377 91.82614136]
[143.78640747 102.87128448]
[128.35292053 99.39015198]
[113.97563171 103.66724396]
[107.74539948 113.88461304]
[94.93117523 116.59195709]
[102.73364258 129.40295410]
[110.53610992 142.21394348]
[118.33857727 155.02493286]
[126.14104462 167.83592224]
[133.94351196 180.64691162]
[141.84585571 193.39654541]
[149.84759521 206.08403015]
[157.84933472 218.77149963]
[165.85107422 231.45898438]
[173.85281372 244.14646912]
[181.85455322 256.83395386]
[195.59602356 250.75202942]
[210.07662964 246.73579407]
[224.98768616 244.87083435]
[240.01138306 245.19692993]
[254.82748413 247.70709229]
[269.12017822 252.34783936]
[282.58483887 259.02023315]
[294.93444824 267.58209229]
[305.90576172 277.85089111]
[315.26492310 289.60772705]
[322.81250000 302.60205078]
[328.38754272 316.55688477]
[331.87124634 331.17471313]
[333.18933105 346.14404297]
[332.31375122 361.14575195]
[329.26315308 375.86007690]
[324.10256958 389.97341919]
[316.94195557 403.18490601]
[307.93395996 415.21295166]
[297.27059937 425.80117798]
[285.17916870 434.72390747]
[271.91738892 441.79095459]
[257.76794434 446.85165405]
[243.03239441 449.79815674]
[228.02487183 450.56765747]
[213.06524658 449.14376831]
[198.47239685 445.55682373]
[184.55734253 439.88327026]
[171.61669922 432.24404907]
[159.92630005 422.80197144]
[149.73533630 411.75833130]
[141.26100159 399.34851074]
[134.68394470 385.83703613]
[130.14434814 371.51190186]
[127.73899078 356.67840576]
[127.51912689 341.65277100]
[129.48944092 326.75527954]
[133.60795593 312.30343628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 162]
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[15 151]
[16 132]
[17 131]
[18 130]
[20 128]
[21 127]
[23 125]
[24 124]
[26 122]
[27 121]
[28 120]
[29 119]
[30 114]
[31 113]
[32 112]
[33 111]
[34 110]
[40 107]
[41 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 96]
[47 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 88]
[55 87]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[134 149]
[135 148]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
