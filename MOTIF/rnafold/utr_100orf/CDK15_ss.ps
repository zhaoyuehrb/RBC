%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGGCAAAAAGGGAGAGAACAAGGAUAGGAGAGGCAGUGGGGGAAAGGUUCAAGUGCGGGUUUUCUCCUUGAACCUACAAGAUUAUGGGUCAAGAGCUGUGUGCAAAGACUGUACAGCCUGGAUGCAGCUGCUACCAUUGUUCAGAGGGAGGCGAGGCACACAGCUGUCGGAGGAGUCAGCCUG\
) } def
/len { sequence length } bind def

/coor [
[113.09648895 210.87648010]
[110.34024811 196.13188171]
[107.58400726 181.38728333]
[104.82776642 166.64268494]
[102.07151794 151.89808655]
[99.31527710 137.15350342]
[96.55903625 122.40889740]
[94.94752502 137.32208252]
[82.85020447 146.19084167]
[68.14309692 143.24113464]
[60.40132141 130.39337158]
[64.66519928 116.01215363]
[78.15827942 109.46046448]
[63.34891129 111.84430695]
[48.53954697 114.22814941]
[33.73018265 116.61199188]
[18.92081833 118.99583435]
[4.11145306 121.37968445]
[-10.69791126 123.76352692]
[-25.50727654 126.14736938]
[-40.31664276 128.53121948]
[-55.12600708 130.91505432]
[-41.56605911 137.32815552]
[-31.63011551 148.56546021]
[-26.92586899 162.80871582]
[-28.21449089 177.75325012]
[-35.28747940 190.98098755]
[-47.00038147 200.35157776]
[-61.45797729 204.34880066]
[-76.32094574 202.32591248]
[-89.18437195 194.61019897]
[-97.96688080 182.45010376]
[-101.24739838 167.81323242]
[-98.49513245 153.06788635]
[-90.15540314 140.59997559]
[-77.57522583 132.42591858]
[-92.57045746 132.04795837]
[-107.56569672 131.66999817]
[-117.03556061 143.82022095]
[-131.67295837 148.01547241]
[-145.80677795 142.84838867]
[-154.08871460 130.49737549]
[-169.08395386 130.11941528]
[-184.07917786 129.74145508]
[-195.35839844 140.81190491]
[-211.16099548 140.58073425]
[-222.11157227 129.18510437]
[-221.71334839 113.38584137]
[-210.20259094 102.55635071]
[-194.40840149 103.12159729]
[-183.70121765 114.74621582]
[-168.70599365 115.12417603]
[-153.71075439 115.50213623]
[-144.81710815 103.58403015]
[-130.44091797 99.13554382]
[-116.03347015 104.06288910]
[-107.18773651 116.67475891]
[-92.19249725 117.05271912]
[-77.19726562 117.43067932]
[-72.14323425 113.32797241]
[-64.85016632 112.51659393]
[-57.50984955 116.10569000]
[-42.70048523 113.72184753]
[-27.89112091 111.33800507]
[-13.08175564 108.95416260]
[1.72760928 106.57031250]
[16.53697395 104.18647003]
[31.34633827 101.80262756]
[46.15570450 99.41878510]
[60.96506882 97.03494263]
[75.77443695 94.65109253]
[83.34706116 81.70291901]
[78.16416931 67.62677765]
[72.98128510 53.55064392]
[67.06730652 46.56110764]
[67.83173370 39.19426727]
[62.88604355 25.03304672]
[57.94035339 10.87182617]
[52.99466324 -3.28939342]
[38.09760284 -7.63188887]
[28.62472916 -19.92189407]
[28.21854973 -35.43365479]
[37.03525162 -48.20257568]
[51.68463135 -53.31875229]
[66.53370667 -48.81490707]
[75.87270355 -36.42286301]
[76.11058807 -20.90761185]
[67.15588379 -8.23508358]
[72.10157013 5.92613649]
[77.04726410 20.08735657]
[81.99295044 34.24857712]
[87.05741882 48.36775208]
[92.24031067 62.44388962]
[97.42320251 76.52002716]
[106.33695984 79.48166656]
[112.57548523 85.32212830]
[115.44496155 92.47187042]
[129.93927002 88.60987091]
[144.43357849 84.74787903]
[158.92788696 80.88587952]
[173.42219543 77.02388000]
[187.91650391 73.16188812]
[202.41081238 69.29988861]
[216.90512085 65.43788910]
[231.39942932 61.57589340]
[245.89373779 57.71389389]
[245.63058472 49.92709732]
[247.64146423 41.99507904]
[251.97299194 34.59420776]
[258.46871948 28.41095734]
[266.76843262 24.08080292]
[276.32611084 22.12800789]
[286.44497681 22.91172409]
[296.32858276 26.58349228]
[309.52383423 19.45011330]
[322.71908569 12.31673622]
[335.85397339 5.07277107]
[348.92752075 -2.28126979]
[362.00109863 -9.63531017]
[375.07467651 -16.98935127]
[381.03549194 -23.93896294]
[388.43020630 -24.35501289]
[401.62545776 -31.48839188]
[409.75390625 -45.73129654]
[426.15197754 -45.54271698]
[433.95074463 -31.11664772]
[425.12747192 -17.29339218]
[408.75885010 -18.29312897]
[395.56356812 -11.15975189]
[382.42871094 -3.91578698]
[369.35513306 3.43825388]
[356.28158569 10.79229450]
[343.20800781 18.14633560]
[338.91064453 24.17852974]
[329.85247803 25.51199722]
[316.65719604 32.64537430]
[303.46194458 39.77875137]
[304.27932739 47.23408127]
[305.91406250 62.14473343]
[306.73144531 69.60005951]
[321.15881348 73.70500946]
[335.58621216 77.80995178]
[350.01358032 81.91489410]
[364.44097900 86.01984406]
[376.56536865 76.33589935]
[392.06777954 75.66160583]
[404.98721313 84.25622559]
[410.35589600 98.81497192]
[406.10946655 113.73969269]
[393.88073730 123.29153442]
[378.37191772 123.79761505]
[365.54644775 115.06334686]
[360.33602905 100.44722748]
[345.90863037 96.34227753]
[331.48126221 92.23733521]
[317.05386353 88.13239288]
[302.62649536 84.02744293]
[270.22201538 91.28555298]
[249.75573730 72.20820618]
[235.26142883 76.07019806]
[220.76712036 79.93219757]
[206.27281189 83.79419708]
[191.77850342 87.65619659]
[177.28419495 91.51818848]
[162.78988647 95.38018799]
[148.29557800 99.24218750]
[133.80126953 103.10417938]
[119.30696106 106.96617889]
[111.30363464 119.65265656]
[114.05987549 134.39724731]
[116.81611633 149.14184570]
[119.57235718 163.88644409]
[122.32860565 178.63104248]
[125.08484650 193.37564087]
[127.84108734 208.12023926]
[142.58876038 212.05328369]
[154.16387939 222.00213623]
[160.26817322 235.99142456]
[159.68965149 251.24357605]
[152.54318237 264.73025513]
[140.24768066 273.77368164]
[125.24444580 276.57827759]
[110.51238251 272.58718872]
[98.97653961 262.59283447]
[92.92736816 248.57960510]
[93.56594849 233.32984924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[4 172]
[5 171]
[6 170]
[7 169]
[13 71]
[14 70]
[15 69]
[16 68]
[17 67]
[18 66]
[19 65]
[20 64]
[21 63]
[22 62]
[36 59]
[37 58]
[38 57]
[42 53]
[43 52]
[44 51]
[72 94]
[73 93]
[74 92]
[76 91]
[77 90]
[78 89]
[79 88]
[97 168]
[98 167]
[99 166]
[100 165]
[101 164]
[102 163]
[103 162]
[104 161]
[105 160]
[106 159]
[114 137]
[115 136]
[116 135]
[117 133]
[118 132]
[119 131]
[120 130]
[122 129]
[123 128]
[140 157]
[141 156]
[142 155]
[143 154]
[144 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
