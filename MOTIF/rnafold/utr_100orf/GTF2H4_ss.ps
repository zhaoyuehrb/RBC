%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUCCACUCCUCCCCUUACCUCCCUUCUCUUCUGAAUUCUCCAUUCUGGGCUCUUGCCUGUGAAAUCUUUCUUUGCUUUCCCCAUCUUUUCCUCGCAUUUUUUCACCAUCUUUCCCUCAAUCUCCAGGAGCCAAUGCGAGACUUUGGCUCCGAUUAAGCGACGGCCCGAGACUCGGGGUGCGCGAGGAGGAUCGACAGAGUGGUGAUGGAGAGCACCCCUUCAAGGGGACUGAACCGAGUACACCUACAAUGC\
AGGAAUCUGCAGGAAUUCUUAGGGGGCCUGAGCCCUGGGGUAUUGGACCGAU\
) } def
/len { sequence length } bind def

/coor [
[60.20565414 686.61743164]
[52.41858292 673.37896729]
[52.31006622 658.02044678]
[59.90929413 644.67327881]
[73.17211151 636.92773438]
[73.01911163 621.92852783]
[72.86611176 606.92932129]
[72.71311951 591.93011475]
[61.93390656 586.47222900]
[54.43788910 576.90490723]
[51.68508911 564.99267578]
[54.25345993 552.96569824]
[61.71884918 543.10223389]
[72.72364807 537.29699707]
[72.87664795 522.29779053]
[73.02964020 507.29855347]
[73.18264008 492.29931641]
[60.29074478 484.83843994]
[52.81454468 471.83990479]
[52.84867859 456.74468994]
[60.48411942 443.60708618]
[73.75685120 436.00564575]
[73.90985107 421.00643921]
[74.06285095 406.00720215]
[62.01268387 397.29333496]
[57.34906769 382.98547363]
[62.05975342 368.50573730]
[74.53752136 359.47183228]
[74.69052124 344.47262573]
[74.84352112 329.47338867]
[74.99651337 314.47418213]
[75.14951324 299.47494507]
[75.30250549 284.47573853]
[64.72743225 274.04965210]
[64.66892242 258.83612061]
[75.67646027 247.81471252]
[75.82946014 232.81549072]
[75.98246002 217.81626892]
[76.13545227 202.81704712]
[76.28845215 187.81782532]
[76.44144440 172.81860352]
[76.59444427 157.81938171]
[70.30580139 153.73245239]
[56.93853378 160.53804016]
[57.72852325 145.55859375]
[51.43988419 141.47166443]
[37.79540634 147.70289612]
[24.15092468 153.93411255]
[10.53840160 160.23484802]
[-3.04181170 166.60491943]
[-16.62202454 172.97499084]
[-30.20223808 179.34506226]
[-43.78245163 185.71513367]
[-52.70910263 199.47183228]
[-69.06979370 198.34938049]
[-76.03404236 183.50245667]
[-66.43762970 170.20429993]
[-50.15252304 172.13491821]
[-36.57230759 165.76484680]
[-22.99209595 159.39477539]
[-9.41188335 153.02470398]
[4.16832924 146.65463257]
[8.86535263 140.99850464]
[17.91969872 140.28962708]
[31.56418037 134.05841064]
[45.20866013 127.82718658]
[33.16067505 118.89151764]
[24.87665939 106.38652039]
[21.34729576 91.80764771]
[22.99465752 76.89837646]
[29.62173843 63.44171524]
[40.43600845 53.04692841]
[54.14419556 46.95713043]
[69.10694122 45.90059280]
[83.53485107 50.00366974]
[95.70273590 58.77590942]
[93.41668701 43.95113373]
[91.13063812 29.12635612]
[88.84458160 14.30158138]
[86.55853271 -0.52319419]
[84.27248383 -15.34797001]
[81.98643494 -30.17274475]
[79.70037842 -44.99752045]
[75.49895477 -30.59793663]
[67.64331055 -17.81948471]
[56.69141769 -7.56979990]
[43.42117310 -0.57690346]
[28.77514267 2.66251040]
[13.79361343 1.91835058]
[-0.45929968 -2.75652623]
[-12.97123241 -11.03007030]
[-22.85348129 -22.31462479]
[-29.40412521 -35.80866241]
[-32.15787888 -50.55372238]
[-30.91915321 -65.50248718]
[-25.77592659 -79.59317017]
[-17.09351730 -91.82492065]
[-5.48862505 -101.32894135]
[8.21447277 -107.43018341]
[23.04246521 -109.69527435]
[37.94214249 -107.96332550]
[51.85520172 -102.35736847]
[63.79341888 -93.27557373]
[72.90883636 -81.36301422]
[78.55338287 -67.46826935]
[79.31804657 -82.44876099]
[80.08271027 -97.42926025]
[80.84738159 -112.40975952]
[81.61204529 -127.39025116]
[82.37671661 -142.37074280]
[83.06497192 -157.35494995]
[83.67679596 -172.34246826]
[84.28862762 -187.32998657]
[77.12065887 -201.43426514]
[85.37064362 -213.83535767]
[85.98247528 -228.82287598]
[86.36492920 -243.81799316]
[86.51792908 -258.81719971]
[86.67092133 -273.81643677]
[86.82392120 -288.81564331]
[84.31295776 -293.27590942]
[83.78263855 -297.80435181]
[84.93475342 -301.64620972]
[87.21807861 -304.26962280]
[87.82991028 -319.25711060]
[88.44174194 -334.24462891]
[75.50332642 -331.42028809]
[60.54623795 -336.99957275]
[48.17014313 -351.58422852]
[44.23861694 -366.05984497]
[40.30709076 -380.53543091]
[36.37556458 -395.01104736]
[32.44404221 -409.48666382]
[28.51251602 -423.96224976]
[24.58098984 -438.43786621]
[20.64946556 -452.91345215]
[5.90810823 -457.46273804]
[-4.01609945 -469.27432251]
[-5.95637941 -484.57919312]
[0.70640427 -498.49359131]
[13.84618187 -506.57751465]
[29.27009773 -506.25140381]
[42.05643845 -497.61932373]
[48.12512589 -483.43569946]
[45.53966522 -468.22653198]
[35.12506866 -456.84500122]
[39.05659485 -442.36938477]
[42.98812103 -427.89376831]
[46.91964340 -413.41818237]
[50.85116959 -398.94256592]
[54.78269577 -384.46697998]
[58.71422195 -369.99136353]
[62.64574432 -355.51574707]
[70.13394928 -355.09524536]
[70.97500610 -370.07162476]
[71.81629181 -385.04803467]
[86.79267120 -384.20651245]
[85.95140839 -369.23059082]
[85.11035156 -354.25418091]
[92.59854889 -353.83364868]
[98.12610626 -367.77804565]
[103.65366364 -381.72244263]
[103.90003967 -390.80114746]
[109.30937195 -395.78039551]
[114.97887421 -409.66769409]
[113.03153992 -425.36859131]
[125.00536346 -434.22729492]
[130.67486572 -448.11459351]
[136.34436035 -462.00186157]
[142.01387024 -475.88916016]
[147.68336487 -489.77645874]
[148.07221985 -506.72595215]
[164.46694946 -511.04437256]
[173.15513611 -496.48580933]
[161.57064819 -484.10696411]
[155.90115356 -470.21966553]
[150.23165894 -456.33236694]
[144.56214905 -442.44509888]
[138.89265442 -428.55780029]
[141.24551392 -413.85021973]
[128.86616516 -403.99816895]
[123.19666290 -390.11090088]
[117.59806061 -376.19488525]
[112.07050323 -362.25048828]
[106.54294586 -348.30609131]
[103.42926025 -333.63281250]
[102.81742859 -318.64529419]
[102.20559692 -303.65777588]
[101.82314301 -288.66265869]
[101.67014313 -273.66342163]
[101.51715088 -258.66421509]
[101.36415100 -243.66499329]
[103.51077271 -240.92860413]
[104.46554565 -237.03303528]
[103.70506287 -232.53749084]
[100.96999359 -228.21104431]
[100.35816193 -213.22352600]
[107.56989288 -200.19125366]
[99.27614594 -186.71815491]
[98.66431427 -171.73063660]
[98.05249023 -156.74311829]
[100.90453339 -149.96672058]
[97.35720825 -141.60607910]
[96.59254456 -126.62558746]
[95.82787323 -111.64508820]
[95.06320953 -96.66459656]
[94.29854584 -81.68409729]
[93.53387451 -66.70359802]
[98.31568909 -57.90679550]
[94.52515411 -47.28357315]
[96.81120300 -32.45879745]
[99.09725952 -17.63402176]
[101.38330841 -2.80924535]
[103.66935730 12.01553059]
[105.95541382 26.84030533]
[108.24146271 41.66508102]
[110.52751160 56.48985672]
[122.58132172 65.41766357]
[137.42864990 63.28293991]
[152.27597046 61.14822006]
[167.12329102 59.01349640]
[181.97061157 56.87877274]
[196.78804016 48.63983154]
[208.80686951 60.59742737]
[200.64372253 75.45674896]
[184.10533142 71.72609711]
[169.25801086 73.86081696]
[154.41069031 75.99553680]
[139.56336975 78.13026428]
[124.71604156 80.26498413]
[124.94553375 95.26322937]
[139.85121155 96.94269562]
[154.75689697 98.62216187]
[166.95536804 88.57363892]
[182.67811584 90.17701721]
[192.59710693 102.48104095]
[190.82759094 118.18595886]
[178.41938782 127.97431183]
[162.73405457 126.03884888]
[153.07743835 113.52784729]
[138.17175293 111.84838104]
[123.26606750 110.16891479]
[120.71689606 117.22240448]
[134.82388306 122.32073975]
[148.93086243 127.41908264]
[163.03784180 132.51742554]
[177.14474487 137.61599731]
[172.04592896 151.72280884]
[157.93949890 146.62440491]
[143.83251953 141.52606201]
[129.72554016 136.42771912]
[115.61856079 131.32939148]
[113.06938934 138.38287354]
[125.60482025 146.62077332]
[138.14024353 154.85867310]
[150.67567444 163.09657288]
[163.21110535 171.33447266]
[179.60520935 171.74111938]
[187.21142578 186.26962280]
[178.20512390 199.97431946]
[161.85121155 198.75697327]
[154.97320557 183.86990356]
[142.43777466 175.63200378]
[129.90234375 167.39410400]
[117.36692047 159.15620422]
[104.83148956 150.91830444]
[91.59366608 157.97238159]
[91.44066620 172.97160339]
[91.28767395 187.97082520]
[91.13467407 202.97004700]
[90.98167419 217.96926880]
[90.82868195 232.96849060]
[90.67568207 247.96769714]
[101.45611572 259.21136475]
[101.08728027 274.42053223]
[90.30172729 284.62872314]
[90.14872742 299.62796021]
[89.99573517 314.62716675]
[89.84273529 329.62640381]
[89.68974304 344.62561035]
[89.53674316 359.62484741]
[101.82763672 368.91137695]
[106.24198151 383.48419189]
[101.28747559 397.69393921]
[89.06206512 406.16018677]
[88.90907288 421.15942383]
[88.75607300 436.15863037]
[101.87098694 444.02923584]
[109.23685455 457.31985474]
[108.96305847 472.41262817]
[101.22325897 485.25598145]
[88.18186188 492.45233154]
[88.02886200 507.45153809]
[87.87586212 522.45074463]
[87.72286987 537.44995117]
[102.61848450 547.86175537]
[108.19518280 564.99267578]
[102.38607025 581.87921143]
[87.71233368 591.77709961]
[87.86533356 606.77630615]
[88.01833344 621.77551270]
[88.17132568 636.77471924]
[101.58937836 644.24810791]
[109.45928955 657.43750000]
[109.66408539 672.79504395]
[102.14868164 686.18963623]
[88.93468475 694.01812744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 302]
[6 301]
[7 300]
[8 299]
[14 295]
[15 294]
[16 293]
[17 292]
[22 287]
[23 286]
[24 285]
[28 281]
[29 280]
[30 279]
[31 278]
[32 277]
[33 276]
[36 273]
[37 272]
[38 271]
[39 270]
[40 269]
[41 268]
[42 267]
[46 66]
[47 65]
[48 64]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[76 217]
[77 216]
[78 215]
[79 214]
[80 213]
[81 212]
[82 211]
[83 210]
[105 208]
[106 207]
[107 206]
[108 205]
[109 204]
[110 203]
[111 201]
[112 200]
[113 199]
[115 197]
[116 196]
[117 192]
[118 191]
[119 190]
[120 189]
[124 188]
[125 187]
[126 186]
[129 153]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
[135 147]
[136 146]
[160 185]
[161 184]
[162 183]
[164 182]
[165 181]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
[218 230]
[219 229]
[220 228]
[221 227]
[222 226]
[231 242]
[232 241]
[233 240]
[253 266]
[254 265]
[255 264]
[256 263]
[257 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
