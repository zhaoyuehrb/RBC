%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUCUACCCCGCAGUCCCAGGGUAUCGCAAGCCGUCCCUCACACCCCACCUCCAGCAACGCCCUCUCGCCCUGUCUCCCCCACCUUCACUGUGAGCUGCAGCCCCCAUGUCCCUGCCGUCCCCCUCACCCUCCCGGGAGCUGUGCCCACCUGACCCGGCAUUUGCGCCUUUGUCUUCGUGGCCCGGAAGUGGCCCCGCCGGCGGAA\
) } def
/len { sequence length } bind def

/coor [
[139.11941528 158.11453247]
[137.82524109 173.05859375]
[132.75778198 187.17669678]
[124.25304413 199.53265381]
[112.87500000 209.30711365]
[99.37813568 215.85192871]
[84.65744019 218.73310852]
[69.68906403 217.75961304]
[55.46557617 212.99597168]
[42.93014145 204.75807190]
[32.91400528 193.59219360]
[26.08134460 180.23873901]
[22.88524246 165.58319092]
[23.53763580 150.59738159]
[27.99526024 136.27503967]
[35.96253204 123.56588745]
[46.91112518 113.31267548]
[60.11503601 106.19532013]
[74.69869232 102.68576813]
[89.69573975 103.01685333]
[76.45034790 95.97699738]
[63.20495987 88.93713379]
[49.95956802 81.89727020]
[36.71417999 74.85740662]
[25.81166649 85.32606506]
[12.22560120 91.90339661]
[-2.70800924 93.95659637]
[-17.52495575 91.29705811]
[-30.77639198 84.19762421]
[-41.17050552 73.36464691]
[-47.69845200 59.86775589]
[-49.73225021 45.03421783]
[-47.08519745 30.31844330]
[-60.33058929 23.27858162]
[-76.14779663 23.63406563]
[-83.75501251 10.82861233]
[-97.00039673 3.78875113]
[-111.94431305 8.18388081]
[-125.27674103 0.85577488]
[-129.37472534 -13.41804981]
[-142.62011719 -20.45791054]
[-155.86550903 -27.49777222]
[-169.11090088 -34.53763199]
[-182.35629272 -41.57749557]
[-195.60168457 -48.61735535]
[-206.71328735 -35.84169006]
[-220.52801514 -26.06559753]
[-236.25764465 -19.84226418]
[-253.00582886 -17.52230263]
[-269.81912231 -19.23401070]
[-285.74130249 -24.87627602]
[-299.86761475 -34.12453842]
[-311.39642334 -46.44947052]
[-319.67443848 -61.14725113]
[-324.23397827 -77.37977600]
[-324.81915283 -94.22245026]
[-321.40045166 -110.71681976]
[-335.04495239 -116.94805145]
[-348.68942261 -123.17927551]
[-363.34222412 -117.89410400]
[-377.09091187 -124.40782928]
[-382.03921509 -138.40960693]
[-395.68368530 -144.64083862]
[-410.40206909 -138.88366699]
[-424.84674072 -145.29664612]
[-430.44799805 -160.07505798]
[-423.88265991 -174.45115662]
[-409.04583740 -179.89582825]
[-394.73995972 -173.17886353]
[-389.45245361 -158.28530884]
[-375.80798340 -152.05409241]
[-361.98568726 -157.48362732]
[-348.05947876 -151.35865784]
[-342.45819092 -136.82376099]
[-328.81372070 -130.59252930]
[-315.16921997 -124.36130524]
[-307.44613647 -135.03486633]
[-297.87139893 -144.09123230]
[-286.77709961 -151.21391296]
[-274.54852295 -156.15351868]
[-261.61068726 -158.73652649]
[-248.41355896 -158.87135315]
[-235.41653442 -156.55154419]
[-223.07228088 -151.85618591]
[-211.81112671 -144.94709778]
[-202.02593994 -136.06330872]
[-194.05848694 -125.51278687]
[-188.18746948 -113.66172028]
[-184.61880493 -100.92187500]
[-183.47836304 -87.73623657]
[-184.80755615 -74.56362915]
[-188.56181335 -61.86274719]
[-175.31642151 -54.82288361]
[-162.07102966 -47.78302383]
[-148.82565308 -40.74316025]
[-135.58026123 -33.70330048]
[-122.33486938 -26.66343880]
[-108.21129608 -31.25259018]
[-94.67829895 -24.30185509]
[-89.96054077 -9.45663834]
[-76.71514893 -2.41677737]
[-61.84533691 -3.27579951]
[-53.29072571 10.03319073]
[-40.04533768 17.07305336]
[-29.32909966 6.64600801]
[-15.89646339 0.03280932]
[-1.05736744 -2.10760236]
[13.73674393 0.44684494]
[27.03489685 7.45838642]
[37.52889252 18.25149155]
[44.18199921 31.77793121]
[46.33136368 46.71857071]
[43.75403976 61.61201859]
[56.99943161 68.65187836]
[70.24481964 75.69174194]
[83.49021149 82.73160553]
[96.73560333 89.77146912]
[110.95906067 94.53519440]
[125.77262115 96.89284515]
[140.58618164 99.25049591]
[155.39973450 101.60814667]
[170.21328735 103.96579742]
[177.61087036 90.75591278]
[189.06013489 80.89252472]
[203.16664124 75.55147552]
[218.22097778 75.35933685]
[232.40594482 80.31999207]
[244.01588440 89.81651306]
[251.66175842 102.68778992]
[254.43736267 117.37047577]
[269.25091553 119.72812653]
[284.08178711 121.97438049]
[298.92910767 124.10910034]
[313.68994141 118.41452026]
[325.18652344 127.88434601]
[340.03384399 130.01907349]
[354.88116455 132.15379333]
[369.72848511 134.28851318]
[384.57580566 136.42323303]
[374.81518555 125.03333282]
[373.49761963 110.09130859]
[381.11447144 97.16909027]
[394.82537842 91.08540344]
[409.51748657 94.10887909]
[419.71212769 105.11204529]
[421.60763550 119.99179840]
[414.49719238 133.19943237]
[401.03375244 139.80958557]
[415.51776123 143.71002197]
[430.00177002 147.61045837]
[444.48577881 151.51087952]
[459.48324585 142.50701904]
[476.02691650 147.04544067]
[484.00976562 161.84709167]
[498.55078125 165.52937317]
[513.09179688 169.21165466]
[527.95220947 159.98338318]
[544.56219482 164.27261353]
[552.76666260 178.95262146]
[567.36138916 182.41590881]
[581.95605469 185.87921143]
[595.27648926 177.37376404]
[610.69146729 180.85998535]
[619.05560303 194.26956177]
[615.40661621 209.64682007]
[601.90936279 217.86872864]
[586.57153320 214.05735779]
[578.49279785 200.47392273]
[563.89807129 197.01062012]
[549.30334473 193.54731750]
[539.38769531 201.77729797]
[526.34765625 202.80841064]
[514.92687988 196.04080200]
[509.40948486 183.75265503]
[494.86849976 180.07037354]
[480.32748413 176.38809204]
[470.28924561 184.46809387]
[457.23516846 185.30308533]
[445.91738892 178.36457825]
[440.58535767 165.99490356]
[426.10134888 162.09446716]
[411.61734009 158.19403076]
[397.13330078 154.29359436]
[382.44110107 151.27055359]
[367.59378052 149.13583374]
[352.74645996 147.00111389]
[337.89913940 144.86639404]
[323.05181885 142.73167419]
[309.35293579 148.57893372]
[296.79437256 138.95642090]
[281.94705200 136.82170105]
[274.87783813 138.98165894]
[266.89328003 134.54168701]
[252.07971191 132.18403625]
[244.88305664 145.27958679]
[233.61912537 155.14126587]
[219.63467407 160.56431580]
[204.61054993 160.87620544]
[190.35968018 156.01998901]
[178.60827637 146.56352234]
[170.78675842 133.63310242]
[167.85563660 118.77935791]
[153.04208374 116.42170715]
[138.22853088 114.06405640]
[123.41497040 111.70639801]
[108.60140991 109.34874725]
[120.77220154 118.11641693]
[130.30049133 129.70138550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 117]
[21 116]
[22 115]
[23 114]
[24 113]
[33 104]
[34 103]
[36 101]
[37 100]
[40 97]
[41 96]
[42 95]
[43 94]
[44 93]
[45 92]
[57 76]
[58 75]
[59 74]
[62 71]
[63 70]
[118 206]
[119 205]
[120 204]
[121 203]
[122 202]
[130 194]
[131 193]
[132 191]
[133 190]
[135 188]
[136 187]
[137 186]
[138 185]
[139 184]
[148 183]
[149 182]
[150 181]
[151 180]
[154 176]
[155 175]
[156 174]
[159 170]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
