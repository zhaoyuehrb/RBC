%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAGUUCCUGGUGCGUCACGGGGGAGUUCCUUAAAGGGGAAGCGAGCCGGGCUACGGGGCGAGCGCGGGGUGCGGUGGUCGGCGGGGAGGCCCCCGCGCUUUAAAAUAAUGCCCGCGGCGCCCGCGCGACCAUGCAAUGGCGAGCGCUCGUCCUGGGGCUGGUGCUCCUCCGGCUUGGCCUCCAUGGAGUAUUGUGGCUCGUCUUCGGGCUGGGGCCCAGCAUGGGCUUCU\
) } def
/len { sequence length } bind def

/coor [
[343.43649292 766.50878906]
[336.04815674 752.86053467]
[333.36660767 737.75439453]
[335.55496216 722.74835205]
[342.27978516 709.35455322]
[352.75634766 698.88696289]
[345.57974243 685.71514893]
[338.40310669 672.54339600]
[331.22647095 659.37158203]
[323.96121216 646.24847412]
[316.60763550 633.17468262]
[309.25405884 620.10083008]
[293.69326782 611.97326660]
[294.07278442 593.55590820]
[286.54360962 580.58245850]
[270.38330078 581.01135254]
[256.13183594 573.18304443]
[247.72857666 559.15319824]
[247.55073547 542.70629883]
[255.74169922 528.33477783]
[248.03829956 515.46398926]
[240.33488464 502.59317017]
[232.63146973 489.72238159]
[224.92807007 476.85159302]
[217.22465515 463.98077393]
[209.52125549 451.10998535]
[201.81784058 438.23916626]
[194.11444092 425.36837769]
[179.42018127 422.35528564]
[167.27304077 431.15570068]
[155.12591553 439.95611572]
[142.97877502 448.75650024]
[130.83164978 457.55691528]
[121.55233002 471.74603271]
[105.34897614 466.75729370]
[105.65721893 449.80612183]
[122.03124237 445.40979004]
[134.17837524 436.60937500]
[146.32550049 427.80895996]
[158.47264099 419.00857544]
[170.61976624 410.20816040]
[155.86740112 412.92251587]
[143.91333008 403.86160278]
[142.54029846 388.92456055]
[152.64222717 377.83624268]
[167.64221191 377.81573486]
[177.77430725 388.87594604]
[173.38980103 374.53106689]
[169.00529480 360.18615723]
[164.62080383 345.84124756]
[160.23629761 331.49636841]
[149.11672974 321.58654785]
[152.48233032 306.12747192]
[148.09782410 291.78256226]
[143.14448547 286.31304932]
[143.75231934 277.21463013]
[139.56163025 262.81192017]
[135.37094116 248.40919495]
[131.18023682 234.00648499]
[126.98954773 219.60377502]
[122.79885864 205.20106506]
[118.60816193 190.79835510]
[114.41747284 176.39564514]
[110.22677612 161.99293518]
[106.03608704 147.59022522]
[101.84539032 133.18750000]
[97.65470123 118.78479767]
[76.07354736 111.04755402]
[71.77381134 81.44824982]
[64.07040405 68.57744598]
[56.36699295 55.70664597]
[48.66358566 42.83584595]
[40.96017838 29.96504593]
[33.25677109 17.09424400]
[19.53052902 9.22653198]
[19.63332176 -5.66771841]
[11.92991352 -18.53851891]
[4.22650576 -31.40931892]
[-3.47690248 -44.28012085]
[-9.24929523 -40.13178253]
[-17.22951317 -38.31145859]
[-26.46103668 -39.69547653]
[-35.68658447 -44.77836227]
[-45.36278152 -56.24008942]
[-55.03898239 -67.70181274]
[-64.71517944 -79.16354370]
[-74.39138031 -90.62526703]
[-84.06758118 -102.08699036]
[-99.66961670 -107.13759613]
[-102.83160400 -123.22901917]
[-90.30077362 -133.80778503]
[-74.96775818 -127.99136353]
[-72.60585785 -111.76319122]
[-62.92965698 -100.30146790]
[-53.25345612 -88.83974457]
[-43.57725525 -77.37801361]
[-33.90105820 -65.91629028]
[-24.22485733 -54.45456314]
[-11.00498676 -61.54223251]
[-15.19567966 -75.94494629]
[-30.20811844 -78.92575836]
[-42.10843277 -88.55078125]
[-48.16201401 -102.60826111]
[-46.97779465 -117.86788940]
[-38.82790375 -130.82310486]
[-25.58511925 -138.49691772]
[-10.29254150 -139.12591553]
[3.53570890 -132.56558228]
[12.72200108 -120.32341003]
[15.15539265 -105.21258545]
[10.27670765 -90.70544434]
[-0.79296821 -80.13563538]
[3.39772463 -65.73292542]
[9.39389801 -51.98352814]
[17.09730530 -39.11272812]
[24.80071449 -26.24192619]
[32.50412369 -13.37112617]
[45.67936325 -6.42401981]
[46.12757111 9.39083672]
[53.83097839 22.26163673]
[61.53438568 35.13243866]
[69.23779297 48.00323868]
[76.94120026 60.87403870]
[84.64460754 73.74484253]
[92.14392853 73.64371490]
[99.46782684 60.55324554]
[107.14256287 73.44147491]
[114.64188385 73.34035492]
[121.99545288 60.26652527]
[123.47080994 51.26795197]
[129.53732300 47.06696320]
[137.06649780 34.09346771]
[144.59567261 21.11997414]
[152.12484741 8.14648056]
[154.84574890 -8.58770847]
[171.67916870 -10.60563183]
[178.27818298 5.01132345]
[165.09834290 15.67565346]
[157.56916809 28.64914703]
[150.03999329 41.62264252]
[142.51081848 54.59613800]
[135.06927490 67.62009430]
[127.71571350 80.69392395]
[126.11070251 103.57136536]
[112.05741119 114.59410095]
[116.24810028 128.99681091]
[120.43879700 143.39952087]
[124.62948608 157.80223083]
[128.82017517 172.20494080]
[133.01087952 186.60766602]
[137.20156860 201.01037598]
[141.39225769 215.41308594]
[145.58294678 229.81579590]
[149.77365112 244.21850586]
[153.96434021 258.62121582]
[158.15502930 273.02392578]
[162.44271851 287.39807129]
[166.82722473 301.74295044]
[178.26040649 312.67883301]
[174.58120728 327.11184692]
[178.96569824 341.45675659]
[183.35020447 355.80166626]
[187.73471069 370.14654541]
[192.11920166 384.49145508]
[206.98524475 417.66497803]
[214.68864441 430.53576660]
[222.39205933 443.40655518]
[230.09545898 456.27737427]
[237.79887390 469.14816284]
[245.50227356 482.01898193]
[253.20568848 494.88977051]
[260.90908813 507.76055908]
[268.61248779 520.63134766]
[282.56002808 519.68505859]
[295.49411011 524.81286621]
[304.91424561 534.96221924]
[309.02584839 548.11578369]
[307.08166504 561.69232178]
[299.51712036 573.05328369]
[307.04629517 586.02673340]
[319.28042603 590.08013916]
[325.28701782 601.02813721]
[322.32791138 612.74725342]
[329.68145752 625.82110596]
[337.03503418 638.89489746]
[343.95877075 644.82897949]
[344.39825439 652.19494629]
[351.57489014 665.36676025]
[358.75152588 678.53851318]
[365.92816162 691.71032715]
[382.09152222 688.50720215]
[398.57858276 691.18560791]
[413.28881836 699.56347656]
[424.29293823 712.72314453]
[430.08532715 729.10919189]
[429.78878784 746.71197510]
[423.28338623 763.31359863]
[433.70974731 774.09747314]
[444.13607788 784.88134766]
[454.56240845 795.66516113]
[464.98873901 806.44903564]
[475.41510010 817.23284912]
[491.32192993 821.22094727]
[495.56072998 837.06286621]
[483.77099609 848.46173096]
[468.08099365 843.69140625]
[464.63125610 827.65924072]
[454.20489502 816.87536621]
[443.77856445 806.09149170]
[433.35223389 795.30767822]
[422.92587280 784.52380371]
[412.49954224 773.73999023]
[399.57711792 781.35644531]
[403.96160889 795.70135498]
[408.34609985 810.04620361]
[412.73062134 824.39111328]
[417.11511230 838.73602295]
[421.49960327 853.08093262]
[425.88409424 867.42584229]
[430.26861572 881.77075195]
[440.68066406 895.15075684]
[430.70587158 908.85986328]
[414.77120972 903.06994629]
[415.92370605 886.15521240]
[411.53921509 871.81030273]
[407.15469360 857.46545410]
[402.77020264 843.12054443]
[398.38571167 828.77563477]
[394.00119019 814.43072510]
[389.61669922 800.08581543]
[385.23220825 785.74090576]
[369.28265381 783.92718506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 190]
[7 189]
[8 188]
[9 187]
[10 185]
[11 184]
[12 183]
[14 180]
[15 179]
[20 173]
[21 172]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[53 158]
[54 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[67 145]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[76 117]
[77 116]
[78 115]
[79 114]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[99 113]
[100 112]
[128 143]
[129 142]
[131 141]
[132 140]
[133 139]
[134 138]
[197 212]
[198 211]
[199 210]
[200 209]
[201 208]
[202 207]
[213 231]
[214 230]
[215 229]
[216 228]
[217 227]
[218 226]
[219 225]
[220 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
