%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUAACGCGACUACAGGGGGCUGGAAACAGUUCAGUCUUUGAUUGGUUGCUGAGAGGCGGGGCUACUCGACUGCUCUGGAGGUAGCGGCCGCGGUGAGGAGAGCCAUGGGACGGGCAGUCAAGGUUUUACAGCUCUUUAAAACACUGCACAGGACCAGACAACAAGUUUUUAAAAAUGAUGCCAGAGCAUUAGAAGCAGCCAGAA\
) } def
/len { sequence length } bind def

/coor [
[-103.90410614 369.14779663]
[-110.60799408 376.21060181]
[-118.62874603 381.71664429]
[-127.61222076 385.42739868]
[-137.16276550 387.18353271]
[-146.86053467 386.91168213]
[-156.28009033 384.62753296]
[-165.00892639 380.43499756]
[-172.66560364 374.52148438]
[-184.61172485 383.59289551]
[-196.55784607 392.66427612]
[-208.50396729 401.73568726]
[-220.45008850 410.80706787]
[-232.39620972 419.87844849]
[-244.34233093 428.94985962]
[-246.39440918 446.32135010]
[-260.10455322 456.63198853]
[-276.69671631 453.89279175]
[-288.50448608 463.14358521]
[-300.31222534 472.39437866]
[-312.11999512 481.64514160]
[-323.92773438 490.89593506]
[-335.73547363 500.14672852]
[-347.54324341 509.39749146]
[-359.35098267 518.64831543]
[-371.15875244 527.89904785]
[-382.96649170 537.14984131]
[-386.31988525 552.83850098]
[-400.74029541 559.86926270]
[-415.16564941 552.84863281]
[-418.53002930 537.16229248]
[-408.25259399 524.84350586]
[-392.21728516 525.34210205]
[-380.40951538 516.09130859]
[-368.60177612 506.84054565]
[-356.79400635 497.58975220]
[-344.98626709 488.33895874]
[-333.17852783 479.08819580]
[-321.37075806 469.83740234]
[-309.56301880 460.58660889]
[-297.75524902 451.33584595]
[-285.94750977 442.08505249]
[-286.19900513 429.20089722]
[-278.87384033 418.36300659]
[-266.46109009 413.65432739]
[-253.41372681 417.00372314]
[-241.46760559 407.93234253]
[-229.52148438 398.86093140]
[-217.57536316 389.78955078]
[-205.62924194 380.71817017]
[-193.68312073 371.64675903]
[-181.73699951 362.57537842]
[-187.15711975 342.70773315]
[-183.39938354 322.41406250]
[-171.17166138 305.73190308]
[-152.87095642 295.99749756]
[-132.11355591 295.17871094]
[-113.02048492 303.47717285]
[-102.25489807 293.03198242]
[-91.48931122 282.58679199]
[-92.25443268 272.39431763]
[-87.17528534 263.27230835]
[-77.71864319 258.35150146]
[-66.89649963 259.47140503]
[-55.82035065 249.35612488]
[-44.74420166 239.24084473]
[-43.63689423 234.59292603]
[-39.59660339 230.59208679]
[-33.17739105 228.99356079]
[-21.80078125 219.21742249]
[-23.19650841 204.41235352]
[-15.51592255 191.47123718]
[-1.52429259 185.46392822]
[13.49536991 188.88677979]
[24.87198067 179.11065674]
[36.24858856 169.33451843]
[47.62519836 159.55839539]
[59.00181198 149.78225708]
[70.37841797 140.00613403]
[81.75502777 130.22999573]
[93.13163757 120.45386505]
[76.32932281 107.98981476]
[76.50166321 84.06959534]
[69.33100891 70.89455414]
[62.16035843 57.71950912]
[47.89453125 49.63135529]
[48.03675461 33.23282623]
[62.44071960 25.39332008]
[76.28886414 34.17745209]
[75.33540344 50.54885864]
[82.50605011 63.72390366]
[89.67670441 76.89894867]
[104.67499542 77.12549591]
[112.24029541 64.17303467]
[119.80560303 51.22058105]
[127.37091064 38.26812363]
[134.93621826 25.31566620]
[142.50152588 12.36320877]
[141.30200195 -9.03094101]
[159.64118958 -18.49605370]
[166.61203003 -31.77789307]
[173.58288574 -45.05973434]
[180.55372620 -58.34157562]
[187.52458191 -71.62341309]
[194.49542236 -84.90525818]
[201.46627808 -98.18709564]
[196.99345398 -113.10794067]
[204.25207520 -126.47830963]
[218.50439453 -130.65051270]
[225.47523499 -143.93235779]
[232.44609070 -157.21420288]
[239.41693115 -170.49603271]
[246.38778687 -183.77787781]
[253.35862732 -197.05972290]
[244.61169434 -209.61956787]
[242.71502686 -224.80709839]
[248.10446167 -239.13233948]
[259.54156494 -249.30345154]
[274.39813232 -252.98318481]
[289.26028442 -249.32597351]
[300.71276855 -239.17219543]
[306.12390137 -224.85514832]
[304.25027466 -209.66474915]
[295.52236938 -197.09165955]
[281.94583130 -190.02508545]
[266.64047241 -190.08886719]
[259.66961670 -176.80703735]
[252.69877625 -163.52519226]
[245.72792053 -150.24334717]
[238.75708008 -136.96150208]
[231.78622437 -123.67967224]
[236.44880676 -109.58016968]
[229.56858826 -96.01119232]
[214.74810791 -91.21624756]
[207.77726746 -77.93441010]
[200.80641174 -64.65256500]
[193.83557129 -51.37072754]
[186.86473083 -38.08888626]
[179.89387512 -24.80704689]
[172.92303467 -11.52520561]
[176.91148376 -3.58809853]
[176.79727173 5.43163824]
[172.47949219 13.50793934]
[164.81561279 18.76853943]
[155.45397949 19.92851448]
[147.88867188 32.88097000]
[140.32336426 45.83342743]
[132.75805664 58.78588486]
[125.19275665 71.73834229]
[117.62744904 84.69080353]
[120.44516754 91.64137268]
[133.29408264 83.90152740]
[143.84971619 73.24420166]
[158.55746460 76.19078064]
[164.19300842 90.09188843]
[155.68920898 102.44848633]
[140.69195557 102.15015411]
[126.08059692 105.54251862]
[128.89831543 112.49309540]
[143.34738159 116.52107239]
[157.79643250 120.54904938]
[172.24549866 124.57702637]
[186.86938477 117.97992706]
[201.07872009 125.42803955]
[203.97332764 141.20779419]
[193.33270264 153.21432495]
[177.31944275 152.23724365]
[168.21752930 139.02609253]
[153.76846313 134.99810791]
[139.31939697 130.97013855]
[124.87033844 126.94215393]
[139.08316040 131.73751831]
[149.97352600 142.05256653]
[155.53245544 155.98448181]
[154.73451233 170.96324158]
[147.72689819 184.22572327]
[135.80230713 193.32539368]
[121.16044617 196.58363342]
[106.50232697 193.39939880]
[94.53190613 184.36007690]
[87.45738220 171.13317871]
[86.58379364 156.15863037]
[92.07228088 142.19882202]
[102.90776825 131.83047485]
[91.53115845 141.60661316]
[80.15454865 151.38273621]
[68.77793884 161.15887451]
[57.40133286 170.93499756]
[46.02472305 180.71113586]
[34.64810944 190.48725891]
[23.27150154 200.26339722]
[24.39546013 215.62709045]
[16.35130501 228.55554199]
[2.40185785 234.20150757]
[-12.02464962 230.59402466]
[-23.40126038 240.37016296]
[-34.62892151 250.31700134]
[-45.70507050 260.43228149]
[-56.78122330 270.54757690]
[-61.99909592 290.01739502]
[-81.04411316 293.35235596]
[-91.80970001 303.79757690]
[-102.57528687 314.24276733]
[-97.88153839 322.83666992]
[-95.08377838 332.21118164]
[-94.30117798 341.95385742]
[-95.56431580 351.63681030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[58 203]
[59 202]
[60 201]
[64 199]
[65 198]
[66 197]
[69 196]
[70 195]
[74 191]
[75 190]
[76 189]
[77 188]
[78 187]
[79 186]
[80 185]
[81 184]
[83 92]
[84 91]
[85 90]
[93 150]
[94 149]
[95 148]
[96 147]
[97 146]
[98 145]
[100 140]
[101 139]
[102 138]
[103 137]
[104 136]
[105 135]
[106 134]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
