%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCGCGUCGCUGUUGUCGCUGUUGCAGCCGAGUUCAGCCGGGAGCAGAGCGAACCGCACCGGCCCGAGCGGAGCGCCGCACGUUCCCAACCGCGAGGCCAGACAUCUGACUGUUGGUGUGAGACCAGUGCUCCUGGUGGUGUGCCCUGAGCCAUGGAGGCGCCUUUGCAGACAGAGAUGGUGGAGCUGGUGCCCAAUGGCAAACACUCAGAGGGGCUGCUCCCGGUCAUCACCCCCAUGGCAGGCAACCAGA\
) } def
/len { sequence length } bind def

/coor [
[187.36659241 608.49700928]
[176.82768250 619.17089844]
[162.45379639 623.45935059]
[147.78921509 620.30499268]
[136.44993591 610.48559570]
[131.23211670 596.42364502]
[126.33404541 610.60137939]
[121.43596649 624.77911377]
[124.24284363 640.34936523]
[112.77372742 649.85247803]
[107.87564087 664.03021240]
[111.51777649 680.01977539]
[99.30913544 690.96881104]
[83.80892944 685.61389160]
[80.96243286 669.46362305]
[93.69788361 659.13214111]
[98.59597015 644.95434570]
[95.43874359 630.39825439]
[107.25820160 619.88104248]
[112.15628815 605.70330811]
[117.05436707 591.52551270]
[114.83824921 580.83209229]
[122.75685883 571.48333740]
[126.05606079 556.85064697]
[129.35525513 542.21801758]
[132.65444946 527.58532715]
[135.95364380 512.95263672]
[129.84970093 496.48669434]
[142.48553467 483.07427979]
[145.60421753 468.40206909]
[148.72290039 453.72985840]
[151.84156799 439.05761719]
[143.22302246 419.19470215]
[158.57199097 402.85031128]
[160.96412659 388.04229736]
[149.02008057 376.76232910]
[146.13414001 360.42019653]
[153.64125061 345.43402100]
[168.75477600 337.80975342]
[170.96430969 322.97335815]
[173.17382812 308.13699341]
[175.38336182 293.30062866]
[177.59288025 278.46423340]
[179.80241394 263.62786865]
[182.01193237 248.79148865]
[184.22146606 233.95512390]
[186.43098450 219.11874390]
[188.64051819 204.28236389]
[190.85003662 189.44599915]
[182.58729553 201.96507263]
[168.39018250 206.80676270]
[154.19996643 201.94491577]
[145.95500183 189.41412354]
[147.10569763 174.45832825]
[157.17048645 163.33627319]
[171.93743896 160.70237732]
[185.22767639 167.65979004]
[176.11459351 155.74543762]
[167.00149536 143.83108521]
[157.88841248 131.91674805]
[148.77532959 120.00239563]
[139.66224670 108.08804321]
[60.35079575 126.00722504]
[46.84199524 119.48708344]
[33.33319473 112.96693420]
[19.82439423 106.44679260]
[6.27568626 100.00997925]
[-7.31241512 93.65675354]
[-23.69025993 103.61824036]
[-42.60960770 101.67742157]
[-56.40342331 88.80387115]
[-59.59246445 70.36039734]
[-73.40605164 64.51360321]
[-87.21962738 58.66681671]
[-101.03321075 52.82003021]
[-114.84679413 46.97324371]
[-128.66038513 41.12645340]
[-144.00923157 45.79468918]
[-157.14668274 36.58671570]
[-157.99481201 20.56609535]
[-145.90299988 10.02248192]
[-130.14706421 13.04403210]
[-122.81359100 27.31287193]
[-109.00000763 33.15966034]
[-95.18642426 39.00644684]
[-81.37284088 44.85323715]
[-67.55925751 50.70002365]
[-53.74567795 56.54681015]
[-45.48603058 49.11854553]
[-35.00748444 45.27909088]
[-23.80151558 45.61552048]
[-13.47828960 50.11760712]
[-5.53530979 58.17384720]
[-1.14020526 68.65422821]
[-0.95918727 80.06864929]
[12.62891388 86.42188263]
[19.99843216 86.40797424]
[26.34454155 92.93798828]
[39.85334015 99.45813751]
[53.36214066 105.97827911]
[66.87094116 112.49842834]
[72.38227844 107.41166687]
[83.40495300 97.23813629]
[88.91629028 92.15137482]
[83.49766541 78.16429138]
[78.07904053 64.17720795]
[72.66041565 50.19012451]
[67.24179077 36.20304108]
[52.20726013 32.36344147]
[42.32686615 20.39860153]
[41.39981842 4.90924311]
[49.78259277 -8.14865780]
[64.25183105 -13.75407219]
[79.24382782 -9.75160313]
[88.99384308 2.31971717]
[89.75280762 17.81822014]
[81.22887421 30.78441620]
[86.64749908 44.77149963]
[92.06612396 58.75858307]
[97.48474884 72.74566650]
[102.90337372 86.73274994]
[110.34071350 85.76525879]
[116.10227203 71.91590881]
[125.21537781 83.83026886]
[132.65270996 82.86277008]
[134.31250000 67.95488739]
[135.97229004 53.04699707]
[137.63208008 38.13911057]
[139.29187012 23.23122406]
[130.43595886 9.85391998]
[135.51007080 -5.36556959]
[150.62181091 -10.75215435]
[164.17871094 -2.17370749]
[165.78111267 13.78912067]
[154.19976807 24.89101601]
[152.53997803 39.79890060]
[150.88018799 54.70679092]
[149.22039795 69.61467743]
[147.56060791 84.52256012]
[151.57659912 98.97496033]
[160.68968201 110.88930511]
[169.80276489 122.80365753]
[178.91584778 134.71800232]
[188.02893066 146.63235474]
[197.14201355 158.54670715]
[211.34968567 163.35736084]
[225.82653809 159.43046570]
[240.27893066 155.41447449]
[254.70632935 151.30952454]
[269.13369751 147.20457458]
[283.56109619 143.09963989]
[297.82693481 138.46437073]
[311.91177368 133.30514526]
[325.99658203 128.14590454]
[340.08142090 122.98667908]
[354.16622925 117.82744598]
[358.38085938 105.05251312]
[369.02276611 97.14562225]
[382.08172607 96.80769348]
[392.79455566 103.93827820]
[406.94186401 98.95295715]
[421.08920288 93.96763611]
[435.23651123 88.98231506]
[449.38381958 83.99698639]
[463.53112793 79.01166534]
[475.20150757 64.75120544]
[492.31723022 68.68006134]
[506.40206909 63.52082825]
[516.69903564 51.50903702]
[531.31103516 54.39673996]
[545.39587402 49.23750687]
[551.50885010 37.90081024]
[563.32440186 33.88490295]
[574.34820557 38.82214737]
[588.49554443 33.83682632]
[598.74841309 21.03797531]
[614.91589355 23.78492737]
[620.36621094 39.25185776]
[609.49261475 51.52770996]
[593.48089600 47.98414230]
[579.33355713 52.96946716]
[568.63281250 66.89351654]
[550.55511475 63.32233429]
[536.47027588 68.48156738]
[527.18072510 80.12433624]
[511.56130981 77.60565186]
[497.47647095 82.76488495]
[492.11624146 93.58935547]
[480.44692993 98.01218414]
[468.51644897 93.15898132]
[454.36914062 98.14431000]
[440.22183228 103.12963104]
[426.07452393 108.11495209]
[411.92718506 113.10027313]
[397.77987671 118.08559418]
[391.15835571 133.55874634]
[375.07308960 139.56085205]
[359.32546997 131.91226196]
[345.24066162 137.07150269]
[331.15582275 142.23074341]
[317.07098389 147.38996887]
[302.98617554 152.54920959]
[316.19213867 159.66273499]
[320.60952759 173.99754333]
[313.69808960 187.31039429]
[299.43228149 191.94573975]
[286.01562500 185.23800659]
[281.16339111 171.04449463]
[287.66604614 157.52702332]
[273.23864746 161.63195801]
[258.81127930 165.73690796]
[244.38388062 169.84185791]
[238.82618713 174.68148804]
[229.75343323 173.90731812]
[215.27656555 177.83421326]
[214.32586670 183.50177002]
[210.97706604 188.44210815]
[205.68641663 191.65551758]
[203.47688293 206.49189758]
[201.26736450 221.32827759]
[199.05783081 236.16464233]
[196.84831238 251.00102234]
[194.63877869 265.83740234]
[192.42926025 280.67376709]
[190.21972656 295.51013184]
[188.01020813 310.34652710]
[185.80068970 325.18289185]
[183.59115601 340.01925659]
[194.10823059 348.90432739]
[198.83108521 361.72152710]
[196.62876892 375.09289551]
[188.18070984 385.55017090]
[175.77215576 390.43441772]
[173.38002014 405.24246216]
[179.38937378 410.94653320]
[182.63383484 418.46838379]
[182.65805054 426.56637573]
[179.53178406 433.93496704]
[173.82678223 439.41503906]
[166.51377869 442.17630005]
[163.39511108 456.84851074]
[160.27642822 471.52072144]
[157.15776062 486.19296265]
[163.50942993 497.39767456]
[160.62889099 509.54003906]
[150.58631897 516.25183105]
[147.28712463 530.88452148]
[143.98793030 545.51721191]
[140.68873596 560.14984131]
[137.38954163 574.78253174]
[149.22959900 565.57318115]
[164.03979492 563.19445801]
[178.16824341 568.23303223]
[188.13113403 579.44647217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[10 17]
[11 16]
[23 250]
[24 249]
[25 248]
[26 247]
[27 246]
[29 243]
[30 242]
[31 241]
[32 240]
[34 234]
[35 233]
[39 228]
[40 227]
[41 226]
[42 225]
[43 224]
[44 223]
[45 222]
[46 221]
[47 220]
[48 219]
[49 218]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 140]
[63 101]
[64 100]
[65 99]
[66 98]
[67 96]
[68 95]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[146 215]
[147 214]
[148 212]
[149 211]
[150 210]
[151 209]
[152 202]
[153 201]
[154 200]
[155 199]
[156 198]
[160 195]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[167 187]
[168 186]
[170 184]
[171 183]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
