%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCUUUCACUGCAAGGCGGCGGCAGGAGAGGUUGUGGUGCUAGUUUCUCUAAGCCAUCCAGUGCCAUCCUCGUCGCUGCAGCGACACACGCUCUCGCCGCCGCCAUGACUGAGCAGAUGACCCUUCGUGGCACCCUCAAGGGCCACAACGGCUGGGUAACCCAGAUCGCUACUACCCCGCAGUUCCCGGACAUGAUCCUCUCCG\
) } def
/len { sequence length } bind def

/coor [
[100.05059814 285.58288574]
[92.76274109 280.96600342]
[86.86220551 274.64608765]
[82.73764801 267.02539062]
[80.66428375 258.59222412]
[80.78554535 249.88970947]
[83.10317993 241.48086548]
[87.47656250 233.91210938]
[93.63114166 227.67776489]
[101.17568970 223.18780518]
[98.45894623 208.43588257]
[95.74220276 193.68395996]
[93.02545929 178.93203735]
[90.30871582 164.18011475]
[71.79180145 137.46324158]
[73.74448395 112.03765106]
[89.15197754 99.28694153]
[74.80408478 94.91225433]
[60.45619202 90.53755951]
[46.10829544 86.16287231]
[31.76040077 81.78818512]
[17.41250420 77.41349792]
[3.06460977 73.03880310]
[-11.28328514 68.66411591]
[-25.63117981 64.28942871]
[-41.08796310 67.66559601]
[-51.00537872 56.55280685]
[-65.35327148 52.17811584]
[-79.70117188 47.80342865]
[-111.75811005 59.30402374]
[-126.75768280 59.41785049]
[-141.75724792 59.53167343]
[-156.75682068 59.64550018]
[-162.64567566 62.66212845]
[-168.32135010 62.30343246]
[-172.21165466 59.52821732]
[-187.20776367 59.18677139]
[-202.20388794 58.84532166]
[-217.19999695 58.50387573]
[-232.19610596 58.16242599]
[-247.19223022 57.82098007]
[-262.18832397 57.47953033]
[-277.18444824 57.13808441]
[-295.99533081 69.31271362]
[-314.04562378 57.37207794]
[-329.03482056 57.94107056]
[-344.02401733 58.51006317]
[-359.01324463 59.07905579]
[-372.59838867 68.26469421]
[-387.22558594 60.85007858]
[-387.84765625 44.46273422]
[-373.82464600 35.96055603]
[-359.58221436 44.08985138]
[-344.59301758 43.52085876]
[-329.60382080 42.95186615]
[-314.61462402 42.38287354]
[-310.61004639 35.59052658]
[-304.17004395 30.87993813]
[-296.30065918 29.07892990]
[-288.26806641 30.55346298]
[-281.39501953 35.13621140]
[-276.84301758 42.14197159]
[-261.84689331 42.48341751]
[-246.85076904 42.82486725]
[-231.85466003 43.16631317]
[-216.85855103 43.50776291]
[-201.86244202 43.84920883]
[-186.86631775 44.19065857]
[-171.87020874 44.53210449]
[-156.87063599 44.64593124]
[-141.87107849 44.53210449]
[-126.87150574 44.41828156]
[-111.87194061 44.30445480]
[-105.58428955 30.68588448]
[-115.22610474 19.19521904]
[-124.86791992 7.70455170]
[-134.50973511 -3.78611469]
[-144.15155029 -15.27678108]
[-159.73837280 -20.37411308]
[-162.85214233 -36.47493744]
[-150.28965759 -47.01610565]
[-134.97415161 -41.15376663]
[-132.66087341 -24.91859627]
[-123.01906586 -13.42792892]
[-113.37725067 -1.93726230]
[-103.73543549 9.55340481]
[-94.09362030 21.04407120]
[-94.84130096 6.06271648]
[-85.34996033 -5.55255175]
[-70.52000427 -7.80474567]
[-58.00816727 0.46894789]
[-54.27434540 14.99680233]
[-61.24631119 28.27805519]
[-75.32648468 33.45553207]
[-60.97858429 37.83022308]
[-46.63069153 42.20491028]
[-32.20016861 38.51583862]
[-21.25649071 49.94153214]
[-6.90859652 54.31622314]
[7.43929863 58.69091034]
[21.78719330 63.06560135]
[36.13508987 67.44029236]
[50.48298264 71.81497955]
[64.83087921 76.18966675]
[79.17877197 80.56435394]
[93.52667236 84.93904877]
[83.03254700 74.22114563]
[69.18641663 68.45185852]
[57.32601547 59.26866913]
[48.27355576 47.30819702]
[42.65657806 33.39958191]
[40.86447525 18.50702095]
[43.02148056 3.66292000]
[48.97806549 -10.10367298]
[58.32129669 -21.83840942]
[70.40346527 -30.72779274]
[84.38700104 -36.15558243]
[99.30249786 -37.74549866]
[114.11597443 -35.38732910]
[127.80049896 -29.24454498]
[139.40740967 -19.74298859]
[148.13208008 -7.54134417]
[153.36967468 6.51452827]
[154.75712585 21.45022392]
[152.19821167 36.23034668]
[145.87036133 49.83028412]
[136.21223450 61.30723953]
[123.89776611 69.86332703]
[115.89981842 82.55319977]
[129.00251770 75.25120544]
[142.10522461 67.94921112]
[155.20793152 60.64722061]
[168.31063843 53.34523010]
[174.28578186 46.43189240]
[181.66807556 46.03356934]
[194.88008118 38.93126678]
[200.85906982 24.04397964]
[216.26701355 19.57466507]
[229.28427124 28.95180130]
[229.92510986 44.98204803]
[217.69793701 55.36837769]
[201.98239136 52.14328003]
[188.77037048 59.24558258]
[175.61264038 66.44793701]
[162.50993347 73.74993134]
[149.40722656 81.05191803]
[136.30451965 88.35391235]
[123.20180511 95.65590668]
[124.50417328 103.04196167]
[127.10889435 117.81407928]
[128.41125488 125.20013428]
[143.22120667 127.58037567]
[158.03114319 129.96061707]
[172.85871887 132.22839355]
[187.70307922 134.38360596]
[202.54745483 136.53881836]
[217.39181519 138.69401550]
[232.23617554 140.84922791]
[248.77970886 137.14138794]
[256.92233276 152.01196289]
[244.88700867 163.95295715]
[230.08096313 155.69358826]
[215.23660278 153.53837585]
[200.39224243 151.38317871]
[185.54788208 149.22796631]
[170.70352173 147.07276917]
[163.63020325 149.22335815]
[155.65090942 144.77055359]
[140.84095764 142.39031982]
[126.03101349 140.01008606]
[120.78842163 145.37339783]
[132.64422607 154.56253052]
[144.50003052 163.75164795]
[158.17840576 169.90811157]
[160.96585083 184.64685059]
[150.48045349 195.37327576]
[135.68218994 192.92144775]
[129.21646118 179.38716125]
[119.75984955 167.74360657]
[110.30323792 156.10005188]
[105.06064606 161.46336365]
[107.77738953 176.21528625]
[110.49412537 190.96722412]
[113.21086884 205.71914673]
[115.92761230 220.47106934]
[136.39006042 228.39776611]
[147.84828186 246.95890808]
[145.78945923 268.54281616]
[131.20623779 284.40994263]
[135.47192383 298.79061890]
[139.73760986 313.17129517]
[144.00329590 327.55197144]
[158.95767212 331.05368042]
[170.14669800 341.57516479]
[174.56057739 356.28613281]
[171.01200867 371.22946167]
[160.45552063 382.38546753]
[145.73077393 386.75320435]
[130.79862976 383.15780640]
[119.67578125 372.56640625]
[115.35420990 357.82803345]
[118.99639893 342.90725708]
[129.62261963 331.81765747]
[125.35692596 317.43698120]
[121.09123993 303.05630493]
[116.82555389 288.67562866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[17 106]
[18 105]
[19 104]
[20 103]
[21 102]
[22 101]
[23 100]
[24 99]
[25 98]
[27 96]
[28 95]
[29 94]
[30 73]
[31 72]
[32 71]
[33 70]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[45 56]
[46 55]
[47 54]
[48 53]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[135 143]
[136 142]
[151 170]
[152 169]
[153 168]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
[189 206]
[190 205]
[191 204]
[192 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
