%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCGGACAGGUCAGGCCAAGGUCUCAGCCACGUGACUGUGUUCCGGCUCGGUAAAGAUGGCGGCGCCCAGGGCGGUAGCGUGAAACUUGGUGGAAGACGCUGACCAGUCGUGUUGGAAUCAAAACAGCGGGGACCCUGCGCCAUGUCGCGACUGAUCGUGAAGAAUCUCCCGAAUGGGAUGAAGGAGGAGCGUUUCAGGCAGCUGUUUGCCGCCUUCGGCACGCUGACAGACUGCAGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[-159.96752930 658.76043701]
[-171.48365784 668.37182617]
[-186.31454468 670.61791992]
[-200.16017151 664.84741211]
[-209.00617981 652.73345947]
[-210.28826904 637.79071045]
[-219.41333008 649.69592285]
[-228.53839111 661.60107422]
[-237.66345215 673.50628662]
[-246.78851318 685.41143799]
[-255.83705139 697.37487793]
[-264.80871582 709.39605713]
[-273.78036499 721.41729736]
[-282.75204468 733.43847656]
[-291.72369385 745.45971680]
[-300.46249390 757.65124512]
[-308.96517944 770.00854492]
[-317.46786499 782.36590576]
[-310.79077148 796.19744873]
[-311.93997192 811.51330566]
[-320.60641479 824.19354248]
[-334.45883179 830.82727051]
[-349.77099609 829.63006592]
[-362.42401123 820.92388916]
[-369.01428223 807.05078125]
[-367.76904297 791.74243164]
[-359.02331543 779.11676025]
[-345.12957764 772.57000732]
[-329.82522583 773.86322021]
[-321.32254028 761.50585938]
[-312.81982422 749.14849854]
[-313.08642578 745.65393066]
[-311.68765259 741.85601807]
[-308.49890137 738.53259277]
[-303.74490356 736.48803711]
[-294.77322388 724.46679688]
[-285.80157471 712.44561768]
[-276.82992554 700.42443848]
[-267.85824585 688.40319824]
[-266.37976074 681.17932129]
[-258.69369507 676.28637695]
[-249.56861877 664.38122559]
[-240.44355774 652.47601318]
[-231.31849670 640.57086182]
[-222.19343567 628.66564941]
[-220.89669800 617.73718262]
[-210.31123352 611.39672852]
[-202.45327759 598.61968994]
[-194.59530640 585.84271240]
[-186.73733521 573.06567383]
[-178.96144104 560.23852539]
[-171.26795959 547.36175537]
[-163.57446289 534.48504639]
[-155.88098145 521.60833740]
[-164.07858276 510.43057251]
[-167.41128540 496.93106079]
[-165.34469604 483.13690186]
[-158.15773010 471.13244629]
[-146.90553284 462.74432373]
[-133.26467896 459.26348877]
[-119.28336334 461.24661255]
[-111.42539978 448.46957397]
[-103.56742859 435.69256592]
[-95.70946503 422.91552734]
[-98.20948029 411.09460449]
[-91.78644562 400.39099121]
[-79.41014862 396.81198120]
[-71.38899231 384.13677979]
[-63.36783600 371.46154785]
[-63.10013580 356.56936646]
[-49.18245316 349.04547119]
[-41.16129684 336.37026978]
[-33.14014053 323.69506836]
[-25.11898613 311.01983643]
[-17.09783173 298.34463501]
[-9.07667637 285.66940308]
[-1.05552077 272.99420166]
[6.96563435 260.31896973]
[14.98678970 247.64376831]
[22.43119621 234.62144470]
[29.28386497 221.27824402]
[28.21555901 206.42201233]
[41.40277863 197.68084717]
[48.25544739 184.33764648]
[55.10811615 170.99446106]
[61.96078110 157.65126038]
[68.81344604 144.30805969]
[75.66611481 130.96485901]
[56.91164398 108.28752899]
[58.13367081 75.76666260]
[82.79945374 50.00633621]
[73.67439270 38.10115814]
[64.54932404 26.19598198]
[55.42426682 14.29080486]
[39.77203369 10.77126122]
[32.89461517 -3.72289920]
[40.06777954 -18.07299614]
[55.78888702 -21.27086449]
[67.99804688 -10.86337185]
[67.32944489 5.16574287]
[76.45450592 17.07092094]
[85.57956696 28.97609711]
[94.70462799 40.88127518]
[109.37014771 37.73125076]
[112.80165100 23.12903214]
[108.42655945 7.92478418]
[118.87025452 -2.69493675]
[122.30175781 -17.29715538]
[125.73326111 -31.89937401]
[129.16476440 -46.50159073]
[132.59626770 -61.10380936]
[136.02777100 -75.70602417]
[139.45927429 -90.30824280]
[142.89079285 -104.91046143]
[136.22401428 -123.95009613]
[150.11408997 -137.42057800]
[153.17001343 -152.10598755]
[156.22595215 -166.79139709]
[144.51908875 -157.41326904]
[129.74449158 -154.82260132]
[115.54530334 -159.65818787]
[105.42273712 -170.72767639]
[101.87281036 -185.30155945]
[105.77086639 -199.78620911]
[116.15573120 -210.61001587]
[130.46669006 -215.10403442]
[145.17497253 -212.16015625]
[156.65380859 -202.50424194]
[162.07260132 -188.51849365]
[166.79922485 -202.75433350]
[171.52584839 -216.99017334]
[176.25247192 -231.22601318]
[180.97909546 -245.46183777]
[180.23182678 -262.39932251]
[196.30050659 -267.80615234]
[205.94429016 -253.86218262]
[195.21493530 -240.73521423]
[190.48831177 -226.49938965]
[185.76168823 -212.26354980]
[181.03506470 -198.02770996]
[176.30844116 -183.79187012]
[178.65008545 -173.17214966]
[170.91136169 -163.73547363]
[167.85542297 -149.05006409]
[164.79949951 -134.36465454]
[171.13316345 -126.38124084]
[172.05848694 -116.01248169]
[167.03138733 -106.64715576]
[157.49301147 -101.47895813]
[154.06149292 -86.87673950]
[150.62998962 -72.27452087]
[147.19848633 -57.67230606]
[143.76698303 -43.07008743]
[140.33547974 -28.46786880]
[136.90397644 -13.86565018]
[133.47247314 0.73656797]
[138.09300232 14.89636707]
[127.40386963 26.56053734]
[123.97235870 41.16275406]
[129.18998718 46.55037308]
[139.20208740 35.38087463]
[144.08760071 21.19877815]
[158.72999573 17.94297409]
[169.16493225 28.71849632]
[165.44071960 43.24881363]
[151.10987854 47.67665482]
[139.62521362 57.32561493]
[144.84283447 62.71323395]
[159.54754639 59.75151825]
[174.23295593 56.69558334]
[188.89846802 53.54555893]
[203.56398010 50.39553452]
[218.22949219 47.24551010]
[230.02342224 35.85097504]
[245.71166992 40.62704849]
[249.15551758 56.66051102]
[236.81222534 67.45751190]
[221.37951660 61.91102600]
[206.71400452 65.06105042]
[192.04849243 68.21107483]
[177.38298035 71.36109924]
[171.51666260 75.82846069]
[162.50926208 74.45621490]
[147.80455017 77.41793823]
[150.36965942 89.16837311]
[150.16452026 100.88685608]
[147.33976746 111.94528198]
[142.18280029 121.78233337]
[135.09547424 129.93194580]
[126.56604004 136.04513550]
[117.13755798 139.90415955]
[107.37428284 141.42857361]
[97.82847595 140.67306519]
[89.00931549 137.81752014]
[82.15664673 151.16072083]
[75.30397797 164.50392151]
[68.45131683 177.84712219]
[61.59864426 191.19032288]
[54.74597931 204.53352356]
[55.32413483 220.34416199]
[42.62706375 228.13092041]
[35.77439499 241.47412109]
[49.97439575 236.64089966]
[63.99774170 241.96496582]
[71.41228485 255.00431824]
[68.81716156 269.77813721]
[57.40269089 279.51000977]
[42.40439606 279.73623657]
[30.70161247 270.35302734]
[27.66200447 255.66491699]
[19.64085007 268.34014893]
[11.61969376 281.01535034]
[3.59853864 293.69058228]
[-4.42261648 306.36578369]
[-12.44377232 319.04098511]
[-20.46492767 331.71621704]
[-28.48608208 344.39141846]
[-36.50723648 357.06665039]
[-37.34866333 372.86544800]
[-50.69262314 379.48269653]
[-58.71377563 392.15792847]
[-66.73493195 404.83312988]
[-67.06512451 423.25476074]
[-82.93244171 430.77349854]
[-90.79040527 443.55050659]
[-98.64837646 456.32754517]
[-106.50634003 469.10455322]
[-97.60469055 482.73687744]
[-95.55194855 498.82946777]
[-100.70927429 514.14947510]
[-111.99446869 525.64141846]
[-127.10860443 531.03680420]
[-143.00424194 529.30181885]
[-150.69773865 542.17852783]
[-158.39122009 555.05529785]
[-166.08471680 567.93200684]
[-167.79313660 576.88171387]
[-173.96031189 580.92364502]
[-181.81828308 593.70062256]
[-189.67625427 606.47766113]
[-197.53421021 619.25469971]
[-183.11763000 615.11199951]
[-168.64268494 619.04595947]
[-158.30619812 629.91595459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[11 39]
[12 38]
[13 37]
[14 36]
[15 35]
[16 31]
[17 30]
[18 29]
[47 241]
[48 240]
[49 239]
[50 238]
[51 236]
[52 235]
[53 234]
[54 233]
[61 227]
[62 226]
[63 225]
[64 224]
[67 222]
[68 221]
[69 220]
[71 218]
[72 217]
[73 216]
[74 215]
[75 214]
[76 213]
[77 212]
[78 211]
[79 210]
[80 202]
[81 201]
[83 199]
[84 198]
[85 197]
[86 196]
[87 195]
[88 194]
[91 103]
[92 102]
[93 101]
[94 100]
[104 159]
[105 158]
[107 156]
[108 155]
[109 154]
[110 153]
[111 152]
[112 151]
[113 150]
[114 149]
[116 145]
[117 144]
[118 143]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[168 184]
[169 183]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
