%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:38:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUGGCGGCGGGCGGCGCGGGGGCACUUGUUGUUCUUCGCGAAGUCGGAGCCCGAGCGCCAGGCGGCGGCGGCGGCCGAGGGGAGCGCGACAGUGAGCGCCGGCGCGAGGACAGCGCGUGCCCGCGAGGAGCCGCCGCGCGCCCGCGCCCUCCGCGCGACGCCAGCUACGAGUUCCAGGGAGCUCUGUCCUGGUGACCGUGCCCGGGUUAUGACGACUAAUCCCAAACCGAAUAAGGCAUUAAAGGUCAAGAA\
GGAGGCGGGCGAGAACGCCCCGGUGCUCAGCGAUGAUGAGCUGGUGUCCAUGUCGG\
) } def
/len { sequence length } bind def

/coor [
[392.10363770 114.53414917]
[377.10668945 114.23209381]
[362.10971069 113.93003082]
[347.11276245 113.62797546]
[334.23226929 121.10742188]
[320.59069824 113.09379578]
[305.59375000 112.79174042]
[295.06307983 123.26268005]
[279.84970093 123.16999054]
[268.93823242 112.05345154]
[253.94126892 111.75139618]
[238.94432068 111.44934082]
[223.94735718 111.14728546]
[208.95039368 110.84523010]
[193.95344543 110.54317474]
[178.95648193 110.24111938]
[172.24140930 113.23208618]
[163.81024170 109.85976410]
[148.81709290 109.40671539]
[133.82392883 108.95367432]
[118.83077240 108.50062561]
[103.83761597 108.04758453]
[88.84236908 108.42513275]
[73.89100647 109.63213348]
[58.93965149 110.83913422]
[43.98828888 112.04613495]
[29.03693008 113.25312805]
[14.08557129 114.46012878]
[0.95274252 123.28279114]
[-12.35585308 116.59470367]
[-27.30721283 117.80169678]
[-42.25857162 119.00869751]
[-57.20993042 120.21569824]
[-72.16129303 121.42269897]
[-87.11264801 122.62969208]
[-95.36342621 126.42204285]
[-102.22050476 123.77279663]
[-117.18325806 124.82919312]
[-132.14601135 125.88558197]
[-147.10876465 126.94197083]
[-162.07151794 127.99836731]
[-177.03428650 129.05476379]
[-191.99703979 130.11114502]
[-196.92112732 146.25686646]
[-210.80122375 158.32929993]
[-230.46434021 161.48237610]
[-250.23884583 153.20971680]
[-264.64663696 157.38296509]
[-279.05438232 161.55622864]
[-293.46215820 165.72949219]
[-305.93951416 179.30485535]
[-322.80648804 174.37992859]
[-337.17150879 178.69804382]
[-351.53652954 183.01617432]
[-354.99710083 194.32417297]
[-363.38320923 202.49159241]
[-374.54833984 205.58825684]
[-385.71060181 202.96185303]
[-394.14578247 195.37142944]
[-408.59484863 199.39939880]
[-423.04391479 203.42738342]
[-437.49298096 207.45535278]
[-448.57888794 219.53984070]
[-464.52639771 215.71774292]
[-468.93011475 199.92092896]
[-457.25982666 188.39979553]
[-441.52093506 193.00630188]
[-427.07186890 188.97831726]
[-412.62283325 184.95033264]
[-398.17376709 180.92236328]
[-390.10809326 164.44688416]
[-372.23828125 159.05778503]
[-355.85464478 168.65115356]
[-341.48962402 164.33302307]
[-327.12460327 160.01490784]
[-321.14566040 149.53727722]
[-309.25485229 145.80229187]
[-297.63543701 151.32173157]
[-283.22766113 147.14846802]
[-268.81988525 142.97520447]
[-254.41210938 138.80194092]
[-254.22334290 131.30432129]
[-269.21859741 130.92675781]
[-282.01608276 123.10218811]
[-268.84103394 115.93151093]
[-253.84577942 116.30906677]
[-253.65699768 108.81143951]
[-267.83648682 103.91840363]
[-282.01599121 99.02536011]
[-296.19549561 94.13231659]
[-308.83465576 103.13404083]
[-324.35070801 102.95380402]
[-336.77734375 93.66091156]
[-341.33633423 78.82867432]
[-336.27462769 64.16038513]
[-323.53854370 55.29630661]
[-308.02539062 55.64484787]
[-295.70025635 65.07199860]
[-291.30245972 79.95281982]
[-277.12295532 84.84586334]
[-262.94345093 89.73890686]
[-248.76396179 94.63194275]
[-230.37156677 87.77165222]
[-212.33772278 90.52189636]
[-199.03601074 100.87677002]
[-193.05342102 115.14839172]
[-178.09066772 114.09200287]
[-163.12791443 113.03560638]
[-148.16516113 111.97921753]
[-133.20240784 110.92282867]
[-118.23965454 109.86643219]
[-103.27689362 108.81004333]
[-88.31964874 107.67833710]
[-73.36828613 106.47133636]
[-58.41693115 105.26433563]
[-43.46557236 104.05734253]
[-28.51421165 102.85034180]
[-13.56285095 101.64334106]
[-1.49944401 92.90701294]
[12.87857246 99.50876617]
[27.82993317 98.30177307]
[42.78129196 97.09477234]
[57.73265076 95.88777161]
[72.68401337 94.68077850]
[87.63536835 93.47377777]
[94.60621643 80.19193268]
[87.10621643 67.20155334]
[72.04433441 61.67714310]
[67.10946655 46.41193390]
[76.08721924 33.11608887]
[92.09063721 31.98904610]
[102.84326172 43.89537430]
[100.09659576 59.70155716]
[107.59659576 72.69193268]
[107.72336578 79.80873108]
[106.60222626 86.65262604]
[104.29066467 93.05442047]
[119.28382111 93.50746918]
[134.27697754 93.96051788]
[149.27012634 94.41355896]
[164.26329041 94.86660767]
[179.25852966 95.24416351]
[194.25549316 95.54621887]
[209.25245667 95.84827423]
[224.24940491 96.15032959]
[239.24636841 96.45238495]
[254.24333191 96.75444031]
[269.24029541 97.05649567]
[280.59054565 86.38834381]
[295.79528809 86.90830231]
[305.89578247 97.79477692]
[320.89276123 98.09683228]
[334.84591675 90.63899994]
[347.41482544 98.63101959]
[362.41177368 98.93307495]
[377.40872192 99.23513031]
[392.40570068 99.53718567]
[407.66131592 82.20259094]
[430.47778320 82.04956818]
[445.59609985 98.77062225]
[460.57708740 98.01574707]
[475.55810547 97.26087952]
[490.53909302 96.50600433]
[505.52008057 95.75113678]
[520.50109863 94.99626160]
[535.48205566 94.24139404]
[550.46307373 93.48651886]
[565.44403076 92.73165131]
[580.42504883 91.97677612]
[588.78662109 88.43535614]
[595.56054688 91.29049683]
[610.54833984 90.68650818]
[625.91192627 80.49165344]
[641.11016846 89.31000519]
[656.09118652 88.55513000]
[671.07214355 87.80026245]
[676.43017578 76.57273865]
[685.98437500 68.71795654]
[697.89666748 65.66809082]
[709.90850830 67.93844604]
[719.76910400 75.04153442]
[725.65698242 85.59016418]
[740.65014648 85.13711548]
[755.64331055 84.68407440]
[770.63647461 84.23102570]
[784.19665527 76.08045197]
[797.15179443 83.42981720]
[812.14495850 82.97676849]
[827.13812256 82.52372742]
[855.69952393 47.09836197]
[870.39636230 44.09797668]
[885.09320068 41.09759140]
[899.79010010 38.09720612]
[909.19262695 23.31582642]
[926.04949951 19.99944305]
[939.79785156 29.72659683]
[954.46374512 26.57838058]
[969.12963867 23.43016243]
[983.79553223 20.28194618]
[998.46142578 17.13372993]
[1013.06097412 13.69082355]
[1027.58825684 9.95462418]
[1042.11547852 6.21842432]
[1056.64270020 2.48222470]
[1071.16992188 -1.25397503]
[1085.59851074 -5.35464716]
[1099.91931152 -9.81719303]
[1114.24011230 -14.27973843]
[1113.79187012 -29.36952591]
[1117.43261719 -44.02039719]
[1124.89208984 -57.14516449]
[1135.61669922 -67.76987457]
[1148.81066895 -75.10611725]
[1163.49499512 -78.60948181]
[1178.57995605 -78.02000427]
[1192.94604492 -73.38141632]
[1205.52734375 -65.03794861]
[1215.39025879 -53.60872650]
[1221.80273438 -39.94187927]
[1224.28894043 -25.05158234]
[1222.66455078 -10.04278946]
[1217.05004883 3.97074533]
[1207.86193848 15.94912529]
[1195.78210449 25.00347519]
[1181.70703125 30.46190071]
[1166.68115234 31.91935349]
[1151.81933594 29.26767731]
[1138.22460938 22.70364571]
[1126.90576172 12.71435452]
[1118.70275879 0.04107443]
[1104.38195801 4.50362015]
[1090.06103516 8.96616650]
[1102.11071777 17.89955521]
[1102.74267578 32.88623810]
[1091.48779297 42.80227661]
[1076.70007324 40.28744507]
[1069.35583496 27.20838737]
[1074.90612793 13.27326870]
[1060.37890625 17.00946808]
[1045.85168457 20.74566841]
[1031.32446289 24.48186874]
[1016.79718018 28.21806717]
[1015.26025391 30.50275040]
[1012.74938965 32.33275604]
[1009.42761230 33.34267807]
[1005.58416748 33.23070526]
[1001.60968018 31.79963303]
[986.94372559 34.94784927]
[972.27783203 38.09606552]
[957.61193848 41.24428177]
[942.94604492 44.39250183]
[937.55218506 56.06075287]
[926.26220703 62.60371399]
[913.06945801 61.44900513]
[902.79046631 52.79406357]
[888.09362793 55.79444885]
[873.39672852 58.79483414]
[858.69989014 61.79521942]
[856.86840820 69.06815338]
[867.63397217 79.51332855]
[853.20538330 83.61402893]
[851.37384033 90.88696289]
[862.89685059 100.49015045]
[874.41979980 110.09334564]
[885.94274902 119.69654083]
[897.46569824 129.29972839]
[913.70855713 131.55848694]
[919.62225342 146.85424805]
[909.12335205 159.45202637]
[893.01214600 156.39233398]
[887.86254883 140.82269287]
[876.33953857 131.21949768]
[864.81658936 121.61631012]
[853.29364014 112.01311493]
[841.77069092 102.40992737]
[827.59118652 97.51688385]
[812.59802246 97.96992493]
[797.60485840 98.42297363]
[785.11706543 106.54114532]
[771.08953857 99.22418213]
[756.09637451 99.67723083]
[741.10321045 100.13027191]
[726.11004639 100.58332062]
[716.81182861 115.64548492]
[700.17199707 122.13074493]
[682.82946777 117.24750519]
[671.82702637 102.78125000]
[656.84606934 103.53612518]
[641.86505127 104.29099274]
[633.55236816 113.03330231]
[621.11328125 113.81410217]
[611.15234375 105.67433929]
[596.16455078 106.27832794]
[581.17993164 106.95777130]
[566.19891357 107.71263885]
[551.21795654 108.46751404]
[536.23693848 109.22238159]
[521.25592041 109.97725677]
[506.27496338 110.73213196]
[491.29394531 111.48699951]
[476.31295776 112.24187469]
[461.33197021 112.99674225]
[446.35098267 113.75161743]
[443.87033081 120.61979675]
[439.65115356 126.61280823]
[433.98049927 131.29838562]
[427.25061035 134.33404541]
[419.93203735 135.49206543]
[412.54043579 134.67654419]
[405.60049438 131.93112183]
[399.60852051 127.43698120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[4 154]
[6 152]
[7 151]
[10 148]
[11 147]
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[18 141]
[19 140]
[20 139]
[21 138]
[22 137]
[23 125]
[24 124]
[25 123]
[26 122]
[27 121]
[28 120]
[30 118]
[31 117]
[32 116]
[33 115]
[34 114]
[35 113]
[37 112]
[38 111]
[39 110]
[40 109]
[41 108]
[42 107]
[43 106]
[47 81]
[48 80]
[49 79]
[50 78]
[52 75]
[53 74]
[54 73]
[59 70]
[60 69]
[61 68]
[62 67]
[87 102]
[88 101]
[89 100]
[90 99]
[126 134]
[127 133]
[160 303]
[161 302]
[162 301]
[163 300]
[164 299]
[165 298]
[166 297]
[167 296]
[168 295]
[169 294]
[171 293]
[172 292]
[174 289]
[175 288]
[176 287]
[182 283]
[183 282]
[184 281]
[185 280]
[187 278]
[188 277]
[189 276]
[190 258]
[191 257]
[192 256]
[193 255]
[196 251]
[197 250]
[198 249]
[199 248]
[200 247]
[201 242]
[202 241]
[203 240]
[204 239]
[205 238]
[206 232]
[207 231]
[208 230]
[262 275]
[263 274]
[264 273]
[265 272]
[266 271]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
