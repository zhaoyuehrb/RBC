%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAGAGACCUGAGAGGCACCAGGCCCAGCCGUGGCACCACACACCUCCCAGCUCUGCAGACGAGAUGCAGCGACUGUGUGUGUAUGUGCUGAUCUUUGCACUGGCUCUGGCCGCCUUCUCUGAAGCUUCUUGGAAGCCCCGCUCCCAGCAGCCAGAUGCACCCU\
) } def
/len { sequence length } bind def

/coor [
[99.14126587 128.69226074]
[90.98168182 126.70934296]
[83.88898468 122.50375366]
[78.43859100 116.51918030]
[64.47547913 121.99929047]
[50.51237488 127.47940826]
[36.54927063 132.95951843]
[22.58616257 138.43963623]
[8.62305737 143.91975403]
[4.16442680 148.89242554]
[-1.31686342 150.58116150]
[-5.96600914 149.33296204]
[-20.12425995 154.28713989]
[-34.28250885 159.24133301]
[-44.75279236 171.10235596]
[-59.32131958 168.00279236]
[-73.47956848 172.95697021]
[-87.63782501 177.91116333]
[-101.79607391 182.86535645]
[-101.84355927 191.23312378]
[-104.94672394 199.48979187]
[-111.00949097 206.50727844]
[-119.51835632 211.22120667]
[-129.57901001 212.78450012]
[-140.00889587 210.70191956]
[-153.27062988 217.71095276]
[-166.53236389 224.71998596]
[-177.71070862 237.46678162]
[-193.05383301 230.25393677]
[-190.37026978 213.51371765]
[-173.54138184 211.45825195]
[-160.27966309 204.44921875]
[-147.01792908 197.44020081]
[-151.30503845 183.06588745]
[-166.23953247 184.46633911]
[-181.17401123 185.86679077]
[-191.06288147 198.19505310]
[-206.78166199 199.83686829]
[-219.00466919 189.81820679]
[-220.48020935 174.08294678]
[-210.33288574 161.96655273]
[-194.58290100 160.65745544]
[-182.57446289 170.93231201]
[-167.63998413 169.53186035]
[-152.70550537 168.13140869]
[-127.42256927 155.83184814]
[-106.75025940 168.70709229]
[-92.59201050 163.75291443]
[-78.43375397 158.79872131]
[-64.27550507 153.84454346]
[-54.81791687 142.33787537]
[-39.23669434 145.08308411]
[-25.07844543 140.12889099]
[-10.92019463 135.17471313]
[3.14294171 129.95664978]
[17.10604858 124.47653198]
[31.06915474 118.99641418]
[45.03226089 113.51630402]
[58.99536514 108.03618622]
[72.95847321 102.55606842]
[73.16370392 91.70886993]
[77.68885803 81.45252991]
[86.08538818 73.49038696]
[97.24225616 69.25807953]
[109.52928925 69.67059326]
[108.40834045 54.71253967]
[107.28738403 39.75448227]
[106.16643524 24.79642677]
[105.04547882 9.83836937]
[101.26996613 1.47392154]
[104.04608917 -5.40940952]
[103.20503235 -20.38581085]
[102.36397552 -35.36221313]
[101.52291870 -50.33861542]
[97.90446472 -58.77219772]
[100.80882263 -65.60241699]
[100.24794769 -80.59192657]
[86.41172791 -87.13543701]
[77.21054840 -99.36641693]
[74.75877380 -114.47427368]
[79.61979675 -128.98733521]
[90.67660522 -139.57060242]
[105.38841248 -143.79212952]
[120.37456512 -140.68182373]
[132.19134521 -130.95442200]
[138.12333679 -116.84520721]
[136.80743408 -101.59637451]
[128.54600525 -88.71199036]
[115.23746490 -81.15279388]
[115.79833221 -66.16328430]
[116.49932098 -51.17967224]
[117.34037781 -36.20326996]
[118.18143463 -21.22686768]
[119.02249146 -6.25046635]
[120.00354004 8.71741772]
[121.12448883 23.67547417]
[122.24544525 38.63352966]
[123.36639404 53.59158707]
[124.48734283 68.54964447]
[134.37753296 79.82723999]
[149.06130981 82.89102173]
[163.74508667 85.95480347]
[178.42886353 89.01858521]
[193.14064026 91.94493866]
[207.87913513 94.73361206]
[222.61763000 97.52228546]
[237.35612488 100.31095886]
[252.09461975 103.09963226]
[266.83312988 105.88830566]
[281.59704590 108.53905487]
[296.38510132 111.05165100]
[311.17318726 113.56424713]
[325.96124268 116.07683563]
[338.76196289 107.20108032]
[353.72338867 109.95986938]
[362.10617065 122.21810913]
[376.89422607 124.73069763]
[391.76589966 126.68859100]
[406.70040894 128.08905029]
[421.63488770 129.48950195]
[436.56936646 130.88995361]
[451.50384521 132.29040527]
[463.60549927 122.48287201]
[478.73123169 124.11588287]
[488.00662231 135.71339417]
[502.94113159 137.11384583]
[517.61297607 129.78796387]
[531.14221191 139.05570984]
[529.61114502 155.38322449]
[514.59478760 161.97416687]
[501.54064941 152.04832458]
[486.60617065 150.64787292]
[475.33636475 160.31880188]
[460.17071533 159.11128235]
[450.10339355 147.22488403]
[435.16891479 145.82443237]
[420.23443604 144.42398071]
[405.29992676 143.02352905]
[390.36544800 141.62307739]
[388.10607910 143.34846497]
[385.01315308 144.26358032]
[381.39895630 144.04106140]
[377.69021606 142.47520447]
[374.38165283 139.51876831]
[359.59356689 137.00617981]
[347.63256836 145.80786133]
[332.59957886 143.47039795]
[323.44863892 130.86489868]
[308.66058350 128.35231018]
[293.87252808 125.83971405]
[279.08444214 123.32712555]
[271.93356323 125.31510162]
[264.04443359 120.62680054]
[249.30595398 117.83812714]
[234.56745911 115.04945374]
[219.82896423 112.26078033]
[205.09045410 109.47210693]
[190.35195923 106.68343353]
[183.16516113 108.53735352]
[175.36508179 103.70235443]
[160.68130493 100.63858032]
[145.99752808 97.57479858]
[131.31375122 94.51101685]
[131.04368591 103.81191254]
[128.11532593 112.48436737]
[122.86801910 119.79910278]
[115.83181000 125.16848755]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 60]
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[12 54]
[13 53]
[14 52]
[16 50]
[17 49]
[18 48]
[19 47]
[25 33]
[26 32]
[27 31]
[34 45]
[35 44]
[36 43]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[71 94]
[72 93]
[73 92]
[74 91]
[76 90]
[77 89]
[100 163]
[101 162]
[102 161]
[103 160]
[104 158]
[105 157]
[106 156]
[107 155]
[108 154]
[109 153]
[110 151]
[111 150]
[112 149]
[113 148]
[116 145]
[117 144]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
