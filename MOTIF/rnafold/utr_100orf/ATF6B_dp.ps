%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATF6B)
} def

/sequence { (\
AACCGUCUCCUGGUUGGGGGGUGGGGGGGAAAGAUGGCGGAGCUGAUGCUGCUCAGCGAGAUUGCUGACCCGACGCGUUUCUUCACCGACAACCUGCUUAGCCCGGAGGACUGGGGUCUGCAGAACAGCACCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.006758459 ubox
2 14 0.007568315 ubox
2 117 0.037098252 ubox
3 13 0.007664970 ubox
3 24 0.004158351 ubox
3 109 0.014939238 ubox
3 114 0.888499887 ubox
3 115 0.034944731 ubox
3 116 0.039143327 ubox
4 12 0.007667603 ubox
4 23 0.004507771 ubox
4 108 0.013223634 ubox
4 113 0.899286682 ubox
4 114 0.038158417 ubox
4 115 0.039021739 ubox
5 11 0.006380482 ubox
5 22 0.004266579 ubox
5 111 0.838717357 ubox
5 112 0.443736735 ubox
6 20 0.005308329 ubox
6 21 0.004022229 ubox
6 107 0.003796306 ubox
6 109 0.553357639 ubox
6 110 0.793033240 ubox
7 19 0.008289704 ubox
7 20 0.007846568 ubox
7 106 0.003842814 ubox
7 108 0.804028176 ubox
7 109 0.593643254 ubox
8 18 0.008355633 ubox
8 19 0.007863754 ubox
8 105 0.003699223 ubox
8 107 0.961029793 ubox
8 108 0.269908668 ubox
8 110 0.011125715 ubox
8 116 0.004441412 ubox
9 17 0.008699212 ubox
9 18 0.007948501 ubox
9 106 0.995037252 ubox
9 108 0.019901167 ubox
9 109 0.011502387 ubox
9 115 0.006267177 ubox
10 16 0.008704460 ubox
10 17 0.007949377 ubox
10 101 0.003784576 ubox
10 105 0.994316850 ubox
10 106 0.095961499 ubox
10 108 0.011531768 ubox
10 114 0.006645888 ubox
11 16 0.007444020 ubox
11 100 0.005972896 ubox
11 105 0.095661573 ubox
11 107 0.011349455 ubox
11 113 0.006636939 ubox
12 98 0.004800124 ubox
12 99 0.005627395 ubox
12 103 0.995276890 ubox
12 104 0.086710644 ubox
12 112 0.006848419 ubox
13 97 0.006021379 ubox
13 98 0.005138146 ubox
13 102 0.997645407 ubox
13 103 0.065349049 ubox
13 111 0.006903271 ubox
14 96 0.005496403 ubox
14 101 0.998163743 ubox
14 110 0.006890328 ubox
15 96 0.235898747 ubox
15 100 0.950118341 ubox
15 109 0.006823696 ubox
16 94 0.014001019 ubox
16 95 0.551262206 ubox
16 98 0.316820933 ubox
16 99 0.762694023 ubox
17 93 0.013395594 ubox
17 94 0.631080612 ubox
17 95 0.179914031 ubox
17 97 0.424245234 ubox
17 98 0.616786102 ubox
17 99 0.005369450 ubox
18 93 0.632148819 ubox
18 94 0.198401242 ubox
18 95 0.144051160 ubox
18 97 0.601398297 ubox
18 98 0.005167599 ubox
18 104 0.010402667 ubox
19 93 0.202331386 ubox
19 94 0.258755189 ubox
19 95 0.608010697 ubox
19 97 0.005423225 ubox
19 103 0.010436074 ubox
20 87 0.003833735 ubox
20 93 0.258471125 ubox
20 94 0.645095763 ubox
20 95 0.244098561 ubox
20 98 0.003221854 ubox
20 102 0.010461816 ubox
20 132 0.005044075 ubox
21 86 0.003944849 ubox
21 90 0.743452620 ubox
21 93 0.634496192 ubox
21 94 0.195135714 ubox
21 97 0.003422238 ubox
21 131 0.005085824 ubox
22 85 0.004013535 ubox
22 88 0.192845181 ubox
22 89 0.777247859 ubox
22 91 0.279281883 ubox
22 92 0.503148774 ubox
22 96 0.003500305 ubox
22 100 0.010526170 ubox
22 130 0.005080516 ubox
23 84 0.003963038 ubox
23 87 0.360497608 ubox
23 90 0.386901908 ubox
23 94 0.004576962 ubox
23 95 0.003488234 ubox
23 99 0.010563728 ubox
23 129 0.005053660 ubox
24 83 0.003689199 ubox
24 86 0.359300274 ubox
24 87 0.859005693 ubox
24 93 0.004796746 ubox
24 94 0.003549099 ubox
24 98 0.010636460 ubox
25 84 0.063670230 ubox
25 86 0.859387554 ubox
25 87 0.134921751 ubox
25 93 0.003548847 ubox
25 97 0.010657839 ubox
26 83 0.061908856 ubox
26 84 0.917087733 ubox
26 86 0.133149491 ubox
26 87 0.252893968 ubox
27 82 0.060699902 ubox
27 83 0.929695097 ubox
27 84 0.093457341 ubox
27 86 0.251706542 ubox
27 87 0.208921958 ubox
27 95 0.010602514 ubox
28 81 0.059146836 ubox
28 82 0.940611920 ubox
28 83 0.067469814 ubox
28 84 0.171165769 ubox
28 86 0.209547914 ubox
28 87 0.008418051 ubox
28 94 0.010639542 ubox
29 80 0.056696223 ubox
29 81 0.944922848 ubox
29 82 0.011445625 ubox
29 83 0.170404210 ubox
29 84 0.185679719 ubox
29 86 0.008407414 ubox
29 93 0.010622719 ubox
30 79 0.055279364 ubox
30 80 0.944216858 ubox
30 82 0.166845815 ubox
30 83 0.179325205 ubox
31 78 0.051952946 ubox
31 79 0.940186783 ubox
31 80 0.016397110 ubox
31 82 0.162273577 ubox
31 83 0.201530748 ubox
32 78 0.933824455 ubox
32 79 0.019453969 ubox
32 80 0.202570774 ubox
32 82 0.213213920 ubox
33 78 0.019639295 ubox
33 79 0.222988258 ubox
33 80 0.075016503 ubox
33 81 0.223023897 ubox
34 78 0.229772445 ubox
34 79 0.083177046 ubox
34 80 0.214450667 ubox
35 51 0.003747792 ubox
35 72 0.011211004 ubox
35 75 0.848883834 ubox
35 77 0.230029585 ubox
35 88 0.010115756 ubox
36 44 0.007582197 ubox
36 50 0.007043664 ubox
36 53 0.018112400 ubox
36 66 0.003336773 ubox
36 70 0.004573381 ubox
36 71 0.012363920 ubox
36 74 0.843823041 ubox
36 76 0.214552673 ubox
36 79 0.060302883 ubox
36 87 0.011307759 ubox
37 43 0.007995685 ubox
37 49 0.008427220 ubox
37 52 0.053388298 ubox
37 57 0.009323310 ubox
37 65 0.003833594 ubox
37 69 0.004596882 ubox
37 70 0.011731408 ubox
37 76 0.239136786 ubox
37 78 0.074980447 ubox
37 86 0.011312023 ubox
38 42 0.007939548 ubox
38 48 0.008433583 ubox
38 51 0.053489765 ubox
38 56 0.009306605 ubox
38 64 0.003840195 ubox
38 72 0.935238335 ubox
38 75 0.251258010 ubox
38 77 0.075194836 ubox
39 47 0.007964754 ubox
39 50 0.045487164 ubox
39 53 0.014995590 ubox
39 63 0.003602361 ubox
39 70 0.056231633 ubox
39 71 0.961847758 ubox
39 74 0.246470783 ubox
39 76 0.073491705 ubox
39 84 0.011336416 ubox
40 49 0.043062657 ubox
40 52 0.094643901 ubox
40 53 0.003412234 ubox
40 54 0.057004291 ubox
40 69 0.064961219 ubox
40 70 0.958751518 ubox
40 83 0.011347646 ubox
41 50 0.942859019 ubox
41 53 0.180839361 ubox
41 66 0.036627753 ubox
41 82 0.011361224 ubox
42 49 0.968012344 ubox
42 52 0.239689597 ubox
42 57 0.026573498 ubox
42 65 0.037173342 ubox
42 81 0.011350374 ubox
43 48 0.967639502 ubox
43 51 0.239866339 ubox
43 56 0.026623134 ubox
43 64 0.037022613 ubox
44 51 0.003561135 ubox
44 55 0.026648903 ubox
44 64 0.003206231 ubox
45 50 0.013279309 ubox
45 54 0.026678805 ubox
45 63 0.025044130 ubox
45 79 0.014097984 ubox
46 53 0.025205731 ubox
46 62 0.026990211 ubox
46 78 0.014666178 ubox
47 58 0.022333111 ubox
47 61 0.026272544 ubox
47 77 0.014751730 ubox
48 57 0.025641624 ubox
48 76 0.014864036 ubox
49 56 0.025642930 ubox
49 60 0.015540313 ubox
49 75 0.014828015 ubox
50 55 0.023988923 ubox
50 58 0.021891386 ubox
50 59 0.014164752 ubox
50 72 0.019581044 ubox
51 57 0.025480282 ubox
51 65 0.004538850 ubox
51 71 0.057071139 ubox
51 74 0.004086924 ubox
51 76 0.010126879 ubox
52 56 0.025304696 ubox
52 60 0.006038614 ubox
52 64 0.004534113 ubox
52 75 0.010399585 ubox
53 59 0.006080954 ubox
53 68 0.908721579 ubox
54 58 0.006035437 ubox
54 67 0.996831912 ubox
55 66 0.998426272 ubox
56 65 0.998850400 ubox
57 64 0.998470000 ubox
58 63 0.760712570 ubox
58 81 0.007090900 ubox
59 66 0.020219557 ubox
59 80 0.007118836 ubox
60 65 0.020648748 ubox
60 79 0.007179645 ubox
61 78 0.007116061 ubox
62 73 0.004395083 ubox
62 77 0.005026553 ubox
63 72 0.004826435 ubox
63 77 0.005959112 ubox
64 71 0.004927825 ubox
64 76 0.008343437 ubox
65 75 0.008300798 ubox
67 71 0.005573114 ubox
67 74 0.005837439 ubox
68 78 0.003749955 ubox
69 77 0.004413777 ubox
71 77 0.010802172 ubox
72 76 0.010416986 ubox
94 123 0.013194562 ubox
95 122 0.013622671 ubox
96 102 0.011330818 ubox
96 121 0.014216721 ubox
97 101 0.011341926 ubox
97 120 0.014208860 ubox
102 115 0.014402566 ubox
103 114 0.014548196 ubox
104 113 0.014584992 ubox
105 112 0.014552221 ubox
106 111 0.014447280 ubox
109 118 0.011158947 ubox
110 117 0.011233265 ubox
111 116 0.011194599 ubox
111 123 0.005461006 ubox
111 128 0.004385365 ubox
112 122 0.005596760 ubox
112 127 0.004491461 ubox
113 121 0.005618836 ubox
113 126 0.004504594 ubox
113 132 0.055953734 ubox
113 133 0.180402721 ubox
114 131 0.055653163 ubox
114 132 0.205848917 ubox
114 133 0.366495109 ubox
115 131 0.208719487 ubox
115 132 0.966607463 ubox
115 133 0.034775902 ubox
116 126 0.005767371 ubox
116 129 0.100199373 ubox
116 131 0.968739202 ubox
116 132 0.037566248 ubox
117 124 0.006310212 ubox
117 125 0.004783963 ubox
117 128 0.016887297 ubox
117 130 0.948548225 ubox
118 123 0.007566086 ubox
118 128 0.957165580 ubox
119 127 0.957319816 ubox
119 130 0.201068250 ubox
120 126 0.954934888 ubox
120 129 0.284957621 ubox
121 128 0.285108000 ubox
122 133 0.003948802 ubox
123 132 0.004390104 ubox
3 114 0.9500000 lbox
4 113 0.9500000 lbox
5 111 0.9500000 lbox
6 110 0.9500000 lbox
7 109 0.9500000 lbox
8 107 0.9500000 lbox
9 106 0.9500000 lbox
10 105 0.9500000 lbox
12 103 0.9500000 lbox
13 102 0.9500000 lbox
14 101 0.9500000 lbox
15 100 0.9500000 lbox
16 95 0.9500000 lbox
17 94 0.9500000 lbox
18 93 0.9500000 lbox
21 90 0.9500000 lbox
22 89 0.9500000 lbox
24 87 0.9500000 lbox
25 86 0.9500000 lbox
26 84 0.9500000 lbox
27 83 0.9500000 lbox
28 82 0.9500000 lbox
29 81 0.9500000 lbox
30 80 0.9500000 lbox
31 79 0.9500000 lbox
32 78 0.9500000 lbox
35 75 0.9500000 lbox
36 74 0.9500000 lbox
38 72 0.9500000 lbox
39 71 0.9500000 lbox
40 70 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
53 68 0.9500000 lbox
54 67 0.9500000 lbox
55 66 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
115 132 0.9500000 lbox
116 131 0.9500000 lbox
117 130 0.9500000 lbox
118 128 0.9500000 lbox
119 127 0.9500000 lbox
120 126 0.9500000 lbox
showpage
end
%%EOF
