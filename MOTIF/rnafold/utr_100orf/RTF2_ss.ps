%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGACCAGCGUGCUGCGUCACGGCGGUGCGCCGGAAGUGGCUGCGGAUUUCGCCGGAAAUCCCGGAAGUGACAGCUUUGGGGGUUUGCUGCUGGCUCUGACUCCCGUCCUGCGAUGGGUUGCGACGGGGGAACAAUCCCCAAGAGGCAUGAACUGGUGAAGGGGCCGAAGAAGGUUGAGAAGAUUUGGCAUUUGAAGAAUGGGAAAGAGUGGU\
) } def
/len { sequence length } bind def

/coor [
[140.44749451 169.02735901]
[125.45306396 169.43614197]
[112.81977081 161.34912109]
[106.91333771 147.56092834]
[109.77503204 132.83610535]
[101.64858246 145.44406128]
[100.67560577 161.23532104]
[87.27699280 167.74121094]
[79.15055084 180.34918213]
[71.02410126 192.95715332]
[62.89765930 205.56512451]
[54.77121353 218.17309570]
[46.64476776 230.78105164]
[38.51832199 243.38902283]
[30.39187431 255.99699402]
[22.26542854 268.60494995]
[25.84881401 283.99765015]
[17.42756081 297.37142944]
[1.99784529 300.79187012]
[-11.28615379 292.22970581]
[-14.54327583 276.76467896]
[-5.84112787 263.57196045]
[9.65745926 260.47851562]
[17.78390503 247.87054443]
[25.91035080 235.26257324]
[34.03679657 222.65461731]
[42.16324234 210.04664612]
[50.28968811 197.43867493]
[58.41613388 184.83070374]
[66.54257965 172.22273254]
[74.66902924 159.61476135]
[75.06074524 144.72531128]
[89.04061890 137.31762695]
[97.16706085 124.70965576]
[84.68170929 115.27873230]
[81.71513367 102.04845428]
[67.42231750 97.49704742]
[53.12949371 92.94564819]
[38.83667374 88.39424133]
[24.54385376 83.84283447]
[10.25103378 79.29143524]
[10.82590961 92.26914215]
[3.76530790 105.75403595]
[-10.83203793 116.12308502]
[-25.72871017 117.88068390]
[-40.62538528 119.63827515]
[-50.21627808 132.19973755]
[-65.89124298 134.21740723]
[-78.35060120 124.49423981]
[-80.20243835 108.79882050]
[-70.34808350 96.44296265]
[-54.63396454 94.75717163]
[-42.38297653 104.74160004]
[-27.48630524 102.98400879]
[-12.58963203 101.22641754]
[-9.52828979 86.54145050]
[-6.46720505 71.85779572]
[-19.42073059 64.29431152]
[-32.37425613 56.73083878]
[-45.32777786 49.16735840]
[-58.28130341 41.60388184]
[-71.23482513 34.04040527]
[-84.18835449 26.47692680]
[-100.00714111 26.20012856]
[-107.09661102 13.10094452]
[-120.05014038 5.53746700]
[-133.00366211 -2.02601075]
[-145.95718384 -9.58948803]
[-158.91072083 -17.15296555]
[-175.30339050 -16.69209099]
[-183.66723633 -30.79804420]
[-175.39826965 -44.95982742]
[-159.00288391 -44.60901642]
[-151.34722900 -30.10649109]
[-138.39370728 -22.54301262]
[-125.44018555 -14.97953510]
[-112.48666382 -7.41605806]
[-99.53313446 0.14741983]
[-84.64087677 -0.11677179]
[-76.62487793 13.52340221]
[-63.67135239 21.08687973]
[-50.71782684 28.65035820]
[-37.76430130 36.21383667]
[-24.81077766 43.77731323]
[-11.85725212 51.34078979]
[1.09627283 58.90426636]
[14.80243874 64.99861145]
[29.09525871 69.55001831]
[43.38808060 74.10141754]
[57.68090057 78.65282440]
[71.97371674 83.20423126]
[86.26654053 87.75563049]
[109.76899719 80.69568634]
[124.33123016 105.15592957]
[138.86653137 101.45117950]
[153.40182495 97.74642944]
[167.93711853 94.04168701]
[182.47241211 90.33693695]
[187.47439575 80.68155670]
[196.77238464 75.47895813]
[207.17994690 76.23551178]
[215.27943420 82.46080780]
[229.91722107 79.18435669]
[244.55502319 75.90791321]
[259.19281006 72.63146210]
[273.83059692 69.35501862]
[288.46838379 66.07857513]
[308.83618164 44.13500595]
[319.97351074 34.08714294]
[331.11087036 24.03927803]
[329.61642456 8.70719337]
[337.34619141 -4.41164541]
[351.15530396 -10.39264488]
[365.66467285 -7.13441229]
[376.80203247 -17.18227577]
[381.86563110 -32.17129135]
[396.49838257 -34.95188522]
[407.63571167 -44.99975204]
[418.77307129 -55.04761505]
[429.68646240 -65.33827209]
[440.37063599 -75.86673737]
[451.05480957 -86.39519501]
[446.72805786 -102.35472870]
[451.01620483 -118.22742462]
[462.65728760 -129.70509338]
[478.40704346 -133.72203064]
[493.94268799 -129.27346802]
[504.47116089 -139.95764160]
[514.99963379 -150.64179993]
[525.52807617 -161.32597351]
[536.05651855 -172.01014709]
[539.65863037 -188.00878906]
[555.39331055 -192.62960815]
[567.07409668 -181.11907959]
[562.68475342 -165.31826782]
[546.74072266 -161.48167419]
[536.21221924 -150.79751587]
[525.68377686 -140.11334229]
[515.15533447 -129.42916870]
[504.62686157 -118.74500275]
[509.11810303 -105.84877777]
[507.60794067 -92.21006012]
[500.33444214 -80.49633789]
[488.66833496 -73.02328491]
[474.85522461 -71.29705811]
[461.58328247 -75.71102905]
[450.89910889 -65.18256378]
[440.21493530 -54.65410233]
[439.82287598 -51.15217590]
[437.71652222 -47.66583252]
[433.92153931 -44.99809647]
[428.82092285 -43.91027069]
[417.68359375 -33.86240768]
[406.54623413 -23.81454277]
[402.27926636 -9.54421806]
[386.84988403 -6.04493237]
[375.71255493 4.00293159]
[377.46520996 18.76999664]
[370.09918213 31.89272118]
[356.25662231 38.23596954]
[341.15872192 35.17662048]
[330.02139282 45.22448730]
[318.88403320 55.27235031]
[320.86010742 70.14161682]
[334.23519897 76.93184662]
[347.61029053 83.72207642]
[360.98535156 90.51230621]
[374.36044312 97.30253601]
[387.73553467 104.09276581]
[399.25711060 94.17704010]
[413.69781494 89.42996979]
[428.85552979 90.57545471]
[442.41879272 97.43880463]
[452.31936646 108.97341919]
[457.04742432 123.42034912]
[455.88201904 138.57653809]
[449.00082397 152.13079834]
[437.45318604 162.01617432]
[423.00006104 166.72523499]
[407.84539795 165.53987122]
[394.30023193 158.64086914]
[384.43005371 147.08024597]
[379.73999023 132.62092590]
[380.94528198 117.46784210]
[367.57022095 110.67761230]
[354.19512939 103.88738251]
[340.82003784 97.09715271]
[327.44497681 90.30693054]
[314.06988525 83.51670074]
[324.37875366 94.41290283]
[327.54266357 109.07543182]
[322.64425659 123.25308228]
[311.10375977 132.83522034]
[296.26724243 135.04364014]
[282.43627930 129.23805237]
[273.62103271 117.10168457]
[272.37734985 102.15333557]
[279.06579590 88.72706604]
[291.74484253 80.71636200]
[277.10705566 83.99280548]
[262.46923828 87.26925659]
[247.83146667 90.54570007]
[233.19367981 93.82215118]
[218.55587769 97.09859467]
[205.31958008 111.19603729]
[186.17716980 104.87223053]
[171.64187622 108.57698059]
[157.10656738 112.28173065]
[142.57127380 115.98648071]
[128.03598022 119.69122314]
[142.90744019 121.65074158]
[154.10829163 131.62776184]
[157.76782227 146.17451477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 34]
[6 33]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[36 92]
[37 91]
[38 90]
[39 89]
[40 88]
[41 87]
[44 55]
[45 54]
[46 53]
[57 86]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[63 80]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[94 210]
[95 209]
[96 208]
[97 207]
[98 206]
[102 204]
[103 203]
[104 202]
[105 201]
[106 200]
[107 199]
[108 163]
[109 162]
[110 161]
[114 157]
[115 156]
[117 154]
[118 153]
[119 152]
[120 148]
[121 147]
[122 146]
[127 140]
[128 139]
[129 138]
[130 137]
[131 136]
[164 189]
[165 188]
[166 187]
[167 186]
[168 185]
[169 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
