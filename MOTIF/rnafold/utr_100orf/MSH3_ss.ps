%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:19:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCAGACGCCUGGGAACUGCGGCCGCGGGCUCGCGCUCCUCGCCAGGCCCUGCCGCCGGGCUGCCAUCCUUGCCCUGCCAUGUCUCGCCGGAAGCCUGCGUCGGGCGGCCUCGCUGCCUCCAGCUCAGCCCCUGCGAGGCAAGCGGUUUUGAGCCGAUUCUUCCAGUCUACGGGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[77.20591736 141.70466614]
[71.73979187 136.38845825]
[67.36290741 130.42562866]
[54.82794189 138.66423035]
[42.29297638 146.90283203]
[29.75801086 155.14143372]
[26.37813377 167.60716248]
[15.74568462 174.20764160]
[3.86178207 171.86065674]
[-8.81428528 179.88046265]
[-21.49035263 187.90026855]
[-34.16641998 195.92007446]
[-46.84248734 203.93989563]
[-59.51855469 211.95970154]
[-72.12454224 220.08921814]
[-84.65950775 228.32781982]
[-87.76496124 246.99530029]
[-103.24812317 257.31179810]
[-121.05133057 253.13470459]
[-133.29280090 261.80340576]
[-145.53428650 270.47207642]
[-157.77575684 279.14077759]
[-169.94155884 287.91537476]
[-182.03073120 296.79522705]
[-194.11991882 305.67507935]
[-203.30601501 319.92468262]
[-219.54173279 315.04226685]
[-219.34460449 298.08947754]
[-202.99975586 293.58587646]
[-190.91058350 284.70602417]
[-178.82139587 275.82620239]
[-175.28233337 269.31484985]
[-166.44445801 266.89929199]
[-154.20297241 258.23059082]
[-141.96150208 249.56190491]
[-129.72001648 240.89321899]
[-130.27893066 229.46640015]
[-125.18873596 219.08683777]
[-115.61507416 212.39501953]
[-103.87975311 211.15547180]
[-92.89811707 215.79284668]
[-80.36315155 207.55424500]
[-76.48997498 201.23591614]
[-67.53836060 199.28363037]
[-54.86229324 191.26382446]
[-42.18622589 183.24401855]
[-29.51016045 175.22421265]
[-16.83409309 167.20439148]
[-4.15802622 159.18458557]
[3.12834668 143.23237610]
[21.51940346 142.60647583]
[34.05437088 134.36787415]
[46.58933640 126.12926483]
[59.12430191 117.89065552]
[55.58367538 95.74697113]
[63.26212311 74.67755127]
[52.51834869 64.20991516]
[37.23453903 60.12142181]
[33.51802826 45.69794083]
[22.77425575 35.23030853]
[12.03048420 24.76267433]
[1.28671217 14.29504013]
[-13.47385979 18.54016495]
[-28.37557411 14.82069397]
[-39.40994644 4.13714504]
[-43.60878372 -10.63666058]
[-39.84262085 -25.52664375]
[-29.12453651 -36.52747345]
[-14.33764172 -40.67998123]
[0.54046321 -36.86716461]
[11.50764275 -26.11465073]
[15.61378002 -11.31481171]
[11.75434589 3.55126810]
[22.49811745 14.01890182]
[33.24188995 24.48653603]
[43.98566437 34.95417023]
[58.50100327 38.29394531]
[62.98598480 53.46614075]
[73.72975922 63.93377686]
[89.94949341 56.52718735]
[107.77425385 56.06300735]
[124.35749817 62.61536789]
[134.54190063 51.60274124]
[144.72630310 40.59011078]
[154.91070557 29.57748413]
[165.09509277 18.56485558]
[175.27949524 7.55222797]
[185.46389771 -3.46040058]
[195.64830017 -14.47302914]
[199.33753967 -29.85809135]
[213.65937805 -33.94882202]
[223.84378052 -44.96144867]
[224.12495422 -57.87418365]
[232.85688782 -66.83905029]
[244.95637512 -67.42041779]
[255.33036804 -78.25462341]
[254.62361145 -95.72084808]
[266.52365112 -108.06080627]
[283.32916260 -107.99077606]
[293.51358032 -119.00340271]
[290.64059448 -134.13787842]
[297.15399170 -147.90118408]
[310.36654663 -155.10485840]
[325.11087036 -153.17030334]
[335.29525757 -164.18292236]
[345.47967529 -175.19555664]
[355.66406250 -186.20817566]
[365.84848022 -197.22080994]
[376.03286743 -208.23344421]
[386.21728516 -219.24606323]
[392.53234863 -234.97998047]
[409.39956665 -233.26730347]
[412.42312622 -216.58514404]
[397.22988892 -209.06166077]
[387.04550171 -198.04904175]
[376.86111450 -187.03640747]
[366.67669678 -176.02377319]
[356.49230957 -165.01115417]
[346.30789185 -153.99851990]
[336.12350464 -142.98590088]
[339.20260620 -128.43745422]
[333.05181885 -114.70312500]
[319.83868408 -107.13566589]
[304.52621460 -108.81900787]
[294.34179688 -97.80637360]
[296.64050293 -85.11193085]
[291.11791992 -73.23771667]
[279.59091187 -66.62236786]
[266.16458130 -67.88062286]
[255.79057312 -57.04641342]
[252.55656433 -39.80966568]
[234.85639954 -34.77705002]
[224.67201233 -23.76441956]
[221.71122742 -9.16705513]
[206.66093445 -4.28862810]
[196.47653198 6.72400045]
[186.29212952 17.73662949]
[176.10772705 28.74925613]
[165.92332458 39.76188660]
[155.73892212 50.77451324]
[145.55451965 61.78713989]
[135.37013245 72.79976654]
[144.69654846 83.84239197]
[150.39843750 98.07401276]
[151.40361023 114.25325012]
[164.35037231 121.82827759]
[177.29714966 129.40330505]
[190.24391174 136.97834778]
[203.19068909 144.55337524]
[219.91514587 147.33346558]
[221.87348938 164.17391968]
[206.23329163 170.71765137]
[195.61566162 157.50015259]
[182.66888428 149.92510986]
[169.72212219 142.35008240]
[156.77534485 134.77505493]
[143.82856750 127.20001984]
[138.19155884 132.14715576]
[141.12353516 146.85781860]
[126.91754150 142.04141235]
[121.28053284 146.98855591]
[127.11086273 160.80908203]
[132.94119263 174.62962341]
[138.77151489 188.45016479]
[144.60185242 202.27069092]
[159.74345398 205.66352844]
[169.97373962 217.33061218]
[171.35893250 232.78573608]
[163.36640930 246.08609009]
[149.06945801 252.11740112]
[133.96553040 248.56051636]
[123.86242676 236.78312683]
[122.64497375 221.31388855]
[130.78131104 208.10102844]
[124.95098114 194.28048706]
[119.12065125 180.45996094]
[113.29032135 166.63941956]
[107.45999146 152.81887817]
[98.97174835 151.87896729]
[90.97336578 149.62088013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 54]
[4 53]
[5 52]
[6 51]
[9 49]
[10 48]
[11 47]
[12 46]
[13 45]
[14 44]
[15 42]
[16 41]
[19 36]
[20 35]
[21 34]
[22 33]
[23 31]
[24 30]
[25 29]
[56 79]
[57 78]
[59 76]
[60 75]
[61 74]
[62 73]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[91 133]
[92 132]
[95 130]
[96 129]
[99 125]
[100 124]
[104 120]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
[161 178]
[162 177]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
