%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGCCCAGGUCUCCGAGCACUCGGGCCUGCGCCUGGGUGCUGGCAGCCUUGCCGCUCGCUGUGCCAGUGCCUGGUGGGCCGUUCUGGCCAUCCAGCAUGGUGGACUACUACGAGGUGCUGGACGUGCCCCGGCAGGCCUCAUCCGAGGCCAUCAAGAAGGCGUACCGCAAGCUGGCGCUCAAGUGGCACCCCGACA\
) } def
/len { sequence length } bind def

/coor [
[-173.30122375 425.98126221]
[-167.45988464 412.16519165]
[-179.73213196 420.79028320]
[-192.00437927 429.41534424]
[-204.27662659 438.04043579]
[-216.54887390 446.66549683]
[-228.82112122 455.29058838]
[-231.80595398 467.84463501]
[-242.21258545 474.77496338]
[-254.15541077 472.81768799]
[-266.56161499 481.24896240]
[-278.96783447 489.68020630]
[-291.37405396 498.11145020]
[-294.45837402 513.37988281]
[-307.16015625 521.75360107]
[-321.69723511 518.71905518]
[-334.10345459 527.15032959]
[-339.44830322 534.56909180]
[-346.77142334 535.61480713]
[-359.30853271 543.85015869]
[-371.84564209 552.08544922]
[-384.38275146 560.32080078]
[-396.91986084 568.55615234]
[-409.45697021 576.79150391]
[-421.99407959 585.02685547]
[-434.53118896 593.26220703]
[-447.06829834 601.49749756]
[-459.60540771 609.73284912]
[-472.14251709 617.96820068]
[-479.02355957 632.85388184]
[-495.37771606 634.06787109]
[-504.38122559 620.36132812]
[-496.77203369 605.83441162]
[-480.37786865 605.43109131]
[-467.84075928 597.19573975]
[-455.30364990 588.96038818]
[-442.76654053 580.72509766]
[-430.22940063 572.48974609]
[-417.69229126 564.25439453]
[-405.15518188 556.01904297]
[-392.61807251 547.78369141]
[-380.08096313 539.54833984]
[-367.54385376 531.31304932]
[-355.00674438 523.07769775]
[-342.53469849 514.74414062]
[-330.12850952 506.31286621]
[-327.59848022 491.67953491]
[-315.13693237 482.95230103]
[-299.80529785 485.70523071]
[-287.39907837 477.27398682]
[-274.99288940 468.84274292]
[-262.58666992 460.41149902]
[-255.81663513 444.22506714]
[-237.44619751 443.01834106]
[-225.17395020 434.39324951]
[-212.90170288 425.76818848]
[-200.62945557 417.14309692]
[-188.35720825 408.51803589]
[-176.08496094 399.89294434]
[-164.75573730 390.06195068]
[-154.48753357 379.12741089]
[-144.21932983 368.19290161]
[-133.95111084 357.25836182]
[-123.94337463 346.08496094]
[-114.20165253 334.67886353]
[-104.45993805 323.27276611]
[-94.71821594 311.86666870]
[-84.97649384 300.46060181]
[-75.23477173 289.05450439]
[-65.49304962 277.64840698]
[-55.75133133 266.24230957]
[-59.40236664 251.82678223]
[-53.79856491 237.86033630]
[-40.89446640 229.77716064]
[-25.52745628 230.85470581]
[-15.78573513 219.44862366]
[-6.04401398 208.04252625]
[3.69770670 196.63644409]
[13.43942738 185.23034668]
[15.82164001 170.52748108]
[30.66762352 165.05873108]
[40.40934372 153.65263367]
[50.15106583 142.24655151]
[52.10635376 135.11224365]
[60.13649368 130.73936462]
[70.05616760 119.48769379]
[79.97584534 108.23603058]
[89.89552307 96.98435974]
[97.32740784 83.95488739]
[101.96266174 69.68904114]
[106.59791565 55.42319489]
[98.37177277 39.98945236]
[103.74291992 23.70070457]
[118.92611694 16.47755432]
[123.33671570 2.14065862]
[127.74732208 -12.19623661]
[132.15792847 -26.53313255]
[136.56852722 -40.87002563]
[140.97914124 -55.20692062]
[145.38973999 -69.54381561]
[149.80035400 -83.88071442]
[144.41058350 -103.29920197]
[159.11506653 -115.84773254]
[163.07315063 -130.31610107]
[167.03125000 -144.78445435]
[170.98934937 -159.25282288]
[166.30682373 -174.96923828]
[177.77142334 -186.69506836]
[193.58934021 -182.36778259]
[197.48846436 -166.43891907]
[185.45771790 -155.29472351]
[181.49961853 -140.82635498]
[177.54151917 -126.35800171]
[173.58341980 -111.88964081]
[179.42900085 -103.49526215]
[179.68978882 -93.04964447]
[174.03790283 -84.00120544]
[164.13723755 -79.47010803]
[159.72663879 -65.13320923]
[155.31604004 -50.79631805]
[150.90542603 -36.45942307]
[146.49482727 -22.12252617]
[142.08421326 -7.78563166]
[137.67361450 6.55126333]
[133.26301575 20.88815880]
[140.82839966 31.32502174]
[141.00099182 44.40896606]
[133.49353027 55.36293411]
[120.86376190 60.05844879]
[116.22850800 74.32429504]
[111.59325409 88.59014130]
[116.41917419 94.33126831]
[121.53727722 80.23144531]
[136.30714417 77.61404419]
[145.95874023 89.09650421]
[140.84033203 103.19622040]
[126.07100677 105.81351471]
[130.89692688 111.55464172]
[145.74728394 109.44112396]
[160.59764099 107.32760620]
[175.44799805 105.21408844]
[190.29835510 103.10056305]
[205.14869690 100.98704529]
[217.71287537 90.44789886]
[233.02745056 96.31269073]
[235.33810425 112.54823303]
[222.26783752 122.45278931]
[207.26222229 115.83740234]
[192.41186523 117.95092010]
[177.56150818 120.06443787]
[162.71115112 122.17795563]
[147.86080933 124.29147339]
[133.01045227 126.40499878]
[124.00095367 125.77226257]
[115.98384857 123.18727875]
[109.31864166 118.93963623]
[104.29980469 113.37938690]
[101.14719391 106.90403748]
[91.22751617 118.15570831]
[81.30783844 129.40737915]
[71.38816071 140.65904236]
[61.55715561 151.98826599]
[51.81543350 163.39434814]
[42.07371521 174.80044556]
[38.99470901 190.31915283]
[24.84551620 194.97207642]
[15.10379601 206.37815857]
[5.36207533 217.78425598]
[-4.37964535 229.19033813]
[-14.12136555 240.59643555]
[-10.65315819 255.60568237]
[-16.61816788 269.61538696]
[-29.53602791 277.33505249]
[-44.34524155 275.98403931]
[-54.08696365 287.39013672]
[-63.82868195 298.79623413]
[-73.57040405 310.20230103]
[-83.31212616 321.60839844]
[-93.05384827 333.01449585]
[-102.79556274 344.42056274]
[-112.53728485 355.82666016]
[-113.48913574 360.97717285]
[-116.06785583 364.85525513]
[-119.51399231 367.05361938]
[-123.01658630 367.52655029]
[-133.28479004 378.46109009]
[-143.55299377 389.39562988]
[-153.82121277 400.33013916]
[-139.32009888 396.49380493]
[-124.49881744 398.80245972]
[-111.85155487 406.86761475]
[-103.50662231 419.33203125]
[-100.86832428 434.09820557]
[-104.38064575 448.68118286]
[-113.45251465 460.62695312]
[-126.55730438 467.92520142]
[-141.48970032 469.34777832]
[-155.73681641 464.65530396]
[-166.90113831 454.63739014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 59]
[3 58]
[4 57]
[5 56]
[6 55]
[7 54]
[10 52]
[11 51]
[12 50]
[13 49]
[16 46]
[17 45]
[19 44]
[20 43]
[21 42]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[60 188]
[61 187]
[62 186]
[63 185]
[64 181]
[65 180]
[66 179]
[67 178]
[68 177]
[69 176]
[70 175]
[71 174]
[75 170]
[76 169]
[77 168]
[78 167]
[79 166]
[81 164]
[82 163]
[83 162]
[85 161]
[86 160]
[87 159]
[88 158]
[89 131]
[90 130]
[91 129]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[103 114]
[104 113]
[105 112]
[106 111]
[138 153]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
