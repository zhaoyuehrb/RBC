%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUAGACUCUGUCCUGGGACUUGGUGGUGCUACCCUUGGCCUCCCACAGUCCUGCCACCCUGCUGCCGCCACCAUGCUGCCCCCUGGGACUGCGACCCUCUUGACUCUGCUCCUGGCAGCUGGCUCGCUGGGCCAGAAGCCUCAGAGGCCACGCCGGCCCGCAUCCCCCAUCA\
) } def
/len { sequence length } bind def

/coor [
[73.27552032 99.77050781]
[87.86731720 103.25680542]
[74.70213318 96.06806946]
[61.53694534 88.87933350]
[48.37176132 81.69059753]
[35.20657730 74.50186157]
[22.04139137 67.31312561]
[8.87620640 60.12439346]
[-6.94400787 60.30154037]
[-14.40637398 47.41114426]
[-27.57155800 40.22240829]
[-38.92982101 40.16201019]
[-45.57464600 32.57633591]
[-59.88931656 28.09413147]
[-74.20398712 23.61192703]
[-88.51866150 19.12972260]
[-102.83333588 14.64751625]
[-117.26287079 10.55014706]
[-131.79693604 6.84054947]
[-146.33099365 3.13095164]
[-159.90351868 15.11316395]
[-177.79301453 16.56189346]
[-192.85122681 7.08678389]
[-199.17405701 -9.37509537]
[-213.83125305 -12.56357479]
[-228.48846436 -15.75205421]
[-243.14566040 -18.94053268]
[-257.80285645 -22.12901306]
[-272.46008301 -25.31749153]
[-287.11727905 -28.50597191]
[-301.80233765 -31.56351089]
[-316.51412964 -34.48986435]
[-325.34918213 -21.07480240]
[-338.62017822 -12.09329414]
[-354.28271484 -8.89331436]
[-369.93756104 -11.93491745]
[-383.19821167 -20.72436142]
[-392.05468750 -33.89397430]
[-395.17813110 -49.41490173]
[-409.93981934 -52.07820129]
[-424.70147705 -54.74149704]
[-439.46313477 -57.40479660]
[-447.99414062 -44.78964233]
[-460.92205811 -36.74050522]
[-476.00708008 -34.65194321]
[-490.63562012 -38.88581467]
[-502.27319336 -48.70857239]
[-508.90353394 -62.41836929]
[-509.37789917 -77.63989258]
[-503.61407471 -91.73593140]
[-492.61068726 -102.26425171]
[-478.27416992 -107.40077209]
[-463.08837891 -106.25553894]
[-449.68435669 -99.02699280]
[-440.38442993 -86.96750641]
[-436.79986572 -72.16646576]
[-422.03817749 -69.50316620]
[-407.27651978 -66.83986664]
[-392.51486206 -64.17656708]
[-385.37225342 -76.27555084]
[-374.50231934 -85.22473145]
[-361.20059204 -89.93106842]
[-347.06143188 -89.80876160]
[-333.78707886 -84.85210419]
[-322.98260498 -75.63862610]
[-315.96188354 -63.26187897]
[-313.58776855 -49.20164490]
[-298.87600708 -46.27528763]
[-291.67892456 -48.06004333]
[-283.92880249 -43.16317368]
[-269.27157593 -39.97469330]
[-254.61437988 -36.78621674]
[-239.95718384 -33.59773636]
[-225.29998779 -30.40925598]
[-210.64277649 -27.22077751]
[-195.98558044 -24.03229713]
[-188.19654846 -33.39121246]
[-177.09655762 -38.56945038]
[-164.77590942 -38.52388763]
[-153.58392334 -33.20159912]
[-145.68093872 -23.56171036]
[-142.62139893 -11.40310764]
[-128.08732605 -7.69351006]
[-113.55327606 -3.98391271]
[-110.32881927 -5.48441362]
[-106.21108246 -5.47817469]
[-101.92526245 -3.55977488]
[-98.35112762 0.33284461]
[-84.03645325 4.81504965]
[-69.72178650 9.29725456]
[-55.40711212 13.77945995]
[-41.09243774 18.26166534]
[-49.86602402 6.09514427]
[-52.72677612 -8.62953186]
[-49.14697266 -23.19610405]
[-39.78698349 -34.91747665]
[-26.37344360 -41.63141251]
[-11.38074589 -42.09938812]
[2.42540789 -36.23507690]
[12.49819660 -25.12027168]
[16.97949409 -10.80531502]
[15.04263592 4.06911230]
[7.04491329 16.75912476]
[-5.53833294 24.92379951]
[-20.38282394 27.05722237]
[-7.21763897 34.24595642]
[7.66091347 33.55462265]
[16.06494141 46.95920944]
[29.23012543 54.14794159]
[42.39530945 61.33667755]
[55.56049728 68.52541351]
[68.72567749 75.71414948]
[81.89086914 82.90288544]
[95.05605316 90.09161377]
[97.83956146 77.80575562]
[108.90167236 67.67843628]
[126.52824402 63.95996475]
[141.49002075 62.88987732]
[156.45181274 61.81978989]
[166.77935791 50.15876389]
[181.96797180 49.28668213]
[193.02133179 59.20428467]
[207.98312378 58.13419724]
[222.94490051 57.06410980]
[237.90667725 55.99402237]
[252.86846924 54.92393494]
[267.83023071 53.85384750]
[282.79202271 52.78375626]
[298.15945435 45.62287140]
[309.29461670 58.40741348]
[300.09222412 72.64652252]
[283.86212158 67.74553680]
[268.90032959 68.81562805]
[253.93855286 69.88571167]
[238.97677612 70.95580292]
[224.01498413 72.02589417]
[209.05320740 73.09597778]
[194.09143066 74.16606903]
[184.56199646 85.55577850]
[169.40386963 86.85414124]
[157.52189636 76.78157043]
[142.56011963 77.85166168]
[127.59833527 78.92174530]
[124.85234070 85.90097046]
[139.82472229 86.81078339]
[143.58613586 101.33152008]
[130.93843079 109.39596558]
[119.36035919 99.85941315]
[116.61437225 106.83863068]
[126.83563995 117.81704712]
[137.05691528 128.79547119]
[147.27818298 139.77388000]
[163.19515991 141.78114319]
[171.42655945 155.55154419]
[165.65792847 170.52160645]
[150.31449890 175.20756531]
[137.16641235 166.01478577]
[136.29975891 149.99514771]
[126.07849121 139.01673889]
[115.85722351 128.03831482]
[105.63595581 117.05989838]
[112.62181854 130.33384705]
[114.78911591 145.17645264]
[111.89049530 159.89372253]
[104.25678253 172.80598450]
[92.75920105 182.43954468]
[78.70997620 187.69496155]
[63.71254349 187.97239685]
[49.47855377 183.24021912]
[37.63253403 174.03848267]
[29.52647018 161.41740417]
[26.08550072 146.81741333]
[27.70234680 131.90480042]
[34.19247818 118.38156128]
[44.81517410 107.79107666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 114]
[3 113]
[4 112]
[5 111]
[6 110]
[7 109]
[8 108]
[10 106]
[11 105]
[13 92]
[14 91]
[15 90]
[16 89]
[17 88]
[18 84]
[19 83]
[20 82]
[24 76]
[25 75]
[26 74]
[27 73]
[28 72]
[29 71]
[30 70]
[31 68]
[32 67]
[39 59]
[40 58]
[41 57]
[42 56]
[117 143]
[118 142]
[119 141]
[122 138]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
