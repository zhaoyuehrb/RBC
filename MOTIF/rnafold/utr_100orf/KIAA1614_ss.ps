%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCCGAACCCAGCAGCUGGCCUGGGAGGGAGAAGGGGCUGGAGAGGGCCUGGCCUCUCCGAGGGAUGGAGGGGACAGAGGCGGCGGCGGCCAAACCCGCGGGCGGCAGCCCCCAAGGGCCCAAGACAGGGAGUGGAACAGCCAGCCCCGUGGAGGGGACCUCAG\
) } def
/len { sequence length } bind def

/coor [
[18.88811493 303.63183594]
[11.51886654 302.23748779]
[2.16651940 313.96496582]
[-7.18582773 325.69244385]
[-16.53817558 337.41992188]
[-25.89052200 349.14739990]
[-23.58020401 358.36541748]
[-25.76302147 367.47262573]
[-31.81995773 374.43353271]
[-40.28120041 377.75320435]
[-49.18121719 376.79754639]
[-59.17641449 387.98217773]
[-69.17161560 399.16680908]
[-79.16681671 410.35144043]
[-89.05699921 421.62902832]
[-98.84130859 432.99859619]
[-99.08108521 449.03985596]
[-111.85977936 458.73959351]
[-127.37467194 454.65698242]
[-133.72406006 439.92385864]
[-126.03724670 425.84222412]
[-110.21088409 423.21429443]
[-100.42657471 411.84472656]
[-98.43872070 404.69381714]
[-90.35144806 400.35623169]
[-80.35624695 389.17160034]
[-70.36104584 377.98696899]
[-60.36584854 366.80233765]
[-58.00070572 346.32180786]
[-37.61799240 339.79504395]
[-28.26564598 328.06756592]
[-18.91329956 316.34008789]
[-9.56095314 304.61264038]
[-0.20860580 292.88516235]
[-2.06477237 265.74591064]
[13.58491421 246.87663269]
[35.27504349 244.38772583]
[40.75516129 230.42462158]
[46.23527527 216.46151733]
[51.71539307 202.49841309]
[57.19550705 188.53530884]
[62.67562103 174.57220459]
[68.15573883 160.60910034]
[73.63584900 146.64598083]
[59.10845184 135.65643311]
[48.94780350 120.26479340]
[44.44124603 102.14682770]
[46.25045776 83.33650208]
[54.31915665 65.99774170]
[67.86244202 52.17548752]
[58.95513916 40.10652161]
[50.04783630 28.03755569]
[41.14053345 15.96858883]
[22.34230042 13.89250565]
[11.18694305 -0.98379898]
[14.35044193 -18.98391342]
[4.99809456 -30.71138573]
[-4.35425234 -42.43885803]
[-13.70659924 -54.16633224]
[-23.05894661 -65.89380646]
[-32.41129303 -77.62127686]
[-41.76364136 -89.34874725]
[-51.11598587 -101.07621765]
[-66.83301544 -104.29407501]
[-73.98793030 -118.65327454]
[-67.09208679 -133.13868713]
[-51.43539429 -136.63832092]
[-39.02832031 -126.46757507]
[-39.38851547 -110.42856598]
[-30.03616905 -98.70109558]
[-20.68382072 -86.97362518]
[-11.33147430 -75.24614716]
[-1.97912717 -63.51867676]
[7.37321997 -51.79120636]
[16.72556686 -40.06373215]
[26.07791328 -28.33626175]
[37.47154617 -29.54506493]
[48.13667297 -25.03968620]
[55.36138153 -15.83951378]
[57.24780655 -4.17306519]
[53.20949936 7.06128645]
[62.11680222 19.13025284]
[71.02410126 31.19922066]
[79.93140411 43.26818848]
[94.58589172 40.06724930]
[97.64967346 25.38347435]
[100.71345520 10.69969940]
[95.07636261 -4.70014524]
[105.80063629 -17.10667610]
[121.85405731 -13.75711823]
[126.72225189 1.90279126]
[115.39723206 13.76347923]
[112.33345032 28.44725418]
[109.26966858 43.13103104]
[119.64916992 45.78829956]
[129.36485291 50.32405853]
[138.07977295 56.58428574]
[145.49107361 64.35511017]
[157.72448730 55.67503738]
[169.95790100 46.99496841]
[172.38513184 28.23884392]
[187.46742249 17.36360741]
[205.40524292 20.86313438]
[217.30554199 11.73171329]
[229.20584106 2.60029197]
[241.10614014 -6.53112936]
[246.87850952 -21.88078117]
[263.09982300 -24.28927231]
[273.08297729 -11.27895451]
[266.55819702 3.76627374]
[250.23756409 5.36917067]
[238.33726501 14.50059223]
[226.43695068 23.63201332]
[214.53665161 32.76343536]
[215.53219604 44.17767715]
[210.82818604 54.75669479]
[201.49452209 61.80810547]
[189.79484558 63.47605133]
[178.63796997 59.22838211]
[166.40455627 67.90845490]
[154.17114258 76.58852386]
[158.32366943 91.00228119]
[173.30007935 91.84333801]
[188.27647400 92.68439484]
[199.89233398 81.96770477]
[215.68025208 82.68697357]
[226.27352905 94.41548157]
[225.38737488 110.19490814]
[213.54753113 120.66359711]
[197.77835083 119.61066437]
[187.43542480 107.66079712]
[172.45901489 106.81974030]
[157.48262024 105.97868347]
[155.50605774 114.66167450]
[152.23539734 122.88085938]
[147.76586914 130.44616699]
[142.22016907 137.18566895]
[135.74517822 142.94953918]
[128.50804138 147.61331177]
[120.69197083 151.08061218]
[112.49154663 153.28498840]
[104.10792542 154.19123840]
[95.74389648 153.79571533]
[87.59896088 152.12609863]
[82.11884308 166.08920288]
[76.63872528 180.05230713]
[71.15861511 194.01542664]
[65.67849731 207.97853088]
[60.19838333 221.94163513]
[54.71826553 235.90473938]
[49.23815155 249.86784363]
[59.88425064 258.51757812]
[65.78810120 272.28845215]
[64.55731964 288.49450684]
[55.32945251 303.39352417]
[59.75078201 317.72711182]
[64.17211151 332.06069946]
[68.59343719 346.39428711]
[79.03981781 359.74755859]
[69.10026550 373.48223877]
[53.15079117 367.73327637]
[54.25984192 350.81561279]
[49.83851624 336.48202515]
[45.41718674 322.14843750]
[40.99586105 307.81484985]
[33.62661362 306.42050171]
[30.83770943 321.15896606]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[11 28]
[12 27]
[13 26]
[14 25]
[15 23]
[16 22]
[37 151]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[50 84]
[51 83]
[52 82]
[53 81]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[85 94]
[86 93]
[87 92]
[98 121]
[99 120]
[100 119]
[103 114]
[104 113]
[105 112]
[106 111]
[122 133]
[123 132]
[124 131]
[155 165]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
