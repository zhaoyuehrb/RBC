%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:24:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGCCUUUGUCUCUAUCUGCGGCCGGAGCUCCAGGUCUCGUCCUCACUACUCUGUGUCUUCUGCUUUUAGGGGCGCAGCCUCUGUGGCCCUGUGACCUGCCCCCUGGAAGCCUAGAAAUGGGACUGUUGACAUUUAGGGAUGUGGCCAUAGAAUUCUCUCUGGAGGAGUGGCAGUGCCUGGACACUGCACAGAAGAAUUUAUAUAGGAAUGUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-76.33324432 368.14682007]
[-85.59044647 379.94952393]
[-94.84765625 391.75225830]
[-104.10486603 403.55496216]
[-113.36207581 415.35766602]
[-122.61928558 427.16040039]
[-131.87649536 438.96310425]
[-141.13369751 450.76583862]
[-150.39091492 462.56854248]
[-159.64811707 474.37124634]
[-154.04055786 488.60159302]
[-156.29385376 503.62887573]
[-165.70384216 515.43218994]
[-179.66503906 520.90405273]
[-194.39141846 518.66809082]
[-203.64862061 530.47082520]
[-212.90582275 542.27355957]
[-222.16304016 554.07623291]
[-216.36199951 568.29748535]
[-218.46467590 583.51177979]
[-227.90544128 595.62652588]
[-242.14479065 601.38299561]
[-257.35241699 599.23260498]
[-269.43753052 589.75390625]
[-275.14929199 575.49658203]
[-272.95129395 560.29577637]
[-263.43475342 548.24047852]
[-249.15959167 542.57342529]
[-233.96575928 544.81903076]
[-224.70854187 533.01635742]
[-215.45133972 521.21362305]
[-206.19412231 509.41091919]
[-211.87437439 495.64135742]
[-209.88647461 480.77850342]
[-200.66506958 468.82727051]
[-186.60740662 463.05847168]
[-171.45083618 465.11404419]
[-162.19361877 453.31134033]
[-152.93641663 441.50860596]
[-143.67921448 429.70590210]
[-134.42199707 417.90319824]
[-125.16478729 406.10046387]
[-115.90758514 394.29776001]
[-106.65037537 382.49505615]
[-97.39316559 370.69232178]
[-88.13595581 358.88961792]
[-87.00177765 338.27764893]
[-66.97410583 330.64053345]
[-58.22616196 318.45556641]
[-49.47821808 306.27059937]
[-40.73027039 294.08563232]
[-45.58073425 280.02819824]
[-41.17137146 265.63998413]
[-28.99279404 256.50018311]
[-13.58960056 256.28152466]
[-4.84165478 244.09657288]
[3.90629125 231.91160583]
[12.65423679 219.72663879]
[21.40218353 207.54165649]
[30.15012932 195.35668945]
[38.46160889 182.86993408]
[46.32621765 170.09698486]
[54.19082642 157.32405090]
[62.05543518 144.55111694]
[69.92004395 131.77818298]
[77.78465271 119.00524139]
[85.64926147 106.23230743]
[85.54312897 91.23268127]
[77.49855804 78.57231903]
[69.45398712 65.91194916]
[61.40942001 53.25157928]
[53.36484909 40.59121323]
[45.32028198 27.93084717]
[37.27571106 15.27047920]
[29.23114204 2.61011171]
[21.18657112 -10.05025578]
[13.14200211 -22.71062279]
[5.90435266 -28.26972771]
[5.07464361 -35.60755539]
[-2.78996539 -48.38048935]
[-10.65457439 -61.15342712]
[-18.51918411 -73.92636108]
[-24.43361282 -60.14160919]
[-38.85936356 -56.03091812]
[-51.15150070 -64.62762451]
[-52.23950958 -79.58811188]
[-41.32053757 -89.87286377]
[-26.45112991 -87.89218140]
[-33.39304352 -101.18917084]
[-46.63853836 -109.84176636]
[-45.66979599 -124.70483398]
[-52.61170959 -138.00181580]
[-65.30184174 -149.24446106]
[-58.01155090 -164.55093384]
[-41.28511429 -161.78279114]
[-39.31472397 -144.94374084]
[-32.37281036 -131.64674377]
[-19.62384987 -123.94524384]
[-20.09605980 -108.13108063]
[-13.15414429 -94.83409882]
[-5.74624681 -81.79097748]
[2.11836243 -69.01803589]
[9.98297119 -56.24509811]
[17.84757996 -43.47216415]
[25.80237007 -30.75519180]
[33.84693909 -18.09482574]
[41.89151001 -5.43445778]
[49.93607712 7.22590923]
[57.98064804 19.88627625]
[66.02521515 32.54664230]
[74.06978607 45.20701218]
[82.11435699 57.86737823]
[90.15892792 70.52774811]
[98.20349884 83.18811035]
[113.03820801 80.96747589]
[117.02291870 66.50641632]
[121.00762177 52.04536057]
[124.99233246 37.58430862]
[120.33872986 21.85929489]
[131.82487488 10.15457439]
[147.63481140 14.51095963]
[151.50462341 30.44697571]
[139.45338440 41.56901169]
[135.46867371 56.03006744]
[131.48397827 70.49112701]
[127.49926758 84.95217896]
[132.49403381 90.54701996]
[142.48358154 101.73670197]
[147.47834778 107.33154297]
[162.29698181 105.00599670]
[177.11561584 102.68044281]
[181.46080017 89.38911438]
[191.06164551 79.31348419]
[204.00431824 74.37943268]
[217.74414062 75.49607086]
[229.60585022 82.38881683]
[237.30451965 93.66401672]
[252.15458679 91.54839325]
[267.00463867 89.43277740]
[281.85470581 87.31715393]
[296.70474243 85.20153809]
[311.55480957 83.08591461]
[324.12573242 73.47956848]
[337.81707764 79.34445190]
[352.66711426 77.22882843]
[358.67666626 68.17492676]
[368.47338867 64.00471497]
[378.73287964 65.87118530]
[386.11547852 72.92166138]
[401.01943970 71.22712708]
[415.92343140 69.53259277]
[430.82739258 67.83805847]
[445.73138428 66.14352417]
[449.11495972 63.45135498]
[452.80728149 62.10618973]
[456.34854126 62.04020309]
[459.34780884 63.04363632]
[461.52325439 64.79943848]
[476.49923706 63.95081329]
[491.47518921 63.10218811]
[506.45117188 62.25356293]
[521.42712402 61.40493774]
[534.83850098 51.96737289]
[549.60156250 59.10771561]
[550.52935791 75.48059845]
[536.66741943 84.24299622]
[522.27575684 76.38091278]
[507.29980469 77.22953796]
[492.32382202 78.07816315]
[477.34783936 78.92678833]
[462.37188721 79.77541351]
[447.42590332 81.04750824]
[432.52194214 82.74203491]
[417.61795044 84.43656921]
[402.71398926 86.13110352]
[387.80999756 87.82563782]
[373.13735962 100.42644501]
[354.78274536 92.07888794]
[339.93267822 94.19450378]
[328.42391968 103.64953613]
[313.67041016 97.93597412]
[298.82037354 100.05158997]
[283.97030640 102.16721344]
[269.12026978 104.28282928]
[254.27020264 106.39845276]
[239.42015076 108.51406860]
[233.76092529 123.65360260]
[221.16497803 133.93070984]
[205.01213074 136.46548462]
[189.69874573 130.47212219]
[179.44116211 117.49907684]
[164.62252808 119.82462311]
[149.80390930 122.15017700]
[98.42220306 114.09691620]
[90.55759430 126.86985016]
[82.69297791 139.64279175]
[74.82836914 152.41572571]
[66.96376038 165.18865967]
[59.09915543 177.96160889]
[51.23454285 190.73454285]
[66.20600891 189.80973816]
[76.37107849 200.84020996]
[74.22882080 215.68644714]
[61.36003876 223.39323425]
[47.26075745 218.27363586]
[42.33509827 204.10464478]
[33.58715057 216.28961182]
[24.83920479 228.47457886]
[16.09125900 240.65954590]
[7.34331322 252.84451294]
[-1.40463293 265.02947998]
[3.31357980 279.69387817]
[-1.45206881 294.15560913]
[-13.67493534 302.93432617]
[-28.54530334 302.83358765]
[-37.29324722 315.01855469]
[-46.04119492 327.20352173]
[-54.78914261 339.38848877]
[-52.04060745 348.39306641]
[-53.71376419 357.51818848]
[-59.30994415 364.74438477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[4 43]
[5 42]
[6 41]
[7 40]
[8 39]
[9 38]
[10 37]
[15 32]
[16 31]
[17 30]
[18 29]
[48 218]
[49 217]
[50 216]
[51 215]
[55 211]
[56 210]
[57 209]
[58 208]
[59 207]
[60 206]
[61 200]
[62 199]
[63 198]
[64 197]
[65 196]
[66 195]
[67 194]
[68 114]
[69 113]
[70 112]
[71 111]
[72 110]
[73 109]
[74 108]
[75 107]
[76 106]
[77 105]
[79 104]
[80 103]
[81 102]
[82 101]
[88 100]
[89 99]
[91 97]
[92 96]
[115 126]
[116 125]
[117 124]
[118 123]
[129 193]
[130 192]
[131 191]
[137 186]
[138 185]
[139 184]
[140 183]
[141 182]
[142 181]
[144 179]
[145 178]
[149 176]
[150 175]
[151 174]
[152 173]
[153 172]
[158 171]
[159 170]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
