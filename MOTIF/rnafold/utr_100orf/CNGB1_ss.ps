%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCUACGAGUGGCAGCAAGAAGGCAAUUCCUGGCUGGCGGUUGGCAUCUAAGCAGGCAUCAGGAUGUUGGGCUGGGUCCAGAGGGUGCUGCCUCAGCCCCCAGGGACCCCUCGGAAGACCAAGAUGCAGGAGGAAGAGGAAGUGGAACCAGAGCCAGAGAUGG\
) } def
/len { sequence length } bind def

/coor [
[-11.14358807 249.10725403]
[-21.44485855 260.01062012]
[-31.74612808 270.91403198]
[-42.04739761 281.81741333]
[-52.34866714 292.72079468]
[-62.64993668 303.62417603]
[-72.95121002 314.52755737]
[-76.80430603 329.87240601]
[-91.16896057 333.81018066]
[-101.47023010 344.71356201]
[-111.77149963 355.61694336]
[-122.07276917 366.52032471]
[-125.92587280 381.86517334]
[-140.29052734 385.80291748]
[-150.59179688 396.70629883]
[-146.78617859 411.65692139]
[-151.68927002 426.28439331]
[-163.73651123 435.92117310]
[-179.08367920 437.49218750]
[-192.83354187 430.49612427]
[-200.59857178 417.16543579]
[-199.90097046 401.75384521]
[-190.96334839 389.17916870]
[-176.63766479 383.45391846]
[-161.49519348 386.40502930]
[-151.19390869 375.50164795]
[-148.07763672 360.93670654]
[-132.97616577 356.21905518]
[-122.67488861 345.31567383]
[-112.37361908 334.41229248]
[-102.07234955 323.50891113]
[-98.95606232 308.94393921]
[-83.85459137 304.22628784]
[-73.55332184 293.32290649]
[-63.25205231 282.41952515]
[-52.95078278 271.51614380]
[-42.64951324 260.61276245]
[-32.34824371 249.70936584]
[-22.04697418 238.80598450]
[-26.97582245 219.92765808]
[-19.51306534 201.74531555]
[-2.49680352 191.62683105]
[17.32669830 193.78395081]
[26.77385521 182.13272095]
[36.22101212 170.48149109]
[45.66817093 158.83024597]
[55.11532974 147.17901611]
[56.89331055 139.97114563]
[64.85317993 135.39891052]
[74.51913452 123.92854309]
[84.18508911 112.45817566]
[81.29104614 106.19968414]
[80.72082520 99.47448730]
[82.44407654 93.09986115]
[86.15760803 87.81689453]
[91.33323669 84.20434570]
[97.29094696 82.61580658]
[103.28751373 83.14672852]
[109.09326935 69.31584930]
[114.89902496 55.48496628]
[120.70478058 41.65408707]
[126.51053619 27.82320786]
[123.75446320 9.63709545]
[138.08685303 -0.45699307]
[143.62982178 -14.39526463]
[134.39857483 -28.54334068]
[135.39291382 -45.24116516]
[146.02500916 -57.93925095]
[161.96562195 -61.77476883]
[167.24383545 -75.81544495]
[172.52204895 -89.85610962]
[177.80027771 -103.89678192]
[183.07849121 -117.93745422]
[182.36962891 -124.58258820]
[184.78794861 -129.78680420]
[188.83125305 -132.40325928]
[194.63700867 -146.23414612]
[200.44276428 -160.06501770]
[206.24851990 -173.89590454]
[212.05427551 -187.72677612]
[217.86003113 -201.55766296]
[209.98600769 -214.79797363]
[211.40158081 -229.95877075]
[221.35519409 -241.24545288]
[235.87249756 -244.46823120]
[241.67825317 -258.29910278]
[247.48399353 -272.12997437]
[247.92683411 -281.29888916]
[253.53271484 -286.16601562]
[259.59918213 -299.88455200]
[265.66561890 -313.60308838]
[271.73208618 -327.32159424]
[272.60809326 -344.25289917]
[289.12023926 -348.09817505]
[297.38623047 -333.29580688]
[285.45059204 -321.25515747]
[279.38415527 -307.53662109]
[273.31768799 -293.81808472]
[267.25125122 -280.09954834]
[261.31488037 -266.32421875]
[255.50912476 -252.49334717]
[249.70336914 -238.66247559]
[257.57073975 -226.04335022]
[256.48605347 -211.03376770]
[246.65623474 -199.40499878]
[231.69090271 -195.75190735]
[225.88514709 -181.92102051]
[220.07939148 -168.09014893]
[214.27363586 -154.25926208]
[208.46789551 -140.42839050]
[202.66213989 -126.59751129]
[197.11915588 -112.65924072]
[191.84094238 -98.61856842]
[186.56272888 -84.57789612]
[181.28451538 -70.53722382]
[176.00630188 -56.49655533]
[184.36900330 -46.05825806]
[186.48782349 -32.74230194]
[181.70167542 -20.02100182]
[171.16426086 -11.26544094]
[157.56809998 -8.85228634]
[152.02511597 5.08598423]
[156.52592468 16.34379578]
[151.98725891 28.01814270]
[140.34141541 33.62896347]
[134.53565979 47.45984268]
[128.72990417 61.29072189]
[122.92414856 75.12159729]
[117.11839294 88.95247650]
[123.55193329 75.40221405]
[135.71020508 66.61721802]
[150.59524536 64.76367950]
[164.53669739 70.29864502]
[174.09689331 81.85731506]
[176.91845703 96.58954620]
[172.30567932 110.86267853]
[161.39596558 121.15724182]
[146.87942505 124.93481445]
[132.33554077 121.26391602]
[121.35120392 111.05074310]
[131.85696411 121.75723267]
[147.18490601 119.34185028]
[160.98985291 126.42725372]
[167.96353149 140.28898621]
[165.42440796 155.59690857]
[154.34884644 166.46481323]
[138.99562073 168.71379089]
[125.26834869 161.47903442]
[118.44544983 147.54248047]
[121.15047455 132.26300049]
[110.64471436 121.55650330]
[95.65545654 122.12413025]
[85.98950195 133.59449768]
[76.32354736 145.06486511]
[66.76656342 156.62617493]
[57.31940460 168.27740479]
[47.87224579 179.92864990]
[38.42508698 191.57987976]
[28.97793007 203.23110962]
[33.81440735 212.78431702]
[35.16892242 223.36734009]
[32.91064835 233.75572205]
[27.32526970 242.75613403]
[19.07912636 249.34355164]
[9.13980484 252.77784729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[7 33]
[9 31]
[10 30]
[11 29]
[12 28]
[14 26]
[15 25]
[43 159]
[44 158]
[45 157]
[46 156]
[47 155]
[49 154]
[50 153]
[51 152]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[64 122]
[65 121]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[85 102]
[86 101]
[87 100]
[89 99]
[90 98]
[91 97]
[92 96]
[140 151]
[141 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
