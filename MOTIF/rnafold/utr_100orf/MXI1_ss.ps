%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACACACAGACUCACAGCGAGACCGACACACACUCCCAUACACUCACACACACAACUGCAGGCAGCGAGGCUCGGGAAGUCAGGCCGGCUUUUCGCCCCGGCGCCUUCUCUGCUCCAGCCGGCCGGGUCUCCCUGGGGGCCCGGAGCUCGGCCGGGCCGCGCAGCCCCGUUAGAGGACGAGCUCGGCGGACCCCCGCUCCUCCAUGGGCAAACGCGGGCGGCCGCGCAAGGAGGCGCGCUGCGAGGGCGCGGGG\
CUGGCCCCCGCCGCGCCCCCGGCUGUGCCCCCCGCCGUGGCCGCGCCCC\
) } def
/len { sequence length } bind def

/coor [
[141.15950012 201.28451538]
[137.98179626 216.04272461]
[130.93919373 229.39579773]
[120.55429840 240.35282898]
[107.59774017 248.10073853]
[93.03098297 252.06459045]
[77.93496704 251.95024109]
[63.42993546 247.76615906]
[50.59224319 239.82284546]
[40.37453461 228.70974731]
[33.53503418 215.25152588]
[30.58127594 200.44686890]
[31.73245239 185.39437866]
[36.90313339 171.21105957]
[45.70962143 158.94938660]
[57.49842072 149.51928711]
[71.39472198 143.62052917]
[86.36732483 141.69081116]
[88.52289581 126.84651184]
[74.48714447 121.55522919]
[66.30676270 134.12826538]
[58.12638474 146.70130920]
[65.66254425 160.02290344]
[66.13303375 175.32118225]
[59.42974854 189.08070374]
[47.09304428 198.13963318]
[31.95780754 200.41630554]
[17.50200653 195.38755798]
[7.04747820 184.20893860]
[2.99659610 169.44923401]
[6.28022337 154.50010681]
[16.14380646 142.79675293]
[30.32076645 137.02853394]
[45.55334091 138.52093506]
[53.73372269 125.94789124]
[61.91410446 113.37484741]
[59.16035461 106.39868164]
[45.95355606 113.51068115]
[32.74676132 120.62268066]
[19.53996277 127.73468018]
[6.33316660 134.84667969]
[-6.87363005 141.95867920]
[-20.08042717 149.07067871]
[-31.07824516 159.27107239]
[-46.00292969 160.77235413]
[-58.81198502 152.96670532]
[-64.31947327 139.01437378]
[-60.29559326 124.56416321]
[-48.36948013 115.46648407]
[-33.36965561 115.40464020]
[-18.86590576 111.57825470]
[-4.36215353 107.75187683]
[10.14159775 103.92549896]
[24.64534950 100.09911346]
[39.14910126 96.27273560]
[53.65285492 92.44635773]
[50.89910507 85.47019196]
[36.33639908 81.87468719]
[21.77369499 78.27918243]
[10.38195419 84.25796509]
[-1.64951825 80.99828339]
[-8.04031563 70.76478577]
[-22.56521416 67.01947784]
[-37.09011078 63.27416229]
[-51.61500931 59.52885056]
[-66.13990784 55.78353882]
[-81.43488312 59.83004379]
[-91.82713318 49.15996933]
[-106.35202789 45.41466141]
[-120.89602661 41.74420166]
[-135.45872498 38.14869690]
[-150.02143860 34.55319595]
[-164.60246277 31.03273773]
[-179.20143127 27.58742142]
[-193.80038452 24.14210510]
[-208.39935303 20.69678879]
[-222.99832153 17.25147247]
[-237.68115234 14.18319130]
[-252.43812561 11.49398041]
[-267.19509888 8.80476856]
[-281.95205688 6.11555767]
[-296.70904541 3.42634630]
[-310.66806030 11.33364677]
[-325.49920654 5.21671915]
[-329.82528687 -10.23205280]
[-320.32769775 -23.16169357]
[-304.29220581 -23.65369034]
[-294.01983643 -11.33062267]
[-279.26284790 -8.64141178]
[-264.50588989 -5.95220041]
[-249.74891663 -3.26298904]
[-234.99194336 -0.57377756]
[-241.50993347 -14.08361721]
[-235.10690308 -27.64832306]
[-220.53407288 -31.20253563]
[-208.60484314 -22.10893822]
[-208.17102051 -7.11521339]
[-219.55300903 2.65250707]
[-204.95404053 6.09782314]
[-190.35507202 9.54313946]
[-175.75610352 12.98845577]
[-161.15715027 16.43377113]
[-153.96179199 14.91952705]
[-146.42593384 19.99048996]
[-131.86322021 23.58599472]
[-117.30052185 27.18149948]
[-110.08995819 25.74144745]
[-102.60671997 30.88976288]
[-88.08181763 34.63507462]
[-73.82575989 30.32068062]
[-62.39459229 41.25864410]
[-47.86969757 45.00395584]
[-33.34479904 48.74926758]
[-18.81990242 52.49457550]
[-4.29500437 56.23988724]
[12.36211300 50.64944839]
[25.36919975 63.71648026]
[39.93190384 67.31198120]
[54.49460602 70.90748596]
[64.79655457 60.00474167]
[60.38225937 45.66898346]
[55.96796036 31.33322334]
[51.55366516 16.99746323]
[47.13936615 2.66170502]
[42.72507095 -11.67405415]
[38.31077576 -26.00981331]
[33.89647675 -40.34557343]
[29.48218155 -54.68133163]
[23.99266243 -61.91798782]
[25.09706688 -69.18753052]
[20.83066368 -83.56799316]
[16.56426239 -97.94846344]
[12.29786015 -112.32892609]
[7.82618761 -117.08876038]
[6.57869339 -122.56879425]
[8.09497166 -127.04970551]
[4.12569952 -141.51499939]
[-7.91366100 -152.64990234]
[-4.02684259 -168.58177185]
[11.78772926 -172.92127991]
[23.26137924 -161.20431519]
[18.59099960 -145.48428345]
[22.56027031 -131.01898193]
[26.67832565 -116.59532928]
[30.94472885 -102.21486664]
[35.21113205 -87.83439636]
[39.47753143 -73.45393372]
[43.81793976 -59.09562683]
[48.23223877 -44.75986862]
[52.64653397 -30.42411041]
[57.06082916 -16.08835030]
[61.47512817 -1.75259161]
[65.88941956 12.58316708]
[70.30371857 26.91892624]
[74.71801758 41.25468445]
[79.13231659 55.59044266]
[105.36167145 66.29795074]
[113.14373779 86.02650452]
[123.16155243 74.86211395]
[133.17935181 63.69772720]
[143.19715881 52.53334045]
[153.21496582 41.36895370]
[148.56118774 26.79879379]
[151.80378723 11.95351124]
[161.97407532 0.79862195]
[176.26670837 -3.73754597]
[190.81288147 -0.53218466]
[200.83068848 -11.69657135]
[210.84849548 -22.86095810]
[220.86630249 -34.02534485]
[230.88410950 -45.18973160]
[230.96061707 -58.05487061]
[239.49238586 -67.14282227]
[251.52879333 -67.97433472]
[261.66107178 -79.03494263]
[271.79333496 -90.09555054]
[281.92559814 -101.15616608]
[292.05789185 -112.21677399]
[277.20117188 -110.14835358]
[263.92868042 -117.13697052]
[257.22729492 -130.55677795]
[259.61492920 -145.36553955]
[270.19448853 -155.99911499]
[284.99090576 -158.46212769]
[298.44467163 -151.82916260]
[305.50076294 -138.59243774]
[303.50863647 -123.72666168]
[314.51693726 -133.91575623]
[325.52520752 -144.10485840]
[336.53347778 -154.29396057]
[340.86694336 -170.11019897]
[356.79733276 -174.00311279]
[367.93682861 -161.96801758]
[362.82608032 -146.38558960]
[346.72259521 -143.28567505]
[335.71429443 -133.09658813]
[324.70602417 -122.90747833]
[313.69775391 -112.71838379]
[303.11849976 -102.08450317]
[292.98623657 -91.02389526]
[282.85394287 -79.96327972]
[272.72167969 -68.90267181]
[262.58941650 -57.84206390]
[259.69552612 -40.51180267]
[242.04849243 -35.17192459]
[232.03068542 -24.00753593]
[222.01287842 -12.84315014]
[211.99507141 -1.67876351]
[201.97726440 9.48562336]
[206.73405457 23.60081291]
[203.76716614 38.29957581]
[193.77525330 49.61452866]
[179.36672974 54.44060898]
[164.37936401 51.38676071]
[154.36155701 62.55114746]
[144.34375000 73.71553802]
[134.32592773 84.87992096]
[124.30812836 96.04431152]
[125.92726135 110.95666504]
[138.10777283 119.71083069]
[150.28826904 128.46499634]
[162.46876526 137.21916199]
[174.64927673 145.97332764]
[186.82977295 154.72747803]
[199.01026917 163.48164368]
[211.19078064 172.23580933]
[223.37127686 180.98997498]
[238.03808594 176.27925110]
[252.49739075 181.05227661]
[261.26983643 193.27961731]
[261.16152954 208.14993286]
[273.34201050 216.90409851]
[289.06378174 218.67507935]
[294.88317871 232.38580322]
[307.06369019 241.13996887]
[319.24420166 249.89413452]
[331.42468262 258.64828491]
[343.60519409 267.40246582]
[355.83062744 276.09378052]
[368.10064697 284.72201538]
[380.37066650 293.35025024]
[392.64068604 301.97848511]
[403.16772461 299.50454712]
[413.12265015 303.13098145]
[419.32955933 311.44567871]
[419.94906616 321.58380127]
[432.03875732 330.46295166]
[444.12844849 339.34210205]
[456.21813965 348.22128296]
[468.30783081 357.10043335]
[480.39752197 365.97958374]
[492.48718262 374.85876465]
[504.57687378 383.73791504]
[516.71215820 392.55468750]
[528.89263916 401.30883789]
[544.00036621 397.27261353]
[558.14599609 403.93853760]
[564.65045166 418.15914917]
[560.44250488 433.21994019]
[547.50903320 442.00964355]
[531.95678711 440.37805176]
[521.12908936 429.09552002]
[520.13848877 413.48934937]
[507.95797729 404.73519897]
[500.72912598 403.38992310]
[495.69772339 395.82760620]
[483.60803223 386.94842529]
[471.51834106 378.06927490]
[459.42864990 369.19012451]
[447.33895874 360.31094360]
[435.24929810 351.43179321]
[423.15960693 342.55264282]
[411.06991577 333.67346191]
[391.72018433 332.91024780]
[384.01245117 314.24850464]
[371.74243164 305.62026978]
[359.47241211 296.99203491]
[347.20239258 288.36380005]
[339.96005249 287.09307861]
[334.85104370 279.58297729]
[322.67053223 270.82879639]
[310.49002075 262.07464600]
[298.30953979 253.32046509]
[286.12902832 244.56631470]
[271.27847290 243.42147827]
[264.58786011 229.08459473]
[252.40734863 220.33044434]
[238.34745789 225.17372131]
[223.96147156 220.75701904]
[214.82791138 208.57377625]
[214.61711121 193.17047119]
[202.43661499 184.41632080]
[190.25610352 175.66215515]
[178.07560730 166.90798950]
[165.89511108 158.15382385]
[153.71459961 149.39965820]
[141.53410339 140.64549255]
[129.35360718 131.89132690]
[117.17310333 123.13716888]
[103.36720276 129.00209045]
[101.21163177 143.84638977]
[115.01696777 149.95500183]
[126.66155243 159.56262207]
[135.28128052 171.95628357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 301]
[19 300]
[20 36]
[21 35]
[22 34]
[57 119]
[58 118]
[59 117]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
[68 109]
[69 108]
[70 106]
[71 105]
[72 104]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[120 156]
[121 155]
[122 154]
[123 153]
[124 152]
[125 151]
[126 150]
[127 149]
[128 148]
[130 147]
[131 146]
[132 145]
[133 144]
[136 143]
[137 142]
[158 218]
[159 217]
[160 216]
[161 215]
[162 214]
[167 209]
[168 208]
[169 207]
[170 206]
[171 205]
[174 203]
[175 202]
[176 201]
[177 200]
[178 199]
[187 198]
[188 197]
[189 196]
[190 195]
[219 299]
[220 298]
[221 297]
[222 296]
[223 295]
[224 294]
[225 293]
[226 292]
[227 291]
[231 287]
[232 286]
[234 284]
[235 283]
[236 282]
[237 281]
[238 280]
[239 278]
[240 277]
[241 276]
[242 275]
[246 273]
[247 272]
[248 271]
[249 270]
[250 269]
[251 268]
[252 267]
[253 266]
[254 264]
[255 263]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
