%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACGUGUCCCCCCCGCGGGGGGCGGCCCUUGAGGGCGGCGCUUCCGGUCGGCGGAGCCUGGUGGCCGCAGCGGCGGUGGCGACGACGGCCGAGACGUGGGGAUGGCGGGCGCCGGGAGCGAAGCCCGGUUCGCCGGGCUGUCGCUGGUGCAGCUCAACGAGCUGCUGGAGGACGAGGGCCAGCUGACGGAGAUGGUGCAGA\
) } def
/len { sequence length } bind def

/coor [
[105.32631683 278.51318359]
[104.63356018 263.52917480]
[93.48757935 253.71578979]
[92.57157898 238.52975464]
[102.94034576 226.90536499]
[102.24758911 211.92137146]
[101.55484009 196.93737793]
[93.23800659 184.58102417]
[100.32971191 170.43823242]
[99.63695526 155.45423889]
[98.94420624 140.47024536]
[75.10082245 125.11995697]
[69.76402283 101.05596924]
[55.11129761 97.84697723]
[40.45857239 94.63797760]
[25.80584717 91.42898560]
[11.15312290 88.21998596]
[-3.49960184 85.01099396]
[-18.15232658 81.80199432]
[-20.42120934 92.04247284]
[-29.32758331 101.19961548]
[-41.95772552 109.29155731]
[-49.40362167 123.25111389]
[-64.29409027 123.60211945]
[-76.92423248 131.69406128]
[-84.37012482 145.65361023]
[-99.26059723 146.00462341]
[-111.89073944 154.09655762]
[-124.52088165 162.18849182]
[-137.15103149 170.28042603]
[-144.20126343 185.08673096]
[-160.56819153 186.11428833]
[-169.41491699 172.30604553]
[-161.64068604 157.86674500]
[-145.24296570 157.65028381]
[-132.61282349 149.55834961]
[-119.98268127 141.46641541]
[-107.35253143 133.37448120]
[-100.81003571 119.99370575]
[-85.01617432 119.06391144]
[-72.38602448 110.97197723]
[-65.84352875 97.59120941]
[-50.04966354 96.66141510]
[-37.41952133 88.56947327]
[-37.18852997 73.57125092]
[-49.56349182 65.09420776]
[-62.00336075 56.71269989]
[-74.50739288 48.42722321]
[-87.01142883 40.14175034]
[-99.51546478 31.85627365]
[-112.01950073 23.57080078]
[-124.52353668 15.28532505]
[-140.30120850 14.11242580]
[-146.63688660 0.63249421]
[-159.14091492 -7.65298033]
[-174.43928528 -4.72080326]
[-187.00212097 -13.30157757]
[-189.70323181 -27.90430450]
[-202.20726013 -36.18977737]
[-214.71130371 -44.47525406]
[-214.36428833 -29.47926712]
[-225.77018738 -19.73733139]
[-240.52735901 -22.42540932]
[-247.76559448 -35.56344986]
[-242.15315247 -49.47389603]
[-227.82446289 -53.91027451]
[-239.65409851 -63.13305664]
[-251.48373413 -72.35583496]
[-263.31338501 -81.57862091]
[-275.14300537 -90.80139923]
[-291.45080566 -92.52991486]
[-297.85958862 -107.62493896]
[-287.77651978 -120.55800629]
[-271.57424927 -118.02468109]
[-265.92022705 -102.63103485]
[-254.09059143 -93.40825653]
[-242.26095581 -84.18547058]
[-230.43132019 -74.96269226]
[-218.60168457 -65.73990631]
[-206.42582703 -56.97929001]
[-193.92178345 -48.69381332]
[-181.41775513 -40.40834045]
[-166.91717529 -43.61281586]
[-154.11827087 -35.38829041]
[-150.85543823 -20.15701675]
[-138.35140991 -11.87154198]
[-123.46810913 -11.29127407]
[-116.23806763 2.78128958]
[-103.73403168 11.06676388]
[-91.22999573 19.35223961]
[-78.72595978 27.63771248]
[-66.22192383 35.92318726]
[-53.71788406 44.20866394]
[-46.40153885 45.28338623]
[-41.08644485 52.71924591]
[-28.71148300 61.19629288]
[-14.94333076 67.14926910]
[-0.29060563 70.35826874]
[14.36211872 73.56726074]
[29.01484299 76.77626038]
[43.66756821 79.98525238]
[58.32029343 83.19425201]
[72.97301483 86.40324402]
[82.30079651 75.46292877]
[95.62538147 70.06352997]
[109.93782806 71.42433167]
[118.22330475 58.92029190]
[126.50878143 46.41625595]
[134.79425049 33.91222000]
[143.07972717 21.40818596]
[143.86819458 14.83482361]
[147.33967590 10.32642937]
[151.81785583 8.65209103]
[160.48446655 -3.59086251]
[169.15107727 -15.83381653]
[177.81767273 -28.07677078]
[186.48428345 -40.31972504]
[195.15089417 -52.56267548]
[191.00643921 -67.64105988]
[197.57075500 -81.83414459]
[211.74436951 -88.44039917]
[226.83494568 -84.34055328]
[235.71716309 -71.47042084]
[234.19711304 -55.90688705]
[222.99252319 -44.99858475]
[207.39384460 -43.89606857]
[198.72723389 -31.65311623]
[190.06063843 -19.41016197]
[181.39402771 -7.16720867]
[172.72741699 5.07574511]
[164.06080627 17.31869888]
[155.58377075 29.69366074]
[147.29829407 42.19769669]
[139.01281738 54.70173264]
[130.72734070 67.20576477]
[122.44186401 79.70980072]
[133.83222961 89.68680573]
[140.06895447 105.78221893]
[154.72167969 108.99121857]
[169.37440491 112.20021057]
[184.02713013 115.40921021]
[199.16307068 110.80335236]
[209.94042969 121.08430481]
[224.59315491 124.29330444]
[239.24588013 127.50229645]
[253.92286682 130.59837341]
[268.62329102 133.58134460]
[280.92855835 121.98023224]
[297.55862427 120.01701355]
[311.93881226 128.26846313]
[318.50250244 143.31211853]
[333.24710083 146.06837463]
[347.99169922 148.82461548]
[362.73629761 151.58085632]
[377.48089600 154.33709717]
[392.22546387 157.09333801]
[406.97006226 159.84957886]
[423.65051270 156.81661987]
[431.18255615 172.00559998]
[418.67227173 183.44799805]
[404.21383667 174.59417725]
[389.46923828 171.83793640]
[374.72463989 169.08169556]
[359.98004150 166.32545471]
[345.23544312 163.56921387]
[330.49084473 160.81295776]
[315.74624634 158.05671692]
[306.93853760 168.09407043]
[294.21878052 172.50263977]
[280.87570190 170.02932739]
[270.41546631 161.21525574]
[265.64028931 148.28175354]
[250.93989563 145.29878235]
[243.75549316 147.05044556]
[236.03688049 142.15502930]
[221.38415527 138.94602966]
[206.73143005 135.73703003]
[192.64355469 140.57241821]
[180.81813049 130.06193542]
[166.16540527 126.85293579]
[151.51269531 123.64394379]
[136.85997009 120.43494415]
[131.12702942 125.27058411]
[142.44752502 135.11163330]
[154.02818298 144.64517212]
[149.79586792 159.03570557]
[134.89784241 160.78175354]
[127.45279694 147.75942993]
[119.66114044 134.94186401]
[113.92819977 139.77749634]
[114.62094879 154.76148987]
[115.31370544 169.74548340]
[123.68008423 183.17359924]
[116.53883362 196.24462891]
[117.23158264 211.22862244]
[117.92433929 226.21261597]
[129.32142639 236.83070374]
[129.81053162 252.03648376]
[119.61756134 262.83642578]
[120.31031036 277.82043457]
[129.60781860 291.32925415]
[122.31424713 306.01721191]
[105.93259430 306.77456665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[5 196]
[6 195]
[7 194]
[9 192]
[10 191]
[11 190]
[13 103]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[19 97]
[21 44]
[22 43]
[24 41]
[25 40]
[27 38]
[28 37]
[29 36]
[30 35]
[45 96]
[46 95]
[47 93]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
[54 86]
[55 85]
[58 82]
[59 81]
[60 80]
[66 79]
[67 78]
[68 77]
[69 76]
[70 75]
[106 136]
[107 135]
[108 134]
[109 133]
[110 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[138 182]
[139 181]
[140 180]
[141 179]
[143 177]
[144 176]
[145 175]
[146 173]
[147 172]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
