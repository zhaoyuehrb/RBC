%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGGCGGGAGGCGGGGCCCGGCCCGUUAAGAAGAGCGUGGCCGGCCGCGGCCACCGCUGGCCCCAGGGAAAGCCGAGCGGCCACCGAGCCGGCAGAGACCCACCGAGCGGCGGCGGAGGGAGCAGCGCCGGGGCGCACGAGGGCACCAUGGCCCAGACGCCCGCCUUCGACAAGCCCAAAGUGGAACUGCAUGUCCACCUAGACGGAUCCAUCAAGCCUGAAACCAUCUUAUACUAUGGCAGGAGGA\
) } def
/len { sequence length } bind def

/coor [
[83.86299133 124.24391937]
[72.61627197 134.16920471]
[61.36955261 144.09449768]
[50.12283325 154.01977539]
[48.54756546 166.80395508]
[38.99808884 174.83935547]
[26.93278503 174.24455261]
[15.56320858 184.02886963]
[4.19363260 193.81317139]
[-7.17594337 203.59748840]
[-18.54551888 213.38179016]
[-20.28003693 226.14533997]
[-29.92894173 234.06108093]
[-41.98589325 233.31590271]
[-53.47656250 242.95771790]
[-64.90690613 252.67097473]
[-76.27648163 262.45529175]
[-81.68967438 277.32162476]
[-96.38352966 279.75878906]
[-107.75311279 289.54312134]
[-119.12268829 299.32742310]
[-130.49226379 309.11172485]
[-134.93998718 317.05917358]
[-142.06509399 318.94607544]
[-153.55577087 328.58789062]
[-165.04643250 338.22970581]
[-176.53709412 347.87152100]
[-187.96743774 357.58477783]
[-199.33702087 367.36907959]
[-210.70658875 377.15338135]
[-222.07617188 386.93771362]
[-223.00714111 402.71453857]
[-234.87669373 413.14956665]
[-250.64280701 412.05184937]
[-260.95175171 400.07263184]
[-259.68740845 384.31900024]
[-247.59986877 374.13729858]
[-231.86048889 375.56811523]
[-220.49090576 365.78381348]
[-209.12133789 355.99951172]
[-197.75175476 346.21517944]
[-194.73988342 339.48791504]
[-186.17890930 336.38085938]
[-174.68824768 326.73904419]
[-163.19758606 317.09722900]
[-151.70690918 307.45541382]
[-140.27656555 297.74215698]
[-128.90699768 287.95785522]
[-117.53742218 278.17352295]
[-106.16784668 268.38922119]
[-101.56787872 254.22273254]
[-86.06079102 251.08570862]
[-74.69121552 241.30139160]
[-71.67934418 234.57411194]
[-63.11837387 231.46705627]
[-51.62770844 221.82524109]
[-46.50772095 205.02801514]
[-28.32983017 202.01222229]
[-16.96025467 192.22790527]
[-5.59067869 182.44360352]
[5.77889729 172.65928650]
[17.14847374 162.87496948]
[22.05866241 146.01522827]
[40.19754791 142.77305603]
[51.44426346 132.84777832]
[62.69098282 122.92248535]
[73.93769836 112.99720001]
[71.40957642 105.54600525]
[70.96839142 97.68997955]
[72.64634705 90.00257874]
[60.35906982 81.39893341]
[48.07178879 72.79528809]
[31.08676338 79.20284271]
[13.81297684 74.15640259]
[3.13738751 59.86535263]
[3.19735360 42.18484497]
[-9.30060291 33.89020157]
[-21.79855919 25.59556007]
[-34.29651642 17.30091667]
[-43.15153503 15.17192268]
[-46.89768600 8.82415867]
[-59.29126740 0.37435785]
[-73.45312500 6.49361897]
[-88.67142487 3.96244740]
[-100.09006500 -6.41146946]
[-104.06540680 -21.31785202]
[-99.32891846 -36.00012970]
[-87.39200592 -45.77323914]
[-72.06369019 -47.51861572]
[-58.23518372 -40.67931747]
[-50.31911469 -27.43774223]
[-50.84146500 -12.01922417]
[-38.44788361 -3.56942296]
[-26.00187302 4.80296135]
[-13.50391674 13.09760284]
[-1.00596070 21.39224434]
[11.49199581 29.68688774]
[22.08650780 23.82087135]
[34.24102402 23.00077057]
[45.66186905 27.44265747]
[54.16779709 36.36381149]
[58.10651779 48.11993027]
[56.67543411 60.50800323]
[68.96271515 69.11164856]
[81.25000000 77.71529388]
[97.82360840 70.95806885]
[115.21921539 75.16965485]
[126.08695221 64.83078003]
[136.95468140 54.49190521]
[129.89575195 31.11485100]
[138.95770264 7.31101608]
[161.56445312 -6.55694056]
[160.44349670 -21.51499748]
[159.32255554 -36.47305298]
[158.20159912 -51.43111038]
[157.08064270 -66.38916779]
[155.77331543 -81.33209229]
[154.27978516 -96.25755310]
[141.25836182 -104.91643524]
[136.89880371 -119.93403625]
[143.25958252 -134.21949768]
[157.33732605 -141.02766418]
[172.48495483 -137.14393616]
[181.55021667 -124.40207672]
[180.25277710 -108.81841278]
[169.20526123 -97.75106812]
[170.69877625 -82.82560730]
[173.74203491 -79.17608643]
[174.54217529 -73.58319855]
[172.03869629 -67.51011658]
[173.15965271 -52.55206299]
[174.28060913 -37.59400558]
[175.40155029 -22.63594818]
[176.52250671 -7.67789173]
[190.55284119 -2.37227082]
[201.29084778 -12.84582329]
[212.02885437 -23.31937599]
[222.76686096 -33.79292679]
[220.10523987 -50.50933456]
[227.86357117 -65.36618805]
[242.80297852 -72.58991241]
[258.93902588 -69.50725555]
[269.54562378 -80.11386108]
[280.15222168 -90.72045898]
[290.75881958 -101.32706451]
[301.36541748 -111.93366241]
[311.97201538 -122.54026794]
[322.57861328 -133.14686584]
[321.04388428 -141.29254150]
[322.81729126 -149.29365540]
[327.54086304 -155.87570190]
[334.39291382 -160.02001953]
[342.23007202 -161.12120056]
[349.77795410 -159.07460022]
[360.90005493 -169.13931274]
[372.02218628 -179.20404053]
[372.55953979 -194.99919128]
[384.16525269 -205.72688293]
[399.95382690 -205.02255249]
[410.55822754 -193.30407715]
[409.68701172 -177.52381897]
[397.85705566 -167.04393005]
[382.08691406 -168.08192444]
[370.96478271 -158.01721191]
[359.84268188 -147.95248413]
[355.19674683 -126.80514526]
[333.18524170 -122.54026794]
[322.57861328 -111.93366241]
[311.97201538 -101.32706451]
[301.36541748 -90.72045898]
[290.75881958 -80.11386108]
[280.15222168 -69.50725555]
[269.54562378 -58.90065384]
[272.84799194 -45.97990036]
[269.31277466 -33.00876617]
[259.75860596 -23.39701271]
[246.60058594 -19.72574806]
[233.24040222 -23.05492401]
[222.50241089 -12.58137226]
[211.76440430 -2.10782051]
[201.02639771 8.36573219]
[203.33580017 14.14464188]
[204.68162537 20.01285172]
[205.08946228 25.81678581]
[204.60850525 31.41252708]
[219.51417542 33.09199524]
[234.41986084 34.77146149]
[249.32554626 36.45092773]
[264.23123169 38.13039398]
[274.60034180 26.58652496]
[289.78146362 23.37508202]
[303.93713379 29.73093414]
[311.62420654 43.21012497]
[309.88684082 58.62963486]
[299.39309692 70.06034088]
[284.17803955 73.10691071]
[270.09216309 66.59786987]
[262.55175781 53.03607941]
[247.64608765 51.35661316]
[232.74040222 49.67714310]
[217.83471680 47.99767685]
[202.92903137 46.31821060]
[197.91007996 56.35527420]
[190.04414368 64.41408539]
[180.06202698 69.71155548]
[168.90174866 71.72275543]
[157.62028503 70.23281097]
[147.29356384 65.35964203]
[136.42582703 75.69851685]
[125.55809021 86.03739166]
[128.79808044 104.34061432]
[120.30706787 120.87567139]
[127.64454651 133.95854187]
[134.98202515 147.04141235]
[141.89057922 152.97569275]
[142.32826233 160.33341980]
[149.50205994 173.50674438]
[164.39436340 178.07373047]
[171.48196411 191.53555298]
[167.03625488 205.70492554]
[174.21006775 218.87825012]
[181.38388062 232.05157471]
[196.19696045 229.04092407]
[211.23918152 230.53189087]
[225.17300415 236.39195251]
[236.75942993 246.09999084]
[244.96820068 258.79278564]
[249.06942749 273.34173584]
[248.69839478 288.45309448]
[243.88812256 302.78323364]
[235.06631470 315.05789185]
[223.01742554 324.18560791]
[208.81280518 329.35479736]
[193.71554565 330.10577393]
[179.06805420 326.37176514]
[166.17280579 318.48480225]
[156.17643738 307.14620972]
[149.96778870 293.36419678]
[148.09895325 278.36422729]
[150.73609924 263.48010254]
[157.64474487 250.03533936]
[168.21055603 239.22538757]
[161.03674316 226.05206299]
[153.86294556 212.87873840]
[139.54829407 208.92570496]
[132.08537292 195.66827393]
[136.32873535 180.68055725]
[129.15493774 167.50723267]
[121.89914703 154.37887573]
[114.56167603 141.29602051]
[107.22419739 128.21315002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 67]
[2 66]
[3 65]
[4 64]
[7 62]
[8 61]
[9 60]
[10 59]
[11 58]
[14 56]
[15 55]
[16 53]
[17 52]
[19 50]
[20 49]
[21 48]
[22 47]
[24 46]
[25 45]
[26 44]
[27 43]
[28 41]
[29 40]
[30 39]
[31 38]
[70 105]
[71 104]
[72 103]
[76 97]
[77 96]
[78 95]
[79 94]
[81 93]
[82 92]
[107 210]
[108 209]
[109 208]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[117 127]
[118 126]
[135 181]
[136 180]
[137 179]
[138 178]
[142 173]
[143 172]
[144 171]
[145 170]
[146 169]
[147 168]
[148 167]
[154 165]
[155 164]
[156 163]
[185 202]
[186 201]
[187 200]
[188 199]
[189 198]
[212 251]
[213 250]
[214 249]
[216 248]
[217 247]
[220 244]
[221 243]
[222 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
