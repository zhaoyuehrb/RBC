%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCCACCUCCAGAGUCCAAGGGUCUAUGUGGUGGGCAGUUUGAGCUGGCUGGAUACUAGAGGGAGGCUGCACCUGAAGCAUUUGGUGGGUGAGCAGCAUGGGCUUUGAGGAGCUGCUGGAGCAGGUGGGCGGCUUUGGGCCCUUCCAACUGCGGAAUGUGGCACUGCUGGCCCUGCCCCGAGUGCUGCUACCACUGC\
) } def
/len { sequence length } bind def

/coor [
[80.16369629 129.21272278]
[66.82017517 115.11093140]
[53.56369400 122.12987518]
[40.30720901 129.14881897]
[27.05072594 136.16777039]
[13.79424095 143.18672180]
[12.03836346 163.09231567]
[-1.27659881 177.79911804]
[-20.62709045 181.46524048]
[-38.14071274 172.77613831]
[-50.93031693 180.61361694]
[-63.71991730 188.45109558]
[-76.50952148 196.28857422]
[-89.29912567 204.12605286]
[-101.96404266 212.16346741]
[-114.50115204 220.39880371]
[-127.03826141 228.63414001]
[-134.32460022 242.67764282]
[-149.21009827 243.19831848]
[-161.74720764 251.43365479]
[-174.28431702 259.66900635]
[-186.82142639 267.90435791]
[-194.70602417 284.54052734]
[-212.24800110 284.87652588]
[-224.65420532 293.30776978]
[-237.06040955 301.73901367]
[-249.46662903 310.17028809]
[-261.87283325 318.60153198]
[-274.27905273 327.03277588]
[-283.98074341 340.93649292]
[-300.02679443 335.46289062]
[-299.20907593 318.52865601]
[-282.71029663 314.62655640]
[-270.30407715 306.19531250]
[-257.89788818 297.76406860]
[-245.49166870 289.33282471]
[-233.08544922 280.90155029]
[-220.67924500 272.47030640]
[-218.10260010 260.64562988]
[-207.82803345 253.52101135]
[-195.05677795 255.36723328]
[-182.51965332 247.13189697]
[-169.98254395 238.89654541]
[-157.44543457 230.66120911]
[-151.05584717 217.20675659]
[-135.27360535 216.09703064]
[-122.73649597 207.86169434]
[-110.19938660 199.62635803]
[-108.36984253 195.20599365]
[-103.73918152 191.89208984]
[-97.13660431 191.33645630]
[-84.34700012 183.49897766]
[-71.55739594 175.66149902]
[-58.76779556 167.82402039]
[-45.97819138 159.98654175]
[-47.45663834 149.73092651]
[-45.42691422 139.53102112]
[-40.09587097 130.55690002]
[-32.05054474 123.84664917]
[-22.19358253 120.18629456]
[-11.64202595 120.01784515]
[-1.60071242 123.38601685]
[6.77529335 129.93023682]
[20.03177834 122.91128540]
[33.28826141 115.89234161]
[46.54474640 108.87339020]
[59.80123138 101.85444641]
[61.91474915 87.00408936]
[51.14285660 76.56539917]
[40.37096024 66.12670898]
[25.10867310 68.92710114]
[11.12977409 62.19137955]
[3.80943322 48.50955582]
[5.96247196 33.14257812]
[16.76100349 21.99935722]
[32.05277252 19.36469269]
[45.95777893 26.25166512]
[53.12926865 40.01209259]
[50.80965424 55.35481262]
[61.58154678 65.79350281]
[72.35343933 76.23219299]
[83.78402710 68.63275146]
[96.80808258 65.98632050]
[109.44068146 68.36325836]
[119.87806702 75.09220123]
[126.75517273 84.90502930]
[141.22354126 80.94692993]
[155.69189453 76.98883820]
[170.16026306 73.03073883]
[184.62861633 69.07263947]
[189.46847534 59.31919479]
[198.68997192 53.95430756]
[209.12223816 54.54307556]
[217.32885742 60.64944839]
[231.91441345 57.14776611]
[246.49996948 53.64608383]
[261.08551025 50.14440536]
[275.67105103 46.64272308]
[290.25662231 43.14104462]
[304.84216309 39.63936234]
[319.42770386 36.13768387]
[333.76458740 31.72707748]
[347.79626465 26.42495537]
[361.82791138 21.12283325]
[375.85958862 15.82071018]
[389.89123535 10.51858807]
[394.08279419 -4.30494404]
[406.05920410 -13.70808315]
[421.09817505 -14.24963188]
[433.42474365 -5.93134928]
[447.45639038 -11.23347187]
[453.46954346 -22.65082550]
[465.27270508 -26.77537918]
[476.35360718 -21.90955353]
[490.46679688 -26.99062347]
[504.58001709 -32.07169342]
[518.69323730 -37.15275955]
[532.80645752 -42.23382950]
[535.56445312 -58.53245544]
[546.10314941 -71.14565277]
[561.47528076 -76.69353485]
[577.45550537 -73.75179291]
[589.70190430 -63.21593475]
[603.73358154 -68.51805878]
[617.76525879 -73.82018280]
[631.79693604 -79.12229919]
[641.97125244 -91.23812866]
[656.61187744 -88.49908447]
[670.64349365 -93.80120850]
[684.67517090 -99.10333252]
[698.70684814 -104.40545654]
[710.03063965 -118.92100525]
[727.22338867 -115.42224884]
[741.17004395 -120.94412231]
[755.11669922 -126.46598816]
[769.06335449 -131.98785400]
[781.56439209 -143.44036865]
[796.02996826 -134.59825134]
[791.53790283 -118.25023651]
[774.58520508 -118.04120636]
[760.63854980 -112.51934052]
[746.69195557 -106.99747467]
[732.74530029 -101.47560883]
[727.65124512 -90.49777222]
[716.06988525 -85.78607178]
[704.00897217 -90.37379456]
[689.97729492 -85.07167053]
[675.94561768 -79.76954651]
[661.91400146 -74.46742249]
[652.74328613 -62.73084259]
[637.09906006 -65.09064484]
[623.06738281 -59.78852081]
[609.03570557 -54.48639679]
[595.00402832 -49.18427277]
[593.68890381 -35.58581924]
[586.60742188 -23.82516479]
[575.09356689 -16.22828102]
[561.36425781 -14.32624054]
[548.09259033 -18.54696465]
[537.88751221 -28.12061691]
[523.77429199 -23.03954887]
[509.66110229 -17.95848083]
[495.54788208 -12.87741184]
[481.43466187 -7.79634237]
[470.85192871 6.19791079]
[452.75851440 2.79818845]
[438.72686768 8.10031128]
[434.98153687 22.49164963]
[423.34252930 32.03087997]
[408.14047241 32.89762115]
[395.19335938 24.55024910]
[381.16171265 29.85237122]
[367.13003540 35.15449524]
[353.09838867 40.45661545]
[339.06671143 45.75873947]
[353.09304810 51.07492828]
[361.41714478 63.55329132]
[360.93826294 78.54564667]
[351.83480835 90.46734619]
[337.49777222 94.87755585]
[323.26776123 90.13349152]
[314.44537354 78.00229645]
[314.31701660 63.00284576]
[322.92938232 50.72323227]
[308.34384155 54.22491074]
[293.75830078 57.72659302]
[279.17272949 61.22827530]
[264.58718872 64.72995758]
[250.00164795 68.23163605]
[235.41609192 71.73331451]
[220.83055115 75.23499298]
[207.82632446 89.53805542]
[188.58671570 83.54100800]
[174.11834717 87.49909973]
[159.64999390 91.45719910]
[145.18162537 95.41529083]
[130.71327209 99.37339020]
[127.55125427 116.01451111]
[115.75128937 129.01562500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 67]
[3 66]
[4 65]
[5 64]
[6 63]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[15 48]
[16 47]
[17 46]
[19 44]
[20 43]
[21 42]
[22 41]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[68 81]
[69 80]
[70 79]
[86 197]
[87 196]
[88 195]
[89 194]
[90 193]
[94 191]
[95 190]
[96 189]
[97 188]
[98 187]
[99 186]
[100 185]
[101 184]
[102 175]
[103 174]
[104 173]
[105 172]
[106 171]
[110 167]
[111 166]
[114 164]
[115 163]
[116 162]
[117 161]
[118 160]
[123 154]
[124 153]
[125 152]
[126 151]
[128 149]
[129 148]
[130 147]
[131 146]
[133 143]
[134 142]
[135 141]
[136 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
