%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCGACUGUGUGGAAGCACCAGGCAUCAGAGAUAGAGUCUUCCCUGGCAUUGCAGGAGAGAAUCUGAAGGGAUGAUGGAUGCAUCAAAAGAGCUGCAAGUUCUCCACAUUGACUUCUUGAAUCAGGACAACGCCGUUUCUCACCACACAUGGGAGUUCCAAACGAGCAGUC\
) } def
/len { sequence length } bind def

/coor [
[101.73628235 198.37878418]
[89.65265656 208.56512451]
[73.91272736 207.14031982]
[63.85470581 194.94967651]
[65.44584656 179.22569275]
[77.74214172 169.29711914]
[79.09444427 154.35820007]
[80.44673920 139.41928101]
[81.79903412 124.48036194]
[75.50069427 110.86672974]
[63.23936081 102.22615051]
[50.97802734 93.58556366]
[38.71669006 84.94498444]
[26.45535660 76.30439758]
[14.19402122 67.66381836]
[1.93268645 59.02323532]
[-15.54352093 63.46823883]
[-31.66158676 50.81060791]
[-46.11483765 46.79768372]
[-60.56808853 42.78475952]
[-75.05697632 38.90247345]
[-89.58032227 35.15114212]
[-104.10366058 31.39981461]
[-115.61332703 37.27128220]
[-127.64871216 33.82352829]
[-133.88949585 23.43584824]
[-148.34274292 19.42292404]
[-162.79598999 15.40999889]
[-177.24925232 11.39707375]
[-186.72198486 21.71483421]
[-199.65718079 26.91279602]
[-213.50315857 26.02716064]
[-225.55506897 19.28818893]
[-233.48320007 8.06401443]
[-235.78332520 -5.41674137]
[-250.16177368 -9.68995380]
[-264.54022217 -13.96316528]
[-278.91867065 -18.23637772]
[-294.35119629 -14.75109291]
[-304.34689331 -25.79353714]
[-318.72534180 -30.06674957]
[-333.10379028 -34.33996201]
[-347.48220825 -38.61317444]
[-362.91476440 -35.12788773]
[-372.91043091 -46.17033386]
[-387.28887939 -50.44354630]
[-401.66732788 -54.71675873]
[-416.04577637 -58.98997116]
[-429.82052612 -51.24193573]
[-445.01669312 -55.58385468]
[-452.61865234 -69.43974304]
[-448.11630249 -84.58914948]
[-434.18081665 -92.04419708]
[-419.07986450 -87.38194275]
[-411.77255249 -73.36841583]
[-397.39413452 -69.09519958]
[-383.01568604 -64.82199097]
[-368.63723755 -60.54877853]
[-354.23312378 -64.33971405]
[-343.20901489 -52.99161911]
[-328.83056641 -48.71840668]
[-314.45211792 -44.44519424]
[-300.07366943 -40.17198181]
[-285.66958618 -43.96291733]
[-274.64544678 -32.61482239]
[-260.26699829 -28.34160995]
[-245.88856506 -24.06839752]
[-231.51011658 -19.79518509]
[-220.06929016 -31.18404388]
[-204.35820007 -35.28243637]
[-188.63136292 -30.88290024]
[-177.19688416 -19.09251022]
[-173.23632812 -3.05617619]
[-158.78306580 0.95674890]
[-144.32981873 4.96967411]
[-129.87657166 8.98259926]
[-113.16539001 3.67350054]
[-100.35233307 16.87647057]
[-85.82898712 20.62779999]
[-71.30564117 24.37912941]
[-64.01773834 23.00271034]
[-56.55516052 28.33150864]
[-42.10191345 32.34443283]
[-27.64866257 36.35736084]
[-41.55310059 30.73005295]
[-49.10351181 17.76890755]
[-47.14017105 2.89795208]
[-36.48470306 -7.65955830]
[-21.59625053 -9.48547745]
[-8.70538902 -1.81568789]
[-3.20673370 12.14012814]
[-7.40211058 26.54272079]
[-1.59936476 12.71057892]
[4.20338106 -1.12156236]
[10.00612640 -14.95370388]
[15.80887222 -28.78584480]
[16.36064720 -45.73081207]
[32.79614639 -49.89143372]
[41.34396744 -35.25001526]
[29.64101410 -22.98310089]
[23.83826828 -9.15095806]
[18.03552246 4.68118334]
[12.23277664 18.51332474]
[6.43003130 32.34546661]
[10.57326889 46.76190186]
[22.83460426 55.40248489]
[35.09593964 64.04306793]
[47.35727310 72.68364716]
[59.61861038 81.32423401]
[71.87994385 89.96481323]
[84.14128113 98.60539246]
[81.69091797 91.41315460]
[82.72673798 82.58934784]
[87.96628571 73.80356598]
[97.35924530 66.97448730]
[110.02194214 63.93283463]
[124.31327057 66.07665253]
[138.76652527 62.06372833]
[153.21977234 58.05080032]
[167.67301941 54.03787613]
[182.12626648 50.02495193]
[195.77050781 39.96158218]
[209.21768188 50.28677368]
[203.01855469 66.06673431]
[186.13919067 64.47820282]
[171.68594360 68.49112701]
[157.23269653 72.50405121]
[142.77944946 76.51697540]
[128.32620239 80.52989960]
[126.51616669 87.80821228]
[141.07272339 91.42852020]
[137.45216370 105.98501587]
[122.89609528 102.36483002]
[121.08605957 109.64313507]
[131.97599792 119.95862579]
[142.95860291 130.17538452]
[154.03300476 140.29258728]
[165.10739136 150.40979004]
[176.18179321 160.52699280]
[187.25617981 170.64419556]
[198.68861389 180.35499573]
[210.46417236 189.64671326]
[222.23973083 198.93844604]
[230.94764709 201.81217957]
[234.14202881 208.50576782]
[245.74790955 218.00857544]
[257.35379028 227.51138306]
[273.61563110 229.62907410]
[279.66189575 244.87290955]
[269.27270508 257.56137085]
[253.13555908 254.64161682]
[247.85098267 239.11727905]
[236.24510193 229.61447144]
[224.63920593 220.11164856]
[212.94801331 210.71400452]
[201.17245483 201.42228699]
[189.39689636 192.13055420]
[186.56900024 192.34648132]
[183.48416138 191.43557739]
[180.57847595 189.29379272]
[178.31765747 185.97943115]
[177.13897705 181.71859741]
[166.06459045 171.60139465]
[154.99018860 161.48419189]
[143.91580200 151.36698914]
[132.84140015 141.24978638]
[125.75772095 139.05215454]
[121.66049957 130.84855652]
[110.77056885 120.53306580]
[96.73795319 125.83265686]
[95.38565826 140.77157593]
[94.03336334 155.71049500]
[92.68106079 170.64941406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 173]
[7 172]
[8 171]
[9 170]
[10 111]
[11 110]
[12 109]
[13 108]
[14 107]
[15 106]
[16 105]
[18 84]
[19 83]
[20 82]
[21 80]
[22 79]
[23 78]
[26 76]
[27 75]
[28 74]
[29 73]
[35 68]
[36 67]
[37 66]
[38 65]
[40 63]
[41 62]
[42 61]
[43 60]
[45 58]
[46 57]
[47 56]
[48 55]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[134 169]
[135 168]
[136 166]
[137 165]
[138 164]
[139 163]
[140 162]
[141 157]
[142 156]
[143 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
