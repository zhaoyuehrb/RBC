%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAUGAGCAUGCGCACUUCCCCAGCACAAUCAGGGAAGACACGCGUGACCCGGAAGGUCUUCCCGCCACACUCCAGAGCGGAUGUGAGGGGCGCCGAUGGCGGAGGGAACGGCGGAGGCUCCUCUAGAGAAUGGUGGUGGUGGCGACUCGGGAGCCGGAGCUUUGGAACGAGGAGUGGCGCCCAUUAAGCGUCAAU\
) } def
/len { sequence length } bind def

/coor [
[266.68807983 430.34283447]
[265.97433472 415.35983276]
[265.26062012 400.37680054]
[270.78045654 385.06762695]
[280.69149780 375.20452881]
[292.23641968 371.72967529]
[282.96405029 359.93887329]
[273.69165039 348.14810181]
[261.71557617 346.39831543]
[253.89479065 336.64175415]
[254.85160828 323.77212524]
[245.76747131 311.83569336]
[236.68331909 299.89926147]
[230.12379456 296.47680664]
[227.55152893 287.70062256]
[218.65791321 275.62158203]
[209.76429749 263.54251099]
[200.87068176 251.46347046]
[187.09396362 245.80207825]
[185.14234924 230.10169983]
[176.24871826 218.02265930]
[167.25956726 206.01452637]
[158.17541504 194.07810974]
[149.09126282 182.14167786]
[138.16799927 184.49397278]
[127.10624695 182.58645630]
[117.51432800 176.65757751]
[110.80139160 167.53323364]
[107.97040558 156.51194763]
[109.46847534 145.18013000]
[115.11669922 135.18371582]
[106.61080170 122.82856750]
[82.28482056 128.88014221]
[56.78464508 108.24344635]
[41.78464508 108.24344635]
[26.78464508 108.24344635]
[11.78464508 108.24344635]
[-3.21535516 108.24344635]
[-18.21535492 108.24344635]
[-33.21535492 108.24344635]
[-48.21535492 108.24344635]
[-57.96556091 122.05855560]
[-73.86986542 127.29172516]
[-89.60300446 122.07006073]
[-99.03128052 108.63783264]
[-114.02938843 108.87582397]
[-126.17993927 119.35169220]
[-141.91874695 116.24212646]
[-149.17234802 101.93252563]
[-142.37641907 87.39998627]
[-126.74418640 83.79262543]
[-114.26737976 93.87770844]
[-99.26927185 93.63971710]
[-92.63703918 82.04604340]
[-81.04784393 75.19079590]
[-67.47663879 74.95806122]
[-55.46912766 81.51569366]
[-48.21535492 93.24344635]
[-33.21535492 93.24344635]
[-18.21535492 93.24344635]
[-3.21535516 93.24344635]
[11.78464508 93.24344635]
[26.78464508 93.24344635]
[41.78464508 93.24344635]
[56.78464508 93.24344635]
[60.00810623 86.47149658]
[66.45503235 72.92759705]
[69.67848969 66.15564728]
[60.22020340 54.51345062]
[50.76191330 42.87125397]
[41.30362320 31.22905731]
[33.45475769 26.53512764]
[31.78939056 19.32628632]
[22.51700592 7.53549051]
[13.24462128 -4.25530577]
[-2.45016265 -7.57995892]
[-9.50726795 -21.98748589]
[-2.51308799 -36.42566299]
[13.16704178 -39.81875992]
[25.50466728 -29.56387901]
[25.03541756 -13.52769089]
[34.30780411 -1.73689413]
[43.58018875 10.05390263]
[52.94581985 21.77076721]
[62.40410995 33.41296387]
[71.86239624 45.05516052]
[81.32068634 56.69735718]
[95.97789001 53.50888062]
[99.74510956 38.98964691]
[103.51232910 24.47041893]
[107.27954865 9.95118809]
[111.04676819 -4.56804276]
[107.02334595 -19.86911011]
[117.70908356 -30.24524879]
[121.47630310 -44.76447678]
[125.24352264 -59.28371048]
[117.49421692 -72.79615021]
[121.52154541 -87.46704865]
[134.45135498 -94.77155304]
[138.21856689 -109.29078674]
[134.19514465 -124.59185028]
[144.88088989 -134.96798706]
[148.64810181 -149.48721313]
[139.43063354 -162.11941528]
[140.54104614 -177.71752930]
[151.45501709 -188.91659546]
[167.01931763 -190.42877197]
[179.88494873 -181.54005432]
[183.97715759 -166.44740295]
[177.36373901 -152.27713013]
[163.16732788 -145.72000122]
[159.40011597 -131.20077515]
[163.69299316 -116.93821716]
[152.73779297 -105.52356720]
[148.97058105 -91.00433350]
[156.71784973 -78.33486938]
[153.10418701 -63.55663681]
[139.76275635 -55.51649094]
[135.99552917 -40.99725723]
[132.22831726 -26.47802734]
[136.52119446 -12.21547413]
[125.56600189 -0.80082309]
[121.79878235 13.71840763]
[118.03156281 28.23763847]
[114.26434326 42.75687027]
[110.49712372 57.27610016]
[131.92367554 88.65234375]
[118.96595001 114.32266998]
[127.47184753 126.67781830]
[146.59748840 126.34216309]
[161.94760132 137.50292969]
[167.43815613 155.51327515]
[161.02769470 173.05752563]
[170.11184692 184.99395752]
[179.19598389 196.93038940]
[186.89196777 201.87098694]
[188.32777405 209.12902832]
[197.22140503 221.20808411]
[211.63424683 227.73344421]
[212.94973755 242.56985474]
[221.84335327 254.64891052]
[230.73696899 266.72796631]
[239.63058472 278.80700684]
[248.61975098 290.81512451]
[257.70388794 302.75155640]
[266.78805542 314.68798828]
[283.93002319 321.40008545]
[285.48245239 338.87570190]
[294.75482178 350.66650391]
[304.02722168 362.45730591]
[314.96499634 372.72204590]
[327.32015991 381.22793579]
[339.67529297 389.73382568]
[355.42968750 391.18630981]
[361.52532959 404.77648926]
[373.88049316 413.28237915]
[386.23562622 421.78826904]
[398.59078979 430.29415894]
[411.47329712 426.34097290]
[424.09518433 430.47213745]
[431.91452026 440.96517944]
[432.25405884 453.85214233]
[444.47268677 462.55300903]
[456.69131470 471.25384521]
[468.90997314 479.95471191]
[481.12860107 488.65554810]
[497.53799438 492.91793823]
[497.98474121 509.86602783]
[481.82269287 514.98699951]
[472.42773438 500.87420654]
[460.20910645 492.17333984]
[447.99047852 483.47250366]
[435.77182007 474.77163696]
[423.55319214 466.07077026]
[407.10791016 469.56790161]
[392.93981934 459.90301514]
[390.08489990 442.64932251]
[377.72973633 434.14343262]
[365.37460327 425.63751221]
[353.01943970 417.13162231]
[338.14877319 416.28753662]
[331.16940308 402.08898926]
[318.81427002 393.58306885]
[306.45910645 385.07717896]
[299.90524292 388.72366333]
[307.19818115 401.83139038]
[318.18469238 412.04397583]
[311.86694336 425.64862061]
[296.97589111 423.84411621]
[294.09045410 409.12435913]
[286.79748535 396.01660156]
[280.24362183 399.66308594]
[280.95736694 414.64608765]
[281.67108154 429.62911987]
[290.98748779 443.12490845]
[283.71450806 457.82305908]
[267.33392334 458.60336304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[6 150]
[7 149]
[8 148]
[11 146]
[12 145]
[13 144]
[15 143]
[16 142]
[17 141]
[18 140]
[20 138]
[21 137]
[22 135]
[23 134]
[24 133]
[31 129]
[32 128]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[45 53]
[46 52]
[68 87]
[69 86]
[70 85]
[71 84]
[73 83]
[74 82]
[75 81]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
[94 120]
[95 119]
[96 118]
[99 115]
[100 114]
[102 112]
[103 111]
[151 184]
[152 183]
[153 182]
[155 180]
[156 179]
[157 178]
[158 177]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
