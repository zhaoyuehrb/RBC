%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCAGGCUGCGGUCGCGCAGGCGCAGUCGGGGCGCCUUCCCGGUAUAGGCGCCUUUUACCCCAGCGUGUCCUGAGUCUUUGGUUCGCGAAGUGCCGUUAGGCCAAGCAGGUGCUAAAAGCCCGGGGUCGUGGACCCCGGCCAGGUCUUAGCAGCAUGGAGGCGCAGGGUGUAGCGGAGGGCGCGGGGCCGGGCGCCGCCAGCGGCGUGCCCCACCCCGCGGCCCUAGCCCCGGCUGCGGCUCCCACCUUGGCG\
C\
) } def
/len { sequence length } bind def

/coor [
[81.88179779 453.36697388]
[84.30787659 434.13772583]
[84.49123383 419.13885498]
[84.67459106 404.13998413]
[84.85794830 389.14108276]
[84.85794830 374.14108276]
[84.67459106 359.14221191]
[84.49123383 344.14334106]
[69.74269104 341.40829468]
[64.19355774 355.34411621]
[58.64442062 369.27993774]
[53.09528351 383.21575928]
[47.54614639 397.15158081]
[50.44419861 413.29263306]
[37.74180222 423.66476440]
[22.50609589 417.59802246]
[20.41026878 401.33334351]
[33.61032867 391.60244751]
[39.15946198 377.66662598]
[44.70859909 363.73080444]
[50.25773239 349.79498291]
[55.80686951 335.85916138]
[55.11671829 306.57177734]
[76.52178955 292.36004639]
[77.80374908 277.41491699]
[79.08571625 262.46978760]
[80.36767578 247.52467346]
[81.64964294 232.57955933]
[82.93161011 217.63444519]
[84.21356964 202.68933105]
[85.49553680 187.74420166]
[86.77750397 172.79908752]
[88.05946350 157.85397339]
[89.34143066 142.90884399]
[90.62339020 127.96372986]
[78.08175659 119.73528290]
[64.88276672 126.86176300]
[51.68377686 133.98823547]
[38.48478699 141.11471558]
[37.41410065 156.50488281]
[28.17452431 168.85939026]
[13.71436882 174.23594666]
[-1.35218167 170.91893005]
[-12.21744633 159.96678162]
[-15.41435719 144.87429810]
[-9.92279339 130.45741272]
[2.50490761 121.31653595]
[17.90311241 120.36846161]
[31.35830879 127.91572571]
[44.55730057 120.78924561]
[57.75629044 113.66277313]
[70.95527649 106.53629303]
[74.04444122 88.14997101]
[87.08567047 75.95426941]
[104.06827545 74.26371765]
[99.73045349 59.90463257]
[88.33290863 48.93164444]
[92.05904388 34.51064301]
[87.72122192 20.15155983]
[83.38340759 5.79247332]
[79.04559326 -8.56661224]
[74.62008667 -22.89891624]
[70.10707092 -37.20390320]
[65.59405518 -51.50889206]
[54.06323242 -62.34174347]
[57.61280823 -76.80721283]
[53.09979248 -91.11219788]
[48.58677673 -105.41719055]
[44.07376099 -119.72217560]
[32.54293442 -130.55502319]
[36.09251022 -145.02049255]
[31.57949257 -159.32548523]
[27.06647682 -173.63047791]
[19.71776962 -173.73135376]
[12.42157745 -176.17671204]
[5.93573713 -180.92996216]
[0.99543828 -187.70806885]
[-1.76682663 -195.99383545]
[-1.89540994 -205.07385254]
[-14.82423973 -212.67945862]
[-27.75306892 -220.28507996]
[-40.68190002 -227.89068604]
[-53.61072922 -235.49630737]
[-69.43877411 -232.87854004]
[-81.25707245 -243.72784424]
[-79.99964905 -259.72152710]
[-66.63108826 -268.59063721]
[-51.40660095 -263.53152466]
[-46.00511551 -248.42512512]
[-33.07628632 -240.81951904]
[-20.14745522 -233.21389771]
[-7.21862602 -225.60829163]
[5.71020365 -218.00267029]
[18.44924545 -225.92207336]
[17.35006142 -240.88174438]
[16.25087929 -255.84141541]
[7.52312088 -269.03750610]
[14.30697918 -282.29754639]
[13.20779705 -297.25720215]
[12.10861492 -312.21688843]
[11.00943184 -327.17657471]
[9.91024971 -342.13623047]
[8.81106663 -357.09591675]
[7.62047148 -372.04858398]
[6.33850718 -386.99368286]
[-14.36032009 -396.14019775]
[-20.49505997 -423.87564087]
[-26.55140877 -437.59863281]
[-32.60775757 -451.32162476]
[-46.15571594 -460.56201172]
[-44.65762711 -476.89260864]
[-29.65459633 -483.51385498]
[-16.58045578 -473.61441040]
[-18.88475990 -457.37799072]
[-12.82841206 -443.65496826]
[-6.77206326 -429.93197632]
[0.62604302 -431.16406250]
[-1.83811617 -445.96026611]
[-4.30204678 -460.75653076]
[10.49424267 -463.22021484]
[12.95809650 -448.42443848]
[15.42225647 -433.62823486]
[22.82036209 -434.86029053]
[24.10232735 -449.80541992]
[25.38429070 -464.75054932]
[26.66625595 -479.69564819]
[27.94821930 -494.64077759]
[29.23018456 -509.58590698]
[30.51214790 -524.53100586]
[31.79411316 -539.47613525]
[27.12357521 -555.77404785]
[41.49163818 -564.77380371]
[54.11713028 -553.45861816]
[46.73923111 -538.19415283]
[45.45726776 -523.24902344]
[44.17530441 -508.30392456]
[42.89333725 -493.35879517]
[41.61137390 -478.41369629]
[40.32941055 -463.46856689]
[39.04744720 -448.52346802]
[37.76548004 -433.57833862]
[43.17096710 -417.85272217]
[40.62672424 -403.06619263]
[32.23535156 -392.63360596]
[21.28362465 -388.27566528]
[22.56558990 -373.33053589]
[26.25769424 -366.95349121]
[23.77073860 -358.19509888]
[24.86992264 -343.23541260]
[25.96910477 -328.27575684]
[27.06828690 -313.31607056]
[28.16746902 -298.35638428]
[29.26665115 -283.39672852]
[37.91579056 -271.27066040]
[31.21055222 -256.94061279]
[32.30973434 -241.98092651]
[33.40891647 -227.02125549]
[53.86422729 -202.96316528]
[41.37146378 -178.14349365]
[45.88447952 -163.83850098]
[50.39749527 -149.53350830]
[61.60552216 -139.72384644]
[58.37874985 -124.23519135]
[62.89176559 -109.93020630]
[67.40477753 -95.62521362]
[71.91779327 -81.32022858]
[83.12582397 -71.51056671]
[79.89904785 -56.02190781]
[84.41206360 -41.71691895]
[88.92507935 -27.41193199]
[93.92003632 -21.99448395]
[93.40467834 -12.90442944]
[97.74249268 1.45465612]
[102.08030701 15.81374168]
[106.41812897 30.17282677]
[117.50540161 40.11875916]
[114.08953857 55.56681824]
[118.42736053 69.92590332]
[129.25840759 80.30319977]
[143.78988647 84.02288818]
[158.32138062 87.74257660]
[172.85285950 91.46227264]
[187.38433838 95.18196106]
[201.93827820 98.81276703]
[216.51414490 102.35455322]
[231.08999634 105.89633179]
[245.66586304 109.43811798]
[260.24172974 112.97990417]
[274.81759644 116.52168274]
[288.20831299 108.56392670]
[302.93988037 112.36343384]
[310.44384766 125.17849731]
[325.01971436 128.72027588]
[339.59558105 132.26206970]
[354.17144775 135.80384827]
[368.74731445 139.34562683]
[383.32315063 142.88742065]
[392.37112427 141.87306213]
[398.05502319 146.56260681]
[412.58648682 150.28228760]
[427.11798096 154.00198364]
[443.96173096 152.07228088]
[450.47885132 167.72358704]
[437.24331665 178.31872559]
[423.39828491 168.53346252]
[408.86679077 164.81378174]
[394.33532715 161.09408569]
[379.78137207 157.46327209]
[365.20550537 153.92149353]
[350.62966919 150.37971497]
[336.05380249 146.83792114]
[321.47793579 143.29614258]
[306.90206909 139.75436401]
[294.35418701 147.69702148]
[279.52172852 144.31278992]
[271.27581787 131.09754944]
[256.69995117 127.55576324]
[242.12408447 124.01397705]
[227.54821777 120.47219849]
[212.97235107 116.93041229]
[198.39648438 113.38862610]
[191.17591858 114.85887146]
[183.66464233 109.71343994]
[169.13316345 105.99375153]
[154.60168457 102.27405548]
[140.07020569 98.55436707]
[125.53872681 94.83467865]
[123.17048645 115.56568909]
[105.56851196 129.24569702]
[104.28654480 144.19081116]
[103.00458527 159.13592529]
[101.72261810 174.08105469]
[100.44065857 189.02616882]
[99.15869141 203.97128296]
[97.87672424 218.91641235]
[96.59476471 233.86152649]
[95.31279755 248.80664062]
[94.03083038 263.75177002]
[92.74887085 278.69686890]
[91.46690369 293.64199829]
[97.88539886 296.29489136]
[103.53344727 300.76303101]
[107.89428711 306.81384277]
[110.52371979 314.06732178]
[111.09191895 322.01943970]
[109.41777039 330.07690430]
[105.49250031 337.60140991]
[99.49011230 343.95999146]
[99.67346954 358.95886230]
[99.85682678 373.95773315]
[102.87668610 379.78646851]
[102.56758881 385.42453003]
[99.85682678 389.32446289]
[99.67346954 404.32333374]
[99.49011230 419.32220459]
[99.30675507 434.32107544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 256]
[3 255]
[4 254]
[5 253]
[6 250]
[7 249]
[8 248]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[24 240]
[25 239]
[26 238]
[27 237]
[28 236]
[29 235]
[30 234]
[31 233]
[32 232]
[33 231]
[34 230]
[35 229]
[36 52]
[37 51]
[38 50]
[39 49]
[55 178]
[56 177]
[58 175]
[59 174]
[60 173]
[61 172]
[62 170]
[63 169]
[64 168]
[66 166]
[67 165]
[68 164]
[69 163]
[71 161]
[72 160]
[73 159]
[79 93]
[80 92]
[81 91]
[82 90]
[83 89]
[94 157]
[95 156]
[96 155]
[98 153]
[99 152]
[100 151]
[101 150]
[102 149]
[103 148]
[104 146]
[105 145]
[107 116]
[108 115]
[109 114]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[179 227]
[180 226]
[181 225]
[182 224]
[183 223]
[184 221]
[185 220]
[186 219]
[187 218]
[188 217]
[189 216]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[197 208]
[199 207]
[200 206]
[201 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
