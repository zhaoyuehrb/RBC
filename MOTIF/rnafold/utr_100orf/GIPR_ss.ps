%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGCGGUGGCAGGGGCUGCAGGAGCAAGUGACCAGGAGCAGGACUGGGGACAGGCCUGAUCGCCCCUGCACGAACCAGACCCUUCGCCGCCCUCACGAUGACUACCUCUCCGAUCCUGCAGCUGCUGCUGCGGCUCUCACUGUGCGGGCUGCUGCUCCAGAGGGCGGAGACAGGCUCUAAGGGGCAGACGGCGGGGG\
) } def
/len { sequence length } bind def

/coor [
[-54.23013687 132.46188354]
[-68.42141724 137.32063293]
[-70.49272156 149.65892029]
[-77.57518768 159.88438416]
[-88.27252197 166.08901978]
[-100.52121735 167.14695740]
[-111.98848724 162.91836548]
[-120.51657867 154.26440430]
[-134.85348511 158.67501831]
[-149.19036865 163.08561707]
[-156.48034668 168.60481262]
[-163.78720093 167.45100403]
[-178.19160461 171.63586426]
[-192.59600830 175.82073975]
[-207.00042725 180.00559998]
[-221.40483093 184.19046021]
[-235.80923462 188.37533569]
[-250.21363831 192.56019592]
[-253.96171570 207.38919067]
[-264.55908203 218.27922058]
[-279.08792114 222.37544250]
[-293.61917114 218.67416382]
[-304.27490234 208.26644897]
[-318.67932129 212.45132446]
[-326.05508423 217.85533142]
[-333.34292603 216.58688354]
[-347.81127930 220.54498291]
[-355.67504883 233.99113464]
[-370.40438843 237.79910278]
[-383.17477417 230.21934509]
[-397.64315796 234.17742920]
[-405.50689697 247.62358093]
[-420.23626709 251.43154907]
[-433.00665283 243.85179138]
[-447.47503662 247.80989075]
[-461.94338989 251.76799011]
[-476.41174316 255.72608948]
[-481.77044678 270.28848267]
[-494.68402100 278.89196777]
[-510.18688965 278.22827148]
[-522.31793213 268.55264282]
[-526.41247559 253.58552551]
[-520.89605713 239.08209229]
[-507.88995361 230.61923218]
[-492.39517212 231.45104980]
[-480.36984253 241.25772095]
[-465.90148926 237.29962158]
[-451.43310547 233.34153748]
[-436.96475220 229.38343811]
[-429.83114624 216.35856628]
[-415.21456909 212.13838196]
[-401.60125732 219.70907593]
[-387.13287354 215.75097656]
[-379.99929810 202.72610474]
[-365.38269043 198.50592041]
[-351.76937866 206.07661438]
[-337.30102539 202.11851501]
[-322.86419678 198.04692078]
[-308.45977783 193.86204529]
[-305.03955078 179.36488342]
[-294.75369263 168.45356750]
[-280.29171753 164.12719727]
[-265.50888062 167.64358521]
[-254.39849854 178.15579224]
[-239.99409485 173.97093201]
[-225.58969116 169.78605652]
[-211.18528748 165.60119629]
[-196.78088379 161.41632080]
[-182.37648010 157.23146057]
[-167.97207642 153.04660034]
[-153.60098267 148.74873352]
[-139.26408386 144.33811951]
[-124.92718506 139.92752075]
[-119.99598694 122.97740173]
[-105.75582123 112.28096008]
[-87.78868866 112.26689911]
[-73.28018188 123.12935638]
[-59.08889771 118.27059937]
[-56.52815628 109.75285339]
[-50.23560333 103.27359772]
[-41.53516769 100.37791443]
[-32.34294510 101.83705902]
[-24.74535942 107.44813538]
[-10.34095383 103.26326752]
[4.06345177 99.07839966]
[18.46785736 94.89353180]
[32.87226105 90.70866394]
[47.27666855 86.52379608]
[61.68107224 82.33893585]
[76.08547974 78.15406799]
[88.49168396 69.72281647]
[97.68529510 57.87049103]
[106.87889862 46.01816559]
[116.07250214 34.16584015]
[118.41706085 18.51931763]
[132.33135986 13.20504665]
[141.52496338 1.35272157]
[150.71856689 -10.49960327]
[159.91218567 -22.35192871]
[162.25672913 -37.99845123]
[176.17103577 -43.31272125]
[185.36463928 -55.16504669]
[194.55824280 -67.01737213]
[180.11853027 -62.95604324]
[165.55728149 -66.55747223]
[154.67550659 -76.88155365]
[150.31367493 -91.23336792]
[153.61041260 -105.86660004]
[163.70513916 -116.96149445]
[177.96278381 -121.62190247]
[192.66163635 -118.63130188]
[203.96479797 -108.77034760]
[208.92176819 -94.61306763]
[206.23754883 -79.85276031]
[217.17208862 -90.12097168]
[221.93542480 -105.20808411]
[236.50976562 -108.28025055]
[247.44429016 -118.54846191]
[251.56277466 -126.71199036]
[258.63214111 -128.89041138]
[269.72662354 -138.98559570]
[280.82107544 -149.08078003]
[291.91555786 -159.17596436]
[303.01000977 -169.27116394]
[307.47772217 -185.05000305]
[323.44061279 -188.80740356]
[334.47741699 -176.67808533]
[329.23446655 -161.13964844]
[313.10519409 -158.17669678]
[302.01074219 -148.08151245]
[290.91625977 -137.98631287]
[279.82180786 -127.89112854]
[268.72732544 -117.79594421]
[257.71249390 -107.61392975]
[246.77796936 -97.34572601]
[242.79673767 -82.99305725]
[227.44029236 -79.18643951]
[216.50576782 -68.91823578]
[206.41056824 -57.82376480]
[197.21696472 -45.97143936]
[188.02336121 -34.11911774]
[186.33639526 -19.32035255]
[171.76451111 -13.15832329]
[162.57089233 -1.30599773]
[153.37728882 10.54632759]
[144.18368530 22.39865303]
[142.49671936 37.19741440]
[127.92482758 43.35944748]
[118.73122406 55.21176910]
[109.53762054 67.06409454]
[100.34400940 78.91641998]
[111.34020233 83.76216888]
[117.28592682 93.33847046]
[116.80790710 103.85559082]
[128.51435852 113.23423004]
[140.22080994 122.61286926]
[151.92727661 131.99151611]
[163.63372803 141.37014771]
[175.34017944 150.74879456]
[187.04664612 160.12742615]
[202.54701233 158.58589172]
[214.28541565 168.26393127]
[215.65951538 183.05065918]
[227.36596680 192.42930603]
[239.07243347 201.80793762]
[250.77888489 211.18658447]
[262.48535156 220.56521606]
[277.41635132 216.34094238]
[291.96710205 221.73124695]
[300.54251099 234.66343689]
[299.84521484 250.16484070]
[290.14324951 262.27484131]
[275.16729736 266.33688354]
[260.67587280 260.78906250]
[252.24125671 247.76460266]
[253.10670471 232.27168274]
[241.40023804 222.89303589]
[229.69378662 213.51440430]
[217.98733521 204.13575745]
[206.28086853 194.75711060]
[191.55050659 196.64173889]
[179.54489136 187.29722595]
[177.66799927 171.83387756]
[165.96154785 162.45524597]
[154.25509644 153.07659912]
[142.54862976 143.69796753]
[130.84217834 134.31932068]
[119.13571930 124.94068146]
[107.42926788 115.56204224]
[93.70194244 117.42164612]
[82.01062012 108.28550720]
[80.27034760 92.55847168]
[65.86593628 96.74333954]
[51.46153259 100.92820740]
[37.05712891 105.11306763]
[22.65272331 109.29793549]
[8.24831867 113.48280334]
[-6.15608692 117.66767120]
[-20.56049156 121.85253906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[8 73]
[9 72]
[10 71]
[12 70]
[13 69]
[14 68]
[15 67]
[16 66]
[17 65]
[18 64]
[23 59]
[24 58]
[26 57]
[27 56]
[30 53]
[31 52]
[34 49]
[35 48]
[36 47]
[37 46]
[83 199]
[84 198]
[85 197]
[86 196]
[87 195]
[88 194]
[89 193]
[90 192]
[91 151]
[92 150]
[93 149]
[94 148]
[96 146]
[97 145]
[98 144]
[99 143]
[101 141]
[102 140]
[103 139]
[114 138]
[115 137]
[117 135]
[118 134]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[154 189]
[155 188]
[156 187]
[157 186]
[158 185]
[159 184]
[160 183]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
