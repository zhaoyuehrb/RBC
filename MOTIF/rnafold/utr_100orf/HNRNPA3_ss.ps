%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAGACUGGCGGCGCGCGGAAAACGCGUCACGUGACGACUGGCCCCGCCUCUUCCUCUCGGUCCCAUAUUGAACUCGAGUUGGAAGAGGCGAGUCCGGUCUCAAAAUGGAGGUAAAACCGCCGCCCGGUCGCCCCCAGCCCGACUCCGGCCGUCGCCGUCGCCGCCGGGGGGAGGAGGGCCAUGAUCCAAAGGAACCAGAGCAGU\
) } def
/len { sequence length } bind def

/coor [
[71.29241180 256.34771729]
[58.97768402 247.38850403]
[51.37728882 234.19177246]
[49.80803299 219.04391479]
[54.54180145 204.56941223]
[64.75844574 193.27604675]
[78.68786621 187.12046814]
[78.68786621 172.12046814]
[78.68786621 157.12046814]
[78.68786621 142.12046814]
[64.51623535 137.20466614]
[55.22759247 148.98266602]
[56.88788223 164.47076416]
[47.30009460 176.28300476]
[32.52433014 177.77038574]
[23.23568535 189.54837036]
[13.94704056 201.32637024]
[4.65839720 213.10435486]
[-4.63024664 224.88235474]
[-4.18312311 240.91917419]
[-16.53488541 251.15701294]
[-32.21031952 247.74229431]
[-39.18457031 233.29447937]
[-32.10759354 218.89669800]
[-16.40823936 215.59370422]
[-7.11959505 203.81571960]
[2.16904902 192.03771973]
[11.45769310 180.25973511]
[20.74633598 168.48173523]
[18.74887276 153.76625061]
[28.00109673 141.68936157]
[43.44960403 139.69401550]
[52.73824692 127.91602325]
[49.90963745 113.18514252]
[36.91925812 105.68514252]
[23.92887688 98.18514252]
[14.92913914 96.60358429]
[10.79950142 90.47146606]
[-2.07556224 82.77518463]
[-14.95062542 75.07890320]
[-27.82568932 67.38262177]
[-40.70075226 59.68634033]
[-53.57581711 51.99005890]
[-67.79334259 57.92032623]
[-82.60352325 54.38309860]
[-92.37543488 42.93872452]
[-93.52095032 28.11220169]
[-106.39601135 20.41592026]
[-119.27107239 12.71963978]
[-132.14613342 5.02335882]
[-145.02120972 -2.67292213]
[-157.89627075 -10.36920261]
[-170.77133179 -18.06548309]
[-183.64639282 -25.76176453]
[-196.52145386 -33.45804596]
[-209.39651489 -41.15432739]
[-227.80862427 -41.00508499]
[-235.74949646 -56.65317154]
[-248.73988342 -64.15317535]
[-261.73025513 -71.65317535]
[-274.72064209 -79.15317535]
[-287.76757812 -86.55438232]
[-300.87026978 -93.85637665]
[-314.01202393 -85.90718842]
[-329.36804199 -85.60991669]
[-342.80761719 -93.04452515]
[-350.71557617 -106.21114349]
[-350.96472168 -121.56801605]
[-343.48800659 -134.98422241]
[-330.29666138 -142.85086060]
[-314.93908691 -143.05186462]
[-301.54638672 -135.53314209]
[-293.72113037 -122.31721497]
[-293.56826782 -106.95908356]
[-280.46557617 -99.65708923]
[-273.09017944 -99.14677429]
[-267.22064209 -92.14355469]
[-254.23027039 -84.64355469]
[-241.23988342 -77.14355469]
[-228.24949646 -69.64355469]
[-216.48585510 -72.47036743]
[-205.60115051 -66.32568359]
[-201.70024109 -54.02938843]
[-188.82518005 -46.33310699]
[-175.95011902 -38.63682938]
[-163.07504272 -30.94054794]
[-150.19998169 -23.24426651]
[-137.32492065 -15.54798603]
[-124.44985962 -7.85170460]
[-111.57479095 -0.15542400]
[-98.69972992 7.54085684]
[-85.82466888 15.23713779]
[-72.22306824 9.22594166]
[-57.51597977 12.41429234]
[-47.38796234 23.78428078]
[-45.87953568 39.11499786]
[-33.00447083 46.81127548]
[-20.12940788 54.50755692]
[-7.25434494 62.20383835]
[5.62071848 69.90011597]
[18.49578285 77.59639740]
[31.42887688 85.19476318]
[44.41925812 92.69476318]
[57.40963745 100.19476318]
[61.51148987 80.13909912]
[74.65158844 63.99777985]
[94.08774567 55.64163971]
[115.52564240 57.26210785]
[134.06697083 68.80696106]
[139.62268066 54.87376404]
[137.54698181 39.18931198]
[149.44795227 30.23295784]
[155.00366211 16.29976082]
[160.55938721 2.36656260]
[160.80958557 -14.58553886]
[177.16845703 -19.03793144]
[185.97543335 -4.55091906]
[174.49258423 7.92228079]
[168.93687439 21.85547829]
[163.38114929 35.78867722]
[165.85423279 50.47653198]
[153.55587769 60.42948532]
[148.00016785 74.36267853]
[156.92707825 86.41714478]
[171.87484741 85.16651917]
[186.82263184 83.91588593]
[201.77040100 82.66526031]
[212.81756592 69.10329437]
[229.91842651 67.75205231]
[242.45465088 78.96070862]
[257.38171387 77.48337555]
[265.61648560 73.52288818]
[272.54629517 76.09864807]
[287.49404907 74.84802246]
[302.44183350 73.59738922]
[317.38958740 72.34675598]
[332.33737183 71.09613037]
[345.44439697 62.23517227]
[358.77246094 68.88439178]
[373.72021484 67.63375854]
[388.59439087 56.78075409]
[404.16757202 64.86748505]
[419.09466553 63.39014816]
[434.02172852 61.91281128]
[448.94879150 60.43547440]
[453.19418335 57.38765335]
[457.73052979 56.37635422]
[461.73257446 57.17096710]
[464.58657837 59.24653625]
[479.56539917 58.45013046]
[494.54425049 57.65372467]
[507.98843384 48.26297379]
[522.72650146 55.45474625]
[523.59716797 71.83076477]
[509.70480347 80.54478455]
[495.34066772 72.63256836]
[480.36181641 73.42897034]
[465.38296509 74.22537994]
[450.42614746 75.36254120]
[435.49905396 76.83988190]
[420.57199097 78.31721497]
[405.64492798 79.79455566]
[397.73376465 88.94813538]
[385.30767822 90.29943848]
[374.97085571 82.58153534]
[360.02307129 83.83216858]
[347.98522949 92.60366821]
[333.58801270 86.04389954]
[318.64022827 87.29453278]
[303.69244385 88.54515839]
[288.74468994 89.79579163]
[273.79690552 91.04642487]
[258.85906982 92.41044617]
[243.93199158 93.88777924]
[237.23558044 104.89843750]
[225.24066162 110.11882019]
[212.23803711 107.43708801]
[203.02102661 97.61302948]
[188.07325745 98.86366272]
[173.12548828 100.11428833]
[158.17770386 101.36492157]
[154.57653809 107.94379425]
[169.31593323 110.72769928]
[171.22297668 125.60597229]
[157.66220093 132.01730347]
[147.37417603 121.10153198]
[143.77299500 127.68039703]
[150.77484131 140.94592285]
[157.77668762 154.21145630]
[170.51741028 165.39671326]
[163.29626465 180.73593140]
[146.55749512 178.04328918]
[144.51115417 161.21330261]
[137.50930786 147.94776917]
[130.50747681 134.68223572]
[112.53811646 142.58317566]
[93.68786621 142.12046814]
[93.68786621 157.12046814]
[93.68786621 172.12046814]
[93.68786621 187.12046814]
[107.61727905 193.27604675]
[117.83392334 204.56941223]
[122.56769562 219.04391479]
[120.99843597 234.19177246]
[113.39804077 247.38850403]
[101.08331299 256.34771729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 200]
[8 199]
[9 198]
[10 197]
[11 33]
[12 32]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[34 104]
[35 103]
[36 102]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[43 96]
[47 92]
[48 91]
[49 90]
[50 89]
[51 88]
[52 87]
[53 86]
[54 85]
[55 84]
[56 83]
[58 80]
[59 79]
[60 78]
[61 77]
[62 75]
[63 74]
[109 123]
[110 122]
[112 120]
[113 119]
[114 118]
[124 181]
[125 180]
[126 179]
[127 178]
[130 174]
[131 173]
[133 172]
[134 171]
[135 170]
[136 169]
[137 168]
[139 166]
[140 165]
[142 162]
[143 161]
[144 160]
[145 159]
[149 158]
[150 157]
[151 156]
[187 195]
[188 194]
[189 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
