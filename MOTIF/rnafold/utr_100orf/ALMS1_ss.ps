%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGGCGGCACUGCGCCUAAGCUGGGCCACAACCGCCAGUCAGGGCUCUCCCCUUCCCCUCCCUCCCCCCCUCCUCCUCCUCCUCUGCCGCCCAGAGCGAGACACCAACAUGGAGCCCGAGGAUCUGCCAUGGCCGGGCGAGCUGGAGGAGGAGGAGGAGGAGGAGGAGGAGGAGGAGGAGGAAGAGGAGGAGGCUGCAGCGGCGGCGG\
) } def
/len { sequence length } bind def

/coor [
[75.38674164 113.93979645]
[68.02548218 112.50388336]
[58.74780655 124.29051208]
[49.47012711 136.07714844]
[47.01433563 151.70658875]
[33.06258774 156.92175293]
[23.78490829 168.70838928]
[14.50723076 180.49502563]
[5.22955179 192.28164673]
[-4.04812670 204.06828308]
[0.01767860 218.92678833]
[-5.38216686 233.16389465]
[-17.98090172 241.39407349]
[-32.83230209 240.63653564]
[-42.10998154 252.42315674]
[-44.95849609 261.10125732]
[-51.61351013 264.31436157]
[-61.06482697 275.96221924]
[-70.51614380 287.61007690]
[-79.96746063 299.25793457]
[-89.41877747 310.90579224]
[-94.70369720 327.01498413]
[-111.64634705 326.39608765]
[-115.74181366 309.94421387]
[-101.06663513 301.45449829]
[-91.61531830 289.80661011]
[-82.16400146 278.15875244]
[-72.71268463 266.51089478]
[-63.26136780 254.86305237]
[-53.89661407 243.14549255]
[-44.61893463 231.35885620]
[-48.84367371 217.10089111]
[-43.80301285 202.92147827]
[-31.23257446 194.32859802]
[-15.83475780 194.79060364]
[-6.55707932 183.00396729]
[2.72059917 171.21734619]
[11.99827766 159.43070984]
[21.27595711 147.64407349]
[23.06814575 132.85768127]
[37.68349457 126.79946136]
[46.96117401 115.01283264]
[56.23885345 103.22620392]
[64.52270508 90.97576904]
[75.33140564 84.12695312]
[86.19047546 82.79542542]
[94.87785339 86.12697601]
[99.76692963 92.48806763]
[106.41786957 79.04318237]
[113.06880951 65.59829712]
[119.71974945 52.15340805]
[118.90354156 36.35326767]
[131.48190308 28.37617111]
[138.13284302 14.93128395]
[144.68399048 1.43748534]
[151.13496399 -12.10448170]
[157.58593750 -25.64645004]
[164.03691101 -39.18841553]
[170.48789978 -52.73038483]
[176.83836365 -66.31977844]
[183.08796692 -79.95584869]
[189.33755493 -93.59192657]
[195.58715820 -107.22799683]
[201.83676147 -120.86406708]
[202.56721497 -129.96846008]
[208.28132629 -134.65484619]
[214.73231506 -148.19680786]
[221.18328857 -161.73876953]
[227.53375244 -175.32817078]
[233.78335571 -188.96424866]
[232.49929810 -204.73326111]
[244.83575439 -213.07958984]
[251.08534241 -226.71565247]
[257.33496094 -240.35173035]
[263.58456421 -253.98780823]
[269.83416748 -267.62387085]
[276.08374023 -281.25994873]
[282.33334351 -294.89602661]
[288.58294678 -308.53210449]
[294.83255005 -322.16818237]
[301.08215332 -335.80422974]
[307.33175659 -349.44030762]
[313.58135986 -363.07638550]
[319.83096313 -376.71246338]
[326.08056641 -390.34854126]
[332.33016968 -403.98461914]
[338.57977295 -417.62069702]
[344.82937622 -431.25674438]
[343.54531860 -447.02575684]
[355.88177490 -455.37210083]
[362.13134766 -469.00817871]
[358.38006592 -481.34826660]
[363.86550903 -492.57684326]
[375.15716553 -496.91427612]
[381.60815430 -510.45623779]
[388.05914307 -523.99822998]
[394.51010132 -537.54016113]
[389.46249390 -552.27648926]
[396.19763184 -565.91809082]
[410.27755737 -570.63940430]
[416.72854614 -584.18133545]
[401.93527222 -581.69952393]
[390.67031860 -591.60412598]
[391.23828125 -606.59332275]
[403.22048950 -615.61706543]
[417.78350830 -612.02282715]
[424.19137573 -598.45983887]
[431.62710571 -611.48712158]
[425.94012451 -629.55908203]
[435.11203003 -645.77050781]
[452.91052246 -650.05407715]
[459.95697021 -663.29595947]
[467.00341797 -676.53784180]
[474.04983521 -689.77972412]
[481.09628296 -703.02166748]
[488.04440308 -716.31536865]
[494.89382935 -729.66021729]
[501.54476929 -743.10510254]
[507.99575806 -756.64709473]
[509.34899902 -773.54693604]
[525.96301270 -776.92492676]
[533.80822754 -761.89532471]
[521.53771973 -750.19610596]
[515.08673096 -736.65417480]
[515.81030273 -731.93408203]
[513.57690430 -726.70935059]
[508.23870850 -722.81079102]
[501.38925171 -709.46594238]
[501.13159180 -702.08038330]
[494.33816528 -695.97521973]
[487.29171753 -682.73333740]
[480.24530029 -669.49139404]
[473.19885254 -656.24951172]
[466.15243530 -643.00762939]
[471.76998901 -633.07843018]
[471.89855957 -621.55114746]
[466.39050293 -611.28790283]
[456.51214600 -604.89276123]
[444.65438843 -604.05139160]
[437.21862793 -591.02410889]
[430.27050781 -577.73040771]
[423.81951904 -564.18841553]
[429.02493286 -550.28015137]
[422.67562866 -536.45477295]
[408.05206299 -531.08917236]
[401.60110474 -517.54724121]
[395.15011597 -504.00524902]
[388.69915771 -490.46328735]
[391.02502441 -473.06878662]
[375.76742554 -462.75857544]
[369.51782227 -449.12249756]
[371.24890137 -434.32882690]
[358.46542358 -425.00714111]
[352.21585083 -411.37109375]
[345.96624756 -397.73501587]
[339.71664429 -384.09893799]
[333.46704102 -370.46286011]
[327.21743774 -356.82678223]
[320.96783447 -343.19070435]
[314.71823120 -329.55465698]
[308.46862793 -315.91857910]
[302.21902466 -302.28250122]
[295.96942139 -288.64642334]
[289.71981812 -275.01034546]
[283.47021484 -261.37426758]
[277.22061157 -247.73820496]
[270.97103882 -234.10212708]
[264.72143555 -220.46606445]
[258.47183228 -206.82998657]
[260.20288086 -192.03631592]
[247.41943359 -182.71464539]
[241.16983032 -169.07856750]
[241.24064636 -161.68882751]
[234.72525024 -155.28779602]
[228.27427673 -141.74583435]
[221.82330322 -128.20385742]
[215.47283936 -114.61447144]
[209.22323608 -100.97839355]
[202.97363281 -87.34232330]
[196.72402954 -73.70625305]
[190.47442627 -60.07017517]
[190.54524231 -52.68043900]
[184.02986145 -46.27940750]
[177.57888794 -32.73743820]
[171.12789917 -19.19547081]
[164.67692566 -5.65350389]
[158.22595215 7.88846350]
[158.18725586 15.27843952]
[151.57772827 21.58222198]
[144.92678833 35.02711105]
[146.21871948 49.86558151]
[133.16462708 58.80434418]
[126.51369476 72.24922943]
[119.86275482 85.69412231]
[113.21182251 99.13900757]
[111.87988281 114.07975769]
[116.04766846 128.48912048]
[120.21545410 142.89846802]
[124.38323975 157.30783081]
[128.55102539 171.71717834]
[140.74235535 182.68548584]
[137.07495117 198.66929626]
[121.32154083 203.22584534]
[109.68787384 191.66773987]
[114.14167023 175.88496399]
[109.97388458 161.47561646]
[105.80609894 147.06625366]
[101.63831329 132.65690613]
[97.47052765 118.24754333]
[90.10926056 116.81163025]
[87.23720551 131.53410339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 43]
[3 42]
[4 41]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[14 31]
[15 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[48 195]
[49 194]
[50 193]
[51 192]
[53 190]
[54 189]
[55 187]
[56 186]
[57 185]
[58 184]
[59 183]
[60 181]
[61 180]
[62 179]
[63 178]
[64 177]
[66 176]
[67 175]
[68 174]
[69 172]
[70 171]
[72 169]
[73 168]
[74 167]
[75 166]
[76 165]
[77 164]
[78 163]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[90 151]
[91 150]
[94 148]
[95 147]
[96 146]
[97 145]
[100 142]
[101 141]
[107 140]
[108 139]
[111 134]
[112 133]
[113 132]
[114 131]
[115 130]
[116 128]
[117 127]
[118 124]
[119 123]
[196 209]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
