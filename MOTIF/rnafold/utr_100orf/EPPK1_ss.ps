%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCGGACCGAGCGGCGAGCGGGCAGGACAGAGGUGGACCUCAGCAGGCUCUGCAUAACCAGCCGUGUGUGAUGAGUGGCCACACCUUGCCUCCUCUUCCCGUCCCAGGCACCAACAGCACAGAGCAGGCCAGUGUACCCAGAGCCAUGGCAGCCACGCUGGGAGCCGGCA\
) } def
/len { sequence length } bind def

/coor [
[62.34323883 262.47937012]
[48.08927917 266.71759033]
[43.27306366 280.92337036]
[38.45684433 295.12915039]
[33.64062500 309.33493042]
[41.91214371 322.60580444]
[39.66697311 338.08135986]
[27.96520996 348.45452881]
[12.33207321 348.82742310]
[0.14905065 339.02395630]
[-2.83140731 323.67303467]
[4.79798031 310.02288818]
[19.43485069 304.51870728]
[24.25106812 290.31292725]
[29.06728745 276.10714722]
[33.88350296 261.90136719]
[25.14604568 249.86830139]
[25.16985130 234.81961060]
[34.15536880 222.52676392]
[48.82591248 217.82768250]
[53.64213181 203.62191772]
[50.40099716 189.08422852]
[62.15959549 178.49905396]
[66.97581482 164.29327393]
[71.79203033 150.08750916]
[66.81077576 144.48062134]
[55.77353287 154.63835144]
[44.38669205 164.40255737]
[34.42422867 153.18876648]
[45.46144104 143.03111267]
[56.84825897 133.26687622]
[51.86700439 127.65999603]
[37.19290543 130.76979065]
[22.51880455 133.87957764]
[7.84470558 136.98937988]
[-3.98042393 148.35151672]
[-19.65551567 143.53244019]
[-23.05537987 127.48959351]
[-10.68252754 116.72647858]
[4.73491192 122.31527710]
[19.40901184 119.20548248]
[34.08311081 116.09568787]
[48.75720978 112.98589325]
[49.02959061 97.98770142]
[49.30196381 82.99083710]
[34.75046158 79.35026550]
[20.19895935 75.70969391]
[5.64745712 72.06911469]
[-11.18556404 74.09043884]
[-17.78773308 58.47481537]
[-4.61003733 47.80782318]
[9.28803158 57.51761627]
[23.83953285 61.15818787]
[38.39103699 64.79876709]
[52.94253922 68.43933868]
[68.66416931 58.67045975]
[85.30796814 55.28106689]
[100.58596802 57.72875214]
[112.68106079 64.73040009]
[120.46154022 74.51235199]
[132.28543091 65.28219604]
[144.10931396 56.05204391]
[155.93319702 46.82189560]
[167.75709534 37.59174347]
[172.61856079 29.81526756]
[179.88052368 28.30367279]
[191.87005615 19.28974724]
[203.85960388 10.27582073]
[215.68348694 1.04566956]
[227.33782959 -8.39766407]
[238.99215698 -17.84099770]
[244.84321594 -32.54051208]
[259.60281372 -34.54149628]
[271.25714111 -43.98483276]
[282.91146851 -53.42816544]
[284.14053345 -72.30535126]
[298.50753784 -84.11642456]
[316.63439941 -81.75299072]
[327.93814087 -91.61327362]
[339.24191284 -101.47356415]
[340.47009277 -117.00189972]
[352.07415771 -126.84060669]
[366.87048340 -125.57403564]
[378.17422485 -135.43432617]
[389.47799683 -145.29460144]
[400.78173828 -155.15489197]
[400.14837646 -168.63043213]
[407.29730225 -179.84051514]
[419.42211914 -184.80226135]
[431.99917603 -181.90715027]
[443.48013306 -191.56054688]
[454.96105957 -201.21394348]
[466.44198608 -210.86735535]
[472.02514648 -225.67068481]
[486.74597168 -227.93936157]
[498.22689819 -237.59275818]
[509.70785522 -247.24615479]
[521.18878174 -256.89956665]
[520.40655518 -281.38650513]
[537.61193848 -298.48056030]
[561.60180664 -297.55822754]
[571.15057373 -309.12634277]
[569.39678955 -324.83303833]
[579.32812500 -337.12710571]
[595.05249023 -338.71469116]
[607.24084473 -328.65393066]
[608.66210938 -312.91369629]
[598.47308350 -300.83236694]
[582.71868896 -299.57757568]
[573.16992188 -288.00949097]
[576.45520020 -282.39974976]
[578.45861816 -276.19897461]
[579.07946777 -269.69674683]
[578.28198242 -263.19827271]
[576.09716797 -257.00997925]
[572.62133789 -251.42517090]
[568.01245117 -246.71003723]
[562.48248291 -243.09097290]
[556.28790283 -240.74377441]
[549.71765137 -239.78507996]
[543.07989502 -240.26652527]
[536.68719482 -242.17213440]
[530.84216309 -245.41862488]
[519.36126709 -235.76522827]
[507.88031006 -226.11181641]
[496.39938354 -216.45841980]
[491.63739014 -202.34556580]
[476.09539795 -199.38641357]
[464.61444092 -189.73301697]
[453.13351440 -180.07962036]
[441.65258789 -170.42620850]
[440.93231201 -153.63995361]
[428.05227661 -142.33288574]
[410.64202881 -143.85115051]
[399.33825684 -133.99085999]
[388.03451538 -124.13056946]
[376.73077393 -114.27028656]
[375.97662354 -99.43900299]
[364.65350342 -89.27824402]
[349.10220337 -90.16981506]
[337.79843140 -80.30952454]
[326.49468994 -70.44924164]
[328.20452881 -59.12691879]
[324.17959595 -48.27873993]
[315.31634521 -40.65508652]
[303.75314331 -38.24847412]
[292.35479736 -41.77383423]
[280.70046997 -32.33049774]
[269.04614258 -22.88716698]
[264.02865601 -8.86310291]
[248.43548584 -6.18666553]
[236.78115845 3.25666785]
[225.12683105 12.70000172]
[223.74618530 17.30592537]
[219.43644714 21.07912827]
[212.87353516 22.26536369]
[200.88398743 31.27928925]
[188.89443970 40.29321671]
[176.98724365 49.41563034]
[165.16334534 58.64578247]
[153.33946228 67.87593079]
[141.51557922 77.10608673]
[129.69169617 86.33623505]
[138.62081909 112.76877594]
[123.37120056 142.69026184]
[85.99780273 154.90371704]
[81.18158722 169.10949707]
[76.36537170 183.31527710]
[79.26201630 198.86904907]
[67.84790802 208.43812561]
[63.03168869 222.64390564]
[71.81957245 235.29615784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[20 171]
[21 170]
[23 168]
[24 167]
[25 166]
[32 43]
[33 42]
[34 41]
[35 40]
[45 55]
[46 54]
[47 53]
[48 52]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[66 158]
[67 157]
[68 156]
[69 153]
[70 152]
[71 151]
[73 149]
[74 148]
[75 147]
[78 142]
[79 141]
[80 140]
[83 137]
[84 136]
[85 135]
[86 134]
[90 131]
[91 130]
[92 129]
[93 128]
[95 126]
[96 125]
[97 124]
[98 123]
[101 110]
[102 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
