%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGGAGCCGCCCGGUCGCCUGCGCGCUCCCUCCGGCGGCGUCCCCAGCCCGCGGCCCCUCUGCUGCCGGCCCCCGGCUCGCCGGCUGCGGGAGUGGCCUCAAGAUGGAUGAAGACGGCGGCGGCGAGGGUGGUGGCGUGCCUGAAGACCUCUCAUUAGAAGAGAGAGAAGAACUUCUAGACAUUCGUCGAAGAAAAAAGGAAC\
) } def
/len { sequence length } bind def

/coor [
[45.79906082 200.86573792]
[40.34883118 205.64936829]
[33.64101410 208.22041321]
[26.52593613 208.30352783]
[19.05913925 221.31303406]
[11.59234238 234.32252502]
[4.12554646 247.33201599]
[-3.34124994 260.34152222]
[-10.70814419 273.40783691]
[-17.97470284 286.53024292]
[-25.24126244 299.65261841]
[-22.43734550 312.24551392]
[-28.76361656 323.02691650]
[-40.35671997 326.49081421]
[-47.82351685 339.50030518]
[-50.46403503 356.24737549]
[-67.28758240 358.34609985]
[-73.96150208 342.76101685]
[-60.83301163 332.03350830]
[-53.36621475 319.02401733]
[-54.35873413 301.50515747]
[-38.36365128 292.38604736]
[-31.09709358 279.26367188]
[-23.83053398 266.14126587]
[-23.34010887 258.76330566]
[-16.35074425 252.87471008]
[-8.88394833 239.86521912]
[-1.41715217 226.85572815]
[6.04964399 213.84623718]
[13.51644039 200.83673096]
[11.02561092 178.52420044]
[31.17149925 167.02980042]
[37.62051773 153.48689270]
[44.06953812 139.94400024]
[85.50982666 87.57231903]
[79.26909637 73.93218231]
[73.02837372 60.29204559]
[66.78764343 46.65190887]
[60.36849213 40.14642334]
[60.55757904 32.75459671]
[54.52660751 19.02042770]
[48.49563980 5.28625965]
[42.46466827 -8.44790936]
[29.83174706 -17.97260666]
[31.79891968 -32.73673630]
[25.76794815 -46.47090530]
[19.73697853 -60.20507431]
[7.10405588 -69.72977448]
[9.07122803 -84.49389648]
[3.04025769 -98.22806549]
[-3.09577179 -111.91562653]
[-9.33650017 -125.55575562]
[-15.57722855 -139.19589233]
[-28.35462570 -148.52587891]
[-26.61393356 -163.31842041]
[-32.85466003 -176.95855713]
[-39.09539032 -190.59869385]
[-45.44044876 -204.19061279]
[-51.88946915 -217.73352051]
[-58.44207001 -231.22660828]
[-65.09786987 -244.66908264]
[-71.75366974 -258.11157227]
[-138.27528381 -244.89591980]
[-150.20468140 -253.98928833]
[-168.51643372 -255.90777588]
[-174.65138245 -272.34732056]
[-186.71871948 -281.25680542]
[-198.78607178 -290.16632080]
[-210.85340881 -299.07583618]
[-222.92074585 -307.98532104]
[-239.25448608 -312.52902222]
[-239.40998840 -329.48226929]
[-223.16233826 -334.32479858]
[-214.01124573 -320.05267334]
[-201.94390869 -311.14315796]
[-189.87655640 -302.23367310]
[-177.80921936 -293.32415771]
[-165.74188232 -284.41464233]
[-153.73439026 -285.90423584]
[-143.60716248 -278.57623291]
[-141.11129761 -265.91870117]
[-129.18190002 -256.82531738]
[-123.11428070 -261.23370361]
[-104.91139984 -274.45886230]
[-109.87332916 -288.61441040]
[-114.83526611 -302.76992798]
[-119.79720306 -316.92547607]
[-124.75913239 -331.08102417]
[-129.72106934 -345.23654175]
[-142.50296021 -355.51055908]
[-139.72929382 -371.67343140]
[-124.25337219 -377.09820557]
[-111.99550629 -366.20431519]
[-115.56552887 -350.19848633]
[-110.60359955 -336.04293823]
[-105.64166260 -321.88742065]
[-100.67973328 -307.73187256]
[-95.71779633 -293.57632446]
[-90.75585938 -279.42080688]
[-75.85482788 -281.14105225]
[-74.24880981 -296.05480957]
[-72.64278412 -310.96859741]
[-83.60653687 -322.11892700]
[-84.78642273 -337.71194458]
[-75.62533569 -350.38507080]
[-60.44884872 -354.15447998]
[-46.42284775 -347.24035645]
[-40.16997528 -332.90731812]
[-44.64264679 -317.92303467]
[-57.72900772 -309.36257935]
[-59.33502960 -294.44879150]
[-60.94105530 -279.53503418]
[-58.31118393 -264.76736450]
[-51.65538406 -251.32489014]
[-44.99958801 -237.88240051]
[-39.21165848 -233.28080750]
[-38.34656906 -224.18254089]
[-31.89755058 -210.63963318]
[-26.18081474 -205.94987488]
[-25.45525360 -196.83943176]
[-19.21452522 -183.19929504]
[-12.97379684 -169.55915833]
[-0.64277852 -161.20480347]
[-1.93709219 -145.43663025]
[4.30363607 -131.79649353]
[10.54436398 -118.15634918]
[16.18856049 -113.37954712]
[16.77442741 -104.25904083]
[22.80539703 -90.52487183]
[35.00694275 -81.98252869]
[33.47114563 -66.23604584]
[39.50211716 -52.50187683]
[45.53308868 -38.76770782]
[57.73463440 -30.22536850]
[56.19883728 -14.47887993]
[62.22980881 -0.74471098]
[68.26078033 12.98945808]
[74.29174805 26.72362709]
[80.42778015 40.41118240]
[86.66850281 54.05131531]
[92.90923309 67.69145203]
[99.14996338 81.33158875]
[97.66926575 66.40485382]
[105.63547516 53.69503021]
[119.71486664 48.52098465]
[134.01544189 53.04796600]
[142.55264282 65.38150787]
[141.75378418 80.36022186]
[131.95318604 91.71575165]
[117.25097656 94.69584656]
[132.12390137 96.64424133]
[146.99681091 98.59263611]
[161.86973572 100.54103851]
[176.74266052 102.48943329]
[188.14204407 91.78486633]
[203.75805664 90.96369934]
[216.21728516 100.41366577]
[219.63684082 115.67278290]
[212.40214539 129.53614807]
[197.92918396 135.45793152]
[183.05165100 130.64201355]
[174.79426575 117.36235046]
[159.92134094 115.41395569]
[145.04841614 113.46556091]
[130.17549133 111.51715851]
[115.30258179 109.56876373]
[111.42065430 115.98598480]
[124.25508881 123.74983215]
[137.08952332 131.51368713]
[149.92382812 139.27772522]
[142.15957642 152.11192322]
[129.32566833 144.34811401]
[116.49123383 136.58425903]
[103.65680695 128.82041931]
[99.77487946 135.23762512]
[108.40465546 147.50657654]
[117.03443909 159.77551270]
[125.66421509 172.04444885]
[142.54371643 179.39855957]
[143.43261719 196.92298889]
[152.24940491 209.05824280]
[161.06617737 221.19349670]
[176.25947571 227.36569214]
[178.24250793 243.64450073]
[164.97532654 253.28367615]
[150.10604858 246.36726379]
[148.93092346 230.01028442]
[140.11415100 217.87503052]
[131.29736328 205.73977661]
[119.40003204 203.53701782]
[111.95578003 193.49494934]
[113.39527893 180.67422485]
[104.76549530 168.40528870]
[96.13571930 156.13635254]
[87.50593567 143.86741638]
[80.03256226 144.49880981]
[81.29513550 159.44558716]
[66.34835052 160.70791626]
[65.08581543 145.76161194]
[57.61243820 146.39302063]
[51.16341782 159.93591309]
[44.71439743 173.47882080]
[48.75469208 179.82620239]
[50.32743454 187.11451721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[9 24]
[10 23]
[11 22]
[14 20]
[15 19]
[32 202]
[33 201]
[34 200]
[35 142]
[36 141]
[37 140]
[38 139]
[40 138]
[41 137]
[42 136]
[43 135]
[45 133]
[46 132]
[47 131]
[49 129]
[50 128]
[51 126]
[52 125]
[53 124]
[55 122]
[56 121]
[57 120]
[58 118]
[59 117]
[60 115]
[61 114]
[62 113]
[63 82]
[64 81]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[100 112]
[101 111]
[102 110]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[175 195]
[176 194]
[177 193]
[178 192]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
