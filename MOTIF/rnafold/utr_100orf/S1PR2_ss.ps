%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGCCCUGGGGACGCAGACGCCAAGGCCCCUCCGGCCAGGGCCGGGAGCCGGGCCGGCCUAGCCAGUUCUGAAAGCCCCAUGGCCCCAGCAGGCCUCUGAGCCCCACCAUGGGCAGCUUGUACUCGGAGUACCUGAACCCCAACAAGGUCCAGGAACACUAUAAUUAUACCAAGGAGACGCUGGAAACGCAGGAGACGACCUCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-67.98808289 267.54946899]
[-59.48069382 255.19412231]
[-74.06103516 258.71740723]
[-88.64138031 262.24069214]
[-103.22172546 265.76400757]
[-117.80207062 269.28729248]
[-121.58083344 272.88616943]
[-125.92749023 274.51351929]
[-129.99613953 274.28311157]
[-133.10858154 272.62780762]
[-147.83110046 275.49963379]
[-162.55361938 278.37149048]
[-177.27613831 281.24331665]
[-191.99865723 284.11514282]
[-198.92790222 299.54544067]
[-213.54397583 307.72366333]
[-229.98970032 305.59951782]
[-241.80877686 294.20660400]
[-256.48712158 297.29629517]
[-271.16546631 300.38598633]
[-285.84381104 303.47564697]
[-293.59616089 308.30523682]
[-300.76251221 306.50067139]
[-315.48501587 309.37249756]
[-321.02929688 318.72924805]
[-330.61035156 323.39437866]
[-340.95962524 322.04492188]
[-348.69155884 315.36578369]
[-363.49270630 317.80007935]
[-378.29388428 320.23437500]
[-383.78643799 334.50949097]
[-395.60876465 344.05566406]
[-410.52285767 346.38708496]
[-424.50793457 340.97656250]
[-433.84420776 329.37054443]
[-448.64535522 331.80484009]
[-463.44650269 334.23913574]
[-478.24765015 336.67340088]
[-493.04882812 339.10769653]
[-507.84997559 341.54199219]
[-515.98925781 351.54708862]
[-528.36676025 353.27026367]
[-538.27227783 346.32797241]
[-553.10791016 348.54266357]
[-567.94348145 350.75735474]
[-578.60565186 362.74475098]
[-594.61712646 361.73889160]
[-603.69531250 348.51138306]
[-598.87615967 333.20925903]
[-583.85650635 327.57098389]
[-570.15820312 335.92175293]
[-555.32257080 333.70706177]
[-540.48699951 331.49237061]
[-527.35925293 319.84588623]
[-510.28427124 326.74084473]
[-495.48312378 324.30654907]
[-480.68194580 321.87225342]
[-465.88079834 319.43795776]
[-451.07965088 317.00366211]
[-436.27850342 314.56936646]
[-431.15106201 300.58456421]
[-419.63546753 290.98001099]
[-404.76025391 288.41210938]
[-390.50332642 293.66912842]
[-380.72817993 305.43322754]
[-365.92700195 302.99893188]
[-351.12585449 300.56463623]
[-337.10702515 287.24633789]
[-318.35687256 294.64996338]
[-303.63433838 291.77813721]
[-288.93350220 288.79730225]
[-274.25515747 285.70764160]
[-259.57681274 282.61795044]
[-244.89846802 279.52825928]
[-240.59861755 266.88934326]
[-230.53446960 257.95370483]
[-217.26368713 255.13519287]
[-204.23017883 259.27456665]
[-194.87048340 269.39260864]
[-180.14796448 266.52078247]
[-165.42544556 263.64895630]
[-150.70292664 260.77713013]
[-135.98040771 257.90530396]
[-121.32536316 254.70693970]
[-106.74501801 251.18365479]
[-92.16467285 247.66035461]
[-77.58432770 244.13706970]
[-63.00398636 240.61378479]
[-27.42202377 227.64631653]
[-15.23472118 218.90162659]
[-3.04741764 210.15692139]
[9.13988590 201.41223145]
[21.32718849 192.66754150]
[20.89881325 176.25701904]
[30.43211746 162.68904114]
[46.33189774 157.42498779]
[62.39400482 162.72755432]
[74.45038605 153.80322266]
[86.50676727 144.87889099]
[90.01245880 138.37326050]
[98.80857849 135.91322327]
[110.99588776 127.16853333]
[68.61265564 124.39765930]
[59.55226898 70.26850128]
[61.54688644 55.40170670]
[63.54150009 40.53491592]
[65.53611755 25.66812325]
[55.74806213 13.25967789]
[57.68390274 -2.42560363]
[70.19514465 -12.08192253]
[85.85907745 -9.98035526]
[95.38258362 2.63227463]
[93.11552429 18.27311897]
[80.40290833 27.66274071]
[78.40829468 42.52953339]
[76.41367340 57.39632416]
[74.41905975 72.26311493]
[88.44189453 77.59041595]
[102.46347809 82.91725159]
[110.84317780 70.47616577]
[119.22288513 58.03507996]
[127.60258484 45.59399414]
[123.10877991 30.61601639]
[129.34143066 16.27418709]
[143.35766602 9.34027863]
[158.53945923 13.08826923]
[167.71841431 25.74847221]
[166.56051636 41.34312820]
[155.61250305 52.50891876]
[140.04367065 53.97369385]
[131.66397095 66.41477966]
[123.28426361 78.85586548]
[114.90456390 91.29695129]
[119.63022614 97.12088013]
[133.80720520 114.59266663]
[147.70755005 108.95525360]
[161.60789490 103.31784058]
[175.50823975 97.68042755]
[185.38882446 85.32386017]
[200.09094238 87.71067810]
[213.99128723 82.07326508]
[227.89163208 76.43585205]
[232.53184509 61.50258636]
[245.71325684 53.08924103]
[261.21200562 55.16834259]
[271.71005249 66.75820160]
[272.25054932 82.38644409]
[262.57827759 94.67388916]
[247.26020813 97.81877899]
[233.52903748 90.33619690]
[219.62869263 95.97360992]
[205.72834778 101.61102295]
[196.84201050 113.56436157]
[181.14564514 111.58077240]
[167.24530029 117.21818542]
[153.34495544 122.85559845]
[139.44461060 128.49301147]
[154.39906311 127.32501221]
[168.88906860 131.20315552]
[181.26086426 139.68482971]
[190.10246277 151.80200195]
[194.40478516 166.17176819]
[193.67678833 181.15409851]
[188.00158691 195.03904724]
[178.02687073 206.24194336]
[164.89105225 213.48420715]
[150.09332275 215.93925476]
[135.32255554 213.32691956]
[122.26451874 205.94532776]
[112.40953827 194.63696289]
[106.88236237 180.69241333]
[106.31379700 165.70318604]
[110.76873779 151.38002014]
[119.74057770 139.35583496]
[107.55327606 148.10052490]
[95.43109894 156.93527222]
[83.37471771 165.85960388]
[71.31832886 174.78393555]
[72.46613312 188.51933289]
[66.72290802 200.92990112]
[55.68575287 208.81907654]
[42.29961395 210.21333313]
[30.07188034 204.85484314]
[17.88457870 213.59953308]
[5.69727468 222.34422302]
[-6.49002838 231.08892822]
[-18.67733192 239.83361816]
[-3.68172932 239.47041321]
[5.29915810 251.48472595]
[0.70623994 265.76425171]
[-13.59468746 270.29013062]
[-25.56676292 261.25289917]
[-20.76271439 275.46279907]
[-9.01318741 286.05804443]
[-12.26677418 300.59292603]
[-7.46272659 314.80282593]
[-2.65867853 329.01272583]
[2.14536929 343.22262573]
[15.82975578 351.59622192]
[17.67202950 367.53314209]
[6.25895548 378.80795288]
[-9.65433216 376.77157593]
[-17.86052132 362.98614502]
[-12.06452656 348.02667236]
[-16.86857414 333.81677246]
[-21.67262077 319.60687256]
[-26.47666931 305.39700317]
[-37.88257980 295.81814575]
[-34.97261047 280.26684570]
[-39.77665710 266.05694580]
[-45.68187714 279.84564209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 88]
[3 87]
[4 86]
[5 85]
[6 84]
[10 83]
[11 82]
[12 81]
[13 80]
[14 79]
[18 74]
[19 73]
[20 72]
[21 71]
[23 70]
[24 69]
[28 67]
[29 66]
[30 65]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[43 53]
[44 52]
[45 51]
[89 187]
[90 186]
[91 185]
[92 184]
[93 183]
[97 178]
[98 177]
[99 176]
[101 175]
[102 174]
[104 117]
[105 116]
[106 115]
[107 114]
[119 133]
[120 132]
[121 131]
[122 130]
[135 157]
[136 156]
[137 155]
[138 154]
[140 152]
[141 151]
[142 150]
[192 210]
[193 209]
[195 207]
[196 206]
[197 205]
[198 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
