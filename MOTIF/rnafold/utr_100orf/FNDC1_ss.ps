%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:48:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGUGGCGGAGCGCGGCUGCCGGUGUGCGGCCGGGAGCGAUCGCCGCGGGGCAGGGGCGCGGCGGGCACCGCGCAGAGCGCGCAGAACAGACGGACGGCGGCGGGGACCCGACGGCGGCGCCUCGGCACUCCCCAGACUCCGGCCAGCGCCCCCCUGCCAGCCGCAAGCACCCAGCCCCGGCCCACCCCGGGCUCUCGAUGGCCCCCGAGGCCGGGGCGACCCUGCGCGCGCCGCGCCGGCUGUCCUGGGCGG\
CGCUGCUGCUCUUGGCCGCGCUGCUCCCCGUCGCCUCCUCGGCGG\
) } def
/len { sequence length } bind def

/coor [
[114.40934753 911.86444092]
[111.03283691 904.66558838]
[109.88327789 896.76379395]
[111.07865143 888.83477783]
[114.53557587 881.56243896]
[119.97476959 875.57952881]
[126.94355774 871.41302490]
[125.38082123 856.49462891]
[121.57743073 850.20043945]
[123.88046265 841.41253662]
[122.47351074 826.47863770]
[121.06655884 811.54479980]
[119.65961456 796.61090088]
[118.25266266 781.67706299]
[116.84571838 766.74316406]
[102.04157257 764.32708740]
[95.95960236 778.03875732]
[89.87762451 791.75042725]
[88.98243713 808.68072510]
[72.46597290 812.50726318]
[64.21673584 797.69561768]
[76.16596985 785.66845703]
[82.24794006 771.95678711]
[88.32991791 758.24511719]
[97.65931702 750.77880859]
[107.62145233 748.20404053]
[116.23502350 750.03314209]
[116.54811859 735.03643799]
[116.86120605 720.03967285]
[117.17430115 705.04296875]
[117.48739624 690.04620361]
[117.80049133 675.04949951]
[118.11357880 660.05273438]
[118.42667389 645.05603027]
[118.73976898 630.05926514]
[119.05285645 615.06256104]
[119.36595154 600.06579590]
[119.67904663 585.06909180]
[119.99214172 570.07238770]
[120.30522919 555.07562256]
[120.61832428 540.07891846]
[107.17160034 527.60583496]
[107.16168213 508.94406128]
[121.06491852 496.01974487]
[121.06491852 481.01974487]
[121.06491852 466.01974487]
[121.06491852 451.01974487]
[121.06491852 436.01974487]
[121.06491852 421.01974487]
[120.90836334 406.02053833]
[120.59526825 391.02380371]
[120.28217316 376.02709961]
[119.96908569 361.03036499]
[119.65599060 346.03363037]
[119.34289551 331.03689575]
[119.02980804 316.04016113]
[109.15167999 301.51043701]
[118.22210693 285.45944214]
[117.75251007 270.46679688]
[117.28291321 255.47415161]
[116.81331635 240.48150635]
[116.34371948 225.48886108]
[115.87412262 210.49621582]
[115.40452576 195.50357056]
[114.93492889 180.51092529]
[114.46533966 165.51828003]
[106.33338165 153.03947449]
[113.63485718 139.00382996]
[113.16526031 124.01118469]
[96.88473511 130.07498169]
[78.48309326 125.13667297]
[65.24977875 109.17295837]
[50.27448654 108.31236267]
[35.29919434 107.45176697]
[20.32390213 106.59117126]
[5.34861040 105.73057556]
[-10.81132889 110.85821533]
[-20.21209717 96.74929047]
[-9.25694084 83.81016541]
[6.20920515 90.75528717]
[21.18449783 91.61587524]
[36.15979004 92.47647095]
[51.13508224 93.33706665]
[66.11037445 94.19766235]
[70.47431946 88.09799194]
[57.74485016 80.16320801]
[45.01538849 72.22843170]
[32.28592300 64.29364777]
[17.32965660 63.14904785]
[8.27301598 51.19174194]
[11.22300434 36.48468018]
[24.19040871 28.94502640]
[38.43114853 33.65685654]
[44.34254074 47.44158554]
[55.96242523 56.92727280]
[67.58231354 66.41295624]
[79.20220184 75.89864349]
[83.56613922 69.79897308]
[77.91641235 55.90362930]
[72.26668549 42.00828552]
[66.61695099 28.11294174]
[60.89478683 14.24727154]
[55.10033798 0.41165209]
[49.30588913 -13.42396736]
[43.51144409 -27.25958824]
[37.71699524 -41.09520721]
[31.92254829 -54.93082809]
[26.12810135 -68.76644897]
[8.29521847 -68.49821472]
[-7.17218971 -85.86773682]
[-17.63951302 -96.61180878]
[-33.56140900 -100.53931427]
[-37.86050415 -116.36492157]
[-26.11426163 -127.80860138]
[-10.40620613 -123.09807587]
[-6.89543962 -107.07913208]
[3.57188439 -96.33506012]
[10.01426125 -100.17507935]
[29.34139442 -111.69515228]
[24.87022591 -126.01327515]
[20.39905739 -140.33139038]
[15.92788887 -154.64952087]
[11.45672131 -168.96763611]
[1.60071623 -173.42169189]
[-4.08287811 -182.36528015]
[-3.93590236 -192.74201965]
[1.75373900 -201.15809631]
[-2.41759491 -215.56642151]
[-6.58892918 -229.97474670]
[-21.71077728 -231.27635193]
[-35.33956909 -237.95620728]
[-45.63211823 -249.11093140]
[-51.19644928 -263.23193359]
[-51.28002548 -278.40945435]
[-45.87154770 -292.59088135]
[-35.70246887 -303.85827637]
[-22.14806747 -310.68783569]
[-7.04147148 -312.15588379]
[7.57427835 -308.06390381]
[19.72252274 -298.96530151]
[27.76031113 -286.09057617]
[30.60059738 -271.18093872]
[27.85925674 -256.25280762]
[19.90703392 -243.32505798]
[7.81940079 -234.14608765]
[11.99073505 -219.73774719]
[16.16206932 -205.32942200]
[31.03627968 -192.93106079]
[25.77484512 -173.43881226]
[30.24601173 -159.12068176]
[34.71718216 -144.80256653]
[39.18835068 -130.48443604]
[43.65951538 -116.16632080]
[52.37736893 -90.72786713]
[39.96371841 -74.56089783]
[45.75816727 -60.72527313]
[51.55261612 -46.88965607]
[57.34706116 -33.05403519]
[63.14151001 -19.21841621]
[68.93595886 -5.38279533]
[74.73040771 8.45282459]
[80.18588257 13.38437748]
[80.51229858 22.46321297]
[86.16202545 36.35855484]
[91.81175232 50.25389862]
[97.46148682 64.14923859]
[110.55700684 67.88961792]
[120.54146576 75.90573120]
[126.23419952 86.45880890]
[127.27722931 97.58882141]
[139.99887085 89.64151001]
[152.72052002 81.69419098]
[151.98187256 65.15313721]
[159.65447998 50.58683777]
[173.55342102 41.93946838]
[189.82276917 41.49811935]
[204.00517273 49.28866577]
[216.64317322 41.20901108]
[229.28117371 33.12935257]
[241.91918945 25.04969788]
[254.55718994 16.97004128]
[267.19519043 8.89038372]
[279.83319092 0.81072748]
[292.47119141 -7.26892900]
[305.10919189 -15.34858608]
[303.30429077 -28.08181190]
[306.42135620 -40.51082611]
[313.96636963 -50.81019592]
[324.79769897 -57.48094940]
[337.29867554 -59.56869125]
[349.61895752 -56.80000305]
[359.94824219 -49.61770630]
[372.75213623 -57.43181229]
[385.55603027 -65.24591827]
[398.35992432 -73.06002045]
[411.16381836 -80.87412262]
[414.63726807 -96.29199982]
[428.03988647 -104.66725922]
[443.42016602 -101.03101349]
[451.65325928 -87.54058075]
[447.85461426 -72.19960022]
[434.27789307 -64.10959625]
[418.97793579 -68.07022858]
[406.17404175 -60.25612640]
[393.37014771 -52.44202042]
[380.56625366 -44.62791443]
[367.76235962 -36.81380844]
[368.79028320 -19.58738708]
[360.88494873 -4.14699078]
[346.15695190 5.18560457]
[328.64062500 5.74649906]
[313.18887329 -2.71058154]
[300.55087280 5.36907530]
[287.91284180 13.44873142]
[275.27484131 21.52838898]
[262.63684082 29.60804558]
[249.99884033 37.68770218]
[237.36083984 45.76735687]
[224.72283936 53.84701538]
[212.08482361 61.92667007]
[213.60212708 75.47309875]
[209.12307739 88.41726685]
[199.46513367 98.22296906]
[186.46626282 102.94313049]
[172.63529968 101.60626984]
[160.66783142 94.41583252]
[147.94618225 102.36315155]
[135.22454834 110.31046295]
[128.15791321 123.54158783]
[128.62750244 138.53424072]
[136.79304504 152.08541870]
[129.45797729 165.04867554]
[129.92758179 180.04132080]
[130.39717102 195.03396606]
[130.86677551 210.02662659]
[131.33636475 225.01927185]
[131.80596924 240.01191711]
[132.27555847 255.00456238]
[132.74516296 269.99722290]
[133.21475220 284.98986816]
[142.04756165 294.34530640]
[142.15632629 306.81100464]
[134.02653503 315.72705078]
[134.33963013 330.72378540]
[134.65272522 345.72052002]
[134.96582031 360.71725464]
[135.27891541 375.71398926]
[135.59199524 390.71072388]
[135.90509033 405.70745850]
[138.96054077 411.48217773]
[138.71392822 417.09887695]
[136.06491089 421.01974487]
[136.06491089 436.01974487]
[136.06491089 451.01974487]
[136.06491089 466.01974487]
[136.06491089 481.01974487]
[136.06491089 496.01974487]
[145.90176392 502.59213257]
[151.30941772 512.97973633]
[151.05654907 524.56835938]
[145.32048035 534.50311279]
[135.61505127 540.39196777]
[135.30195618 555.38873291]
[134.98887634 570.38543701]
[134.67578125 585.38220215]
[134.36268616 600.37890625]
[134.04959106 615.37567139]
[133.73649597 630.37237549]
[133.42340088 645.36914062]
[133.11030579 660.36584473]
[132.79722595 675.36254883]
[132.48413086 690.35931396]
[132.17103577 705.35601807]
[131.85794067 720.35278320]
[131.54484558 735.34948730]
[131.23175049 750.34625244]
[131.77958679 765.33624268]
[133.18653870 780.27008057]
[134.59349060 795.20397949]
[136.00042725 810.13781738]
[137.40737915 825.07171631]
[138.81433105 840.00555420]
[140.29919434 854.93188477]
[141.86192322 869.85028076]
[160.40377808 882.62451172]
[163.21966553 904.68103027]
[148.84924316 921.27954102]
[151.34254456 936.07086182]
[153.83584595 950.86224365]
[156.32914734 965.65356445]
[168.51490784 976.08843994]
[167.81033325 992.11596680]
[154.75588989 1001.44128418]
[139.36584473 996.91076660]
[133.44610596 981.99981689]
[141.53781128 968.14685059]
[139.04450989 953.35552979]
[136.55122375 938.56420898]
[134.05792236 923.77282715]
[126.45121002 921.83117676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 284]
[8 283]
[10 282]
[11 281]
[12 280]
[13 279]
[14 278]
[15 277]
[16 24]
[17 23]
[18 22]
[27 276]
[28 275]
[29 274]
[30 273]
[31 272]
[32 271]
[33 270]
[34 269]
[35 268]
[36 267]
[37 266]
[38 265]
[39 264]
[40 263]
[41 262]
[44 257]
[45 256]
[46 255]
[47 254]
[48 253]
[49 252]
[50 249]
[51 248]
[52 247]
[53 246]
[54 245]
[55 244]
[56 243]
[58 240]
[59 239]
[60 238]
[61 237]
[62 236]
[63 235]
[64 234]
[65 233]
[66 232]
[68 230]
[69 229]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[98 166]
[99 165]
[100 164]
[101 163]
[102 161]
[103 160]
[104 159]
[105 158]
[106 157]
[107 156]
[108 155]
[110 117]
[111 116]
[119 153]
[120 152]
[121 151]
[122 150]
[123 149]
[127 147]
[128 146]
[129 145]
[170 228]
[171 227]
[172 226]
[177 220]
[178 219]
[179 218]
[180 217]
[181 216]
[182 215]
[183 214]
[184 213]
[185 212]
[192 207]
[193 206]
[194 205]
[195 204]
[196 203]
[287 299]
[288 298]
[289 297]
[290 296]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
