%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGACGGGGCGGGGCUUCGGGCGAGAGGGAGGGCAGCAGGAGAAAGGAUAAGAAAGGGAGUGGGACUGGCGCCUACGGUGGCCGAAGUGGGACGCGCCGAGCCGGAGGCUGCAGGAUGAUGCGGUUCAUGCUAUUAUUCAGCCGGCAGGGAAAACUGCGGCUGCAAAAAUGGUACCUGGCCACUUCGGACAAGGAACGGAAGAAGAUGGUGCGCG\
) } def
/len { sequence length } bind def

/coor [
[55.19849777 119.06889343]
[52.00333023 108.19250488]
[37.00488663 108.40866089]
[22.00644493 108.62481689]
[11.03147316 119.67867279]
[-4.18215990 119.68423462]
[-14.65268707 109.15315247]
[-29.65112877 109.36930847]
[-44.64957047 109.58546448]
[-58.33681107 117.52082825]
[-71.17426300 109.96773529]
[-86.17270660 110.18389130]
[-101.17114258 110.40005493]
[-113.85011292 124.48236847]
[-132.47666931 124.81397247]
[-145.20439148 111.65120697]
[-160.19038391 112.29949951]
[-175.17636108 112.94779205]
[-190.16235352 113.59608459]
[-205.14833069 114.24437714]
[-220.13432312 114.89266968]
[-235.12030029 115.54096222]
[-248.57318115 123.86746979]
[-261.62295532 116.68746185]
[-276.60894775 117.33575439]
[-280.74826050 128.60989380]
[-288.42282104 137.80288696]
[-298.71679688 143.85408020]
[-310.41394043 146.07554626]
[-322.14126587 144.23028564]
[-332.53027344 138.55723572]
[-340.37658691 129.74061584]
[-344.77954102 118.82750702]
[-359.77954102 118.82750702]
[-374.77954102 118.82750702]
[-389.77954102 118.82750702]
[-400.91268921 129.72206116]
[-416.12481689 129.50837708]
[-426.44250488 118.82750702]
[-441.44250488 118.82750702]
[-456.44250488 118.82750702]
[-459.78811646 133.51609802]
[-466.31884766 147.09170532]
[-475.70709229 158.87341309]
[-487.48196411 168.27023315]
[-501.05282593 174.81082153]
[-515.73895264 178.16711426]
[-530.80377197 178.17076111]
[-545.49151611 174.82157898]
[-559.06555176 168.28756714]
[-570.84497070 158.89646912]
[-580.23895264 147.11930847]
[-586.77624512 133.54685974]
[-590.12902832 118.85990143]
[-590.12902832 103.79512024]
[-586.77624512 89.10815430]
[-580.23895264 75.53570557]
[-570.84497070 63.75855637]
[-559.06555176 54.36744690]
[-545.49151611 47.83343124]
[-530.80377197 44.48425293]
[-515.73895264 44.48790359]
[-501.05282593 47.84420013]
[-487.48196411 54.38479233]
[-475.70709229 63.78160858]
[-466.31884766 75.56330872]
[-459.78811646 89.13892365]
[-456.44250488 103.82750702]
[-441.44250488 103.82750702]
[-426.44250488 103.82750702]
[-416.12481689 93.14663696]
[-400.91268921 92.93295288]
[-389.77954102 103.82750702]
[-374.77954102 103.82750702]
[-359.77954102 103.82750702]
[-344.77954102 103.82750702]
[-336.44427490 87.73094940]
[-321.01690674 78.05271149]
[-302.72683716 77.54820251]
[-286.64031982 86.44371033]
[-277.25723267 102.34976959]
[-262.27124023 101.70147705]
[-249.89027405 93.42134094]
[-235.76858521 100.55497742]
[-220.78260803 99.90668488]
[-205.79663086 99.25839233]
[-190.81063843 98.61009979]
[-175.82466125 97.96180725]
[-160.83866882 97.31352234]
[-145.85269165 96.66522980]
[-140.15104675 86.79008484]
[-130.28952026 80.82981873]
[-118.65627289 80.36289978]
[-108.13437653 85.62073517]
[-101.38730621 95.40161133]
[-86.38886261 95.18545532]
[-71.39041901 94.96929169]
[-58.77596664 87.04939270]
[-44.86573029 94.58702087]
[-29.86728668 94.37086487]
[-14.86884403 94.15470886]
[-4.70615005 83.32626343]
[10.50132465 82.89338684]
[21.79028893 93.62638092]
[36.78873062 93.41021729]
[51.78717422 93.19406128]
[61.43959808 70.26966095]
[81.15497589 55.10387039]
[105.78826904 51.65443802]
[109.84426880 37.21321869]
[113.90026855 22.77199554]
[117.95626831 8.33077526]
[122.01226807 -6.11044550]
[126.06826782 -20.55166626]
[130.12426758 -34.99288559]
[122.16948700 -48.64927673]
[126.28186035 -63.90915680]
[140.02159119 -71.71910858]
[155.23713684 -67.44563293]
[162.90139771 -53.62409592]
[158.46728516 -38.45457840]
[144.56549072 -30.93688583]
[140.50949097 -16.49566460]
[136.45349121 -2.05444455]
[132.39749146 12.38677597]
[128.34149170 26.82799721]
[124.28548431 41.26921844]
[120.22948456 55.71043777]
[129.91522217 61.58285904]
[137.98205566 69.53427124]
[143.99343872 79.13437653]
[158.37472534 74.87069702]
[172.75599670 70.60700989]
[187.13726807 66.34332275]
[201.51853943 62.07964325]
[215.89981079 57.81595612]
[230.28108215 53.55227280]
[241.31272888 42.21148682]
[255.71430969 46.01196289]
[270.09558105 41.74827957]
[284.44577026 37.38108063]
[298.76409912 32.91059875]
[313.08242798 28.44011688]
[327.40075684 23.96963310]
[341.71911621 19.49915123]
[356.03744507 15.02866840]
[363.29187012 9.48667431]
[370.59442139 10.59853649]
[384.97567749 6.33485174]
[399.35696411 2.07116723]
[406.67355347 -11.93751526]
[421.77758789 -16.58976364]
[435.70812988 -9.12548351]
[440.20043945 6.02690220]
[432.58929443 19.87775040]
[417.39025879 24.20960045]
[403.62063599 16.45244026]
[389.23937988 20.71612358]
[374.85809326 24.97980881]
[360.50793457 29.34700584]
[346.18957520 33.81748962]
[331.87124634 38.28797150]
[317.55291748 42.75845337]
[303.23458862 47.22893524]
[288.91622925 51.69941711]
[283.47106934 56.69079971]
[274.35925293 56.12955093]
[259.97799683 60.39323425]
[249.97499084 71.42905426]
[234.54476929 67.93354797]
[220.16349792 72.19722748]
[205.78222656 76.46091461]
[191.40093994 80.72460175]
[177.01966858 84.98828125]
[162.63839722 89.25196838]
[148.25712585 93.51565552]
[148.62390137 102.55210876]
[147.31317139 111.50051117]
[144.37013245 120.05215454]
[139.89633179 127.91200256]
[134.04612732 134.80888367]
[142.75764465 147.01992798]
[151.46916199 159.23095703]
[160.18069458 171.44200134]
[168.97996521 183.58995056]
[177.86656189 195.67417908]
[186.75314331 207.75840759]
[195.63972473 219.84263611]
[210.28202820 215.84669495]
[225.37866211 217.41389465]
[238.88792419 224.33226013]
[248.98281860 235.66618347]
[254.29808044 249.88279724]
[254.11488342 265.05944824]
[248.45796204 279.14361572]
[238.09240723 290.23052979]
[224.42005920 296.82080078]
[209.28999329 298.02307129]
[194.74842834 293.67483521]
[182.76199341 284.36410522]
[174.95173645 271.35009766]
[172.37396240 256.39285278]
[175.37727356 241.51519775]
[183.55549622 228.72921753]
[174.66891479 216.64498901]
[165.78231812 204.56076050]
[156.89573669 192.47653198]
[150.40408325 188.95202637]
[147.96965027 180.15351868]
[139.25813293 167.94248962]
[130.54661560 155.73144531]
[121.83509064 143.52041626]
[111.17996216 147.38993835]
[99.91884613 148.69076538]
[88.66212463 147.35240173]
[78.01995850 143.44738770]
[68.56917572 137.18737793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 106]
[3 105]
[4 104]
[7 101]
[8 100]
[9 99]
[11 97]
[12 96]
[13 95]
[16 90]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[22 84]
[24 82]
[25 81]
[33 76]
[34 75]
[35 74]
[36 73]
[39 70]
[40 69]
[41 68]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[131 176]
[132 175]
[133 174]
[134 173]
[135 172]
[136 171]
[137 170]
[139 168]
[140 167]
[141 165]
[142 164]
[143 163]
[144 162]
[145 161]
[146 160]
[148 159]
[149 158]
[150 157]
[181 212]
[182 211]
[183 210]
[184 209]
[185 207]
[186 206]
[187 205]
[188 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
