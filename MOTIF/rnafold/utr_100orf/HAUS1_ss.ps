%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUGUGGGCGGGGCCUAGGGAGUGAGCGGGGCGCAUCUCCCGCUAGGAGUUCCUAGUAAAGUGGCGGGAGCCGCAGCUAUGGAGCCGCAGGAGGAGAGAGAAACGCAGGUUGCUGCGUGGUUAAAAAAAAUAUUUGGAGAUCAUCCUAUUCCACAGUAUGAGGUGAACCCACGGACCA\
) } def
/len { sequence length } bind def

/coor [
[95.13198853 357.42355347]
[94.87165070 342.42581177]
[84.01331329 332.29504395]
[83.53564453 317.08892822]
[94.23532867 305.76840210]
[93.97499084 290.77066040]
[93.71465302 275.77291870]
[93.45430756 260.77517700]
[93.19396973 245.77743530]
[92.93363190 230.77969360]
[81.32319641 224.15867615]
[74.45124817 212.56884766]
[74.20838165 198.98872375]
[80.76527405 186.97038269]
[92.50000000 179.71038818]
[92.50000000 164.71038818]
[92.50000000 149.71038818]
[92.50000000 134.71038818]
[74.95333862 137.10261536]
[55.29457092 130.32351685]
[41.97108841 137.21443176]
[28.64760590 144.10536194]
[15.32412434 150.99627686]
[2.00064206 157.88720703]
[-11.26253700 164.89349365]
[-24.46441269 172.01461792]
[-32.93707275 185.37593079]
[-47.81188202 184.60830688]
[-61.01375961 191.72943115]
[-72.08372498 204.57046509]
[-87.48740387 197.48786926]
[-84.94575500 180.72552490]
[-68.13488770 178.52755737]
[-54.93301010 171.40643311]
[-47.40464020 158.55447388]
[-31.58554077 158.81274414]
[-18.38366508 151.69161987]
[-13.97742271 145.73277283]
[-4.89028120 144.56372070]
[8.43320084 137.67280579]
[21.75668335 130.78187561]
[35.08016586 123.89095306]
[48.40364838 117.00003052]
[46.45651245 102.12694550]
[31.80816841 98.89800262]
[17.15982628 95.66906738]
[2.51148272 92.44012451]
[-12.13685989 89.21118164]
[-26.78520203 85.98224640]
[-42.24755096 91.44555664]
[-54.53252792 80.58226013]
[-51.00240326 64.56756592]
[-35.28866577 59.87603378]
[-23.55626297 71.33390045]
[-8.90791988 74.56284332]
[5.74042320 77.79177856]
[20.38876534 81.02072144]
[35.03710938 84.24966431]
[49.68545151 87.47859955]
[53.47296524 81.00521851]
[46.04798126 67.97181702]
[61.04800034 68.05844116]
[64.83551788 61.58506012]
[54.84378433 50.39732742]
[44.85205078 39.20959854]
[34.86032104 28.02186966]
[24.86858749 16.83413887]
[9.13191700 12.22011566]
[5.52289724 -3.77697825]
[17.75417900 -14.70070362]
[33.24326706 -9.31366825]
[36.05631638 6.84240770]
[46.04804993 18.03013802]
[56.03977966 29.21786690]
[66.03150940 40.40559769]
[76.02324677 51.59332657]
[106.67385864 55.73489761]
[124.44351959 74.24005127]
[136.83360291 65.78512573]
[149.22369385 57.33020401]
[156.26150513 43.16052628]
[171.13552856 42.37770844]
[183.52561951 33.92278671]
[195.91569519 25.46786499]
[208.30578613 17.01294136]
[220.69587708 8.55802059]
[227.93130493 -4.58155966]
[228.45190430 -19.57252312]
[217.48927307 -30.95654869]
[217.87075806 -46.75623322]
[229.37005615 -57.59790039]
[245.16482544 -57.04938507]
[255.88430786 -45.43611145]
[255.16883850 -29.64802551]
[243.44287109 -19.05192184]
[242.92227173 -4.06095839]
[249.83253479 -1.14579344]
[255.66287231 -14.96633053]
[261.49319458 -28.78686905]
[267.32376099 -42.60730743]
[281.14410400 -36.77651978]
[275.31375122 -22.95653915]
[269.48339844 -9.13600063]
[263.65307617 4.68453646]
[270.56335449 7.59970140]
[280.93734741 -3.23450780]
[291.31134033 -14.06871700]
[301.68536377 -24.90292549]
[312.05935669 -35.73713684]
[322.43334961 -46.57134247]
[325.80541992 -62.62005615]
[341.47216797 -67.46627045]
[353.31695557 -56.12461472]
[349.15490723 -40.26241684]
[333.26757812 -36.19734192]
[322.89355469 -25.36313248]
[312.51956177 -14.52892399]
[302.14556885 -3.69471502]
[291.77154541 7.13949394]
[281.39755249 17.97370338]
[283.45370483 25.18634605]
[297.75195312 20.65199471]
[312.05020142 16.11764336]
[326.34841919 11.58329201]
[340.64666748 7.04894018]
[354.94491577 2.51458883]
[369.24313354 -2.01976275]
[382.81518555 -8.40722275]
[394.13729858 1.43197870]
[389.70513916 15.76222229]
[374.80529785 17.49133301]
[360.26541138 21.17804909]
[345.72555542 24.86476707]
[331.18566895 28.55148315]
[316.64578247 32.23820114]
[302.10589600 35.92491531]
[287.56600952 39.61163330]
[289.62216187 46.82427597]
[304.14962769 50.55966949]
[318.67706299 54.29505920]
[333.16476440 47.40401459]
[347.52160645 54.56367493]
[350.73425293 70.28176880]
[340.33825684 82.50071716]
[324.30850220 81.84718323]
[314.94168091 68.82250977]
[300.41424561 65.08712006]
[285.88677979 61.35173035]
[254.32292175 57.69735336]
[234.20095825 41.30664444]
[229.15080261 20.94810867]
[216.76071167 29.40303040]
[204.37062073 37.85795212]
[191.98052979 46.31287384]
[179.59045410 54.76779556]
[173.43885803 68.33272552]
[157.67861938 69.72029114]
[145.28852844 78.17521667]
[132.89843750 86.63013458]
[135.46705627 101.77452087]
[131.39961243 116.58688354]
[121.45717621 128.29576111]
[107.50000000 134.71038818]
[107.50000000 149.71038818]
[107.50000000 164.71038818]
[107.50000000 179.71038818]
[121.31069183 189.45338440]
[126.55031586 205.34748840]
[121.34545898 221.07823181]
[107.93137360 230.51934814]
[108.19171143 245.51708984]
[108.45204926 260.51483154]
[108.71238708 275.51257324]
[108.97273254 290.51031494]
[109.23307037 305.50805664]
[120.31920624 316.45040894]
[120.36958313 331.66397095]
[109.86939240 342.16546631]
[110.12973022 357.16320801]
[112.65447998 376.37976074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[15 166]
[16 165]
[17 164]
[18 163]
[20 43]
[21 42]
[22 41]
[23 40]
[24 39]
[25 37]
[26 36]
[28 34]
[29 33]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[78 159]
[79 158]
[80 157]
[82 155]
[83 154]
[84 153]
[85 152]
[86 151]
[87 96]
[88 95]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[138 148]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
