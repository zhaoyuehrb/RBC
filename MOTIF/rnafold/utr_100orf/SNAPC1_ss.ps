%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCCGUAGGGGGCGGGCCGUUCGGGCUUGGUUUCCUGGGCGACCACCGCUGGCUAGUCCGUUAGAGGCGUGCGGGCUUCGGAGGCGUGCGGGCUUCGGGUGCCAUGGGGACUCCUCCCGGCCUGCAGACCGACUGCGAGGCGCUGCUCAGCCGCUUCCAGGAGACGGACAGUGUACGCUUCGAGGACUUCACGGAGCUCUGGA\
) } def
/len { sequence length } bind def

/coor [
[-356.85513306 793.97363281]
[-367.07693481 794.18951416]
[-376.44210815 805.90673828]
[-385.80728149 817.62396240]
[-395.17248535 829.34118652]
[-398.08789062 838.00299072]
[-404.77203369 841.16473389]
[-414.31567383 852.73706055]
[-423.85931396 864.30944824]
[-433.40295410 875.88177490]
[-442.94659424 887.45410156]
[-452.49023438 899.02642822]
[-462.03387451 910.59875488]
[-471.57751465 922.17114258]
[-481.03219604 933.81622314]
[-490.39736938 945.53344727]
[-499.76254272 957.25067139]
[-509.12771606 968.96789551]
[-518.49291992 980.68511963]
[-518.15026855 996.72454834]
[-530.56848145 1006.88171387]
[-546.22131348 1003.36492920]
[-553.10131836 988.87200928]
[-545.93066406 974.52062988]
[-530.21014404 971.31994629]
[-520.84497070 959.60272217]
[-511.47976685 947.88549805]
[-502.11459351 936.16827393]
[-492.74942017 924.45104980]
[-491.02810669 917.25994873]
[-483.14984131 912.62750244]
[-473.60620117 901.05511475]
[-464.06256104 889.48278809]
[-454.51892090 877.91046143]
[-444.97528076 866.33813477]
[-435.43167114 854.76580811]
[-425.88803101 843.19348145]
[-416.34439087 831.62109375]
[-406.88970947 819.97601318]
[-397.52450562 808.25878906]
[-388.15933228 796.54150391]
[-378.79415894 784.82427979]
[-377.30276489 765.54852295]
[-358.42648315 758.48284912]
[-349.42477417 746.48413086]
[-340.42306519 734.48541260]
[-342.77508545 719.82244873]
[-333.81698608 707.52581787]
[-318.42114258 705.15820312]
[-309.41943359 693.15948486]
[-300.41772461 681.16076660]
[-307.74917603 665.58666992]
[-306.17764282 648.35565186]
[-296.04598999 634.22003174]
[-280.07043457 627.12414551]
[-262.61273193 629.10394287]
[-253.98295593 616.83502197]
[-245.35317993 604.56610107]
[-236.72338867 592.29718018]
[-228.09361267 580.02819824]
[-232.44192505 569.47430420]
[-231.13995361 558.01348877]
[-224.39640808 548.50830078]
[-213.79339600 543.38873291]
[-201.91661072 544.03179932]
[-192.91490173 532.03308105]
[-183.91319275 520.03436279]
[-174.91149902 508.03561401]
[-165.90979004 496.03689575]
[-156.90808105 484.03817749]
[-147.90637207 472.03945923]
[-138.90466309 460.04074097]
[-129.90295410 448.04202271]
[-120.90125275 436.04330444]
[-126.18606567 414.76013184]
[-113.85216522 396.29525757]
[-91.62212372 392.94436646]
[-83.76015472 380.16979980]
[-75.89819336 367.39523315]
[-68.03623199 354.62066650]
[-60.27238083 341.78625488]
[-52.60710144 328.89270020]
[-44.94181824 315.99914551]
[-37.27653885 303.10562134]
[-29.61125946 290.21206665]
[-21.94597816 277.31851196]
[-14.28069878 264.42498779]
[-13.56440830 257.06552124]
[-6.39787054 251.39385986]
[1.46409357 238.61929321]
[9.22794342 225.78486633]
[16.89322281 212.89132690]
[24.55850410 199.99778748]
[32.22378540 187.10423279]
[31.66087151 184.35348511]
[32.15628052 181.21354675]
[33.86391068 178.08734131]
[36.78873825 175.42611694]
[40.77438354 173.67617798]
[49.21513748 161.27642822]
[57.65589523 148.87669373]
[66.09664917 136.47694397]
[74.53739929 124.07719421]
[82.97815704 111.67745209]
[75.78785706 103.58133698]
[73.01979828 91.42924500]
[76.74713135 77.80956268]
[87.51771545 66.25960541]
[92.47965240 52.10406876]
[97.44158173 37.94853210]
[102.40351868 23.79299545]
[98.83349609 7.78715420]
[111.09136200 -3.10673141]
[126.56727600 2.31803465]
[129.34094238 18.48091888]
[116.55905151 28.75493050]
[111.59712219 42.91046524]
[106.63518524 57.06600189]
[101.67324829 71.22154236]
[107.84060669 75.48929596]
[116.37632751 63.15473557]
[128.71075439 71.69065857]
[120.17530823 84.02481842]
[126.34265900 88.29257202]
[137.84153748 78.66054535]
[149.34040833 69.02851868]
[160.83927917 59.39649200]
[172.33815002 49.76446152]
[175.17660522 33.97450638]
[189.35935974 26.47590637]
[204.00662231 33.02094650]
[207.88224792 48.58882904]
[198.01319885 61.23721313]
[181.97016907 61.26333618]
[170.47129822 70.89536285]
[158.97242737 80.52738953]
[147.47355652 90.15941620]
[135.97468567 99.79144287]
[117.69856262 122.09411621]
[95.37789917 120.11820984]
[86.93714905 132.51794434]
[78.49639130 144.91769409]
[70.05564117 157.31744385]
[61.61488342 169.71717834]
[53.17412949 182.11692810]
[45.11732864 194.76951599]
[37.45204926 207.66305542]
[29.78676796 220.55661011]
[22.12148857 233.45014954]
[20.42465591 242.43055725]
[14.23865891 246.48126221]
[6.37669516 259.25582886]
[-1.38715482 272.09027100]
[-9.05243492 284.98379517]
[-16.71771431 297.87734985]
[-24.38299561 310.77090454]
[-32.04827499 323.66442871]
[-39.71355438 336.55798340]
[-47.37883759 349.45153809]
[-49.07566833 358.43191528]
[-55.26166534 362.48263550]
[-63.12362671 375.25720215]
[-70.98559570 388.03176880]
[-78.84755707 400.80633545]
[-74.27033997 407.71313477]
[-71.93121338 415.62673950]
[-72.01717377 423.84460449]
[-74.50084686 431.64321899]
[-79.14463043 438.34179688]
[-85.52328491 443.36169434]
[-93.06280518 446.27639771]
[-101.09206390 446.84768677]
[-108.90252686 445.04501343]
[-117.90423584 457.04373169]
[-126.90594482 469.04244995]
[-135.90765381 481.04116821]
[-144.90936279 493.03988647]
[-153.91107178 505.03860474]
[-162.91276550 517.03735352]
[-171.91447449 529.03607178]
[-180.91618347 541.03479004]
[-189.91789246 553.03350830]
[-186.52531433 571.66851807]
[-197.63661194 586.61236572]
[-215.82467651 588.65802002]
[-224.45445251 600.92694092]
[-233.08422852 613.19586182]
[-241.71401978 625.46478271]
[-250.34379578 637.73376465]
[-243.82022095 648.88537598]
[-242.00704956 661.62988281]
[-245.13880920 674.06774902]
[-252.71568298 684.35870361]
[-263.58282471 690.99389648]
[-276.10638428 693.01708984]
[-288.41900635 690.16247559]
[-297.42071533 702.16119385]
[-306.42242432 714.15991211]
[-304.38885498 729.60345459]
[-313.68878174 741.64361572]
[-328.42434692 743.48712158]
[-337.42605591 755.48583984]
[-346.42776489 767.48455811]
[-344.27056885 778.15161133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 42]
[3 41]
[4 40]
[5 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[44 203]
[45 202]
[46 201]
[49 198]
[50 197]
[51 196]
[56 189]
[57 188]
[58 187]
[59 186]
[60 185]
[65 182]
[66 181]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[72 175]
[73 174]
[74 173]
[77 164]
[78 163]
[79 162]
[80 161]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[89 152]
[90 151]
[91 149]
[92 148]
[93 147]
[94 146]
[99 145]
[100 144]
[101 143]
[102 142]
[103 141]
[104 140]
[108 119]
[109 118]
[110 117]
[111 116]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
