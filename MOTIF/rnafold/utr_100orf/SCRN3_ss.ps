%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCAAAGGUGACAGCUUCCGGCAACUGAUGCCUCCACUGGCCACUCCUCCCUCCGUCCACCUGUCACUUCGGGUAGCUGGGAGGCCAGUUAAAAAAAAUGGAACCUUUUUCCUGUGACACUUUCGUGGCAUUACCUCCAGCAACAGUCGAUAACAGGAUUAUUUUUGGAAAAAAUUCAGAUAGACUCUAUGAUGAAG\
) } def
/len { sequence length } bind def

/coor [
[71.31085205 110.41817474]
[79.70936584 99.11187744]
[90.84600067 95.73715973]
[76.70176697 90.74308014]
[62.55754471 85.74900055]
[46.96864319 88.45026398]
[37.54352951 76.91699219]
[23.39930153 71.92291260]
[9.25507450 66.92883301]
[-6.33382368 69.63009644]
[-15.75893879 58.09682083]
[-29.90316582 53.10274124]
[-45.49206543 55.80400467]
[-54.91717911 44.27072906]
[-69.06140900 39.27664948]
[-84.65030670 41.97791672]
[-94.07542419 30.44463921]
[-108.21965027 25.45055962]
[-122.36387634 20.45648003]
[-136.50810242 15.46240044]
[-151.23974609 18.28707504]
[-162.53358459 28.15870285]
[-173.82743835 38.03033066]
[-185.12127686 47.90195847]
[-187.62718201 63.74809647]
[-201.64916992 71.54319000]
[-216.43077087 65.30751038]
[-220.63281250 49.82454300]
[-211.03184509 36.97148895]
[-194.99290466 36.60811234]
[-183.69906616 26.73648643]
[-172.40521240 16.86485672]
[-161.11137390 6.99322939]
[-162.17340088 -0.43119559]
[-176.09503174 -6.01583529]
[-164.29747009 -15.28004551]
[-165.35951233 -22.70446968]
[-178.96798706 -29.01392174]
[-192.57647705 -35.32337189]
[-206.18495178 -41.63282394]
[-219.79344177 -47.94227219]
[-233.40193176 -54.25172424]
[-247.01040649 -60.56117630]
[-244.43464661 -45.78398132]
[-254.26002502 -34.44987488]
[-269.25317383 -34.90292740]
[-278.37628174 -46.80960846]
[-274.91296387 -61.40431595]
[-261.41275024 -67.94255066]
[-274.48135376 -75.30541992]
[-287.54995728 -82.66828918]
[-300.61856079 -90.03115845]
[-310.92010498 -86.50192261]
[-321.24942017 -89.17520142]
[-328.25088501 -96.93280792]
[-329.78820801 -107.04689026]
[-342.61785889 -114.81864929]
[-355.31369019 -112.50702667]
[-365.84194946 -119.25216675]
[-368.84826660 -130.97552490]
[-381.55364990 -138.94885254]
[-394.25900269 -146.92216492]
[-406.96435547 -154.89547729]
[-419.66970825 -162.86880493]
[-435.01794434 -159.09945679]
[-448.49261475 -167.35829163]
[-452.09948730 -182.74549866]
[-443.69863892 -196.13211060]
[-428.27416992 -199.57609558]
[-414.97711182 -191.03419495]
[-411.69641113 -175.57415771]
[-398.99102783 -167.60084534]
[-386.28567505 -159.62753296]
[-373.58032227 -151.65420532]
[-360.87496948 -143.68089294]
[-343.33279419 -143.98509216]
[-334.84609985 -127.64829254]
[-322.01644897 -119.87653351]
[-302.71279907 -120.89490509]
[-293.25567627 -103.09975433]
[-280.18707275 -95.73688507]
[-267.11849976 -88.37401581]
[-254.04989624 -81.01114655]
[-240.70095825 -74.16966248]
[-227.09246826 -67.86020660]
[-213.48399353 -61.55075836]
[-199.87550354 -55.24130630]
[-186.26702881 -48.93185425]
[-172.65853882 -42.62240601]
[-159.05004883 -36.31295395]
[-154.24955750 -50.52404785]
[-143.88754272 -61.36972809]
[-129.91007996 -66.81311035]
[-114.94220734 -65.83188629]
[-101.79499054 -58.61034393]
[-92.93756104 -46.50473022]
[-90.03339386 -31.78855705]
[-93.62790680 -17.22560883]
[-103.04604340 -5.55090141]
[-116.51900482 1.04298353]
[-131.51402283 1.31817281]
[-117.36979675 6.31225252]
[-103.22557068 11.30633163]
[-89.08134460 16.30041122]
[-74.50413513 13.24193668]
[-64.06732941 25.13242340]
[-49.92309952 30.12650299]
[-35.34589386 27.06802750]
[-24.90908623 38.95851517]
[-10.76486015 43.95259094]
[3.81234837 40.89411926]
[14.24915409 52.78460312]
[28.39338112 57.77868271]
[42.53760910 62.77276230]
[57.11481857 59.71428680]
[67.55162048 71.60477448]
[81.69584656 76.59885406]
[95.84008026 81.59293365]
[110.42147064 78.07398224]
[120.73103333 67.17843628]
[131.04058838 56.28289413]
[134.31742859 40.21446609]
[149.95513916 35.27541733]
[161.86697388 46.54661942]
[157.79907227 62.43322372]
[141.93614197 66.59245300]
[131.62657166 77.48799896]
[121.31701660 88.38354492]
[123.81405640 95.45565796]
[137.95828247 90.46157837]
[152.10250854 85.46749878]
[166.24682617 80.47365570]
[171.24043274 94.61804962]
[157.09658813 99.61173248]
[142.95236206 104.60581207]
[128.80813599 109.59989166]
[131.30517578 116.67200470]
[146.17033386 118.67879486]
[161.03547668 120.68559265]
[175.90063477 122.69238281]
[190.76579285 124.69918060]
[205.47705078 118.87770844]
[217.05474854 128.24818420]
[231.91990662 130.25497437]
[246.63116455 124.43350983]
[258.20886230 133.80398560]
[273.07403564 135.81079102]
[287.93917847 137.81758118]
[302.80432129 139.82437134]
[313.42477417 128.51127625]
[328.67282104 125.63439941]
[342.68530273 132.29995728]
[350.07415771 145.94491577]
[347.99816895 161.32249451]
[337.25564575 172.51971436]
[321.97729492 175.23100281]
[308.03793335 168.41383362]
[300.79754639 154.68952942]
[285.93240356 152.68272400]
[271.06723022 150.67593384]
[256.20208740 148.66914368]
[242.55407715 154.63415527]
[229.91311646 145.12013245]
[215.04795837 143.11334229]
[201.39996338 149.07835388]
[188.75898743 139.56433105]
[173.89384460 137.55754089]
[159.02868652 135.55075073]
[144.16352844 133.54394531]
[129.29838562 131.53715515]
[124.72875977 137.48429871]
[138.86502075 142.50088501]
[138.46212769 157.49546814]
[124.07687378 161.74569702]
[115.58950806 149.37858582]
[111.01988983 155.32574463]
[116.78747559 169.17257690]
[122.55506134 183.01940918]
[128.32264709 196.86625671]
[143.20802307 207.69862366]
[140.28619385 224.99842834]
[146.27165222 238.75250244]
[152.25711060 252.50656128]
[158.24256897 266.26062012]
[170.10699463 278.37145996]
[161.75386047 293.12481689]
[145.26469421 289.18225098]
[144.48851013 272.24609375]
[138.50305176 258.49203491]
[132.51759338 244.73796082]
[126.53213501 230.98388672]
[115.38955688 226.25967407]
[110.29319763 214.84179688]
[114.47580719 202.63383484]
[108.70822144 188.78700256]
[102.94063568 174.94017029]
[97.17304993 161.09332275]
[78.37758636 146.13047791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 118]
[4 117]
[5 116]
[7 114]
[8 113]
[9 112]
[11 110]
[12 109]
[14 107]
[15 106]
[17 104]
[18 103]
[19 102]
[20 101]
[21 33]
[22 32]
[23 31]
[24 30]
[37 90]
[38 89]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[49 83]
[50 82]
[51 81]
[52 80]
[56 78]
[57 77]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[119 128]
[120 127]
[121 126]
[137 170]
[138 169]
[139 168]
[140 167]
[141 166]
[143 164]
[144 163]
[146 161]
[147 160]
[148 159]
[149 158]
[176 197]
[177 196]
[178 195]
[179 194]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
