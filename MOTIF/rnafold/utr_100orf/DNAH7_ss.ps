%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACCGCUGCAAGUCCCGGGGCCCUGCCUCUAUCGUCCUAGGGGUUCCGCGGGCAGGAGCAACCCAGAAGCACCGGUGAGGCCAGCGCGUCCUCGCAGCCAUGAGCAGUGAGCAGGAUAAAUCGGCCAGCAAAGAAAAAUCCAAGAAACCAGUAAGAUUUCUACCACAGCUGUCUAUGGAGAAAUUAGCCAGCAAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[52.67700195 139.93898010]
[63.76600647 129.83779907]
[77.45938110 123.72209167]
[87.95833588 113.00892639]
[73.60847473 117.37714386]
[59.25860596 121.74536896]
[44.90874100 126.11358643]
[33.95991516 137.53434753]
[19.53105736 133.83877563]
[5.18119144 138.20698547]
[-9.16867447 142.57521057]
[-17.40410233 162.88505554]
[-37.45452499 171.06445312]
[-57.06696701 162.51921082]
[-70.24736786 169.68000793]
[-83.42776489 176.84080505]
[-96.60816956 184.00160217]
[-109.73249054 191.26467896]
[-122.79993439 198.62959290]
[-135.86737061 205.99449158]
[-148.93481445 213.35940552]
[-162.00225830 220.72431946]
[-175.06970215 228.08923340]
[-188.13714600 235.45414734]
[-201.20458984 242.81904602]
[-214.27203369 250.18395996]
[-212.07049561 265.20120239]
[-215.44628906 279.99877930]
[-223.94285583 292.57546997]
[-236.41113281 301.23031616]
[-251.16485596 304.79287720]
[-266.20874023 302.78134155]
[-279.50817871 295.46771240]
[-289.26458740 283.84115601]
[-294.15844727 269.47402954]
[-293.52792358 254.30935669]
[-287.45828247 240.39807129]
[-276.77038574 229.62155151]
[-262.90969849 223.43721008]
[-247.75077820 222.68145752]
[-233.34370422 227.45648193]
[-221.63694763 237.11651611]
[-208.56950378 229.75160217]
[-195.50205994 222.38670349]
[-182.43461609 215.02178955]
[-169.36717224 207.65687561]
[-156.29972839 200.29196167]
[-143.23228455 192.92704773]
[-130.16484070 185.56214905]
[-117.09739685 178.19723511]
[-112.81076050 172.17001343]
[-103.76896667 170.82119751]
[-90.58856964 163.66040039]
[-77.40816498 156.49960327]
[-64.22776794 149.33880615]
[-64.80454254 145.49339294]
[-64.83037567 141.60505676]
[-78.96088409 136.57231140]
[-93.12863922 143.57589722]
[-108.07205200 138.43099976]
[-114.92546082 124.18998718]
[-109.62285614 109.30180359]
[-95.31018829 102.59934235]
[-80.47889709 108.05905914]
[-73.92813873 122.44178772]
[-59.79762268 127.47454071]
[-52.14949799 120.00453186]
[-42.15525818 115.99254608]
[-31.30781364 116.10252380]
[-21.25236702 120.37777710]
[-13.53689480 128.22534180]
[0.81297064 123.85712433]
[15.16283607 119.48889923]
[25.08526421 108.38058472]
[40.54051971 111.76371765]
[54.89038467 107.39550018]
[69.24024963 103.02727509]
[83.59011841 98.65905762]
[84.96379089 92.03047180]
[88.98474884 86.31074524]
[95.13547516 82.54118347]
[96.76525879 67.62998962]
[98.39504242 52.71879196]
[100.02482605 37.80759430]
[87.15097809 29.68199348]
[79.11448669 16.82501793]
[77.46392822 1.81515956]
[82.47343445 -12.36460876]
[93.09890747 -22.91964912]
[107.19507599 -27.79442787]
[108.82485962 -42.70562363]
[110.45464325 -57.61682129]
[112.08441925 -72.52802277]
[113.36593628 -87.47317505]
[114.29847717 -102.44416046]
[115.23102570 -117.41514587]
[116.16356659 -132.38612366]
[109.29918671 -146.64062500]
[117.81276703 -158.86225891]
[118.74531555 -173.83323669]
[109.24906921 -186.76385498]
[113.57673645 -202.21218872]
[128.40850830 -208.32759094]
[142.36671448 -200.41885376]
[144.74380493 -184.55288696]
[133.71629333 -172.90069580]
[132.78375244 -157.92971802]
[139.71484375 -144.74603271]
[131.13455200 -131.45358276]
[130.20201111 -116.48259735]
[129.26945496 -101.51161957]
[128.33691406 -86.54063416]
[130.39012146 -83.66576385]
[131.14888000 -79.65139771]
[130.09184265 -75.11861420]
[126.99562073 -70.89823914]
[125.36583710 -55.98704147]
[123.73605347 -41.07584381]
[122.10626984 -26.16464615]
[134.81658936 -18.35993958]
[142.91110229 -5.75881910]
[144.73925781 9.16829967]
[139.88526917 23.46721649]
[129.26118469 34.28460693]
[114.93601990 39.43737411]
[113.30624390 54.34857178]
[111.67646027 69.25977325]
[110.04667664 84.17096710]
[118.62575531 71.86652374]
[127.20483398 59.56207275]
[135.78390503 47.25762558]
[139.48275757 32.72082520]
[146.33807373 19.37898827]
[156.00279236 7.90758038]
[167.98760986 -1.11262619]
[181.68576050 -7.22495890]
[196.40374756 -10.11996365]
[211.39640808 -9.65107346]
[225.90472412 -5.84202671]
[239.19415283 1.11433280]
[250.59190369 10.86582088]
[259.52090454 22.91874123]
[265.52911377 36.66287994]
[268.31234741 51.40240479]
[267.72970581 66.39108276]
[263.81069946 80.87007904]
[256.75369263 94.10633850]
[246.91598511 105.42975616]
[234.79566956 114.26704407]
[221.00633240 120.17079163]
[206.24610901 122.84210968]
[191.26228333 122.14574432]
[176.81344604 118.11696625]
[163.63386536 110.96165466]
[148.77575684 108.90341949]
[133.91763306 106.84518433]
[119.05951691 104.78694916]
[131.11196899 113.71658325]
[143.16442871 122.64621735]
[155.21687317 131.57585144]
[167.26933289 140.50547791]
[179.32179260 149.43511963]
[191.37423706 158.36474609]
[200.13943481 160.96183777]
[203.54325867 167.52816772]
[215.45538330 176.64414978]
[227.36750793 185.76014709]
[243.02900696 188.00244141]
[248.43405151 201.88174438]
[260.34616089 210.99772644]
[276.66885376 212.57946777]
[283.21316528 227.61622620]
[273.24685669 240.63948059]
[257.02243042 238.25201416]
[251.23017883 222.90985107]
[239.31805420 213.79386902]
[224.50859070 212.20359802]
[218.25151062 197.67227173]
[206.33938599 188.55627441]
[194.42726135 179.44029236]
[182.44461060 170.41720581]
[170.39215088 161.48756409]
[158.33970642 152.55793762]
[146.28724670 143.62829590]
[134.23478699 134.69866943]
[122.18233490 125.76903534]
[110.12988281 116.83940125]
[116.42581177 130.45414734]
[127.27535248 140.81211853]
[134.33160400 154.04878235]
[136.88343811 168.83012390]
[134.67367554 183.66645813]
[127.92500305 197.06256104]
[117.31757355 207.66833496]
[103.92042542 214.41493225]
[89.08374786 216.62239075]
[74.30279541 214.06826782]
[61.06723022 207.00996399]
[50.71094894 196.15881348]
[44.27767563 182.60842896]
[42.41576385 167.72442627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 78]
[5 77]
[6 76]
[7 75]
[9 73]
[10 72]
[11 71]
[14 55]
[15 54]
[16 53]
[17 52]
[18 50]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[26 42]
[57 66]
[58 65]
[81 128]
[82 127]
[83 126]
[84 125]
[90 119]
[91 118]
[92 117]
[93 116]
[94 112]
[95 111]
[96 110]
[97 109]
[99 107]
[100 106]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[162 182]
[163 181]
[165 180]
[166 179]
[167 178]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
