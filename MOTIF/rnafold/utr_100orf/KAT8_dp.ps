%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KAT8)
} def

/sequence { (\
GUCACUUCCCUUCCCGCGAUGGCGGCACAGGGAGCUGCUGCGGCGGUUGCGGCGGGGACUUCAGGGGUCGCGGGGGAGGGCGAGCCCGGGCCCGGGGAGAAUGCGGCCGCUGAGGGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.010262411 ubox
2 58 0.011516600 ubox
2 115 0.003312843 ubox
2 116 0.009436011 ubox
2 117 0.063033191 ubox
2 118 0.089693446 ubox
3 57 0.010529190 ubox
3 114 0.004123467 ubox
3 115 0.008066193 ubox
3 116 0.079664605 ubox
3 117 0.105009057 ubox
5 57 0.004180217 ubox
5 114 0.004647347 ubox
5 115 0.012039437 ubox
5 116 0.061529159 ubox
5 117 0.076933843 ubox
6 34 0.003578618 ubox
6 57 0.004115806 ubox
6 58 0.167463863 ubox
6 114 0.009897584 ubox
6 115 0.016929448 ubox
6 116 0.073017893 ubox
6 117 0.009538418 ubox
6 118 0.009494602 ubox
7 33 0.004714075 ubox
7 57 0.177524558 ubox
7 58 0.904937616 ubox
7 114 0.004700679 ubox
7 115 0.005031073 ubox
7 116 0.006218049 ubox
7 117 0.010589092 ubox
7 118 0.024798509 ubox
8 32 0.004937723 ubox
8 55 0.003166000 ubox
8 56 0.184394753 ubox
8 57 0.978805225 ubox
8 116 0.009811247 ubox
8 117 0.029060107 ubox
9 31 0.004939336 ubox
9 55 0.184470185 ubox
9 56 0.979103110 ubox
9 57 0.074320184 ubox
9 115 0.005619169 ubox
9 116 0.028534676 ubox
10 30 0.004939824 ubox
10 54 0.184351979 ubox
10 55 0.978976874 ubox
10 56 0.075167827 ubox
10 57 0.038727312 ubox
10 114 0.004087979 ubox
10 115 0.007236290 ubox
11 29 0.004731469 ubox
11 54 0.968933057 ubox
11 55 0.074420901 ubox
11 56 0.039036374 ubox
11 58 0.003587087 ubox
11 114 0.005278157 ubox
12 52 0.003654867 ubox
12 54 0.103930985 ubox
12 55 0.042070298 ubox
12 57 0.004198762 ubox
13 52 0.112918957 ubox
13 54 0.071862835 ubox
13 56 0.004472283 ubox
14 25 0.005028014 ubox
14 51 0.079913788 ubox
14 52 0.993283245 ubox
14 55 0.004352097 ubox
15 24 0.005072047 ubox
15 51 0.996745895 ubox
15 54 0.004225927 ubox
16 23 0.005080600 ubox
16 50 0.999958157 ubox
16 53 0.003619235 ubox
17 22 0.005078989 ubox
17 49 0.999947606 ubox
17 52 0.003428231 ubox
18 48 0.999075492 ubox
19 47 0.999644276 ubox
20 45 0.004412788 ubox
20 46 0.996105837 ubox
21 44 0.005321642 ubox
22 44 0.999887341 ubox
23 42 0.008152998 ubox
23 43 0.999549228 ubox
24 39 0.003372041 ubox
24 41 0.007885019 ubox
25 38 0.003435027 ubox
25 41 0.999546991 ubox
26 37 0.003400330 ubox
26 40 0.999941943 ubox
27 36 0.003166546 ubox
27 39 0.994571195 ubox
28 37 0.998697595 ubox
28 40 0.003570570 ubox
29 36 0.998811403 ubox
29 39 0.006999531 ubox
30 35 0.997603525 ubox
30 36 0.032003581 ubox
30 38 0.009510050 ubox
30 39 0.007050562 ubox
31 35 0.032701192 ubox
31 38 0.010036184 ubox
35 55 0.004107343 ubox
36 54 0.004125654 ubox
37 53 0.004143625 ubox
38 52 0.004143807 ubox
39 51 0.004140738 ubox
40 50 0.004143848 ubox
41 49 0.004143437 ubox
42 48 0.003799739 ubox
59 114 0.040746993 ubox
59 115 0.992339355 ubox
59 116 0.067959457 ubox
59 117 0.022942742 ubox
60 113 0.029087433 ubox
60 114 0.995399952 ubox
60 115 0.050060064 ubox
60 116 0.020519446 ubox
61 112 0.004885858 ubox
61 113 0.998587624 ubox
61 114 0.020201244 ubox
61 115 0.007349205 ubox
62 112 0.999949186 ubox
62 114 0.004237502 ubox
63 111 0.999733889 ubox
64 87 0.006350140 ubox
64 110 0.999667470 ubox
64 111 0.003347330 ubox
65 86 0.007021792 ubox
65 87 0.007019837 ubox
65 108 0.007544499 ubox
65 110 0.006150061 ubox
66 85 0.007026628 ubox
66 86 0.007023398 ubox
66 107 0.005532182 ubox
66 108 0.999790468 ubox
67 85 0.007016180 ubox
67 107 0.999924240 ubox
68 83 0.009241125 ubox
68 84 0.003675024 ubox
68 97 0.011072662 ubox
68 106 0.999537212 ubox
69 82 0.010026280 ubox
69 96 0.027358029 ubox
69 105 0.999427453 ubox
70 81 0.010143804 ubox
70 104 0.999471674 ubox
71 80 0.010149838 ubox
71 94 0.151086461 ubox
71 103 0.988238549 ubox
72 81 0.009265585 ubox
72 87 0.004189426 ubox
72 92 0.012237645 ubox
72 93 0.366510985 ubox
72 102 0.903211861 ubox
73 86 0.004201093 ubox
73 87 0.005262394 ubox
73 91 0.012344042 ubox
73 92 0.369668855 ubox
73 93 0.406197856 ubox
74 85 0.004203692 ubox
74 86 0.005276289 ubox
74 87 0.005570583 ubox
74 91 0.369466386 ubox
74 92 0.406464832 ubox
74 93 0.083474073 ubox
75 85 0.005282184 ubox
75 86 0.005857592 ubox
75 91 0.406308592 ubox
75 92 0.083996866 ubox
75 93 0.006520705 ubox
76 85 0.005871472 ubox
76 91 0.083955161 ubox
76 92 0.006079633 ubox
78 86 0.024901032 ubox
78 87 0.553818815 ubox
78 93 0.828993935 ubox
79 85 0.025238051 ubox
79 86 0.554045050 ubox
79 87 0.037154081 ubox
79 92 0.829318824 ubox
79 93 0.006021664 ubox
80 85 0.550619981 ubox
80 86 0.036902084 ubox
80 91 0.829330251 ubox
80 92 0.004573929 ubox
81 88 0.020647867 ubox
81 90 0.829119140 ubox
81 94 0.015595745 ubox
82 87 0.043230923 ubox
82 93 0.015595691 ubox
84 91 0.015749577 ubox
85 90 0.015732902 ubox
85 96 0.049948608 ubox
85 97 0.010385084 ubox
86 95 0.050023203 ubox
86 96 0.010176057 ubox
87 94 0.050072274 ubox
87 95 0.009954472 ubox
88 93 0.049454606 ubox
89 108 0.009462319 ubox
90 107 0.009489894 ubox
91 97 0.007232293 ubox
91 106 0.009220485 ubox
92 96 0.007206262 ubox
92 105 0.008920702 ubox
93 103 0.008296267 ubox
93 105 0.003332078 ubox
94 102 0.024380900 ubox
94 104 0.004191698 ubox
7 58 0.9500000 lbox
8 57 0.9500000 lbox
9 56 0.9500000 lbox
10 55 0.9500000 lbox
11 54 0.9500000 lbox
14 52 0.9500000 lbox
15 51 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
59 115 0.9500000 lbox
60 114 0.9500000 lbox
61 113 0.9500000 lbox
62 112 0.9500000 lbox
63 111 0.9500000 lbox
64 110 0.9500000 lbox
66 108 0.9500000 lbox
67 107 0.9500000 lbox
68 106 0.9500000 lbox
69 105 0.9500000 lbox
70 104 0.9500000 lbox
71 103 0.9500000 lbox
72 102 0.9500000 lbox
78 93 0.9500000 lbox
79 92 0.9500000 lbox
80 91 0.9500000 lbox
81 90 0.9500000 lbox
showpage
end
%%EOF
