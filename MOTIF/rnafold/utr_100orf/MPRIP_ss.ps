%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGCUGAGCCCCUAGCCCGCCGGGAGCGCCAGGCCGGCCAGGCCUGCGCCGCCGCCGCCGCCGCCGUCGCCGCCGCGCCGACCAUGUCGGCAGCCAAGGAGAACCCGUGCAGGAAAUUCCAGGCCAACAUCUUCAACAAGAGCAAGUGUCAGAACUGCUUCAAGCCCCGCGAGUCGCAUCUGC\
) } def
/len { sequence length } bind def

/coor [
[147.38040161 277.21755981]
[145.89471436 262.29132080]
[144.40904236 247.36506653]
[142.92335510 232.43881226]
[141.43766785 217.51257324]
[139.82864380 202.59912109]
[138.09637451 187.69949341]
[136.36410522 172.79985046]
[121.65840149 169.84309387]
[114.30204773 182.91535950]
[106.94569397 195.98762512]
[99.58934784 209.05987549]
[104.08864594 224.21018982]
[96.48390198 238.06455994]
[81.28687286 242.40342712]
[67.51368713 234.65263367]
[63.33572769 219.41058350]
[71.23170471 205.72010803]
[86.51708221 201.70353699]
[93.87343597 188.63127136]
[101.22978973 175.55900574]
[108.58613586 162.48674011]
[91.18628693 159.44387817]
[76.14189911 151.89172363]
[64.52162933 140.88658142]
[56.99904251 127.70512390]
[53.81919861 113.71066284]
[38.95024109 115.68904114]
[24.08127785 117.66742706]
[14.48231792 129.93518066]
[-0.62510568 131.72972107]
[-12.26137638 122.50298309]
[-27.13033676 124.48136139]
[-41.99929810 126.45974731]
[-56.86825943 128.43812561]
[-64.97937775 132.67890930]
[-71.99918365 130.32420349]
[-86.89881897 132.05647278]
[-101.79846191 133.78874207]
[-116.69809723 135.52101135]
[-131.59773254 137.25328064]
[-142.64317322 148.88847351]
[-158.61361694 147.36372375]
[-167.25788879 133.84869385]
[-161.94485474 118.71095276]
[-146.75021362 113.56288147]
[-133.33000183 122.35363770]
[-118.43036652 120.62136841]
[-103.53073120 118.88909912]
[-88.63108826 117.15682983]
[-73.73145294 115.42456055]
[-58.84664154 113.56916809]
[-43.97768021 111.59078217]
[-29.10872078 109.61240387]
[-14.23975849 107.63401794]
[-5.42093515 95.68563080]
[9.63012314 93.46746063]
[22.10289574 102.79846191]
[36.97185516 100.82008362]
[51.84081650 98.84169769]
[51.74612808 87.88568878]
[54.18736649 76.85002899]
[59.18896484 66.32975769]
[49.02973938 55.29389954]
[33.99061966 50.38111496]
[31.06319046 35.77702332]
[20.90396690 24.74116516]
[5.86484766 19.82838058]
[2.93741775 5.22429085]
[-7.22180605 -5.81156778]
[-23.02623367 -10.18787670]
[-26.87595940 -26.12875557]
[-14.81071472 -37.23559570]
[0.75781077 -32.08263397]
[3.81405282 -15.97079086]
[13.97327614 -4.93493271]
[28.28573990 -0.81150514]
[31.93982506 14.58194256]
[42.09904861 25.61780167]
[56.41151428 29.74122810]
[60.06559753 45.13467789]
[70.22482300 56.17053604]
[83.70068359 49.58258438]
[81.23176575 34.78716660]
[78.76284790 19.99174690]
[76.29393005 5.19632721]
[73.82501221 -9.59909248]
[71.35609436 -24.39451218]
[62.78518295 -39.02242279]
[74.46876526 -51.30778885]
[89.50835419 -43.48173141]
[86.15151215 -26.86343002]
[88.62042999 -12.06801128]
[91.08934784 2.72740865]
[93.55826569 17.52282715]
[96.02718353 32.31824875]
[98.49610901 47.11366653]
[141.05587769 59.04456329]
[163.04380798 101.94728851]
[172.06002808 89.95946503]
[181.07624817 77.97164917]
[180.04695129 65.10282135]
[187.81822205 55.30083847]
[199.78973389 53.48912430]
[209.00292969 41.65201569]
[218.21611023 29.81490898]
[227.42930603 17.97780037]
[223.28244019 3.14170671]
[228.60447693 -11.12466335]
[241.15809631 -19.42350578]
[256.01339722 -18.74705315]
[265.22659302 -30.58415985]
[264.67700195 -46.61779785]
[276.96310425 -56.93436432]
[292.66003418 -53.61987686]
[299.72647095 -39.21692276]
[292.74163818 -24.77421951]
[277.06369019 -21.37096977]
[267.85052490 -9.53386211]
[272.15304565 4.70082569]
[267.18984985 18.90754700]
[254.66651917 27.56891823]
[239.26641846 27.19099236]
[230.05322266 39.02809906]
[220.84002686 50.86520767]
[211.62684631 62.70231628]
[210.16567993 80.18269348]
[193.06407166 86.98786926]
[184.04785156 98.97568512]
[175.03163147 110.96350861]
[176.81260681 118.24897766]
[190.47235107 112.05128479]
[204.13209534 105.85358429]
[217.79182434 99.65589142]
[228.09176636 88.75123596]
[242.78961182 85.75571442]
[256.53561401 91.75962830]
[264.32650757 104.57767487]
[263.32650757 119.54430389]
[253.89961243 131.21192932]
[239.47703552 135.33375549]
[225.31001282 130.41073608]
[210.33152771 131.21380615]
[195.35302734 132.01686096]
[180.37454224 132.81993103]
[182.15551758 140.10540771]
[195.68537903 146.58172607]
[209.21525574 153.05802917]
[222.74511719 159.53434753]
[236.27499390 166.01066589]
[245.38482666 166.89678955]
[249.97367859 172.70755005]
[263.39462280 179.40667725]
[278.30319214 174.16169739]
[292.51757812 181.07012939]
[297.60464478 196.03334045]
[290.54632568 210.17388916]
[275.53018188 215.10247803]
[261.46502686 207.89503479]
[256.69549561 192.82762146]
[243.27453613 186.12847900]
[229.79867554 179.54052734]
[216.26881409 173.06422424]
[202.73893738 166.58790588]
[189.20907593 160.11158752]
[175.67919922 153.63526917]
[169.57533264 157.99334717]
[178.34400940 170.16342163]
[187.11267090 182.33348083]
[195.72354126 194.61569214]
[183.51614380 203.33232117]
[174.69456482 191.19984436]
[166.03108215 178.95466614]
[157.36759949 166.70950317]
[151.26374817 171.06758118]
[152.99601746 185.96720886]
[154.72828674 200.86685181]
[158.83436584 209.04698181]
[156.36392212 216.02688599]
[157.84959412 230.95314026]
[159.33528137 245.87937927]
[160.82096863 260.80563354]
[162.30664062 275.73187256]
[175.32353210 284.39758301]
[179.67520142 299.41748047]
[173.30693054 313.69958496]
[159.22561646 320.50036621]
[144.08003235 316.60870361]
[135.02145386 303.86209106]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[4 180]
[5 179]
[6 177]
[7 176]
[8 175]
[9 22]
[10 21]
[11 20]
[12 19]
[27 60]
[28 59]
[29 58]
[32 55]
[33 54]
[34 53]
[35 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[63 82]
[64 81]
[66 79]
[67 78]
[69 76]
[70 75]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[99 130]
[100 129]
[101 128]
[104 126]
[105 125]
[106 124]
[107 123]
[111 119]
[112 118]
[146 166]
[147 165]
[148 164]
[149 163]
[150 162]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
