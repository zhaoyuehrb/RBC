%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGAGCCCCUGCAAGUUUCCCGGGCCGCGCGCCGCGCUCGCUCGCCUCCCAGCCCGCGGCCCGAGCCGCCGCCGCGCCCGCCAUGCCCUCGGCCAAACAAAGGGGCUCCAAGGGCGGCCACGGCGCCGCGAGCCCCUCGGAGAAGGGUGCCCACCCGUCGGGCGGCGCGGAUGACGUGGCGA\
) } def
/len { sequence length } bind def

/coor [
[-4.99749947 411.90985107]
[-16.31696510 413.53619385]
[-22.49548340 427.20462036]
[-28.67400169 440.87304688]
[-34.85251999 454.54147339]
[-41.03104019 468.20989990]
[-47.20956039 481.87832642]
[-53.38807678 495.54675293]
[-45.58901596 508.96145630]
[-47.19789886 524.39489746]
[-57.59607697 535.91259766]
[-72.78523254 539.08575439]
[-86.92483521 532.69427490]
[-94.57791138 519.19573975]
[-92.80170441 503.78067017]
[-82.27919006 492.37646484]
[-67.05650330 489.36822510]
[-60.87798691 475.69979858]
[-54.69946671 462.03137207]
[-48.52095032 448.36294556]
[-42.34243011 434.69451904]
[-36.16390991 421.02609253]
[-29.98539162 407.35766602]
[-37.47548294 390.67205811]
[-30.28900337 373.50732422]
[-12.54766750 366.91302490]
[-6.83684587 353.04266357]
[-1.12602377 339.17233276]
[4.58479786 325.30197144]
[10.29561996 311.43164062]
[16.00644112 297.56127930]
[21.59928894 283.64294434]
[27.07375717 269.67764282]
[32.42945480 255.66633606]
[37.66599274 241.61006165]
[42.90253067 227.55378723]
[48.13906860 213.49752808]
[53.37560654 199.44125366]
[58.61214447 185.38499451]
[57.99956512 178.00247192]
[64.05879211 171.13575745]
[69.53325653 157.17044067]
[75.00772858 143.20512390]
[80.48220062 129.23979187]
[85.95666504 115.27447510]
[79.20361328 101.88059235]
[64.72023010 97.97780609]
[50.23685074 94.07501984]
[39.88978195 105.35317230]
[25.48277092 110.52004242]
[10.32644081 108.38832855]
[-2.09639430 99.44786835]
[-8.93105698 85.75312805]
[-8.60699177 70.45104980]
[-1.19866598 57.05794144]
[11.59154034 48.65144348]
[26.82453156 47.16330719]
[40.99987793 52.93549347]
[50.86019135 64.64159393]
[54.13963699 79.59163666]
[68.62301636 83.49442291]
[83.10639954 87.39720917]
[96.38368225 80.41768646]
[101.38077545 66.27452850]
[106.37787628 52.13136673]
[111.37496948 37.98820496]
[116.37207031 23.84504318]
[109.80872345 9.71846104]
[115.07796478 -4.55353069]
[128.58595276 -10.72361660]
[133.58305359 -24.86677742]
[138.45988464 -39.05185699]
[143.21609497 -53.27783585]
[147.97230530 -67.50381470]
[145.01004028 -83.04522705]
[156.38365173 -92.66239929]
[161.13987732 -106.88837433]
[165.89608765 -121.11435699]
[170.65229797 -135.34033203]
[175.40852356 -149.56631470]
[170.47886658 -169.09727478]
[185.45469666 -181.30792236]
[189.72509766 -195.68719482]
[193.99549866 -210.06648254]
[192.82389832 -216.61083984]
[194.84490967 -221.95318604]
[198.66276550 -224.85697937]
[203.41897583 -239.08294678]
[208.17520142 -253.30892944]
[212.93141174 -267.53491211]
[217.68762207 -281.76089478]
[212.75796509 -301.29183960]
[227.73379517 -313.50250244]
[232.00419617 -327.88177490]
[236.27461243 -342.26104736]
[240.54501343 -356.64031982]
[230.40058899 -368.26333618]
[228.17303467 -383.52902222]
[234.57315063 -397.56619263]
[247.55870056 -405.89562988]
[262.98602295 -405.85940552]
[275.93231201 -397.46911621]
[282.26647949 -383.40206909]
[279.96728516 -368.14700317]
[269.76843262 -356.57174683]
[254.92428589 -352.36993408]
[250.65388489 -337.99063110]
[246.38348389 -323.61135864]
[242.11308289 -309.23208618]
[247.78298950 -300.69766235]
[247.80758667 -290.23165894]
[241.93653870 -281.30310059]
[231.91360474 -277.00466919]
[227.15737915 -262.77868652]
[222.40116882 -248.55271912]
[217.64495850 -234.32673645]
[212.88874817 -220.10075378]
[208.37478638 -205.79606628]
[204.10437012 -191.41679382]
[199.83396912 -177.03752136]
[205.50387573 -168.50309753]
[205.52848816 -158.03707886]
[199.65744019 -149.10852051]
[189.63449097 -144.81008911]
[184.87828064 -130.58412170]
[180.12207031 -116.35813904]
[175.36584473 -102.13216400]
[170.60963440 -87.90618896]
[173.91210938 -73.38230896]
[162.19828796 -62.74759674]
[157.44207764 -48.52162170]
[152.68585205 -34.29564285]
[153.54876709 -26.93818092]
[147.72621155 -19.86968040]
[142.72911072 -5.72651958]
[149.36264038 7.56001377]
[144.49633789 21.97437668]
[130.51522827 28.84214020]
[125.51813507 42.98530197]
[120.52103424 57.12846375]
[115.52394104 71.27162170]
[110.52684021 85.41478729]
[117.66341400 92.01358795]
[120.68634033 101.99935913]
[134.08023071 108.75241852]
[149.88612366 108.05647278]
[157.76727295 120.69517517]
[171.16116333 127.44822693]
[184.55505371 134.20127869]
[197.94892883 140.95434570]
[214.28228760 139.48684692]
[223.49728394 153.05209351]
[216.11433411 167.69531250]
[199.72837830 168.35281372]
[191.19587708 154.34823608]
[177.80198669 147.59516907]
[164.40809631 140.84211731]
[151.01422119 134.08906555]
[136.16635132 135.26803589]
[127.32717133 122.14630890]
[113.93328857 115.39324951]
[99.92198944 120.74894714]
[94.44751740 134.71426392]
[88.97304535 148.67958069]
[83.49858093 162.64491272]
[78.02410889 176.61022949]
[72.66841125 190.62153625]
[67.43187714 204.67779541]
[62.19533539 218.73406982]
[56.95879745 232.79032898]
[51.72225952 246.84660339]
[46.48572159 260.90286255]
[46.41979980 270.06045532]
[41.03907776 275.15209961]
[35.56460953 289.11743164]
[35.34319305 298.27258301]
[29.87678909 303.27209473]
[24.16596603 317.14245605]
[18.45514488 331.01278687]
[12.74432278 344.88314819]
[7.03350115 358.75350952]
[1.32267916 372.62384033]
[7.95697308 382.52188110]
[8.96836948 394.27420044]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[32 175]
[33 174]
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[41 166]
[42 165]
[43 164]
[44 163]
[45 162]
[46 62]
[47 61]
[48 60]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[70 135]
[71 134]
[72 132]
[73 131]
[74 130]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[82 120]
[83 119]
[84 118]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
[93 109]
[94 108]
[95 107]
[96 106]
[144 161]
[145 160]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
