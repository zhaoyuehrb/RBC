%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGAUGUGGGUUACAAAGCUGCCAUCUAGAGGCUAGAGGCUCCUUUCUGCAGUGUAUAUAAUGCAAGUCUGCAGCCAGCAGAGCUCACAGUUGUUGCAAAGUGCUCAGCACUAAGGGAGCCAGCGCACAGCACAGCCAGGAAGGCGAGCGAGCCCAGCCAGCCCAGCCAGCCCAGCCAGCCCGGAGGUCAUUUGAUUGCCCGCCUCAGAACGAUGGAUCUGCAUCUCUUCGACUACUCAGAGCCAGGGAACUU\
CUCGGACAUCAGCUGGCCAUGCAACAGCAGCGACUGCAUCGUGGUGGACACGGUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[351.36291504 377.41946411]
[366.31613159 378.62734985]
[355.26962280 368.47973633]
[344.22308350 358.33209229]
[333.17657471 348.18447876]
[322.13006592 338.03683472]
[311.08355713 327.88919067]
[300.03701782 317.74157715]
[288.99050903 307.59393311]
[277.94400024 297.44631958]
[266.89746094 287.29867554]
[255.85095215 277.15103149]
[244.80444336 267.00341797]
[248.25576782 281.60095215]
[244.00950623 295.98739624]
[233.18473816 306.37124634]
[218.63426208 310.01589966]
[204.19276428 305.96087646]
[193.66622925 295.27481079]
[189.82884216 280.77398682]
[193.69192505 266.27996826]
[204.23739624 255.61257935]
[218.68605042 251.58316040]
[233.22801208 255.25250244]
[223.24676514 244.05541992]
[213.26551819 232.85832214]
[203.28427124 221.66123962]
[193.30302429 210.46415710]
[173.77925110 210.71838379]
[160.21466064 196.24937439]
[161.77427673 176.16914368]
[151.46252441 165.27565002]
[141.15078735 154.38217163]
[130.83903503 143.48869324]
[120.52729034 132.59521484]
[106.27671051 138.00553894]
[91.04325867 137.46458435]
[77.21234131 131.05705261]
[66.94973755 119.78630829]
[61.86246490 105.41722870]
[46.88502502 104.59484863]
[31.90758705 103.77246094]
[16.93014717 102.95007324]
[1.95270836 102.12768555]
[-13.02473068 101.30530548]
[-28.00217056 100.48291779]
[-42.97961044 99.66053009]
[-57.95704651 98.83815002]
[-88.06344604 178.14752197]
[-102.28235626 182.92481995]
[-116.50126648 187.70211792]
[-130.72018433 192.47943115]
[-144.93908691 197.25672913]
[-159.15800476 202.03402710]
[-173.30384827 207.02349854]
[-187.37348938 212.22402954]
[-201.44311523 217.42454529]
[-215.51274109 222.62507629]
[-229.58238220 227.82560730]
[-242.34281921 238.98837280]
[-256.60177612 229.81678772]
[-251.73590088 213.57611084]
[-234.78289795 213.75596619]
[-220.71327209 208.55545044]
[-206.64364624 203.35491943]
[-192.57400513 198.15438843]
[-178.50437927 192.95385742]
[-176.71258545 189.97575378]
[-173.41546631 187.69738770]
[-168.94822693 186.80540466]
[-163.93530273 187.81510925]
[-149.71638489 183.03781128]
[-135.49748230 178.26051331]
[-121.27856445 173.48321533]
[-107.05965424 168.70591736]
[-92.84074402 163.92861938]
[-93.25193787 156.43989563]
[-106.63398743 149.66340637]
[-94.07432556 141.46246338]
[-94.48551941 133.97373962]
[-109.14199829 130.78193665]
[-123.79847717 127.59013367]
[-138.45495605 124.39833069]
[-153.12716675 121.27965546]
[-167.81475830 118.23418427]
[-182.50233459 115.18871307]
[-197.18992615 112.14324188]
[-213.92675781 114.84780884]
[-221.15884399 99.51375580]
[-208.42608643 88.31941223]
[-194.14445496 97.45565796]
[-179.45686340 100.50112915]
[-164.76928711 103.54660034]
[-150.08169556 106.59207153]
[-142.93296814 104.88265991]
[-135.26315308 109.74185181]
[-120.60667419 112.93365479]
[-105.95019531 116.12545776]
[-91.29371643 119.31725311]
[-88.38045502 112.40618896]
[-82.55393219 98.58404541]
[-79.64067078 91.67297363]
[-92.15927124 83.40951538]
[-104.67787170 75.14606476]
[-117.19647217 66.88260651]
[-129.71507263 58.61915207]
[-146.26489258 54.93953323]
[-147.31053162 38.01786423]
[-131.33961487 32.32870865]
[-121.45161438 46.10055161]
[-108.93301392 54.36400604]
[-96.41441345 62.62746048]
[-83.89582062 70.89091492]
[-71.37722015 79.15437317]
[-57.13466263 83.86071014]
[-42.15722275 84.68309021]
[-27.17978477 85.50547791]
[-12.20234489 86.32786560]
[2.77509379 87.15025330]
[17.75253296 87.97263336]
[32.72997284 88.79502106]
[47.70741272 89.61740875]
[62.68484879 90.43978882]
[55.73683548 76.71669769]
[53.66535568 59.55075073]
[45.59009552 46.90993500]
[30.29552460 42.06683350]
[24.68075180 27.03839874]
[33.05295181 13.35315704]
[48.98968887 11.50925827]
[60.26566315 22.92118073]
[58.23091125 38.83467865]
[66.30616760 51.47549057]
[73.50523376 49.37228394]
[77.06113434 34.79986191]
[87.90335846 45.16587448]
[95.10242462 43.06266785]
[95.10242462 28.06266975]
[84.20787048 16.92954445]
[84.42155457 1.71741164]
[95.10242462 -8.60027027]
[95.10242462 -23.60026932]
[84.20787048 -34.73339462]
[84.42155457 -49.94552612]
[95.10242462 -60.26321030]
[95.10242462 -75.26320648]
[95.10242462 -90.26320648]
[82.50037384 -102.43296814]
[82.62361908 -119.61297607]
[94.90544891 -131.13716125]
[94.75585175 -146.13641357]
[83.75080872 -157.16033936]
[83.81276703 -172.37384033]
[94.39020538 -182.79753113]
[94.24060822 -197.79678345]
[88.03660583 -213.57482910]
[101.48059845 -223.90417480]
[115.12793732 -213.84503174]
[109.23986816 -197.94638062]
[109.38946533 -182.94712830]
[120.17270660 -172.73648071]
[120.53808594 -157.52723694]
[109.75510406 -146.28601074]
[109.90470123 -131.28675842]
[120.25710297 -123.66744232]
[124.40861511 -111.29719543]
[120.63809204 -98.60276031]
[110.10242462 -90.26320648]
[110.10242462 -75.26320648]
[110.10242462 -60.26321030]
[120.78330231 -49.94552612]
[120.99697876 -34.73339462]
[110.10242462 -23.60026932]
[110.10242462 -8.60027027]
[120.78330231 1.71741164]
[120.99697876 16.92954445]
[110.10242462 28.06266975]
[110.10242462 43.06266785]
[117.12419128 45.69797897]
[122.39481354 31.65445709]
[127.66564941 17.61101532]
[141.70901489 22.88207245]
[136.43833923 36.92507935]
[131.16770935 50.96860123]
[138.18946838 53.60391235]
[148.05854797 42.30784225]
[151.31147766 26.82465744]
[165.51199341 22.33078003]
[175.38107300 11.03470898]
[185.25015259 -0.26136312]
[195.11923218 -11.55743504]
[197.75584412 -27.74324036]
[213.18524170 -33.29893875]
[225.53497314 -22.50930405]
[222.10069275 -6.47378778]
[206.41529846 -1.68835425]
[196.54621887 9.60771751]
[186.67713928 20.90378952]
[176.80805969 32.19986343]
[174.26103210 46.87507629]
[159.35462952 52.17692184]
[149.48554993 63.47299576]
[150.01113892 99.52504730]
[131.42077637 122.28347015]
[141.73251343 133.17695618]
[152.04426575 144.07043457]
[162.35600281 154.96391296]
[172.66775513 165.85739136]
[182.97639465 163.49829102]
[193.26118469 165.58666992]
[201.70285034 171.68539429]
[206.83613586 180.65400696]
[207.80401611 190.86152649]
[204.50010681 200.48291016]
[214.48135376 211.67999268]
[224.46260071 222.87707520]
[234.44384766 234.07415771]
[244.42509460 245.27125549]
[254.95207214 255.95689392]
[265.99859619 266.10452271]
[277.04510498 276.25216675]
[288.09161377 286.39978027]
[299.13815308 296.54742432]
[310.18466187 306.69503784]
[321.23117065 316.84268188]
[332.27767944 326.99032593]
[343.32421875 337.13793945]
[354.37072754 347.28558350]
[365.41723633 357.43322754]
[376.46377563 367.58084106]
[422.34985352 361.04864502]
[435.76550293 367.75836182]
[449.18118286 374.46804810]
[458.20230103 375.49603271]
[462.69665527 381.31213379]
[476.04473877 388.15530396]
[491.85498047 387.56588745]
[499.65075684 400.25741577]
[512.99884033 407.10055542]
[526.48077393 413.67614746]
[540.09112549 419.98150635]
[554.77246094 414.77612305]
[568.48553467 421.36453247]
[573.35760498 435.39303589]
[586.96795654 441.69839478]
[600.57830811 448.00375366]
[614.18872070 454.30911255]
[627.79907227 460.61447144]
[637.90185547 449.37054443]
[650.87084961 441.60546875]
[665.55285645 438.00964355]
[680.64239502 438.90283203]
[694.79766846 444.20562744]
[706.76000977 453.44647217]
[715.46575928 465.80371094]
[720.14080811 480.17852783]
[720.36944580 495.29272461]
[716.13134766 509.80236816]
[707.80328369 522.41729736]
[696.12591553 532.01568604]
[682.13751221 537.74420166]
[667.08190918 539.09338379]
[652.29785156 535.94329834]
[639.09991455 528.57397461]
[628.66168213 517.64080811]
[621.91131592 504.11587524]
[619.44903564 489.20184326]
[621.49371338 474.22485352]
[607.88336182 467.91949463]
[594.27294922 461.61413574]
[580.66259766 455.30877686]
[567.05224609 449.00341797]
[553.20062256 454.35766602]
[539.30792236 448.15704346]
[533.78576660 433.59188843]
[520.17541504 427.28652954]
[517.54003906 428.08111572]
[514.43920898 427.90798950]
[511.22988892 426.58767700]
[508.32650757 424.06976318]
[506.15570068 420.44863892]
[492.80761719 413.60549927]
[477.95211792 414.68438721]
[469.20159912 401.50338745]
[455.85351562 394.66021729]
[442.47146606 387.88369751]
[429.05581665 381.17401123]
[415.64013672 374.46432495]
[409.87084961 379.25650024]
[412.40219116 394.04138184]
[398.33224487 388.84091187]
[392.56295776 393.63311768]
[396.69750977 408.05203247]
[400.83206177 422.47094727]
[404.96661377 436.88989258]
[409.10119629 451.30880737]
[413.23574829 465.72772217]
[417.37030029 480.14666748]
[430.64831543 489.15078735]
[431.74362183 505.15640259]
[419.81597900 515.88537598]
[404.01525879 513.10736084]
[396.46243286 498.95339966]
[402.95138550 484.28121948]
[398.81683350 469.86230469]
[394.68225098 455.44335938]
[390.54769897 441.02444458]
[386.41314697 426.60552979]
[382.27856445 412.18658447]
[378.14401245 397.76766968]
[372.53695679 411.68029785]
[359.04803467 418.24145508]
[344.64160156 414.06359863]
[336.75570679 401.30380249]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 230]
[3 229]
[4 228]
[5 227]
[6 226]
[7 225]
[8 224]
[9 223]
[10 222]
[11 221]
[12 220]
[13 219]
[24 218]
[25 217]
[26 216]
[27 215]
[28 214]
[31 208]
[32 207]
[33 206]
[34 205]
[35 204]
[40 123]
[41 122]
[42 121]
[43 120]
[44 119]
[45 118]
[46 117]
[47 116]
[48 115]
[49 76]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[80 99]
[81 98]
[82 97]
[83 96]
[84 94]
[85 93]
[86 92]
[87 91]
[102 114]
[103 113]
[104 112]
[105 111]
[106 110]
[125 133]
[126 132]
[137 178]
[138 177]
[141 174]
[142 173]
[145 170]
[146 169]
[147 168]
[150 164]
[151 163]
[154 160]
[155 159]
[185 202]
[186 201]
[188 199]
[189 198]
[190 197]
[191 196]
[231 288]
[232 287]
[233 286]
[235 285]
[236 284]
[238 282]
[239 281]
[240 276]
[241 275]
[244 272]
[245 271]
[246 270]
[247 269]
[248 268]
[292 310]
[293 309]
[294 308]
[295 307]
[296 306]
[297 305]
[298 304]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
