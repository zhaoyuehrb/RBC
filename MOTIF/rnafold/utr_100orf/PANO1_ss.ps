%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAGCAGGAGAGCAGAGACCACCCCACAGGAAGAUACCGCUGCUUCCGAAUCUGCAGGGGUAAAAUCCUCCACCCAAGAAGCCGCCAGGCUCCUCCUACCCCCAAGAAAGGCAAUGGGGGUGAGGCUCCGAGUCUGGCCGGCGGCUCCCCAUUCAAUCUCCCGCUGUCCCCGUCCUCUUGGGGCGGUGCUUUCUAUCCUGCUGGCUGGAGGGU\
) } def
/len { sequence length } bind def

/coor [
[276.30703735 354.51058960]
[284.31698608 341.50424194]
[275.35958862 329.47241211]
[266.40222168 317.44055176]
[257.44482422 305.40872192]
[248.48745728 293.37686157]
[239.53007507 281.34500122]
[225.72361755 275.75656128]
[223.68898010 260.06674194]
[214.73161316 248.03488159]
[205.77423096 236.00303650]
[196.81684875 223.97119141]
[187.85946655 211.93934631]
[166.97807312 213.90246582]
[149.04757690 202.76356506]
[141.45864868 182.92135620]
[147.45558167 162.40048218]
[137.48364258 151.19511414]
[127.51170349 139.98973083]
[120.71937561 137.08384705]
[117.47766876 128.54811096]
[107.66975403 117.19889069]
[112.90752411 131.25469971]
[108.44536591 145.57563782]
[96.15061951 154.16860962]
[81.16844177 153.43760681]
[69.76863098 143.68855286]
[66.72181702 129.00123596]
[73.30304718 115.52209473]
[86.75943756 108.89174652]
[71.83711243 110.41627502]
[56.91478348 111.94080353]
[41.99245834 113.46532440]
[34.13793564 126.71722412]
[20.14986229 132.73280334]
[5.47536564 129.39765930]
[-4.30434656 118.19519806]
[-19.22667313 119.71972656]
[-34.14899826 121.24425507]
[-49.07132339 122.76877594]
[-62.01365662 131.86859131]
[-75.46140289 125.46489716]
[-90.38372803 126.98942566]
[-105.30605316 128.51394653]
[-120.22838593 130.03848267]
[-126.44290161 144.08395386]
[-138.85702515 153.12745667]
[-154.13142395 154.73634338]
[-168.15734863 148.47782898]
[-177.16189575 136.03541565]
[-178.72290039 120.75605774]
[-172.42045593 106.74981689]
[-159.94987488 97.78430939]
[-144.66569519 96.27120972]
[-130.67927551 102.61753082]
[-121.75290680 115.11614990]
[-106.83058167 113.59162140]
[-91.90825653 112.06710052]
[-76.98593140 110.54257202]
[-65.11094666 101.55179596]
[-50.59585190 107.84645081]
[-35.67352676 106.32192230]
[-20.75119972 104.79740143]
[-5.82887268 103.27287292]
[1.48346162 90.32421112]
[15.18036938 84.09053802]
[30.09591293 87.15320587]
[40.46792984 98.54299927]
[55.39025497 97.01847839]
[70.31258392 95.49394989]
[85.23490906 93.96942139]
[71.40843964 88.15317535]
[56.50160217 86.48400116]
[44.26553726 77.80766296]
[37.75836182 64.29261017]
[38.60638046 49.31660080]
[46.59765244 36.62252808]
[59.73495483 29.38296127]
[74.73493195 29.40726089]
[87.84870911 36.68935394]
[95.79881287 49.40925217]
[96.59835052 64.38772583]
[101.60081482 78.52898407]
[103.99041748 63.72055054]
[106.38002014 48.91211319]
[108.76962280 34.10367584]
[111.05147552 19.27825356]
[113.22545624 4.43662930]
[115.39942932 -10.40499592]
[117.57341003 -25.24662018]
[119.74739075 -40.08824539]
[121.92136383 -54.92987061]
[124.09534454 -69.77149200]
[126.26931763 -84.61312103]
[114.38468933 -99.37050629]
[117.01961517 -117.81163025]
[132.03739929 -128.28450012]
[133.77879333 -143.18307495]
[135.52018738 -158.08164978]
[137.15319824 -172.99249268]
[138.67771912 -187.91481018]
[140.20225525 -202.83714294]
[141.72677612 -217.75947571]
[143.25129700 -232.68179321]
[144.77583313 -247.60412598]
[146.30035400 -262.52645874]
[133.80174255 -271.45281982]
[127.45541382 -285.43923950]
[128.96852112 -300.72341919]
[137.93402100 -313.19400024]
[151.94026184 -319.49642944]
[167.21961975 -317.93542480]
[179.66203308 -308.93087769]
[185.92054749 -294.90496826]
[184.31166077 -279.63055420]
[175.26815796 -267.21643066]
[161.22267151 -261.00192261]
[159.69815063 -246.07958984]
[158.17362976 -231.15727234]
[156.64909363 -216.23493958]
[155.12457275 -201.31262207]
[153.60005188 -186.39028931]
[152.07551575 -171.46797180]
[154.52191162 -164.49694824]
[150.41876221 -156.34025574]
[148.67736816 -141.44168091]
[146.93597412 -126.54309845]
[155.78076172 -119.34338379]
[160.09797668 -108.65808868]
[158.70852661 -97.09695435]
[151.84257507 -87.54421997]
[141.11094666 -82.43914032]
[138.93696594 -67.59751892]
[136.76298523 -52.75588989]
[134.58901978 -37.91426849]
[132.41503906 -23.07264137]
[130.24105835 -8.23101711]
[128.06707764 6.61060715]
[125.89309692 21.45223236]
[128.03308105 28.52332306]
[123.57806396 36.49327850]
[121.18846130 51.30171585]
[118.79885864 66.11015320]
[116.40925598 80.91858673]
[119.01897430 107.39097595]
[128.82688904 118.74019623]
[138.71707153 130.01779175]
[148.68901062 141.22317505]
[158.66094971 152.42854309]
[167.36068726 149.20896912]
[176.58612061 148.49583435]
[185.63137817 150.33081055]
[193.80795288 154.56115723]
[200.49700928 160.85224915]
[205.19625854 168.71409607]
[207.55769348 177.53944397]
[207.41325378 186.65068054]
[204.78680420 195.35189819]
[199.89132690 202.98196411]
[208.84869385 215.01380920]
[217.80607605 227.04565430]
[226.76345825 239.07749939]
[235.72084045 251.10935974]
[250.16799927 257.55841064]
[251.56192017 272.38763428]
[260.51931763 284.41949463]
[269.47668457 296.45132446]
[278.43405151 308.48318481]
[287.39144897 320.51501465]
[296.34881592 332.54687500]
[317.82461548 329.38406372]
[337.27764893 348.67364502]
[350.26803589 356.17364502]
[363.25839233 363.67364502]
[376.24877930 371.17364502]
[389.23916626 378.67364502]
[402.22955322 386.17364502]
[415.21994019 393.67364502]
[431.96020508 396.35693359]
[434.01593018 413.18579102]
[418.41384888 419.81988525]
[407.71994019 406.66403198]
[394.72955322 399.16403198]
[381.73916626 391.66403198]
[368.74877930 384.16403198]
[355.75839233 376.66403198]
[342.76803589 369.16403198]
[329.77764893 361.66403198]
[324.13885498 366.60913086]
[307.22244263 381.44442749]
[312.96270752 395.30261230]
[318.70294189 409.16079712]
[324.44320679 423.01898193]
[330.18344116 436.87719727]
[335.92370605 450.73538208]
[341.66397095 464.59356689]
[347.40420532 478.45175171]
[359.83364868 488.24050903]
[357.55581665 502.95993042]
[363.29608154 516.81811523]
[376.62869263 526.36657715]
[374.75674438 542.65850830]
[359.60589600 548.93420410]
[346.76208496 538.73773193]
[349.43786621 522.55834961]
[343.69763184 508.70016479]
[331.67877197 499.90264893]
[333.54602051 484.19201660]
[327.80575562 470.33383179]
[322.06552124 456.47561646]
[316.32525635 442.61743164]
[310.58502197 428.75924683]
[304.84475708 414.90106201]
[299.10449219 401.04284668]
[293.36425781 387.18466187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 170]
[3 169]
[4 168]
[5 167]
[6 166]
[7 165]
[9 163]
[10 162]
[11 161]
[12 160]
[13 159]
[17 149]
[18 148]
[19 147]
[21 146]
[22 145]
[30 71]
[31 70]
[32 69]
[33 68]
[37 64]
[38 63]
[39 62]
[40 61]
[42 59]
[43 58]
[44 57]
[45 56]
[83 144]
[84 143]
[85 142]
[86 141]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
[97 127]
[98 126]
[99 125]
[100 123]
[101 122]
[102 121]
[103 120]
[104 119]
[105 118]
[106 117]
[172 188]
[173 187]
[174 186]
[175 185]
[176 184]
[177 183]
[178 182]
[190 215]
[191 214]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[197 208]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
