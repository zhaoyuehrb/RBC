%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGGGCUUUGCUAUGACCUCAGUCCCCUCACGGAGCCACGACUGCCCCUUGCUGCCACAGCCUUUCCAAGACCCUGCCCGGCCCUGCCCCAUCCUCAGCCCCGAGUCACCAUGGGCAGCGUCAGUAGCCUCAUCUCCGGCCACAGCUUCCACAGCAAGCACUGCCGGGCUUCGCAGUACAAGCUGCGCAAGUCCUCCCACCUCAAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[92.67398071 266.11654663]
[105.67486572 258.32214355]
[102.80303955 243.59963989]
[99.93120575 228.87712097]
[97.05937195 214.15460205]
[94.18753815 199.43208313]
[91.31571198 184.70956421]
[88.44387817 169.98704529]
[85.57204437 155.26452637]
[81.20644379 149.30174255]
[82.76843262 140.30264282]
[80.11508179 125.53919220]
[72.78755951 123.94001007]
[62.69019699 135.03250122]
[58.13250351 120.74166107]
[50.80497742 119.14248657]
[42.24184036 131.45803833]
[33.67870331 143.77357483]
[32.84315872 160.15142822]
[18.12056541 167.37481689]
[4.65626717 158.01293945]
[6.30117989 141.69648743]
[21.36315727 135.21044922]
[29.92629433 122.89489746]
[38.48943329 110.57934570]
[31.99020386 97.06047058]
[32.48529434 82.06864166]
[39.86228180 69.00801849]
[52.44610214 60.84422302]
[67.37937927 59.43099594]
[81.27126312 65.08922577]
[90.96736145 76.53412628]
[94.26602936 91.16622925]
[92.93408966 76.22548676]
[91.60214996 61.28473663]
[90.27021027 46.34399033]
[88.93827057 31.40324211]
[87.60633850 16.46249390]
[83.72753143 8.19337273]
[86.36703491 1.29074550]
[85.25664520 -13.66809845]
[82.31869507 -17.98082352]
[81.41831970 -22.53395271]
[82.30598450 -26.51127434]
[84.44443512 -29.31382370]
[83.99993134 -44.30723572]
[69.72687531 -56.76583481]
[69.10431671 -75.38159943]
[82.06108093 -88.31443024]
[81.17247009 -103.28808594]
[80.28386688 -118.26174164]
[79.39525604 -133.23539734]
[78.50664520 -148.20906067]
[77.61803436 -163.18270874]
[76.72942352 -178.15637207]
[63.09977722 -185.09754944]
[54.82905579 -197.84478760]
[54.05445862 -212.92013550]
[60.88400650 -226.26979065]
[73.39437866 -234.35411072]
[72.50576782 -249.32775879]
[71.61715698 -264.30142212]
[63.59095764 -267.04739380]
[56.61823273 -271.83047485]
[51.20190048 -278.28790283]
[47.72784042 -285.93679810]
[46.43739700 -294.21026611]
[47.41068268 -302.49951172]
[50.56176376 -310.19842529]
[55.64602661 -316.74810791]
[62.27910995 -321.67736816]
[58.32530212 -336.14691162]
[54.37149429 -350.61642456]
[43.27027130 -361.88912964]
[47.37919998 -376.20574951]
[43.42539215 -390.67529297]
[39.47158432 -405.14483643]
[35.51777649 -419.61434937]
[31.56397057 -434.08389282]
[27.61016273 -448.55343628]
[21.15918350 -462.09539795]
[12.41449261 -474.28268433]
[3.66980004 -486.47000122]
[-10.47666073 -495.81417847]
[-5.41377020 -511.99453735]
[11.53578568 -511.60867310]
[15.85710335 -495.21469116]
[24.60179520 -483.02737427]
[33.34648895 -470.84008789]
[40.27558517 -473.71020508]
[34.53533173 -487.56838989]
[36.49319458 -502.44009399]
[48.39352417 -493.30865479]
[54.13377762 -479.45046997]
[61.06287384 -482.32058716]
[58.62857819 -497.12173462]
[56.19428635 -511.92291260]
[43.20901108 -520.93170166]
[40.47945786 -536.49847412]
[49.62502289 -549.38775635]
[65.21980286 -551.95257568]
[78.01169586 -542.67126465]
[80.41149902 -527.05023193]
[70.99544525 -514.35717773]
[73.42973328 -499.55603027]
[75.86402893 -484.75488281]
[89.10853577 -477.71334839]
[96.84503937 -464.86242676]
[96.86994171 -449.86245728]
[89.17613983 -436.98590088]
[75.95508575 -429.90045166]
[60.97256088 -430.62423706]
[48.49607086 -438.95114136]
[42.07969666 -452.50723267]
[46.03350449 -438.03768921]
[49.98731232 -423.56817627]
[53.94112015 -409.09863281]
[57.89492798 -394.62908936]
[61.84873199 -380.15957642]
[72.66715240 -369.92184448]
[68.84102631 -354.57025146]
[72.79483795 -340.10070801]
[76.74864197 -325.63116455]
[85.98217773 -324.37274170]
[94.40360260 -320.38256836]
[105.61991119 -330.34219360]
[110.80167389 -345.29077148]
[125.45592499 -347.95578003]
[136.67224121 -357.91540527]
[147.88856506 -367.87503052]
[146.23937988 -383.30422974]
[154.00337219 -396.73925781]
[168.19514465 -403.01406860]
[183.35765076 -399.71588135]
[193.66059875 -388.11294556]
[195.14231873 -372.66674805]
[187.23303223 -359.31674194]
[172.97402954 -353.19625854]
[157.84819031 -356.65872192]
[146.63188171 -346.69909668]
[135.41555786 -336.73944092]
[131.03605652 -322.50326538]
[115.57954407 -319.12588501]
[104.36322784 -309.16625977]
[105.82762909 -283.22409058]
[86.59082031 -265.19003296]
[87.47942352 -250.21636963]
[88.36803436 -235.24272156]
[101.74675751 -228.69477844]
[110.10727692 -216.24658203]
[111.12112427 -201.18542480]
[104.41610718 -187.54945374]
[91.70307922 -179.04498291]
[92.59169006 -164.07131958]
[93.48030090 -149.09767151]
[94.36891174 -134.12400818]
[95.25752258 -119.15035248]
[96.14612579 -104.17669678]
[97.03473663 -89.20304108]
[107.00428009 -83.65740204]
[113.12241364 -73.88687134]
[113.77133942 -62.25709152]
[108.67437744 -51.65046692]
[98.99334717 -44.75173569]
[99.43784332 -29.75832367]
[100.21548462 -14.77849483]
[101.32588196 0.18034960]
[102.54708099 15.13055611]
[103.87902069 30.07130432]
[105.21096039 45.01205063]
[106.54290009 59.95279694]
[107.87483978 74.89354706]
[109.20677185 89.83429718]
[116.54579163 102.91629791]
[128.60217285 111.84062958]
[140.65855408 120.76495361]
[152.71493530 129.68928528]
[164.77131653 138.61360168]
[181.11721802 139.93411255]
[187.90115356 154.86430359]
[178.14439392 168.04525757]
[161.88386536 165.91755676]
[155.84700012 150.66999817]
[143.79061890 141.74566650]
[131.73422241 132.82133484]
[119.67784882 123.89701080]
[107.62145996 114.97268677]
[94.87854004 122.88583374]
[97.53189850 137.64929199]
[100.29456329 152.39268494]
[103.16639709 167.11520386]
[106.03823090 181.83772278]
[108.91005707 196.56024170]
[111.78189087 211.28276062]
[114.65372467 226.00527954]
[117.52555847 240.72779846]
[120.39738464 255.45031738]
[135.37452698 257.78723145]
[148.64767456 265.10839844]
[158.61401367 276.52975464]
[164.07008362 290.67214966]
[164.35704041 305.82778931]
[159.44020081 320.16656494]
[149.91333008 331.95700073]
[136.92683411 339.77536011]
[122.04888153 342.67749023]
[107.07607269 340.31301880]
[93.81644440 332.96737671]
[83.87116241 321.52767944]
[78.44116211 307.37524414]
[78.18214417 292.21911621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[11 189]
[12 188]
[16 25]
[17 24]
[18 23]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[40 167]
[41 166]
[45 165]
[46 164]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 154]
[55 153]
[60 148]
[61 147]
[62 146]
[71 123]
[72 122]
[73 121]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[81 89]
[82 88]
[83 87]
[95 106]
[96 105]
[97 104]
[125 144]
[126 143]
[128 141]
[129 140]
[130 139]
[174 187]
[175 186]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
