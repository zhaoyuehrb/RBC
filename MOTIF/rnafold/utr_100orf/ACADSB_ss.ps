%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAUUAAGGGGGGGUGUGUGCGGGGCGGGUACUGAGUGGGCGGGGCCUUGCUCGGGUAACUCCCAGGGGCUGGCUAGAGACCCAGAGGCGCAGAGCGGAGAGGCCUGCGGCGAGGAUGGAGGGCCUGGCAGUGCGGUUGCUGCGCGGCAGCAGGCUGCUAAGAAGAAAUUUCCUGACUUGUUUGUCUUCUUGGAAGAUUCCUCCUCAUGUCUCAA\
) } def
/len { sequence length } bind def

/coor [
[90.25395203 369.64337158]
[98.71611023 355.59616089]
[98.49995422 340.59771729]
[98.28379822 325.59927368]
[98.06763458 310.60086060]
[97.85147858 295.60241699]
[85.29890442 284.40640259]
[84.71877289 267.25817871]
[96.95849609 254.75634766]
[96.52622986 239.76257324]
[96.09396362 224.76881409]
[95.66168976 209.77503967]
[95.22942352 194.78126526]
[94.79714966 179.78750610]
[94.36488342 164.79373169]
[93.93260956 149.79995728]
[93.50034332 134.80618286]
[78.95923615 128.47810364]
[68.63878632 116.43746948]
[64.60922241 101.09957123]
[67.67884827 85.54110718]
[55.59461975 76.65451813]
[43.51039124 67.76793671]
[27.80888176 65.82546234]
[22.13947487 52.05204391]
[10.05524445 43.16546249]
[-2.02898598 34.27887726]
[-14.11321640 25.39229202]
[-30.16096687 30.74485970]
[-46.07832336 25.52746010]
[-55.65180206 11.98528194]
[-55.26896286 -4.42841101]
[-67.47999573 -13.13993263]
[-79.75348663 -21.76324272]
[-92.08879089 -30.29789352]
[-107.44290161 -27.67320633]
[-119.83107758 -36.50427628]
[-122.23869324 -51.15825272]
[-134.57398987 -59.69290161]
[-147.37657166 -58.15375900]
[-157.47393799 -65.51196289]
[-159.77656555 -77.38399506]
[-171.98760986 -86.09552002]
[-184.19863892 -94.80704498]
[-196.40966797 -103.51856232]
[-208.62071228 -112.23008728]
[-217.41921997 -114.66452026]
[-220.94372559 -121.15617371]
[-233.02795410 -130.04275513]
[-245.11218262 -138.92933655]
[-257.19641113 -147.81591797]
[-269.46990967 -156.43923950]
[-281.92691040 -164.79524231]
[-294.38391113 -173.15124512]
[-306.84094238 -181.50726318]
[-319.61999512 -179.78378296]
[-329.82235718 -186.99571228]
[-332.29583740 -198.83332825]
[-344.63113403 -207.36798096]
[-359.98522949 -204.74330139]
[-372.37341309 -213.57437134]
[-374.78103638 -228.22834778]
[-387.11633301 -236.76298523]
[-399.45162964 -245.29763794]
[-410.01559448 -242.73469543]
[-420.04064941 -246.33184814]
[-426.30148315 -254.67547607]
[-426.92562866 -264.86825562]
[-439.00985718 -273.75485229]
[-451.09408569 -282.64144897]
[-466.79559326 -284.58389282]
[-472.46502686 -298.35733032]
[-484.54925537 -307.24389648]
[-500.13320923 -304.61413574]
[-512.96368408 -313.84207153]
[-515.42852783 -329.45297241]
[-506.06546021 -342.18515015]
[-490.42938232 -344.48483276]
[-477.79690552 -334.98767090]
[-475.66265869 -319.32812500]
[-463.57843018 -310.44155884]
[-448.74127197 -309.13470459]
[-442.20751953 -294.72567749]
[-430.12329102 -285.83908081]
[-418.03906250 -276.95248413]
[-398.71353149 -276.22631836]
[-390.91699219 -257.63293457]
[-378.58169556 -249.09829712]
[-366.24636841 -240.56364441]
[-351.68441772 -243.47657776]
[-339.05310059 -234.99694824]
[-336.09646606 -219.70329285]
[-323.76116943 -211.16864014]
[-306.21679688 -210.67918396]
[-298.48492432 -193.96426392]
[-286.02792358 -185.60826111]
[-273.57089233 -177.25225830]
[-261.11389160 -168.89624023]
[-257.60711670 -169.21286011]
[-253.77267456 -167.84994507]
[-250.40011597 -164.67187500]
[-248.30982971 -159.90016174]
[-236.22560120 -151.01356506]
[-224.14137268 -142.12698364]
[-212.05712891 -133.24040222]
[-199.90919495 -124.44112396]
[-187.69815063 -115.72959900]
[-175.48712158 -107.01807404]
[-163.27607727 -98.30655670]
[-151.06504822 -89.59503174]
[-133.52954102 -88.85280609]
[-126.03934479 -72.02820587]
[-113.70404053 -63.49355698]
[-99.14208984 -66.40649414]
[-86.51075745 -57.92686081]
[-83.55413818 -42.63319778]
[-71.21883392 -34.09854889]
[-63.93358994 -32.87837219]
[-58.76847458 -25.35096931]
[-46.55744171 -16.63944626]
[-34.34677887 -22.03062439]
[-20.95919800 -20.67467117]
[-9.90103817 -12.81926250]
[-4.12154055 -0.42831683]
[-5.22663212 13.30806255]
[6.85759830 22.19464684]
[18.94182777 31.08123016]
[31.02605820 39.96781540]
[45.86322403 41.27465820]
[52.39697647 55.68370819]
[64.48120880 64.57028961]
[76.56543732 73.45687866]
[94.51226807 63.05739212]
[116.31879425 64.26134491]
[134.78451538 77.86850739]
[148.21763611 71.19381714]
[161.65074158 64.51912689]
[175.08386230 57.84443283]
[188.51696777 51.16974258]
[201.90164185 44.39843369]
[215.23716736 37.53086090]
[228.57270813 30.66328430]
[241.90823364 23.79570961]
[255.24375916 16.92813492]
[268.57928467 10.06056023]
[279.89260864 -2.56661177]
[295.15814209 4.80901527]
[292.29666138 21.51974106]
[275.44686890 23.39609337]
[262.11132812 30.26366806]
[248.77580261 37.13124084]
[235.44027710 43.99881744]
[222.10475159 50.86639023]
[208.76921082 57.73396683]
[204.26414490 63.58785629]
[195.19166565 64.60285950]
[181.75854492 71.27754974]
[168.32543945 77.95223999]
[154.89231873 84.62693024]
[141.45921326 91.30162048]
[141.89147949 106.29538727]
[155.68682861 112.18508148]
[169.48216248 118.07477570]
[183.27751160 123.96447754]
[197.07284546 129.85417175]
[210.86819458 135.74386597]
[224.66352844 141.63356018]
[238.45887756 147.52325439]
[248.39370728 136.11473083]
[261.36874390 128.33634949]
[276.11288452 124.95015717]
[291.18157959 126.28790283]
[305.09857178 132.21852112]
[316.50042725 142.16098022]
[324.27011108 155.14125061]
[327.64642334 169.88761902]
[326.29858398 184.95542908]
[320.35864258 198.86845398]
[310.40853882 210.26364136]
[297.42309570 218.02462769]
[282.67443848 221.39106750]
[267.60754395 220.03312683]
[253.69851685 214.08387756]
[242.30998230 204.12612915]
[234.55770874 191.13546753]
[231.20115662 176.38458252]
[232.56918335 161.31860352]
[218.77383423 155.42890930]
[204.97850037 149.53921509]
[191.18315125 143.64952087]
[177.38781738 137.75981140]
[163.59246826 131.87011719]
[149.79711914 125.98042297]
[136.00178528 120.09072876]
[131.33064270 124.97052002]
[126.05642700 128.88388062]
[120.36583710 131.76850891]
[114.44914246 133.59655762]
[108.49411774 134.37391663]
[108.92638397 149.36769104]
[109.35865021 164.36146545]
[109.79092407 179.35522461]
[110.22319031 194.34899902]
[110.65546417 209.34277344]
[111.08773041 224.33653259]
[111.51999664 239.33030701]
[111.95227051 254.32408142]
[122.74385834 262.37838745]
[126.86765289 274.99276733]
[123.03166199 287.49426270]
[112.84992218 295.38626099]
[113.06607819 310.38467407]
[113.28223419 325.38311768]
[113.49839783 340.38156128]
[113.71455383 355.38000488]
[122.57800293 369.17752075]
[114.82128143 383.62625122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 215]
[3 214]
[4 213]
[5 212]
[6 211]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[21 132]
[22 131]
[23 130]
[25 128]
[26 127]
[27 126]
[28 125]
[32 120]
[33 119]
[34 117]
[35 116]
[38 113]
[39 112]
[42 110]
[43 109]
[44 108]
[45 107]
[46 106]
[48 105]
[49 104]
[50 103]
[51 102]
[52 98]
[53 97]
[54 96]
[55 95]
[58 93]
[59 92]
[62 89]
[63 88]
[64 87]
[68 85]
[69 84]
[70 83]
[72 81]
[73 80]
[135 160]
[136 159]
[137 158]
[138 157]
[139 156]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[166 189]
[167 188]
[168 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
