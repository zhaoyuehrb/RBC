%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUCCCACAAACCCGGAAGCGGAUCGCGUGGAGUGAAGGUCACGCCGCGGCGCGAUUGACUUCUAAAGAGUCAUGCUGUGUGAUGAAAAAGCCCAGAAGAGAAGGAAGAGGAAAGCAAAGGAGUCAGGGAUGGCUCUUCCUCAGGGACACUUAACAUUCAGGGACGUGGCCA\
) } def
/len { sequence length } bind def

/coor [
[37.72737122 227.53744507]
[22.93669891 236.91592407]
[16.67209053 250.54510498]
[10.40748310 264.17428589]
[4.14287472 277.80346680]
[-2.12173343 291.43264771]
[-8.38634109 305.06185913]
[0.00898092 318.00488281]
[0.05119281 333.43218994]
[-8.27317524 346.42095947]
[-22.30784798 352.82653809]
[-37.57441330 350.60494995]
[-49.20136261 340.46502686]
[-53.47858429 325.64245605]
[-49.04122543 310.86703491]
[-37.30523682 300.85351562]
[-22.01552582 298.79724121]
[-15.75091839 285.16806030]
[-9.48631001 271.53887939]
[-3.22170234 257.90969849]
[3.04290581 244.28050232]
[9.30751419 230.65132141]
[4.02806759 225.32426453]
[-10.47801876 229.14178467]
[-6.53082514 214.67016602]
[-11.81027126 209.34312439]
[-25.49513817 215.48513794]
[-39.18000412 221.62716675]
[-52.86487198 227.76918030]
[-59.89029312 242.19218445]
[-75.57773590 245.55133057]
[-87.89312744 235.26976013]
[-87.38916016 219.23461914]
[-74.45243073 209.74670410]
[-59.00689316 214.08432007]
[-45.32202530 207.94229126]
[-31.63715935 201.80027771]
[-17.95229340 195.65824890]
[2.84118938 175.12615967]
[26.21564865 178.94223022]
[35.67288208 167.29917908]
[45.13011551 155.65612793]
[54.58735275 144.01307678]
[64.04458618 132.37002563]
[73.50182343 120.72696686]
[82.95905304 109.08390808]
[78.76790619 92.23189545]
[90.40121460 75.93776703]
[79.55929565 65.57183075]
[68.71736908 55.20589066]
[57.87544632 44.83995056]
[47.03352356 34.47401047]
[36.19160080 24.10807037]
[25.34967804 13.74213123]
[21.02154541 12.85417366]
[17.56374931 10.82382774]
[15.23104858 8.07142735]
[14.11303711 5.05698776]
[14.13568878 2.22203183]
[4.06542253 -8.89506054]
[-6.00484371 -20.01215172]
[-16.07510948 -31.12924385]
[-26.14537621 -42.24633789]
[-36.21564484 -53.36343002]
[-52.10370636 -55.58805084]
[-60.14612198 -69.46965790]
[-54.17343903 -84.35947418]
[-38.76738358 -88.83530426]
[-25.74616623 -79.46366882]
[-25.09855080 -63.43369293]
[-15.02828503 -52.31660080]
[-4.95801830 -41.19951248]
[5.11224794 -30.08241844]
[15.18251419 -18.96532631]
[25.25278091 -7.84823465]
[35.71561813 2.90020847]
[46.55754089 13.26614857]
[57.39946365 23.63208771]
[68.24138641 33.99802780]
[79.08331299 44.36396790]
[89.92523193 54.72990799]
[100.76715851 65.09584808]
[91.86245728 53.02495575]
[89.31327820 38.24315643]
[93.66050720 23.88691521]
[103.98172760 13.00241661]
[118.08694458 7.89918375]
[132.98323059 9.66004562]
[145.50982666 17.91137505]
[153.00877380 30.90236282]
[153.88891602 45.87651825]
[147.96348572 59.65655518]
[136.48979187 69.31855011]
[121.90255737 72.81238556]
[136.87295532 71.87052155]
[151.84335327 70.92866516]
[165.13046265 62.34011459]
[178.31845093 69.26299286]
[193.28884888 68.32113647]
[208.25926208 67.37928009]
[217.11308289 52.98602295]
[232.64259338 46.75641632]
[248.66772461 50.95663452]
[258.93716431 63.74387741]
[273.88824463 62.53343964]
[288.83932495 61.32299805]
[298.27816772 43.74325180]
[316.26568604 35.44344711]
[335.48605347 39.60916138]
[348.23587036 54.39419174]
[363.06158447 52.11418915]
[377.88726807 49.83418655]
[392.71298218 47.55418777]
[407.53869629 45.27418518]
[395.54019165 36.27220154]
[391.98803711 21.69885826]
[398.49859619 8.18543434]
[412.10937500 1.88091207]
[426.62707520 5.65402651]
[435.44573975 17.78790474]
[434.55264282 32.76129532]
[424.35443115 43.76073837]
[439.34899902 43.35686874]
[454.34356689 42.95299911]
[469.33813477 42.54912949]
[484.33267212 42.14525604]
[499.32723999 41.74138641]
[514.32183838 41.33751678]
[528.00732422 32.30206299]
[542.55194092 39.87732697]
[542.99353027 56.27052689]
[528.87768555 64.61774445]
[514.72570801 56.33208084]
[499.73110962 56.73595047]
[484.73654175 57.13982010]
[469.74200439 57.54368973]
[454.74743652 57.94755936]
[439.75286865 58.35142899]
[424.75830078 58.75530243]
[409.81869507 60.09989166]
[394.99298096 62.37989426]
[380.16726685 64.65989685]
[365.34158325 66.93989563]
[350.51586914 69.21990204]
[347.89578247 79.30072021]
[342.03527832 87.95762634]
[333.58734131 94.18037415]
[323.50860596 97.23245239]
[312.95111084 96.73824310]
[303.13061523 92.72900391]
[295.18649292 85.64223480]
[290.04974365 76.27407837]
[275.09866333 77.48451996]
[260.14758301 78.69496155]
[254.27357483 90.70461273]
[243.13829041 98.29740143]
[229.59690857 99.39675903]
[217.18627930 93.60800934]
[209.20111084 82.34967804]
[194.23071289 83.29154205]
[179.26031494 84.23339844]
[167.04399109 92.75457764]
[152.78521729 85.89907074]
[137.81481934 86.84092712]
[122.84441376 87.78278351]
[117.55844879 114.24240875]
[94.60211182 118.54114532]
[85.14487457 130.18420410]
[75.68763733 141.82725525]
[66.23040771 153.47030640]
[56.77317047 165.11335754]
[47.31593704 176.75640869]
[37.85870361 188.39947510]
[44.66722488 199.16365051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[7 17]
[26 38]
[27 37]
[28 36]
[29 35]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[94 165]
[95 164]
[96 163]
[98 161]
[99 160]
[100 159]
[104 154]
[105 153]
[106 152]
[110 144]
[111 143]
[112 142]
[113 141]
[114 140]
[122 139]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
