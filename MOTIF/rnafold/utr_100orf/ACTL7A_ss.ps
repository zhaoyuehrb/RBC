%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAAAUUCUCAGGGUAUCCUCUGAUGUAGGCCUUUCAGGCCUUGAAUCCAGUGGGAUUGAGAACUUUCUAAGAGUGGUGCGGCUCUUGACAACAUGUGGGCUCCACCAGCAGCAAUCAUGGGGGAUGGGCCCACCAAGAAGGUGGGCAACCAGGCCCCCCUGCAGACACAGGCCCUCCAGACUGCCUCUUUAA\
) } def
/len { sequence length } bind def

/coor [
[18.94442940 157.54632568]
[21.99774551 142.86090088]
[8.18599987 148.71203613]
[-5.62574434 154.56317139]
[-19.43748856 160.41429138]
[-33.24923325 166.26542664]
[-42.93806839 178.77290344]
[-57.67525101 176.61312866]
[-71.48699951 182.46424866]
[-85.29874420 188.31538391]
[-99.11048889 194.16651917]
[-112.92223358 200.01763916]
[-126.73397827 205.86877441]
[-129.23886108 209.45001221]
[-132.43470764 211.80387878]
[-135.84829712 212.86393738]
[-139.03375244 212.72515869]
[-141.62310791 211.62071228]
[-155.78135681 216.57489014]
[-169.93960571 221.52908325]
[-184.09785461 226.48327637]
[-198.25610352 231.43745422]
[-212.37419128 236.50494385]
[-226.45121765 241.68542480]
[-240.52824402 246.86590576]
[-254.56330872 252.15902710]
[-268.55548096 257.56445312]
[-275.33688354 273.68350220]
[-291.36029053 279.79638672]
[-306.54473877 272.57955933]
[-320.44848633 278.20855713]
[-334.35223389 283.83755493]
[-348.25598145 289.46655273]
[-362.15972900 295.09558105]
[-376.06350708 300.72457886]
[-388.47607422 312.27291870]
[-403.00924683 303.54235840]
[-398.64303589 287.16027832]
[-381.69250488 286.82083130]
[-367.78875732 281.19180298]
[-353.88500977 275.56280518]
[-339.98123169 269.93380737]
[-326.07748413 264.30480957]
[-312.17373657 258.67581177]
[-308.85345459 246.21821594]
[-298.81192017 237.82530212]
[-285.57485962 236.73617554]
[-273.96093750 243.57228088]
[-259.96875000 238.16683960]
[-254.85585022 232.81716919]
[-245.70872498 232.78887939]
[-231.63169861 227.60839844]
[-217.55467224 222.42791748]
[-212.35668945 217.16088867]
[-203.21029663 217.27920532]
[-189.05204773 212.32501221]
[-174.89378357 207.37083435]
[-160.73553467 202.41664124]
[-146.57728577 197.46246338]
[-132.58509827 192.05702209]
[-118.77336121 186.20590210]
[-104.96161652 180.35476685]
[-91.14987183 174.50363159]
[-77.33812714 168.65251160]
[-63.52638245 162.80137634]
[-54.82545471 150.71241760]
[-39.10036087 152.45367432]
[-25.28861809 146.60255432]
[-11.47687340 140.75141907]
[2.33487105 134.90029907]
[16.14661598 129.04916382]
[29.71287346 122.64942169]
[43.01186371 115.71134949]
[56.31085205 108.77327728]
[69.60984039 101.83520508]
[82.90882874 94.89712524]
[89.74010468 81.54296112]
[87.58374786 66.69876862]
[85.42739105 51.85457230]
[83.27103424 37.01037598]
[81.11468506 22.16617966]
[71.47387695 9.62164116]
[77.30117798 -4.08572388]
[75.14482117 -18.92991829]
[72.98846436 -33.77411270]
[70.83211517 -48.61830902]
[68.67575836 -63.46250534]
[54.09961700 -67.99007416]
[42.93725967 -78.39990234]
[37.40498352 -92.62511444]
[38.60122299 -107.84128571]
[46.28846359 -121.02722931]
[58.94039917 -129.56486511]
[74.04498291 -131.75904846]
[88.60317993 -127.17411041]
[99.72445679 -116.72040558]
[105.20066833 -102.47351837]
[103.94451904 -87.26217651]
[96.20541382 -74.10660553]
[83.51995087 -65.61885834]
[85.67630768 -50.77466583]
[87.83266449 -35.93046951]
[89.98901367 -21.08627319]
[92.14537048 -6.24207878]
[101.63194275 5.24070454]
[95.95887756 20.00982475]
[98.11523438 34.85401917]
[100.27159119 49.69821548]
[102.42794037 64.54241180]
[104.58429718 79.38660431]
[117.22079468 87.46862030]
[131.60081482 83.20070648]
[145.98083496 78.93279266]
[160.36085510 74.66487885]
[147.17745972 67.50959015]
[141.55221558 53.60431671]
[146.05244446 39.29529953]
[158.62426758 31.11305809]
[173.53002930 32.79189301]
[183.96684265 43.56560516]
[185.17144775 58.51715469]
[176.59443665 70.82253265]
[191.36189270 68.19150543]
[206.12934875 65.56047821]
[220.89678955 62.92945480]
[235.66424561 60.29842758]
[249.46231079 48.11306000]
[265.71847534 54.70992279]
[280.44186401 51.84254456]
[295.16525269 48.97516632]
[309.84078979 45.87216949]
[324.46469116 42.53435516]
[339.08862305 39.19654083]
[353.71252441 35.85872650]
[368.33645630 32.52091599]
[382.96038818 29.18309975]
[397.58428955 25.84528542]
[407.30285645 13.08090687]
[423.34445190 12.86477947]
[433.40335083 25.36269760]
[429.76321411 40.98732758]
[415.21646118 47.75279236]
[400.92211914 40.46920395]
[386.29818726 43.80701828]
[371.67428589 47.14483261]
[357.05035400 50.48264694]
[342.42642212 53.82046127]
[327.80252075 57.15827560]
[313.17858887 60.49608994]
[309.91885376 64.00197601]
[304.41775513 65.48966217]
[298.03262329 63.69855118]
[283.30923462 66.56593323]
[268.58584595 69.43331146]
[261.56106567 79.29067993]
[249.30892944 81.79434967]
[238.29527283 75.06587982]
[223.52781677 77.69690704]
[208.76037598 80.32793427]
[193.99291992 82.95896149]
[179.22546387 85.58998871]
[164.62876892 89.04489136]
[150.24874878 93.31280518]
[135.86872864 97.58071899]
[121.48870850 101.84863281]
[118.84214783 108.86616516]
[133.82594299 109.56317902]
[137.79327393 124.02901459]
[125.26139832 132.27232361]
[113.54901886 122.90122223]
[110.90245819 129.91874695]
[118.88294220 142.61961365]
[126.86341858 155.32048035]
[142.20835876 154.66601562]
[155.81727600 161.78593445]
[164.02941895 174.76499939]
[164.63577271 190.11192322]
[157.47323608 203.69844055]
[144.46849060 211.86985779]
[129.11975098 212.42811584]
[115.55574799 205.22302246]
[107.42512512 192.19273376]
[106.91498566 176.84231567]
[114.16255951 163.30096436]
[106.18207550 150.60009766]
[98.20159912 137.89923096]
[88.46421814 122.73606873]
[89.84690857 108.19611359]
[76.54791260 115.13419342]
[63.24892807 122.07226562]
[49.94993591 129.01034546]
[36.65094757 135.94841003]
[49.92631531 142.93157959]
[52.90513229 157.63282776]
[43.39514923 169.23283386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 71]
[3 70]
[4 69]
[5 68]
[6 67]
[8 65]
[9 64]
[10 63]
[11 62]
[12 61]
[13 60]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[23 53]
[24 52]
[25 51]
[26 49]
[27 48]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[72 192]
[73 191]
[74 190]
[75 189]
[76 188]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[111 165]
[112 164]
[113 163]
[114 162]
[122 161]
[123 160]
[124 159]
[125 158]
[126 157]
[128 154]
[129 153]
[130 152]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[171 186]
[172 185]
[173 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
