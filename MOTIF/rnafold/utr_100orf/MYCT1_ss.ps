%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUUUUAUGCGAACACAAGUAUAUGAGGGGUUGUGUAAAAAUUAUUUUUCUCUUGCUGUACUACAAAGAGAUAGAAUCAAACUGCUUUUUUUCGACAUACUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[71.17859650 174.34837341]
[64.45211792 160.94111633]
[66.67122650 146.10847473]
[54.46018982 154.81999207]
[42.24915314 163.53150940]
[30.03812027 172.24304199]
[23.29740334 186.55642700]
[8.44294834 187.64932251]
[-3.76808667 196.36085510]
[-15.97912216 205.07237244]
[-28.19015694 213.78388977]
[-40.40119171 222.49542236]
[-40.40069580 238.01249695]
[-49.54821777 250.54653931]
[-64.32634735 255.27796936]
[-79.05259705 250.38745117]
[-88.06442261 237.75547791]
[-87.89659119 222.23931885]
[-78.61363220 209.80523682]
[-63.78504562 205.23439026]
[-49.11271286 210.28437805]
[-36.90167999 201.57286072]
[-24.69064331 192.86134338]
[-12.47960854 184.14981079]
[-0.26857322 175.43829346]
[5.59872723 161.74800110]
[21.32659721 160.03199768]
[33.53763199 151.32048035]
[45.74866867 142.60896301]
[57.95970535 133.89743042]
[69.08757019 123.83907318]
[78.98452759 112.56742096]
[88.88148499 101.29576111]
[98.61498260 89.88265228]
[108.18300629 78.33046722]
[117.75102234 66.77828217]
[116.46209717 51.25487137]
[126.32999420 39.67560959]
[141.13714600 38.54248047]
[150.70516968 26.99029541]
[160.27317810 15.43811035]
[169.84120178 3.88592482]
[179.40922546 -7.66626024]
[174.35624695 -30.64968300]
[187.21096802 -50.06784821]
[209.86106873 -54.30335617]
[216.53576660 -67.73647308]
[223.21046448 -81.16957855]
[229.88514709 -94.60269165]
[236.55984497 -108.03580475]
[243.04025269 -121.56371307]
[249.32505798 -135.18359375]
[255.60986328 -148.80348206]
[261.89465332 -162.42335510]
[268.17947388 -176.04324341]
[274.46426392 -189.66313171]
[265.08853149 -201.76081848]
[262.42019653 -216.83193970]
[267.07247925 -231.41325378]
[277.97625732 -242.15409851]
[292.62597656 -246.58630371]
[307.65521240 -243.69137573]
[319.61038208 -234.13453674]
[325.74423218 -220.11190796]
[324.64727783 -204.84574890]
[316.57159424 -191.84414673]
[303.37289429 -184.09475708]
[288.08416748 -183.37832642]
[281.79934692 -169.75843811]
[275.51455688 -156.13856506]
[269.22973633 -142.51867676]
[262.94494629 -128.89878845]
[256.66015625 -115.27890778]
[256.71612549 -107.77313995]
[249.99295044 -101.36111450]
[243.31825256 -87.92800140]
[236.64356995 -74.49488831]
[229.96887207 -61.06177902]
[223.29418945 -47.62866592]
[228.40534973 -41.94622421]
[231.89111328 -35.11952972]
[233.50624084 -27.60374069]
[233.13059998 -19.90329552]
[230.77810669 -12.53803730]
[226.59648132 -6.00813866]
[220.85809326 -0.76012254]
[213.94218445 2.84365773]
[206.30984497 4.55002594]
[198.47328186 4.23274088]
[190.96141052 1.90176034]
[181.39338684 13.45394516]
[171.82536316 25.00613022]
[162.25735474 36.55831528]
[152.68933105 48.11050034]
[154.33383179 62.86960602]
[144.79507446 74.72146606]
[129.30320740 76.34630585]
[119.73519135 87.89849091]
[110.16716766 99.45067596]
[107.80876160 107.29753876]
[100.15313721 111.19271851]
[90.25617981 122.46437836]
[80.35922241 133.73603821]
[95.34224701 133.02255249]
[108.00318146 141.06623840]
[113.72330475 154.93275452]
[110.41593170 169.56358337]
[99.28758240 179.62139893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 30]
[4 29]
[5 28]
[6 27]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[31 103]
[32 102]
[33 101]
[34 99]
[35 98]
[36 97]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[46 79]
[47 78]
[48 77]
[49 76]
[50 75]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
