%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUCUGAAUGGUCUUGCUUCUUUGUCUAUCUUGUCUGAUUUUCUCCUGUCUGACCUUUUCCUGGUUAAAAAUCUGGGGGAAAAUGACGGACUCCAAGCCGAUCACCA\
) } def
/len { sequence length } bind def

/coor [
[65.23958588 398.96334839]
[52.57592773 407.37170410]
[37.65754318 410.28890991]
[22.75937080 407.27014160]
[10.15327740 398.77575684]
[1.76159990 386.10104370]
[-1.13599145 371.17883301]
[1.90236485 356.28463745]
[10.41334152 343.68972778]
[23.09907532 335.31472778]
[38.02508545 332.43676758]
[41.00394440 317.73553467]
[43.98279953 303.03430176]
[46.96165848 288.33306885]
[49.94051361 273.63183594]
[43.49242020 263.28692627]
[45.96008301 250.93829346]
[56.54429245 243.39768982]
[59.94174576 228.78750610]
[63.33919525 214.17733765]
[66.73664856 199.56715393]
[57.04771423 190.26280212]
[53.22730255 177.27111816]
[56.38758850 163.99148560]
[65.79929352 153.95471191]
[79.05648804 149.88436890]
[82.86976624 135.37716675]
[86.68303680 120.86997223]
[90.49631500 106.36277008]
[76.14897919 110.73928833]
[63.61897278 102.49314880]
[61.96323395 87.58480835]
[72.37856293 76.79032135]
[87.33655548 77.91215515]
[96.02515411 90.13878632]
[101.86420441 76.32192993]
[107.70325470 62.50507736]
[107.25039673 55.66521072]
[110.00083160 50.47639084]
[114.29035950 48.08133316]
[120.90867615 34.62035370]
[127.52699280 21.15937805]
[134.14530945 7.69840240]
[140.76362610 -5.76257420]
[147.38194275 -19.22355080]
[154.00025940 -32.68452835]
[160.61857605 -46.14550400]
[167.23689270 -59.60647964]
[173.85520935 -73.06745911]
[180.08644104 -86.71193695]
[185.92549133 -100.52879333]
[182.40655518 -120.27639771]
[198.03770447 -131.50741577]
[203.07844543 -145.63508606]
[208.11918640 -159.76275635]
[213.15992737 -173.89041138]
[218.20066833 -188.01808167]
[210.14050293 -201.41836548]
[212.63064575 -216.85641479]
[224.49533081 -227.04284668]
[240.13241577 -227.16793823]
[252.15853882 -217.17262268]
[254.89535522 -201.77639771]
[247.05059814 -188.24887085]
[232.32833862 -182.97734070]
[227.28759766 -168.84967041]
[222.24685669 -154.72201538]
[217.20611572 -140.59434509]
[212.16537476 -126.46668243]
[217.42556763 -117.49446106]
[216.78442383 -106.89187622]
[210.21321106 -98.26639557]
[199.74234009 -94.68974304]
[193.90328979 -80.87288666]
[194.90226746 -76.06264496]
[192.78196716 -70.58605194]
[187.31619263 -66.44914246]
[180.69787598 -52.98816299]
[174.07955933 -39.52718735]
[167.46124268 -26.06620979]
[160.84292603 -12.60523415]
[154.22460938 0.85574245]
[147.60629272 14.31671906]
[140.98797607 27.77769470]
[134.36965942 41.23867035]
[127.75133514 54.69964981]
[121.52011108 68.34413147]
[115.68106079 82.16098022]
[109.84201050 95.97783661]
[105.00351715 110.17604065]
[101.19024658 124.68324280]
[97.37696838 139.19044495]
[93.56369019 153.69764709]
[104.42507172 166.57043457]
[105.51812744 183.21208191]
[96.61203003 197.11663818]
[81.34682465 202.96459961]
[77.94937134 217.57478333]
[74.55192566 232.18496704]
[71.15447235 246.79515076]
[76.95642853 264.19812012]
[64.64175415 276.61068726]
[61.66289520 291.31192017]
[58.68404007 306.01315308]
[55.70518112 320.71438599]
[52.72632599 335.41564941]
[65.35472107 343.87683105]
[73.77971649 356.52941895]
[76.71656036 371.44396973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 106]
[12 105]
[13 104]
[14 103]
[15 102]
[18 100]
[19 99]
[20 98]
[21 97]
[26 93]
[27 92]
[28 91]
[29 90]
[35 89]
[36 88]
[37 87]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[47 79]
[48 78]
[49 77]
[50 74]
[51 73]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
