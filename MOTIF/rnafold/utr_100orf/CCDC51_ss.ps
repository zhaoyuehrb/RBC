%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACGAUUGGUCGGGCCACGCCAGGUACGAGGAGCUAGGGUUGUCCUGCCAGGGUAGAAUCGGAACCGUAGGAGGGGUACUUAACCGGACGGCCUCCCAGGCCUGUGGCCGUGCGCGGGAAGAGCACUGCAGAUCUCAGGAUGAUGGGGCGCAGCCCUGGGUUUGCCAUGCAGCACAUCGUGGGUGUGCCCCACGUACUGGUUCGGAGGGGCCUCCUUGGAAGGGACCUCUUCAUGACCA\
) } def
/len { sequence length } bind def

/coor [
[128.07516479 244.97456360]
[122.01725006 259.26025391]
[108.70204926 267.22802734]
[93.24952698 265.81405640]
[81.60150146 255.56207275]
[78.23686981 240.41418457]
[84.44940186 226.19503784]
[97.85025024 218.37219238]
[99.21710205 203.43460083]
[100.58394623 188.49700928]
[101.95079041 173.55941772]
[103.31763458 158.62181091]
[104.68447876 143.68421936]
[90.26975250 139.53504944]
[83.48603821 152.91343689]
[76.70233154 166.29182434]
[74.93180847 183.15306091]
[58.23937988 186.11940002]
[50.76805115 170.90046692]
[63.32394409 159.50810242]
[70.10765076 146.12971497]
[76.89136505 132.75132751]
[66.74304962 121.70453644]
[56.59564209 110.65871429]
[42.69114304 116.28587341]
[28.78664207 121.91302490]
[17.78556824 136.69145203]
[0.50970685 133.55885315]
[-13.32026005 139.36677551]
[-27.15022659 145.17469788]
[-30.80013084 161.70045471]
[-43.46020889 172.67962646]
[-60.00442886 173.92935181]
[-73.88890076 165.15423584]
[-87.64198303 171.14193726]
[-101.39506531 177.12965393]
[-107.25382996 191.56269836]
[-121.28670502 197.43916321]
[-135.01029968 191.76480103]
[-148.76338196 197.75250244]
[-162.51646423 203.74021912]
[-168.06787109 218.53742981]
[-182.49087524 224.99903870]
[-197.22856140 219.29150391]
[-203.53733826 204.80099487]
[-197.67430115 190.12446594]
[-183.11788940 183.96925354]
[-168.50418091 189.98713684]
[-154.75109863 183.99942017]
[-140.99801636 178.01170349]
[-135.80162048 164.10009766]
[-121.93933105 157.83178711]
[-107.38278198 163.37657166]
[-93.62969208 157.38885498]
[-79.87660980 151.40115356]
[-78.21882629 138.16502380]
[-70.17681885 127.38693237]
[-57.76253510 121.94194031]
[-44.17099762 123.34804535]
[-32.95815277 131.34472656]
[-19.12818718 125.53680420]
[-5.29821968 119.72888184]
[-0.44337019 108.66316986]
[11.01436806 103.70534515]
[23.15948677 108.00852966]
[37.06398773 102.38137054]
[50.96848679 96.75421906]
[63.66650009 76.55088043]
[82.40178680 67.05821228]
[100.51499176 68.55191803]
[112.77394104 77.86460876]
[123.75387573 67.64496613]
[134.73381042 57.42531967]
[145.71372986 47.20567703]
[156.69366455 36.98603439]
[167.67359924 26.76639366]
[178.65353394 16.54674911]
[189.63346863 6.32710743]
[193.77178955 -1.79287410]
[200.82376099 -3.95303655]
[211.93597412 -14.02868462]
[223.04820251 -24.10433197]
[223.97779846 -39.65340424]
[235.39068604 -49.71324539]
[250.20863342 -48.73118973]
[261.32083130 -58.80683899]
[272.30078125 -69.02648163]
[283.14654541 -79.38838196]
[293.99234009 -89.75028229]
[298.02447510 -97.92351532]
[305.04769897 -100.17542267]
[316.02761841 -110.39506531]
[327.00753784 -120.61470795]
[337.98748779 -130.83435059]
[348.96740723 -141.05398560]
[359.94735718 -151.27363586]
[370.86044312 -161.56462097]
[381.70620728 -171.92652893]
[360.60900879 -176.18202209]
[350.46365356 -201.98022461]
[344.56573486 -215.77204895]
[338.66778564 -229.56387329]
[332.76983643 -243.35568237]
[320.98260498 -255.54165649]
[329.42932129 -270.24163818]
[345.89309692 -266.19439697]
[346.56164551 -249.25363159]
[352.45959473 -235.46180725]
[358.35754395 -221.66999817]
[364.25549316 -207.87817383]
[371.63964844 -209.19123840]
[369.01376343 -223.95960999]
[383.78219604 -226.58523560]
[386.40798950 -211.81735229]
[393.79214478 -213.13040161]
[394.57391357 -228.11001587]
[395.35571289 -243.08963013]
[396.13748169 -258.06924438]
[383.99206543 -267.72680664]
[379.87524414 -282.68777466]
[385.36999512 -297.19940186]
[398.36349487 -305.68167114]
[413.85946655 -304.87292480]
[425.89941406 -295.08419800]
[429.85372925 -280.07940674]
[424.20187378 -265.62826538]
[411.11709595 -257.28747559]
[410.33532715 -242.30784607]
[409.55352783 -227.32823181]
[408.77175903 -212.34861755]
[408.79989624 -194.41696167]
[399.98074341 -183.06791687]
[414.15963745 -187.96272278]
[420.48709106 -199.18701172]
[432.38177490 -202.97862244]
[443.31262207 -197.82733154]
[457.55410767 -202.53691101]
[471.79559326 -207.24647522]
[486.03707886 -211.95605469]
[496.71011353 -223.63496399]
[511.22311401 -220.28492737]
[525.46459961 -224.99450684]
[539.70605469 -229.70408630]
[546.85363770 -235.35845947]
[554.16400146 -234.38092041]
[568.46563721 -238.90444946]
[582.76733398 -243.42799377]
[597.06896973 -247.95152283]
[611.37066650 -252.47506714]
[625.67230225 -256.99859619]
[639.97399902 -261.52212524]
[654.27563477 -266.04565430]
[668.57733154 -270.56921387]
[675.79797363 -276.12991333]
[683.09497070 -275.05718994]
[697.45440674 -279.39389038]
[711.81378174 -283.73062134]
[719.32171631 -297.37866211]
[733.94598389 -301.57217407]
[746.91101074 -294.33044434]
[761.27044678 -298.66714478]
[775.62988281 -303.00387573]
[786.60369873 -314.40060425]
[801.02441406 -310.67337036]
[815.38385010 -315.01010132]
[829.74328613 -319.34680176]
[836.98852539 -333.39251709]
[852.06872559 -338.12145996]
[866.03704834 -330.72808838]
[870.60632324 -315.59872437]
[863.06567383 -301.70938110]
[847.88885498 -297.30032349]
[834.07995605 -304.98739624]
[819.72058105 -300.65066528]
[805.36114502 -296.31393433]
[795.41436768 -285.22741699]
[779.96655273 -288.64447021]
[765.60717773 -284.30773926]
[751.24774170 -279.97100830]
[744.45867920 -266.76327515]
[729.95800781 -262.16067505]
[716.15051270 -269.37121582]
[701.79107666 -265.03448486]
[687.43170166 -260.69775391]
[673.10083008 -256.26754761]
[658.79919434 -251.74400330]
[644.49749756 -247.22045898]
[630.19586182 -242.69692993]
[615.89416504 -238.17340088]
[601.59252930 -233.64985657]
[587.29083252 -229.12632751]
[572.98919678 -224.60278320]
[558.68750000 -220.07925415]
[544.41564941 -215.46260071]
[530.17413330 -210.75302124]
[515.93267822 -206.04344177]
[506.27828979 -194.70140076]
[490.74667358 -197.71456909]
[476.50518799 -193.00498962]
[462.26370239 -188.29542542]
[448.02221680 -183.58584595]
[437.05798340 -169.87255859]
[419.05444336 -173.78384399]
[404.87557983 -168.88902283]
[392.06811523 -161.08074951]
[381.22235107 -150.71884155]
[378.56256104 -143.83972168]
[370.16699219 -140.29370117]
[359.18704224 -130.07406616]
[348.20712280 -119.85441589]
[337.22720337 -109.63477325]
[326.24725342 -99.41513062]
[315.26733398 -89.19548798]
[304.35424805 -78.90450287]
[293.50845337 -68.54260254]
[282.66268921 -58.18069839]
[281.65902710 -53.53025055]
[277.73574829 -49.45391464]
[271.39648438 -47.69462204]
[260.28427124 -37.61897659]
[259.81524658 -22.77594376]
[248.68940735 -12.39950657]
[233.12384033 -12.99211788]
[222.01162720 -2.91646957]
[210.89941406 7.15917826]
[199.85310364 17.30703926]
[188.87316895 27.52668190]
[177.89324951 37.74632645]
[166.91331482 47.96596909]
[155.93338013 58.18561172]
[144.95344543 68.40525055]
[133.97351074 78.62489319]
[122.99358368 88.84453583]
[135.02992249 112.95233154]
[119.62207031 145.05107117]
[118.25522614 159.98866272]
[116.88838196 174.92625427]
[115.52153778 189.86384583]
[114.15469360 204.80145264]
[112.78784943 219.73904419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 240]
[9 239]
[10 238]
[11 237]
[12 236]
[13 235]
[14 22]
[15 21]
[16 20]
[24 67]
[25 66]
[26 65]
[28 62]
[29 61]
[30 60]
[34 55]
[35 54]
[36 53]
[39 50]
[40 49]
[41 48]
[71 233]
[72 232]
[73 231]
[74 230]
[75 229]
[76 228]
[77 227]
[78 226]
[80 225]
[81 224]
[82 223]
[85 220]
[86 219]
[87 216]
[88 215]
[89 214]
[91 213]
[92 212]
[93 211]
[94 210]
[95 209]
[96 208]
[97 206]
[98 205]
[100 110]
[101 109]
[102 108]
[103 107]
[115 130]
[116 129]
[117 128]
[118 127]
[132 204]
[133 203]
[136 201]
[137 200]
[138 199]
[139 198]
[141 196]
[142 195]
[143 194]
[145 193]
[146 192]
[147 191]
[148 190]
[149 189]
[150 188]
[151 187]
[152 186]
[153 185]
[155 184]
[156 183]
[157 182]
[160 179]
[161 178]
[162 177]
[164 175]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
