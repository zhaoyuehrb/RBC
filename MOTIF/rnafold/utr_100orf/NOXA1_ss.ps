%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGUUGCACCUGGCGCUUGGCGCCCGCACCUCUGCCCGCCUCGGAGACCCCGCAGCCCCGCGCCGCCGCCUGGCCCCGGCCCCGGCCCCUCCGCGGGAUCCUGGCCCCUCCUCGAGCGCCGCCACCGGCCGCCAUGGCCUCUCUGGGGGACCUGGUGCGCGCCUGGCACCUGGGCGCGCAGGCUGUGGAUCGUGGGGACUGGGCCCGCGCCUUGCACCUCUUCUCGGGCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-138.97676086 374.01174927]
[-145.94345093 371.23413086]
[-159.68426514 377.24993896]
[-173.42509460 383.26574707]
[-187.16590881 389.28152466]
[-200.90672302 395.29733276]
[-214.64753723 401.31314087]
[-228.38836670 407.32894897]
[-234.46676636 423.74114990]
[-250.22740173 430.53753662]
[-265.71258545 423.95660400]
[-279.37210083 430.15478516]
[-288.74188232 442.90304565]
[-303.52893066 441.11627197]
[-317.18844604 447.31445312]
[-330.84796143 453.51263428]
[-344.50747681 459.71081543]
[-349.75973511 471.47882080]
[-361.25054932 476.36444092]
[-372.61569214 472.25369263]
[-386.35653687 478.26950073]
[-400.09735107 484.28530884]
[-413.83816528 490.30111694]
[-427.57897949 496.31692505]
[-441.31979370 502.33273315]
[-440.72854614 519.92059326]
[-452.55975342 536.28051758]
[-474.39138794 542.84082031]
[-485.81042480 552.56738281]
[-497.22946167 562.29388428]
[-502.21139526 577.91796875]
[-518.28875732 581.15075684]
[-528.92254639 568.66656494]
[-523.17364502 553.30810547]
[-506.95599365 550.87481689]
[-495.53695679 541.14831543]
[-484.11791992 531.42175293]
[-487.62033081 524.78979492]
[-494.62515259 511.52584839]
[-498.12756348 504.89389038]
[-512.59906006 508.84042358]
[-520.47357178 522.28027344]
[-535.20599365 526.07647705]
[-547.97027588 518.48651123]
[-562.44183350 522.43304443]
[-576.91333008 526.37957764]
[-586.08953857 539.53930664]
[-602.10803223 540.42614746]
[-612.68084717 528.35992432]
[-609.69744873 512.59667969]
[-595.44635010 505.22872925]
[-580.85986328 511.90808105]
[-566.38836670 507.96154785]
[-551.91680908 504.01501465]
[-544.77282715 490.99584961]
[-530.15289307 486.78732300]
[-516.54559326 494.36889648]
[-502.07409668 490.42236328]
[-488.39035034 477.58847046]
[-471.67263794 473.68862915]
[-456.78244019 478.26541138]
[-447.33560181 488.59191895]
[-433.59478760 482.57611084]
[-419.85397339 476.56030273]
[-406.11315918 470.54449463]
[-392.37231445 464.52868652]
[-378.63150024 458.51287842]
[-368.99435425 443.83810425]
[-350.70565796 446.05130005]
[-337.04614258 439.85311890]
[-323.38662720 433.65490723]
[-309.72711182 427.45672607]
[-301.33435059 415.15182495]
[-285.57028198 416.49526978]
[-271.91076660 410.29708862]
[-269.11532593 397.72900391]
[-259.45080566 388.93045044]
[-246.29029846 387.27493286]
[-234.40415955 393.58813477]
[-220.66334534 387.57232666]
[-206.92253113 381.55651855]
[-193.18171692 375.54071045]
[-179.44088745 369.52490234]
[-165.70007324 363.50912476]
[-151.95925903 357.49331665]
[-139.68472290 348.87149048]
[-129.36422729 337.98629761]
[-119.04373932 327.10110474]
[-108.72325134 316.21591187]
[-98.40275574 305.33071899]
[-95.22983551 288.06350708]
[-77.51972198 282.99145508]
[-67.34503937 271.96984863]
[-57.17036438 260.94821167]
[-54.22247314 246.34825134]
[-39.17648315 241.45654297]
[-29.00180626 230.43493652]
[-26.05391502 215.83496094]
[-11.00792694 210.94325256]
[-0.83324927 199.92164612]
[9.34142780 188.90002441]
[19.51610565 177.87841797]
[29.69078255 166.85679626]
[39.79187775 155.76771545]
[49.81893921 144.61163330]
[59.84600067 133.45556641]
[69.87306213 122.29948425]
[79.90012360 111.14340973]
[56.83787918 92.95167542]
[56.47827530 52.41601562]
[54.88387299 37.50099182]
[53.28947067 22.58597183]
[45.59378815 7.47925711]
[57.97974777 -4.09762955]
[72.53298187 4.59948206]
[68.20449066 20.99156952]
[69.79889679 35.90658951]
[71.39329529 50.82161331]
[78.88516235 51.17092133]
[101.36074066 52.21884918]
[104.33604431 37.51689148]
[107.31134033 22.81493187]
[110.28663635 8.11297321]
[104.55690765 -7.25264597]
[115.20627594 -19.72353363]
[131.27958679 -16.47070885]
[136.24198914 -0.84040028]
[124.98859406 11.08827209]
[122.01329803 25.79022980]
[119.03800201 40.49219131]
[116.06269836 55.19414902]
[122.76328278 58.56344604]
[142.86503601 68.67134094]
[152.89210510 57.51526642]
[162.91915894 46.35918808]
[172.94622803 35.20311356]
[176.34709167 26.74437714]
[183.18177795 23.96640968]
[193.35646057 12.94479752]
[203.45755005 1.85570776]
[213.48461914 -9.30036736]
[223.51167297 -20.45644379]
[233.53874207 -31.61251831]
[236.40287781 -47.75961685]
[251.90892029 -53.09764099]
[264.10559082 -42.13529205]
[260.44601440 -26.14968872]
[244.69482422 -21.58545494]
[234.66775513 -10.42938042]
[224.64068604 0.72669494]
[214.61363220 11.88277054]
[212.48367310 18.94630051]
[204.37806702 23.11947441]
[194.20339966 34.14108658]
[184.10229492 45.23017502]
[174.07524109 56.38625336]
[164.04817200 67.54232788]
[154.02111816 78.69840240]
[161.37655640 91.77117920]
[176.11680603 88.99185181]
[190.85707092 86.21251678]
[205.59733582 83.43318939]
[220.33760071 80.65385437]
[235.07786560 77.87452698]
[249.81811523 75.09519958]
[264.55838013 72.31586456]
[279.29864502 69.53653717]
[294.03890991 66.75720215]
[308.48345947 57.88074875]
[321.01165771 69.30355072]
[313.50341797 84.50429535]
[296.81823730 81.49746704]
[282.07797241 84.27679443]
[267.33770752 87.05612946]
[252.59745789 89.83545685]
[237.85719299 92.61479187]
[223.11692810 95.39411926]
[208.37666321 98.17345428]
[193.63639832 100.95278168]
[178.89614868 103.73210907]
[164.15588379 106.51144409]
[122.29591370 137.62365723]
[91.05620575 121.17047882]
[81.02913666 132.32655334]
[71.00207520 143.48262024]
[60.97501373 154.63870239]
[50.94795227 165.79476929]
[47.54709244 174.25350952]
[40.71239471 177.03147888]
[30.53771782 188.05310059]
[20.36304092 199.07470703]
[10.18836308 210.09631348]
[0.01368545 221.11793518]
[-3.66196656 236.50624084]
[-17.98019409 240.60960388]
[-28.15487099 251.63122559]
[-31.83052254 267.01953125]
[-46.14875031 271.12289429]
[-56.32342911 282.14450073]
[-66.49810791 293.16613770]
[-66.76136017 306.05032349]
[-75.44833374 315.01940918]
[-87.51756287 315.65118408]
[-97.83805084 326.53640747]
[-108.15853882 337.42160034]
[-118.47903442 348.30679321]
[-128.79951477 359.19198608]
[-115.22897339 363.91561890]
[-104.25701904 376.51229858]
[-98.42465973 390.33197021]
[-92.59229279 404.15167236]
[-86.75993347 417.97134399]
[-80.92756653 431.79101562]
[-75.09520721 445.61068726]
[-59.86842728 445.86581421]
[-46.06457901 452.29806519]
[-36.07526398 463.79296875]
[-31.63118553 478.35903931]
[-33.50231171 493.47256470]
[-41.36445999 506.51507568]
[-53.85546112 515.22680664]
[-68.81118011 518.09851074]
[-83.64044189 514.63250732]
[-95.77398682 505.42944336]
[-103.10961151 492.08370972]
[-104.37636566 476.90756226]
[-99.35478973 462.53036499]
[-88.91488647 451.44305420]
[-94.74725342 437.62338257]
[-100.57961273 423.80371094]
[-106.41197205 409.98400879]
[-112.24433899 396.16433716]
[-118.07669830 382.34466553]
[-125.04338837 379.56701660]
[-130.59889221 393.50030518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 85]
[3 84]
[4 83]
[5 82]
[6 81]
[7 80]
[8 79]
[11 75]
[12 74]
[14 72]
[15 71]
[16 70]
[17 69]
[20 67]
[21 66]
[22 65]
[23 64]
[24 63]
[25 62]
[28 37]
[29 36]
[30 35]
[40 58]
[41 57]
[44 54]
[45 53]
[46 52]
[86 207]
[87 206]
[88 205]
[89 204]
[90 203]
[92 200]
[93 199]
[94 198]
[96 196]
[97 195]
[99 193]
[100 192]
[101 191]
[102 190]
[103 189]
[104 187]
[105 186]
[106 185]
[107 184]
[108 183]
[110 118]
[111 117]
[112 116]
[120 131]
[121 130]
[122 129]
[123 128]
[133 158]
[134 157]
[135 156]
[136 155]
[138 154]
[139 153]
[140 151]
[141 150]
[142 149]
[143 148]
[159 181]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
[168 172]
[209 233]
[210 232]
[211 231]
[212 230]
[213 229]
[214 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
