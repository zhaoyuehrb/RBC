%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACGGCGCCCGCCCCCGCGCGCCCGGCGCCUCCCUCACGCCCGCCCUCCUUGCCGCCCAGCCGGUCCAGGCCUCUGGCGAACAUGGCGCUUGUCCCCUGCCAGGUGCUGCGGAUGGCAAUCCUGCUGUCUUACUGCUCUAUCCUGUGUAACUACAAGGCCAUCGAAAUGCCCUCACACCAGA\
) } def
/len { sequence length } bind def

/coor [
[84.29103851 189.84516907]
[79.97846985 175.47848511]
[78.91156769 160.51646423]
[81.14196777 145.68322754]
[86.56172943 131.69657898]
[94.90774536 119.23439026]
[85.88616943 131.21818542]
[76.86460114 143.20198059]
[67.84302521 155.18576050]
[58.82145309 167.16955566]
[49.79987717 179.15333557]
[41.08645630 191.36302185]
[32.68683243 203.79066467]
[24.28721046 216.21830750]
[27.53386879 231.68553162]
[18.82279778 244.87236023]
[3.32212210 247.95532227]
[-9.77188396 239.10531616]
[-12.69077778 223.57290649]
[-3.70283103 210.57319641]
[11.85956573 207.81869507]
[20.25918770 195.39103699]
[28.65880966 182.96339417]
[28.34019470 179.43022156]
[29.73150253 175.56764221]
[32.96846771 172.18763733]
[37.81608963 170.13177490]
[46.83766174 158.14797974]
[55.85923767 146.16418457]
[64.88080597 134.18040466]
[73.90238190 122.19660950]
[82.92395782 110.21282196]
[81.28166962 102.89483643]
[71.88684082 114.58831024]
[56.88694382 114.53407288]
[47.57691956 102.77297211]
[50.96724701 88.16114044]
[64.50499725 81.70131683]
[77.99709320 88.25886536]
[76.35480499 80.94088745]
[63.07751846 73.96136475]
[49.80023193 66.98184204]
[36.52294922 60.00232315]
[25.48929024 68.85366058]
[11.95520210 72.81495667]
[-2.02352810 71.31896210]
[-14.33667946 64.62476349]
[-23.13816071 53.77363586]
[-27.12277031 40.42723083]
[-25.71966743 26.61312675]
[-38.87652206 19.40915298]
[-52.03337097 12.20518017]
[-70.41718292 13.05849171]
[-78.95948792 -2.25994873]
[-92.23677826 -9.23946953]
[-105.51406097 -16.21899033]
[-118.79134369 -23.19851112]
[-133.80679321 -18.26780128]
[-147.87295532 -25.47324562]
[-152.64463806 -40.53998184]
[-145.29087830 -54.52918625]
[-130.17454529 -59.14130783]
[-116.26387024 -51.64005661]
[-111.81182098 -36.47579575]
[-98.53453827 -29.49627495]
[-85.25725555 -22.51675415]
[-71.97997284 -15.53723335]
[-60.32470703 -18.82784653]
[-49.19929123 -13.10291004]
[-44.82939911 -0.95167232]
[-31.67254639 6.25230074]
[-18.51569366 13.45627403]
[-5.71058750 3.91457391]
[10.02991009 0.89598256]
[25.56875420 5.05369377]
[37.78657532 15.60551548]
[44.20786667 30.48045158]
[43.50246811 46.72503662]
[56.77975464 53.70455933]
[70.05703735 60.68407822]
[83.33432007 67.66359711]
[93.38368988 70.96068573]
[100.64566803 76.82035828]
[104.58116913 84.05116272]
[105.06833649 91.38088226]
[118.34562683 84.40135956]
[131.62290955 77.42183685]
[144.90019226 70.44231415]
[158.17747498 63.46279526]
[164.33493042 56.68403244]
[171.74000549 56.47965622]
[185.13389587 49.72660065]
[198.52778625 42.97354126]
[211.92167664 36.22048569]
[225.31556702 29.46743011]
[226.51457214 15.72298431]
[234.29161072 4.45852613]
[246.52383423 -1.43970454]
[259.96444702 -0.52503306]
[271.10418701 6.85637808]
[284.61080933 0.33173418]
[298.11746216 -6.19290972]
[311.56820679 -12.83199883]
[324.96209717 -19.58505630]
[338.35595703 -26.33811188]
[351.74984741 -33.09116745]
[352.51092529 -49.59736633]
[361.43551636 -63.39208603]
[376.01202393 -70.76728821]
[392.22531128 -69.79740143]
[405.66250610 -60.84112167]
[418.93978882 -67.82064056]
[431.97241211 -75.24699402]
[444.74536133 -83.11160278]
[457.51828003 -90.97621155]
[470.29122925 -98.84082031]
[483.06417847 -106.70542908]
[495.83709717 -114.57003784]
[508.61004639 -122.43464661]
[521.38299561 -130.29925537]
[528.69708252 -144.97700500]
[545.07977295 -145.71148682]
[553.67791748 -131.74713135]
[545.64654541 -117.44927216]
[529.24755859 -117.52632141]
[516.47467041 -109.66171265]
[503.70172119 -101.79710388]
[490.92877197 -93.93249512]
[478.15585327 -86.06787872]
[465.38290405 -78.20326996]
[452.60995483 -70.33866119]
[439.83703613 -62.47405624]
[439.06442261 -59.75681305]
[437.15652466 -57.18571854]
[434.16497803 -55.19934082]
[430.30059814 -54.20891571]
[425.91931152 -54.54335785]
[412.64202881 -47.56383896]
[412.99984741 -33.89920044]
[407.40393066 -21.35525703]
[396.89587402 -12.40712261]
[383.49261475 -8.84726620]
[369.79925537 -11.42667389]
[358.50289917 -19.69727898]
[345.10903931 -12.94422340]
[331.71514893 -6.19116735]
[318.32125854 0.56188864]
[313.75363159 6.39401722]
[304.64208984 7.31371880]
[291.13546753 13.83836269]
[277.62884521 20.36300659]
[275.24264526 36.59384537]
[263.54086304 48.32749176]
[246.98812866 50.80708694]
[232.06861877 42.86132050]
[218.67472839 49.61437607]
[205.28083801 56.36743164]
[191.88694763 63.12048721]
[178.49307251 69.87354279]
[165.15699768 76.74008179]
[151.87971497 83.71959686]
[138.60243225 90.69911957]
[125.32514191 97.67864227]
[112.04785919 104.65816498]
[125.69002533 98.42187500]
[140.36567688 95.31938171]
[155.36457825 95.50083160]
[169.96086121 98.95743561]
[183.44818115 105.52192688]
[195.17378235 114.87660980]
[204.57023621 126.56877136]
[211.18280029 140.03257751]
[214.69146729 154.61643982]
[214.92642212 169.61460876]
[211.87629700 184.30122375]
[205.68872070 197.96554565]
[196.66311646 209.94630432]
[185.23628235 219.66368103]
[171.96121216 226.64743042]
[157.48034668 230.55953979]
[142.49449158 231.21072388]
[127.72886658 228.56944275]
[113.89805603 222.76353455]
[101.67138672 214.07397461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[12 23]
[13 22]
[14 21]
[40 81]
[41 80]
[42 79]
[43 78]
[50 72]
[51 71]
[52 70]
[54 67]
[55 66]
[56 65]
[57 64]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
[91 159]
[92 158]
[93 157]
[94 156]
[95 155]
[100 151]
[101 150]
[102 149]
[103 147]
[104 146]
[105 145]
[106 144]
[111 138]
[112 137]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
