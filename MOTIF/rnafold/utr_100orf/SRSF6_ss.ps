%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAUAGCGAAAGCCUGGCGCGCGCGCGCGCCAUUGUGUGGCUGGACUCGGCCGCCCCUGUGGUGUGAGGCGCGUGUUCGGGCUCUUGCCGUCCCCGCACCCGCACCGCGGUUACUGGCUUGCGGUCCGCCGUUCGACAACCAGCCCUUGGGUCCCCGCCCGCCACGGACAUGCCGCGCGUCUACAUAGGACGCCUGAGCUACAACGUCCGGGAGAAGGACAUCCAGCGCUUUUUCAGUGGCUAUGGCCGCCUCC\
UCGAAGUAGACCUCA\
) } def
/len { sequence length } bind def

/coor [
[178.05705261 155.87190247]
[163.16798401 157.69273376]
[149.33328247 151.89607239]
[140.18920898 140.00549316]
[138.13914490 125.14624023]
[143.72189331 111.22386169]
[155.46835327 101.89839935]
[140.49882507 102.85414124]
[125.52931213 103.80988312]
[110.55979156 104.76562500]
[109.80351257 123.80883026]
[85.72930145 137.27247620]
[72.27460480 143.90354919]
[58.81991577 150.53463745]
[45.36522293 157.16571045]
[31.91053009 163.79679871]
[18.45583534 170.42787170]
[5.00114346 177.05895996]
[-8.41488838 183.76791382]
[-21.79180717 190.55451965]
[-35.16872787 197.34112549]
[-48.54564667 204.12773132]
[-61.92256546 210.91433716]
[-75.29948425 217.70094299]
[-88.67640686 224.48754883]
[-98.39349365 240.14868164]
[-115.87779236 238.47471619]
[-129.17514038 245.41592407]
[-142.47248840 252.35714722]
[-155.76983643 259.29837036]
[-169.06718445 266.23959351]
[-182.36453247 273.18081665]
[-195.66188049 280.12203979]
[-208.95922852 287.06326294]
[-211.22224426 303.84286499]
[-222.93409729 315.83868408]
[-239.32595825 318.45059204]
[-253.89094543 310.84280396]
[-267.10693359 317.93771362]
[-280.32293701 325.03259277]
[-293.53890991 332.12750244]
[-306.75491333 339.22241211]
[-319.97088623 346.31729126]
[-333.18688965 353.41220093]
[-341.35681152 367.63137817]
[-357.75424194 367.39501953]
[-365.51092529 352.94628906]
[-356.64746094 339.14880371]
[-340.28179932 340.19622803]
[-327.06579590 333.10131836]
[-313.84982300 326.00640869]
[-300.63381958 318.91149902]
[-287.41781616 311.81661987]
[-274.20184326 304.72171021]
[-260.98583984 297.62680054]
[-260.42077637 284.30798340]
[-253.29888916 272.91131592]
[-241.38519287 266.46252441]
[-227.73272705 266.73553467]
[-215.90045166 273.76589966]
[-202.60310364 266.82467651]
[-189.30575562 259.88345337]
[-176.00840759 252.94224548]
[-162.71105957 246.00102234]
[-149.41371155 239.05979919]
[-136.11636353 232.11857605]
[-122.81901550 225.17736816]
[-118.90986633 213.75373840]
[-107.91893005 207.85400391]
[-95.46301270 211.11064148]
[-82.08609009 204.32403564]
[-68.70917511 197.53742981]
[-55.33225250 190.75080872]
[-41.95533371 183.96420288]
[-28.57841492 177.17759705]
[-15.20149517 170.39099121]
[-10.67471313 164.58322144]
[-1.62993777 163.60426331]
[11.82475567 156.97319031]
[25.27944756 150.34210205]
[38.73414230 143.71101379]
[52.18883514 137.07994080]
[65.64352417 130.44885254]
[79.09822083 123.81777954]
[80.48136902 116.44641876]
[69.09674835 106.67961884]
[83.24766541 101.70370483]
[84.63081360 94.33235168]
[74.49517822 83.27482605]
[64.35954285 72.21729279]
[54.15999222 61.21870041]
[43.89685440 50.27941132]
[28.33422661 49.61433029]
[18.08178329 38.37413406]
[18.81174278 23.54164314]
[8.54860687 12.60235405]
[-1.71452796 1.66306436]
[-11.97766304 -9.27622509]
[-27.13034821 -6.37800550]
[-41.43595505 -12.15322399]
[-50.32961655 -24.75902939]
[-50.97340012 -40.17295456]
[-43.16187286 -53.47647095]
[-29.38766670 -60.42447662]
[-14.04608059 -58.79988861]
[-2.03255916 -49.12110519]
[2.81942701 -34.47659302]
[-1.03837335 -19.53936005]
[9.22476196 -8.60007095]
[19.48789597 2.33921885]
[29.75103188 13.27850819]
[44.59989166 13.49510002]
[55.16400528 24.44289207]
[54.83614349 40.01627731]
[65.09928131 50.95556641]
[71.94284821 53.67356491]
[75.41707611 62.08166122]
[85.55271149 73.13919067]
[95.68833923 84.19671631]
[109.60404968 89.79610443]
[124.57357025 88.84036255]
[139.54309082 87.88462067]
[154.51260376 86.92887878]
[169.40162659 85.10755157]
[184.16012573 82.42675781]
[198.91862488 79.74595642]
[213.67712402 77.06516266]
[225.87229919 66.98606873]
[239.77748108 72.32418060]
[254.53598022 69.64338684]
[259.77099609 65.70092773]
[265.37258911 65.06249237]
[269.66741943 67.07566833]
[284.48410034 64.73773956]
[299.30081177 62.39981079]
[314.11749268 60.06188202]
[328.93417358 57.72395325]
[333.33590698 39.10591507]
[345.07785034 24.05882645]
[361.98785400 15.30522442]
[380.96307373 14.40904522]
[398.53939819 21.49632454]
[411.52368164 35.23904037]
[425.47161865 29.72040558]
[439.41955566 24.20177078]
[449.40518188 11.92994404]
[464.08639526 14.44208622]
[478.03433228 8.92345238]
[484.83270264 2.87791276]
[492.17605591 3.42271948]
[506.18704224 -1.93385530]
[520.13494873 -7.45248985]
[534.01794434 -13.13244247]
[547.90100098 -18.81239510]
[561.78399658 -24.49234772]
[565.59124756 -40.99026489]
[578.36364746 -51.84995270]
[594.92694092 -52.93260574]
[608.72479248 -44.00867081]
[622.54107666 -49.84918213]
[636.35729980 -55.68968964]
[650.17352295 -61.53019714]
[655.72277832 -73.14749908]
[667.32189941 -77.73744202]
[678.57159424 -73.35280609]
[692.45458984 -79.03276062]
[706.33764648 -84.71271515]
[707.33868408 -99.90347290]
[714.80560303 -113.09940338]
[727.21063232 -121.70954895]
[742.06286621 -124.07013702]
[756.40802002 -119.76586151]
[767.41613770 -109.70174408]
[781.29913330 -115.38169861]
[795.14904785 -121.14202118]
[808.96527100 -126.98252869]
[818.66369629 -139.48255920]
[833.39923096 -137.31144714]
[847.21545410 -143.15196228]
[861.03167725 -148.99246216]
[874.84796143 -154.83297729]
[888.66418457 -160.67347717]
[902.48040771 -166.51399231]
[909.82037354 -180.77949524]
[925.57769775 -183.79388428]
[937.66473389 -173.24476624]
[936.80926514 -157.22453308]
[923.66766357 -148.02253723]
[908.32092285 -152.69775391]
[894.50469971 -146.85723877]
[880.68847656 -141.01673889]
[866.87219238 -135.17622375]
[853.05596924 -129.33572388]
[839.23974609 -123.49520874]
[830.52954102 -111.41293335]
[814.80578613 -113.16629028]
[800.98950195 -107.32578278]
[796.07006836 -101.84666443]
[786.97912598 -101.49868011]
[773.09606934 -95.81872559]
[772.29907227 -80.92476654]
[765.08471680 -67.79987335]
[752.83709717 -59.07310486]
[737.95428467 -56.51898956]
[723.37927246 -60.69691467]
[712.01757812 -70.82969666]
[698.13458252 -65.14974213]
[684.25152588 -59.46979141]
[674.24865723 -45.03216934]
[656.01403809 -47.71395493]
[642.19781494 -41.87344742]
[628.38153076 -36.03293991]
[614.56530762 -30.19243240]
[612.76922607 -16.98316574]
[604.62255859 -6.29501390]
[592.16284180 -0.97723991]
[578.59429932 -2.51340818]
[567.46398926 -10.60933208]
[553.58093262 -4.92937946]
[539.69793701 0.75057346]
[525.81488037 6.43052626]
[523.18536377 10.37817955]
[518.06396484 12.73545170]
[511.54360962 12.07710838]
[497.53265381 17.43368340]
[483.55294800 22.87137985]
[469.60504150 28.39001465]
[460.61706543 40.26711273]
[444.93817139 38.14970016]
[430.99023438 43.66833496]
[417.04232788 49.18696594]
[417.88754272 55.39060974]
[417.84790039 61.65143967]
[416.92422485 67.84388733]
[415.13500977 73.84374237]
[412.51614380 79.53066254]
[409.12014771 84.79059601]
[405.01516724 89.51802826]
[413.66226196 101.77475739]
[422.30938721 114.03147888]
[430.95651245 126.28820801]
[439.60360718 138.54493713]
[454.70956421 144.92788696]
[456.46597290 161.23271179]
[443.06597900 170.68638611]
[428.29437256 163.56381226]
[427.34689331 147.19204712]
[418.69976807 134.93533325]
[410.05264282 122.67859650]
[401.40554810 110.42186737]
[392.75842285 98.16514587]
[378.45733643 102.32823944]
[363.54251099 101.51033020]
[349.70388794 95.77584839]
[338.51876831 85.74789429]
[331.27209473 72.54063416]
[316.45541382 74.87856293]
[301.63873291 77.21649170]
[286.82205200 79.55442047]
[272.00537109 81.89234924]
[257.21676636 84.40188599]
[242.45828247 87.08267975]
[231.31872559 96.97002411]
[216.35792542 91.82366180]
[201.59942627 94.50445557]
[186.84092712 97.18525696]
[172.08242798 99.86605072]
[185.73190308 106.08632660]
[194.50517273 118.25306702]
[196.09632874 133.16844177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 123]
[8 122]
[9 121]
[10 120]
[12 84]
[13 83]
[14 82]
[15 81]
[16 80]
[17 79]
[18 78]
[19 76]
[20 75]
[21 74]
[22 73]
[23 72]
[24 71]
[25 70]
[27 67]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[88 119]
[89 118]
[90 117]
[91 115]
[92 114]
[95 111]
[96 110]
[97 109]
[98 108]
[124 267]
[125 266]
[126 265]
[127 264]
[129 262]
[130 261]
[133 260]
[134 259]
[135 258]
[136 257]
[137 256]
[143 231]
[144 230]
[145 229]
[147 227]
[148 226]
[150 225]
[151 224]
[152 221]
[153 220]
[154 219]
[155 218]
[159 213]
[160 212]
[161 211]
[162 210]
[165 208]
[166 207]
[167 206]
[173 200]
[174 199]
[175 197]
[176 196]
[178 194]
[179 193]
[180 192]
[181 191]
[182 190]
[183 189]
[238 251]
[239 250]
[240 249]
[241 248]
[242 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
