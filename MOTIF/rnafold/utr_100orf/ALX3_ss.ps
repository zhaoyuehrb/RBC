%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGUCCCUCCCCCUUGGCGGGCGCUCACAGGCGGCGCGGGCAGCGCGAGCCCCGGAGCCCCGGAGGCCUGUGCGCCCUGAGCCGGCAUGGACCCCGAGCACUGCGCGCCUUUCCGCGUGGGGCCUGCACCCGGCCCCUAUGUGGCCUCGGGGGACGAGCCUCCGGGCCCGCAGGGAACCCCCGCCG\
) } def
/len { sequence length } bind def

/coor [
[78.47328186 237.93392944]
[79.34512329 222.65325928]
[87.22831726 209.53405762]
[100.31137085 201.59097290]
[99.31477356 186.62413025]
[98.31817627 171.65727234]
[97.19722748 156.69920349]
[95.95199585 141.75099182]
[94.70676422 126.80276489]
[93.46154022 111.85453796]
[90.00230408 97.25886536]
[84.40632629 83.34178162]
[78.81035614 69.42470551]
[73.21437836 55.50762939]
[67.61840820 41.59054947]
[53.35700607 35.32555389]
[47.88014603 21.13193893]
[53.94075012 7.57448149]
[48.34477615 -6.34259748]
[42.74880600 -20.25967598]
[33.59267807 -32.14097595]
[21.56082916 -41.09835815]
[9.52898121 -50.05573654]
[-2.50286698 -59.01311493]
[-14.53471470 -67.97048950]
[-26.56656265 -76.92787170]
[-37.24334335 -74.72915649]
[-47.15967560 -78.69782257]
[-53.12069702 -87.29449463]
[-53.35052872 -97.53330994]
[-65.07800293 -106.88565063]
[-76.80547333 -116.23799896]
[-100.39701843 -114.23580933]
[-113.86874390 -138.29533386]
[-127.54132843 -144.46464539]
[-141.21391296 -150.63394165]
[-154.88650513 -156.80325317]
[-171.12263489 -150.31552124]
[-186.72436523 -157.42884827]
[-192.25196838 -173.30326843]
[-206.02520752 -179.24447632]
[-219.79844666 -185.18566895]
[-233.57168579 -191.12686157]
[-242.71022034 -191.65551758]
[-247.52319336 -197.28297424]
[-261.19577026 -203.45228577]
[-274.86837769 -209.62159729]
[-288.54095459 -215.79089355]
[-302.21353149 -221.96020508]
[-317.97473145 -220.58345032]
[-326.39346313 -232.87060547]
[-340.06604004 -239.03990173]
[-353.73864746 -245.20921326]
[-367.46203613 -251.26467896]
[-381.23526001 -257.20587158]
[-395.00851440 -263.14706421]
[-408.78173828 -269.08825684]
[-424.99832153 -266.64804077]
[-435.00692749 -279.63882446]
[-428.51156616 -294.69677734]
[-412.19409180 -296.33160400]
[-402.84054565 -282.86151123]
[-389.06732178 -276.92031860]
[-375.29406738 -270.97912598]
[-361.52084351 -265.03790283]
[-354.11972046 -265.27590942]
[-347.56933594 -258.88180542]
[-333.89672852 -252.71249390]
[-320.22415161 -246.54318237]
[-305.44091797 -248.36122131]
[-296.04425049 -235.63279724]
[-282.37164307 -229.46348572]
[-268.69906616 -223.29417419]
[-255.02647400 -217.12487793]
[-241.35388184 -210.95556641]
[-227.63049316 -204.90010071]
[-213.85725403 -198.95890808]
[-200.08401489 -193.01771545]
[-186.31077576 -187.07652283]
[-175.10845947 -193.46565247]
[-162.07772827 -192.21150208]
[-152.00427246 -183.54930115]
[-148.71719360 -170.47584534]
[-135.04461670 -164.30653381]
[-121.37202454 -158.13722229]
[-107.69943237 -151.96792603]
[-95.16711426 -160.21055603]
[-95.41644287 -175.20848083]
[-103.38204956 -188.87814331]
[-95.85736084 -201.73226929]
[-96.10668182 -216.73019409]
[-96.35600281 -231.72811890]
[-102.66477966 -247.46456909]
[-89.28976440 -257.88305664]
[-75.57584381 -247.91488647]
[-81.35807800 -231.97743225]
[-81.10875702 -216.97950745]
[-80.85943604 -201.98158264]
[-72.91165924 -189.38467407]
[-80.41851044 -175.45780945]
[-80.16918945 -160.45986938]
[-66.05883789 -145.56994629]
[-67.45312500 -127.96547699]
[-55.72565460 -118.61312866]
[-43.99818039 -109.26078033]
[-24.72779846 -107.80618286]
[-17.60918427 -88.95971680]
[-5.57733631 -80.00234222]
[6.45451164 -71.04496002]
[18.48636055 -62.08758163]
[30.51820755 -53.13020325]
[42.55005646 -44.17282486]
[44.09895325 -47.83764648]
[47.20583344 -50.95196533]
[51.66477966 -53.01341248]
[57.12696457 -53.59199905]
[71.09007263 -59.07211304]
[85.05317688 -64.55223083]
[99.01628113 -70.03234100]
[112.97939301 -75.51245880]
[126.89646912 -81.10842896]
[140.76655579 -86.81987762]
[154.63664246 -92.53131866]
[168.50674438 -98.24276733]
[182.37683105 -103.95420837]
[196.24691772 -109.66565704]
[200.80744934 -124.62345123]
[213.94381714 -133.10694885]
[229.45343018 -131.11051941]
[240.01313782 -119.57678986]
[240.63694763 -103.95165253]
[231.03033447 -91.61281586]
[215.72923279 -88.38629913]
[201.95835876 -95.79557037]
[188.08827209 -90.08412170]
[174.21818542 -84.37268066]
[160.34809875 -78.66123199]
[146.47799683 -72.94979095]
[132.60791016 -67.23834229]
[127.61055756 -61.77396011]
[118.45950317 -61.54935455]
[104.49639893 -56.06923676]
[90.53329468 -50.58912277]
[76.57018280 -45.10900497]
[62.60707855 -39.62889099]
[56.66588211 -25.85564995]
[62.26185608 -11.93857098]
[67.85782623 1.97850788]
[81.61676788 7.56664848]
[87.49012756 21.60082817]
[81.53548431 35.99457550]
[87.13146210 49.91165543]
[92.72743225 63.82873154]
[98.32340240 77.74581146]
[103.91938019 91.66288757]
[121.60323334 81.53038788]
[145.73245239 86.68218994]
[156.64305115 96.97581482]
[171.99060059 100.81816101]
[175.93841553 115.18005371]
[186.84902954 125.47367859]
[197.75962830 135.76730347]
[213.83282471 139.02064514]
[218.79473877 154.65112305]
[207.54095459 166.57942200]
[191.64842224 162.53474426]
[187.46600342 146.67790222]
[176.55540466 136.38427734]
[165.64479065 126.09066010]
[151.07765198 122.98458099]
[146.34942627 107.88642120]
[135.43882751 97.59279633]
[128.68156433 100.84692383]
[108.40975952 110.60930634]
[109.65499115 125.55753326]
[110.90022278 140.50575256]
[112.14544678 155.45397949]
[115.98278046 163.76464844]
[113.28503418 170.66067505]
[114.28163147 185.62753296]
[115.27822876 200.59439087]
[129.29890442 206.73269653]
[138.85192871 218.69088745]
[141.74208069 233.72105408]
[137.30522156 248.36935425]
[126.56089783 259.26974487]
[111.97809601 263.91735840]
[96.90782928 261.24423218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[6 179]
[7 177]
[8 176]
[9 175]
[10 174]
[11 155]
[12 154]
[13 153]
[14 152]
[15 151]
[18 148]
[19 147]
[20 146]
[21 112]
[22 111]
[23 110]
[24 109]
[25 108]
[26 107]
[30 105]
[31 104]
[32 103]
[34 86]
[35 85]
[36 84]
[37 83]
[40 79]
[41 78]
[42 77]
[43 76]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[51 69]
[52 68]
[53 67]
[54 65]
[55 64]
[56 63]
[57 62]
[87 101]
[88 100]
[90 98]
[91 97]
[92 96]
[116 145]
[117 144]
[118 143]
[119 142]
[120 141]
[121 139]
[122 138]
[123 137]
[124 136]
[125 135]
[126 134]
[157 172]
[158 171]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
