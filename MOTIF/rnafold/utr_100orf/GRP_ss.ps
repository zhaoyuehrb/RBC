%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCGGCUGCGGCGGCGGAGCUCCUCCGAGGUCCGGGUCACCAGUCUCUGCUCUUCCCAGCCUCUCCGGCGCGCUCCAAGGGCUUCCCGUCGGGACCAUGCGCGGCCGUGAGCUCCCGCUGGUCCUGCUGGCGCUGGUCCUCUGCCUGGCGCCCCGGGGGCGAGCGGUCCCGCUGCCUGCGGGCGGAGGGACCGUGC\
) } def
/len { sequence length } bind def

/coor [
[96.12100220 164.27708435]
[81.59695435 160.52850342]
[71.68875122 149.26672363]
[69.82038879 134.38354492]
[76.63752747 121.02215576]
[89.78469849 113.79982758]
[76.49018097 120.74647522]
[63.19566345 127.69311523]
[49.90114975 134.63975525]
[36.60663223 141.58639526]
[30.44244194 148.34095764]
[23.04696274 148.53588867]
[9.64444160 155.27178955]
[-0.64454812 172.59925842]
[-19.87833977 170.66815186]
[-33.06153870 177.82379150]
[-46.24473572 184.97944641]
[-59.42793655 192.13508606]
[-72.61112976 199.29074097]
[-85.79433441 206.44638062]
[-98.97753143 213.60203552]
[-112.10383606 220.86151123]
[-125.17243195 228.22438049]
[-129.53074646 247.82846069]
[-146.62973022 257.76757812]
[-165.23875427 252.03192139]
[-177.94410706 260.00524902]
[-190.64947510 267.97854614]
[-203.35482788 275.95187378]
[-208.32080078 291.20700073]
[-223.39392090 296.70068359]
[-237.01136780 288.21868896]
[-238.72702026 272.26763916]
[-227.22476196 261.08383179]
[-211.32815552 263.24652100]
[-198.62278748 255.27319336]
[-185.91743469 247.29988098]
[-173.21206665 239.32655334]
[-173.70181274 229.05635071]
[-169.84945679 219.43635559]
[-162.28939819 212.23135376]
[-152.34259033 208.79302979]
[-141.78602600 209.80667114]
[-132.53529358 215.15579224]
[-119.46670532 207.79292297]
[-115.17805481 201.76477051]
[-106.13317871 200.41883850]
[-92.94998169 193.26318359]
[-79.76677704 186.10754395]
[-66.58358002 178.95188904]
[-53.40038300 171.79624939]
[-40.21718597 164.64059448]
[-27.03398705 157.48495483]
[-25.01956749 147.45498657]
[-17.65867615 140.03755188]
[-7.21438646 137.85629272]
[2.90853500 141.86927795]
[16.31105614 135.13337708]
[29.65999031 128.29188538]
[42.95450592 121.34523773]
[56.24902344 114.39859772]
[69.54354095 107.45195770]
[82.83805847 100.50531006]
[93.06129456 89.52873230]
[99.04675293 75.77466583]
[105.03221130 62.02059937]
[111.01766968 48.26653671]
[117.00312805 34.51247025]
[122.98858643 20.75840759]
[128.97404480 7.00434256]
[127.38611603 -8.73697376]
[139.55931091 -17.31966972]
[145.54476929 -31.07373428]
[151.53022766 -44.82779694]
[157.51568604 -58.58186340]
[163.50114441 -72.33592987]
[160.31486511 -92.23447418]
[176.32818604 -103.06228638]
[181.87646484 -116.99844360]
[187.31457520 -130.97796631]
[192.64216614 -144.99998474]
[197.96974182 -159.02198792]
[203.29733276 -173.04400635]
[208.62492371 -187.06600952]
[213.95251465 -201.08802795]
[205.53169250 -218.05018616]
[212.06167603 -235.48573303]
[228.96374512 -242.49833679]
[233.84602356 -256.68154907]
[238.72830200 -270.86474609]
[235.90406799 -286.43182373]
[247.36259460 -295.94769287]
[252.24487305 -310.13088989]
[257.12716675 -324.31411743]
[262.00942993 -338.49731445]
[266.89172363 -352.68051147]
[271.77398682 -366.86373901]
[276.65628052 -381.04693604]
[281.53854370 -395.23013306]
[281.37359619 -404.37313843]
[286.61145020 -409.59765625]
[291.71704102 -423.70202637]
[296.82260132 -437.80639648]
[293.17013550 -455.85006714]
[307.01428223 -466.62783813]
[311.89657593 -480.81103516]
[316.77883911 -494.99426270]
[311.06536865 -509.98544312]
[319.34741211 -523.72546387]
[335.27166748 -525.67407227]
[346.62243652 -514.33654785]
[344.69238281 -498.41003418]
[330.96206665 -490.11196899]
[326.07977295 -475.92877197]
[321.19750977 -461.74557495]
[326.21862793 -450.73358154]
[322.25964355 -438.87326050]
[310.92697144 -432.70083618]
[305.82141113 -418.59646606]
[300.71582031 -404.49209595]
[295.72174072 -390.34786987]
[290.83947754 -376.16467285]
[285.95718384 -361.98144531]
[281.07492065 -347.79824829]
[276.19262695 -333.61505127]
[271.31036377 -319.43182373]
[266.42807007 -305.24862671]
[261.54580688 -291.06542969]
[264.71923828 -276.51281738]
[252.91151428 -265.98248291]
[248.02923584 -251.79925537]
[243.14695740 -237.61605835]
[250.25871277 -228.68016052]
[252.18931580 -217.30238342]
[248.34422302 -206.29425049]
[239.57077026 -198.43287659]
[227.97451782 -195.76043701]
[222.64694214 -181.73841858]
[217.31935120 -167.71641541]
[211.99176025 -153.69439697]
[206.66416931 -139.67239380]
[201.33657837 -125.65038300]
[201.90023804 -118.27383423]
[195.81263733 -111.45016479]
[190.26435852 -97.51400757]
[195.13682556 -88.51861572]
[194.22937012 -78.10815430]
[187.60128784 -69.74696350]
[177.25520325 -66.35047150]
[171.26974487 -52.59640503]
[165.28428650 -38.84233856]
[159.29882812 -25.08827591]
[153.31336975 -11.33421135]
[155.32942200 3.42332268]
[142.72810364 12.98980045]
[136.74264526 26.74386597]
[130.75718689 40.49792862]
[124.77173615 54.25199509]
[118.78627777 68.00605774]
[112.80081940 81.76012421]
[106.81536102 95.51419067]
[112.07366180 95.88900757]
[117.30175781 98.71302795]
[121.59145355 103.92196655]
[124.08374023 111.15094757]
[132.35566711 123.66395569]
[140.62757874 136.17695618]
[148.89950562 148.68995667]
[157.17143250 161.20297241]
[165.44335938 173.71597290]
[173.71527100 186.22897339]
[181.98719788 198.74198914]
[196.05192566 205.98727417]
[196.61605835 220.87118530]
[204.88798523 233.38418579]
[213.15991211 245.89720154]
[221.43182373 258.41018677]
[229.70375061 270.92321777]
[244.60945129 277.76074219]
[245.87121582 294.11129761]
[232.19104004 303.15478516]
[217.64192200 295.58807373]
[217.19075012 279.19512939]
[208.91882324 266.68212891]
[200.64689636 254.16911316]
[192.37498474 241.65611267]
[184.10305786 229.14311218]
[170.63000488 222.79283142]
[169.47419739 207.01390076]
[161.20227051 194.50090027]
[152.93034363 181.98789978]
[144.65843201 169.47488403]
[136.38650513 156.96188354]
[128.11457825 144.44888306]
[119.84265900 131.93588257]
[111.57073212 119.42287445]
[119.58020020 132.10546875]
[119.07955170 147.09712219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 63]
[7 62]
[8 61]
[9 60]
[10 59]
[12 58]
[13 57]
[15 53]
[16 52]
[17 51]
[18 50]
[19 49]
[20 48]
[21 47]
[22 45]
[23 44]
[26 38]
[27 37]
[28 36]
[29 35]
[64 161]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[72 153]
[73 152]
[74 151]
[75 150]
[76 149]
[78 145]
[79 144]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[85 137]
[88 132]
[89 131]
[90 130]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
[101 120]
[102 119]
[103 118]
[105 115]
[106 114]
[107 113]
[165 196]
[166 195]
[167 194]
[168 193]
[169 192]
[170 191]
[171 190]
[172 189]
[174 187]
[175 186]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
