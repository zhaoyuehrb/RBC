%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCGCGCGGUCCGGGCACACGGAGCAGGUUGGGACCGCGGCGGGUACCGGGGCCGGGGCGCCAUGCGGAGGCCGAGCGUGCGCGCGGCCGGGCUGGUCCUGUGCACCCUGUGUUACCUGCUGGUGGGCGCUGCUGUCUUCGACGCGCUCGAGUCCGAGGCGG\
) } def
/len { sequence length } bind def

/coor [
[136.87246704 191.17643738]
[133.76234436 180.92385864]
[136.89569092 170.44836426]
[129.02778625 157.67744446]
[121.15989685 144.90652466]
[113.29199982 132.13562012]
[105.42410278 119.36470795]
[90.66881561 116.66628265]
[78.79028320 125.82600403]
[66.91175079 134.98571777]
[55.03321838 144.14543152]
[43.15468216 153.30516052]
[31.27614975 162.46487427]
[19.39761543 171.62458801]
[13.19399452 186.17881775]
[-1.60952675 187.82351685]
[-13.48806000 196.98323059]
[-25.36659431 206.14295959]
[-22.66073799 221.20738220]
[-27.27666855 235.80024719]
[-38.15367889 246.56822205]
[-52.79230881 251.03689575]
[-67.82870483 248.17941284]
[-79.80762482 238.65240479]
[-85.97639465 224.64508057]
[-84.91747284 209.37625122]
[-76.87419128 196.35456848]
[-63.69484711 188.57231140]
[-48.40794754 187.81781006]
[-34.52631378 194.26441956]
[-22.64777946 185.10470581]
[-10.76924515 175.94499207]
[-5.41525555 162.04591370]
[10.23789787 159.74606323]
[22.11643219 150.58633423]
[33.99496460 141.42662048]
[45.87349701 132.26690674]
[57.75203323 123.10718536]
[69.63056946 113.94746399]
[81.50910187 104.78775024]
[87.99897003 91.26437378]
[87.71338654 76.26709747]
[87.42780304 61.26981354]
[87.14222717 46.27253342]
[86.85664368 31.27525139]
[86.57106018 16.27797127]
[86.28547668 1.28068984]
[85.85713959 -13.71319294]
[85.28607941 -28.70231819]
[84.57234955 -43.68532944]
[83.71601868 -58.66086578]
[82.85968018 -73.63639832]
[82.00334930 -88.61193848]
[81.14701843 -103.58747864]
[70.68592834 -118.71608734]
[79.12959290 -134.07817078]
[77.98829651 -149.03469849]
[69.22341919 -162.20616150]
[75.96992493 -175.48524475]
[74.82862854 -190.44175720]
[66.06375885 -203.61322021]
[72.81025696 -216.89230347]
[71.66896820 -231.84883118]
[70.52767181 -246.80534363]
[69.38637543 -261.76187134]
[65.59827423 -270.12478638]
[68.36849976 -277.01351929]
[67.51216888 -291.98907471]
[56.47562408 -299.75701904]
[52.00714111 -312.28524780]
[55.53201294 -324.90878296]
[65.54247284 -333.06347656]
[64.97141266 -348.05258179]
[64.40035248 -363.04171753]
[63.82929230 -378.03085327]
[63.25823212 -393.01995850]
[55.00115967 -406.51556396]
[62.24831390 -419.52819824]
[61.67725372 -434.51730347]
[52.48974228 -448.10119629]
[59.90233612 -462.72943115]
[76.28959656 -463.35375977]
[84.79370880 -449.33190918]
[76.66638184 -435.08837891]
[77.23744202 -420.09924316]
[85.45366669 -407.67575073]
[78.24736023 -393.59103394]
[78.81842041 -378.60189819]
[79.38948059 -363.61279297]
[79.96054077 -348.62365723]
[80.53160095 -333.63452148]
[93.33801270 -322.76498413]
[94.36279297 -305.66113281]
[82.48770905 -292.84539795]
[83.34403992 -277.86987305]
[84.34289551 -262.90316772]
[85.48419189 -247.94664001]
[86.62548065 -232.99011230]
[87.76677704 -218.03359985]
[96.45001984 -205.93193054]
[89.78514862 -191.58305359]
[90.92644501 -176.62654114]
[99.60968781 -164.52485657]
[92.94481659 -150.17599487]
[94.08611298 -135.21946716]
[103.07409668 -127.08124542]
[104.12275696 -114.59884644]
[96.12255859 -104.44380951]
[96.97888947 -89.46826935]
[97.83522034 -74.49273682]
[98.69155121 -59.51719666]
[99.54788208 -44.54166031]
[103.08531189 -38.01361465]
[100.27519989 -29.27338028]
[100.84626007 -14.28425407]
[104.25876617 -7.69004059]
[101.28276062 0.99510783]
[101.56834412 15.99238873]
[101.85391998 30.98966980]
[102.13950348 45.98694992]
[102.42508698 60.98423386]
[102.71067047 75.98151398]
[102.99625397 90.97879791]
[106.71447754 90.65311432]
[110.79233551 91.87069702]
[114.60904694 94.77790070]
[117.50244904 99.28151703]
[118.85770416 105.04174042]
[118.19502258 111.49681091]
[126.06291199 124.26772308]
[133.93081665 137.03863525]
[141.79870605 149.80955505]
[149.66659546 162.58045959]
[167.81211853 171.29273987]
[167.63687134 190.60173035]
[175.98526001 203.06384277]
[184.33364868 215.52597046]
[192.68203735 227.98808289]
[201.03042603 240.45021057]
[209.37881470 252.91232300]
[217.72720337 265.37445068]
[231.83602905 272.53347778]
[232.49130249 287.41363525]
[240.83969116 299.87576294]
[249.18807983 312.33789062]
[264.69845581 312.79403687]
[276.95785522 322.30645752]
[281.25234985 337.21743774]
[275.93054199 351.79339600]
[263.03884888 360.42956543]
[247.53433228 359.80517578]
[235.37882996 350.16030884]
[231.24636841 335.20364380]
[236.72595215 320.68627930]
[228.37756348 308.22415161]
[220.02917480 295.76205444]
[206.51748657 289.49438477]
[205.26507568 273.72283936]
[196.91668701 261.26071167]
[188.56829834 248.79859924]
[180.21990967 236.33647156]
[171.87152100 223.87435913]
[163.52313232 211.41223145]
[155.17474365 198.95011902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 133]
[4 132]
[5 131]
[6 130]
[7 129]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[13 35]
[14 34]
[16 32]
[17 31]
[18 30]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 115]
[49 114]
[50 112]
[51 111]
[52 110]
[53 109]
[54 108]
[56 105]
[57 104]
[59 102]
[60 101]
[62 99]
[63 98]
[64 97]
[65 96]
[67 95]
[68 94]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[78 85]
[79 84]
[135 164]
[136 163]
[137 162]
[138 161]
[139 160]
[140 159]
[141 158]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
