%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAGGGCUUCCGCCCGGGUGAGCGCGGGGCUGCUGGGUGACCCGGCUCCUGCUUGCCCCGCAGCCCCGGCCCCCUGCCCACCAUGAACGCCAGCGGUUCUGGCUACCCGCUUGCCUCGCUUUACGUGGGCGAUCUGCACCCCGACGUGACCGAGGCCAUGCUCUAUGAGAAGUUCUCUCCCG\
) } def
/len { sequence length } bind def

/coor [
[72.22010040 225.62484741]
[68.86122131 209.93734741]
[79.14299011 197.62211609]
[79.14299011 182.62211609]
[79.14299011 167.62211609]
[64.42810822 164.71138000]
[58.71728897 178.58172607]
[53.00646591 192.45207214]
[47.29564667 206.32241821]
[50.00579071 222.49607849]
[37.18363571 232.71978760]
[22.01951218 226.47628784]
[20.11297035 210.18833923]
[33.42529678 200.61160278]
[39.13611984 186.74125671]
[44.84694290 172.87091064]
[50.55776215 159.00056458]
[42.91118240 146.09591675]
[28.00246811 144.44357300]
[13.09375477 142.79122925]
[-1.81495965 141.13888550]
[-16.78043938 154.51278687]
[-36.45723724 152.63491821]
[-48.25383759 137.15576172]
[-63.22735214 136.26475525]
[-72.00284576 138.88327026]
[-78.44689178 135.22935486]
[-93.40311432 134.08421326]
[-108.35934448 132.93907166]
[-123.31556702 131.79393005]
[-138.27178955 130.64878845]
[-153.22801208 129.50364685]
[-168.18423462 128.35850525]
[-183.14045715 127.21336365]
[-198.09669495 126.06822205]
[-212.44728088 132.72940063]
[-224.54672241 124.04304504]
[-239.50294495 122.89790344]
[-254.45916748 121.75276184]
[-269.41537476 120.60762024]
[-284.37161255 119.46247864]
[-288.26147461 121.50614166]
[-292.20187378 122.12854767]
[-295.73574829 121.49063110]
[-298.50646973 119.88636017]
[-300.29281616 117.69792175]
[-315.13684082 115.54027557]
[-329.98083496 113.38263702]
[-345.00607300 119.95340729]
[-358.04684448 110.01004791]
[-355.68792725 93.78144836]
[-340.35598755 87.96218872]
[-327.82321167 98.53862762]
[-312.97918701 100.69627380]
[-298.13519287 102.85391235]
[-283.22647095 104.50625610]
[-268.27026367 105.65139771]
[-253.31402588 106.79653931]
[-238.35780334 107.94168091]
[-223.40158081 109.08682251]
[-210.12075806 102.34373474]
[-196.95155334 111.11199951]
[-181.99531555 112.25714111]
[-167.03909302 113.40228271]
[-152.08287048 114.54742432]
[-137.12664795 115.69256592]
[-122.17042542 116.83770752]
[-107.21420288 117.98284912]
[-92.25797272 119.12799072]
[-77.30175018 120.27313232]
[-62.33634186 121.29124451]
[-47.36283112 122.18225098]
[-41.78160095 113.52040100]
[-33.03383636 107.92327118]
[-22.67018890 106.46292114]
[-12.56131268 109.47091675]
[-4.56021166 116.46610260]
[-0.16261543 126.23017120]
[14.74609852 127.88251495]
[29.65481377 129.53486633]
[44.56352615 131.18721008]
[40.73380661 118.40421295]
[39.73440933 105.42279816]
[41.47533417 92.84732056]
[45.74201202 81.23524475]
[52.21098328 71.07247162]
[60.47023773 62.75305939]
[70.04306030 56.56428528]
[80.41410065 52.67755127]
[91.05632019 51.14539719]
[101.45730591 51.90451050]
[104.24300385 37.16544724]
[107.02869415 22.42638779]
[109.81439209 7.68732738]
[112.60008240 -7.05173349]
[104.78427124 -21.06218147]
[110.99810028 -35.85298920]
[126.47483826 -40.07791138]
[139.34207153 -30.49595451]
[139.72915649 -14.45757103]
[127.33914948 -4.26603889]
[124.55345154 10.47302151]
[121.76775360 25.21208191]
[118.98206329 39.95114136]
[116.19636536 54.69020462]
[123.56945801 58.05026245]
[130.27421570 62.59984207]
[136.12052917 68.20993805]
[140.94259644 74.72147369]
[144.60369873 81.94980621]
[147.00003052 89.68996429]
[161.97354126 88.79895782]
[173.33314514 75.50999451]
[190.45155334 74.55548096]
[202.72500610 86.03827667]
[217.68122864 84.89313507]
[232.63745117 83.74799347]
[247.59368896 82.60285187]
[262.54989624 81.45771027]
[277.50613403 80.31256866]
[286.49322510 71.03998566]
[298.98910522 70.40583038]
[308.25430298 78.20514679]
[323.22781372 77.31414032]
[338.20135498 76.42313385]
[353.17486572 75.53211975]
[368.14837646 74.64111328]
[383.12188721 73.75010681]
[398.08728027 72.73199463]
[413.04351807 71.58685303]
[427.99972534 70.44171143]
[434.56887817 56.55855942]
[447.20861816 47.83317184]
[462.51895142 46.61263657]
[476.38143921 53.22526932]
[485.06716919 65.89230347]
[486.23971558 81.20637512]
[479.58364868 95.04806519]
[466.88946533 103.69404602]
[451.57177734 104.81858063]
[437.75103760 98.11917114]
[429.14486694 85.39793396]
[414.18865967 86.54307556]
[399.23242188 87.68821716]
[392.78839111 91.34214020]
[384.01287842 88.72361755]
[369.03936768 89.61462402]
[354.06585693 90.50563812]
[339.09234619 91.39664459]
[324.11883545 92.28765106]
[309.14532471 93.17865753]
[295.05163574 103.61867523]
[278.65127563 95.26879883]
[263.69503784 96.41394043]
[248.73881531 97.55908203]
[233.78259277 98.70422363]
[218.82637024 99.84936523]
[203.87014771 100.99450684]
[196.92216492 111.86175537]
[184.80007935 116.81025696]
[171.85235596 113.82249451]
[162.86456299 103.77246857]
[147.89103699 104.66348267]
[148.70420837 114.08198547]
[147.60325623 123.93245697]
[144.46324158 133.81732178]
[139.24278259 143.30917358]
[131.99041748 151.96836853]
[122.84736633 159.36195374]
[128.32183838 173.32727051]
[133.79631042 187.29260254]
[139.27078247 201.25791931]
[150.68077087 213.79779053]
[141.78956604 228.23326111]
[125.45690918 223.68565369]
[125.30545807 206.73239136]
[119.83098602 192.76707458]
[114.35651398 178.80174255]
[108.88204956 164.83642578]
[94.14299011 167.62211609]
[94.14299011 182.62211609]
[94.14299011 197.62211609]
[104.42475891 209.93734741]
[101.06587219 225.62484741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 182]
[4 181]
[5 180]
[6 17]
[7 16]
[8 15]
[9 14]
[18 81]
[19 80]
[20 79]
[21 78]
[24 72]
[25 71]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[32 65]
[33 64]
[34 63]
[35 62]
[37 60]
[38 59]
[39 58]
[40 57]
[41 56]
[46 55]
[47 54]
[48 53]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[111 163]
[112 162]
[115 158]
[116 157]
[117 156]
[118 155]
[119 154]
[120 153]
[123 151]
[124 150]
[125 149]
[126 148]
[127 147]
[128 146]
[129 144]
[130 143]
[131 142]
[169 179]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
