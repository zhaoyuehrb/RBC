%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCGCCGAGGGUGACGCGUGGCGUAGACGACGCCGUCGGCCUGCGCCUGUCACCCCCCUCCUCCCGGGGUUUGUAGCGGAGGAGGAGCGGGCGCCAUGGCGGUUCUACUGGAGACCACUUUAGGCGACGUCGUCAUCGACUUGUACACCGAAGAACGGCCGCGUGCCUGCUUGAAUUUCUUGAAACUGUGCAAAA\
) } def
/len { sequence length } bind def

/coor [
[83.29096985 199.59625244]
[78.32614136 184.89488220]
[82.98287201 170.09304810]
[95.47056580 160.88233948]
[95.23257446 145.88423157]
[94.99459076 130.88612366]
[94.75659943 115.88800812]
[88.29135895 112.08659363]
[75.24204254 119.48357391]
[75.36089325 104.48377991]
[68.89565277 100.68236542]
[55.67385101 107.76643372]
[42.45205307 114.85050201]
[29.23025131 121.93456268]
[16.00845146 129.01863098]
[2.78665090 136.10269165]
[-10.43514919 143.18676758]
[-23.65695000 150.27082825]
[-26.41779327 154.72590637]
[-30.23277473 157.40203857]
[-34.24484634 158.19586182]
[-37.68073273 157.36033630]
[-51.22463226 163.80726624]
[-64.76853180 170.25418091]
[-78.31242371 176.70111084]
[-91.85632324 183.14804077]
[-105.40022278 189.59495544]
[-118.94412231 196.04188538]
[-129.02473450 211.44581604]
[-146.44786072 209.38619995]
[-159.88777161 216.04721069]
[-173.32766724 222.70820618]
[-186.76757812 229.36920166]
[-198.27436829 241.82031250]
[-213.42428589 234.21003723]
[-210.30532837 217.54544067]
[-193.42857361 215.92929077]
[-179.98867798 209.26829529]
[-166.54876709 202.60729980]
[-153.10885620 195.94630432]
[-148.94338989 184.58244324]
[-137.79191589 178.92565918]
[-125.39104462 182.49798584]
[-111.84714508 176.05105591]
[-98.30324554 169.60414124]
[-84.75935364 163.15721130]
[-71.21545410 156.71028137]
[-57.67155457 150.26336670]
[-44.12765503 143.81643677]
[-30.74101639 137.04902649]
[-17.51921654 129.96496582]
[-4.29741526 122.88089752]
[8.92438507 115.79682922]
[22.14618492 108.71276093]
[35.36798477 101.62870026]
[48.58978653 94.54463196]
[61.81158829 87.46056366]
[74.84681702 89.04566193]
[87.15063477 92.91004944]
[76.13175964 82.73241425]
[65.11288452 72.55477142]
[54.09400940 62.37712860]
[43.07513428 52.19948578]
[32.05625916 42.02184677]
[21.03738213 31.84420586]
[10.01850700 21.66656494]
[-3.95457458 27.72237778]
[-19.18267441 27.56478310]
[-33.02743530 21.22108459]
[-43.09016418 9.79036427]
[-47.62743759 -4.74693489]
[-45.85314178 -19.87213707]
[-38.07468414 -32.96471024]
[-25.63973045 -41.75629044]
[-10.70271301 -44.72367859]
[4.14844131 -41.35275650]
[16.34067917 -32.22755814]
[23.76162338 -18.92908287]
[25.12554932 -3.76136756]
[20.19614792 10.64768887]
[31.21502304 20.82532883]
[42.23389816 31.00297165]
[53.25277328 41.18061066]
[64.27165222 51.35825348]
[75.29052734 61.53589249]
[86.30940247 71.71353912]
[97.32827759 81.89117432]
[112.27119446 83.19850922]
[124.88999939 75.08889771]
[137.50880432 66.97928619]
[150.12760925 58.86967468]
[162.74641418 50.76006317]
[175.36521912 42.65045166]
[187.98400879 34.54084015]
[200.60281372 26.43122673]
[213.22161865 18.32161522]
[216.72416687 5.90086174]
[227.41023254 -0.59243387]
[239.26254272 1.85937810]
[252.00842285 -6.04900408]
[264.75430298 -13.95738602]
[277.50018311 -21.86576843]
[285.14724731 -35.71615219]
[300.04122925 -35.85171127]
[312.78710938 -43.76009369]
[325.53298950 -51.66847610]
[338.27886963 -59.57685852]
[351.02474976 -67.48523712]
[354.24688721 -94.29824829]
[381.75845337 -107.19161224]
[390.06726074 -119.68016052]
[398.37606812 -132.16871643]
[406.68484497 -144.65725708]
[414.99365234 -157.14579773]
[423.30245972 -169.63435364]
[423.80200195 -186.02589417]
[438.37338257 -193.54965210]
[452.02679443 -184.46583557]
[450.71682739 -168.11909485]
[435.79101562 -161.32554626]
[427.48220825 -148.83700562]
[419.17340088 -136.34844971]
[410.86459351 -123.85990906]
[402.55581665 -111.37136078]
[394.24700928 -98.88281250]
[403.79736328 -87.31601715]
[417.63265991 -93.11119080]
[431.46798706 -98.90637207]
[445.30328369 -104.70154572]
[452.01837158 -110.91004181]
[459.40438843 -110.47698975]
[473.32989502 -116.05192566]
[487.25543213 -121.62686157]
[501.18093872 -127.20179749]
[510.88739014 -140.41986084]
[527.15588379 -138.35415649]
[533.25085449 -123.12971497]
[522.90228271 -110.40813446]
[506.75588989 -113.27628326]
[492.83035278 -107.70133972]
[478.90484619 -102.12640381]
[464.97933960 -96.55146790]
[451.09848022 -90.86623383]
[437.26315308 -85.07106018]
[423.42785645 -79.27587891]
[409.59252930 -73.48070526]
[407.17510986 -64.46945190]
[402.44100952 -56.72056961]
[395.89501953 -50.79250717]
[388.16452026 -47.06522751]
[379.94122314 -45.71735764]
[371.91983032 -46.72146225]
[364.73953247 -49.85703659]
[358.93313599 -54.73935699]
[346.18725586 -46.83097839]
[333.44137573 -38.92259598]
[320.69549561 -31.01421356]
[307.94961548 -23.10583115]
[301.21423340 -9.82110786]
[285.40856934 -9.11988640]
[272.66268921 -1.21150446]
[259.91680908 6.69687748]
[247.17091370 14.60525990]
[239.73510742 30.49601936]
[221.33123779 30.94041824]
[208.71243286 39.05002975]
[196.09362793 47.15964127]
[183.47482300 55.26925278]
[170.85601807 63.37886810]
[158.23721313 71.48847961]
[145.61842346 79.59809113]
[132.99961853 87.70770264]
[120.38081360 95.81731415]
[135.34280396 94.75023651]
[148.98315430 88.50997925]
[163.94309998 87.41448975]
[178.34700012 91.60110474]
[190.38893127 100.54492950]
[198.55911255 113.12460327]
[201.83317566 127.76292419]
[199.80064392 142.62457275]
[192.71635437 155.84625244]
[181.46849060 165.77024841]
[167.46731567 171.15232849]
[152.46821594 171.31770325]
[138.35177612 166.24562073]
[126.88785553 156.57202148]
[119.51377106 143.50975037]
[117.15404510 128.69799805]
[109.75470734 115.65001678]
[109.99269867 130.64813232]
[110.23069000 145.64624023]
[110.46868134 160.64434814]
[123.24232483 169.45420837]
[128.36634827 184.10084534]
[123.87045288 198.95233154]
[111.48341370 208.29797363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 193]
[5 192]
[6 191]
[7 190]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[17 51]
[18 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[30 40]
[31 39]
[32 38]
[33 37]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[88 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[94 167]
[95 166]
[96 165]
[99 163]
[100 162]
[101 161]
[102 160]
[104 158]
[105 157]
[106 156]
[107 155]
[108 154]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[115 120]
[126 146]
[127 145]
[128 144]
[129 143]
[131 142]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
