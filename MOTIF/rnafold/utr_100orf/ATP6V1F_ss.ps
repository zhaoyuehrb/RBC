%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUCGAAGGGUGGGGGUUGAGGCCGACGGGGCGCCGUACGGCGGAGGCGGGGUUUCAGUGGCUUCUGGUGCUCUAGGGUGAGCUCUGCCCGGCUGCAGGGAUGGCGGGGAGGGGUAAGCUCAUCGCAGUGAUCGGAGACGAGGACACGGUGACUGGUUUCCUGCUGGGCGGCAUAGGGGAGCUUAACAAGAACCGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[112.03726959 560.86560059]
[111.55865479 576.16363525]
[104.01542664 589.48120117]
[91.14095306 597.75811768]
[75.89370728 599.09228516]
[61.77738953 593.17718506]
[52.03582382 581.37207031]
[48.90755463 566.38970947]
[53.11143494 551.67285156]
[63.68143845 540.60333252]
[78.18865967 535.72491455]
[80.50077820 520.90417480]
[82.81289673 506.08346558]
[85.12501526 491.26272583]
[87.43713379 476.44198608]
[81.75410461 462.67419434]
[91.52610779 450.23156738]
[93.83822632 435.41085815]
[96.15034485 420.59011841]
[98.46246338 405.76937866]
[91.97696686 402.00262451]
[78.96730042 409.46914673]
[79.00597382 394.46914673]
[72.52047729 390.70242310]
[60.79300690 400.05477905]
[49.06553650 409.40710449]
[45.84768295 425.12414551]
[31.48847771 432.27905273]
[17.00307274 425.38320923]
[13.50343132 409.72653198]
[23.67417908 397.31945801]
[39.71318817 397.67962646]
[51.44066238 388.32730103]
[63.16813278 378.97494507]
[70.29659271 365.77703857]
[71.68742371 350.84164429]
[73.07824707 335.90628052]
[74.46907043 320.97088623]
[75.85989380 306.03549194]
[69.33601379 292.64566040]
[78.31955719 279.62234497]
[79.71038055 264.68695068]
[81.10120392 249.75157166]
[82.49202728 234.81619263]
[83.76724243 219.87049866]
[84.92677307 204.91539001]
[86.08630371 189.96026611]
[87.24582672 175.00515747]
[88.40535736 160.05003357]
[89.56488800 145.09492493]
[81.73236084 132.30229187]
[67.88529968 126.53523254]
[54.03823471 120.76818848]
[40.19116974 115.00113678]
[26.34410858 109.23408508]
[10.62989235 111.07093048]
[1.85562921 99.03507996]
[-11.99143314 93.26803589]
[-25.83849525 87.50098419]
[-39.68555832 81.73394012]
[-54.20118713 87.98470306]
[-68.85414886 82.06301880]
[-74.95109558 67.48210907]
[-68.87481689 52.89257812]
[-54.23027039 46.95013046]
[-39.70579529 53.18031311]
[-33.91851044 67.88687134]
[-20.07144737 73.65392303]
[-6.22438431 79.42097473]
[7.62267828 85.18801880]
[22.34646034 82.93868256]
[32.11115646 95.38702393]
[45.95822144 101.15407562]
[59.80528259 106.92112732]
[73.65234375 112.68817139]
[87.49940491 118.45522308]
[79.33224487 105.24980927]
[81.92337799 90.63643646]
[93.05699158 81.89402771]
[93.52119446 66.90120697]
[93.98539734 51.90839386]
[94.44960022 36.91557693]
[94.91379547 21.92276192]
[95.37799835 6.92994690]
[95.84220123 -8.06286907]
[96.30639648 -23.05568504]
[93.44264984 -31.73650360]
[96.89557648 -38.27642059]
[97.59173584 -53.26025772]
[98.28790283 -68.24409485]
[98.98406219 -83.22792816]
[99.68022156 -98.21176910]
[86.39573669 -111.71169281]
[87.17733765 -130.31607056]
[101.06301117 -142.23808289]
[101.29514313 -157.23629761]
[101.52726746 -172.23449707]
[101.75939941 -187.23269653]
[89.81965637 -197.33105469]
[87.21533966 -212.75024414]
[95.17612457 -226.20980835]
[109.94317627 -231.35455322]
[124.54393005 -225.75527954]
[132.08438110 -212.05580139]
[129.00413513 -196.72459412]
[116.75759888 -187.00057983]
[116.52547455 -172.00236511]
[116.29334259 -157.00416565]
[116.06121826 -142.00596619]
[125.59512329 -135.72572327]
[130.96649170 -125.51603699]
[130.73709106 -113.86195374]
[124.84823608 -103.66385651]
[114.66406250 -97.51560211]
[113.96790314 -82.53176880]
[113.27173615 -67.54792786]
[112.57557678 -52.56409454]
[111.87941742 -37.58025742]
[111.29921722 -22.59148407]
[110.83501434 -7.59866810]
[110.37081146 7.39414740]
[109.90661621 22.38696289]
[109.44241333 37.37977982]
[108.97821045 52.37259293]
[108.51400757 67.36540985]
[108.04981232 82.35822296]
[120.84078217 99.91716766]
[109.41407013 120.20483398]
[123.73620605 115.74655151]
[138.05834961 111.28826904]
[152.38049316 106.82998657]
[163.25735474 95.34066772]
[177.70913696 98.94552612]
[192.03128052 94.48724365]
[206.35342407 90.02896118]
[220.67556763 85.57067871]
[222.86050415 70.46475983]
[231.39039612 57.80759811]
[244.57162476 50.11228943]
[259.78707886 48.90674210]
[274.01565552 54.43031311]
[284.43231201 65.58629608]
[288.96881104 80.15966797]
[286.72439575 95.25686646]
[278.14471436 107.88033295]
[264.93328857 115.52367401]
[249.71322632 116.66929626]
[235.50648499 111.08973694]
[225.13385010 99.89281464]
[210.81170654 104.35109711]
[196.48956299 108.80937958]
[182.16741943 113.26766968]
[172.31497192 124.43810272]
[156.83877563 121.15212250]
[142.51663208 125.61040497]
[128.19448853 130.06869507]
[113.87235260 134.52697754]
[104.52000427 146.25444031]
[103.36047363 161.20956421]
[102.20094299 176.16467285]
[101.04141998 191.11979675]
[99.88188934 206.07490540]
[98.72235870 221.03002930]
[101.18013763 229.83439636]
[97.42740631 236.20701599]
[96.03658295 251.14239502]
[94.64575958 266.07778931]
[93.25493622 281.01315308]
[99.67933655 295.47131348]
[90.79527283 307.42633057]
[89.40444946 322.36169434]
[88.01362610 337.29708862]
[86.62280273 352.23248291]
[85.23197937 367.16784668]
[119.07824707 361.02929688]
[154.10992432 391.24261475]
[163.37124634 403.04211426]
[172.63256836 414.84158325]
[181.89389038 426.64108276]
[197.30589294 432.24484253]
[199.89205933 448.43878174]
[186.99195862 458.56396484]
[171.87611389 452.20446777]
[170.09440613 435.90240479]
[160.83308411 424.10290527]
[151.57176208 412.30343628]
[142.31044006 400.50393677]
[135.05363464 402.39834595]
[143.14190674 415.03082275]
[133.62709045 426.62686157]
[119.65836334 421.16110229]
[120.54000854 406.18710327]
[113.28319550 408.08151245]
[110.97107697 422.90222168]
[108.65895844 437.72296143]
[106.34683990 452.54370117]
[111.86449432 467.37158203]
[102.25786591 478.75411987]
[99.94574738 493.57482910]
[97.63362885 508.39556885]
[95.32151031 523.21630859]
[93.00939178 538.03704834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[17 196]
[18 195]
[19 194]
[20 193]
[24 34]
[25 33]
[26 32]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[41 168]
[42 167]
[43 166]
[44 165]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[51 76]
[52 75]
[53 74]
[54 73]
[55 72]
[57 70]
[58 69]
[59 68]
[60 67]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[95 109]
[96 108]
[97 107]
[98 106]
[128 157]
[129 156]
[130 155]
[131 154]
[133 152]
[134 151]
[135 150]
[136 149]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
