%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCUGCAACUCAGAGAUUCACUCAGAAGACUGGACACAAUUCCGAAGGUCGCCCAGAAGGAGAGGACAAUGUCAUUUCUAACUGUGCCAUACAAACUGCCUGUGUCUUUGUCUGUUGGUUCCUGCGUGAUAAUCAAAGGGACACUGAUCGACUCUUCUAUCAACGAAC\
) } def
/len { sequence length } bind def

/coor [
[22.59605598 113.36363983]
[31.64822769 101.40294647]
[44.62300491 93.87598419]
[59.49950790 91.95512390]
[73.95776367 95.93808746]
[88.61019897 99.14838409]
[77.29057312 89.30632782]
[65.97094727 79.46427155]
[54.65131760 69.62221527]
[34.73044586 66.71480560]
[29.14793968 48.22656631]
[17.47030640 38.81206512]
[5.79267120 29.39756393]
[-5.88496351 19.98306084]
[-17.56259727 10.56855869]
[-29.24023247 1.15405667]
[-40.91786575 -8.26044559]
[-56.51761246 -10.89833832]
[-61.56972122 -24.90995789]
[-73.24735260 -34.32445908]
[-88.75238037 -32.83047485]
[-100.46104431 -42.54447174]
[-101.78977966 -57.33534622]
[-113.46741486 -66.74984741]
[-125.14505005 -76.16435242]
[-146.87023926 -67.53231049]
[-170.07788086 -75.43244171]
[-183.19380188 -97.47994995]
[-198.08442688 -95.67189789]
[-212.97506714 -93.86384583]
[-227.86569214 -92.05580139]
[-242.70013428 -89.83329773]
[-257.46682739 -87.19806671]
[-272.23355103 -84.56283569]
[-281.06500244 -71.45632172]
[-296.59326172 -68.51545715]
[-309.60568237 -77.48500061]
[-312.38220215 -93.04348755]
[-303.27557373 -105.96033478]
[-287.68862915 -108.57221985]
[-274.86877441 -99.32954407]
[-260.10205078 -101.96476746]
[-245.33535767 -104.59999847]
[-243.01817322 -107.30809021]
[-239.25688171 -109.00939941]
[-234.54803467 -109.02973938]
[-229.67375183 -106.94643402]
[-214.78311157 -108.75447845]
[-199.89248657 -110.56253052]
[-185.00184631 -112.37058258]
[-178.65554810 -125.96192169]
[-186.82904053 -138.53944397]
[-200.83647156 -145.89486694]
[-201.28381348 -160.78276062]
[-209.45729065 -173.36029053]
[-217.63076782 -185.93782043]
[-232.83230591 -189.33653259]
[-240.94219971 -202.20835876]
[-237.60836792 -216.67974854]
[-245.78184509 -229.25727844]
[-253.95533752 -241.83480835]
[-262.12881470 -254.41233826]
[-270.30230713 -266.98986816]
[-284.30972290 -274.34527588]
[-284.75708008 -289.23318481]
[-292.93054199 -301.81069946]
[-301.10403442 -314.38821411]
[-314.80462646 -324.37472534]
[-309.00109863 -340.30441284]
[-292.08737183 -339.13748169]
[-288.52651978 -322.56170654]
[-280.35302734 -309.98419189]
[-272.17953491 -297.40664673]
[-258.75674438 -290.95086670]
[-257.72476196 -275.16333008]
[-249.55128479 -262.58581543]
[-241.37780762 -250.00828552]
[-233.20433044 -237.43075562]
[-225.03083801 -224.85324097]
[-210.45281982 -222.02183533]
[-201.98457336 -209.38287354]
[-205.05325317 -194.11129761]
[-196.87976074 -181.53376770]
[-188.70628357 -168.95623779]
[-175.28346252 -162.50044250]
[-174.25151062 -146.71293640]
[-166.07803345 -134.13540649]
[-155.99902344 -138.14059448]
[-145.35433960 -139.09468079]
[-135.03404236 -137.00817871]
[-125.87564087 -132.14218140]
[-118.59607697 -124.97943115]
[-113.73578644 -116.17787170]
[-111.61907196 -106.51078796]
[-112.33364105 -96.79915619]
[-115.73055267 -87.84198761]
[-104.05291748 -78.42748260]
[-92.37528229 -69.01298523]
[-77.63919830 -70.85241699]
[-65.66230774 -61.47112274]
[-63.83285141 -46.00209427]
[-52.15522003 -36.58759308]
[-37.39073563 -34.62308884]
[-31.50336456 -19.93807983]
[-19.82573128 -10.52357769]
[-8.14809608 -1.10907578]
[3.52953863 8.30542660]
[15.20717335 17.71992874]
[26.88480759 27.13442993]
[38.56244278 36.54893112]
[48.63290405 34.54642868]
[58.33832169 38.52095413]
[64.35939026 47.37553024]
[64.49337006 58.30258942]
[75.81300354 68.14464569]
[87.13262939 77.98670197]
[98.45225525 87.82875061]
[112.15921783 93.92131042]
[127.04985046 95.72936249]
[141.94047546 97.53741455]
[156.83111572 99.34545898]
[171.72174072 101.15351105]
[186.61238098 102.96156311]
[194.81347656 95.73933411]
[205.42079163 94.27584076]
[214.87425232 98.81718445]
[220.13549805 107.63442230]
[234.94863892 109.99470520]
[249.76176453 112.35499573]
[266.35498047 108.87630463]
[274.29119873 123.85805511]
[262.09188843 135.63146973]
[247.40148926 127.16812897]
[232.58834839 124.80784607]
[217.77520752 122.44755554]
[200.31054688 130.69165039]
[184.80433655 117.85219574]
[169.91369629 116.04414368]
[155.02307129 114.23609161]
[140.13243103 112.42804718]
[125.24179840 110.61999512]
[110.35116577 108.81194305]
[106.38202667 115.17558289]
[98.44374847 127.90287018]
[94.47460938 134.26651001]
[102.64809418 146.84403992]
[110.82157898 159.42156982]
[118.99505615 171.99909973]
[133.00250244 179.35452271]
[133.44982910 194.24240112]
[141.62332153 206.81993103]
[156.47491455 213.77421570]
[157.60833740 230.13415527]
[143.85762024 239.07003784]
[129.36831665 231.38938904]
[129.04579163 214.99340820]
[120.87230682 202.41587830]
[107.44949341 195.96009827]
[106.41753387 180.17257690]
[98.24404907 167.59504700]
[90.07056427 155.01751709]
[81.89708710 142.44000244]
[83.04000092 157.39639282]
[70.34877014 165.39218140]
[55.55234528 167.85505676]
[40.95534134 164.40142822]
[28.83131981 155.56921387]
[21.06865311 142.73406982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 117]
[7 116]
[8 115]
[9 114]
[11 110]
[12 109]
[13 108]
[14 107]
[15 106]
[16 105]
[17 104]
[19 102]
[20 101]
[23 98]
[24 97]
[25 96]
[28 50]
[29 49]
[30 48]
[31 47]
[32 43]
[33 42]
[34 41]
[51 87]
[52 86]
[54 84]
[55 83]
[56 82]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[65 73]
[66 72]
[67 71]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[123 137]
[127 135]
[128 134]
[129 133]
[145 162]
[146 161]
[147 160]
[148 159]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
