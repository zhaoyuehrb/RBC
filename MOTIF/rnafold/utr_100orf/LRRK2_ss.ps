%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCUGGCUGCGGGCGGUGAGCUGAGCUCGCCCCCGGGGAGCUGUGGCCGGCGCCCCUGCCGGUUCCCUGAGCAGCGGACGUUCAUGCUGGGAGGGCGGCGGGUUGGAAGCAGGUGCCACCAUGGCUAGUGGCAGCUGUCAGGGGUGCGAAGAGGACGAGGAAACUCUGAAGAAGUUGAUAGUCAGGCUGAACAAUGUCCAGGAAGGAAAACAGAUAGAAA\
) } def
/len { sequence length } bind def

/coor [
[65.27876282 216.77850342]
[66.30158234 201.50720215]
[74.31405640 188.46653748]
[87.47497559 180.65316772]
[86.62635040 165.67718506]
[85.77771759 150.70120239]
[75.15587616 134.98635864]
[72.80598450 118.97901917]
[63.54877853 130.78173828]
[61.12011719 146.41542053]
[47.17744064 151.65480042]
[37.92023087 163.45750427]
[28.66302490 175.26022339]
[19.40581512 187.06294250]
[16.57540894 195.73912048]
[9.93314838 198.96595764]
[0.50984859 210.63648987]
[-8.91345119 222.30702209]
[-18.33675194 233.97755432]
[-27.76005173 245.64810181]
[-37.18334961 257.31863403]
[-46.60665131 268.98916626]
[-51.85284424 285.11102295]
[-68.79692841 284.53280640]
[-72.93191528 268.09085083]
[-58.27718735 259.56585693]
[-48.85388947 247.89533997]
[-39.43058777 236.22479248]
[-30.00728798 224.55426025]
[-20.58398819 212.88372803]
[-11.16068745 201.21319580]
[-1.73738778 189.54264832]
[7.60310030 177.80574036]
[16.86030960 166.00302124]
[26.11751747 154.20030212]
[35.37472534 142.39758301]
[37.14125061 127.60810852]
[51.74606323 121.52452850]
[61.00327301 109.72180939]
[60.15464783 94.74583435]
[49.62335968 84.06445312]
[39.09207153 73.38307190]
[28.56078339 62.70168304]
[18.02949524 52.02030182]
[7.49820662 41.33891678]
[-3.03308177 30.65753174]
[-13.56437016 19.97614670]
[-26.42787743 19.10607338]
[-34.97919083 9.99949265]
[-35.03457642 -2.09187937]
[-45.41366196 -12.92122078]
[-55.79274368 -23.75056267]
[-66.17182922 -34.57990265]
[-76.55091095 -45.40924454]
[-86.92999268 -56.23858643]
[-97.97719574 -66.38547516]
[-109.64772797 -75.80877686]
[-121.31826782 -85.23207092]
[-132.98880005 -94.65537262]
[-144.65934753 -104.07867432]
[-156.32987976 -113.50197601]
[-168.00041199 -122.92527771]
[-173.14146423 -123.73113251]
[-177.07035828 -126.17964935]
[-179.36499023 -129.53608704]
[-179.95512390 -133.00460815]
[-191.21520996 -142.91473389]
[-202.47529602 -152.82485962]
[-213.73538208 -162.73497009]
[-226.98416138 -160.33615112]
[-239.02088928 -165.92193604]
[-245.54820251 -177.25120544]
[-244.37858582 -190.07855225]
[-255.49731445 -200.14701843]
[-266.61602783 -210.21549988]
[-277.73474121 -220.28396606]
[-288.85348511 -230.35243225]
[-304.01232910 -227.03753662]
[-318.21099854 -233.29670715]
[-325.98980713 -246.72317505]
[-324.35763550 -262.15417480]
[-313.94210815 -273.65615845]
[-298.74816895 -276.80642700]
[-284.61822510 -270.39358521]
[-276.98553467 -256.88354492]
[-278.78500366 -241.47114563]
[-267.66629028 -231.40267944]
[-256.54757690 -221.33421326]
[-245.42884827 -211.26574707]
[-234.31011963 -201.19728088]
[-217.56002808 -202.74481201]
[-204.62106323 -191.47421265]
[-203.82525635 -173.99505615]
[-192.56517029 -164.08494568]
[-181.30508423 -154.17481995]
[-170.04501343 -144.26469421]
[-158.57711792 -134.59580994]
[-146.90657043 -125.17250824]
[-135.23603821 -115.74921417]
[-123.56550598 -106.32591248]
[-111.89496613 -96.90261078]
[-100.22443390 -87.47930908]
[-88.55389404 -78.05600739]
[-91.91925049 -92.67361450]
[-86.94281006 -106.82405853]
[-75.16845703 -116.11731720]
[-60.24906158 -117.67025757]
[-46.81320190 -111.00109100]
[-39.02921295 -98.17886353]
[-39.31199265 -83.18152618]
[-47.57381439 -70.66184998]
[-61.25152969 -64.50392151]
[-76.10065460 -66.61766815]
[-65.72156525 -55.78832626]
[-55.34248734 -44.95898819]
[-44.96340179 -34.12964630]
[-34.58432007 -23.30030441]
[-24.20523643 -12.47096252]
[-7.11237288 -8.48084068]
[-2.88298559 9.44485950]
[7.64830256 20.12624359]
[18.17959023 30.80762863]
[28.71087837 41.48901367]
[39.24216843 52.17039490]
[49.77345657 62.85177994]
[60.30474472 73.53316498]
[70.83602905 84.21454620]
[83.29132843 65.83041382]
[107.05138397 57.67324448]
[133.77365112 66.19667053]
[151.93472290 91.30108643]
[166.68159485 88.55712128]
[181.42848206 85.81314850]
[196.15019226 72.03472137]
[214.08175659 79.28216553]
[228.74508667 76.12197876]
[243.40841675 72.96179199]
[258.07174683 69.80159760]
[272.73507690 66.64141083]
[287.39840698 63.48122406]
[302.06173706 60.32103348]
[316.72506714 57.16084290]
[318.35003662 42.92904663]
[324.28088379 29.91383743]
[333.92599487 19.38154411]
[346.33312988 12.35242081]
[360.28335571 9.50181484]
[374.41079712 11.09530926]
[387.33648682 16.96402931]
[397.80276489 26.52243996]
[404.79586792 38.82672882]
[419.50244141 35.87435532]
[434.20901489 32.92198181]
[448.91558838 29.96960831]
[453.75073242 15.39164162]
[465.23770142 5.19631243]
[480.28662109 2.12611318]
[494.84936523 7.00691175]
[505.00863647 18.52579880]
[508.03164673 33.58425140]
[503.10522461 48.13161850]
[491.55453491 58.25473404]
[476.48669434 61.23053360]
[461.95483398 56.25853729]
[451.86798096 44.67618942]
[437.16140747 47.62856293]
[422.45480347 50.58093643]
[407.74822998 53.53330994]
[405.57574463 69.13092804]
[398.17980957 83.06475067]
[386.43881226 93.64059448]
[371.76077271 99.56543732]
[355.91442871 100.10550690]
[340.81604004 95.17709351]
[328.29772949 85.35890961]
[319.88525391 71.82417297]
[305.22192383 74.98435974]
[290.55859375 78.14455414]
[275.89526367 81.30474091]
[261.23193359 84.46492767]
[246.56860352 87.62511444]
[231.90527344 90.78530884]
[217.24194336 93.94549561]
[212.50144958 102.98648834]
[203.37744141 108.03558350]
[192.76159668 107.21694946]
[184.17245483 100.56003571]
[169.42556763 103.30400085]
[154.67868042 106.04797363]
[151.58943176 112.88218689]
[165.84655762 117.54415894]
[180.84449768 117.29529572]
[189.08248901 129.83067322]
[182.90347290 143.49887085]
[168.05072021 145.59555054]
[158.32984924 134.17300415]
[145.41090393 126.55061340]
[142.32164001 133.38482666]
[150.00471497 146.26777649]
[157.68778992 159.15072632]
[172.82635498 164.46144104]
[177.97674561 179.65528870]
[169.18803406 193.07684326]
[153.20216370 194.43023682]
[142.28213501 182.67726135]
[144.80484009 166.83380127]
[137.12176514 153.95085144]
[129.43870544 141.06790161]
[122.26744843 143.26406860]
[118.90010834 157.88122559]
[107.92494965 147.65641785]
[100.75369263 149.85258484]
[101.60232544 164.82855225]
[102.45095062 179.80453491]
[116.41027832 186.08113098]
[125.84465027 198.13314819]
[128.58610535 213.19113159]
[124.00469208 227.79487610]
[113.15316772 238.58853149]
[98.52513885 243.09179688]
[83.48202515 240.26986694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 214]
[5 213]
[6 212]
[8 39]
[9 38]
[11 36]
[12 35]
[13 34]
[14 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[40 127]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 121]
[47 120]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
[55 113]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[66 96]
[67 95]
[68 94]
[69 93]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[131 189]
[132 188]
[133 187]
[135 183]
[136 182]
[137 181]
[138 180]
[139 179]
[140 178]
[141 177]
[142 176]
[151 168]
[152 167]
[153 166]
[154 165]
[198 208]
[199 207]
[200 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
