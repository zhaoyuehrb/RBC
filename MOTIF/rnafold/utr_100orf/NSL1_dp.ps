%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NSL1)
} def

/sequence { (\
UCCCAGAGUGCCCCGCCCACAGUUCCGACGAAAAAUGGCGGGGUCUCCUGAGUUGGUGGUCCUUGACCCUCCAUGGGACAAGGAGCUCGCGGCUGGCACAGAGAGCCAGGCCUUGGUCUCCGCCACUCCCCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.022172915 ubox
1 51 0.037156347 ubox
1 56 0.005835870 ubox
1 59 0.062491118 ubox
1 78 0.016091074 ubox
1 133 0.100009344 ubox
2 6 0.023781299 ubox
2 50 0.041831585 ubox
2 55 0.008066124 ubox
2 56 0.046713818 ubox
2 58 0.085208797 ubox
2 59 0.021953820 ubox
2 77 0.017862032 ubox
2 132 0.106653714 ubox
3 55 0.047103168 ubox
3 56 0.103458443 ubox
3 58 0.021565354 ubox
3 59 0.042773826 ubox
3 76 0.017870487 ubox
3 116 0.003332453 ubox
4 10 0.006059721 ubox
4 50 0.338659624 ubox
4 55 0.103662360 ubox
4 58 0.042996000 ubox
4 75 0.017835241 ubox
4 115 0.003349699 ubox
5 9 0.005330611 ubox
5 46 0.026662133 ubox
5 49 0.385031826 ubox
5 54 0.102378088 ubox
5 57 0.041994483 ubox
5 74 0.015967966 ubox
6 45 0.029204884 ubox
6 47 0.932140384 ubox
6 48 0.286072057 ubox
6 53 0.028838350 ubox
6 88 0.004121922 ubox
6 128 0.019857289 ubox
7 44 0.019777536 ubox
7 46 0.971284688 ubox
7 49 0.059213071 ubox
7 87 0.004152455 ubox
7 127 0.019892231 ubox
8 45 0.970502652 ubox
8 48 0.060604115 ubox
8 86 0.004185461 ubox
8 126 0.019874871 ubox
9 50 0.003513876 ubox
9 85 0.003985011 ubox
9 125 0.018237444 ubox
10 44 0.968996540 ubox
10 124 0.007924322 ubox
11 42 0.004103110 ubox
11 43 0.999926654 ubox
12 41 0.003367737 ubox
12 42 0.999985516 ubox
13 41 0.999988705 ubox
14 40 0.999975055 ubox
15 39 0.999945460 ubox
16 38 0.959512817 ubox
17 37 0.915693800 ubox
17 38 0.281604266 ubox
18 37 0.398131477 ubox
19 36 0.472390407 ubox
20 37 0.016847901 ubox
21 36 0.033171921 ubox
22 29 0.119574550 ubox
22 36 0.043328404 ubox
23 28 0.110720722 ubox
23 31 0.110329757 ubox
23 32 0.952593702 ubox
23 33 0.048313015 ubox
23 34 0.036673129 ubox
23 35 0.042476043 ubox
24 30 0.103615272 ubox
24 31 0.973091457 ubox
24 32 0.040121238 ubox
24 33 0.035652700 ubox
24 34 0.036441747 ubox
25 30 0.972011552 ubox
27 36 0.003340429 ubox
44 51 0.004379462 ubox
44 59 0.004382587 ubox
44 133 0.010708894 ubox
45 50 0.008257909 ubox
45 58 0.012313653 ubox
45 59 0.004951518 ubox
45 132 0.016898787 ubox
45 134 0.176332626 ubox
46 58 0.004743172 ubox
46 78 0.004494572 ubox
46 133 0.182521244 ubox
47 56 0.017821169 ubox
47 59 0.003407683 ubox
47 77 0.004863693 ubox
47 132 0.183279021 ubox
48 55 0.022780773 ubox
48 56 0.010515837 ubox
48 58 0.005098631 ubox
48 59 0.008746587 ubox
48 76 0.004869096 ubox
48 134 0.116772744 ubox
49 55 0.010338555 ubox
49 58 0.008746367 ubox
49 75 0.004718299 ubox
49 89 0.011079180 ubox
49 132 0.038752724 ubox
49 133 0.117941872 ubox
50 54 0.004900819 ubox
50 57 0.005767789 ubox
50 71 0.003205016 ubox
50 74 0.003855191 ubox
50 88 0.015554222 ubox
50 128 0.925172372 ubox
50 131 0.022049208 ubox
51 70 0.003368014 ubox
51 87 0.016162360 ubox
51 94 0.076778412 ubox
51 127 0.957954926 ubox
52 69 0.003342309 ubox
52 74 0.006565634 ubox
52 86 0.016839893 ubox
52 90 0.016967440 ubox
52 93 0.085896940 ubox
52 126 0.961853707 ubox
53 73 0.005215426 ubox
53 85 0.016832648 ubox
53 89 0.016728584 ubox
53 92 0.085848781 ubox
53 125 0.678492427 ubox
53 133 0.041681694 ubox
54 73 0.041288742 ubox
54 84 0.005733752 ubox
54 89 0.004248299 ubox
54 91 0.083357878 ubox
54 122 0.003434520 ubox
54 125 0.694183805 ubox
54 132 0.044980609 ubox
55 68 0.004768255 ubox
55 70 0.005100592 ubox
55 71 0.004256617 ubox
55 72 0.045978492 ubox
55 87 0.021553868 ubox
55 88 0.005954087 ubox
55 90 0.081506073 ubox
55 121 0.004043893 ubox
55 124 0.976015105 ubox
55 127 0.040689866 ubox
55 128 0.009427917 ubox
55 129 0.003550466 ubox
55 130 0.004420686 ubox
55 131 0.046500756 ubox
56 67 0.004787178 ubox
56 69 0.005902076 ubox
56 70 0.003945636 ubox
56 71 0.045957198 ubox
56 86 0.028182351 ubox
56 87 0.003727654 ubox
56 90 0.051596532 ubox
56 120 0.003964749 ubox
56 123 0.976158394 ubox
56 126 0.045219132 ubox
56 129 0.004242737 ubox
56 130 0.045281564 ubox
57 66 0.004778942 ubox
57 85 0.027887021 ubox
57 89 0.055456570 ubox
57 122 0.975744133 ubox
57 125 0.046074893 ubox
58 68 0.046178209 ubox
58 69 0.013169559 ubox
58 87 0.078851496 ubox
58 88 0.056042686 ubox
58 118 0.004130175 ubox
58 119 0.005105296 ubox
58 120 0.009559162 ubox
58 121 0.975599684 ubox
58 124 0.046134413 ubox
58 127 0.005363516 ubox
58 128 0.009334877 ubox
58 129 0.042210017 ubox
59 67 0.046817658 ubox
59 68 0.010896196 ubox
59 79 0.020348632 ubox
59 86 0.100495265 ubox
59 87 0.031989013 ubox
59 90 0.004025978 ubox
59 118 0.008277441 ubox
59 119 0.009990176 ubox
59 120 0.965567777 ubox
59 123 0.046052150 ubox
59 126 0.006644780 ubox
59 127 0.006516666 ubox
59 128 0.041760220 ubox
60 66 0.047372461 ubox
60 78 0.020439241 ubox
60 84 0.881510999 ubox
60 85 0.053655878 ubox
60 116 0.004673186 ubox
60 122 0.041746114 ubox
60 125 0.005034607 ubox
61 65 0.046982384 ubox
61 77 0.020492762 ubox
61 83 0.996586995 ubox
62 76 0.020468245 ubox
62 82 0.998045860 ubox
63 75 0.019384983 ubox
63 81 0.997896545 ubox
64 73 0.016785508 ubox
64 80 0.997818355 ubox
65 71 0.005392786 ubox
65 72 0.017865805 ubox
65 79 0.996392897 ubox
66 70 0.004834889 ubox
67 76 0.024097323 ubox
67 77 0.996731543 ubox
68 75 0.023950451 ubox
68 76 0.997947195 ubox
68 77 0.024725254 ubox
69 75 0.997706913 ubox
69 76 0.025029718 ubox
69 77 0.006549979 ubox
69 85 0.003177392 ubox
69 134 0.010808545 ubox
70 75 0.022623909 ubox
70 76 0.006535335 ubox
70 78 0.008515768 ubox
70 84 0.003217017 ubox
70 133 0.011151649 ubox
71 75 0.007262637 ubox
71 77 0.008687915 ubox
71 83 0.003223487 ubox
71 132 0.011234445 ubox
72 76 0.008625779 ubox
72 82 0.003221122 ubox
74 132 0.008086602 ubox
75 130 0.042017916 ubox
75 131 0.012787191 ubox
76 129 0.042347754 ubox
76 130 0.012118281 ubox
77 128 0.042543820 ubox
77 129 0.011379273 ubox
78 127 0.041795100 ubox
82 121 0.059938371 ubox
83 118 0.011601427 ubox
83 119 0.003528672 ubox
83 120 0.073735670 ubox
84 94 0.029545840 ubox
84 117 0.015080327 ubox
84 119 0.328865193 ubox
85 93 0.042777829 ubox
85 97 0.008499053 ubox
85 106 0.013878008 ubox
85 111 0.012309717 ubox
85 117 0.625621248 ubox
85 118 0.454259094 ubox
86 92 0.042990638 ubox
86 96 0.008483894 ubox
86 103 0.008263302 ubox
86 105 0.013942859 ubox
86 110 0.012345101 ubox
86 116 0.669039064 ubox
86 134 0.167358899 ubox
87 91 0.038733271 ubox
87 95 0.006143112 ubox
87 102 0.008340858 ubox
87 104 0.013942710 ubox
87 109 0.010010273 ubox
87 115 0.258636300 ubox
87 116 0.575575594 ubox
87 133 0.173586774 ubox
88 95 0.005667300 ubox
88 101 0.008349749 ubox
88 103 0.013920714 ubox
88 109 0.005858285 ubox
88 115 0.911435223 ubox
88 132 0.175256173 ubox
89 94 0.003866065 ubox
89 97 0.017824461 ubox
89 111 0.037853999 ubox
89 114 0.899801960 ubox
89 117 0.042924301 ubox
89 123 0.004519968 ubox
89 131 0.175173243 ubox
90 96 0.017834471 ubox
90 110 0.037724723 ubox
90 115 0.023763887 ubox
90 116 0.044594343 ubox
90 122 0.004562563 ubox
90 132 0.013494638 ubox
91 107 0.020094839 ubox
91 112 0.976081180 ubox
91 113 0.010635652 ubox
91 114 0.005066780 ubox
91 121 0.004477026 ubox
91 127 0.022613130 ubox
91 128 0.021505572 ubox
91 129 0.125342488 ubox
91 130 0.122845079 ubox
91 131 0.015767129 ubox
92 106 0.020119007 ubox
92 111 0.976296839 ubox
92 112 0.009915725 ubox
92 113 0.003409486 ubox
92 120 0.004459277 ubox
92 126 0.024074479 ubox
92 127 0.020091519 ubox
92 128 0.125353968 ubox
92 129 0.122662132 ubox
92 130 0.015552601 ubox
93 101 0.005323238 ubox
93 105 0.020116263 ubox
93 109 0.641978787 ubox
93 110 0.738317337 ubox
94 100 0.005551931 ubox
94 104 0.020001619 ubox
94 108 0.905561218 ubox
94 109 0.363781554 ubox
94 125 0.180329441 ubox
95 99 0.005552616 ubox
95 107 0.978275323 ubox
95 118 0.006072039 ubox
95 124 0.201199224 ubox
96 106 0.978997453 ubox
96 117 0.006106938 ubox
96 123 0.201253051 ubox
97 105 0.978466528 ubox
97 116 0.006112556 ubox
97 122 0.201159495 ubox
98 117 0.003434767 ubox
99 115 0.005580931 ubox
99 116 0.003483002 ubox
100 114 0.004804225 ubox
100 119 0.006387656 ubox
101 114 0.004931309 ubox
101 118 0.006584914 ubox
101 120 0.201079764 ubox
102 113 0.006389795 ubox
102 117 0.004547645 ubox
102 119 0.201330530 ubox
103 112 0.007000618 ubox
103 118 0.201286320 ubox
103 120 0.012814152 ubox
104 117 0.171166607 ubox
104 119 0.013558803 ubox
105 111 0.007211408 ubox
105 117 0.105661018 ubox
105 118 0.013534008 ubox
106 110 0.007174057 ubox
106 116 0.201885070 ubox
107 115 0.202093375 ubox
108 114 0.196611633 ubox
108 119 0.031840075 ubox
109 113 0.133399145 ubox
109 118 0.036437015 ubox
110 117 0.036975582 ubox
111 116 0.036979970 ubox
113 133 0.003878289 ubox
114 122 0.007146443 ubox
114 125 0.038222892 ubox
114 132 0.004053091 ubox
115 121 0.014034724 ubox
115 124 0.045334011 ubox
115 131 0.004158547 ubox
116 120 0.014245069 ubox
116 123 0.045354047 ubox
116 130 0.004133377 ubox
117 122 0.042831625 ubox
126 134 0.109481011 ubox
127 133 0.111808585 ubox
128 132 0.111612050 ubox
6 47 0.9500000 lbox
7 46 0.9500000 lbox
8 45 0.9500000 lbox
10 44 0.9500000 lbox
11 43 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
50 128 0.9500000 lbox
51 127 0.9500000 lbox
52 126 0.9500000 lbox
53 125 0.9500000 lbox
55 124 0.9500000 lbox
56 123 0.9500000 lbox
57 122 0.9500000 lbox
58 121 0.9500000 lbox
59 120 0.9500000 lbox
60 84 0.9500000 lbox
61 83 0.9500000 lbox
62 82 0.9500000 lbox
63 81 0.9500000 lbox
64 80 0.9500000 lbox
65 79 0.9500000 lbox
67 77 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
85 117 0.9500000 lbox
86 116 0.9500000 lbox
88 115 0.9500000 lbox
89 114 0.9500000 lbox
91 112 0.9500000 lbox
92 111 0.9500000 lbox
93 110 0.9500000 lbox
94 108 0.9500000 lbox
95 107 0.9500000 lbox
96 106 0.9500000 lbox
97 105 0.9500000 lbox
showpage
end
%%EOF
