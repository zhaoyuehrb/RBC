%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGACGGCAGCGGCCCCGGCCUCCCUCUCCGCCGCGCUUCAGCCUCCCGCUCCGCCGCGCUCCAGCCUCGCUCUCCGCCGCCCGCACCGCCGCCCGCGCCCUCACCAGAGCAGCCAUGGAGGAGGUGGUGAUUGCCGGCAUGUCCGGGAAGCUGCCAGAGUCGGAGAACUUGCAGGAGUUCUGGGACAACCUCAUCGGCGGUGUGGACAUGGUCA\
) } def
/len { sequence length } bind def

/coor [
[-152.61492920 244.36593628]
[-166.14283752 250.84635925]
[-179.67073059 257.32678223]
[-193.19863892 263.80718994]
[-206.72654724 270.28762817]
[-212.23728943 286.89297485]
[-227.74827576 294.22833252]
[-243.44897461 288.19461060]
[-256.88208008 294.86932373]
[-270.31518555 301.54400635]
[-279.25762939 323.55484009]
[-302.15246582 327.17361450]
[-311.38360596 338.99673462]
[-320.61474609 350.81985474]
[-329.84585571 362.64297485]
[-325.06762695 375.56884766]
[-327.28131104 389.06097412]
[-335.80343628 399.61386108]
[-348.32565308 404.53930664]
[-361.53921509 402.65072632]
[-370.93975830 414.33959961]
[-372.91461182 430.61941528]
[-388.10479736 436.79925537]
[-400.88394165 426.52185059]
[-398.10598755 410.35971069]
[-382.62863159 404.93905640]
[-373.22808838 393.25018311]
[-378.03491211 377.55145264]
[-372.47988892 361.92507935]
[-358.56625366 352.59799194]
[-341.66897583 353.41183472]
[-332.43786621 341.58871460]
[-323.20672607 329.76559448]
[-313.97558594 317.94247437]
[-314.54953003 317.01995850]
[-315.07977295 316.07168579]
[-329.89172363 318.43954468]
[-344.70364380 320.80740356]
[-359.51556396 323.17529297]
[-367.24227905 339.58297729]
[-383.13391113 347.99057007]
[-400.73480225 345.19641113]
[-413.02239990 332.50656128]
[-427.75994873 335.30029297]
[-442.49746704 338.09402466]
[-452.68225098 350.48959351]
[-468.72085571 350.11126709]
[-478.30981445 337.24926758]
[-474.09332275 321.77020264]
[-459.30590820 315.54833984]
[-445.29119873 323.35650635]
[-430.55368042 320.56277466]
[-415.81613159 317.76904297]
[-412.32189941 306.14907837]
[-404.17208862 297.06231689]
[-392.86648560 292.27276611]
[-380.52511597 292.74514771]
[-369.49053955 298.45120239]
[-361.88342285 308.36334229]
[-347.07150269 305.99548340]
[-332.25958252 303.62762451]
[-317.44766235 301.25976562]
[-313.78451538 291.72772217]
[-306.33541870 284.59338379]
[-296.45932007 281.27951050]
[-286.01037598 282.50057983]
[-276.98989868 288.11090088]
[-263.55676270 281.43618774]
[-250.12365723 274.76150513]
[-247.76899719 262.09631348]
[-238.41099548 252.96232605]
[-225.30833435 250.85319519]
[-213.20695496 256.75970459]
[-199.67906189 250.27929688]
[-186.15115356 243.79887390]
[-172.62324524 237.31846619]
[-159.09535217 230.83804321]
[-149.35998535 214.12799072]
[-129.28512573 215.99884033]
[-115.94960022 209.13125610]
[-102.61406708 202.26368713]
[-89.27853394 195.39610291]
[-80.02875519 178.41244507]
[-59.90833282 179.70399475]
[-46.77624893 172.45497131]
[-33.64416504 165.20594788]
[-20.51208115 157.95692444]
[-7.37999773 150.70790100]
[5.75208616 143.45886230]
[18.88417053 136.20983887]
[32.01625443 128.96081543]
[45.14833832 121.71179199]
[58.28042221 114.46276855]
[71.41250610 107.21374512]
[76.76078796 81.85552216]
[100.06463623 70.51646423]
[103.91211700 56.01829529]
[107.75959015 41.52012634]
[106.93598938 32.42826843]
[111.76837921 26.84152985]
[115.82437897 12.40030861]
[108.34606934 -1.26397324]
[112.66514587 -15.85164547]
[125.73803711 -22.89686584]
[129.79403687 -37.33808517]
[133.85003662 -51.77930832]
[137.90603638 -66.22052765]
[141.96203613 -80.66175079]
[140.67306519 -85.70923615]
[141.37553406 -90.28971863]
[143.55911255 -93.72373962]
[146.51803589 -95.63227844]
[151.19438171 -109.88470459]
[144.31362915 -123.85942841]
[149.25914001 -138.24679565]
[162.62429810 -144.72042847]
[167.30065918 -158.97286987]
[161.37066650 -173.87973022]
[169.45283508 -187.73823547]
[185.34721375 -189.91731262]
[196.86099243 -178.74537659]
[195.16178894 -162.79255676]
[181.55308533 -154.29650879]
[176.87673950 -140.04408264]
[183.80868530 -126.91078186]
[179.26922607 -112.39017487]
[165.44680786 -105.20835114]
[160.77046204 -90.95592499]
[156.40325928 -76.60575104]
[152.34725952 -62.16452789]
[148.29125977 -47.72330475]
[144.23526001 -33.28208542]
[140.17926025 -18.84086418]
[147.67234802 -6.01942778]
[143.76470947 8.68380260]
[130.26559448 16.45631027]
[126.20960236 30.89752960]
[122.25775909 45.36759949]
[118.41028595 59.86577225]
[114.56281281 74.36394501]
[121.37669373 79.69433594]
[126.35012054 86.77297211]
[129.05490112 94.99040985]
[143.99885559 96.28578186]
[158.94282532 97.58115387]
[173.88677979 98.87652588]
[188.83074951 100.17189789]
[203.24754333 93.65526581]
[215.25907898 102.46276093]
[230.20304871 103.75813293]
[245.14701843 105.05350494]
[260.09097290 106.34887695]
[277.95556641 97.00243378]
[293.30224609 108.77030945]
[308.27731323 109.63449097]
[323.25241089 110.49866486]
[338.22747803 111.36284637]
[344.28808594 108.74189758]
[349.91857910 109.46304321]
[353.61975098 112.47386169]
[368.56372070 113.76923370]
[383.50769043 115.06460571]
[398.45166016 116.35997772]
[410.38751221 106.00090027]
[426.14630127 107.19918060]
[436.37863159 119.24391174]
[435.01379395 134.98915100]
[422.86157227 145.09355164]
[407.13162231 143.56233215]
[397.15628052 131.30393982]
[382.21231079 130.00856018]
[367.26834106 128.71319580]
[352.32440186 127.41782379]
[337.36331177 126.33793640]
[322.38821411 125.47375488]
[307.41314697 124.60957336]
[292.43804932 123.74539185]
[285.45568848 131.19720459]
[275.31182861 133.62942505]
[265.29656982 130.00508118]
[258.79559326 121.29283905]
[243.85163879 119.99746704]
[228.90766907 118.70209503]
[213.96371460 117.40672302]
[200.61581421 124.01601410]
[187.53536987 115.11585999]
[172.59141541 113.82048798]
[157.64744568 112.52511597]
[142.70349121 111.22974396]
[127.75952148 109.93437195]
[124.36358643 116.60417175]
[119.39760590 122.20396423]
[113.18159485 126.37287140]
[106.11613464 128.84225464]
[98.65653229 129.45297241]
[91.28350830 128.16567993]
[84.47219849 125.06332397]
[78.66152954 120.34582520]
[65.52944946 127.59484863]
[52.39736176 134.84387207]
[39.26527786 142.09289551]
[26.13319588 149.34193420]
[13.00111198 156.59095764]
[-0.13097242 163.83998108]
[-13.26305676 171.08900452]
[-26.39513969 178.33802795]
[-39.52722549 185.58705139]
[-52.65930939 192.83607483]
[-55.06482697 203.43698120]
[-62.74717331 210.81417847]
[-73.00515747 212.70826721]
[-82.41095734 208.73164368]
[-95.74649048 215.59921265]
[-109.08202362 222.46679688]
[-122.41755676 229.33436584]
[-125.12757111 239.86154175]
[-133.01931763 247.01428223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 77]
[2 76]
[3 75]
[4 74]
[5 73]
[8 69]
[9 68]
[10 67]
[12 34]
[13 33]
[14 32]
[15 31]
[20 27]
[21 26]
[36 62]
[37 61]
[38 60]
[39 59]
[43 53]
[44 52]
[45 51]
[79 215]
[80 214]
[81 213]
[82 212]
[84 208]
[85 207]
[86 206]
[87 205]
[88 204]
[89 203]
[90 202]
[91 201]
[92 200]
[93 199]
[94 198]
[96 140]
[97 139]
[98 138]
[100 137]
[101 136]
[104 133]
[105 132]
[106 131]
[107 130]
[108 129]
[112 128]
[113 127]
[116 124]
[117 123]
[143 190]
[144 189]
[145 188]
[146 187]
[147 186]
[149 184]
[150 183]
[151 182]
[152 181]
[154 177]
[155 176]
[156 175]
[157 174]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
