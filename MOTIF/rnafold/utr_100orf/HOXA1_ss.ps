%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCAUAUCAUUUUUCUUCUCCGGCCCCAUGGAGGAAGUGAGAAAGUUGGCACAGUCACGCCGGGCUUCGCAGGACCAGGUCACUCAGUGACAGAUGGACAAUGCAAGAAUGAACUCCUUCCUGGAAUACCCCAUACUUAGCAGUGGCGACUCGGGGACCUGCUCAGCCCGAGCCUACCCCUCGGACCAUAGGA\
) } def
/len { sequence length } bind def

/coor [
[87.60209656 170.96356201]
[84.23916626 185.58171082]
[84.40496826 200.58079529]
[72.31855011 209.46440125]
[58.05278397 204.82888794]
[53.49683380 190.53752136]
[62.44711304 178.50105286]
[68.31877899 164.69802856]
[74.19045258 150.89500427]
[80.06211853 137.09197998]
[72.92919922 134.77435303]
[61.15879822 144.07261658]
[49.38840103 153.37088013]
[37.61800385 162.66914368]
[25.84760666 171.96740723]
[14.07720947 181.26567078]
[2.53492999 190.84564209]
[-8.77249146 200.70172119]
[-20.07991219 210.55780029]
[-31.38733482 220.41386414]
[-42.69475555 230.26994324]
[-54.00217819 240.12602234]
[-65.30960083 249.98210144]
[-66.14070129 265.76452637]
[-77.94396210 276.27444458]
[-93.71671295 275.27651978]
[-104.10126495 263.36282349]
[-102.93664551 247.60148621]
[-90.91380310 237.34347534]
[-75.16567230 238.67466736]
[-63.85825348 228.81860352]
[-52.55083084 218.96252441]
[-41.24340820 209.10644531]
[-29.93598747 199.25036621]
[-18.62856674 189.39430237]
[-7.32114506 179.53822327]
[-6.71993208 176.05113220]
[-4.39180374 172.68443298]
[-0.41296747 170.25022888]
[4.77894402 169.49528503]
[16.54934120 160.19700623]
[28.31973839 150.89874268]
[40.09013748 141.60047913]
[51.86053467 132.30221558]
[63.63093185 123.00395203]
[63.50934982 115.70809937]
[64.70097351 108.97585297]
[67.02185822 103.02636719]
[52.16228104 100.97866058]
[37.30270767 98.93096161]
[22.44313622 96.88325500]
[5.92687893 100.71073151]
[-2.32317472 85.89949036]
[9.62539864 73.87168884]
[24.49084091 82.02368164]
[39.35041428 84.07138824]
[54.20998764 86.11908722]
[69.06955719 88.16679382]
[87.01935577 69.53330231]
[112.89213562 69.49574280]
[121.70890808 57.36048508]
[130.42765808 45.15460205]
[139.04779053 32.87888336]
[147.66792297 20.60316467]
[156.28805542 8.32744598]
[164.90818787 -3.94827247]
[173.52832031 -16.22399139]
[171.01036072 -31.59596634]
[179.92727661 -43.92249298]
[194.59762573 -46.22825241]
[203.21775818 -58.50397110]
[211.83789062 -70.77969360]
[220.45803833 -83.05541229]
[229.07817078 -95.33113098]
[212.74745178 -120.29753113]
[229.57028198 -156.67024231]
[224.59165955 -170.81991577]
[219.61303711 -184.96960449]
[203.73275757 -197.37234497]
[208.08279419 -216.20492554]
[202.65090942 -230.18685913]
[197.21902466 -244.16880798]
[191.78715515 -258.15075684]
[186.35527039 -272.13269043]
[174.98355103 -284.70727539]
[183.91871643 -299.11557007]
[200.23744202 -294.51821899]
[200.33721924 -277.56457520]
[205.76908875 -263.58261108]
[211.20097351 -249.60067749]
[216.63285828 -235.61874390]
[222.06472778 -221.63679504]
[231.76351929 -218.36878967]
[238.19171143 -210.12434387]
[239.03108215 -199.48336792]
[233.76272583 -189.94821167]
[238.74133301 -175.79853821]
[243.71995544 -161.64886475]
[251.05606079 -160.08952332]
[253.47062683 -174.89390564]
[255.88519287 -189.69830322]
[258.29977417 -204.50268555]
[260.71432495 -219.30706787]
[263.12890625 -234.11145020]
[258.64559937 -248.42578125]
[266.22824097 -261.36810303]
[280.90701294 -264.45578003]
[293.06118774 -255.66508484]
[294.72467041 -240.75759888]
[284.80661011 -229.50372314]
[280.99093628 -214.99714661]
[277.17529297 -200.49057007]
[273.35961914 -185.98399353]
[269.54394531 -171.47741699]
[265.72827148 -156.97085571]
[273.06439209 -155.41151428]
[283.36776733 -166.31289673]
[293.67114258 -177.21427917]
[294.65802002 -193.22695923]
[307.87472534 -202.32080078]
[323.18258667 -197.51979065]
[328.83868408 -182.50685120]
[320.50415039 -168.79862976]
[304.57254028 -166.91090393]
[294.26916504 -156.00950623]
[283.96575928 -145.10812378]
[287.23544312 -138.35836792]
[302.19607544 -137.27215576]
[293.77478027 -124.85884857]
[297.04446411 -118.10908508]
[311.98559570 -119.43648529]
[326.92675781 -120.76388550]
[341.86791992 -122.09127808]
[345.63287354 -134.77220154]
[353.46749878 -145.39082336]
[364.42010498 -152.69387817]
[377.17263794 -155.82864380]
[390.19927979 -154.44244385]
[401.94906616 -148.72216797]
[411.03048706 -139.36946106]
[416.37622070 -127.51468658]
[431.35235596 -128.36004639]
[444.76577759 -137.79469299]
[459.52725220 -130.65113831]
[460.45147705 -114.27805328]
[446.58767700 -105.51866913]
[432.19772339 -113.38389587]
[417.22155762 -112.53852844]
[411.22293091 -96.75572205]
[398.89312744 -85.13990021]
[382.67544556 -80.05918121]
[365.81259155 -82.58010101]
[351.69854736 -92.24411774]
[343.19531250 -107.15012360]
[328.25415039 -105.82273102]
[313.31301880 -104.49533081]
[298.37185669 -103.16793823]
[268.84622192 -78.82699585]
[241.35388184 -86.71099091]
[232.73374939 -74.43527222]
[224.11361694 -62.15955353]
[215.49348450 -49.88383484]
[206.87335205 -37.60811615]
[209.68504333 -23.02628326]
[201.11787415 -10.45416164]
[185.80404663 -7.60385609]
[177.18391418 4.67186260]
[168.56378174 16.94758224]
[159.94363403 29.22330093]
[151.32350159 41.49901962]
[142.70336914 53.77473831]
[141.43061829 61.06518936]
[133.84416199 66.17726135]
[125.02738953 78.31251526]
[132.07469177 86.57859802]
[136.30995178 97.14081573]
[136.99162292 109.01873779]
[133.72581482 120.99717712]
[126.53823090 131.75045776]
[115.90180969 139.98779297]
[119.95887756 154.42871094]
[124.01594543 168.86962891]
[138.61471558 174.12850952]
[147.30639648 186.98286438]
[146.74887085 202.48991394]
[137.15650940 214.68690491]
[122.21778870 218.88381958]
[107.67694092 213.46688843]
[99.12521362 200.51899719]
[99.85092926 185.01890564]
[109.57502747 172.92669678]
[105.51795959 158.48577881]
[101.46089172 144.04486084]
[94.32796478 141.72723389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[16 40]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[48 58]
[49 57]
[50 56]
[51 55]
[60 174]
[61 173]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[67 166]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[76 98]
[77 97]
[78 96]
[80 92]
[81 91]
[82 90]
[83 89]
[84 88]
[116 126]
[117 125]
[118 124]
[130 157]
[131 156]
[132 155]
[133 154]
[141 148]
[142 147]
[180 193]
[181 192]
[182 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
