%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCAGGGUUCCCCUUGGCCUGCAAACAGGAACACAGGGUGUUUCUCAGUGGCUGCGAGAAUGCUGAUGAAAACCCCAGGAUGUUGUGUCACCGUGGUGGCCAGCUGAUAGUGCCAAUCAUCCCACUUUGCCCUGAGCACUCCUGCAGGGGUAGAAGACUCCAGAACCUUCUCUCAGGCC\
) } def
/len { sequence length } bind def

/coor [
[102.44357300 313.65139771]
[102.44357300 298.65139771]
[102.44357300 283.65139771]
[102.44357300 268.65139771]
[86.81729126 255.50762939]
[85.90684509 234.81604004]
[100.73110199 219.93605042]
[99.70188141 204.97140503]
[98.67266083 190.00675964]
[97.64344025 175.04209900]
[96.61421967 160.07745361]
[95.58499908 145.11280823]
[94.55577850 130.14816284]
[80.97024536 123.78944397]
[68.81987000 132.58537292]
[56.66949844 141.38131714]
[44.51912308 150.17724609]
[32.44469833 159.07714844]
[20.44711113 168.08035278]
[13.62733269 185.17271423]
[-3.85103989 186.62248230]
[-15.69230843 195.83032227]
[-27.53357697 205.03816223]
[-39.37484741 214.24601746]
[-45.04827881 229.63250732]
[-61.25375748 232.14537048]
[-71.32047272 219.19960022]
[-64.89265442 204.11267090]
[-48.58268738 202.40473938]
[-36.74142075 193.19689941]
[-24.90015030 183.98905945]
[-13.05888176 174.78121948]
[-11.23990917 162.80644226]
[-1.42838275 155.04008484]
[11.44389629 156.08276367]
[23.44148445 147.07955933]
[26.91298485 140.53369141]
[35.72319031 138.02687073]
[47.87356567 129.23094177]
[60.02393723 120.43500519]
[72.17430878 111.63906860]
[73.26483917 104.21878052]
[58.38488770 106.11273956]
[44.27935791 111.21508789]
[30.96363258 104.30918884]
[27.00842094 89.84004211]
[34.95950699 77.12075043]
[49.69915009 74.33814240]
[61.74005508 83.28310394]
[75.44589233 89.37818909]
[76.53642273 81.95790100]
[67.43055725 70.03803253]
[58.32469177 58.11816406]
[49.21883011 46.19829559]
[40.11296463 34.27842712]
[32.39654922 29.34275436]
[30.95519447 22.07487679]
[22.05529213 10.00045109]
[13.15539074 -2.07397437]
[4.25548983 -14.14840031]
[-8.37248898 -16.85337639]
[-15.53463173 -27.11426926]
[-13.83134556 -39.10605240]
[-22.52266121 -51.33147812]
[-36.82489014 -58.09585571]
[-37.89322281 -72.95209503]
[-46.58453751 -85.17752075]
[-55.27585602 -97.40294647]
[-70.55856323 -95.87506104]
[-84.55110931 -102.20785522]
[-93.48957062 -114.69783020]
[-94.96954346 -129.98524475]
[-88.59292603 -143.95787048]
[-76.07498932 -152.85714722]
[-60.78300476 -154.28918457]
[-46.83043671 -147.86880493]
[-37.97045135 -135.32304382]
[-36.58634186 -120.02664185]
[-43.05043030 -106.09426117]
[-34.35911560 -93.86883545]
[-25.66779709 -81.64340973]
[-11.98722839 -75.75347900]
[-10.29723644 -60.02279282]
[-1.60592008 -47.79737091]
[14.71626568 -41.38008118]
[16.32991600 -23.04830170]
[25.22981644 -10.97387600]
[34.12971878 1.10054982]
[43.02962112 13.17497540]
[52.03283310 25.17256355]
[61.13869858 37.09243011]
[70.24456024 49.01229858]
[79.35042572 60.93216705]
[88.45629120 72.85203552]
[102.64281464 68.01042938]
[118.63307953 70.73099518]
[128.34048462 59.29569244]
[138.04789734 47.86038589]
[147.75531006 36.42508316]
[156.86117554 24.50521469]
[165.34133911 12.13239288]
[173.82151794 -0.24042882]
[182.30168152 -12.61325073]
[183.19703674 -19.20441246]
[186.76373291 -23.66904068]
[191.29139709 -25.25840759]
[200.19129944 -37.33283234]
[209.09120178 -49.40725708]
[213.62191772 -65.74460602]
[230.57501221 -65.91358948]
[235.43048096 -49.66979599]
[221.16563416 -40.50735474]
[212.26573181 -28.43293190]
[203.36582947 -16.35850525]
[194.67449951 -4.13308048]
[186.19433594 8.23974133]
[177.71417236 20.61256218]
[169.23399353 32.98538589]
[184.15716553 31.46910286]
[195.88145447 40.82544708]
[197.71374512 55.71311569]
[188.60806274 67.63311005]
[173.76257324 69.78060913]
[161.65222168 60.92966080]
[159.19061279 46.13249207]
[149.48320007 57.56779861]
[139.77580261 69.00310516]
[130.06838989 80.43840790]
[134.99652100 94.60574341]
[149.70515442 97.54788208]
[164.41378784 100.49002075]
[179.12242126 103.43215942]
[193.83103943 106.37429810]
[208.53967285 109.31643677]
[223.24830627 112.25857544]
[237.95693970 115.20071411]
[249.11802673 108.70356750]
[261.32083130 111.47367859]
[268.13079834 121.49008942]
[282.78674316 124.68428802]
[297.44271851 127.87848663]
[312.89205933 122.37852478]
[325.20275879 133.21266174]
[321.71063232 149.23567200]
[306.00805664 153.96446228]
[294.24850464 142.53443909]
[279.59255981 139.34024048]
[264.93658447 136.14604187]
[248.54475403 142.38325500]
[235.01480103 129.90934753]
[220.30616760 126.96720123]
[205.59753418 124.02506256]
[190.88890076 121.08293152]
[176.18028259 118.14079285]
[161.47164917 115.19865417]
[146.76301575 112.25651550]
[132.05438232 109.31437683]
[126.42089081 114.26551819]
[137.91839600 123.89917755]
[151.48156738 130.30545044]
[153.57327271 145.15888977]
[142.30677795 155.06173706]
[127.84445953 151.08161926]
[123.23157501 136.80708313]
[115.15391541 124.16780090]
[109.52042389 129.11894226]
[110.54964447 144.08358765]
[111.57886505 159.04823303]
[112.60808563 174.01287842]
[113.63731384 188.97753906]
[114.66653442 203.94218445]
[115.69575500 218.90682983]
[124.59283447 222.91447449]
[131.36840820 229.85578918]
[135.11479187 238.74021912]
[135.35241699 248.32127380]
[132.09075928 257.27148438]
[125.82122040 264.36624146]
[117.44357300 268.65139771]
[117.44357300 283.65139771]
[117.44357300 298.65139771]
[117.44357300 313.65139771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 41]
[15 40]
[16 39]
[17 38]
[18 36]
[19 35]
[21 32]
[22 31]
[23 30]
[24 29]
[51 94]
[52 93]
[53 92]
[54 91]
[55 90]
[57 89]
[58 88]
[59 87]
[60 86]
[63 84]
[64 83]
[66 81]
[67 80]
[68 79]
[96 128]
[97 127]
[98 126]
[99 125]
[100 118]
[101 117]
[102 116]
[103 115]
[106 114]
[107 113]
[108 112]
[129 157]
[130 156]
[131 155]
[132 154]
[133 153]
[134 152]
[135 151]
[136 150]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
