%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCUCACAGCGGUGGCAAAGCCCAGCCGCGCGGGCCGCGCCGCCGCCCCCGCCGCGCGCCGGGCCGGCCCCGCGCCCGCGCUGCGAGCCUUCCAUGGUGCAGCGCAUGUGGGCCGAGGCGGCCGGGCCUGCUGGCGGCGCCGAGCCGCUGUUUCCGGGCUCCCGGCGGAGCCGCAGCGUGUGGGACGCCGUGC\
) } def
/len { sequence length } bind def

/coor [
[85.00812531 121.69572449]
[73.32338715 131.10140991]
[61.63864899 140.50709534]
[49.95391083 149.91278076]
[38.26917267 159.31845093]
[39.15964890 166.80760193]
[37.40845490 174.07330322]
[33.27981567 180.22126770]
[27.32750130 184.51176453]
[20.32093430 186.44851685]
[13.14587212 185.83580017]
[6.69246101 182.79710388]
[-5.70432806 191.24220276]
[-18.10111618 199.68730164]
[-30.49790573 208.13240051]
[-42.89469528 216.57748413]
[-55.29148483 225.02258301]
[-67.68827057 233.46768188]
[-80.08506012 241.91276550]
[-80.68312836 257.30590820]
[-90.12017822 269.25561523]
[-104.61268616 273.30914307]
[-118.54634094 268.11383057]
[-130.94313049 276.55892944]
[-143.33992004 285.00402832]
[-155.73670959 293.44912720]
[-161.07504272 300.87585449]
[-168.39920044 301.92819214]
[-180.92907715 310.17453003]
[-190.83590698 323.93286133]
[-206.79901123 318.22186279]
[-205.73025513 301.30163574]
[-189.17541504 297.64465332]
[-176.64553833 289.39831543]
[-164.18179321 281.05233765]
[-151.78500366 272.60723877]
[-139.38821411 264.16213989]
[-126.99143219 255.71705627]
[-126.72579193 240.84870911]
[-117.64862823 228.84584045]
[-103.07386780 224.43792725]
[-88.53015900 229.51597595]
[-76.13336945 221.07089233]
[-63.73657990 212.62579346]
[-51.33979034 204.18069458]
[-38.94300079 195.73561096]
[-26.54621124 187.29051208]
[-14.14942265 178.84541321]
[-1.75263333 170.40031433]
[5.72571421 149.23144531]
[28.86348915 147.63371277]
[40.54822540 138.22804260]
[52.23296356 128.82235718]
[63.91770172 119.41667175]
[75.60243988 110.01098633]
[75.69661713 89.76251221]
[90.11888123 75.54956055]
[88.68582153 60.61817169]
[87.25276184 45.68678284]
[78.23242950 32.68893433]
[84.71841431 19.28067780]
[83.28535461 4.34928989]
[81.85229492 -10.58209801]
[72.83196259 -23.57994843]
[79.31793976 -36.98820114]
[77.88488770 -51.91959000]
[76.45182800 -66.85097504]
[75.01877594 -81.78236389]
[73.58571625 -96.71375275]
[69.64675903 -104.96837616]
[72.25080872 -111.89437866]
[71.05603790 -126.84672546]
[62.24411774 -139.98675537]
[68.94309235 -153.28988647]
[67.74832153 -168.24221802]
[63.94149399 -176.55860901]
[66.65565491 -183.44219971]
[65.69947815 -198.41169739]
[64.74329376 -213.38119507]
[63.78711319 -228.35069275]
[62.35405731 -243.28207397]
[60.44558334 -258.16015625]
[58.53710938 -273.03826904]
[56.62863541 -287.91635132]
[54.72016144 -302.79446411]
[52.81168747 -317.67254639]
[50.90321350 -332.55065918]
[47.19573593 -338.04730225]
[46.87737656 -343.73599243]
[49.17894363 -347.93270874]
[47.74588776 -362.86407471]
[46.31283188 -377.79547119]
[33.96302414 -387.65740967]
[32.28688431 -403.37255859]
[42.27883911 -415.61743164]
[58.01083374 -417.12731934]
[70.14936066 -407.00646973]
[71.49284363 -391.25936890]
[61.24422073 -379.22854614]
[62.67727661 -364.29714966]
[64.11033630 -349.36575317]
[65.78131104 -334.45910645]
[67.68978119 -319.58102417]
[69.59825897 -304.70294189]
[71.50672913 -289.82482910]
[73.41520691 -274.94674683]
[75.32367706 -260.06863403]
[77.23215485 -245.19055176]
[79.37797546 -243.36978149]
[80.92754364 -240.58444214]
[81.50800323 -237.05892944]
[80.83515930 -233.14897156]
[78.75660706 -229.30686951]
[79.71278381 -214.33737183]
[80.66896820 -199.36787415]
[81.62515259 -184.39839172]
[82.70066071 -169.43699646]
[83.89543152 -154.48464966]
[92.62189484 -142.41410828]
[86.00837708 -128.04148865]
[87.20314789 -113.08914948]
[88.51710510 -98.14681244]
[89.95016479 -83.21542358]
[91.38321686 -68.28403473]
[92.81627655 -53.35264587]
[94.24932861 -38.42126083]
[103.16716766 -26.49140167]
[96.78368378 -12.01515484]
[98.21674347 2.91623330]
[99.64979553 17.84762192]
[108.56763458 29.77747726]
[102.18415070 44.25372696]
[103.61721039 59.18511200]
[105.05027008 74.11650085]
[117.87229156 80.60820007]
[125.38638306 92.85911560]
[125.36091614 107.23081970]
[138.02070618 115.27629852]
[150.68049622 123.32177734]
[163.34028625 131.36726379]
[176.00007629 139.41273499]
[188.65986633 147.45822144]
[201.38339233 155.40249634]
[214.16987610 163.24507141]
[226.87948608 161.00372314]
[237.37068176 167.80838013]
[240.31083679 179.54965210]
[252.97062683 187.59513855]
[265.69415283 195.53941345]
[278.48065186 203.38198853]
[291.26712036 211.22456360]
[304.05358887 219.06713867]
[316.84005737 226.90972900]
[329.62655640 234.75230408]
[328.78887939 219.77571106]
[339.86590576 209.66137695]
[354.70486450 211.85353088]
[362.38418579 224.73870850]
[357.25186157 238.83335876]
[343.08383179 243.76358032]
[355.20498657 252.59970093]
[367.32617188 261.43582153]
[379.44735718 270.27194214]
[391.56854248 279.10806274]
[403.68972778 287.94418335]
[420.04479980 289.14538574]
[426.93750000 304.02566528]
[417.27719116 317.27746582]
[401.00155640 315.26846313]
[394.85360718 300.06536865]
[382.73242188 291.22924805]
[370.61123657 282.39312744]
[358.49005127 273.55700684]
[346.36889648 264.72088623]
[334.24771118 255.88475037]
[321.78396606 247.53877258]
[308.99749756 239.69619751]
[296.21102905 231.85362244]
[283.42453003 224.01104736]
[270.63806152 216.16847229]
[257.85159302 208.32589722]
[250.49760437 207.50764465]
[244.92514038 200.25492859]
[232.26535034 192.20944214]
[214.72248840 192.41464233]
[206.32730103 176.03155518]
[193.54081726 168.18898010]
[186.18682861 167.37072754]
[180.61437988 160.11801147]
[167.95458984 152.07252502]
[155.29479980 144.02705383]
[142.63500977 135.98156738]
[129.97521973 127.93608856]
[117.31542969 119.89060974]
[109.92986298 124.43068695]
[101.47116852 126.33052063]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 55]
[2 54]
[3 53]
[4 52]
[5 51]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[17 44]
[18 43]
[19 42]
[23 38]
[24 37]
[25 36]
[26 35]
[28 34]
[29 33]
[57 134]
[58 133]
[59 132]
[61 130]
[62 129]
[63 128]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[71 121]
[72 120]
[74 118]
[75 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 108]
[82 107]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[90 101]
[91 100]
[92 99]
[137 194]
[138 193]
[139 192]
[140 191]
[141 190]
[142 189]
[143 187]
[144 186]
[147 184]
[148 183]
[149 181]
[150 180]
[151 179]
[152 178]
[153 177]
[154 176]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
