%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGCCCCAUAGCCAUCUCAGGGACAAGGAGGCUGUGAUCAGAUCUCGCGAGGUUCAGGAAAGCGCCCCGGGAACUGGGCCGCUGGGCCAGCCCCUGCGUCGGGGGGCAAGAUGGCAGCCCAGGCUUUGGCGCUGCUGAGAGAGGUAGCGAGGCUGGAAGCGCCGCUGGAGGAGCUACGCGCGCUUCACUCCGUGCUGCAGGCAGUGCCGC\
) } def
/len { sequence length } bind def

/coor [
[99.49961853 244.98904419]
[99.05720520 229.99555969]
[98.61479187 215.00209045]
[98.17237854 200.00862122]
[97.50888062 185.02330017]
[96.62443542 170.04939270]
[95.73999786 155.07550049]
[82.77500153 152.48577881]
[70.79671478 146.88951111]
[61.21150589 158.42742920]
[51.62630081 169.96536255]
[42.04109573 181.50329590]
[32.45589066 193.04122925]
[22.87068748 204.57916260]
[13.28548241 216.11709595]
[10.41847992 231.67636108]
[-3.66591668 236.52188110]
[-13.25112152 248.05981445]
[-22.83632660 259.59774780]
[-18.87807083 274.60147095]
[-24.52611351 289.05410767]
[-37.60866928 297.39837646]
[-53.09522629 296.42565918]
[-65.03089142 286.51004028]
[-68.82614899 271.46426392]
[-63.02165604 257.07373047]
[-49.84934998 248.87188721]
[-34.37425613 250.01252747]
[-24.78905296 238.47460938]
[-15.20384693 226.93667603]
[-13.02244282 212.20266724]
[1.74755192 206.53189087]
[11.33275700 194.99395752]
[20.91796112 183.45602417]
[30.50316620 171.91809082]
[40.08837128 160.38015747]
[49.67357635 148.84222412]
[59.25878143 137.30430603]
[48.65124893 123.77211761]
[42.52844620 107.26592255]
[41.70602417 89.26841736]
[26.96023369 86.51857758]
[12.21444321 83.76873016]
[-2.77027917 88.84500885]
[-13.86343288 78.90563202]
[-28.60922432 76.15579224]
[-43.35501480 73.40594482]
[-58.10080338 70.65609741]
[-72.84659576 67.90625000]
[-81.44530487 74.56425476]
[-92.06991577 75.37499237]
[-101.19518280 70.31155396]
[-105.92594147 61.25645447]
[-120.58421326 58.07288742]
[-135.24247742 54.88932037]
[-145.51046753 66.31141663]
[-160.11880493 71.05398560]
[-175.13792419 67.84131622]
[-186.52778625 57.53758240]
[-191.22454834 42.91445160]
[-187.96481323 27.90546417]
[-177.62542725 16.54796600]
[-162.98764038 11.89706421]
[-147.98895264 15.20383072]
[-136.66390991 25.57876015]
[-132.05891418 40.23104858]
[-117.40065002 43.41461563]
[-102.74237823 46.59818268]
[-84.80537415 39.37426758]
[-70.09674835 53.16045761]
[-55.35095978 55.91030502]
[-40.60516739 58.66015244]
[-25.85937691 61.40999985]
[-11.11358643 64.15984344]
[2.81641865 58.88687134]
[14.96428967 69.02293396]
[29.71008110 71.77278137]
[44.45587158 74.52262878]
[52.33575058 61.75910568]
[43.27028656 49.80848312]
[34.20482635 37.85786057]
[25.13936424 25.90723610]
[9.82187366 20.05006027]
[7.50313854 3.81566691]
[20.56847382 -6.09538937]
[35.57738495 0.51253539]
[37.08998871 16.84177589]
[46.15544891 28.79239845]
[55.22091293 40.74302292]
[64.28637695 52.69364548]
[72.93970490 45.54182816]
[83.02924347 40.00609207]
[80.38821411 25.24042130]
[77.74718475 10.47475338]
[75.10615540 -4.29091549]
[72.46513367 -19.05658340]
[69.82410431 -33.82225418]
[56.71412277 -42.64857483]
[53.76715851 -58.17567825]
[62.73159027 -71.19161224]
[78.28898621 -73.97424316]
[91.20941162 -64.87270355]
[93.82740784 -49.28675842]
[84.58976746 -36.46327972]
[87.23079681 -21.69761276]
[89.87182617 -6.93194294]
[92.51285553 7.83372545]
[95.15388489 22.59939384]
[97.79490662 37.36506271]
[105.13558197 38.90275192]
[103.52368164 23.98961258]
[117.20883179 17.84821129]
[127.27857208 28.96577644]
[119.81693268 41.97813416]
[127.15760803 43.51582336]
[135.50265503 31.05146790]
[143.84770203 18.58711052]
[152.19274902 6.12275457]
[160.53779602 -6.34160233]
[168.88284302 -18.80595970]
[177.13574219 -31.33151817]
[185.29605103 -43.91759872]
[193.45635986 -56.50367737]
[191.52894592 -72.43052673]
[202.88160706 -83.76616669]
[218.80555725 -81.81485748]
[227.08528137 -68.07347870]
[221.36930847 -53.08324051]
[206.04243469 -48.34337234]
[197.88212585 -35.75728989]
[189.72183228 -23.17121124]
[188.72071838 -15.84983444]
[181.34719849 -10.46091175]
[173.00215149 2.00344491]
[164.65710449 14.46780205]
[156.31205750 26.93215752]
[147.96701050 39.39651489]
[139.62196350 51.86087036]
[145.38410950 58.55661011]
[150.06167603 65.90196228]
[153.58837891 73.72667694]
[155.92402649 81.85507202]
[157.05465698 90.10985565]
[156.99212646 98.31605530]
[155.77330017 106.30463409]
[153.45840454 113.91605377]
[167.32716370 119.63074493]
[181.19590759 125.34543610]
[195.06466675 131.06013489]
[208.93341064 136.77482605]
[222.80216980 142.48951721]
[238.50933838 140.59332275]
[247.32901001 152.59593201]
[261.19775391 158.31062317]
[274.38601685 150.34971619]
[289.55578613 151.66557312]
[300.90768433 161.54476929]
[304.22583008 176.04055786]
[318.09457397 181.75524902]
[331.96334839 187.46994019]
[345.83209229 193.18463135]
[359.70083618 198.89932251]
[373.56958008 204.61401367]
[387.43835449 210.32870483]
[401.34887695 215.94097900]
[415.30038452 221.45050049]
[424.43008423 221.69168091]
[429.41607666 227.14553833]
[443.28482056 232.86022949]
[457.15359497 238.57492065]
[472.45718384 233.76040649]
[485.68191528 242.84259033]
[486.68289185 258.85440063]
[474.69226074 269.51290894]
[458.90820312 266.64187622]
[451.43890381 252.44366455]
[437.57012939 246.72897339]
[423.70138550 241.01428223]
[409.79086304 235.40202332]
[395.83932495 229.89250183]
[388.46459961 230.35935974]
[381.72366333 224.19746399]
[367.85488892 218.48277283]
[353.98614502 212.76808167]
[340.11740112 207.05339050]
[326.24862671 201.33869934]
[312.37988281 195.62400818]
[298.51113892 189.90931702]
[285.94400024 197.85948181]
[270.92761230 196.87350464]
[259.23446655 187.12036133]
[255.48306274 172.17936707]
[241.61431885 166.46467590]
[226.89913940 168.76962280]
[217.08747864 156.35826111]
[203.21871948 150.64356995]
[189.34997559 144.92887878]
[175.48121643 139.21418762]
[161.61247253 133.49949646]
[147.74371338 127.78480530]
[132.07250977 144.97567749]
[110.71389771 154.19105530]
[111.59834290 169.16494751]
[112.48278046 184.13885498]
[115.79423523 189.85841370]
[115.73078156 195.53918457]
[113.16585541 199.56620789]
[113.60826874 214.55967712]
[114.05068207 229.55314636]
[114.49309540 244.54663086]
[121.00396729 260.20053101]
[107.76420593 270.79040527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 207]
[5 204]
[6 203]
[7 202]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[14 33]
[15 32]
[17 30]
[18 29]
[19 28]
[41 78]
[42 77]
[43 76]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[53 68]
[54 67]
[55 66]
[79 90]
[80 89]
[81 88]
[82 87]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[115 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[121 131]
[122 130]
[123 129]
[146 200]
[147 199]
[148 198]
[149 197]
[150 196]
[151 195]
[153 193]
[154 192]
[158 188]
[159 187]
[160 186]
[161 185]
[162 184]
[163 183]
[164 182]
[165 180]
[166 179]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
