%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUUGCGACUUCCCUUCCCUACCCUGCUCGGCUGCGUAGUGCGCUCCCCGCCCAGCCUGCAGAGCUCGCGCCGCGGCAGCCCAGCCGCUCGGCCCCGCCGCGCUCGCAGAGGCCGCCAUGGGCACCGCGCGCUGGCUCGCGCUGGGCAGCCUCUUCGCCCUGGCUGGGCUGCUGGAAGGCCGGCUCGUGGGCGAGGAGGAAGCCGGCUUUGGCGAAU\
) } def
/len { sequence length } bind def

/coor [
[78.19785309 374.89419556]
[78.92581177 390.01864624]
[74.70103455 404.55929565]
[65.98178864 416.93884277]
[53.71388245 425.81448364]
[39.22803497 430.22344971]
[24.09557152 429.68750000]
[9.95794487 424.26473999]
[-1.65130007 414.54342651]
[-9.47287941 401.57803345]
[-12.65836716 386.77493286]
[-10.86222458 371.73989868]
[-4.27928495 358.10379028]
[6.37638521 347.34573364]
[19.94893646 340.63272095]
[34.96612167 338.69290161]
[37.95839691 323.99441528]
[40.95067596 309.29589844]
[43.83744812 294.57629395]
[46.61857224 279.83636475]
[37.57784271 273.31765747]
[31.59294701 263.85430908]
[29.55972862 252.79125977]
[31.80916595 241.71777344]
[38.05418777 232.23921204]
[47.42569351 225.74418640]
[58.59333038 223.20124817]
[62.00602341 208.59461975]
[60.46781540 201.37039185]
[65.57385254 193.80368042]
[69.19571686 179.24749756]
[72.81758881 164.69132996]
[76.43945312 150.13516235]
[80.06132507 135.57899475]
[68.54763794 125.96468353]
[54.87084198 132.12464905]
[41.19404221 138.28460693]
[27.51724243 144.44458008]
[15.55835056 156.46211243]
[0.69991100 148.29736328]
[4.43235254 131.75936890]
[21.35727692 130.76777649]
[35.03407669 124.60781097]
[48.71087646 118.44784546]
[62.38767242 112.28787994]
[61.58116150 103.34099579]
[62.82050705 94.67416382]
[65.93676758 86.73709106]
[70.66636658 79.91780090]
[76.67010498 74.52372742]
[83.55571747 70.76821136]
[79.31096649 56.38134384]
[75.06621552 41.99447250]
[70.82145691 27.60760117]
[66.57670593 13.22072887]
[62.33195114 -1.16614223]
[58.08719635 -15.55301380]
[53.57398987 -20.37129593]
[52.35066986 -25.91347122]
[53.93340683 -30.41374779]
[50.10310745 -44.91646576]
[44.88905334 -52.40915680]
[46.32347488 -59.65471268]
[42.70160675 -74.21088409]
[39.07973862 -88.76705170]
[35.45787048 -103.32321930]
[31.83600235 -117.87939453]
[20.99547768 -129.40299988]
[25.43074226 -143.62191772]
[21.80887222 -158.17808533]
[18.18700409 -172.73426819]
[14.56513596 -187.29043579]
[9.45909977 -194.85714722]
[10.99730873 -202.08137512]
[7.58461618 -216.68800354]
[4.17192411 -231.29463196]
[0.75923169 -245.90126038]
[-9.76236629 -253.35502625]
[-12.30650234 -265.58679199]
[-6.04375172 -275.93154907]
[-9.24656582 -290.58563232]
[-12.44937897 -305.23971558]
[-15.65219307 -319.89379883]
[-18.85500717 -334.54788208]
[-22.58118629 -349.07769775]
[-26.82594109 -363.46456909]
[-31.07069397 -377.85144043]
[-36.03213501 -392.00714111]
[-41.69775391 -405.89602661]
[-54.07434464 -415.75149536]
[-51.71738052 -430.45843506]
[-57.38299942 -444.34729004]
[-63.04861832 -458.23617554]
[-68.71424103 -472.12503052]
[-80.29525757 -484.50714111]
[-71.60301208 -499.06326294]
[-55.20947647 -494.74026489]
[-54.82536697 -477.79064941]
[-49.15974808 -463.90179443]
[-43.49412918 -450.01290894]
[-37.82850647 -436.12405396]
[-25.85715866 -427.26199341]
[-27.80888176 -411.56164551]
[-22.14326096 -397.67276001]
[-16.45053291 -411.55053711]
[-3.22586417 -418.62924194]
[11.47928333 -415.66973877]
[20.93599701 -404.02627563]
[20.81698990 -389.02673340]
[11.17671776 -377.53479004]
[-3.57353663 -374.80899048]
[-16.68382263 -382.09619141]
[-12.43906975 -367.70932007]
[-8.19431496 -353.32244873]
[1.13368988 -365.06927490]
[16.13262939 -365.24771118]
[25.73744392 -353.72610474]
[22.86244774 -339.00421143]
[9.62858963 -331.94268799]
[-4.20092964 -337.75067139]
[-0.99811572 -323.09661865]
[2.20469809 -308.44253540]
[5.40751171 -293.78845215]
[8.61032581 -279.13436890]
[21.10929489 -266.81237793]
[15.36585808 -249.31394958]
[18.77855110 -234.70732117]
[22.19124222 -220.10069275]
[25.60393524 -205.49407959]
[29.12130547 -190.91229248]
[32.74317551 -176.35612488]
[36.36504364 -161.79995728]
[39.98691177 -147.24378967]
[50.56837463 -136.76133728]
[46.39217377 -121.50125885]
[50.01404190 -106.94509125]
[53.63591003 -92.38892365]
[57.25777817 -77.83274841]
[60.87964630 -63.27658081]
[64.60582733 -48.74676514]
[68.43612671 -34.24404907]
[72.47406769 -19.79776764]
[76.71881866 -5.41089630]
[80.96357727 8.97597504]
[85.20832825 23.36284637]
[89.45308685 37.74971771]
[93.69783783 52.13658905]
[97.94258881 66.52346039]
[116.52217865 70.81217194]
[129.76145935 84.53498077]
[133.38124084 103.25639343]
[147.60667419 108.01426697]
[161.83209229 112.77213287]
[176.05751038 117.53000641]
[190.28294373 122.28787231]
[204.50836182 127.04574585]
[218.73379517 131.80360413]
[232.95921326 136.56147766]
[247.18463135 141.31935120]
[261.41006470 146.07722473]
[275.63546753 150.83508301]
[289.89465332 155.49079895]
[304.18688965 160.04412842]
[318.51138306 164.49481201]
[332.86743164 168.84265137]
[347.22348022 173.19049072]
[361.57955933 177.53831482]
[375.93560791 181.88615417]
[391.38604736 178.48107910]
[401.32421875 189.57528687]
[415.68029785 193.92312622]
[429.49508667 186.24673462]
[444.66848755 190.66752625]
[452.19839478 204.56271362]
[447.61743164 219.68852234]
[433.64340210 227.07109070]
[418.56686401 222.33047485]
[411.33245850 208.27917480]
[396.97640991 203.93133545]
[382.55279541 207.64741516]
[371.58776855 196.24221802]
[357.23171997 191.89437866]
[342.87564087 187.54653931]
[328.51959229 183.19869995]
[314.16354370 178.85087585]
[306.85513306 179.91984558]
[299.63354492 174.33633423]
[285.34133911 169.78302002]
[278.01834106 170.74705505]
[270.87762451 165.06051636]
[256.65219116 160.30264282]
[242.42677307 155.54476929]
[228.20133972 150.78691101]
[213.97592163 146.02903748]
[199.75048828 141.27116394]
[185.52507019 136.51329041]
[171.29965210 131.75543213]
[157.07421875 126.99755859]
[142.84880066 122.23968506]
[128.62338257 117.48181915]
[115.66992188 133.02516174]
[94.61749268 139.20086670]
[90.99562836 153.75703430]
[87.37375641 168.31320190]
[83.75189209 182.86936951]
[80.13002014 197.42553711]
[76.61264801 212.00730896]
[73.19995880 226.61393738]
[86.32342529 240.55490112]
[88.36965179 259.44024658]
[78.69104767 275.61059570]
[61.35849380 282.61749268]
[58.57737350 297.35742188]
[60.06104279 306.36437988]
[55.64918900 312.28817749]
[52.65690994 326.98666382]
[49.66463470 341.68518066]
[62.72825241 349.34161377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 217]
[17 216]
[18 215]
[19 213]
[20 212]
[27 208]
[28 207]
[30 206]
[31 205]
[32 204]
[33 203]
[34 202]
[35 45]
[36 44]
[37 43]
[38 42]
[51 148]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[57 142]
[60 141]
[61 140]
[63 139]
[64 138]
[65 137]
[66 136]
[67 135]
[69 133]
[70 132]
[71 131]
[72 130]
[74 129]
[75 128]
[76 127]
[77 126]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 114]
[86 113]
[87 112]
[88 104]
[89 103]
[91 101]
[92 100]
[93 99]
[94 98]
[151 200]
[152 199]
[153 198]
[154 197]
[155 196]
[156 195]
[157 194]
[158 193]
[159 192]
[160 191]
[161 190]
[162 188]
[163 187]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
