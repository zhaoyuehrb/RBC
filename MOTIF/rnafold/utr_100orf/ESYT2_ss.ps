%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAUCCACCCCGCCCGCUCCCGGUGACGUGCCAGCCCCAGGCCCACGCCGCUCCCGCCCCGCGUGAUGACGCCACCGUCCCGGGCGGAGGCGGGCGUGCGGCGGAGCCGCGUCCCCUCAGAGGGGCGCUGGCGCGGGGCUGAGCCGCCCGGGAUCAGCGCGAGCA\
) } def
/len { sequence length } bind def

/coor [
[64.69705200 566.61914062]
[61.59347916 581.49987793]
[53.02740860 594.05737305]
[40.30510712 602.37670898]
[25.36663055 605.18927002]
[10.48999119 602.06616211]
[-2.05623198 593.48352051]
[-10.35883236 580.75030518]
[-13.15172291 565.80816650]
[-10.00900841 550.93560791]
[-1.40992975 538.40069580]
[11.33421612 530.11486816]
[26.28003883 527.34161377]
[29.36190224 512.66162109]
[24.40458488 498.61621094]
[34.81216812 486.70013428]
[37.89403152 472.02014160]
[40.97589493 457.34014893]
[43.36420822 442.53152466]
[45.05368805 427.62695312]
[46.74317169 412.72241211]
[48.43265152 397.81787109]
[50.12213516 382.91329956]
[51.81161499 368.00875854]
[44.72194672 360.57760620]
[42.87696457 350.25042725]
[47.12949753 340.41998291]
[56.28791046 334.45263672]
[58.53683090 319.62219238]
[56.42156219 312.50695801]
[60.97006989 304.53497314]
[63.49756622 289.74945068]
[65.88587952 274.94079590]
[68.13479614 260.11035156]
[70.38372040 245.27989197]
[72.63263702 230.44944763]
[74.88156128 215.61898804]
[77.13047791 200.78852844]
[79.37940216 185.95808411]
[70.36616516 174.15565491]
[72.43562317 159.08343506]
[84.87619781 149.70954895]
[87.12512207 134.87908936]
[89.37403870 120.04863739]
[75.43672943 106.93428040]
[75.57937622 85.58817291]
[92.90898132 69.62792206]
[88.46197510 55.30227280]
[84.01497650 40.97662354]
[79.56797791 26.65097618]
[75.12097168 12.32532883]
[70.67397308 -2.00031877]
[55.26346970 -14.95199680]
[60.23851013 -33.61140060]
[55.25579453 -47.75963593]
[50.27308273 -61.90787506]
[45.29037094 -76.05610657]
[40.30765915 -90.20434570]
[35.32494354 -104.35257721]
[30.20937729 -118.45332336]
[24.96140671 -132.50532532]
[19.71343422 -146.55732727]
[14.46546364 -160.60932922]
[2.38896561 -170.83033752]
[5.18444681 -185.46025085]
[-0.06352433 -199.51225281]
[-11.47502232 -205.58381653]
[-15.54354763 -217.42936707]
[-10.59748745 -228.49792480]
[-15.58020020 -242.64616394]
[-20.56291199 -256.79440308]
[-25.54562569 -270.94262695]
[-38.34258652 -281.19787598]
[-35.59265137 -297.36480713]
[-20.12471771 -302.81228638]
[-7.85087013 -291.93643188]
[-11.39738941 -275.92535400]
[-6.41467714 -261.77713013]
[-1.43196440 -247.62887573]
[3.55074835 -233.48063660]
[17.46924782 -222.82223511]
[13.98847866 -204.76022339]
[19.23645020 -190.70822144]
[30.93757820 -181.49232483]
[28.51746750 -165.85729980]
[33.76543808 -151.80529785]
[39.01340866 -137.75329590]
[44.26137924 -123.70129395]
[49.57019043 -118.51309967]
[49.47318268 -109.33529663]
[54.45589447 -95.18705750]
[59.43860626 -81.03881836]
[64.42131805 -66.89058685]
[69.40402985 -52.74235153]
[74.38674164 -38.59411621]
[84.00825500 -35.00082397]
[90.17416382 -26.51339149]
[90.63678741 -15.81256580]
[84.99961853 -6.44731951]
[89.44662476 7.87832832]
[93.89362335 22.20397568]
[98.34062195 36.52962494]
[102.78762817 50.85527039]
[107.23462677 65.18091583]
[107.55226135 50.18428421]
[118.83850861 40.30397034]
[133.74540710 41.97260666]
[142.56774902 54.10381317]
[139.56172180 68.79952240]
[126.68482971 76.49195862]
[141.33518982 73.27215576]
[155.98553467 70.05234528]
[170.63589478 66.83254242]
[185.28623962 63.61273575]
[199.93659973 60.39293289]
[214.58694458 57.17312622]
[222.89074707 43.72610092]
[238.28991699 40.17064285]
[251.64839172 48.61614609]
[255.04084778 64.05204010]
[246.45457458 77.32048798]
[230.98367310 80.54954529]
[217.80676270 71.82347870]
[203.15640259 75.04328918]
[188.50604248 78.26309204]
[173.85569763 81.48289490]
[159.20533752 84.70269775]
[144.55499268 87.92250824]
[129.90463257 91.14231110]
[122.99165344 114.04032135]
[104.20449829 122.29756165]
[101.95557404 137.12800598]
[99.70665741 151.95846558]
[108.80889893 164.59915161]
[106.31690979 179.60729980]
[94.20985413 188.20700073]
[91.96092987 203.03746033]
[89.71201324 217.86790466]
[87.46309662 232.69836426]
[85.21417236 247.52882385]
[82.96525574 262.35928345]
[80.71633148 277.18972778]
[82.52799225 286.18746948]
[78.28308868 292.27694702]
[75.75559998 307.06246948]
[73.36728668 321.87112427]
[71.11836243 336.70156860]
[79.33386230 355.07913208]
[66.71616364 369.69824219]
[65.02668762 384.60278320]
[63.33720398 399.50735474]
[61.64772415 414.41189575]
[59.95824051 429.31643677]
[58.26876068 444.22100830]
[71.56587982 437.27935791]
[85.36061096 443.17050171]
[89.54120636 457.57614136]
[81.04324341 469.93673706]
[66.09584045 471.19180298]
[55.65588379 460.42202759]
[52.57402039 475.10202026]
[49.49215698 489.78201294]
[54.22904205 504.87744141]
[44.04189301 515.74353027]
[40.96002960 530.42352295]
[53.52878952 538.97302246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 165]
[14 164]
[16 162]
[17 161]
[18 160]
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[28 147]
[29 146]
[31 145]
[32 144]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 137]
[39 136]
[42 133]
[43 132]
[44 131]
[47 104]
[48 103]
[49 102]
[50 101]
[51 100]
[52 99]
[54 95]
[55 94]
[56 93]
[57 92]
[58 91]
[59 90]
[60 88]
[61 87]
[62 86]
[63 85]
[65 83]
[66 82]
[69 80]
[70 79]
[71 78]
[72 77]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
