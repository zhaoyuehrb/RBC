%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCGUGUUCCUCGCGGAGCGCCGUCGGGGCCGUGGGCGCCUGCGCGGGCCGGCGCGGGAGCAAGCGGCAUGGCGUUCCGGCAGGCGCUGCAGCUGGCGGCCUGCGGGCUGGCCGGGGGCUCGGCCGCCGUGCUCUUCUCGGCCGUGGCGGUAGGGAAGCCGCGCGCAG\
) } def
/len { sequence length } bind def

/coor [
[89.45529175 243.74848938]
[78.54746246 232.31193542]
[79.00485229 216.51426697]
[90.55609131 205.72795105]
[90.83165741 190.73048401]
[91.10721588 175.73301697]
[91.38278198 160.73554993]
[91.65834808 145.73808289]
[91.93390656 130.74061584]
[83.83526611 128.11184692]
[76.57322693 123.34793091]
[70.71029663 116.71088409]
[66.72785187 108.61056519]
[64.98749542 99.57976532]
[65.69998169 90.23928833]
[68.90420532 81.25534821]
[54.23774719 78.10972595]
[39.57128906 74.96409607]
[24.90482712 71.81847382]
[10.23836803 68.67284393]
[-4.42809153 65.52722168]
[-19.09455109 62.38159561]
[-33.76100922 59.23596954]
[-48.42747116 56.09034348]
[-63.09392929 52.94471741]
[-77.76039124 49.79909134]
[-81.92140961 51.31573486]
[-85.93933105 51.39724350]
[-89.37425995 50.26961517]
[-91.90726471 48.28009033]
[-93.36973572 45.84626770]
[-107.76565552 41.63230133]
[-122.16157532 37.41833496]
[-136.55749512 33.20436478]
[-150.95341492 28.99039650]
[-164.69880676 36.31856155]
[-179.23828125 31.83992386]
[-186.13986206 18.69063377]
[-200.53578186 14.47666550]
[-215.95384216 18.02547073]
[-225.99490356 7.02427912]
[-240.39082336 2.81031108]
[-254.78674316 -1.40365696]
[-269.18264771 -5.61762476]
[-283.57858276 -9.83159256]
[-297.97448730 -14.04556084]
[-312.37042236 -18.25952911]
[-326.11312866 -10.45483780]
[-341.32705688 -14.73414421]
[-348.98599243 -28.55861092]
[-344.54608154 -43.72642899]
[-330.64141846 -51.23880005]
[-315.52139282 -46.63876724]
[-308.15643311 -32.65544891]
[-293.76052856 -28.44147873]
[-279.36462402 -24.22751236]
[-264.96868896 -20.01354408]
[-250.57276917 -15.79957581]
[-236.17684937 -11.58560753]
[-221.78092957 -7.37163973]
[-207.39256287 -11.22185516]
[-196.32180786 0.08074711]
[-181.92588806 4.29471493]
[-169.02313232 -3.05745769]
[-154.36358643 1.01102984]
[-146.73944092 14.59447861]
[-132.34352112 18.80844688]
[-117.94760895 23.02241516]
[-103.55168915 27.23638344]
[-89.15576935 31.45034981]
[-74.61476135 35.13263321]
[-59.94830322 38.27825928]
[-45.28184509 41.42388535]
[-30.61538506 44.56951141]
[-15.94892502 47.71513748]
[-1.28246558 50.86075974]
[13.38399410 54.00638580]
[28.05045319 57.15201187]
[42.71691513 60.29763794]
[57.38337326 63.44326401]
[72.04983521 66.58889008]
[85.04021454 59.08889008]
[89.64925385 44.81455231]
[94.25829315 30.54021072]
[98.86732483 16.26587105]
[103.47636414 1.99153209]
[108.08540344 -12.28280735]
[112.56312561 -26.59888268]
[116.90915680 -40.95548630]
[121.25518036 -55.31208801]
[113.57705688 -69.12592316]
[117.99593353 -84.29988098]
[131.89018250 -91.83152771]
[147.01657104 -87.25246429]
[154.40089417 -73.27937317]
[149.66217041 -58.20223999]
[135.61178589 -50.96606064]
[131.26576233 -36.60945511]
[126.91973114 -22.25285339]
[127.99541473 -14.91188431]
[122.35974121 -7.67376947]
[117.75070190 6.60057020]
[113.14167023 20.87491035]
[108.53263092 35.14925003]
[103.92359161 49.42358780]
[99.31455231 63.69792938]
[119.25686646 65.73405457]
[136.54447937 78.68975067]
[150.68640137 73.68914795]
[164.82832336 68.68853760]
[171.90840149 62.85556412]
[179.27622986 63.72856522]
[193.50762939 58.98860168]
[207.73902893 54.24863815]
[221.97042847 49.50867081]
[236.20182800 44.76870728]
[250.43322754 40.02873993]
[260.90585327 27.40907860]
[277.02340698 30.43516159]
[282.20547485 45.99401474]
[271.12124634 58.08002472]
[255.17318726 54.26013947]
[240.94178772 59.00010681]
[226.71038818 63.74007034]
[212.47898865 68.48003387]
[198.24758911 73.22000122]
[184.01618958 77.95996857]
[169.82893372 82.83045959]
[155.68701172 87.83106995]
[141.54508972 92.83167267]
[140.10726929 100.19255829]
[154.99713135 98.37821960]
[161.32386780 111.97867584]
[150.34413147 122.19851685]
[137.23159790 114.91432953]
[135.79377747 122.27522278]
[147.01440430 132.22999573]
[158.23503113 142.18476868]
[169.45565796 152.13952637]
[180.67630005 162.09429932]
[191.89692688 172.04907227]
[207.35490417 175.41975403]
[211.74057007 189.65405273]
[222.96119690 199.60882568]
[234.18182373 209.56359863]
[245.40245056 219.51835632]
[261.26345825 225.50711060]
[259.89950562 242.40609741]
[243.28335571 245.77357483]
[235.44769287 230.73899841]
[224.22705078 220.78422546]
[213.00642395 210.82945251]
[201.78579712 200.87467957]
[187.13038635 198.21603394]
[181.94215393 183.26969910]
[170.72152710 173.31492615]
[159.50090027 163.36016846]
[148.28025818 153.40539551]
[137.05963135 143.45062256]
[125.83900452 133.49584961]
[118.98451996 133.83412170]
[112.61598206 132.95660400]
[106.93137360 131.01617432]
[106.65581512 146.01364136]
[106.38024902 161.01110840]
[106.10469055 176.00857544]
[105.82912445 191.00605774]
[105.55355835 206.00352478]
[116.70076752 217.20687866]
[116.57750702 233.01069641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[16 81]
[17 80]
[18 79]
[19 78]
[20 77]
[21 76]
[22 75]
[23 74]
[24 73]
[25 72]
[26 71]
[31 70]
[32 69]
[33 68]
[34 67]
[35 66]
[38 63]
[39 62]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[82 106]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 99]
[89 98]
[90 97]
[108 130]
[109 129]
[110 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
