%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAUUCGUUCCCAGCAGGCCCUGCGCGCGGCAACAUGGCGGGGUCCAGGUGGAGGUCUUGAGGCUAUCAGAUCGGUAUGGCAUUGGCGUCCGGGCCCGCAAGGCGGGCGCUAGCUGGCUCCGGGCAGCUCGGCCUUGGGGGCUUCGGGGCCCCGAGACGCGGGGCGUAUGAGUGGG\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 255.02493286]
[92.50000000 240.02493286]
[92.50000000 225.02493286]
[92.50000000 210.02493286]
[92.50000000 195.02493286]
[92.50000000 180.02493286]
[92.50000000 165.02493286]
[92.50000000 150.02493286]
[92.50000000 135.02493286]
[84.33235168 132.21055603]
[77.07608032 127.52252197]
[71.15327454 121.23351288]
[57.47896194 127.39898682]
[43.80464554 133.56446838]
[40.60029221 150.15788269]
[28.26689148 161.46775818]
[11.78883934 163.19154358]
[-2.33232903 154.84785461]
[-15.89570332 161.25370789]
[-29.45907784 167.65954590]
[-43.02245331 174.06539917]
[-56.58582687 180.47125244]
[-70.14920044 186.87709045]
[-83.71257782 193.28294373]
[-97.27594757 199.68878174]
[-96.89333344 214.91290283]
[-102.74199677 228.97393799]
[-113.80861664 239.43576050]
[-128.17584229 244.48579407]
[-143.35446167 243.24906921]
[-156.71467590 235.93988037]
[-165.94177246 223.82456970]
[-169.43707275 209.00219727]
[-166.59501648 194.04083252]
[-157.90800476 181.53260803]
[-144.88110352 173.64466858]
[-129.77130127 171.74362183]
[-115.19647980 176.15885925]
[-103.68180084 186.12541199]
[-90.11842346 179.71955872]
[-76.55504608 173.31372070]
[-62.99167252 166.90786743]
[-49.42829895 160.50202942]
[-35.86492538 154.09617615]
[-22.30154991 147.69033813]
[-8.73817539 141.28448486]
[-7.47794008 127.97663116]
[0.26175976 116.94519806]
[12.54263783 111.13940430]
[26.19577789 112.17587280]
[37.63917160 119.89015198]
[51.31348801 113.72467804]
[64.98780060 107.55919647]
[59.16194534 96.63397980]
[57.10762405 83.01163483]
[45.69294357 73.27998352]
[34.27826309 63.54832840]
[22.86358070 53.81667709]
[11.44889832 44.08502579]
[2.86033511 40.88512039]
[-0.07939704 34.07949829]
[-11.32055187 24.14790916]
[-27.35732841 23.69919205]
[-36.88976288 10.79522896]
[-32.60538864 -4.66516161]
[-17.79080772 -10.82209206]
[-3.81050277 -2.95249200]
[-1.38896465 12.90675449]
[9.85219002 22.83834267]
[21.18054962 32.67034531]
[32.59523010 42.40199661]
[44.00991440 52.13364792]
[55.42459488 61.86529922]
[66.83927917 71.59694672]
[73.37814331 67.92362976]
[66.03150177 54.84590530]
[58.68507004 41.76806641]
[71.76302338 34.42183304]
[79.10923004 47.49926758]
[86.45586395 60.57699585]
[92.99472809 56.90367889]
[90.62207031 42.09251785]
[79.86500549 29.71440697]
[85.46132660 14.29970074]
[101.65402222 11.70572567]
[111.78543091 24.60094070]
[105.43322754 39.71985626]
[107.80589294 54.53101730]
[128.51850891 67.31211853]
[138.73756409 87.75990295]
[151.94291687 80.64521790]
[165.14825439 73.53052521]
[178.35360718 66.41583252]
[191.55894470 59.30114746]
[204.70100403 52.07020187]
[217.77873230 44.72356415]
[230.85646057 37.37693024]
[243.93417358 30.03029251]
[252.17630005 16.52555084]
[267.06210327 17.03779411]
[280.13983154 9.69115829]
[293.21755981 2.34452224]
[306.29525757 -5.00211382]
[319.37298584 -12.34875011]
[332.45071411 -19.69538689]
[340.69284058 -33.20013046]
[355.57864380 -32.68788528]
[368.65637207 -40.03451920]
[374.62808228 -46.98733139]
[382.03036499 -47.39308548]
[395.23571777 -54.50777435]
[408.44104004 -61.62246704]
[414.53454590 -68.46880341]
[421.94284058 -68.74385071]
[435.27169800 -75.62438202]
[448.60052490 -82.50490570]
[451.86077881 -97.79885864]
[464.22073364 -107.37826538]
[479.84448242 -106.72001648]
[491.35488892 -96.13492584]
[493.31713867 -80.62094879]
[484.80471802 -67.50330353]
[469.83691406 -62.97574997]
[455.48107910 -69.17605591]
[442.15222168 -62.29552841]
[428.82336426 -55.41500092]
[415.55575562 -48.41711807]
[402.35040283 -41.30242920]
[389.14505005 -34.18774033]
[376.00299072 -26.95679474]
[362.92526245 -19.61015701]
[355.61856079 -6.63089561]
[339.79736328 -6.61765909]
[326.71963501 0.72897691]
[313.64190674 8.07561302]
[300.56417847 15.42224884]
[287.48645020 22.76888466]
[274.40872192 30.11552048]
[267.10202026 43.09478378]
[251.28082275 43.10802078]
[238.20309448 50.45465469]
[225.12536621 57.80129242]
[212.04763794 65.14792633]
[207.74296570 71.18350983]
[198.67364502 72.50649261]
[185.46829224 79.62118530]
[172.26295471 86.73587036]
[159.05760193 93.85056305]
[145.85224915 100.96525574]
[143.08836365 115.70841980]
[152.82000732 127.12310028]
[162.55166626 138.53778076]
[172.28330994 149.95246887]
[182.01496887 161.36714172]
[191.74661255 172.78182983]
[207.56065369 175.48287964]
[215.18229675 189.59989929]
[208.76487732 204.30349731]
[193.23127747 208.31436157]
[180.49755859 198.55567932]
[180.33193970 182.51347351]
[170.60028076 171.09880066]
[160.86863708 159.68411255]
[151.13697815 148.26942444]
[141.40533447 136.85475159]
[131.67367554 125.44007111]
[124.12229156 130.67451477]
[115.89402771 133.87796021]
[107.50000000 135.02493286]
[107.50000000 150.02493286]
[107.50000000 165.02493286]
[107.50000000 180.02493286]
[107.50000000 195.02493286]
[107.50000000 210.02493286]
[107.50000000 225.02493286]
[107.50000000 240.02493286]
[107.50000000 255.02493286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[12 53]
[13 52]
[14 51]
[18 46]
[19 45]
[20 44]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[61 69]
[62 68]
[81 88]
[82 87]
[90 149]
[91 148]
[92 147]
[93 146]
[94 145]
[95 143]
[96 142]
[97 141]
[98 140]
[100 138]
[101 137]
[102 136]
[103 135]
[104 134]
[105 133]
[107 131]
[108 130]
[110 129]
[111 128]
[112 127]
[114 126]
[115 125]
[116 124]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
