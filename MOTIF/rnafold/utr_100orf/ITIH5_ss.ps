%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCGCGGGGUGGGCGGCCCCGAGAGCGUCCCGCAGUGGCUGGAGCCCUGGGCGCUGCAAAGCGUGUCCCGCCGGGUCCCCGAGCGUCCCGCGCCCUCGCCCCGCCAUGCUCCUGCUGCUGGGGCUGUGCCUGGGGCUGUCCCUGUGUGUGGGGUCGCAGGAAGAGGCGCAGAGCUGGGGCCACUCUUCGGAGCAGGAUGGACUCA\
) } def
/len { sequence length } bind def

/coor [
[347.24401855 369.74649048]
[340.97802734 361.30520630]
[338.76599121 350.94519043]
[341.07296753 340.52316284]
[330.11041260 330.28485107]
[319.14788818 320.04656982]
[308.18533325 309.80825806]
[293.60266113 306.77593994]
[288.79812622 291.70187378]
[277.83560181 281.46359253]
[270.79928589 279.19482422]
[266.78585815 270.98574829]
[255.97996521 260.58227539]
[245.17407227 250.17877197]
[234.36816406 239.77528381]
[223.56227112 229.37179565]
[212.75637817 218.96830750]
[201.95046997 208.56481934]
[191.14457703 198.16133118]
[180.33868408 187.75784302]
[169.53277588 177.35437012]
[158.72688293 166.95088196]
[144.11953735 169.73722839]
[130.51148987 163.31188965]
[123.21088409 149.94946289]
[125.20137024 134.67385864]
[114.39546967 124.27037048]
[103.58957672 113.86688232]
[90.06539917 110.31887054]
[86.00693512 96.93901825]
[75.20104218 86.53553009]
[64.39514160 76.13204193]
[56.03972244 72.43290710]
[53.50570297 65.48772430]
[42.85893631 54.92144394]
[32.21216583 44.35516357]
[21.56539726 33.78887939]
[10.91862869 23.22259903]
[0.27185985 12.65631771]
[-10.37490940 2.09003520]
[-25.62035751 -2.13924909]
[-29.20368004 -16.59639549]
[-39.85044861 -27.16267776]
[-50.49721909 -37.72895813]
[-61.14398575 -48.29524231]
[-71.79075623 -58.86152267]
[-83.44676971 -56.50289536]
[-94.67863464 -60.02905273]
[-102.72937775 -68.45317078]
[-105.68164825 -79.60148621]
[-102.91350555 -90.67339325]
[-113.23469543 -101.55792999]
[-123.55588531 -112.44245911]
[-133.87707520 -123.32699585]
[-149.44302368 -123.90927124]
[-159.75512695 -135.09475708]
[-159.10408020 -149.93092346]
[-169.42527771 -160.81546021]
[-186.16270447 -158.38566589]
[-200.90457153 -166.33105469]
[-207.93630981 -181.34664917]
[-204.66661072 -197.43202209]
[-215.15179443 -208.15867615]
[-225.63697815 -218.88531494]
[-236.12217712 -229.61195374]
[-246.60736084 -240.33859253]
[-261.86743164 -238.23225403]
[-275.28485107 -245.43124390]
[-281.81326294 -258.99014282]
[-279.13784790 -273.61822510]
[-289.62304688 -284.34484863]
[-300.10821533 -295.07150269]
[-310.67449951 -305.71826172]
[-321.32128906 -316.28454590]
[-331.96804810 -326.85083008]
[-347.95382690 -330.50964355]
[-352.51879883 -346.26062012]
[-340.96694946 -357.90048218]
[-325.18179321 -353.45513916]
[-321.40176392 -337.49758911]
[-310.75500488 -326.93130493]
[-300.10821533 -316.36502075]
[-293.14401245 -313.88378906]
[-289.38159180 -305.55667114]
[-278.89639282 -294.83004761]
[-268.41122437 -284.10339355]
[-253.72604370 -286.44515991]
[-240.31925964 -279.60977173]
[-233.42755127 -266.03195190]
[-235.88072205 -250.82379150]
[-225.39552307 -240.09713745]
[-214.91033936 -229.37049866]
[-204.42515564 -218.64385986]
[-193.93997192 -207.91722107]
[-180.96575928 -211.07289124]
[-168.02287292 -207.37521362]
[-158.52217102 -197.68739319]
[-155.02220154 -184.46554565]
[-158.54074097 -171.13664246]
[-148.21954346 -160.25212097]
[-133.36975098 -160.11453247]
[-122.74753571 -149.22308350]
[-122.99253845 -133.64817810]
[-112.67134857 -122.76364899]
[-102.35015869 -111.87911987]
[-92.02896881 -100.99458313]
[-73.73551941 -101.61287689]
[-60.57152557 -88.43962860]
[-61.22447205 -69.50829315]
[-50.57770538 -58.94200897]
[-39.93093491 -48.37572861]
[-29.28416634 -37.80944443]
[-18.63739777 -27.24316406]
[-4.15347672 -23.76965141]
[0.19137304 -8.55673313]
[10.83814144 2.00954843]
[21.48491096 12.57583046]
[32.13167953 23.14211273]
[42.77845001 33.70839310]
[53.42521667 44.27467728]
[64.07198334 54.84095764]
[74.79862976 65.32614136]
[85.60453033 75.72962952]
[96.41042328 86.13311768]
[109.93460083 89.68112946]
[113.99306488 103.06098175]
[124.79895782 113.46446991]
[135.60485840 123.86795807]
[150.79396057 121.29945374]
[164.42370605 128.08793640]
[171.36061096 141.44245911]
[169.13037109 156.14497375]
[179.93626404 166.54846191]
[190.74215698 176.95195007]
[201.54806519 187.35543823]
[212.35395813 197.75892639]
[223.15986633 208.16241455]
[233.96575928 218.56590271]
[244.77165222 228.96939087]
[255.57756042 239.37287903]
[266.38345337 249.77636719]
[277.18936157 260.17984009]
[288.07388306 270.50103760]
[299.03643799 280.73934937]
[314.40319824 284.50399780]
[318.42364502 298.84573364]
[329.38616943 309.08401489]
[340.34872437 319.32232666]
[351.31124878 329.56060791]
[371.32354736 327.80813599]
[385.95053101 341.12899780]
[386.06823730 360.60711670]
[397.48541260 370.33584595]
[408.90258789 380.06457520]
[420.31976318 389.79330444]
[431.73693848 399.52203369]
[443.58508301 408.72103882]
[455.83963013 417.37124634]
[473.01971436 414.08319092]
[486.98828125 424.04028320]
[489.38681030 440.68475342]
[501.77120972 449.14797974]
[514.15563965 457.61120605]
[526.54003906 466.07443237]
[538.92443848 474.53765869]
[551.30889893 483.00088501]
[566.64758301 480.28753662]
[579.08654785 489.04687500]
[581.57879639 503.68670654]
[593.96319580 512.14990234]
[608.13171387 506.04602051]
[623.34722900 508.59368896]
[634.75463867 518.97998047]
[638.71380615 533.89068604]
[633.96142578 548.56781006]
[622.01391602 558.32794189]
[606.68371582 560.05670166]
[592.86260986 553.20245361]
[584.96093750 539.95227051]
[585.50000000 524.53436279]
[573.11560059 516.07110596]
[558.57067871 519.06811523]
[545.89056396 510.66162109]
[542.84564209 495.38531494]
[530.46124268 486.92208862]
[518.07678223 478.45886230]
[505.69238281 469.99560547]
[493.30798340 461.53237915]
[480.92355347 453.06915283]
[468.71630859 457.19943237]
[456.17205811 453.48828125]
[447.93527222 443.07604980]
[447.18942261 429.62579346]
[434.93487549 420.97558594]
[436.38870239 435.90496826]
[426.96902466 447.57843018]
[412.06951904 449.31179810]
[400.22158813 440.11251831]
[398.20935059 425.24810791]
[407.18496704 413.22988892]
[422.00820923 410.93920898]
[410.59103394 401.21047974]
[399.17385864 391.48175049]
[387.75668335 381.75302124]
[376.33950806 372.02429199]
[366.70016479 375.56893921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 149]
[5 148]
[6 147]
[7 146]
[9 144]
[10 143]
[12 142]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[26 128]
[27 127]
[28 126]
[30 124]
[31 123]
[32 122]
[34 121]
[35 120]
[36 119]
[37 118]
[38 117]
[39 116]
[40 115]
[42 113]
[43 112]
[44 111]
[45 110]
[46 109]
[51 106]
[52 105]
[53 104]
[54 103]
[57 100]
[58 99]
[62 94]
[63 93]
[64 92]
[65 91]
[66 90]
[70 86]
[71 85]
[72 84]
[73 82]
[74 81]
[75 80]
[152 205]
[153 204]
[154 203]
[155 202]
[156 201]
[157 194]
[158 193]
[161 189]
[162 188]
[163 187]
[164 186]
[165 185]
[166 184]
[169 181]
[170 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
