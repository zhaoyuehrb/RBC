%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCCCAGCAGCUGCUGCUCGCUCAGCUCACAAGCCAAGGCCAGGGGACAGGGCGGCAGCGACUCCUCUGGCUCCCGAGAAGUGGAUCCGGUCGCGGCCACUACGAUGCCGGGAGCCGCCGGGGUCCUCCUCCUUCUGCUGCUCUCCGGAGGCCUCGGGGGCGUACAGGCGCAGCGGCCGCAGCAGCAGCGGCAGUCACAGGCAC\
) } def
/len { sequence length } bind def

/coor [
[137.64527893 557.65008545]
[137.47877502 548.85296631]
[140.19309998 540.43774414]
[145.52058411 533.32641602]
[152.90560913 528.30755615]
[150.85325623 513.44860840]
[146.82243347 507.25039673]
[148.88468933 498.34765625]
[147.05917358 483.45913696]
[137.83047485 471.76812744]
[143.83076477 457.12887573]
[142.00523376 442.24038696]
[140.17971802 427.35189819]
[138.35420227 412.46337891]
[136.52868652 397.57489014]
[134.70317078 382.68637085]
[132.87765503 367.79788208]
[131.05213928 352.90939331]
[128.99978638 338.05044556]
[126.72107697 323.22454834]
[124.44235992 308.39862061]
[122.16365051 293.57272339]
[119.88494110 278.74682617]
[107.76063538 270.17147827]
[105.23849487 255.16835022]
[114.31533051 242.50939941]
[112.03661346 227.68350220]
[109.75790405 212.85758972]
[95.46250153 208.60238647]
[84.38669586 198.52090454]
[78.76338959 184.57316589]
[79.75759125 169.50559998]
[87.22556305 156.31028748]
[99.73268890 147.63081360]
[97.45397949 132.80491638]
[95.17526245 117.97900391]
[81.67043304 103.24800873]
[89.29123688 84.77354431]
[86.33683777 70.06736755]
[83.38244629 55.36119461]
[80.42804718 40.65502167]
[77.47365570 25.94884682]
[63.52699280 19.40692520]
[56.19237900 6.06313181]
[58.09892654 -8.86432838]
[68.30758667 -19.67733955]
[65.35319519 -34.38351440]
[62.39879990 -49.08968735]
[58.32001495 -54.30115128]
[57.59698105 -59.94301987]
[59.58575821 -64.28906250]
[57.08122253 -79.07849121]
[54.57668304 -93.86792755]
[52.07214355 -108.65735626]
[49.56760406 -123.44678497]
[47.06306839 -138.23622131]
[44.55852890 -153.02565002]
[42.05398941 -167.81507874]
[39.54944992 -182.60450745]
[32.20129395 -192.26135254]
[34.86193466 -202.73709106]
[30.57612228 -217.11178589]
[26.29030991 -231.48648071]
[22.00449753 -245.86117554]
[17.71868515 -260.23587036]
[13.43287182 -274.61056519]
[-0.18848443 -282.16677856]
[-4.33013487 -296.80581665]
[2.95750594 -309.74511719]
[-1.32830667 -324.11981201]
[-5.61411905 -338.49450684]
[-9.89993191 -352.86920166]
[-14.18574429 -367.24389648]
[-18.47155762 -381.61859131]
[-22.75737000 -395.99328613]
[-27.04318237 -410.36798096]
[-31.32899475 -424.74267578]
[-50.50894547 -430.37145996]
[-62.31442642 -446.32260132]
[-62.09638596 -466.02178955]
[-50.11739731 -481.47973633]
[-55.27157593 -495.56640625]
[-60.42575455 -509.65307617]
[-65.57993317 -523.73974609]
[-70.73411560 -537.82641602]
[-75.55725098 -542.35778809]
[-77.12897491 -547.82434082]
[-75.82350159 -552.42205811]
[-80.54569244 -566.65936279]
[-85.26789093 -580.89666748]
[-97.87446594 -591.38507080]
[-94.82826233 -607.49877930]
[-79.26294708 -612.66143799]
[-67.19078827 -601.56213379]
[-71.03057861 -585.61883545]
[-66.30838776 -571.38153076]
[-61.58619690 -557.14422607]
[-56.64743805 -542.98059082]
[-51.49325943 -528.89392090]
[-46.33907700 -514.80725098]
[-41.18489838 -500.72058105]
[-36.03071976 -486.63391113]
[-25.69621849 -486.05673218]
[-16.10792732 -482.05764771]
[-8.36927700 -475.06927490]
[-3.37998819 -465.86984253]
[-1.73150897 -455.49642944]
[-3.63700104 -445.12829590]
[-8.90416145 -435.95257568]
[-16.95430183 -429.02850342]
[-12.66848946 -414.65380859]
[-8.38267612 -400.27911377]
[-4.09686375 -385.90441895]
[0.18894875 -371.52972412]
[4.47476149 -357.15502930]
[8.76057434 -342.78033447]
[13.04638672 -328.40563965]
[17.33219910 -314.03094482]
[30.51579475 -307.19512939]
[35.06698990 -292.67819214]
[27.80756569 -278.89636230]
[32.09337997 -264.52166748]
[36.37919235 -250.14698792]
[40.66500473 -235.77229309]
[44.95081711 -221.39759827]
[49.23662949 -207.02290344]
[55.88979721 -220.46669006]
[68.55008698 -228.51138306]
[83.54682159 -228.82452393]
[96.53188324 -221.31533813]
[103.74044037 -208.16099548]
[103.08245850 -193.17543030]
[94.74871826 -180.70350647]
[81.15546417 -174.36131287]
[66.24389648 -175.98765564]
[54.33888245 -185.10905457]
[56.84342194 -170.31962585]
[59.34796143 -155.53019714]
[61.85249710 -140.74075317]
[64.35704041 -125.95132446]
[66.86157227 -111.16189575]
[69.36611176 -96.37246704]
[71.87065125 -81.58303070]
[74.37519073 -66.79360199]
[77.10497284 -52.04408264]
[80.05937195 -37.33790970]
[83.01376343 -22.63173485]
[96.60639191 -16.60027885]
[104.13005066 -3.56729984]
[102.51791382 11.57384968]
[92.17983246 22.99445343]
[95.13422394 37.70062637]
[98.08862305 52.40679932]
[101.04301453 67.11297607]
[103.99740601 81.81914520]
[111.82079315 85.61975098]
[117.06356049 92.55973053]
[118.58115387 101.12400055]
[116.04226685 109.44289398]
[110.00117493 115.70029449]
[112.27988434 130.52619934]
[114.55859375 145.35211182]
[129.09490967 149.87506104]
[140.18075562 160.21868896]
[145.65390015 174.29223633]
[144.47865295 189.28489685]
[136.94155884 202.22714233]
[124.58380890 210.57888794]
[126.86251831 225.40478516]
[129.14123535 240.23069763]
[141.60061646 249.57957458]
[143.70034790 264.64761353]
[134.71084595 276.46810913]
[136.98956299 291.29400635]
[139.26826477 306.11993408]
[141.54698181 320.94583130]
[143.82568359 335.77172852]
[147.66186523 341.16427612]
[148.12609863 346.83331299]
[145.94064331 351.08386230]
[147.76615906 365.97235107]
[149.59167480 380.86087036]
[151.41719055 395.74935913]
[153.24270630 410.63787842]
[155.06822205 425.52636719]
[156.89373779 440.41488647]
[158.71925354 455.30337524]
[168.07853699 468.05932617]
[161.94767761 481.63363647]
[163.77319336 496.52212524]
[165.71218872 511.39627075]
[167.76454163 526.25518799]
[186.09158325 538.07696533]
[189.65339661 559.30505371]
[176.53924561 576.01397705]
[179.71755981 590.67333984]
[182.89587402 605.33276367]
[192.16105652 619.53112793]
[181.08244324 632.36468506]
[165.68353271 625.27172852]
[168.23646545 608.51110840]
[165.05815125 593.85168457]
[161.87983704 579.19226074]
[153.47837830 577.24194336]
[146.12969971 572.64447021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[8 190]
[9 189]
[11 187]
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[17 181]
[18 180]
[19 177]
[20 176]
[21 175]
[22 174]
[23 173]
[26 170]
[27 169]
[28 168]
[34 162]
[35 161]
[36 160]
[38 155]
[39 154]
[40 153]
[41 152]
[42 151]
[46 147]
[47 146]
[48 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[88 97]
[89 96]
[90 95]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
