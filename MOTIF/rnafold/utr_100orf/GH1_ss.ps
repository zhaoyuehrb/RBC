%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGACCAGCUCAAGGAUCCCAAGGCCCAACUCCCCGAACCACUCAGGGUCCUGUGGACAGCUCACCUAGCUGCAAUGGCUACAGGCUCCCGGACGUCCCUGCUCCUGGCUUUUGGCCUGCUCUGCCUGCCCUGGCUUCAAGAGGGCAGUGCCUUCCCAACCAUUCCCUUAUCCA\
) } def
/len { sequence length } bind def

/coor [
[125.36758423 231.87519836]
[112.20159149 224.68794250]
[105.65080261 211.19320679]
[101.44804382 225.59240723]
[97.24528503 239.99159241]
[103.66470337 254.69433594]
[96.04496765 268.81237793]
[80.23129272 271.51559448]
[68.35457611 260.73025513]
[69.52561188 244.73001099]
[82.84608459 235.78883362]
[87.04885101 221.38964844]
[91.25160980 206.99044800]
[94.42234802 192.32939148]
[96.54508972 177.48036194]
[98.66783142 162.63131714]
[100.79058075 147.78228760]
[70.31079865 135.68601990]
[55.56847763 107.46252441]
[40.82821655 110.24185944]
[26.08795357 113.02118683]
[11.37293720 115.93122101]
[-3.31567478 118.97172546]
[-15.26101303 129.34570312]
[-29.29243088 124.34885406]
[-43.98104095 127.38935852]
[-58.66965485 130.42985535]
[-73.35826874 133.47036743]
[-88.04687500 136.51087952]
[-89.69013214 151.54931641]
[-95.90194702 165.34310913]
[-106.07374573 176.54086304]
[-119.20899963 184.04554749]
[-134.02085876 187.12190247]
[-149.05819702 185.46858215]
[-162.84782410 179.24752808]
[-174.03875732 169.06822205]
[-181.53463745 155.92794800]
[-184.60107422 141.11402893]
[-182.93766785 126.07779694]
[-176.70738220 112.29234314]
[-166.52058411 101.10823059]
[-153.37527466 93.62116241]
[-138.55931091 90.56465149]
[-123.52420044 92.23812866]
[-109.74292755 98.47765350]
[-98.56564331 108.67194366]
[-91.08738708 121.82226562]
[-76.39877319 118.78175354]
[-61.71015930 115.74124908]
[-47.02154922 112.70074463]
[-32.33293533 109.66024017]
[-21.43822670 99.50373840]
[-6.35618067 104.28311920]
[8.33243179 101.24260712]
[14.26363182 96.79383850]
[23.30862236 98.28092957]
[38.04888535 95.50159454]
[52.78914642 92.72226715]
[57.37372971 78.44005585]
[47.00504303 67.60076141]
[36.63635254 56.76146317]
[26.26766586 45.92216873]
[15.89897728 35.08287811]
[-0.04367975 33.29088211]
[-8.46040154 19.63297844]
[-2.89459872 4.58633852]
[12.38412094 -0.30654362]
[25.65523148 8.70773315]
[26.73827171 24.71418762]
[37.10696030 35.55348206]
[47.47564697 46.39277649]
[57.84433746 57.23207092]
[68.21302795 68.07136536]
[75.50463867 63.39122772]
[83.38889313 60.29237747]
[91.53620911 58.82463074]
[99.62049866 58.97136688]
[107.33215332 60.65280151]
[112.79456329 46.68275833]
[118.25696564 32.71271515]
[123.71937561 18.74267387]
[129.18179321 4.77263165]
[127.00123596 -10.89758778]
[138.84204102 -19.93333626]
[144.30444336 -33.90338135]
[149.76684570 -47.87342072]
[155.22926331 -61.84346390]
[160.69166565 -75.81350708]
[155.74584961 -85.54515839]
[156.96502686 -96.17179871]
[163.70359802 -104.19342041]
[173.53871155 -107.10282898]
[179.49348450 -120.87020874]
[185.44825745 -134.63758850]
[185.98796082 -143.78810120]
[191.63282776 -148.59498596]
[197.83100891 -162.25450134]
[195.69503784 -178.51394653]
[208.87101746 -188.27742004]
[223.80465698 -181.50109863]
[225.13349915 -165.15586853]
[211.49053955 -156.05632019]
[205.29235840 -142.39680481]
[199.21563721 -128.68281555]
[193.26086426 -114.91543579]
[187.30609131 -101.14805603]
[190.96029663 -82.17877960]
[174.66171265 -70.35109711]
[169.19931030 -56.38105774]
[163.73689270 -42.41101456]
[158.27449036 -28.44097137]
[152.81207275 -14.47092819]
[155.38333130 0.20006005]
[143.15182495 10.23503971]
[137.68942261 24.20508194]
[132.22700500 38.17512512]
[126.76460266 52.14516830]
[121.30219269 66.11521149]
[128.40737915 70.25099945]
[134.68804932 75.89186859]
[139.82345581 82.86831665]
[143.52886963 90.94232178]
[145.57006836 99.81523132]
[145.77633667 109.13870239]
[144.05078125 118.52837372]
[158.62222290 122.08827209]
[173.22468567 125.51872253]
[187.85702515 128.81944275]
[202.48936462 132.12016296]
[217.12168884 135.42088318]
[231.75402832 138.72161865]
[246.38636780 142.02233887]
[261.01870728 145.32305908]
[271.93838501 134.42517090]
[287.02127075 131.18324280]
[301.45446777 136.63177490]
[310.63238525 149.03215027]
[311.62640381 164.42745972]
[304.11929321 177.90510559]
[290.50659180 185.16444397]
[275.13204956 183.88902283]
[262.90161133 174.48582458]
[257.71798706 159.95539856]
[243.08564758 156.65466309]
[228.45330811 153.35394287]
[213.82096863 150.05322266]
[199.18864441 146.75250244]
[184.55630493 143.45178223]
[169.92396545 140.15104675]
[162.68452454 141.75141907]
[155.06231689 136.65971375]
[140.49087524 133.09982300]
[134.27806091 137.30111694]
[145.35900879 147.41114807]
[156.43994141 157.52117920]
[170.90986633 161.47358704]
[180.95828247 172.61042786]
[183.40699768 187.40921021]
[177.48147583 201.18919373]
[165.05592346 209.59191895]
[150.06042480 209.95964050]
[137.23794556 202.17608643]
[130.64410400 188.70309448]
[132.36468506 173.80163574]
[127.10855865 159.75268555]
[121.85243225 145.70372009]
[115.63961792 149.90502930]
[113.51687622 164.75405884]
[111.39412689 179.60310364]
[109.27138519 194.45214844]
[120.81227875 184.87049866]
[135.77151489 183.76545715]
[148.59506226 191.54727173]
[154.52180481 205.32673645]
[151.35128784 219.98782349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 13]
[4 12]
[5 11]
[14 171]
[15 170]
[16 169]
[17 168]
[19 59]
[20 58]
[21 57]
[22 55]
[23 54]
[25 52]
[26 51]
[27 50]
[28 49]
[29 48]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[79 119]
[80 118]
[81 117]
[82 116]
[83 115]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[93 107]
[94 106]
[95 105]
[97 104]
[98 103]
[126 153]
[127 152]
[128 150]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
[134 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
