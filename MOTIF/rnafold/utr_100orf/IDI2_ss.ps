%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUUCCACAUCUGAUACCCAGGAGUCUCCAGCUUCCAAGAGAGGUCGGGUCACAGCCAGCAGCUAUGUCUGACAUAAAUCUUGACUGGGUUGACAGGCGUCAGUUGCAGCGCUUGGAGGAAAUGCUGAUUGUUGUGGAUGAGAAUGAUAAGGUUAUUGGUGCCG\
) } def
/len { sequence length } bind def

/coor [
[186.58795166 634.76531982]
[179.56117249 627.54687500]
[174.62359619 618.74645996]
[172.11648560 608.95428467]
[172.21769714 598.82971191]
[174.92921448 589.05670166]
[180.07633972 580.29785156]
[187.31900024 573.14929199]
[196.17407227 568.10015869]
[193.35220337 553.36798096]
[190.53033447 538.63580322]
[187.56918335 523.93096924]
[184.46902466 509.25485229]
[174.26834106 498.40148926]
[178.98640442 483.30014038]
[175.88624573 468.62402344]
[171.40731812 462.70336914]
[172.86904907 453.64089966]
[170.04718018 438.90872192]
[167.08602905 424.20391846]
[163.98587036 409.52777100]
[160.88569641 394.85165405]
[150.68501282 383.99829102]
[155.40307617 368.89694214]
[152.30291748 354.22082520]
[149.20275879 339.54467773]
[146.10260010 324.86853027]
[133.51989746 316.98110962]
[130.16682434 302.14160156]
[138.52519226 288.99719238]
[135.42503357 274.32104492]
[121.47303009 260.97045898]
[127.89899445 241.89421082]
[124.24568176 227.34590149]
[120.59237671 212.79759216]
[116.93907166 198.24928284]
[113.28575897 183.70097351]
[109.63245392 169.15266418]
[105.97914886 154.60435486]
[102.32583618 140.05604553]
[93.90274811 139.65753174]
[85.74897003 137.50738525]
[78.22463989 133.70059204]
[71.66210175 128.40527344]
[66.35121918 121.85533142]
[62.52656174 114.34006500]
[60.35706329 106.19140625]
[59.93854904 97.76928711]
[61.28950119 89.44570160]
[47.81035995 82.86446381]
[34.33121490 76.28322601]
[18.01795959 77.95945740]
[8.63025475 64.51315308]
[15.82536602 49.77672195]
[32.20158005 48.90974045]
[40.91245270 62.80408096]
[54.39159393 69.38531494]
[67.87074280 75.96655273]
[79.39275360 65.57272339]
[93.99694061 60.32810593]
[94.56456757 45.33884811]
[95.13218689 30.34959412]
[95.69980621 15.36033726]
[96.26743317 0.37108088]
[96.83505249 -14.61817551]
[97.26081848 -29.61213112]
[97.54467773 -44.60944748]
[97.82853699 -59.60675812]
[98.11240387 -74.60407257]
[98.39626312 -89.60138702]
[98.68012238 -104.59870148]
[98.96398926 -119.59601593]
[89.81787109 -125.23681641]
[83.90327454 -134.11112976]
[82.24224854 -144.56367493]
[85.07087708 -154.67828369]
[91.80841827 -162.62919617]
[101.17502594 -167.01057434]
[102.30946350 -181.96762085]
[103.44389343 -196.92466736]
[104.57832336 -211.88169861]
[105.71275330 -226.83874512]
[96.39181519 -239.89630127]
[100.92750549 -255.28483582]
[115.84042358 -261.19958496]
[129.69065857 -253.10325623]
[131.85350037 -237.20666504]
[120.66979218 -225.70431519]
[119.53536224 -210.74726868]
[118.40093231 -195.79022217]
[117.26650238 -180.83319092]
[116.13207245 -165.87614441]
[129.88473511 -152.13119507]
[129.15336609 -132.39756775]
[113.96130371 -119.31215668]
[113.67743683 -104.31484222]
[113.39357758 -89.31752777]
[113.10971832 -74.32021332]
[112.82585144 -59.32289886]
[112.54199219 -44.32558441]
[112.25812531 -29.32826996]
[115.28897095 -22.55119705]
[111.82431030 -14.05055332]
[111.25669098 0.93870306]
[110.68906403 15.92795944]
[110.12144470 30.91721535]
[109.55382538 45.90647125]
[108.98619843 60.89572906]
[126.52344513 69.89347839]
[137.65982056 86.15679932]
[139.70777893 105.76087952]
[132.17311096 123.97470093]
[116.87415314 136.40272522]
[120.52745819 150.95104980]
[124.18076324 165.49935913]
[127.83406830 180.04766846]
[131.48738098 194.59597778]
[135.14068604 209.14428711]
[138.79399109 223.69259644]
[142.44729614 238.24090576]
[152.13447571 243.30825806]
[157.30535889 252.68998718]
[156.45227051 263.14749146]
[150.10116577 271.22088623]
[153.20133972 285.89703369]
[166.16162109 294.53811646]
[169.09657288 309.46597290]
[160.77873230 321.76837158]
[163.87889099 336.44451904]
[166.97904968 351.12066650]
[170.07922363 365.79678345]
[180.50164795 377.69989014]
[175.56184387 391.75149536]
[178.66200256 406.42761230]
[181.76216125 421.10375977]
[186.61759949 428.89410400]
[184.77935791 436.08685303]
[187.60122681 450.81903076]
[190.56237793 465.52386475]
[193.66253662 480.19998169]
[204.08496094 492.10308838]
[199.14515686 506.15469360]
[202.24531555 520.83081055]
[207.10075378 528.62115479]
[205.26251221 535.81390381]
[208.08438110 550.54608154]
[210.90625000 565.27825928]
[230.59202576 570.80743408]
[244.75878906 585.44720459]
[249.60258484 605.15728760]
[243.87796021 624.55114746]
[229.21708679 638.36791992]
[233.69004822 652.68548584]
[238.16302490 667.00305176]
[252.66320801 672.85784912]
[259.96188354 686.68768311]
[256.61288452 701.96240234]
[244.19747925 711.46984863]
[228.57783508 710.72088623]
[217.12908936 700.06909180]
[215.25698853 684.54400635]
[223.84545898 671.47601318]
[219.37249756 657.15844727]
[214.89952087 642.84088135]
[204.87838745 642.67138672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 147]
[10 146]
[11 145]
[12 143]
[13 142]
[15 140]
[16 139]
[18 138]
[19 137]
[20 135]
[21 134]
[22 133]
[24 131]
[25 130]
[26 129]
[27 128]
[30 125]
[31 124]
[33 120]
[34 119]
[35 118]
[36 117]
[37 116]
[38 115]
[39 114]
[40 113]
[49 58]
[50 57]
[51 56]
[60 108]
[61 107]
[62 106]
[63 105]
[64 104]
[65 103]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[152 164]
[153 163]
[154 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
