%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCCGGGGGUCGCCUCCCGCCUCCCGCCUCCCGCCUCCCGCCGCCCGCCGCCCGCGUCGCCCUCGCCGCCGUUGGGCCGCGCCGCGCCGCCAUGUCGGGCCCCGGACCGCGGGAGCCGCCGCCGGAGGCAGGCGCGGCAGGCGGCGAGGCGGCCGUCGAGGGCGCGGGCGGCGGGGACGCGGCGCUGGGCG\
) } def
/len { sequence length } bind def

/coor [
[-137.06935120 561.97656250]
[-151.51606750 565.41577148]
[-159.15586853 578.32440186]
[-166.79566956 591.23309326]
[-174.43547058 604.14172363]
[-174.80563354 619.95861816]
[-187.94642639 626.97064209]
[-195.58624268 639.87933350]
[-203.22604370 652.78796387]
[-210.86584473 665.69659424]
[-218.50564575 678.60528564]
[-226.14544678 691.51391602]
[-219.86410522 705.70281982]
[-223.15533447 720.86682129]
[-234.75355530 731.17510986]
[-250.19905090 732.66394043]
[-263.55267334 724.76074219]
[-269.67971802 710.50457764]
[-266.22421265 695.37713623]
[-254.51483154 685.19531250]
[-239.05410767 683.87414551]
[-231.41430664 670.96545410]
[-223.77449036 658.05682373]
[-216.13468933 645.14813232]
[-208.49488831 632.23950195]
[-200.85508728 619.33087158]
[-201.03137207 604.43725586]
[-187.34413147 596.50195312]
[-179.70433044 583.59326172]
[-172.06452942 570.68463135]
[-164.42472839 557.77593994]
[-168.36143494 543.45684814]
[-160.79747009 530.25677490]
[-145.75154114 526.22467041]
[-138.11174011 513.31604004]
[-130.47193909 500.40737915]
[-122.83213806 487.49871826]
[-115.19233704 474.59005737]
[-119.12905121 460.27090454]
[-111.56509399 447.07086182]
[-96.51916504 443.03875732]
[-88.87936401 430.13009644]
[-81.23955536 417.22146606]
[-73.59975433 404.31280518]
[-65.95995331 391.40414429]
[-58.32015228 378.49548340]
[-51.10235977 365.34619141]
[-44.31415558 351.97009277]
[-37.52595139 338.59399414]
[-30.73774529 325.21786499]
[-23.94953918 311.84176636]
[-17.16133499 298.46566772]
[-10.37312889 285.08956909]
[-3.58492327 271.71343994]
[3.20328212 258.33734131]
[9.99148750 244.96122742]
[16.77969360 231.58512878]
[16.02932358 228.12619019]
[16.92597580 224.13113403]
[19.70362091 220.38212585]
[24.23620987 217.73626709]
[31.66598129 204.70559692]
[39.09574890 191.67491150]
[46.52552032 178.64424133]
[53.95529175 165.61357117]
[61.38505936 152.58288574]
[68.81482697 139.55221558]
[68.39739227 124.66345978]
[81.95435333 116.50750732]
[89.38411713 103.47683716]
[96.70813751 90.38642883]
[103.92592621 77.23715210]
[111.14372253 64.08787537]
[118.36151123 50.93859482]
[125.57929993 37.78931427]
[121.38603210 22.78750610]
[128.89321899 9.55508804]
[143.22099304 5.64990234]
[150.43878174 -7.49937582]
[157.65657043 -20.64865494]
[164.87435913 -33.79793167]
[172.09214783 -46.94721222]
[179.09605408 -60.21164322]
[185.88426208 -73.58775330]
[192.67247009 -86.96385956]
[199.46067810 -100.33996582]
[206.24888611 -113.71607208]
[213.03709412 -127.09218597]
[219.82528687 -140.46829224]
[226.61349487 -153.84440613]
[233.29318237 -167.27502441]
[239.86389160 -180.75930786]
[246.43460083 -194.24359131]
[244.71208191 -212.57038879]
[259.61563110 -221.82452393]
[265.96713257 -235.41343689]
[264.80114746 -251.19161987]
[277.19973755 -259.44537354]
[283.55123901 -273.03427124]
[289.90274048 -286.62316895]
[296.03335571 -300.31317139]
[301.94149780 -314.10061646]
[307.73779297 -327.93545532]
[313.42190552 -341.81677246]
[319.10601807 -355.69808960]
[324.79010010 -369.57940674]
[319.94186401 -384.87234497]
[328.99487305 -398.11706543]
[345.00442505 -399.15335083]
[355.68936157 -387.18624878]
[352.85311890 -371.39590454]
[338.67141724 -363.89529419]
[332.98733521 -350.01397705]
[327.30322266 -336.13265991]
[321.61911011 -322.25134277]
[321.99438477 -314.85946655]
[315.72894287 -308.19247437]
[309.82080078 -294.40502930]
[310.73751831 -289.70474243]
[308.70120239 -284.37982178]
[303.49163818 -280.27166748]
[297.14013672 -266.68276978]
[290.78863525 -253.09385681]
[292.40890503 -238.28764343]
[279.55603027 -229.06193542]
[273.20452881 -215.47302246]
[277.03588867 -203.98983765]
[271.84402466 -192.61193848]
[259.91888428 -187.67286682]
[253.34817505 -174.18859863]
[246.77745056 -160.70431519]
[246.67346191 -153.30364990]
[239.98960876 -147.05619812]
[233.20140076 -133.68008423]
[226.41319275 -120.30397797]
[219.62498474 -106.92787170]
[212.83679199 -93.55176544]
[206.04858398 -80.17565155]
[199.26037598 -66.79954529]
[192.47216797 -53.42343903]
[193.08268738 -48.67367935]
[190.70599365 -43.49173737]
[185.24142456 -39.72942352]
[178.02363586 -26.58014297]
[170.80584717 -13.43086529]
[163.58805847 -0.28158677]
[156.37026978 12.86769199]
[160.76860046 27.05184746]
[153.63604736 40.48990631]
[138.72857666 45.00710297]
[131.51078796 58.15638351]
[124.29299927 71.30566406]
[117.07521057 84.45494080]
[109.85742188 97.60421753]
[109.04524994 105.63622284]
[102.41479492 110.90660095]
[94.98502350 123.93727875]
[94.87104034 139.75807190]
[81.84550476 146.98197937]
[74.41573334 160.01266479]
[66.98596954 173.04333496]
[59.55619812 186.07400513]
[52.12642670 199.10469055]
[44.69665527 212.13536072]
[37.26688766 225.16604614]
[30.15580177 238.37332153]
[23.36759567 251.74943542]
[16.57938957 265.12554932]
[9.79118443 278.50164795]
[3.00297928 291.87774658]
[-3.78522611 305.25387573]
[-10.57343197 318.62997437]
[-17.36163712 332.00607300]
[-24.14984322 345.38220215]
[-30.93804741 358.75830078]
[-37.72625351 372.13439941]
[-37.33228683 376.49105835]
[-38.25992203 380.35388184]
[-40.18935394 383.36621094]
[-42.71744919 385.31289673]
[-45.41149521 386.13528442]
[-53.05129623 399.04394531]
[-60.69109726 411.95260620]
[-68.33090210 424.86126709]
[-75.97070312 437.76989746]
[-83.61050415 450.67855835]
[-79.90522766 465.80828857]
[-87.83695984 478.79067993]
[-102.28368378 482.22985840]
[-109.92348480 495.13851929]
[-117.56328583 508.04718018]
[-125.20308685 520.95581055]
[-132.84289551 533.86450195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 31]
[3 30]
[4 29]
[5 28]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[34 193]
[35 192]
[36 191]
[37 190]
[38 189]
[41 186]
[42 185]
[43 184]
[44 183]
[45 182]
[46 181]
[47 176]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[61 165]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[67 159]
[69 157]
[70 156]
[71 154]
[72 153]
[73 152]
[74 151]
[75 150]
[78 147]
[79 146]
[80 145]
[81 144]
[82 143]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[91 131]
[92 130]
[93 129]
[95 126]
[96 125]
[98 123]
[99 122]
[100 121]
[101 118]
[102 117]
[103 115]
[104 114]
[105 113]
[106 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
