%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUUACACACAGGCAGUGGUAUCUGUGAGCAGCUCUGUGGACUCAAAGGUUUUCUCCCUGAGAGGCAUGACCCAGGCCAGCUGAUUCAUCAGAAUCAGGAUGGACGUGGUAGAGGUCGCGGGCAGUUGGUGGGCACAAGAGCGAGAGGACAUCAUUAUGAAAUACGAAAAGGGACACCGAGCUGGGCUGCCAGAGGACA\
) } def
/len { sequence length } bind def

/coor [
[58.93657303 623.59436035]
[44.21676636 626.48004150]
[29.99290466 621.71752930]
[19.97846222 610.55010986]
[16.78795433 595.89288330]
[10.64409924 609.57690430]
[4.50024414 623.26098633]
[3.83870173 632.37969971]
[-1.84805715 637.10968018]
[-8.20503235 650.69604492]
[-14.56200790 664.28240967]
[-10.46840000 679.79437256]
[-20.15906334 692.57995605]
[-36.20014954 692.83111572]
[-46.28631210 680.35516357]
[-42.68030930 664.72259521]
[-28.14835548 657.92541504]
[-21.79138184 644.33905029]
[-15.43440533 630.75274658]
[-9.18379974 617.11712646]
[-3.03994393 603.43304443]
[3.10391140 589.74902344]
[8.16070843 575.62707520]
[12.09957886 561.15350342]
[16.03845024 546.67987061]
[19.97731972 532.20629883]
[12.38060379 519.44598389]
[16.16899681 504.71157837]
[29.60469055 496.82995605]
[33.54356003 482.35635376]
[37.48243332 467.88272095]
[41.19461060 453.34933472]
[44.67919159 438.75970459]
[48.16377258 424.17004395]
[51.64835358 409.58041382]
[55.13293457 394.99075317]
[50.56391525 380.81423950]
[61.29539871 369.18902588]
[64.77998352 354.59939575]
[68.26456451 340.00973511]
[60.27273941 327.49310303]
[63.59876251 312.64749146]
[76.78155518 304.34979248]
[80.26613617 289.76016235]
[65.41433716 283.70022583]
[55.20264435 271.97570801]
[51.48423767 257.38641357]
[54.62791061 243.16632080]
[63.52896500 232.26814270]
[75.93647003 226.75036621]
[75.93647003 211.75036621]
[75.93647003 196.75036621]
[75.93647003 181.75036621]
[75.93647003 166.75036621]
[75.93647003 151.75036621]
[75.93647003 136.75036621]
[75.93647003 121.75036621]
[68.53821564 108.70176697]
[55.66664124 100.99965668]
[42.79506683 93.29753876]
[29.92349243 85.59542847]
[24.68807602 85.51619720]
[20.43519974 83.62164307]
[17.69275093 80.59200287]
[16.64115715 77.21852875]
[4.14474392 68.92156219]
[-11.80216599 70.67530823]
[-23.01342392 59.19979858]
[-20.88871193 43.29806519]
[-7.05792713 35.16855240]
[7.86913538 41.04753113]
[12.44171143 56.42514801]
[24.93812370 64.72211456]
[37.62560654 72.72385406]
[50.49718094 80.42596436]
[63.36875534 88.12808228]
[76.24033356 95.83019257]
[88.05086517 86.58296204]
[83.66155243 72.23953247]
[79.27223969 57.89610291]
[65.51445007 45.66224289]
[70.11202240 28.72977448]
[65.49907684 14.45669937]
[60.88612366 0.18362440]
[56.27317047 -14.08945084]
[51.66021729 -28.36252594]
[47.04726410 -42.63560104]
[42.43431473 -56.90867615]
[29.90847969 -67.49336243]
[33.07807541 -83.58328247]
[48.68249130 -88.62651825]
[60.66924667 -77.43501282]
[56.70738983 -61.52162933]
[61.32033920 -47.24855423]
[65.93329620 -32.97547913]
[70.54624176 -18.70240211]
[75.15919495 -4.42932749]
[79.77214813 9.84374714]
[84.38510132 24.11682320]
[95.01197815 29.90636826]
[98.96896362 41.76619720]
[93.61566925 53.50679016]
[98.00498199 67.85021973]
[102.39429474 82.19364929]
[109.88307190 82.60372162]
[132.34941101 83.83396149]
[138.27865601 70.05556488]
[144.20788574 56.27716827]
[150.13711548 42.49877167]
[156.06636047 28.72037697]
[149.98645020 14.13235664]
[156.07977295 -0.45006317]
[170.73126221 -6.37539148]
[185.24844360 -0.12823549]
[191.01853943 14.58507729]
[184.61824036 29.03540039]
[169.84474182 34.64961243]
[163.91551208 48.42800903]
[157.98628235 62.20640182]
[152.05703735 75.98479462]
[146.12780762 89.76319122]
[151.80986023 94.65852356]
[168.85603333 109.34450531]
[181.60566711 101.44216156]
[185.32904053 86.31687927]
[198.37153625 78.48439789]
[212.76824951 82.12728119]
[225.51786804 74.22493744]
[238.26750183 66.32259369]
[240.32106018 50.82043839]
[251.89360046 40.30330276]
[267.52093506 39.73705673]
[279.82431030 49.38906479]
[282.99441528 64.70195007]
[275.53448486 78.44542694]
[260.96679688 84.13024902]
[246.16984558 79.07221985]
[233.42021179 86.97456360]
[220.67059326 94.87690735]
[217.52774048 109.39097595]
[204.71038818 117.58670044]
[189.50801086 114.19178772]
[176.75837708 122.09413147]
[90.93647003 121.75036621]
[90.93647003 136.75036621]
[90.93647003 151.75036621]
[90.93647003 166.75036621]
[90.93647003 181.75036621]
[90.93647003 196.75036621]
[90.93647003 211.75036621]
[90.93647003 226.75036621]
[111.82454681 239.69216919]
[116.70460510 266.37911987]
[131.41923523 269.29110718]
[146.13386536 272.20309448]
[162.84545898 269.34667969]
[170.21647644 284.61444092]
[157.58589172 295.92391968]
[143.22187805 286.91772461]
[128.50724792 284.00573730]
[113.79262543 281.09375000]
[125.30984497 290.70382690]
[139.50282288 295.55767822]
[148.94493103 307.21298218]
[150.74769592 322.10427856]
[144.35963440 335.67602539]
[131.73493958 343.77645874]
[116.73569489 343.92752075]
[103.95040894 336.08300781]
[97.29028320 322.64266968]
[98.79241943 307.71893311]
[94.85578156 293.24472046]
[91.37120056 307.83438110]
[99.38142395 321.19378662]
[95.63973236 335.94012451]
[82.85420227 343.49432373]
[79.36962128 358.08395386]
[75.88504028 372.67361450]
[80.20481873 387.89367676]
[69.72257996 398.47534180]
[66.23799896 413.06497192]
[62.75341415 427.65463257]
[59.26883698 442.24426270]
[55.78425598 456.83392334]
[57.30337524 463.28192139]
[55.58982849 468.71115112]
[51.95603943 471.82159424]
[48.01716995 486.29522705]
[44.07829666 500.76882935]
[51.66706848 514.37207031]
[47.46631241 528.99426270]
[34.45092773 536.14514160]
[30.51205635 550.61877441]
[26.57318497 565.09234619]
[22.63431549 579.56597900]
[34.40317154 570.26574707]
[49.23004532 567.99334717]
[63.24403381 573.34197998]
[72.78646851 584.91534424]
[75.36607361 599.69183350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 20]
[9 19]
[10 18]
[11 17]
[23 195]
[24 194]
[25 193]
[26 192]
[29 189]
[30 188]
[31 187]
[32 184]
[33 183]
[34 182]
[35 181]
[36 180]
[38 178]
[39 177]
[40 176]
[43 173]
[44 172]
[50 151]
[51 150]
[52 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 77]
[59 76]
[60 75]
[61 74]
[65 73]
[66 72]
[78 104]
[79 103]
[80 102]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[123 143]
[124 142]
[127 139]
[128 138]
[129 137]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
