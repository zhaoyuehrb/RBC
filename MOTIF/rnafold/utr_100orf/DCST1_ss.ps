%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:29:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGUCUUGGAAUCCUUGACCCAGUUCCGAGGACUGGAGAGGGGAUAGAACCUUGUGUCCAAGGAGGUCCUUCAGGAGACCUGGGAUGAGUGGUGCUUCCCCAAAACAGACUCAUGGACAUUAAACAUCAUCAGAAUGGCACAAGAGGGCAAAGAAGAAAACAGCCUCAUACCACGGUGCAGAGGCUCCUGACCUGGGGGCUGCCAGUCUCCU\
) } def
/len { sequence length } bind def

/coor [
[112.13992310 106.57967377]
[111.22959900 111.88379669]
[108.04818726 117.09197998]
[102.63085175 121.27182770]
[95.37849426 123.52612305]
[87.03165436 123.13018799]
[74.11495209 130.75637817]
[61.19824600 138.38255310]
[48.28153992 146.00874329]
[35.36483383 153.63493347]
[22.44812965 161.26112366]
[9.53142357 168.88729858]
[-2.73136258 177.52583313]
[-14.26106930 187.12092590]
[-25.79077721 196.71601868]
[-37.32048416 206.31111145]
[-48.85018921 215.90620422]
[-60.37989807 225.50129700]
[-59.49891281 240.88084412]
[-67.74640656 253.68052673]
[-81.78334808 259.10531616]
[-96.15103912 255.27027893]
[-107.68074036 264.86535645]
[-119.21044922 274.46044922]
[-130.74015808 284.05557251]
[-142.26986694 293.65066528]
[-153.79957581 303.24575806]
[-165.32928467 312.84085083]
[-173.63630676 327.62020874]
[-190.13769531 323.72915649]
[-190.96675110 306.79550171]
[-174.92437744 301.31112671]
[-163.39466858 291.71603394]
[-151.86495972 282.12094116]
[-140.33525085 272.52584839]
[-128.80554199 262.93075562]
[-117.27584076 253.33566284]
[-105.74613190 243.74057007]
[-106.90767670 228.91528320]
[-99.02351379 216.09718323]
[-84.93868256 210.31178284]
[-69.97499084 213.97160339]
[-58.44528580 204.37649536]
[-46.91558075 194.78140259]
[-35.38587189 185.18630981]
[-23.85616493 175.59121704]
[-12.32645798 165.99612427]
[-27.25571251 167.45123291]
[-41.18496704 161.88563538]
[-51.00086594 150.54330444]
[-54.50942993 135.95941162]
[-50.92646027 121.39362335]
[-41.05278778 110.10156250]
[-27.09530258 104.60715485]
[-12.17366982 106.13845062]
[0.37694347 114.35320282]
[7.75132179 127.41530609]
[8.30120277 142.40522766]
[1.90523720 155.97059631]
[14.82194233 148.34440613]
[27.73864746 140.71823120]
[40.65535355 133.09204102]
[53.57205963 125.46585083]
[66.48876190 117.83966827]
[79.40547180 110.21347809]
[79.95330048 95.22348785]
[67.62773132 86.67478943]
[55.30215836 78.12608337]
[42.97658539 69.57738495]
[30.65101433 61.02868652]
[18.26331520 52.57026291]
[5.81414986 44.20257187]
[-10.70437622 40.38489532]
[-11.60868168 23.45508385]
[4.40917158 17.89948082]
[14.18184280 31.75340462]
[26.63100815 40.12109756]
[33.93367386 41.24321747]
[39.19971466 48.70311356]
[51.52528763 57.25181580]
[63.85085678 65.80051422]
[76.17642975 74.34921265]
[88.50199890 82.89791870]
[103.38645172 84.75617218]
[117.43547058 79.50020599]
[131.48448181 74.24424744]
[145.53350830 68.98828125]
[152.47198486 63.05205917]
[159.82638550 63.75980377]
[173.95069885 58.70968246]
[184.34027100 46.77790451]
[198.92948914 49.77855682]
[213.05380249 44.72843552]
[227.17813110 39.67831039]
[241.30244446 34.62818909]
[255.38948059 29.47500801]
[269.43850708 24.21904564]
[273.92721558 19.37152672]
[279.37255859 17.75840950]
[283.97555542 19.02134132]
[298.17214966 14.17813587]
[312.36877441 9.33493042]
[326.56536865 4.49172401]
[340.76196289 -0.35148206]
[345.43313599 -15.03092957]
[357.70889282 -24.03979301]
[372.75750732 -24.09219742]
[384.80715942 -15.37762165]
[399.00375366 -20.22082710]
[413.20034790 -25.06403351]
[419.88690186 -47.64614487]
[447.91207886 -55.25748062]
[457.07968140 -67.12992859]
[466.24728394 -79.00237274]
[468.55755615 -94.65399933]
[482.46017456 -99.99875641]
[491.62777710 -111.87120056]
[489.08050537 -129.17962646]
[499.63281250 -142.70782471]
[516.36828613 -144.38325500]
[525.36145020 -156.38838196]
[534.35461426 -168.39350891]
[543.34777832 -180.39865112]
[536.26654053 -193.91970825]
[535.76171875 -209.17446899]
[541.93353271 -223.13410950]
[553.55657959 -233.02691650]
[568.32305908 -236.88865662]
[583.30114746 -233.95260620]
[595.51684570 -224.80171204]
[602.54479980 -211.25286865]
[602.98956299 -195.99623108]
[596.76281738 -182.06101990]
[585.10089111 -172.21406555]
[570.31927490 -168.41047668]
[555.35290527 -171.40550232]
[546.35974121 -159.40036011]
[537.36657715 -147.39523315]
[528.37347412 -135.39009094]
[531.96942139 -123.01863861]
[527.72076416 -110.64994049]
[516.96636963 -102.87139130]
[503.50021362 -102.70359802]
[494.33261108 -90.83114624]
[492.67807007 -76.02872467]
[478.11972046 -69.83477020]
[468.95211792 -57.96232224]
[459.78451538 -46.08987427]
[461.57528687 -38.80680466]
[475.31259155 -44.83067322]
[489.04986572 -50.85454178]
[502.78713989 -56.87841034]
[512.83587646 -68.01499939]
[527.48168945 -71.25526428]
[541.29034424 -65.39691162]
[549.13818359 -52.61366653]
[548.11328125 -37.64872360]
[538.59588623 -26.05479050]
[524.11743164 -22.13376999]
[510.04992676 -27.34069633]
[495.08557129 -26.30735207]
[480.12121582 -25.27400780]
[465.15686035 -24.24066162]
[466.94763184 -16.95759010]
[480.57550049 -10.69013786]
[494.20336914 -4.42268515]
[507.83123779 1.84476805]
[521.45910645 8.11222076]
[535.08703613 14.37967396]
[553.37945557 12.25408173]
[562.95227051 26.96375084]
[576.67022705 33.03141022]
[590.38824463 39.09907150]
[606.62658691 36.80815125]
[616.51525879 49.89044952]
[609.88159180 64.88801575]
[593.54980469 66.37264252]
[584.32055664 52.81707001]
[570.60260010 46.74940872]
[556.88458252 40.68175125]
[545.49475098 44.75019073]
[534.01745605 39.80981827]
[528.81958008 28.00755119]
[515.19165039 21.74009895]
[501.56381226 15.47264481]
[487.93591309 9.20519257]
[474.30804443 2.93773913]
[460.68017578 -3.32971382]
[434.72930908 3.02685261]
[418.04357910 -10.86743736]
[403.84695435 -6.02423143]
[389.65036011 -1.18102527]
[385.43923950 13.08096218]
[373.49627686 22.23681068]
[358.27407837 22.60893631]
[345.60516357 13.84511471]
[331.40856934 18.68832016]
[317.21197510 23.53152657]
[303.01538086 28.37473297]
[288.81878662 33.21793747]
[274.69445801 38.26806259]
[260.64544678 43.52402496]
[255.48371887 48.81029510]
[246.35255432 48.75250244]
[232.22824097 53.80262375]
[218.10392761 58.85274887]
[203.97961426 63.90287018]
[194.60031128 75.47342682]
[179.00082397 72.83399200]
[164.87651062 77.88411713]
[150.78945923 83.03730011]
[136.74044800 88.29325867]
[122.69142914 93.54922485]
[108.64241791 98.80518341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 65]
[7 64]
[8 63]
[9 62]
[10 61]
[11 60]
[12 59]
[13 47]
[14 46]
[15 45]
[16 44]
[17 43]
[18 42]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[71 77]
[72 76]
[84 214]
[85 213]
[86 212]
[87 211]
[89 210]
[90 209]
[92 207]
[93 206]
[94 205]
[95 204]
[96 202]
[97 201]
[100 200]
[101 199]
[102 198]
[103 197]
[104 196]
[108 192]
[109 191]
[110 190]
[112 148]
[113 147]
[114 146]
[116 144]
[117 143]
[120 139]
[121 138]
[122 137]
[123 136]
[164 188]
[165 187]
[166 186]
[167 185]
[168 184]
[169 183]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
