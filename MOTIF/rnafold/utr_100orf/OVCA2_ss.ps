%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAUUGUGCUUCCGCUCGGGGAAAGACCGCUUCCGGUGCUUCCGUCGCUCCUUGCCGGGCAUAAUGGCCGCGCAGCGACCCCUGCGGGUCCUGUGCCUGGCGGGCUUCCGGCAGAGCGAGCGGGGCUUCCGUGAGAAGACCGGGGCGCUGAGGAAGGCGCUGC\
) } def
/len { sequence length } bind def

/coor [
[52.62443542 157.75659180]
[56.02944183 143.14825439]
[48.55662537 143.78620911]
[44.62865829 158.26278687]
[40.70069122 172.73934937]
[42.38833618 189.60910034]
[26.64505577 195.90078735]
[16.24106407 182.51448059]
[26.22412109 168.81138611]
[30.15208817 154.33480835]
[34.08005524 139.85824585]
[47.32134247 110.43445587]
[69.98253632 95.37925720]
[93.82532501 96.61859131]
[86.48981476 83.53461456]
[79.15430450 70.45064545]
[71.81879425 57.36667633]
[64.48328400 44.28270340]
[57.14777756 31.19873428]
[49.81226730 18.11476326]
[28.98399925 15.30090427]
[16.53780365 -3.85888839]
[2.22024202 0.61408037]
[-12.09731865 5.08704901]
[-26.41487885 9.56001759]
[-33.79275894 23.27878761]
[-48.37652206 27.61105537]
[-61.40980530 20.49283028]
[-75.72736359 24.96579742]
[-90.04492950 29.43876648]
[-104.36248779 33.91173553]
[-115.06931305 46.33332443]
[-131.12742615 43.00632858]
[-136.01762390 27.35327530]
[-124.70928192 15.47668457]
[-108.83545685 19.59417534]
[-94.51789856 15.12120628]
[-80.20033264 10.64823723]
[-65.88277435 6.17526865]
[-59.21951675 -7.09637833]
[-44.76319504 -11.83656406]
[-30.88784790 -4.75754309]
[-16.57028770 -9.23051167]
[-2.25272655 -13.70348072]
[12.06483459 -18.17644882]
[20.25028610 -30.74619102]
[18.55067062 -45.64958954]
[16.85105515 -60.55298996]
[15.15143967 -75.45639038]
[0.33123568 -83.56476593]
[-6.68109894 -98.75138092]
[-3.30944467 -114.96602631]
[8.92797947 -125.87748718]
[6.94663525 -140.74606323]
[4.96529055 -155.61462402]
[2.98394585 -170.48318481]
[1.00260115 -185.35176086]
[-0.97874343 -200.22032166]
[-2.96008801 -215.08888245]
[-4.94143248 -229.95745850]
[-6.92277718 -244.82601929]
[-8.90412235 -259.69458008]
[-10.88546658 -274.56317139]
[-12.86681080 -289.43173218]
[-14.84815598 -304.30029297]
[-24.61833954 -312.76495361]
[-25.94152832 -325.22042847]
[-18.64976692 -334.90679932]
[-20.34938240 -349.81021118]
[-22.04899597 -364.71359253]
[-23.74861145 -379.61700439]
[-27.84624481 -387.83126831]
[-25.33662224 -394.81814575]
[-26.75389862 -409.75103760]
[-28.17117691 -424.68392944]
[-29.58845329 -439.61682129]
[-31.00572968 -454.54971313]
[-43.34511185 -464.42471313]
[-45.00464249 -480.14163208]
[-34.99975586 -492.37591553]
[-19.26617050 -493.86917114]
[-7.13834524 -483.73550415]
[-5.81150341 -467.98699951]
[-16.07283592 -455.96701050]
[-14.65555954 -441.03411865]
[-13.23828220 -426.10122681]
[-11.82100582 -411.16833496]
[-10.40372849 -396.23541260]
[-8.84521294 -381.31661987]
[-7.14559746 -366.41320801]
[-5.44598246 -351.50982666]
[-3.74636722 -336.60641479]
[7.44260216 -323.11141968]
[0.02041082 -306.28164673]
[2.00175548 -291.41305542]
[3.98310018 -276.54449463]
[5.96444464 -261.67593384]
[7.94578934 -246.80737305]
[9.92713356 -231.93879700]
[11.90847874 -217.07023621]
[13.88982296 -202.20167542]
[15.87116814 -187.33309937]
[17.85251236 -172.46453857]
[19.83385658 -157.59596252]
[21.81520081 -142.72740173]
[23.79654694 -127.85883331]
[36.09858704 -122.60977936]
[44.25703049 -111.87460327]
[46.04873657 -98.40135193]
[40.89791870 -85.70623016]
[30.05484009 -77.15600586]
[31.75445366 -62.25260544]
[33.45407104 -47.34920502]
[35.15368652 -32.44580460]
[50.04552841 -32.90219879]
[62.67238998 -25.91630173]
[69.72299194 -13.86497116]
[69.63002777 -0.37118739]
[62.89623642 10.77925301]
[70.23175049 23.86322403]
[77.56726074 36.94719315]
[84.90276337 50.03116608]
[92.23827362 63.11513519]
[99.57378387 76.19910431]
[106.90929413 89.28308105]
[118.19468689 99.16436768]
[132.13296509 104.70734406]
[146.12306213 110.11818695]
[160.16372681 115.39640045]
[174.20440674 120.67461395]
[188.24507141 125.95282745]
[203.39062500 120.66213226]
[216.89289856 129.32632446]
[218.39408875 145.29898071]
[206.74261475 156.32725525]
[190.87649536 153.95118713]
[182.96685791 139.99349976]
[168.92617798 134.71528625]
[154.88551331 129.43707275]
[140.84484863 124.15885925]
[133.44459534 124.75128937]
[126.58998108 118.64561462]
[112.65171051 113.10263824]
[107.50107574 118.55433655]
[97.19980621 129.45771790]
[92.04917145 134.90940857]
[98.37415314 148.51068115]
[104.69912720 162.11196899]
[111.02410126 175.71324158]
[117.34908295 189.31451416]
[123.67405701 202.91578674]
[138.60363770 208.10067749]
[145.41889954 222.35998535]
[140.07646179 237.23391724]
[125.74588776 243.89802551]
[110.92927551 238.39863586]
[104.41703796 223.99841309]
[110.07278442 209.24076843]
[103.74780273 195.63949585]
[97.42282867 182.03820801]
[91.09785461 168.43693542]
[84.77287292 154.83566284]
[78.44789886 141.23439026]
[70.97508240 141.87234497]
[76.80697632 155.69223022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 11]
[4 10]
[5 9]
[14 125]
[15 124]
[16 123]
[17 122]
[18 121]
[19 120]
[20 119]
[22 45]
[23 44]
[24 43]
[25 42]
[28 39]
[29 38]
[30 37]
[31 36]
[46 114]
[47 113]
[48 112]
[49 111]
[53 106]
[54 105]
[55 104]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[63 96]
[64 95]
[65 94]
[68 92]
[69 91]
[70 90]
[71 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[126 143]
[127 142]
[128 140]
[129 139]
[130 138]
[131 137]
[146 163]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
