%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGUCCCAGAGCCGCAGCUGCUGCGCCCGCGCGCUCCCGGGGACAUUCUAACCGCCGCCAGGUCCCGCCGCCUCUCGCCCCGCUAUUAAUACCGGCGGCCCGGGAGGGGGGCGCAGCACGCGCCGCGCAGCCAUGGGGAGGCUGCUGGCCUUAGUGGUCGGCGCGGCACUGGUGUCCUCAGCCUGCGGGGGCUGCGUGGAGGUGGACUCGGAGACCGAGGCCGUGUAUGGGA\
) } def
/len { sequence length } bind def

/coor [
[270.99783325 892.46276855]
[281.45297241 881.14916992]
[278.65014648 866.41339111]
[275.84735107 851.67755127]
[273.04455566 836.94177246]
[270.24172974 822.20593262]
[267.34008789 807.48925781]
[264.33969116 792.79241943]
[259.92926025 786.87695312]
[261.39907837 777.87817383]
[258.59625244 763.14233398]
[255.79345703 748.40649414]
[252.89179993 733.68988037]
[249.89141846 718.99298096]
[246.89102173 704.29614258]
[243.89064026 689.59924316]
[231.36181641 681.62652588]
[228.10963440 666.76458740]
[236.55711365 653.67724609]
[233.55673218 638.98040771]
[230.55633545 624.28356934]
[227.55595398 609.58666992]
[213.71469116 596.07141113]
[220.43531799 577.05529785]
[217.04142761 562.44427490]
[206.62512207 551.79766846]
[211.03935242 536.60473633]
[207.64547729 521.99371338]
[204.25158691 507.38272095]
[200.85769653 492.77172852]
[197.46382141 478.16070557]
[194.06993103 463.54971313]
[183.65362549 452.90313721]
[188.06785583 437.71020508]
[184.67398071 423.09918213]
[181.28009033 408.48818970]
[178.51287842 406.32739258]
[176.64776611 402.72598267]
[176.34736633 398.11926270]
[178.05630493 393.22070312]
[175.25349426 378.48489380]
[172.45069885 363.74908447]
[169.64788818 349.01327515]
[166.84507751 334.27746582]
[164.04226685 319.54162598]
[161.23947144 304.80581665]
[158.43666077 290.07000732]
[155.63385010 275.33419800]
[141.52546692 270.55728149]
[131.63661194 259.28488159]
[128.69837952 244.47836304]
[133.59806824 230.09469604]
[145.11462402 220.02909851]
[142.31181335 205.29327393]
[139.50900269 190.55746460]
[136.70620728 175.82164001]
[132.37559509 169.84754944]
[133.96607971 160.86926270]
[131.36135864 146.09713745]
[128.75662231 131.32502747]
[119.66566467 140.51763916]
[107.62579346 146.93753052]
[93.52198029 149.64712524]
[78.53203583 148.00099182]
[64.02830505 141.73516846]
[51.45284271 131.02304077]
[42.17751694 116.49047089]
[37.36229324 99.18617249]
[37.82580185 80.50810242]
[27.72912598 69.41498566]
[19.65210342 65.18403625]
[17.57259178 58.10451508]
[7.62575150 46.87685013]
[-2.32108855 35.64918900]
[-12.26792812 24.42152977]
[-22.21476746 13.19386864]
[-32.16160965 1.96620715]
[-42.10844803 -9.26145458]
[-57.64576721 -10.37029266]
[-67.57333374 -21.89843369]
[-66.42047119 -36.70405960]
[-76.36731720 -47.93172073]
[-86.31415558 -59.15938187]
[-96.26099396 -70.38703918]
[-106.20783234 -81.61470032]
[-121.43704224 -79.14999390]
[-135.57205200 -85.33102417]
[-144.10241699 -98.18544769]
[-144.30615234 -113.61147308]
[-136.11824036 -126.68669128]
[-122.15139771 -133.23887634]
[-106.86241150 -131.17721558]
[-95.12993622 -121.15961456]
[-90.69775391 -106.38262177]
[-94.98017120 -91.56154633]
[-85.03333282 -80.33388519]
[-75.08649445 -69.10622406]
[-65.13965607 -57.87855911]
[-55.19281387 -46.65089798]
[-40.35617828 -46.01073074]
[-30.10872459 -34.76598358]
[-30.88078690 -19.20829391]
[-20.93394661 -7.98063278]
[-10.98710728 3.24702835]
[-1.04026723 14.47468948]
[8.90657234 25.70235062]
[18.85341263 36.93001175]
[28.80025291 48.15767288]
[38.82223511 59.31830978]
[48.91891479 70.41142273]
[62.97954559 65.18661499]
[63.38226700 50.19202423]
[63.78498840 35.19742966]
[64.18770599 20.20283699]
[64.59042358 5.20824480]
[54.64300156 -7.37858629]
[58.42185211 -22.97024536]
[73.02816772 -29.60614777]
[87.25722504 -22.19579506]
[90.19371796 -6.42377663]
[79.58502197 5.61096478]
[79.18229675 20.60555840]
[78.77957916 35.60015106]
[78.37686157 50.59474182]
[77.97413635 65.58933258]
[85.17802429 67.67596436]
[99.58580017 71.84922791]
[106.78968048 73.93585968]
[114.46340942 61.04734039]
[122.13713074 48.15881729]
[129.81085205 35.27029800]
[137.48457336 22.38177490]
[145.15829468 9.49325371]
[139.83720398 -5.21116400]
[145.26133728 -19.87788773]
[158.86958313 -27.58173752]
[174.23657227 -24.68519402]
[184.10644531 -12.55591297]
[183.81898499 3.07902765]
[173.50988770 14.83728790]
[158.04681396 17.16697693]
[150.37309265 30.05549812]
[142.69937134 42.94401932]
[135.02565002 55.83253860]
[127.35192871 68.72106171]
[119.67820740 81.60958099]
[125.08721924 86.80501556]
[141.31428528 102.39131165]
[153.88336182 94.20484924]
[166.45243835 86.01837921]
[179.02151489 77.83190918]
[183.72949219 62.49520493]
[198.70780945 56.74806595]
[212.46638489 64.99920654]
[214.45080566 80.91905212]
[203.13880920 92.29526520]
[187.20797729 90.40099335]
[174.63890076 98.58745575]
[162.06982422 106.77392578]
[149.50074768 114.96039581]
[143.52874756 128.72030640]
[146.13346863 143.49241638]
[148.73818970 158.26454163]
[151.44201660 173.01882935]
[154.24482727 187.75465393]
[157.04762268 202.49046326]
[159.85043335 217.22628784]
[174.25813293 222.36100769]
[184.09631348 233.94146729]
[186.79910278 248.79277039]
[181.73915100 262.90847778]
[170.36967468 272.53137207]
[173.17247009 287.26721191]
[175.97528076 302.00302124]
[178.77809143 316.73883057]
[181.58090210 331.47463989]
[184.38369751 346.21044922]
[187.18650818 360.94628906]
[189.98931885 375.68209839]
[192.79212952 390.41790771]
[195.89109802 405.09429932]
[199.28498840 419.70529175]
[202.67886353 434.31631470]
[213.33793640 446.00796509]
[208.68093872 460.15582275]
[212.07482910 474.76684570]
[215.46870422 489.37783813]
[218.86259460 503.98886108]
[222.25648499 518.59985352]
[225.65036011 533.21087646]
[236.30943298 544.90252686]
[231.65243530 559.05035400]
[235.04632568 573.66137695]
[244.57832336 578.85870361]
[249.58134460 588.24621582]
[248.62078857 598.61993408]
[242.25280762 606.58630371]
[245.25320435 621.28314209]
[248.25358582 635.98004150]
[251.25396729 650.67687988]
[264.15527344 659.40582275]
[266.98870850 674.35327148]
[258.58749390 686.59887695]
[261.58789062 701.29571533]
[264.58825684 715.99261475]
[267.58865356 730.68945312]
[272.36422729 738.45690918]
[270.52926636 745.60369873]
[273.33209229 760.33953857]
[276.13488770 775.07531738]
[279.03656006 789.79199219]
[282.03692627 804.48889160]
[286.81253052 812.25628662]
[284.97753906 819.40313721]
[287.78036499 834.13891602]
[290.58316040 848.87475586]
[293.38598633 863.61059570]
[296.18878174 878.34637451]
[310.06735229 885.03155518]
[317.26416016 898.45019531]
[315.20401001 913.35723877]
[304.88455200 924.06451416]
[307.68734741 938.80035400]
[321.42108154 946.27819824]
[327.08688354 960.85327148]
[322.00955200 975.64367676]
[308.58645630 983.66577148]
[293.15554810 981.13177490]
[283.00283813 969.23822021]
[282.92211914 953.60089111]
[292.95153809 941.60314941]
[290.14871216 926.86737061]
[276.61892700 920.69622803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 218]
[3 217]
[4 216]
[5 215]
[6 214]
[7 212]
[8 211]
[10 210]
[11 209]
[12 208]
[13 206]
[14 205]
[15 204]
[16 203]
[19 200]
[20 199]
[21 198]
[22 197]
[24 193]
[25 192]
[27 190]
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[34 183]
[35 182]
[36 181]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[53 167]
[54 166]
[55 165]
[56 164]
[58 163]
[59 162]
[60 161]
[69 110]
[70 109]
[72 108]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[111 125]
[112 124]
[113 123]
[114 122]
[115 121]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[148 160]
[149 159]
[150 158]
[151 157]
[222 232]
[223 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
