%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGAUUUCACGCAGGUUCUAUAGAAUUUGCCAAGACUGCUGGCCUGUUUUCUACCCUGAUUCCUUAGGUGGCUUCUGGGACAGAAUUACGGUUCUCUAAGUAUUUGCUUGCAGGAUUUCUAUAAUUGGCCUGAUGAAUCCUUUGAUGAAAUGGACAGUACACUAGCUGUUCAACAGUAUAUUCAACAGAACAUAAGAGCAGAUUGCUCCAAUAUUGACAAAAUUCUUGAACCACCUGAAGGCCAAGAUG\
) } def
/len { sequence length } bind def

/coor [
[143.59999084 226.49636841]
[137.92483521 212.61138916]
[132.24969482 198.72640991]
[126.57455444 184.84141541]
[120.89941406 170.95643616]
[115.22426605 157.07145691]
[108.75440979 158.41481018]
[102.17498779 159.02709961]
[95.56835175 158.90068054]
[89.01717377 158.03710938]
[82.60344696 156.44721985]
[76.40744019 154.15090942]
[68.71855164 167.03038025]
[61.02967072 179.90986633]
[53.34078598 192.78935242]
[45.65190125 205.66883850]
[37.96301651 218.54830933]
[30.27413368 231.42779541]
[22.58524895 244.30728149]
[22.88694954 260.70364380]
[8.70045948 268.93017578]
[-5.38037539 260.52407837]
[-4.87039995 244.13287354]
[9.70576763 236.61839294]
[17.39465141 223.73890686]
[25.08353424 210.85943604]
[32.77241898 197.97994995]
[40.46130371 185.10046387]
[48.15018845 172.22097778]
[55.83906937 159.34150696]
[63.52795410 146.46202087]
[44.65117264 120.62611389]
[42.01651382 88.73747253]
[27.77404976 84.03085327]
[13.78474236 90.88191223]
[-0.59209245 85.90583801]
[-7.03731918 72.52695465]
[-21.27978134 67.82033539]
[-35.52224350 63.11371613]
[-49.76470566 58.40709686]
[-65.29570770 61.42350006]
[-74.95244598 50.08345795]
[-89.19490814 45.37683868]
[-103.43737030 40.67021942]
[-118.03704834 37.22789764]
[-132.88192749 35.07628250]
[-147.72680664 32.92466736]
[-162.57170105 30.77305412]
[-179.52696228 37.98696899]
[-192.86395264 26.56429672]
[-207.73460388 24.59864807]
[-222.60525513 22.63299942]
[-237.47590637 20.66735077]
[-254.33955383 28.09291267]
[-267.81848145 16.83806038]
[-282.71255493 15.05868721]
[-297.60665894 13.27931309]
[-312.22723389 19.32493782]
[-323.94677734 10.13249779]
[-338.84088135 8.35312366]
[-351.18774414 17.85008621]
[-366.26712036 15.83337688]
[-375.24493408 4.00398636]
[-390.13903809 2.22461247]
[-402.40460205 12.19112110]
[-418.11624146 10.48235607]
[-427.95251465 -1.88790238]
[-426.07772827 -17.58059883]
[-413.60415649 -27.28553581]
[-397.93215942 -25.24494553]
[-388.35964966 -12.66947460]
[-373.46557617 -10.89010048]
[-361.95373535 -20.27162361]
[-346.82363892 -18.67925644]
[-337.06149292 -6.54096270]
[-322.16741943 -4.76158905]
[-308.61218262 -10.93448639]
[-295.82727051 -1.61477351]
[-280.93319702 0.16460018]
[-266.03909302 1.94397390]
[-256.35635376 -5.27947664]
[-243.94812012 -3.93613291]
[-235.51025391 5.79670143]
[-220.63961792 7.76235008]
[-205.76896667 9.72799873]
[-190.89831543 11.69364643]
[-181.12593079 4.59195089]
[-168.73547363 6.09049082]
[-160.42007446 15.92817116]
[-145.57519531 18.07978630]
[-130.73031616 20.23140144]
[-115.88542938 22.38301659]
[-127.78588867 13.25180244]
[-135.34207153 0.29401705]
[-137.42840576 -14.56018066]
[-133.73413086 -29.09814262]
[-124.80954742 -41.15433121]
[-111.98402405 -48.93288422]
[-97.16802216 -51.27512741]
[-82.56849670 -47.83216476]
[-70.36016846 -39.11685181]
[-62.36155319 -26.42740250]
[-59.76410675 -11.65400505]
[-62.95473480 3.00272942]
[-71.45817566 15.35956955]
[-84.00777435 23.57586861]
[-98.73075867 26.42775726]
[-84.48828888 31.13437653]
[-70.24582672 35.84099579]
[-55.73354721 32.48794174]
[-45.05808640 44.16463470]
[-30.81562614 48.87125015]
[-16.57316208 53.57786942]
[-2.33070016 58.28448868]
[10.81729889 51.38045502]
[25.32822990 55.95074463]
[32.48067093 69.78839111]
[46.72313309 74.49501038]
[53.09290695 64.10217285]
[61.46034241 55.23813629]
[71.46909332 48.28040314]
[82.69290161 43.52528381]
[94.65377808 41.17528534]
[106.84233856 41.33048630]
[118.73949432 43.98428345]
[129.83859253 49.02365112]
[139.66693115 56.23398209]
[151.06996155 46.48869324]
[152.45536804 30.97358894]
[164.15849304 21.25292206]
[178.94123840 22.66929626]
[190.34426880 12.92400742]
[201.74731445 3.17871785]
[207.21142578 -11.66897678]
[221.91354370 -14.05578995]
[233.31658936 -23.80107880]
[244.71963501 -33.54636765]
[256.12268066 -43.29165649]
[267.52572632 -53.03694916]
[263.84671021 -64.43344879]
[264.21371460 -76.36888123]
[268.56076050 -87.45349121]
[276.35977173 -96.40442657]
[286.68469238 -102.19417572]
[298.32128906 -104.16849518]
[309.91003418 -102.12030029]
[320.10488892 -96.31106567]
[331.86572266 -105.62141418]
[332.49118042 -116.44768524]
[338.82913208 -124.97545624]
[348.60339355 -128.54544067]
[358.51870728 -126.21016693]
[370.50891113 -135.22322083]
[382.49911499 -144.23628235]
[394.48928833 -153.24934387]
[406.47949219 -162.26239014]
[418.46969604 -171.27545166]
[430.45989990 -180.28851318]
[442.45007324 -189.30157471]
[444.41967773 -204.98265076]
[456.95169067 -214.61201477]
[472.61105347 -212.47673035]
[482.10739136 -199.84362793]
[479.80667114 -184.20770264]
[467.07388306 -174.84547424]
[451.46313477 -177.31137085]
[439.47293091 -168.29832458]
[427.48275757 -159.28526306]
[415.49255371 -150.27220154]
[403.50234985 -141.25914001]
[391.51217651 -132.24607849]
[379.52197266 -123.23302460]
[367.53176880 -114.21997070]
[361.24612427 -95.91825867]
[341.17608643 -93.86057281]
[329.41522217 -84.55022430]
[332.86254883 -66.73159027]
[326.73568726 -49.55728149]
[312.65737915 -37.83470917]
[294.48883057 -34.89209366]
[277.27099609 -41.63390732]
[265.86795044 -31.88861656]
[254.46492004 -22.14332771]
[243.06187439 -12.39803886]
[231.65884399 -2.65274930]
[227.01034546 11.49789715]
[211.49259949 14.58175850]
[200.08956909 24.32704735]
[188.68652344 34.07233810]
[187.78221130 48.89521790]
[176.35671997 58.94076920]
[160.81526184 57.89173508]
[149.41221619 67.63702393]
[154.97515869 78.39765167]
[158.22595215 90.06684113]
[159.02787781 102.15379333]
[157.34721375 114.15016174]
[171.33628845 119.56363678]
[185.32536316 124.97711182]
[199.31443787 130.39059448]
[213.30351257 135.80406189]
[230.25729370 135.88153076]
[234.87611389 152.19418335]
[220.47958374 161.14830017]
[207.89004517 149.79313660]
[193.90097046 144.37966919]
[179.91188049 138.96618652]
[165.92280579 133.55271912]
[151.93373108 128.13923645]
[148.47059631 133.75692749]
[144.40242004 138.95324707]
[139.77995300 143.66329956]
[134.66093445 147.82832336]
[129.10925293 151.39631653]
[134.78439331 165.28129578]
[140.45953369 179.16627502]
[146.13467407 193.05125427]
[151.80982971 206.93624878]
[157.48497009 220.82122803]
[169.88359070 222.16366577]
[180.47882080 228.60388184]
[187.29930115 238.87199402]
[189.10649109 250.99284363]
[185.61923218 262.66583252]
[177.55545044 271.70153809]
[182.88127136 285.72421265]
[188.20709229 299.74691772]
[193.53291321 313.76959229]
[198.85874939 327.79226685]
[210.26821899 333.77136230]
[214.42324829 345.54016113]
[209.61465454 356.62219238]
[214.76455688 370.71041870]
[229.52716064 375.86788940]
[237.47634888 389.33432007]
[234.85873413 404.75125122]
[222.91030884 414.83932495]
[207.27272034 414.83520508]
[195.32957458 404.74090576]
[192.72006226 389.32257080]
[200.67631531 375.86032104]
[195.52641296 361.77209473]
[181.47868347 351.23574829]
[184.83605957 333.11810303]
[179.51023865 319.09542847]
[174.18441772 305.07272339]
[168.85859680 291.05004883]
[163.53276062 277.02737427]
[146.27699280 273.17675781]
[134.69998169 259.60620117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 219]
[2 218]
[3 217]
[4 216]
[5 215]
[6 214]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[33 118]
[34 117]
[37 114]
[38 113]
[39 112]
[40 111]
[42 109]
[43 108]
[44 107]
[45 92]
[46 91]
[47 90]
[48 89]
[50 86]
[51 85]
[52 84]
[53 83]
[55 80]
[56 79]
[57 78]
[59 76]
[60 75]
[63 72]
[64 71]
[127 193]
[128 192]
[131 189]
[132 188]
[133 187]
[135 185]
[136 184]
[137 183]
[138 182]
[139 181]
[147 176]
[148 175]
[152 173]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[197 209]
[198 208]
[199 207]
[200 206]
[201 205]
[225 248]
[226 247]
[227 246]
[228 245]
[229 244]
[232 242]
[233 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
