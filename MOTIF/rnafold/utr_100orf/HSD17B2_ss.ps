%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCACUGGGAAUAUGAUUAUGCUUAAUCUAUGCUCAGUUGAAAGGGGCUGGGGCUGCUUUCUCCCCUCCCUUCUUGACUCUCUGUUCACAGAACUCAGGCUGCCUCCAGCCAGCCUUUGCCCGCUAGACUCACUGGCCCUGAGCACUUGAAGGUGCAGCAAGUCACUGAGAAUGAGCACUUUCUUCUCGGACACAGCAUGGAUCUGCCUGGCUGUCCCCACAGUACUAUGUGGGACAGUAUUUUGCAAAUACAA\
GAAGAGCUCAGGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[138.92492676 146.91664124]
[125.06221008 155.57162476]
[109.39833069 160.23281860]
[93.05902100 160.56520081]
[77.21853638 156.54490662]
[69.94387817 169.66279602]
[62.66921997 182.78070068]
[55.39455795 195.89860535]
[48.11989594 209.01649475]
[40.84523773 222.13439941]
[40.91894150 237.95544434]
[27.98002815 245.33335876]
[20.70536613 258.45126343]
[13.43070698 271.56915283]
[12.01527405 280.55502319]
[5.99610758 284.79547119]
[-1.42902410 297.82876587]
[-8.85415554 310.86209106]
[-16.27928734 323.89541626]
[-23.70442009 336.92874146]
[-23.06903648 353.31558228]
[-37.08514023 361.82913208]
[-51.33415985 353.71142578]
[-51.15793228 337.31323242]
[-36.73773956 329.50360107]
[-29.31260681 316.47027588]
[-21.88747597 303.43698120]
[-14.46234322 290.40365601]
[-7.03721189 277.37033081]
[0.31280595 264.29449463]
[7.58746624 251.17660522]
[14.86212635 238.05870056]
[14.26808929 223.17594910]
[27.72733688 214.85974121]
[35.00199509 201.74183655]
[42.27665710 188.62394714]
[49.55131912 175.50604248]
[56.82597733 162.38813782]
[64.10063934 149.27023315]
[48.82643890 133.12985229]
[40.35202408 112.58728027]
[39.80344772 90.37213898]
[25.39567566 86.19888306]
[10.98790359 82.02561951]
[-3.41986799 77.85235596]
[-17.82763863 73.67909241]
[-32.28248215 69.67190552]
[-46.78247833 65.83132172]
[-61.28247452 61.99073029]
[-75.78247070 58.15014648]
[-90.28246307 54.30955887]
[-104.78246307 50.46897125]
[-119.30431366 46.71187973]
[-133.84754944 43.03840637]
[-148.39077759 39.36492920]
[-163.66557312 43.48698044]
[-174.11042786 32.86840439]
[-188.65365601 29.19492912]
[-203.19689941 25.52145576]
[-191.89157104 35.37993240]
[-184.59288025 48.48448181]
[-182.16340637 63.28642654]
[-184.89022827 78.03649139]
[-192.45111084 90.99153137]
[-203.95251465 100.62053680]
[-218.03521729 105.78556061]
[-233.03494263 105.87620544]
[-247.17904663 100.88176727]
[-258.79598999 91.39247894]
[-266.51287842 78.52976227]
[-269.41778564 63.81373215]
[-267.16738892 48.98350525]
[-260.02761841 35.79169846]
[-248.84225464 25.79730415]
[-234.93319702 20.18144798]
[-219.94137573 19.60818291]
[-233.56623840 13.33416557]
[-247.19108582 7.06014872]
[-259.18267822 13.14461708]
[-272.29922485 11.25119972]
[-281.79763794 2.29041553]
[-284.37322998 -10.31288147]
[-297.92498779 -16.74326897]
[-311.47674561 -23.17365837]
[-325.02850342 -29.60404587]
[-341.32205200 -27.74585152]
[-350.85922241 -41.08654022]
[-343.82904053 -55.90235901]
[-327.46353149 -56.95206070]
[-318.59811401 -43.15580368]
[-305.04635620 -36.72541428]
[-291.49459839 -30.29502678]
[-277.94284058 -23.86463737]
[-262.33721924 -30.17819977]
[-246.69302368 -23.09570694]
[-240.91706848 -6.56470776]
[-227.29222107 -0.29069087]
[-213.66735840 5.98332596]
[-199.52342224 10.97822380]
[-184.98019409 14.65169811]
[-170.43695068 18.32517242]
[-156.20239258 13.94037056]
[-144.71730042 24.82169914]
[-130.17407227 28.49517441]
[-115.63084412 32.16864777]
[-108.40299988 30.76506805]
[-100.94187927 35.96897507]
[-86.44187927 39.80956268]
[-71.94188690 43.65015030]
[-57.44188690 47.49073410]
[-42.94189072 51.33132172]
[-28.44189453 55.17190933]
[-23.96445084 53.60889053]
[-18.45852852 54.81611633]
[-13.65437794 59.27132034]
[0.75339407 63.44458389]
[15.16116619 67.61784363]
[29.56893730 71.79110718]
[43.97670746 75.96437073]
[48.87545776 66.79455566]
[55.26108170 58.59046173]
[62.94786453 51.59070206]
[71.71224976 45.99885178]
[81.29934692 41.97753906]
[91.43031311 39.64371490]
[101.81051636 39.06525803]
[112.13806915 40.25899124]
[122.11260223 43.19020081]
[131.44403076 47.77362823]
[139.86094666 53.87597656]
[147.11857605 61.31977081]
[153.00584412 69.88851929]
[157.35151672 79.33300781]
[160.02920532 89.37857056]
[175.00909424 88.60214996]
[189.98899841 87.82572937]
[198.36085510 84.26751709]
[205.14553833 87.12757111]
[220.13337708 86.52358246]
[235.12120056 85.91959381]
[250.10903931 85.31560516]
[265.09686279 84.71161652]
[280.08471680 84.10762024]
[295.07254028 83.50363159]
[310.06039429 82.89964294]
[323.53781128 74.61294556]
[336.56631470 81.83148956]
[351.55413818 81.22750092]
[366.54199219 80.62351227]
[378.85107422 59.15237808]
[403.93441772 52.14443970]
[427.85977173 65.37286377]
[440.30175781 56.99451065]
[452.74377441 48.61616135]
[465.18576050 40.23780823]
[472.31082153 26.11179924]
[487.18939209 25.42072678]
[499.63137817 17.04237556]
[512.02496338 8.59257507]
[524.36968994 0.07160393]
[527.44744873 -12.42908764]
[537.87402344 -19.27596855]
[549.77868652 -17.26473045]
[562.22070312 -25.64307976]
[565.37005615 -40.89822769]
[578.10736084 -49.21782684]
[592.63140869 -46.12141037]
[605.07336426 -54.49976349]
[617.51538086 -62.87811279]
[629.95739746 -71.25646210]
[642.39935303 -79.63481140]
[654.84136963 -88.01316833]
[667.28332520 -96.39151764]
[672.62823486 -103.75230408]
[679.91705322 -104.79373169]
[692.45465088 -113.02835083]
[704.99224854 -121.26296997]
[711.87414551 -136.14825439]
[728.22839355 -137.36131287]
[737.23107910 -123.65426636]
[729.62109375 -109.12773895]
[713.22686768 -108.72538757]
[700.68927002 -100.49076843]
[688.15167236 -92.25614166]
[675.66168213 -83.94952393]
[663.21972656 -75.57116699]
[650.77770996 -67.19281769]
[638.33569336 -58.81446838]
[625.89373779 -50.43611908]
[613.45172119 -42.05776596]
[601.00970459 -33.67941666]
[598.41741943 -19.05698204]
[585.91882324 -10.38290215]
[570.59906006 -13.20108509]
[558.15704346 -4.82273483]
[551.29064941 11.34417915]
[532.89068604 12.41636181]
[520.54589844 20.93733406]
[516.84014893 27.29962158]
[508.00973511 29.48437119]
[495.56771851 37.86272049]
[489.33261108 51.38945389]
[473.56411743 52.67980576]
[461.12210083 61.05815506]
[448.68011475 69.43650818]
[436.23812866 77.81485748]
[436.84210205 92.80268860]
[449.91793823 100.15270996]
[466.19821167 92.10209656]
[483.89132690 95.43491364]
[495.91427612 108.62384033]
[497.57025146 126.23493195]
[510.81176758 133.28208923]
[524.05328369 140.32923889]
[537.29479980 147.37638855]
[550.53631592 154.42355347]
[563.77783203 161.47070312]
[577.01934814 168.51785278]
[590.26080322 175.56500244]
[599.26977539 176.82513428]
[603.61346436 182.77020264]
[616.77301025 189.96926880]
[629.93255615 197.16833496]
[645.02783203 192.48767090]
[658.97241211 199.92572021]
[663.49322510 215.06962585]
[655.90814209 228.93476868]
[640.71728516 233.29521179]
[626.93310547 225.56398010]
[622.73352051 210.32786560]
[609.57397461 203.12881470]
[596.41442871 195.92974854]
[583.21368408 188.80651855]
[569.97216797 181.75936890]
[556.73065186 174.71221924]
[543.48913574 167.66505432]
[530.24761963 160.61790466]
[517.00610352 153.57075500]
[503.76461792 146.52360535]
[490.52310181 139.47644043]
[480.55609131 146.33407593]
[468.55044556 148.32937622]
[456.76232910 145.02543640]
[447.43338013 136.98707581]
[442.36441040 125.68534851]
[442.56793213 113.22853851]
[429.49209595 105.87851715]
[423.89276123 112.31604767]
[417.05407715 117.21566772]
[409.37838745 120.35668182]
[401.30227661 121.61975861]
[393.27182007 120.99072266]
[385.71792603 118.55841064]
[379.03320312 114.50691986]
[373.55169678 109.10288239]
[369.53210449 102.67847443]
[367.14596558 95.61135101]
[352.15814209 96.21533966]
[337.17028809 96.81932831]
[324.76489258 105.06282806]
[310.66436768 97.88748169]
[295.67654419 98.49147034]
[280.68869019 99.09545898]
[265.70086670 99.69944763]
[250.71302795 100.30343628]
[235.72518921 100.90742493]
[220.73736572 101.51141357]
[205.74952698 102.11540222]
[190.76541138 102.80561829]
[175.78552246 103.58203888]
[160.80563354 104.35845947]
[157.46276855 120.35561371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[12 32]
[13 31]
[14 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[42 119]
[43 118]
[44 117]
[45 116]
[46 115]
[47 112]
[48 111]
[49 110]
[50 109]
[51 108]
[52 107]
[53 105]
[54 104]
[55 103]
[57 101]
[58 100]
[59 99]
[76 98]
[77 97]
[78 96]
[82 93]
[83 92]
[84 91]
[85 90]
[134 271]
[135 270]
[136 269]
[138 268]
[139 267]
[140 266]
[141 265]
[142 264]
[143 263]
[144 262]
[145 261]
[147 259]
[148 258]
[149 257]
[152 206]
[153 205]
[154 204]
[155 203]
[157 201]
[158 200]
[159 198]
[160 197]
[163 195]
[164 194]
[167 191]
[168 190]
[169 189]
[170 188]
[171 187]
[172 186]
[173 185]
[175 184]
[176 183]
[177 182]
[207 247]
[208 246]
[212 240]
[213 239]
[214 238]
[215 237]
[216 236]
[217 235]
[218 234]
[219 233]
[221 232]
[222 231]
[223 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
