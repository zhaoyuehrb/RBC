%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGGGGCGGGCGCGGGCAGCGGCGGGCCGGCCGGGCUGUGCGGGGCGAGCGGCGGCGGCGGCGGGGGCGCUUCGGCCGGGGCGGCAGCUGGGCGCCGGCGGGAGCUAGCAGCGUCUGCAGCCGCGCCGGCCGCCAGCGCCCCGGCGCGCUCCGGCUCGGCCAUGGAGCUGCCAGCUGUUGGCGAGCACGUCUUCGCGGUGGAGAGCAUCGAGAAGAAGCGGAUCCGCAAGGGCAGAGUGGAGUAUCUGGUGAA\
AUGGAGAG\
) } def
/len { sequence length } bind def

/coor [
[58.65457153 213.58381653]
[71.75469208 205.81808472]
[69.97390747 190.92416382]
[68.19312286 176.03024292]
[66.41233826 161.13632202]
[64.63155365 146.24240112]
[62.85076523 131.34849548]
[55.81919861 118.09869385]
[44.48295593 108.27577972]
[28.98662758 105.08605194]
[24.43485260 90.90399933]
[13.09860802 81.08109283]
[1.76236451 71.25817871]
[-9.63212395 61.50289154]
[-21.08445549 51.81557465]
[-36.61764145 48.81047058]
[-41.33786011 34.68358994]
[-52.79018784 24.99627113]
[-64.24252319 15.30895329]
[-75.69484711 5.62163591]
[-87.14717865 -4.06568193]
[-98.59951019 -13.75299931]
[-114.13545990 -12.62513924]
[-125.61175537 -22.61260033]
[-126.59125519 -37.43070221]
[-138.04357910 -47.11801910]
[-149.55334473 -56.73702621]
[-161.12014771 -66.28737640]
[-172.68693542 -75.83773041]
[-184.25373840 -85.38808441]
[-195.82052612 -94.93843842]
[-207.44395447 -104.41979980]
[-219.12356567 -113.83183289]
[-230.80319214 -123.24386597]
[-242.48281860 -132.65589905]
[-254.16244507 -142.06793213]
[-269.05636597 -143.84872437]
[-282.62573242 -137.45558167]
[-296.19509888 -131.06242371]
[-309.76446533 -124.66927338]
[-323.33380127 -118.27613068]
[-336.86489868 -111.80235291]
[-350.35723877 -105.24818420]
[-353.98861694 -90.03809357]
[-366.57803345 -80.76227570]
[-382.18112183 -81.80048370]
[-393.43057251 -92.66252136]
[-395.01477051 -108.21965027]
[-386.18566895 -121.12628174]
[-371.11212158 -125.28829193]
[-356.91140747 -118.74051666]
[-343.41906738 -125.29468536]
[-338.79095459 -131.02528381]
[-329.72695923 -131.84548950]
[-316.15759277 -138.23864746]
[-302.58822632 -144.63179016]
[-289.01885986 -151.02493286]
[-275.44949341 -157.41809082]
[-271.73989868 -171.95214844]
[-280.58554077 -184.06639099]
[-289.43118286 -196.18061829]
[-298.27682495 -208.29486084]
[-307.19436646 -220.35624695]
[-316.18353271 -232.36436462]
[-330.64770508 -238.77517700]
[-332.08084106 -253.60067749]
[-341.07000732 -265.60879517]
[-350.05917358 -277.61691284]
[-359.04833984 -289.62503052]
[-368.03750610 -301.63314819]
[-377.02667236 -313.64126587]
[-386.01583862 -325.64938354]
[-395.00500488 -337.65750122]
[-412.10482788 -344.53005981]
[-413.47097778 -362.03970337]
[-422.60238647 -373.94000244]
[-431.73379517 -385.84030151]
[-440.86523438 -397.74060059]
[-449.99664307 -409.64089966]
[-459.12808228 -421.54119873]
[-468.25949097 -433.44149780]
[-482.79891968 -439.67974854]
[-484.40838623 -454.48712158]
[-493.53979492 -466.38742065]
[-502.67123413 -478.28771973]
[-511.80264282 -490.18801880]
[-520.93408203 -502.08831787]
[-535.47351074 -508.32656860]
[-537.08294678 -523.13397217]
[-546.21435547 -535.03424072]
[-553.89495850 -539.91668701]
[-555.38262939 -547.13092041]
[-564.37182617 -559.13903809]
[-573.36096191 -571.14715576]
[-582.35015869 -583.15527344]
[-591.33929443 -595.16339111]
[-600.32849121 -607.17150879]
[-612.94085693 -609.76763916]
[-620.18310547 -619.92694092]
[-618.62664795 -631.90228271]
[-627.47229004 -644.01654053]
[-642.98840332 -643.84490967]
[-655.62255859 -652.85369873]
[-660.51666260 -667.57873535]
[-655.78881836 -682.35803223]
[-643.25695801 -691.50860596]
[-627.73992920 -691.51184082]
[-615.20422363 -682.36657715]
[-610.47015381 -667.58929443]
[-615.35803223 -652.86218262]
[-606.51239014 -640.74792480]
[-590.09692383 -634.50408936]
[-588.32037354 -616.16070557]
[-579.33117676 -604.15258789]
[-570.34204102 -592.14447021]
[-561.35284424 -580.13635254]
[-552.36370850 -568.12823486]
[-543.37451172 -556.12011719]
[-534.31408691 -544.16571045]
[-525.18267822 -532.26538086]
[-511.29635620 -526.87835693]
[-509.03375244 -511.21975708]
[-499.90234375 -499.31945801]
[-490.77093506 -487.41915894]
[-481.63949585 -475.51885986]
[-472.50808716 -463.61856079]
[-458.62179565 -458.23150635]
[-456.35919189 -442.57290649]
[-447.22778320 -430.67260742]
[-438.09634399 -418.77230835]
[-428.96493530 -406.87200928]
[-419.83349609 -394.97171021]
[-410.70208740 -383.07141113]
[-401.57067871 -371.17111206]
[-389.64190674 -369.29067993]
[-381.93453979 -359.47958374]
[-382.99688721 -346.64666748]
[-374.00772095 -334.63854980]
[-365.01855469 -322.63043213]
[-356.02938843 -310.62231445]
[-347.04022217 -298.61419678]
[-338.05105591 -286.60607910]
[-329.06188965 -274.59796143]
[-320.07272339 -262.58984375]
[-306.25152588 -257.03793335]
[-304.17541504 -241.35353088]
[-295.18624878 -229.34541321]
[-288.68334961 -225.88546753]
[-286.16256714 -217.14048767]
[-277.31695557 -205.02626038]
[-268.47131348 -192.91201782]
[-259.62567139 -180.79779053]
[-244.75041199 -153.74755859]
[-233.07078552 -144.33552551]
[-221.39115906 -134.92349243]
[-209.71153259 -125.51145935]
[-198.03190613 -116.09941864]
[-190.87532043 -114.35516357]
[-186.27018738 -106.50523376]
[-174.70338440 -96.95487976]
[-163.13658142 -87.40452576]
[-151.56979370 -77.85417175]
[-140.00299072 -68.30381775]
[-132.86767578 -66.47452545]
[-128.35626221 -58.57035065]
[-116.90393066 -48.88303375]
[-102.12857056 -50.37438202]
[-90.37627411 -40.71320724]
[-88.91219330 -25.20532990]
[-77.45986176 -15.51801205]
[-66.00753021 -5.83069468]
[-54.55520248 3.85662293]
[-43.10287094 13.54394054]
[-31.65054131 23.23125839]
[-16.93650055 25.54345894]
[-11.39713669 40.36324310]
[0.05519345 50.05056000]
[7.16824245 51.96463776]
[11.58527565 59.92193604]
[22.92151833 69.74485016]
[34.25776291 79.56775665]
[48.94324875 82.05488586]
[54.30586624 96.93953705]
[65.64211273 106.76245117]
[68.99292755 76.27481842]
[96.97917938 57.03799438]
[133.02844238 66.43026733]
[147.87576294 68.56498718]
[156.15838623 61.57831192]
[166.69915771 60.31108856]
[176.00912476 64.94068909]
[181.13871765 73.73197174]
[195.93103027 76.21942139]
[210.72334290 78.70687103]
[225.51565552 81.19432068]
[240.30798340 83.68177032]
[255.20014954 78.34008026]
[266.46813965 88.08081818]
[281.26043701 90.56826782]
[296.05276489 93.05571747]
[310.84506226 95.54316711]
[325.63739014 98.03061676]
[339.48712158 89.93344116]
[354.40042114 95.84727478]
[358.93704224 111.23552704]
[349.61691284 124.29365540]
[333.58963013 125.00457764]
[323.14993286 112.82292938]
[308.35763550 110.33547974]
[293.56530762 107.84803009]
[278.77301025 105.36058044]
[263.98068237 102.87313080]
[250.14654541 108.39273834]
[237.82052612 98.47408295]
[223.02821350 95.98663330]
[208.23590088 93.49918365]
[193.44358826 91.01173401]
[178.65126038 88.52428436]
[161.04556274 96.56478882]
[145.74104309 83.41230774]
[130.89372253 81.27758789]
[127.29935455 87.86017609]
[135.10664368 100.66823578]
[120.11061859 101.02536011]
[116.51625061 107.60795593]
[126.33916473 118.94419861]
[136.16207886 130.28044128]
[145.98498535 141.61668396]
[155.80789185 152.95292664]
[171.06326294 150.65565491]
[185.12951660 156.99157715]
[193.51818848 169.93891907]
[193.55245972 185.36625671]
[185.22140503 198.35075378]
[171.18344116 204.74911499]
[155.91802979 202.51965332]
[144.29629517 192.37376404]
[140.02670288 177.54899597]
[144.47164917 162.77584839]
[134.64874268 151.43959045]
[124.82582855 140.10334778]
[115.00292206 128.76710510]
[105.18000793 117.43087006]
[98.32117462 120.46507263]
[96.71806335 135.37916565]
[84.60351562 126.53349304]
[77.74468231 129.56770325]
[79.52546692 144.46162415]
[81.30625153 159.35554504]
[83.08704376 174.24946594]
[84.86782837 189.14337158]
[86.64861298 204.03729248]
[101.21030426 208.49565125]
[112.69543457 218.49624634]
[119.11412048 232.30639648]
[119.35430908 247.53341675]
[113.37435913 261.53915405]
[102.21035767 271.89697266]
[87.79652405 276.81237793]
[72.63013458 275.43371582]
[59.33887482 267.99987793]
[50.22552109 255.79878235]
[46.86902618 240.94435120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 252]
[3 251]
[4 250]
[5 249]
[6 248]
[7 247]
[8 184]
[9 183]
[11 181]
[12 180]
[13 179]
[14 177]
[15 176]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[25 166]
[26 165]
[27 163]
[28 162]
[29 161]
[30 160]
[31 159]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[37 58]
[38 57]
[39 56]
[40 55]
[41 54]
[42 52]
[43 51]
[59 152]
[60 151]
[61 150]
[62 149]
[63 147]
[64 146]
[66 144]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[75 134]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[89 120]
[90 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[100 111]
[101 110]
[187 221]
[188 220]
[192 218]
[193 217]
[194 216]
[195 215]
[196 214]
[198 212]
[199 211]
[200 210]
[201 209]
[202 208]
[225 243]
[226 242]
[227 241]
[228 240]
[229 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
