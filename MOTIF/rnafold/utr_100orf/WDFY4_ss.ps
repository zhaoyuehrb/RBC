%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAACGGGCCUCAGAGGGAGCUGGUCUAUCCCGGCCCUGUCAUUACUCCACUGGGUUCUGAUCUGCUUUGCCACGGCAUGGAGGCAGAAGAUCUUUCAAAGGCUGAAGACAGAAAUGAAGACCCAGGUUCCAAAAAUGAAGGGCAGCUUGCUGCUGUGCAGCCUGAUGUCCCACAUG\
) } def
/len { sequence length } bind def

/coor [
[81.06265259 312.84570312]
[71.35037231 301.07141113]
[67.71693420 286.24707031]
[70.88375854 271.31610107]
[80.22206879 259.24304199]
[93.87773895 252.42500305]
[93.61300659 237.42733765]
[93.34828186 222.42967224]
[93.08355713 207.43200684]
[85.12284088 194.84327698]
[92.61538696 180.90869141]
[92.35065460 165.91104126]
[92.08592987 150.91337585]
[91.82120514 135.91571045]
[86.71807098 130.64163208]
[83.23019409 124.82403564]
[71.98903656 134.75561523]
[60.74788284 144.68721008]
[49.50672913 154.61878967]
[51.95075607 169.85133362]
[45.75054169 183.97793579]
[32.88454819 192.49084473]
[17.45826721 192.67364502]
[4.39417076 184.46797180]
[-2.13903713 170.49226379]
[-0.05663279 155.20608521]
[9.97689629 143.48721313]
[24.75988770 139.07510376]
[39.57514191 143.37763977]
[50.81629562 133.44604492]
[62.05745316 123.51446533]
[73.29860687 113.58287811]
[72.69000244 87.68647003]
[92.50000000 70.99639893]
[92.50000000 55.99639893]
[92.50000000 40.99639893]
[92.50000000 25.99639702]
[92.50000000 10.99639797]
[89.36299896 2.38465738]
[92.63470459 -4.26774549]
[92.89942932 -19.26540947]
[93.16416168 -34.26307297]
[93.42888641 -49.26073837]
[93.69361115 -64.25839996]
[78.14270020 -70.73403931]
[66.28849792 -82.65074921]
[59.92259216 -98.16763306]
[59.99178314 -114.90274811]
[66.45736694 -130.29881287]
[78.30535126 -142.01391602]
[93.70539093 -148.27780151]
[93.44066620 -163.27546692]
[93.17593384 -178.27311707]
[92.91120911 -193.27078247]
[92.64648438 -208.26844788]
[92.38175201 -223.26611328]
[92.11702728 -238.26377869]
[73.83096313 -236.76023865]
[62.85666656 -249.88491821]
[66.94821930 -265.21759033]
[60.54236984 -278.78097534]
[54.13652420 -292.34432983]
[47.73067856 -305.90771484]
[41.32483292 -319.47109985]
[36.07853317 -323.57412720]
[34.02347946 -328.91333008]
[34.94173431 -333.62805176]
[29.01854897 -347.40905762]
[23.09536362 -361.19006348]
[17.17217827 -374.97106934]
[11.24899387 -388.75204468]
[5.32580900 -402.53305054]
[-9.93609905 -404.25634766]
[-22.28211212 -413.39260864]
[-28.39121628 -427.48425293]
[-26.62009239 -442.74069214]
[-17.44516563 -455.05801392]
[-3.33444142 -461.12292480]
[11.91636372 -459.30398560]
[24.20485878 -450.09048462]
[30.22550392 -435.96081543]
[28.35877228 -420.71578979]
[19.10680580 -408.45623779]
[25.02999115 -394.67523193]
[30.95317650 -380.89422607]
[36.87636185 -367.11325073]
[42.79954529 -353.33224487]
[48.72272873 -339.55123901]
[54.88820648 -325.87692261]
[61.29405212 -312.31356812]
[67.69989777 -298.75018311]
[74.10574341 -285.18679810]
[80.51158905 -271.62344360]
[91.09381866 -270.03787231]
[99.60163879 -261.72091675]
[108.50386810 -273.79364014]
[117.40609741 -285.86633301]
[126.30832672 -297.93905640]
[121.17197418 -310.74838257]
[123.02872467 -324.31433105]
[131.28639221 -335.10034180]
[143.69831848 -340.34817505]
[156.97373962 -338.78274536]
[166.08764648 -350.69647217]
[175.20155334 -362.61019897]
[176.78044128 -378.93316650]
[191.81605530 -385.48010254]
[204.84104919 -375.51608276]
[202.45642090 -359.29122925]
[187.11528015 -353.49627686]
[178.00135803 -341.58258057]
[168.88745117 -329.66885376]
[174.07624817 -314.10925293]
[168.92707825 -298.36175537]
[155.27728271 -288.68142700]
[138.38104248 -289.03683472]
[129.47880554 -276.96411133]
[120.57657623 -264.89141846]
[111.67434692 -252.81869507]
[107.11469269 -238.52850342]
[107.37941742 -223.53083801]
[107.64414215 -208.53317261]
[107.90887451 -193.53550720]
[108.17359924 -178.53785706]
[108.43832397 -163.54019165]
[108.70305634 -148.54252625]
[121.35429382 -144.47148132]
[132.14912415 -136.68008423]
[140.02461243 -125.91816711]
[144.19993591 -113.22888184]
[144.25376892 -99.84761047]
[140.16674805 -87.08168793]
[132.32479858 -76.18267822]
[121.48264313 -68.22368622]
[108.69127655 -63.99367523]
[108.42655182 -48.99600983]
[108.16181946 -33.99834442]
[107.89709473 -19.00068283]
[107.63237000 -4.00301838]
[107.50000000 10.99639797]
[107.50000000 25.99639702]
[107.50000000 40.99639893]
[107.50000000 55.99639893]
[107.50000000 70.99639893]
[116.64778900 73.72639465]
[124.78475952 79.36538696]
[130.98248291 87.53383636]
[134.45611572 97.55628967]
[134.65808105 108.51568604]
[131.35137939 119.33705139]
[141.86396790 130.03683472]
[152.37657166 140.73661804]
[162.88916016 151.43641663]
[173.40174866 162.13619995]
[188.81539917 169.19703674]
[186.29742432 185.96296692]
[169.48966980 188.18466187]
[162.70195007 172.64878845]
[152.18936157 161.94900513]
[141.67677307 151.24920654]
[131.16418457 140.54942322]
[120.65159607 129.84963989]
[106.81887054 135.65098572]
[107.08359528 150.64865112]
[107.34832001 165.64630127]
[107.61305237 180.64396667]
[115.59269714 194.30545044]
[108.08121490 207.16728210]
[108.34594727 222.16494751]
[108.61067200 237.16261292]
[108.87539673 252.16027832]
[122.76317596 258.49212646]
[132.52174377 270.22808838]
[136.21353149 285.03802490]
[133.10552979 299.98135376]
[123.81484222 312.09109497]
[110.18612671 318.96282959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 171]
[7 170]
[8 169]
[9 168]
[11 166]
[12 165]
[13 164]
[14 163]
[16 32]
[17 31]
[18 30]
[19 29]
[34 144]
[35 143]
[36 142]
[37 141]
[38 140]
[40 139]
[41 138]
[42 137]
[43 136]
[44 135]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[95 119]
[96 118]
[97 117]
[98 116]
[103 112]
[104 111]
[105 110]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
