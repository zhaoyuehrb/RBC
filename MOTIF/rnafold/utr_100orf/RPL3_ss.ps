%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGAUUUGGCUUUAUAUAGCGGACCCGUAAGGCCGACCGGCCUCUACCGGCGGGAUUUGAUGGCGUGAUGUCUCACAGAAAGUUCUCCGCUCCCAGACAUGGGUCCCUCGGCUUCCUGCCUCGGAAGCGCAGCAGCAGGCAUCGUGGGAAGGUGAAGAGCUUCCCUA\
) } def
/len { sequence length } bind def

/coor [
[151.87689209 131.29515076]
[144.94596863 144.59786987]
[132.12133789 152.37789917]
[117.12133789 152.37953186]
[104.29501343 144.60227966]
[97.36119843 131.30107117]
[98.32943726 116.33471680]
[90.15595245 128.91224670]
[89.12399292 144.69976807]
[75.70117950 151.15556335]
[67.52769470 163.73307800]
[59.35421371 176.31060791]
[62.88008118 191.71658325]
[54.40893173 205.05880737]
[38.96654892 208.42160034]
[25.71462250 199.80986023]
[22.51528931 184.33277893]
[31.26665497 171.17265320]
[46.77668762 168.13713074]
[54.95017242 155.55960083]
[63.12365341 142.98207092]
[63.57098770 128.09419250]
[77.57843018 120.73876190]
[85.75190735 108.16123962]
[77.57843018 95.58370972]
[62.76528931 97.94400024]
[50.35451508 107.75640106]
[36.56830978 102.11815643]
[21.75517273 104.47843933]
[6.94203520 106.83872986]
[-7.84852457 109.33659363]
[-22.61522865 111.97181702]
[-37.38193512 114.60704803]
[-52.14863968 117.24227905]
[-66.91534424 119.87751007]
[-79.10053253 130.85261536]
[-94.61215973 125.53083801]
[-97.49319458 109.38674164]
[-84.77987671 99.02800751]
[-69.55057526 105.11080170]
[-54.78386688 102.47557068]
[-40.01716232 99.84034729]
[-25.25045776 97.20511627]
[-10.48375320 94.56988525]
[-4.42685938 90.28180695]
[4.58174896 92.02558899]
[19.39488602 89.66530609]
[34.20802307 87.30501556]
[45.55926514 77.66143799]
[60.40500259 83.13085938]
[75.21813965 80.77057648]
[94.10797882 78.61382294]
[104.73950195 87.89625549]
[116.75901031 78.92231750]
[128.77850342 69.94837952]
[140.79801941 60.97444153]
[125.94757080 63.08735657]
[111.73194122 67.87439728]
[97.31826782 63.72155762]
[87.82891846 52.10466385]
[86.63621521 37.15215683]
[94.16403961 24.17787933]
[107.73712921 17.79265022]
[122.53186798 20.26566315]
[133.29045105 30.71802521]
[145.77560425 39.03193283]
[138.80474854 25.75009346]
[131.83390808 12.46825314]
[124.86306000 -0.81358737]
[110.72101593 -9.11627960]
[111.11089325 -25.51079178]
[125.63162231 -33.13185501]
[139.34552002 -24.13957405]
[138.14489746 -7.78443480]
[145.11575317 5.49740553]
[152.08659363 18.77924538]
[159.05744934 32.06108475]
[160.85353088 17.16900444]
[174.03401184 10.00835419]
[187.50505066 16.60615540]
[189.92826843 31.40913010]
[179.26397705 41.95783997]
[194.03068542 39.32261276]
[208.79739380 36.68738174]
[223.56410217 34.05215454]
[238.33079529 31.41692543]
[253.09750366 28.78169632]
[265.32373047 18.74029350]
[279.21237183 24.12130547]
[293.97906494 21.48607635]
[308.74578857 18.85084724]
[323.51248169 16.21561813]
[335.77749634 7.58027697]
[343.23721313 -5.43327808]
[350.69692993 -18.44683266]
[358.15664673 -31.46038818]
[357.56478882 -47.84885406]
[371.60345459 -56.32517242]
[385.83087158 -48.16963959]
[385.61108398 -31.77196503]
[371.17022705 -24.00067139]
[363.71051025 -10.98711681]
[356.25079346 2.02643895]
[348.79107666 15.03999424]
[356.12951660 28.12232208]
[371.12368774 28.54052734]
[386.11785889 28.95873260]
[401.11199951 29.37693787]
[415.12252808 22.02739906]
[427.62915039 30.11653137]
[442.62332153 30.53473663]
[457.62268066 30.67415428]
[472.62200928 30.53473663]
[487.62136841 30.39531898]
[502.62072754 30.25590134]
[516.34838867 22.39066887]
[529.14703369 30.00934219]
[544.14636230 29.86992455]
[559.14575195 29.73050499]
[574.14508057 29.59108734]
[585.17645264 18.59352875]
[600.38995361 18.66581154]
[610.80645752 29.25032425]
[625.80578613 29.11090660]
[639.64843750 20.31816292]
[654.05731201 28.14870644]
[654.20971680 44.54714584]
[639.94891357 52.64417267]
[625.94519043 44.11025620]
[610.94586182 44.24967575]
[600.72790527 55.02598572]
[585.51837158 55.38104630]
[574.28448486 44.59043884]
[559.28515625 44.72985840]
[544.28576660 44.86927414]
[529.28643799 45.00869370]
[516.63165283 52.86395264]
[502.76013184 45.25525284]
[487.76080322 45.39467239]
[472.76144409 45.53408813]
[457.76208496 45.67350769]
[453.81222534 48.42314148]
[448.08456421 48.69318390]
[442.20510864 45.52890778]
[427.21093750 45.11070251]
[414.27288818 52.49015427]
[400.69381714 44.37110519]
[385.69964600 43.95289993]
[370.70547485 43.53469467]
[355.71130371 43.11648941]
[336.48318481 42.76304626]
[326.14770508 30.98232460]
[311.38101196 33.61755371]
[296.61428833 36.25278091]
[281.84759521 38.88800812]
[270.67758179 48.74092102]
[255.73274231 43.54840088]
[240.96603394 46.18362808]
[226.19932556 48.81885910]
[211.43261719 51.45408630]
[196.66590881 54.08931732]
[181.89921570 56.72454453]
[149.77195740 72.99394226]
[137.75244141 81.96788025]
[125.73294830 90.94181824]
[113.71343994 99.91575623]
[128.58760071 97.97685242]
[142.31094360 104.03240204]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[10 21]
[11 20]
[12 19]
[25 51]
[26 50]
[28 48]
[29 47]
[30 46]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[53 166]
[54 165]
[55 164]
[56 163]
[66 77]
[67 76]
[68 75]
[69 74]
[82 162]
[83 161]
[84 160]
[85 159]
[86 158]
[87 157]
[89 155]
[90 154]
[91 153]
[92 152]
[93 104]
[94 103]
[95 102]
[96 101]
[105 150]
[106 149]
[107 148]
[108 147]
[110 145]
[111 144]
[112 141]
[113 140]
[114 139]
[115 138]
[117 136]
[118 135]
[119 134]
[120 133]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
