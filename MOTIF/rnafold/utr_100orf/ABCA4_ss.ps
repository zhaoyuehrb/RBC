%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:19:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACACAGCGUCCGGAGCCAGAGGCGCUCUUAACGGCGUUUAUGUCCUUUGCUGUCUGAGGGGCCUCAGCUCUGACCAAUCUGGUCUUCGUGUGGUCAUUAGCAUGGGCUUCGUGAGACAGAUACAGCUUUUGCUCUGGAAGAACUGGACCCUGCGGAAAAGGCAAAAGAUUCGCUUUGUGGUGGAACUCGUGUGGCCUUUAU\
) } def
/len { sequence length } bind def

/coor [
[161.96936035 256.58010864]
[154.11378479 249.58230591]
[148.50093079 240.65937805]
[145.58282471 230.50798035]
[145.60054016 219.92445374]
[148.56439209 209.74247742]
[154.25210571 200.76733398]
[145.06759644 188.90795898]
[135.88307190 177.04859924]
[121.97284698 171.72366333]
[119.64027405 156.07534790]
[110.45575714 144.21598816]
[101.27123260 132.35661316]
[92.08671570 120.49725342]
[78.00887299 115.31897736]
[63.32874298 118.40016937]
[48.64861298 121.48135376]
[33.96848297 124.56254578]
[19.28834915 127.64373779]
[11.59300995 137.99868774]
[-0.70100671 140.26078796]
[-10.90167141 133.75346375]
[-25.62729645 136.60932922]
[-40.35292053 139.46519470]
[-55.07854462 142.32106018]
[-69.80416870 145.17694092]
[-77.63746643 149.88505554]
[-84.77723694 147.96191406]
[-99.54489899 150.59179688]
[-114.31256104 153.22166443]
[-129.08021545 155.85153198]
[-143.84788513 158.48141479]
[-158.61553955 161.11128235]
[-173.36260986 163.85423279]
[-188.08824158 166.71009827]
[-202.81385803 169.56596375]
[-217.53948975 172.42182922]
[-232.26510620 175.27769470]
[-246.99073792 178.13356018]
[-251.33207703 192.81045532]
[-262.00515747 203.78059387]
[-276.55737305 208.52311707]
[-291.64474487 205.94822693]
[-303.80029297 196.64761353]
[-310.23074341 182.75849915]
[-309.45846558 167.47248840]
[-301.66091919 154.30220032]
[-288.62988281 146.27406311]
[-273.35983276 145.23289490]
[-259.35968018 151.41795349]
[-249.84660339 163.40794373]
[-235.12098694 160.55207825]
[-220.39535522 157.69619751]
[-205.66972351 154.84033203]
[-190.94410706 151.98446655]
[-176.21847534 149.12860107]
[-170.24768066 144.76690674]
[-161.24540710 146.34361267]
[-146.47775269 143.71374512]
[-131.71009827 141.08387756]
[-116.94242859 138.45401001]
[-102.17477417 135.82412720]
[-87.40711212 133.19425964]
[-72.66003418 130.45130920]
[-57.93441391 127.59544373]
[-43.20878601 124.73957825]
[-28.48316193 121.88371277]
[-13.75753784 119.02783966]
[-1.15060627 106.82287598]
[16.20715904 112.96360779]
[30.88729095 109.88241577]
[45.56742096 106.80122375]
[60.24755478 103.72003174]
[74.92768860 100.63884735]
[80.10595703 86.56101227]
[70.92144012 74.70164490]
[61.73691940 62.84227753]
[52.55239487 50.98291016]
[43.36787415 39.12354279]
[28.88916779 30.30292130]
[33.35697174 13.94825649]
[50.30930328 13.71403503]
[55.22724152 29.93902206]
[64.41176605 41.79838943]
[73.59628296 53.65775681]
[82.78080750 65.51712036]
[91.96532440 77.37648773]
[105.83448792 71.66279602]
[104.00011444 56.77537918]
[102.16573334 41.88796616]
[100.33135986 27.00055504]
[98.49697876 12.11314201]
[96.66260529 -2.77427030]
[94.82822418 -17.66168404]
[81.18875885 -25.06064034]
[74.53359222 -39.07807159]
[77.42177582 -54.32398987]
[88.74274445 -64.93602753]
[104.14334869 -66.83364105]
[117.70175171 -59.28715515]
[124.20446014 -45.19835281]
[121.15105438 -29.98466301]
[109.71563721 -19.49606133]
[111.55001068 -4.60864830]
[113.38439178 10.27876472]
[115.21877289 25.16617775]
[117.05314636 40.05358887]
[118.88752747 54.94100189]
[120.72190094 69.82841492]
[135.02284241 74.35422516]
[145.08824158 63.23272324]
[155.15364075 52.11122513]
[165.21903992 40.98972321]
[164.61207581 25.42471886]
[174.97825623 14.28932285]
[189.82084656 13.80659771]
[199.88624573 2.68509746]
[209.95164490 -8.43640232]
[213.39219666 -16.90336227]
[220.25750732 -19.64969826]
[230.49215698 -30.61564827]
[240.72680664 -41.58159637]
[250.96144104 -52.54754639]
[248.88284302 -68.04637146]
[257.29663086 -81.22750854]
[272.23004150 -85.86724091]
[286.63198853 -79.77481842]
[293.70233154 -65.82690430]
[290.10266113 -50.60927200]
[277.53259277 -41.30722427]
[261.92739868 -42.31290436]
[251.69274902 -31.34695435]
[241.45809937 -20.38100433]
[231.22346497 -9.41505432]
[221.07313538 1.62899506]
[211.00775146 12.75049496]
[200.94235229 23.87199593]
[201.93806458 38.68901825]
[191.88874817 50.11118698]
[176.34054565 51.05512238]
[166.27514648 62.17662048]
[156.20974731 73.29811859]
[146.14434814 84.41962433]
[141.35543823 99.44310760]
[132.50857544 110.00961304]
[121.84710693 115.29717255]
[111.66149139 115.41079712]
[103.94607544 111.31272888]
[113.13059998 123.17209625]
[122.31512451 135.03146362]
[131.49964905 146.89082336]
[146.06680298 153.06402588]
[147.74243164 167.86407471]
[156.92695618 179.72343445]
[166.11148071 191.58280945]
[185.67137146 187.89721680]
[204.31979370 194.62591553]
[216.91940308 209.83010864]
[220.04251099 229.24800110]
[212.90327454 247.48924255]
[222.96867371 258.61074829]
[233.03407288 269.73223877]
[243.09947205 280.85375977]
[253.16487122 291.97525024]
[263.23025513 303.09674072]
[279.35559082 299.45104980]
[295.02975464 304.40515137]
[306.00454712 316.51705933]
[309.35565186 332.41842651]
[304.26135254 347.75106812]
[314.49600220 358.71704102]
[324.89749146 369.52484131]
[335.46337891 380.17199707]
[346.02926636 390.81918335]
[356.59515381 401.46633911]
[367.16104126 412.11349487]
[377.72692871 422.76065063]
[393.68432617 426.54125977]
[398.12908936 442.32659912]
[386.48880005 453.87802124]
[370.73800659 449.31243896]
[367.07977295 433.32653809]
[356.51388550 422.67938232]
[345.94799805 412.03222656]
[335.38211060 401.38507080]
[324.81622314 390.73788452]
[314.25030518 380.09072876]
[309.55819702 379.17730713]
[305.39169312 375.30364990]
[303.53002930 368.95166016]
[293.29541016 357.98571777]
[280.21887207 361.93429565]
[266.65182495 359.85247803]
[255.25141907 352.09039307]
[248.27528381 340.11611938]
[247.13455200 326.23855591]
[252.10876465 313.16213989]
[242.04336548 302.04064941]
[231.97796631 290.91915894]
[221.91256714 279.79763794]
[211.84718323 268.67614746]
[201.78178406 257.55465698]
[192.16375732 261.60556030]
[181.77796936 262.82672119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 155]
[8 154]
[9 153]
[11 151]
[12 150]
[13 149]
[14 148]
[15 74]
[16 73]
[17 72]
[18 71]
[19 70]
[22 68]
[23 67]
[24 66]
[25 65]
[26 64]
[28 63]
[29 62]
[30 61]
[31 60]
[32 59]
[33 58]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[88 109]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[110 143]
[111 142]
[112 141]
[113 140]
[116 137]
[117 136]
[118 135]
[120 134]
[121 133]
[122 132]
[123 131]
[160 202]
[161 201]
[162 200]
[163 199]
[164 198]
[165 197]
[170 191]
[171 190]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
