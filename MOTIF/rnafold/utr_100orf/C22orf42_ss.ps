%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGUAGAAGGAGGAGGAGCUCCGACUACAUUCUGUCCUUGUGCCUCUUGGACUUUUUUGUGUGUUUAGGUGCCCAAUGGGGAGCAAACUGACUUGCUGCCUGGGCCCCAGCGGGGGCCUCAACUGUGACUGCUGCAGGCCAGAUGUGGGACCCUGCCAUGAGUGUGAGAUUCCUG\
) } def
/len { sequence length } bind def

/coor [
[205.32437134 194.96739197]
[196.63659668 182.73944092]
[187.94882202 170.51150513]
[179.26103210 158.28356934]
[170.46569824 146.13276672]
[161.56346130 134.06005859]
[152.66122437 121.98735046]
[143.75900269 109.91464233]
[131.28744507 130.55349731]
[110.39545441 141.30632019]
[87.58340454 139.55433655]
[78.89562225 151.78228760]
[70.20784760 164.01022339]
[61.52006912 176.23815918]
[64.40435028 191.77703857]
[55.38746262 204.75668335]
[39.81896591 207.47651672]
[26.93537521 198.32290649]
[24.38029289 182.72651672]
[33.66960526 169.94042969]
[49.29212952 167.55038452]
[57.97990799 155.32244873]
[66.66768646 143.09449768]
[75.35546875 130.86656189]
[65.62381744 119.45188141]
[52.17560577 126.09610748]
[38.72739792 132.74032593]
[36.24367142 148.05734253]
[25.20748901 158.96524048]
[9.86249161 161.26972961]
[-3.89085913 154.08467102]
[-10.76411819 140.17288208]
[-8.11437798 124.88372040]
[3.03948283 114.09617615]
[18.40857697 111.95829010]
[32.08317566 119.29212189]
[45.53138351 112.64789581]
[58.97959137 106.00367737]
[61.82534027 97.10777283]
[66.42200470 89.73940277]
[53.34428024 82.39276886]
[40.26655197 75.04612732]
[24.44535065 75.03289032]
[17.13864136 62.05363083]
[4.06091404 54.70699310]
[-8.56583691 57.43404770]
[-19.31520462 51.02173996]
[-22.68989944 39.38578796]
[-35.63593292 31.80949402]
[-48.58196640 24.23320007]
[-61.52799606 16.65690613]
[-74.47402954 9.08061218]
[-87.42006683 1.50431812]
[-100.36609650 -6.07197571]
[-113.67234802 1.59870410]
[-129.03121948 1.57253599]
[-142.31124878 -6.14344072]
[-149.94018555 -19.47366714]
[-149.86587524 -34.83237839]
[-142.10830688 -48.08816147]
[-128.75422668 -55.67527390]
[-113.39582825 -55.55282211]
[-100.16442871 -47.75374603]
[-92.61920929 -34.37595367]
[-92.78980255 -19.01800919]
[-79.84377289 -11.44171524]
[-66.89773560 -3.86542106]
[-53.95170212 3.71087289]
[-41.00567245 11.28716660]
[-28.05963707 18.86346054]
[-15.11360455 26.43975449]
[2.40163517 25.58365059]
[11.40754986 41.62926865]
[24.48527718 48.97590256]
[39.37107086 48.46366119]
[47.61318970 61.96840286]
[60.69091415 69.31504059]
[73.76863861 76.66167450]
[92.16825867 60.78497696]
[119.49412537 59.58800125]
[120.81610870 44.64636993]
[122.13809967 29.70474052]
[115.64714813 15.27635956]
[124.47602844 3.28052044]
[125.79801941 -11.66111088]
[127.12000275 -26.60274315]
[128.44198608 -41.54437256]
[129.76397705 -56.48600388]
[119.42617798 -68.44030762]
[120.65252686 -84.19694519]
[132.71545410 -94.40778351]
[148.45825195 -93.01490784]
[158.54098511 -80.84469604]
[156.98175049 -65.11751556]
[144.70561218 -55.16401672]
[143.38362122 -40.22238541]
[142.06163025 -25.28075409]
[140.73965454 -10.33912373]
[139.41766357 4.60250807]
[146.00317383 17.96216202]
[137.07972717 31.02672768]
[135.75773621 45.96835709]
[134.43576050 60.90999222]
[147.88395691 67.55421448]
[158.94808960 57.42578125]
[170.01222229 47.29735184]
[181.07633972 37.16892242]
[192.14047241 27.04049301]
[203.20460510 16.91206169]
[214.26872253 6.78363228]
[218.68905640 -9.00853920]
[234.64060974 -12.81382656]
[245.71377563 -0.71767700]
[240.51745605 14.83642864]
[224.39715576 17.84775925]
[213.33302307 27.97618866]
[202.26890564 38.10461807]
[191.20477295 48.23304749]
[180.14065552 58.36148071]
[169.07652283 68.48990631]
[158.01239014 78.61833954]
[172.57791138 75.03423309]
[184.01770020 65.33211517]
[198.62561035 61.92490768]
[213.17732239 65.56464386]
[224.46093750 75.44795990]
[229.98591614 89.39337921]
[228.53276062 104.32282257]
[220.42221069 116.94102478]
[207.44445801 124.46286011]
[192.46398926 125.22808075]
[178.78733826 119.06778717]
[169.43211365 107.33925629]
[155.83171082 101.01241302]
[164.73394775 113.08512115]
[173.63616943 125.15782928]
[182.53840637 137.23054504]
[190.17411804 142.29992676]
[191.48898315 149.59579468]
[200.17675781 161.82373047]
[208.86453247 174.05166626]
[217.55232239 186.27960205]
[227.24496460 185.05357361]
[236.65789795 187.44451904]
[244.49629211 193.07974243]
[249.69796753 201.14332581]
[251.57728577 210.49409485]
[249.91525269 219.82696533]
[244.98416138 227.85519409]
[252.78775024 240.66549683]
[260.59133911 253.47579956]
[268.39492798 266.28610229]
[283.49099731 270.12625122]
[291.22247314 283.22888184]
[287.46844482 297.59701538]
[295.27203369 310.40731812]
[310.36810303 314.24746704]
[318.09954834 327.35009766]
[314.34555054 341.71820068]
[322.14913940 354.52853394]
[336.79183960 361.91253662]
[337.44815063 378.29855347]
[323.44296265 386.83001709]
[309.18356323 378.73052979]
[309.33883667 362.33212280]
[301.53524780 349.52182007]
[287.04589844 346.26690674]
[278.94946289 333.38659668]
[282.46173096 318.21090698]
[274.65814209 305.40060425]
[260.16879272 302.14569092]
[252.07234192 289.26538086]
[255.58462524 274.08969116]
[247.78103638 261.27938843]
[239.97744751 248.46908569]
[232.17385864 235.65878296]
[211.99394226 232.57211304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[5 137]
[6 136]
[7 135]
[8 134]
[11 24]
[12 23]
[13 22]
[14 21]
[25 38]
[26 37]
[27 36]
[40 78]
[41 77]
[42 76]
[44 74]
[45 73]
[48 71]
[49 70]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[80 103]
[81 102]
[82 101]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[149 176]
[150 175]
[151 174]
[152 173]
[155 170]
[156 169]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
