%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUCAGGCCCUGGAAGGACCGUAAACAUUUGGCCAGCUUGGUUUGGAUACCUGGCAGAGACCAGGUUCUGAGAAGCAAUGGUGACGAAGGCCUUUGUCUUGUUGGCCAUCUUUGCAGAAGCCUCUGCAAAAUCGUGUGCUCCAAAUAAAGCAGAUGUCAUUCUUGUGUUUUGCUAUC\
) } def
/len { sequence length } bind def

/coor [
[-77.40723419 253.24609375]
[-76.20988464 238.29396057]
[-69.83792877 224.71463013]
[-59.10501099 214.23921204]
[-73.77722168 217.35787964]
[-88.44944000 220.47656250]
[-103.12165070 223.59523010]
[-117.79386902 226.71391296]
[-132.46607971 229.83258057]
[-144.35601807 240.27001953]
[-158.41383362 235.34794617]
[-173.08604431 238.46662903]
[-187.75827026 241.58529663]
[-202.43048096 244.70397949]
[-217.10269165 247.82264709]
[-226.07278442 267.79330444]
[-245.94859314 276.41928101]
[-266.23483276 269.47726440]
[-278.37008667 278.29406738]
[-283.49185181 285.89208984]
[-290.79495239 287.15661621]
[-303.08224487 295.76028442]
[-315.36953735 304.36392212]
[-315.50567627 319.88040161]
[-324.76324463 332.33340454]
[-339.58245850 336.93450928]
[-354.26507568 331.91448975]
[-363.16528320 319.20364380]
[-362.86080933 303.68954468]
[-353.46871948 291.33770752]
[-338.60046387 286.89764404]
[-323.97317505 292.07662964]
[-311.68588257 283.47299194]
[-299.39862061 274.86935425]
[-287.18688965 266.15881348]
[-275.05163574 257.34201050]
[-275.99160767 254.51499939]
[-276.64190674 251.60765076]
[-291.58483887 250.30030823]
[-306.52774048 248.99298096]
[-320.94976807 255.49806213]
[-332.95425415 246.68095398]
[-347.89715576 245.37361145]
[-362.84008789 244.06628418]
[-374.78424072 254.41580200]
[-390.54208374 253.20489502]
[-400.76473999 241.15199280]
[-399.38729858 225.40783691]
[-387.22698975 215.31318665]
[-371.49829102 216.85699463]
[-361.53274536 229.12336731]
[-346.58984375 230.43069458]
[-331.64691162 231.73803711]
[-318.29373169 225.13943481]
[-305.22039795 234.05004883]
[-290.27749634 235.35739136]
[-275.33456421 236.66471863]
[-269.57919312 226.74386597]
[-260.43652344 219.71875000]
[-249.25125122 216.68064880]
[-237.69070435 218.13014221]
[-227.49632263 223.89524841]
[-220.22137451 233.15043640]
[-205.54914856 230.03176880]
[-190.87693787 226.91308594]
[-176.20472717 223.79441833]
[-161.53251648 220.67573547]
[-150.69203186 210.46136475]
[-135.58476257 215.16036987]
[-120.91254425 212.04170227]
[-106.24032593 208.92301941]
[-91.56811523 205.80435181]
[-76.89589691 202.68566895]
[-62.22368622 199.56700134]
[-58.39274979 194.60182190]
[-51.80625153 192.09547424]
[-44.10700226 193.50523376]
[-30.51238632 187.16596985]
[-16.91776848 180.82669067]
[-3.32315254 174.48741150]
[4.94174862 162.09626770]
[20.71887589 163.27642822]
[34.31349182 156.93716431]
[47.90811157 150.59788513]
[61.50272751 144.25860596]
[75.09734344 137.91934204]
[88.69196320 131.58006287]
[83.87252045 72.25112152]
[89.00282288 58.15572739]
[86.45207977 42.54149628]
[98.07574463 33.22808456]
[103.20604706 19.13269615]
[108.33634949 5.03730631]
[113.46665192 -9.05808258]
[103.11725616 -20.33409882]
[99.20475006 -35.13108826]
[102.62821198 -50.04881287]
[112.60095215 -61.65929031]
[126.83129883 -67.29450989]
[142.04922485 -65.65954590]
[154.75778198 -57.13010406]
[162.03660583 -43.66617966]
[162.21310425 -28.36168861]
[155.24668884 -14.73349094]
[142.73822021 -5.91324568]
[127.56204224 -3.92778063]
[122.43173981 10.16760826]
[117.30143738 24.26299858]
[112.17113495 38.35838699]
[115.08883667 52.96442413]
[103.09821320 63.28602982]
[97.96791077 77.38142395]
[109.02706909 87.51527405]
[122.62168884 81.17600250]
[136.21630859 74.83672333]
[149.81092834 68.49745178]
[163.40553284 62.15817642]
[177.00015259 55.81890488]
[190.59477234 49.47962952]
[204.18939209 43.14035416]
[213.14720154 29.40392113]
[229.50531006 30.56345749]
[236.43588257 45.42613220]
[226.80935669 58.70249939]
[210.52865601 56.73497391]
[196.93405151 63.07424545]
[183.33943176 69.41352081]
[169.74481201 75.75279236]
[156.15019226 82.09207153]
[142.55557251 88.43134308]
[128.96096802 94.77061462]
[115.36634827 101.10989380]
[115.49723816 108.60874939]
[128.61654663 115.88086700]
[115.75902557 123.60646057]
[115.88991547 131.10531616]
[129.69749451 136.96629333]
[145.42381287 135.23622131]
[154.11613464 147.33139038]
[167.92370605 153.19235229]
[181.73127747 159.05331421]
[195.53884888 164.91429138]
[208.76971436 156.80726624]
[224.23622131 158.05903625]
[235.99118042 168.18823242]
[239.51455688 183.30000305]
[233.45155334 197.58354187]
[220.13351440 205.54655457]
[204.68148804 204.12709045]
[193.03712463 193.87095642]
[189.67788696 178.72186279]
[175.87031555 172.86088562]
[162.06274414 166.99992371]
[148.25515747 161.13896179]
[133.51644897 163.28823853]
[123.83652496 150.77386475]
[110.02895355 144.91288757]
[95.03123474 145.17468262]
[81.43661499 151.51394653]
[67.84200287 157.85322571]
[54.24738312 164.19250488]
[40.65276718 170.53176880]
[27.05815125 176.87104797]
[17.82087135 189.71563721]
[3.01612139 188.08203125]
[-10.57849503 194.42131042]
[-24.17311287 200.76057434]
[-37.76773071 207.09985352]
[-22.88951302 209.00738525]
[-9.62879372 216.01832581]
[0.32523644 227.23960876]
[5.70460510 241.24183655]
[5.82407236 256.24136353]
[0.66841954 270.32751465]
[-9.10561085 281.70593262]
[-22.25297356 288.92718506]
[-37.09891891 291.07147217]
[-51.75232697 287.86560059]
[-64.34660339 279.71795654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 74]
[5 73]
[6 72]
[7 71]
[8 70]
[9 69]
[11 67]
[12 66]
[13 65]
[14 64]
[15 63]
[18 36]
[19 35]
[21 34]
[22 33]
[23 32]
[38 57]
[39 56]
[40 55]
[42 53]
[43 52]
[44 51]
[77 168]
[78 167]
[79 166]
[80 165]
[82 163]
[83 162]
[84 161]
[85 160]
[86 159]
[87 158]
[88 112]
[89 111]
[91 109]
[92 108]
[93 107]
[94 106]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[136 157]
[137 156]
[139 154]
[140 153]
[141 152]
[142 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
