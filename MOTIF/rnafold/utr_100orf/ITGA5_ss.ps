%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCGCCUCUGGGAGGUUUAGGAAGCGGCUCCGGGUCGGUGGCCCCAGGACAGGGAAGAGCGGGCGCUAUGGGGAGCCGGACGCCAGAGUCCCCUCUCCACGCCGUGCAGCUGCGCUGGGGCCCCCGGCGCCGACCCCCGCUGCUGCCGCUGCUGUUGCUGCUGCUGC\
) } def
/len { sequence length } bind def

/coor [
[130.18240356 126.28091431]
[118.46981812 135.65190125]
[105.93811035 127.40834045]
[109.90563202 112.94264984]
[102.41372681 113.29107666]
[96.44883728 127.05406952]
[90.48394012 140.81706238]
[84.51904297 154.58006287]
[78.55415344 168.34304810]
[77.80328369 185.28036499]
[61.32002640 189.24755859]
[52.94485474 174.50669861]
[64.79115295 162.37815857]
[70.75605011 148.61515808]
[76.72094727 134.85217285]
[82.68583679 121.08917236]
[88.65073395 107.32617950]
[75.19382477 113.95276642]
[60.76726532 109.84492493]
[52.81951523 97.12355804]
[55.45401764 82.35671997]
[67.31057739 73.16857147]
[82.26761627 74.30297089]
[92.60357666 85.17612457]
[91.76749420 70.19944000]
[90.93140411 55.22275925]
[90.09532166 40.24607849]
[89.25923920 25.26939964]
[74.93094635 16.31709671]
[68.80868530 0.74847895]
[73.11488342 -15.24514580]
[85.96628571 -25.42901993]
[84.85195923 -40.38757324]
[83.73762512 -55.34612274]
[82.48431396 -70.29367065]
[81.09211731 -85.22892761]
[79.69992828 -100.16417694]
[78.30773926 -115.09943390]
[76.91554260 -130.03468323]
[67.93080902 -143.05717468]
[74.45346069 -156.44763184]
[73.06127167 -171.38287354]
[71.66907501 -186.31813049]
[70.27688599 -201.25338745]
[68.88469696 -216.18864441]
[67.49250031 -231.12390137]
[66.10031128 -246.05914307]
[64.70812225 -260.99441528]
[52.82729721 -271.06832886]
[51.62817764 -286.23461914]
[61.30533218 -297.49908447]
[59.91314316 -312.43435669]
[58.52095032 -327.36959839]
[49.49715805 -331.17401123]
[42.53662872 -337.97982788]
[38.57790756 -346.80987549]
[38.13287735 -356.41830444]
[41.22093582 -365.46649170]
[47.37221146 -372.70947266]
[55.69853210 -377.16714478]
[55.41970825 -392.16455078]
[55.14088440 -407.16198730]
[54.72267914 -422.15615845]
[54.16513062 -437.14578247]
[53.60757828 -452.13540649]
[53.05002594 -467.12506104]
[50.22569275 -471.61080933]
[49.50482559 -476.26419067]
[50.59309769 -480.24633789]
[52.90283585 -482.96078491]
[53.18165970 -497.95819092]
[53.46048355 -512.95556641]
[53.73930740 -527.95300293]
[54.01813126 -542.95037842]
[54.29695129 -557.94781494]
[54.57577515 -572.94525146]
[46.19190598 -582.78167725]
[46.75612640 -595.29217529]
[55.41852951 -603.77172852]
[55.97607803 -618.76135254]
[56.53363037 -633.75097656]
[57.09117889 -648.74060059]
[46.15663147 -660.15161133]
[46.57706833 -675.95031738]
[58.10305023 -686.76361084]
[73.89641571 -686.17614746]
[84.58724976 -674.53649902]
[83.83285522 -658.75024414]
[72.08081055 -648.18304443]
[71.52326202 -633.19342041]
[70.96571350 -618.20379639]
[70.40816498 -603.21417236]
[79.44318390 -588.18981934]
[69.57318878 -572.66638184]
[69.29436493 -557.66900635]
[69.01554108 -542.67156982]
[68.73671722 -527.67419434]
[68.45789337 -512.67675781]
[68.17906952 -497.67935181]
[67.90024567 -482.68194580]
[68.03966522 -467.68258667]
[68.59721375 -452.69296265]
[69.15476227 -437.70333862]
[69.71231079 -422.71368408]
[73.11706543 -416.11965942]
[70.13829041 -407.44079590]
[70.41711426 -392.44338989]
[70.69593811 -377.44598389]
[86.56908417 -364.62255859]
[87.92229462 -343.96942139]
[73.45620728 -328.76177979]
[74.84839630 -313.82653809]
[76.24058533 -298.89129639]
[87.83296967 -289.60946655]
[89.45760345 -274.48281860]
[79.64337158 -262.38659668]
[81.03556824 -247.45133972]
[82.42775726 -232.51608276]
[83.81994629 -217.58082581]
[85.21214294 -202.64558411]
[86.60433197 -187.71032715]
[87.99652100 -172.77507019]
[89.38871765 -157.83981323]
[98.27387238 -145.88560486]
[91.85079956 -131.42687988]
[93.24298859 -116.49162292]
[94.63518524 -101.55637360]
[96.02737427 -86.62111664]
[97.41956329 -71.68585968]
[101.18656921 -65.29186249]
[98.69617462 -56.46045303]
[99.81050873 -41.50190353]
[100.92484283 -26.54335022]
[112.89958191 -20.58984566]
[120.42066956 -9.40135098]
[121.42888641 4.15101385]
[115.55319977 16.52505112]
[104.23591614 24.43331337]
[105.07199860 39.40999603]
[105.90808868 54.38667679]
[106.74417114 69.36335754]
[107.58026123 84.34003448]
[145.53131104 104.68084717]
[152.74783325 117.83081818]
[166.17015076 126.20651245]
[165.51023865 141.08648682]
[172.72677612 154.23646545]
[186.14907837 162.61215210]
[185.48918152 177.49212646]
[192.70570374 190.64210510]
[206.12800598 199.01779175]
[205.46810913 213.89778137]
[212.68464661 227.04774475]
[226.97857666 235.08612061]
[226.89350891 251.48506165]
[212.51695251 259.37472534]
[198.63827515 250.63890076]
[199.53466797 234.26428223]
[192.31814575 221.11430359]
[179.41200256 213.67918396]
[179.55574036 197.85862732]
[172.33920288 184.70866394]
[159.43307495 177.27354431]
[159.57679749 161.45298767]
[152.36027527 148.30302429]
[139.45414734 140.86790466]
[139.59786987 125.04734802]
[132.38133240 111.89737701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[24 142]
[25 141]
[26 140]
[27 139]
[28 138]
[32 133]
[33 132]
[34 131]
[35 129]
[36 128]
[37 127]
[38 126]
[39 125]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 116]
[51 113]
[52 112]
[53 111]
[60 108]
[61 107]
[62 106]
[63 104]
[64 103]
[65 102]
[66 101]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[79 92]
[80 91]
[81 90]
[82 89]
[143 168]
[144 167]
[146 165]
[147 164]
[149 162]
[150 161]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
