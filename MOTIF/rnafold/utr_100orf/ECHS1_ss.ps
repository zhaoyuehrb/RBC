%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGCGAGCCCUGAAAGGCUAUAGGCGAGGGGGCGGCUCCGCGGGGCCGGGCGAGGAGUCCAGAGAGCCAUGGCCGCCCUGCGUGUCCUGCUGUCCUGCGUCCGCGGCCCGCUGAGGCCCCCGGUUCGCUGUCCCGCCUGGCGUCCCUUCGCCUCGGGUGCUAACUUUG\
) } def
/len { sequence length } bind def

/coor [
[17.03560448 745.82977295]
[19.57780266 726.61553955]
[19.85176468 711.61804199]
[20.12572479 696.62054443]
[20.39968681 681.62304688]
[20.67364693 666.62554932]
[10.18299866 656.11450195]
[10.24718857 640.90100098]
[21.34326172 629.96868896]
[21.61722183 614.97119141]
[21.89118195 599.97369385]
[22.02816963 584.97430420]
[22.02816963 569.97430420]
[22.02816963 554.97430420]
[22.02816963 539.97430420]
[22.02816963 524.97430420]
[12.45131683 536.51922607]
[-1.80693424 541.17779541]
[-16.35272598 537.51446533]
[-26.70359039 526.65814209]
[-29.66978073 511.95434570]
[-24.33722496 497.93420410]
[-12.34921837 488.91824341]
[2.59998369 487.68481445]
[15.90359783 494.61401367]
[23.46188736 507.57028198]
[25.91658211 492.77249146]
[28.37127686 477.97470093]
[30.82597160 463.17691040]
[33.28066635 448.37911987]
[35.73535919 433.58135986]
[38.19005585 418.78356934]
[40.64474869 403.98577881]
[43.09944534 389.18798828]
[45.55413818 374.39019775]
[48.00883484 359.59240723]
[50.46352768 344.79461670]
[48.44865036 337.65502930]
[53.10055923 329.75003052]
[55.82511139 314.99954224]
[47.19598007 302.91345215]
[49.74893951 287.91552734]
[62.48445511 278.94647217]
[65.20900726 264.19598389]
[67.93356323 249.44549561]
[70.65811157 234.69500732]
[73.38266754 219.94451904]
[76.10721588 205.19403076]
[78.83177185 190.44354248]
[81.28646851 175.64576721]
[83.47048187 160.80561829]
[85.65450287 145.96546936]
[87.83851624 131.12530518]
[90.02253723 116.28516388]
[81.46231842 104.59461212]
[83.57200623 90.25950623]
[95.13731384 81.53082275]
[97.32133484 66.69067383]
[91.67580414 51.91100311]
[101.18376160 40.44591904]
[103.36777496 25.60577011]
[105.55179596 10.76561928]
[107.60019684 -4.09385777]
[109.51280212 -18.97142220]
[111.42541504 -33.84898758]
[100.30959320 -44.51409531]
[97.63638306 -59.50433731]
[104.22463989 -73.03426361]
[117.35932922 -80.00691223]
[119.27194214 -94.88447571]
[121.18455505 -109.76203918]
[115.27003479 -124.43613434]
[124.56700134 -136.07295227]
[126.47961426 -150.95053101]
[128.39222717 -165.82809448]
[122.47770691 -180.50218201]
[131.77467346 -192.13900757]
[133.68728638 -207.01657104]
[135.59989929 -221.89413452]
[124.48406982 -232.55924988]
[121.81086731 -247.54948425]
[128.39912415 -261.07940674]
[141.53381348 -268.05206299]
[143.44642639 -282.92962646]
[145.35903931 -297.80718994]
[143.34487915 -306.75549316]
[147.44485474 -312.93807983]
[149.62886047 -327.77822876]
[145.95315552 -344.32891846]
[160.83950806 -352.44265747]
[172.75712585 -340.38418579]
[164.46902466 -325.59420776]
[162.28500366 -310.75405884]
[160.23660278 -295.89459229]
[158.32398987 -281.01702881]
[156.41137695 -266.13943481]
[167.35536194 -256.07131958]
[170.30722046 -241.31495667]
[163.92941284 -227.48828125]
[150.47746277 -219.98152161]
[148.56484985 -205.10395813]
[146.65223694 -190.22639465]
[152.70356750 -176.61643982]
[143.26979065 -163.91548157]
[141.35717773 -149.03791809]
[139.44456482 -134.16035461]
[145.49589539 -120.55039978]
[136.06211853 -107.84943390]
[134.14950562 -92.97187042]
[132.23689270 -78.09429932]
[143.18087769 -68.02617645]
[146.13273621 -53.26980209]
[139.75492859 -39.44313049]
[126.30297852 -31.93637466]
[124.39037323 -17.05880928]
[122.47776031 -2.18124604]
[124.75204468 4.88001966]
[120.39194489 12.94963646]
[118.20792389 27.78978729]
[116.02391052 42.62993622]
[121.82565308 56.34814072]
[112.16148376 68.87468719]
[109.97746277 83.71483612]
[118.53768158 95.40538788]
[116.42799377 109.74049377]
[104.86268616 118.46917725]
[102.67866516 133.30932617]
[100.49465179 148.14947510]
[98.31063080 162.98962402]
[96.12661743 177.82977295]
[98.22338867 184.16282654]
[96.96907043 189.75338745]
[93.58225250 193.16810608]
[90.85770416 207.91859436]
[88.13314819 222.66906738]
[85.40859985 237.41955566]
[82.68404388 252.17004395]
[79.95949554 266.92053223]
[77.23493958 281.67102051]
[85.92608643 294.59780884]
[82.95287323 309.51806641]
[70.57559967 317.72409058]
[67.85104370 332.47457886]
[65.26131439 347.24932861]
[62.80661774 362.04711914]
[60.35192490 376.84490967]
[57.89723206 391.64266968]
[55.44253540 406.44046021]
[52.98784256 421.23825073]
[50.53314590 436.03604126]
[48.07845306 450.83383179]
[45.62375641 465.63162231]
[43.16906357 480.42941284]
[40.71436691 495.22717285]
[38.25967407 510.02496338]
[37.02816772 524.97430420]
[37.02816772 539.97430420]
[37.02816772 554.97430420]
[37.02816772 569.97430420]
[37.02816772 584.97430420]
[40.16685867 593.59277344]
[36.88867950 600.24768066]
[36.61471939 615.24517822]
[36.34075928 630.24267578]
[47.03015900 641.57293701]
[46.53867722 656.77862549]
[35.67114639 666.89947510]
[35.39718246 681.89697266]
[35.12322235 696.89447021]
[34.84926224 711.89196777]
[34.57530212 726.88946533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 171]
[3 170]
[4 169]
[5 168]
[6 167]
[9 164]
[10 163]
[11 162]
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[26 155]
[27 154]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[39 143]
[40 142]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[50 130]
[51 129]
[52 128]
[53 127]
[54 126]
[57 123]
[58 122]
[60 120]
[61 119]
[62 118]
[63 116]
[64 115]
[65 114]
[69 110]
[70 109]
[71 108]
[73 106]
[74 105]
[75 104]
[77 102]
[78 101]
[79 100]
[83 96]
[84 95]
[85 94]
[87 93]
[88 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
