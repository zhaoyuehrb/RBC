%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGCGCGGUCUCAGCUCUCGGCUGGGGUUCGUCACUGGGCGCGGGAUUUGGCCGCCGCGGGGCUCCGGAGCCGCUCGCUCCCGACACGGCUCACGAUGCGCGGCGAGCAGGGCGCGGCGGGGGCCCGCGUGCUCCAGUUCACUAACUGCCGGAUCCUGCGCGGAGGGAAACUGCUCAGGGAGGAUCUGUGGGUGC\
) } def
/len { sequence length } bind def

/coor [
[85.99072266 162.50790405]
[87.30077362 147.56446838]
[89.07855988 132.67019653]
[81.61840820 131.89807129]
[72.91755676 144.11671448]
[64.21670532 156.33534241]
[55.51585007 168.55398560]
[53.08316040 177.36985779]
[46.57875061 180.89598083]
[37.68513489 192.97503662]
[28.79151344 205.05409241]
[19.89789581 217.13314819]
[11.00427628 229.21220398]
[2.11065722 241.29124451]
[-6.78296185 253.37030029]
[-15.67658043 265.44937134]
[-24.57019997 277.52841187]
[-33.46381760 289.60745239]
[-37.98602676 305.94717407]
[-54.93904495 306.12496948]
[-59.80295563 289.88369751]
[-45.54287338 280.71383667]
[-36.64925385 268.63479614]
[-27.75563431 256.55575562]
[-18.86201477 244.47668457]
[-9.96839619 232.39762878]
[-1.07477760 220.31857300]
[7.81884146 208.23953247]
[16.71245956 196.16047668]
[25.60607910 184.08142090]
[34.49969864 172.00236511]
[43.29721069 159.85313416]
[51.99806595 147.63449097]
[60.69891739 135.41586304]
[69.39977264 123.19721985]
[69.80140686 88.50708008]
[94.92261505 74.27195740]
[96.34845734 59.33987808]
[86.56150818 47.22157288]
[88.22022247 32.09863281]
[99.83348846 22.84295273]
[101.25933075 7.91087389]
[102.68517303 -7.02120495]
[104.11101532 -21.95328331]
[105.53684998 -36.88536453]
[106.96269226 -51.81744003]
[108.38853455 -66.74951935]
[109.81437683 -81.68160248]
[111.24021149 -96.61367798]
[112.66605377 -111.54575348]
[114.09189606 -126.47783661]
[115.51773834 -141.40991211]
[116.94358063 -156.34199524]
[118.36941528 -171.27407837]
[101.02471161 -183.82939148]
[102.30065155 -211.67704773]
[100.40176392 -226.55636597]
[98.38489532 -241.42015076]
[96.25017548 -256.26748657]
[94.11545563 -271.11480713]
[91.98072815 -285.96212769]
[89.84600830 -300.80944824]
[87.71128845 -315.65676880]
[78.08876801 -328.21533203]
[83.93603516 -341.91418457]
[81.80131531 -356.76150513]
[79.66658783 -371.60885620]
[77.53186798 -386.45617676]
[75.39714813 -401.30349731]
[63.02907562 -410.77282715]
[61.07566833 -425.86053467]
[70.17946625 -437.59326172]
[68.04474640 -452.44058228]
[63.72171402 -460.49966431]
[65.99587250 -467.54019165]
[64.09698486 -482.41952515]
[62.19810104 -497.29882812]
[60.29921341 -512.17816162]
[58.28234482 -527.04193115]
[56.14762115 -541.88928223]
[54.01290131 -556.73657227]
[51.87817764 -571.58392334]
[49.62573624 -586.41381836]
[47.25571442 -601.22540283]
[44.88569260 -616.03698730]
[32.94575882 -630.04907227]
[39.83060455 -646.18615723]
[37.22588348 -660.95831299]
[34.50405121 -675.70928955]
[31.66528130 -690.43823242]
[19.23864555 -700.58502197]
[19.56795120 -716.62469482]
[32.40058136 -726.25299072]
[47.89244461 -722.08380127]
[54.15950394 -707.31549072]
[46.39421082 -693.27697754]
[49.23298264 -678.54803467]
[53.59047699 -672.56866455]
[51.99799728 -663.56298828]
[54.60272217 -648.79089355]
[64.33271790 -641.59259033]
[66.61862946 -629.29913330]
[59.69727707 -618.40704346]
[62.06729889 -603.59545898]
[64.43731689 -588.78387451]
[68.60290527 -582.66925049]
[66.72550201 -573.71862793]
[68.86022186 -558.87133789]
[70.99494171 -544.02398682]
[73.12966919 -529.17669678]
[77.19771576 -522.99670410]
[75.17853546 -514.07702637]
[77.07742310 -499.19772339]
[78.97631073 -484.31838989]
[80.87519836 -469.43908691]
[82.89206696 -454.57528687]
[85.02678680 -439.72796631]
[97.06730652 -431.03536987]
[99.44371796 -416.00848389]
[90.24446869 -403.43820190]
[92.37918854 -388.59088135]
[94.51391602 -373.74356079]
[96.64863586 -358.89624023]
[98.78335571 -344.04891968]
[108.25318146 -332.55233765]
[102.55860901 -317.79147339]
[104.69332886 -302.94415283]
[106.82804871 -288.09683228]
[108.96277618 -273.24951172]
[111.09749603 -258.40219116]
[113.23221588 -243.55488586]
[117.30027008 -237.37492371]
[115.28108978 -228.45526123]
[117.17997742 -213.57592773]
[123.18403625 -209.08134460]
[136.97280884 -214.98638916]
[135.19215393 -200.09217834]
[141.19621277 -195.59759521]
[156.00779724 -197.96762085]
[170.81938171 -200.33764648]
[185.63096619 -202.70767212]
[198.01098633 -213.46252441]
[213.42469788 -207.86344910]
[216.01579285 -191.67028809]
[203.11875916 -181.54118347]
[188.00097656 -187.89608765]
[173.18940735 -185.52606201]
[158.37782288 -183.15603638]
[143.56623840 -180.78602600]
[133.30149841 -169.84823608]
[131.87565613 -154.91615295]
[130.44981384 -139.98406982]
[129.02397156 -125.05199432]
[127.59813690 -110.11991882]
[126.17229462 -95.18783569]
[124.74645233 -80.25576019]
[123.32061005 -65.32367706]
[121.89477539 -50.39160156]
[120.46893311 -35.45952225]
[119.04309082 -20.52744293]
[117.61724854 -5.59536457]
[116.19140625 9.33671474]
[114.76557159 24.26879311]
[124.41732025 35.55503845]
[123.18402863 50.71860123]
[111.28053284 60.76572037]
[109.85469055 75.69779968]
[116.57657623 77.74997711]
[122.84172821 81.70058441]
[128.10908508 87.43453217]
[131.87110901 94.68257141]
[133.69734192 103.03211975]
[133.27445984 111.95032501]
[130.43904114 120.81803131]
[125.20063019 128.97262573]
[131.21458435 142.71424866]
[137.22854614 156.45587158]
[143.24250793 170.19750977]
[149.25646973 183.93913269]
[161.87757874 193.47946167]
[159.89212036 208.24114990]
[165.90608215 221.98277283]
[171.92004395 235.72439575]
[183.80953979 247.81060791]
[175.48701477 262.58123779]
[158.98970032 258.67288208]
[158.17842102 241.73835754]
[152.16445923 227.99673462]
[146.15049744 214.25511169]
[133.95954895 205.69766235]
[135.51483154 189.95309448]
[129.50088501 176.21145630]
[123.48692322 162.46983337]
[117.47296143 148.72821045]
[111.45900726 134.98658752]
[103.99885559 134.21444702]
[102.68851471 149.15710449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 35]
[5 34]
[6 33]
[7 32]
[9 31]
[10 30]
[11 29]
[12 28]
[13 27]
[14 26]
[15 25]
[16 24]
[17 23]
[18 22]
[37 167]
[38 166]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 153]
[52 152]
[53 151]
[54 150]
[56 134]
[57 133]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[65 124]
[66 123]
[67 122]
[68 121]
[69 120]
[72 117]
[73 116]
[75 115]
[76 114]
[77 113]
[78 112]
[79 110]
[80 109]
[81 108]
[82 107]
[83 105]
[84 104]
[85 103]
[87 100]
[88 99]
[89 97]
[90 96]
[138 149]
[139 148]
[140 147]
[141 146]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[181 189]
[182 188]
[183 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
