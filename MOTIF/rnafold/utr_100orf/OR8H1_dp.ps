%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR8H1)
} def

/sequence { (\
AUGGGUAGAAGAAAUAACACAAAUGUGCCUGACUUCAUCCUUACGGGACUGUCAGAUUCUGAAGAGGUCCAGAUGGCCCUCUUUAUACUAUUUCUCCUGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 91 0.006163891 ubox
2 90 0.007181495 ubox
2 99 0.286771368 ubox
3 40 0.049831876 ubox
3 41 0.011905606 ubox
3 89 0.007206851 ubox
3 93 0.016800558 ubox
3 94 0.008268001 ubox
3 95 0.004374172 ubox
3 96 0.012440116 ubox
3 97 0.136047007 ubox
3 98 0.616577306 ubox
4 39 0.049916385 ubox
4 40 0.012940455 ubox
4 88 0.006976142 ubox
4 89 0.013715943 ubox
4 92 0.022160066 ubox
4 93 0.006708540 ubox
4 94 0.004772494 ubox
4 95 0.011856159 ubox
4 96 0.135712023 ubox
4 97 0.641536715 ubox
4 98 0.051474642 ubox
5 38 0.049837625 ubox
5 39 0.012930669 ubox
5 88 0.014332783 ubox
5 91 0.026767254 ubox
5 92 0.004827569 ubox
5 94 0.014070974 ubox
5 95 0.072165836 ubox
5 96 0.640794592 ubox
5 97 0.053657336 ubox
6 37 0.049645173 ubox
6 87 0.014379138 ubox
6 90 0.029815580 ubox
6 99 0.661355594 ubox
7 15 0.003308765 ubox
7 60 0.004395444 ubox
7 86 0.013574325 ubox
7 89 0.029893595 ubox
7 92 0.007525997 ubox
7 93 0.021318328 ubox
7 95 0.430918422 ubox
7 98 0.723281590 ubox
8 36 0.051574919 ubox
8 59 0.005367277 ubox
8 88 0.029725283 ubox
8 91 0.007816129 ubox
8 92 0.021685028 ubox
8 93 0.028184268 ubox
8 94 0.435793221 ubox
8 96 0.127097986 ubox
8 97 0.726341009 ubox
9 35 0.051586608 ubox
9 58 0.005317291 ubox
9 91 0.020810750 ubox
9 92 0.031064109 ubox
9 93 0.431010758 ubox
9 95 0.098897268 ubox
10 34 0.051543403 ubox
10 57 0.004650734 ubox
10 60 0.028039222 ubox
10 89 0.044686736 ubox
10 91 0.029028842 ubox
10 92 0.398690181 ubox
10 93 0.028483486 ubox
10 95 0.871082255 ubox
11 33 0.051382671 ubox
11 58 0.003309692 ubox
11 59 0.045057385 ubox
11 88 0.050431002 ubox
11 91 0.271448847 ubox
11 92 0.038737971 ubox
11 93 0.010068441 ubox
11 94 0.896718379 ubox
12 57 0.003459341 ubox
12 58 0.044265066 ubox
12 91 0.042713571 ubox
12 92 0.017641585 ubox
12 93 0.896886631 ubox
13 57 0.038322904 ubox
13 58 0.011093950 ubox
13 91 0.020145215 ubox
13 92 0.898145578 ubox
13 93 0.003406677 ubox
14 24 0.006526874 ubox
14 26 0.016369745 ubox
14 57 0.013129186 ubox
14 86 0.021775017 ubox
14 91 0.899204027 ubox
14 92 0.004828163 ubox
15 23 0.006627325 ubox
15 25 0.016681223 ubox
15 27 0.010665807 ubox
15 31 0.011184943 ubox
15 56 0.013952200 ubox
15 85 0.020755587 ubox
15 87 0.084346269 ubox
15 90 0.896536001 ubox
16 24 0.016022267 ubox
16 26 0.008947385 ubox
16 30 0.010837487 ubox
16 84 0.017043921 ubox
16 86 0.083054168 ubox
16 89 0.860069549 ubox
16 92 0.003431237 ubox
17 26 0.243869287 ubox
17 57 0.003729372 ubox
17 83 0.009982449 ubox
17 91 0.004012640 ubox
18 25 0.251472621 ubox
18 27 0.946958575 ubox
19 24 0.209311007 ubox
19 26 0.950515646 ubox
20 25 0.949245562 ubox
20 27 0.068749209 ubox
21 26 0.060086558 ubox
22 58 0.010430528 ubox
22 92 0.003282298 ubox
23 57 0.011508791 ubox
23 91 0.004385217 ubox
24 56 0.011485336 ubox
24 90 0.004711606 ubox
25 49 0.003287220 ubox
25 57 0.010987226 ubox
25 88 0.023990150 ubox
26 48 0.003285509 ubox
26 56 0.010893052 ubox
26 87 0.023761796 ubox
27 86 0.021080358 ubox
28 47 0.005729435 ubox
29 46 0.005749318 ubox
29 55 0.994760047 ubox
30 45 0.005735551 ubox
30 54 0.997798404 ubox
31 44 0.005674322 ubox
31 53 0.998585237 ubox
32 52 0.998391258 ubox
33 51 0.995303420 ubox
33 55 0.005142546 ubox
34 47 0.023736931 ubox
34 48 0.032917366 ubox
34 54 0.005098465 ubox
35 46 0.025134563 ubox
35 47 0.033850907 ubox
35 48 0.166240758 ubox
36 45 0.026202886 ubox
36 46 0.031596317 ubox
36 47 0.163272648 ubox
36 51 0.066541912 ubox
37 50 0.096430694 ubox
38 46 0.085911126 ubox
38 47 0.404740813 ubox
38 48 0.861534769 ubox
39 45 0.090628036 ubox
39 46 0.460799245 ubox
39 47 0.877761197 ubox
40 45 0.461149846 ubox
40 46 0.877245338 ubox
40 47 0.010980957 ubox
41 45 0.790300512 ubox
41 46 0.010924823 ubox
44 99 0.050545245 ubox
45 96 0.004005629 ubox
45 98 0.051213945 ubox
46 95 0.004037819 ubox
46 97 0.051326051 ubox
47 94 0.004626293 ubox
47 96 0.051320904 ubox
48 93 0.004550295 ubox
48 95 0.049857967 ubox
49 55 0.003769706 ubox
50 54 0.003416818 ubox
51 91 0.018010742 ubox
52 62 0.006807591 ubox
52 90 0.018262864 ubox
53 61 0.008933761 ubox
54 60 0.009360066 ubox
54 89 0.037889343 ubox
54 93 0.013331166 ubox
54 95 0.003379989 ubox
55 59 0.010497102 ubox
55 88 0.039464542 ubox
55 92 0.015178552 ubox
55 94 0.005446267 ubox
56 86 0.058844249 ubox
56 91 0.031703198 ubox
56 93 0.005373055 ubox
57 85 0.044732678 ubox
57 90 0.033987128 ubox
60 85 0.902583631 ubox
60 87 0.024290391 ubox
60 90 0.003776731 ubox
61 83 0.010308746 ubox
61 84 0.988418268 ubox
61 86 0.017226275 ubox
62 82 0.007910056 ubox
62 83 0.996844977 ubox
62 84 0.012166879 ubox
63 82 0.999107588 ubox
63 83 0.009120626 ubox
64 79 0.003183993 ubox
64 81 0.999972164 ubox
65 80 0.999817861 ubox
66 78 0.080677947 ubox
66 79 0.996723739 ubox
67 77 0.113842090 ubox
67 78 0.992455814 ubox
68 76 0.110102799 ubox
69 75 0.108927283 ubox
69 76 0.992122258 ubox
70 75 0.991945643 ubox
84 90 0.004472277 ubox
85 89 0.006141069 ubox
85 91 0.006656386 ubox
86 90 0.009897968 ubox
93 100 0.007455199 ubox
94 99 0.009364417 ubox
6 99 0.9500000 lbox
7 98 0.9500000 lbox
8 97 0.9500000 lbox
10 95 0.9500000 lbox
11 94 0.9500000 lbox
12 93 0.9500000 lbox
13 92 0.9500000 lbox
14 91 0.9500000 lbox
15 90 0.9500000 lbox
16 89 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
41 45 0.9500000 lbox
60 85 0.9500000 lbox
61 84 0.9500000 lbox
62 83 0.9500000 lbox
63 82 0.9500000 lbox
64 81 0.9500000 lbox
65 80 0.9500000 lbox
66 79 0.9500000 lbox
67 78 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
