%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGAAGUCACUUCUCACACGCCUUUCUUAUUGGAUACCGGCUUUUCAUGGGGCCGAGCGCCGCUGGGUAGGCGGAAGUAGCCGCAGGCAUGGCGGCGGCUAUGCCGCUUGCUCUGCUCGUCCUGUUGCUCCUGGGGCCCGGCGGCUGGUGCCUUGCAGAACCCCCACGCGACAGCCUGCGGGAGGAAC\
) } def
/len { sequence length } bind def

/coor [
[84.85025024 121.60762024]
[76.97248077 110.41262817]
[62.08646774 112.25835419]
[47.20045853 114.10408020]
[32.31444550 115.94979858]
[28.04843903 125.76100159]
[20.14875984 132.85536194]
[10.09141445 135.99771118]
[-0.28156316 134.68296814]
[-9.09944820 129.21597290]
[-14.80019188 120.64431763]
[-29.75912285 121.75354767]
[-44.71805191 122.86278534]
[-59.67698288 123.97202301]
[-74.63591003 125.08125305]
[-65.22793579 136.76414490]
[-68.33116913 151.43963623]
[-81.66320801 158.31399536]
[-95.41842651 152.33119202]
[-99.47995758 137.89152527]
[-90.86038971 125.61517334]
[-105.85988617 125.49181366]
[-120.85937500 125.36845398]
[-135.85887146 125.24509430]
[-150.85836792 125.12173462]
[-160.59379578 133.59945679]
[-173.09495544 133.17823792]
[-181.66888428 124.62998962]
[-196.66430664 124.25994110]
[-211.65974426 123.88990021]
[-226.65518188 123.51985168]
[-240.64202881 130.91435242]
[-253.17456055 122.86543274]
[-268.16998291 122.49538422]
[-283.16543579 122.12533569]
[-291.22497559 135.12498474]
[-304.62081909 142.29772949]
[-319.70803833 141.80555725]
[-332.43804932 133.88069153]
[-339.44488525 120.73651886]
[-354.44033813 120.36647034]
[-369.43576050 119.99642944]
[-384.43121338 119.62638092]
[-399.42663574 119.25634003]
[-414.42205811 118.88629150]
[-429.41751099 118.51624298]
[-443.55081177 126.83381653]
[-457.68539429 118.51846313]
[-457.28085327 102.12430573]
[-442.75329590 94.51625061]
[-429.04745483 103.52081299]
[-414.05203247 103.89085388]
[-399.05657959 104.26090240]
[-384.06115723 104.63095093]
[-369.06573486 105.00099182]
[-354.07028198 105.37104034]
[-339.07485962 105.74108124]
[-331.42819214 92.95851135]
[-318.32281494 85.67120361]
[-303.22967529 85.92378998]
[-290.20394897 93.74855042]
[-282.79537964 107.12990570]
[-267.79995728 107.49994659]
[-252.80450439 107.86999512]
[-239.89022827 100.44902802]
[-226.28514099 108.52442169]
[-211.28970337 108.89446259]
[-196.29426575 109.26451111]
[-181.29882812 109.63455200]
[-166.37437439 100.41646576]
[-150.73500061 110.12224579]
[-135.73550415 110.24560547]
[-120.73601532 110.36896515]
[-105.73652649 110.49232483]
[-90.73703003 110.61568451]
[-75.74514771 110.12232971]
[-60.78621674 109.01309204]
[-45.82728577 107.90385437]
[-30.86835670 106.79462433]
[-15.90942669 105.68538666]
[-4.33161259 90.03577423]
[15.32261086 87.88652802]
[30.46872330 101.06378937]
[45.35473251 99.21806335]
[60.24074173 97.37234497]
[75.12675476 95.52661896]
[80.57592773 81.05342102]
[94.15888977 71.59823608]
[111.79402924 71.48465729]
[114.49318695 56.72950363]
[117.19234467 41.97435379]
[115.65707397 32.95218277]
[120.05914307 26.99957657]
[123.00062561 12.29081440]
[125.94210052 -2.41794896]
[128.88357544 -17.12671280]
[131.82505798 -31.83547592]
[134.76652527 -46.54423904]
[137.70800781 -61.25300217]
[131.94296265 -76.60540009]
[142.56361389 -89.10074615]
[158.64436340 -85.88490295]
[163.64270020 -70.26604462]
[152.41677856 -58.31152344]
[149.47529602 -43.60276031]
[146.53381348 -28.89399719]
[143.59234619 -14.18523502]
[140.65086365 0.52352822]
[137.70938110 15.23229122]
[134.76791382 29.94105530]
[131.94749451 44.67351151]
[129.24833679 59.42866516]
[126.54917908 74.18381500]
[134.61155701 86.83284760]
[149.12672424 90.61574554]
[163.64187622 94.39864349]
[178.94726562 90.39174652]
[189.31185913 101.08868408]
[203.82702637 104.87158203]
[218.34217834 108.65447998]
[232.85733032 112.43737030]
[247.37248230 116.22026825]
[266.53063965 109.98497772]
[279.71826172 124.11272430]
[294.34997559 127.41616821]
[308.98168945 130.71960449]
[323.61340332 134.02305603]
[338.24514771 137.32649231]
[352.87686157 140.62994385]
[367.50857544 143.93338013]
[376.37213135 137.59199524]
[387.04333496 137.19345093]
[395.97946167 142.62788391]
[400.34683228 151.88880920]
[414.86199951 155.67170715]
[429.37713623 159.45460510]
[443.89230347 163.23750305]
[458.40744019 167.02040100]
[469.88922119 155.13368225]
[485.70681763 150.67991638]
[501.52224731 154.78228760]
[513.04748535 166.23078918]
[517.20709229 181.83711243]
[531.78247070 185.38076782]
[546.41418457 188.68420410]
[561.09826660 191.74655151]
[575.78234863 194.80888367]
[591.18164062 189.17028809]
[603.58923340 199.89334106]
[600.24127197 215.94709778]
[584.58184814 220.81681824]
[572.72003174 209.49296570]
[558.03594971 206.43061829]
[543.35186768 203.36828613]
[538.92395020 205.19876099]
[533.29803467 204.25505066]
[528.23883057 199.95617676]
[513.66345215 196.41252136]
[504.89868164 206.89794922]
[492.40975952 212.60816956]
[478.61312866 212.37559509]
[466.20529175 206.18861389]
[457.63601685 195.20497131]
[454.62454224 181.53555298]
[440.10940552 177.75265503]
[425.59423828 173.96975708]
[411.07910156 170.18685913]
[396.56393433 166.40396118]
[378.36212158 172.90014648]
[364.20513916 158.56509399]
[349.57342529 155.26165771]
[334.94168091 151.95822144]
[320.30996704 148.65476990]
[305.67825317 145.35133362]
[291.04653931 142.04788208]
[276.41479492 138.74444580]
[268.28311157 144.96652222]
[257.84945679 145.69168091]
[248.55236816 140.43833923]
[243.58958435 130.73542786]
[229.07443237 126.95252991]
[214.55928040 123.16963196]
[200.04412842 119.38673401]
[185.52897644 115.60383606]
[171.26179504 119.88130951]
[159.85897827 108.91379547]
[145.34382629 105.13089752]
[130.82865906 101.34799957]
[124.90416718 116.25752258]
[112.65121460 125.67622375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 86]
[3 85]
[4 84]
[5 83]
[11 80]
[12 79]
[13 78]
[14 77]
[15 76]
[21 75]
[22 74]
[23 73]
[24 72]
[25 71]
[28 69]
[29 68]
[30 67]
[31 66]
[33 64]
[34 63]
[35 62]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[89 113]
[90 112]
[91 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[114 188]
[115 187]
[116 186]
[118 184]
[119 183]
[120 182]
[121 181]
[122 180]
[124 176]
[125 175]
[126 174]
[127 173]
[128 172]
[129 171]
[130 170]
[134 168]
[135 167]
[136 166]
[137 165]
[138 164]
[143 158]
[144 157]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
