%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:06:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCGACAGGAUGCCCUGCGCGGGGCGGCGGAGCGGGUGCGUGCGGCGGCGGUUGCGAGAGAGAUGAGCCGCGGCGAUGAGCCCGGAAAAGCAGCACCGGGAAGAGGAUGAAGUUGACUCCGUUCUCCUUUCAGCGUCCAAGAUCCUAAAUUCUUCGGAGGGGGUGAAGGAAAGUG\
) } def
/len { sequence length } bind def

/coor [
[123.06085205 161.89202881]
[121.95154572 146.93309021]
[114.75194550 149.03446960]
[108.55376434 162.69400024]
[102.35558319 176.35351562]
[101.65356445 185.49302673]
[95.92426300 190.19895935]
[89.48462677 203.74632263]
[83.04499054 217.29368591]
[76.60534668 230.84104919]
[78.45242310 247.13583374]
[65.10522461 256.66390991]
[50.29420853 249.62361145]
[49.25568008 233.25738525]
[63.05798721 224.40141296]
[69.49762726 210.85404968]
[75.93726349 197.30668640]
[82.37689972 183.75932312]
[88.69606018 170.15533447]
[94.89424133 156.49581909]
[101.09242249 142.83628845]
[70.22665405 121.80324554]
[70.73590851 89.90661621]
[58.16310501 81.72586823]
[45.51819611 73.65702057]
[32.80218124 65.70070648]
[16.99927330 64.93998718]
[10.31395245 51.62999725]
[-2.40206385 43.67368317]
[-16.90971184 51.57498550]
[-33.32863617 51.09385681]
[-47.18952179 42.45579910]
[-54.76699829 28.09378815]
[-54.08072281 11.96377277]
[-66.93594360 4.23439837]
[-79.79116821 -3.49497581]
[-92.64639282 -11.22434998]
[-105.50161743 -18.95372391]
[-121.31553650 -19.43385506]
[-128.23603821 -32.62309265]
[-141.09126282 -40.35246658]
[-153.94648743 -48.08184433]
[-166.86979675 -55.69683075]
[-179.86016846 -63.19683075]
[-195.68013000 -63.39621735]
[-202.83361816 -76.46054840]
[-215.82398987 -83.96054840]
[-228.81437683 -91.46054840]
[-241.80476379 -98.96054840]
[-254.79513550 -106.46054840]
[-273.18957520 -106.02017212]
[-281.38961792 -121.52048492]
[-294.51107788 -128.78874207]
[-307.63253784 -136.05700684]
[-321.63635254 -129.37326050]
[-336.88812256 -132.23034668]
[-347.52322388 -143.52964783]
[-349.45227051 -158.92634583]
[-341.93344116 -172.50010681]
[-327.85794067 -179.03153992]
[-312.63806152 -176.00918579]
[-302.12612915 -164.59518433]
[-300.36425781 -149.17845154]
[-287.24282837 -141.91018677]
[-274.12136841 -134.64192200]
[-262.39147949 -137.67671204]
[-251.39161682 -131.70283508]
[-247.29513550 -119.45093536]
[-234.30476379 -111.95093536]
[-221.31437683 -104.45093536]
[-208.32398987 -96.95093536]
[-195.33361816 -89.45093536]
[-180.44282532 -89.78799438]
[-172.36016846 -76.18721008]
[-159.36979675 -68.68721008]
[-151.98181152 -68.06387329]
[-146.21710205 -60.93706512]
[-133.36187744 -53.20769119]
[-120.50666046 -45.47831726]
[-105.61222839 -45.55104446]
[-97.77224731 -31.80894852]
[-84.91702271 -24.07957458]
[-72.06179810 -16.35019875]
[-59.20657349 -8.62082481]
[-46.35134888 -0.89145082]
[-34.85114670 -8.28861046]
[-21.21948051 -10.01079369]
[-8.11519051 -5.66451788]
[1.88089299 3.95441890]
[6.77419996 17.00597191]
[5.55424976 30.95766830]
[18.27026558 38.91398239]
[33.16363907 39.10561752]
[40.75849533 52.98469162]
[53.47451019 60.94100571]
[60.83570862 61.82615662]
[66.34384918 69.15306854]
[78.91665649 77.33381653]
[88.41172028 69.16757202]
[101.05472565 65.09530640]
[115.04521179 66.30319214]
[128.15484619 73.17871857]
[138.08110046 85.16730499]
[142.84304810 100.78397369]
[155.11758423 92.16216278]
[167.39213562 83.54035187]
[179.66667175 74.91854095]
[191.94122314 66.29673004]
[204.21575928 57.67491913]
[216.49029541 49.05310822]
[223.33570862 34.78948975]
[238.19778442 33.80546570]
[250.47232056 25.18365479]
[256.88641357 10.09089661]
[273.19482422 8.36813831]
[282.62084961 21.78760719]
[275.46780396 36.54450226]
[259.09414673 37.45819855]
[246.81959534 46.08000946]
[240.85212708 59.72694016]
[225.11210632 61.32764816]
[212.83757019 69.94946289]
[200.56303406 78.57127380]
[188.28848267 87.19308472]
[176.01394653 95.81489563]
[163.73939514 104.43670654]
[151.46485901 113.05851746]
[151.73107910 128.05615234]
[164.30389404 136.23689270]
[176.87669373 144.41764832]
[189.44949341 152.59838867]
[202.02229309 160.77914429]
[214.59509277 168.95988464]
[231.29783630 161.97138977]
[248.70547485 166.34622192]
[259.92190552 180.15747070]
[260.62002563 197.77890015]
[273.47525024 205.50828552]
[286.33047485 213.23765564]
[299.25378418 220.85264587]
[312.24417114 228.35264587]
[325.23455811 235.85264587]
[338.22491455 243.35264587]
[352.34518433 236.91848755]
[367.54385376 240.04580688]
[377.97674561 251.53208923]
[379.63217163 266.96060181]
[371.87365723 280.39877319]
[357.68444824 286.67938232]
[342.52059937 283.38735962]
[332.21292114 271.78857422]
[330.72491455 256.34301758]
[317.73455811 248.84301758]
[304.74417114 241.34301758]
[291.75378418 233.84301758]
[284.36581421 233.21968079]
[278.60110474 226.09288025]
[265.74588013 218.36351013]
[252.89065552 210.63412476]
[242.50843811 216.99320984]
[230.33445740 218.33035278]
[218.68275452 214.32942200]
[209.79449463 205.69487000]
[205.40702820 194.02853394]
[206.41435242 181.53268433]
[193.84155273 173.35194397]
[181.26875305 165.17120361]
[168.69593811 156.99044800]
[156.12313843 148.80970764]
[143.55033875 140.62895203]
[136.35073853 142.73033142]
[143.46235657 155.93734741]
[154.39776611 166.20460510]
[154.02891541 181.20007324]
[142.60194397 190.91726685]
[127.74204254 188.87193298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[7 18]
[8 17]
[9 16]
[10 15]
[23 98]
[24 97]
[25 95]
[26 94]
[28 92]
[29 91]
[34 85]
[35 84]
[36 83]
[37 82]
[38 81]
[40 79]
[41 78]
[42 77]
[43 75]
[44 74]
[46 72]
[47 71]
[48 70]
[49 69]
[50 68]
[52 65]
[53 64]
[54 63]
[104 127]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
[112 119]
[113 118]
[128 170]
[129 169]
[130 168]
[131 167]
[132 166]
[133 165]
[137 159]
[138 158]
[139 157]
[140 155]
[141 154]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
