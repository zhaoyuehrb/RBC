%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCCCGCCCGCCUCGAAUGUCCCUGAGACCCAGAAGGGCCUGCGCUCAGCUGCUCUGGCACCCCGCUGCAGGGAUGGCCUCCUGGGCUAAGGGCAGGAGCUACCUGGCGCCUGGUUUGCUGCAGGGCCAAGUGGCCAUCGUCACCGGCGGGGCCACGGGCAUCGGAAAAGCCA\
) } def
/len { sequence length } bind def

/coor [
[97.48489380 276.89913940]
[95.61552429 262.01608276]
[93.74614716 247.13302612]
[91.87677765 232.24996948]
[80.68112946 225.83351135]
[75.15193176 213.95889282]
[77.51634216 200.87725830]
[87.12999725 191.41606140]
[85.52656555 176.50199890]
[83.92314148 161.58795166]
[82.31971741 146.67388916]
[73.76487732 134.35258484]
[60.35149765 127.63832855]
[51.24428177 126.58825684]
[46.76022720 120.68264008]
[33.46883011 113.73004150]
[23.25472832 117.58602142]
[12.82311630 115.21478271]
[5.58381081 107.64011383]
[3.76538205 97.54481506]
[-9.26939392 90.12223816]
[-18.30734825 88.58621979]
[-22.46887970 82.44905853]
[-35.36909485 74.79501343]
[-48.26930618 67.14096069]
[-61.16952133 59.48690796]
[-76.98597717 59.09928513]
[-83.98349762 45.95074844]
[-96.88371277 38.29669952]
[-105.89281464 36.59960938]
[-109.94413757 30.38914871]
[-122.70568085 22.50606155]
[-135.46722412 14.62297440]
[-148.22875977 6.73988724]
[-160.99031067 -1.14320004]
[-173.72082520 1.05739331]
[-184.19529724 -5.79730415]
[-187.08248901 -17.56511497]
[-199.70129395 -25.67472839]
[-212.32009888 -33.78433990]
[-224.93890381 -41.89395142]
[-237.55770874 -50.00356293]
[-251.19947815 -43.08625793]
[-266.37185669 -43.92044449]
[-279.00558472 -52.18210602]
[-285.76254272 -65.56864929]
[-284.91741943 -80.43981171]
[-297.53622437 -88.54942322]
[-310.22689819 -96.54608917]
[-322.98843384 -104.42917633]
[-335.75000000 -112.31226349]
[-348.51153564 -120.19535065]
[-361.54629517 -127.61792755]
[-374.83770752 -134.57052612]
[-388.12908936 -141.52313232]
[-404.48257446 -140.30006409]
[-413.49368286 -154.00160217]
[-405.89254761 -168.53277588]
[-389.49859619 -168.94515991]
[-381.17648315 -154.81452942]
[-367.88510132 -147.86192322]
[-354.59368896 -140.90933228]
[-351.85632324 -141.64294434]
[-348.65905762 -141.31854248]
[-345.41009521 -139.75376892]
[-342.57647705 -136.91969299]
[-340.62844849 -132.95689392]
[-327.86691284 -125.07380676]
[-315.10534668 -117.19071960]
[-302.34381104 -109.30763245]
[-294.97683716 -108.46473694]
[-289.42660522 -101.16822052]
[-276.80780029 -93.05860901]
[-263.63159180 -100.00506592]
[-248.64784241 -99.41970062]
[-235.88452148 -91.35966492]
[-228.82289124 -77.90492249]
[-229.44808960 -62.62236786]
[-216.82928467 -54.51275635]
[-204.21047974 -46.40314484]
[-191.59167480 -38.29352951]
[-178.97288513 -30.18391800]
[-161.43811035 -30.30983543]
[-153.10722351 -13.90474129]
[-140.34567261 -6.02165413]
[-127.58413696 1.86143315]
[-114.82259369 9.74452019]
[-102.06105042 17.62760735]
[-89.22966766 25.39648628]
[-76.32945251 33.05053711]
[-61.43570328 32.89069366]
[-53.51547241 46.58669662]
[-40.61525726 54.24074554]
[-27.71504402 61.89479828]
[-14.81482983 69.54885101]
[-1.84681857 77.08746338]
[11.18795681 84.51003265]
[30.44209671 82.94802856]
[40.42143250 100.43863678]
[53.71283340 107.39124298]
[67.06575012 114.22494507]
[80.47913361 120.93920898]
[73.15222931 105.15843201]
[76.43955994 88.88537598]
[88.14169312 78.26186371]
[103.07160950 76.72796631]
[115.31372833 83.94734955]
[128.72711182 77.23308563]
[142.14048767 70.51882935]
[155.55386353 63.80457306]
[161.85223389 57.14315033]
[169.26712036 57.09258652]
[182.79820251 50.61881256]
[196.32928467 44.14504242]
[209.86038208 37.67126846]
[212.53742981 22.38686562]
[223.71055603 11.61927509]
[239.08345032 9.50885677]
[252.74491882 16.86710930]
[259.44186401 30.86463356]
[256.59915161 46.11909485]
[245.30987549 56.76484680]
[229.91499329 58.70837402]
[216.33415222 51.20235443]
[202.80307007 57.67612457]
[189.27197266 64.14990234]
[175.74089050 70.62367249]
[162.26812744 77.21794891]
[148.85475159 83.93220520]
[135.44136047 90.64646912]
[122.02798462 97.36072540]
[123.23083496 110.28643799]
[116.58354187 123.33453369]
[129.87493896 130.28713989]
[143.16633606 137.23974609]
[156.45774841 144.19235229]
[169.74914551 151.14495850]
[183.04054260 158.09756470]
[192.12756348 159.31001282]
[196.50549316 165.29472351]
[209.67066956 172.48345947]
[222.83586121 179.67219543]
[236.00105286 186.86093140]
[249.16622925 194.04966736]
[265.96560669 196.33380127]
[268.42126465 213.10896301]
[252.98146057 220.11248779]
[241.97749329 207.21484375]
[228.81231689 200.02610779]
[215.64712524 192.83737183]
[202.48193359 185.64863586]
[189.31675720 178.45991516]
[176.08793640 171.38896179]
[162.79653931 164.43635559]
[149.50514221 157.48374939]
[136.21374512 150.53114319]
[122.92234039 143.57853699]
[109.63094330 136.62593079]
[97.23377228 145.07046509]
[98.83719635 159.98452759]
[100.44062042 174.89857483]
[102.04405212 189.81263733]
[115.85720825 200.52127075]
[117.63307190 217.56961060]
[106.75983429 230.38059998]
[108.62921143 245.26365662]
[110.49858093 260.14672852]
[112.36795807 275.02978516]
[126.02478027 282.39663696]
[132.71287537 296.39840698]
[129.86054993 311.65106201]
[118.56455994 322.28967285]
[103.16845703 324.22351074]
[89.59235382 316.70889282]
[83.05654144 302.63543701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[8 162]
[9 161]
[10 160]
[11 159]
[12 102]
[13 101]
[15 100]
[16 99]
[20 97]
[21 96]
[23 95]
[24 94]
[25 93]
[26 92]
[28 90]
[29 89]
[31 88]
[32 87]
[33 86]
[34 85]
[35 84]
[38 82]
[39 81]
[40 80]
[41 79]
[42 78]
[47 73]
[48 72]
[49 70]
[50 69]
[51 68]
[52 67]
[53 62]
[54 61]
[55 60]
[107 131]
[108 130]
[109 129]
[110 128]
[112 127]
[113 126]
[114 125]
[115 124]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[138 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
