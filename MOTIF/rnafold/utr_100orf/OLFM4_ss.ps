%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCCUACAUGCUGGCCAUGGGGAAAUCACCACUGGGCACUAUAAGAAGCCCCUGGGCUCUCUGCAGAGCCAGCGGCUCCAGCUAAGAGGACAAGAUGAGGCCCGGCCUCUCAUUUCUCCUAGCCCUUCUGUUCUUCCUUGGCCAAGCUGCAGGGGAUUUGGGGGAUGUGGGACCUCCAAUUCCCAGCCCCGGCU\
) } def
/len { sequence length } bind def

/coor [
[306.03170776 440.95989990]
[312.81271362 429.95413208]
[304.46673584 417.49038696]
[296.12075806 405.02667236]
[287.77478027 392.56292725]
[279.42880249 380.09921265]
[271.08282471 367.63546753]
[257.57235718 361.36520386]
[256.32299805 345.59341431]
[247.97700500 333.12966919]
[241.63578796 329.31661987]
[239.59916687 320.39996338]
[231.45300293 307.80474854]
[223.30683899 295.20950317]
[215.06050110 282.67962646]
[206.71452332 270.21588135]
[198.36854553 257.75216675]
[190.02256775 245.28842163]
[181.67658997 232.82469177]
[168.16610718 226.55442810]
[166.91674805 210.78262329]
[158.57077026 198.31889343]
[150.22479248 185.85516357]
[141.77969360 173.45837402]
[133.23602295 161.12931824]
[124.69235229 148.80026245]
[106.25067139 155.18209839]
[86.44319916 154.72409058]
[67.76229858 147.27627563]
[52.63068771 133.58105469]
[43.08761597 115.20415497]
[28.29740906 117.70410919]
[13.50720215 120.20407104]
[5.40605259 130.25042725]
[-6.97243452 132.02294922]
[-16.90846443 125.11084747]
[-31.73665619 127.37464142]
[-46.56484604 129.63842773]
[-61.39303970 131.90222168]
[-66.90229797 146.23901367]
[-78.85193634 155.88792419]
[-94.02757263 158.25346375]
[-108.34702301 152.69929504]
[-117.95844269 140.71946716]
[-120.27639008 125.53649139]
[-114.67736816 111.23451996]
[-102.66747284 101.66069794]
[-87.47730255 99.39035034]
[-73.19295502 105.03417969]
[-63.65682602 117.07402802]
[-48.82863617 114.81023407]
[-34.00044250 112.54644775]
[-19.17225266 110.28266144]
[-6.09089899 98.59194946]
[11.00724316 105.41386414]
[25.79744911 102.91390228]
[40.58765793 100.41394806]
[42.37743759 85.52110291]
[28.60069084 79.58804321]
[13.22294903 84.16020203]
[0.14333583 74.87024689]
[-0.60458970 58.84463882]
[11.55291748 48.37685013]
[27.28965759 51.49687576]
[34.53375244 65.81129456]
[48.31050110 71.74435425]
[52.36605835 69.06063843]
[56.52113342 66.82220459]
[45.95690536 56.17340088]
[35.39267349 45.52459717]
[24.82844162 34.87579346]
[14.26421070 24.22699165]
[-1.18342555 17.24079895]
[1.25341225 0.46289203]
[18.05021667 -1.84008968]
[24.91301346 13.66275978]
[35.47724533 24.31156349]
[46.04147720 34.96036530]
[56.60570908 45.60916901]
[67.16993713 56.25797272]
[77.86818695 49.98639297]
[89.70429993 46.28616333]
[102.06974792 45.34751892]
[104.68755341 30.57771492]
[107.30536652 15.80791187]
[109.92317200 1.03810871]
[104.71302795 -13.90059757]
[114.55275726 -25.08223343]
[117.17057037 -39.85203552]
[119.78837585 -54.62183762]
[122.40618896 -69.39163971]
[125.02399445 -84.16144562]
[116.08509827 -94.24594879]
[114.61163330 -107.44523621]
[120.91915131 -118.91148376]
[132.50637817 -124.56290436]
[135.35939026 -139.28907776]
[133.91867065 -148.32116699]
[138.37709045 -154.22651672]
[141.46455383 -168.90531921]
[144.55203247 -183.58413696]
[147.63949585 -198.26295471]
[150.72697449 -212.94175720]
[148.07028198 -229.68626404]
[163.42497253 -236.87446594]
[174.58283997 -224.10974121]
[165.40577698 -209.85429382]
[162.31831360 -195.17547607]
[159.23083496 -180.49667358]
[156.14337158 -165.81785583]
[153.05589294 -151.13903809]
[150.08557129 -136.43608093]
[147.23255920 -121.70989990]
[157.23219299 -108.19431305]
[154.31077576 -91.29471588]
[139.79379272 -81.54363251]
[137.17599487 -66.77383423]
[134.55818176 -52.00402832]
[131.94036865 -37.23422623]
[129.32257080 -22.46442413]
[134.71995544 -8.58215237]
[124.69297791 3.65591788]
[122.07516479 18.42572021]
[119.45735931 33.19552231]
[116.83955383 47.96532822]
[129.67967224 54.06205750]
[140.51509094 63.26166534]
[148.61390686 74.94276428]
[153.42910767 88.31635284]
[154.63543701 102.47911072]
[152.15142822 116.47441864]
[146.14483643 129.35696411]
[137.02140808 140.25659180]
[145.56507874 152.58564758]
[154.10874939 164.91470337]
[161.57780457 170.19366455]
[162.68852234 177.50918579]
[171.03450012 189.97291565]
[179.38047791 202.43664551]
[193.48791504 209.59840393]
[194.14031982 224.47871399]
[202.48629761 236.94244385]
[210.83227539 249.40617371]
[219.17825317 261.86990356]
[227.52423096 274.33364868]
[234.90815735 279.73101807]
[235.90206909 287.06332397]
[244.04824829 299.65856934]
[252.19441223 312.25381470]
[260.44073486 324.78369141]
[268.78671265 337.24743652]
[282.89416504 344.40917969]
[283.54656982 359.28948975]
[291.89254761 371.75323486]
[300.23852539 384.21694946]
[308.58450317 396.68069458]
[316.93048096 409.14440918]
[325.27645874 421.60815430]
[342.76901245 420.02746582]
[358.57519531 427.47961426]
[368.38549805 441.83322144]
[369.57565308 459.08911133]
[361.90811157 474.49432373]
[370.64730835 486.68557739]
[379.38650513 498.87683105]
[388.12570190 511.06808472]
[398.95639038 512.21759033]
[407.19284058 519.00347900]
[410.26394653 528.99420166]
[407.38476562 538.81317139]
[415.73074341 551.27691650]
[424.07672119 563.74066162]
[432.42269897 576.20440674]
[440.76870728 588.66809082]
[456.27896118 589.12725830]
[468.53656006 598.64208984]
[472.82815552 613.55389404]
[467.50354004 628.12878418]
[454.61016846 636.76245117]
[439.10577393 636.13507080]
[426.95214844 626.48785400]
[422.82257080 611.53039551]
[428.30496216 597.01409912]
[419.95898438 584.55035400]
[411.61300659 572.08660889]
[403.26702881 559.62292480]
[394.92105103 547.15917969]
[376.99420166 539.93029785]
[375.93444824 519.80725098]
[367.19525146 507.61602783]
[358.45605469 495.42477417]
[349.71685791 483.23352051]
[337.33776855 485.82089233]
[324.85437012 483.52182007]
[314.13055420 476.64358521]
[306.78106689 466.17990112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 158]
[3 157]
[4 156]
[5 155]
[6 154]
[7 153]
[9 151]
[10 150]
[12 149]
[13 148]
[14 147]
[15 145]
[16 144]
[17 143]
[18 142]
[19 141]
[21 139]
[22 138]
[23 137]
[24 135]
[25 134]
[26 133]
[31 57]
[32 56]
[33 55]
[36 53]
[37 52]
[38 51]
[39 50]
[58 66]
[59 65]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[83 125]
[84 124]
[85 123]
[86 122]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[96 113]
[97 112]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[163 192]
[164 191]
[165 190]
[166 189]
[170 187]
[171 186]
[172 185]
[173 184]
[174 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
