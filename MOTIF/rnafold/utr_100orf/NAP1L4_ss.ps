%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCUCGCGGAGAGAGGAGCUAGGAGCCUCGGCCAAUGGGAGCCGGCGUUGUUGGAGGCCACGGCGGCGCAGCCCCAAAGCGAGCGAAGCUAGGGUCGCCGCCACUGCCGCAGGAGGCGUGAGGGGAUAAAAACAUUCAGAUGGCAGAUCACAGUUUUUCAGAUGGGGUUCCUUCAGAUUCCGUGGAAGCUGCUAAAAAUGCAAGUAACACAGAAAAGCUCACAGAUCAGGUGAUGCAGA\
) } def
/len { sequence length } bind def

/coor [
[92.65513611 440.67602539]
[98.70147705 424.83688354]
[98.70147705 409.83688354]
[98.70147705 394.83688354]
[98.70147705 379.83688354]
[98.60411835 364.83718872]
[98.40939331 349.83847046]
[98.21466827 334.83972168]
[98.01995087 319.84097290]
[88.25244141 305.25082397]
[97.41259003 289.26559448]
[97.02317810 274.27066040]
[83.37909698 268.24533081]
[73.66416931 256.84667969]
[69.84606934 242.30076599]
[72.73390198 227.47914124]
[81.80745697 215.33181763]
[95.30996704 208.30018616]
[94.92055511 193.30525208]
[94.53114319 178.31030273]
[94.14173126 163.31535339]
[93.75232697 148.32040405]
[85.70202637 146.57749939]
[78.06036377 143.50341797]
[71.04572296 139.18603516]
[64.85858154 133.74873352]
[59.67577362 127.34689331]
[46.11333466 133.75471497]
[32.55089569 140.16253662]
[18.98845482 146.57037354]
[5.42601490 152.97819519]
[2.43396449 168.08956909]
[-8.75168324 178.42082214]
[-23.69911003 180.16392517]
[-36.65171432 172.85859680]
[-50.21415710 179.26641846]
[-63.77659607 185.67424011]
[-77.33903503 192.08206177]
[-90.90147400 198.48988342]
[-93.65290833 213.76107788]
[-104.87831879 224.47415161]
[-120.26129913 226.50970459]
[-133.88677979 219.08503723]
[-140.51550293 205.05506897]
[-137.59855652 189.81463623]
[-126.25759888 179.22396851]
[-110.85343933 177.35540771]
[-97.30930328 184.92744446]
[-83.74686432 178.51962280]
[-70.18441772 172.11180115]
[-56.62197876 165.70397949]
[-43.05953979 159.29615784]
[-40.47771454 144.65127563]
[-29.63925171 134.21138000]
[-14.55529594 132.13105774]
[-0.98181003 139.41575623]
[12.58063030 133.00791931]
[26.14307022 126.60009766]
[39.70550919 120.19227600]
[53.26795197 113.78445435]
[51.52677155 104.92358398]
[51.45071793 95.89358521]
[53.04240036 87.00464630]
[56.24714279 78.56211090]
[43.95365906 69.96733093]
[31.66017723 61.37254715]
[19.36669540 52.77776337]
[7.07321262 44.18298340]
[-5.22027016 35.58819962]
[-17.51375198 26.99341583]
[-24.02324104 26.04725075]
[-28.42867088 22.49865150]
[-30.01087761 18.01250267]
[-42.07709122 9.10146904]
[-54.14330292 0.19043632]
[-66.20951843 -8.72059631]
[-76.82791138 -6.48719406]
[-86.72290039 -10.37515736]
[-92.72749329 -18.88144684]
[-93.06290436 -29.06874084]
[-104.89371490 -38.29001617]
[-116.72452545 -47.51129532]
[-131.97778320 -44.06569290]
[-145.85348511 -51.27672577]
[-151.79994202 -65.73956299]
[-147.00942993 -80.62528992]
[-133.74386597 -88.90533447]
[-118.26686096 -86.67009735]
[-107.88617706 -74.97499847]
[-107.50325012 -59.34210205]
[-95.67243958 -50.12082672]
[-83.84162903 -40.89955139]
[-64.53615570 -39.61561966]
[-57.29848480 -20.78680992]
[-45.23226929 -11.87577629]
[-33.16605759 -2.96474385]
[-21.09984398 5.94628906]
[-8.91897011 14.69993401]
[3.37451243 23.29471588]
[15.66799545 31.88949966]
[27.96147728 40.48428345]
[40.25495911 49.07906342]
[52.54844284 57.67384720]
[64.84192657 66.26863098]
[72.34563446 58.15383530]
[81.73610687 51.74662018]
[92.61576080 47.48669815]
[89.71328735 32.77018738]
[86.81080627 18.05368042]
[83.90833282 3.33717155]
[70.64387512 -5.25525904]
[67.42200470 -20.72765732]
[76.15419769 -33.90052414]
[91.65979767 -36.95862961]
[104.73960114 -28.08765602]
[107.63360596 -12.55059433]
[98.62483978 0.43469360]
[101.52731323 15.15120220]
[104.42979431 29.86771011]
[107.33226776 44.58422089]
[121.80422211 48.52916718]
[131.77346802 37.32139206]
[141.74270630 26.11361885]
[151.71195984 14.90584660]
[161.68119812 3.69807339]
[171.65043640 -7.50969982]
[181.61968994 -18.71747208]
[191.58892822 -29.92524529]
[201.55818176 -41.13301849]
[186.59997559 -40.01393127]
[174.35826111 -48.68228149]
[170.44644165 -63.16322327]
[176.65826416 -76.81654358]
[190.14532471 -83.38155365]
[204.72314453 -79.84786987]
[213.70710754 -67.83586121]
[212.97712708 -52.85235977]
[223.92230225 -63.10920334]
[234.86749268 -73.36605072]
[245.81268311 -83.62289429]
[246.48670959 -99.18513489]
[257.73278809 -109.43112183]
[272.56488037 -108.69263458]
[283.51004028 -118.94947815]
[294.45523071 -129.20632935]
[299.23425293 -144.28848267]
[313.81176758 -147.34552002]
[324.75695801 -157.60235596]
[335.70214844 -167.85920715]
[346.64733887 -178.11605835]
[350.88308716 -193.95872498]
[366.78915405 -197.94989014]
[378.00271606 -185.98377991]
[372.98822021 -170.37008667]
[356.90417480 -167.17086792]
[345.95898438 -156.91401672]
[335.01379395 -146.65718079]
[324.06860352 -136.40032959]
[320.07247925 -122.05180359]
[304.71209717 -118.26113892]
[293.76690674 -108.00428772]
[282.82171631 -97.74744415]
[282.59658813 -82.89871216]
[271.64273071 -72.34089661]
[256.06951904 -72.67770386]
[245.12434387 -62.42086029]
[234.17915344 -52.16401672]
[223.23396301 -41.90717316]
[212.76594543 -31.16377449]
[202.79670715 -19.95600128]
[192.82745361 -8.74822903]
[182.85821533 2.45954418]
[172.88897705 13.66731739]
[162.91972351 24.87508965]
[152.95048523 36.08286285]
[142.98124695 47.29063797]
[133.01199341 58.49840927]
[145.08021545 74.90551758]
[149.81521606 94.14254761]
[146.90705872 113.17664337]
[160.55152893 119.40786743]
[174.19601440 125.63909149]
[189.96328735 124.33379364]
[198.32623291 136.65899658]
[211.97070312 142.89021301]
[225.61518860 149.12144470]
[237.59704590 142.99662781]
[250.72796631 144.85710144]
[260.25317383 153.80320740]
[262.85382080 166.41091919]
[276.41625977 172.81875610]
[289.97869873 179.22657776]
[303.58245850 185.54623413]
[317.22692871 191.77745056]
[331.26782227 184.89358521]
[346.43612671 188.69570923]
[355.56988525 201.38856506]
[354.35635376 216.97898865]
[343.36859131 228.10566711]
[327.79461670 229.51489258]
[314.98803711 220.54130554]
[310.99569702 205.42193604]
[297.35122681 199.19070435]
[289.97668457 199.27087402]
[283.57089233 192.78901672]
[270.00842285 186.38119507]
[256.44598389 179.97335815]
[240.85939026 186.31462097]
[225.20494080 179.27299500]
[219.38395691 162.76591492]
[205.73948669 156.53469849]
[192.09500122 150.30346680]
[177.30368042 152.05445862]
[167.96478271 139.28356934]
[154.32031250 133.05235291]
[140.67582703 126.82112122]
[126.87131500 140.64268494]
[108.74726868 147.93099976]
[109.13668060 162.92594910]
[109.52608490 177.92088318]
[109.91549683 192.91583252]
[110.30490875 207.91078186]
[124.15418243 214.23210144]
[133.84599304 225.89210510]
[137.49923706 240.54385376]
[134.44126892 255.26832581]
[125.33107758 267.15588379]
[112.01811981 273.88125610]
[112.40753174 288.87619019]
[121.19988251 298.29458618]
[121.22687531 310.77856445]
[113.01868439 319.64627075]
[113.21340942 334.64498901]
[113.40812683 349.64373779]
[113.60285187 364.64248657]
[116.83788300 373.16207886]
[113.70147705 379.83688354]
[113.70147705 394.83688354]
[113.70147705 409.83688354]
[113.70147705 424.83688354]
[119.74781799 440.67602539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 240]
[3 239]
[4 238]
[5 237]
[6 235]
[7 234]
[8 233]
[9 232]
[11 229]
[12 228]
[18 222]
[19 221]
[20 220]
[21 219]
[22 218]
[27 60]
[28 59]
[29 58]
[30 57]
[31 56]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[64 104]
[65 103]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
[73 97]
[74 96]
[75 95]
[76 94]
[80 92]
[81 91]
[82 90]
[107 120]
[108 119]
[109 118]
[110 117]
[121 177]
[122 176]
[123 175]
[124 174]
[125 173]
[126 172]
[127 171]
[128 170]
[129 169]
[137 168]
[138 167]
[139 166]
[140 165]
[143 162]
[144 161]
[145 160]
[147 158]
[148 157]
[149 156]
[150 155]
[180 216]
[181 215]
[182 214]
[184 212]
[185 211]
[186 210]
[190 207]
[191 206]
[192 205]
[193 203]
[194 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
