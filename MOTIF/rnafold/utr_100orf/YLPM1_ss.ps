%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUACACGCUCCGGGGCCUGUAGGCGCCGCGAGUUCCGGCUGUCGCCGUCGCCGCCGCGGCUCCUGGAGGUCGGUUGCGACGAGUAACGGCGCCAGGACGAGCCCUGCGCCUUCUUUUUCGAUAUGUACCCGAAUUGGGGCCGGUAUGGCGGGAGCAGCCACUAUCCGCCGCCACCGGUCCCACCGCCGCCGCCAGUGGCGCUUCCUGAGGCCUCGCCGGGGC\
) } def
/len { sequence length } bind def

/coor [
[94.36785126 618.73547363]
[90.53913879 633.68017578]
[79.22295380 644.16577148]
[64.03025055 646.84631348]
[49.80896378 640.86645508]
[41.09705734 628.13433838]
[40.67446899 612.71276855]
[48.67604065 599.52270508]
[62.54850388 592.77301025]
[64.22053528 577.86645508]
[65.89257050 562.95996094]
[67.56460571 548.05340576]
[69.23664093 533.14691162]
[70.90867615 518.24041748]
[72.58071136 503.33389282]
[73.94020081 488.39559937]
[74.98654175 473.43215942]
[76.03289032 458.46868896]
[77.07923889 443.50521851]
[78.12558746 428.54177856]
[65.30564880 415.46386719]
[66.14079285 396.84942627]
[80.56693268 384.55722046]
[81.19506836 369.57037354]
[81.82320404 354.58352661]
[82.45133972 339.59667969]
[83.07947540 324.60983276]
[83.70761108 309.62301636]
[84.33574677 294.63616943]
[84.96387482 279.64932251]
[85.59201050 264.66247559]
[75.35256958 253.90657043]
[75.77609253 238.69883728]
[87.12729645 228.03169250]
[87.75543213 213.04486084]
[77.51599121 202.28895569]
[77.93951416 187.08122253]
[89.29071808 176.41407776]
[89.91885376 161.42723083]
[90.54698944 146.44038391]
[91.17511749 131.45355225]
[62.68197250 117.85959625]
[53.96683502 80.29104614]
[39.51939774 76.25725555]
[24.14687347 79.99839020]
[13.96915531 69.12349701]
[-0.47828329 65.08969879]
[-14.95353031 61.15686035]
[-29.45588112 57.32517624]
[-43.95823288 53.49348831]
[-58.46058273 49.66180420]
[-72.96293640 45.83011627]
[-87.46528625 41.99842834]
[-102.78407288 45.95383835]
[-113.11264038 35.22210693]
[-127.61499023 31.39042091]
[-142.11734009 27.55873489]
[-156.61968994 23.72704697]
[-167.39776611 31.79452896]
[-180.66062927 32.17913055]
[-191.56355286 24.96436119]
[-196.25268555 12.96893692]
[-210.70011902 8.93513966]
[-225.14755249 4.90134239]
[-242.02919006 6.46549416]
[-248.20552063 -9.32340527]
[-234.74343872 -19.62915993]
[-221.11375427 -9.54609585]
[-206.66632080 -5.51229858]
[-192.21888733 -1.47850132]
[-177.92765808 -10.35278034]
[-161.31404114 -6.05584717]
[-152.78800964 9.22469711]
[-138.28565979 13.05638313]
[-123.78330231 16.88806915]
[-109.28095245 20.71975708]
[-94.99946594 16.49028015]
[-83.63359833 27.49607849]
[-69.13124847 31.32776642]
[-54.62889862 35.15945053]
[-40.12654495 38.99113846]
[-25.62419510 42.82282639]
[-11.12184429 46.65451050]
[-3.85940838 45.32552719]
[3.55551410 50.64226151]
[18.00295258 54.67605972]
[32.34209824 50.64639664]
[43.55319214 61.80981445]
[58.00063324 65.84361267]
[68.34492493 54.98103333]
[63.61019135 40.74789429]
[58.87545395 26.51475334]
[54.14072037 12.28161240]
[49.40598297 -1.95152736]
[43.73337936 -9.09787560]
[44.70600891 -16.41656303]
[40.17045975 -30.71442223]
[35.63491058 -45.01228333]
[21.49004364 -52.06198120]
[16.55229950 -67.07511902]
[23.75115395 -81.14466095]
[38.81565475 -85.92340088]
[52.80830002 -78.57619476]
[57.42750168 -63.46201706]
[49.93277359 -49.54783249]
[54.46831894 -35.24996948]
[59.00386810 -20.95211029]
[63.63912201 -6.68626308]
[68.37385559 7.54687738]
[73.10859680 21.78001785]
[77.84333038 36.01315689]
[82.57806396 50.24629974]
[90.07148743 50.56036377]
[90.69962311 35.57352448]
[91.32800293 20.58669090]
[106.31482697 21.21532249]
[105.68646240 36.20165634]
[105.05832672 51.18849945]
[112.55175018 51.50256729]
[118.46087646 37.71553802]
[124.37001038 23.92850685]
[130.27912903 10.14147758]
[121.55105591 -2.57953334]
[121.10886383 -18.00055885]
[129.09365845 -31.20080566]
[142.95753479 -37.96812057]
[158.27656555 -36.14308548]
[170.16250610 -26.30805206]
[174.82261658 -11.60135269]
[170.76983643 3.28416348]
[159.29742432 13.59858036]
[144.06616211 16.05060577]
[138.15704346 29.83763504]
[132.24790955 43.62466431]
[126.33878326 57.41169739]
[130.56616211 72.11972046]
[129.24279785 85.43762970]
[143.84648132 82.01236725]
[158.45016479 78.58709717]
[173.05384827 75.16183472]
[187.65753174 71.73657227]
[202.26121521 68.31130981]
[216.86489868 64.88604736]
[231.46858215 61.46078491]
[246.07226562 58.03552246]
[260.67596436 54.61026001]
[273.80953979 41.69659805]
[290.39916992 47.43262863]
[304.95358276 43.80379868]
[319.50802612 40.17497253]
[334.06246948 36.54614258]
[348.61691284 32.91731262]
[363.17132568 29.28848648]
[377.72576904 25.65965652]
[392.25451660 21.92930794]
[406.75686646 18.09762192]
[414.48913574 4.31401825]
[429.72555542 0.11555641]
[443.42663574 7.99311018]
[447.46377563 23.27306557]
[439.44180298 36.89009857]
[424.12002563 40.76546097]
[410.58856201 32.59997177]
[396.08621216 36.43165970]
[390.42800903 41.17442703]
[381.35461426 40.21409225]
[366.80017090 43.84292221]
[352.24572754 47.47174835]
[337.69128418 51.10057831]
[323.13684082 54.72940826]
[308.58242798 58.35823441]
[294.02798462 61.98706436]
[287.53601074 72.18645477]
[275.44796753 75.33302307]
[264.10122681 69.21394348]
[249.49752808 72.63920593]
[234.89384460 76.06446838]
[220.29016113 79.48973083]
[205.68647766 82.91499329]
[191.08279419 86.34025574]
[176.47911072 89.76551819]
[161.87542725 93.19078064]
[147.27174377 96.61605072]
[132.66806030 100.04131317]
[129.25506592 114.53771210]
[119.76206207 126.01278687]
[106.16196442 132.08168030]
[105.53382874 147.06852722]
[104.90569305 162.05537415]
[104.27755737 177.04220581]
[114.69635010 188.62178040]
[113.84584045 203.81163025]
[102.74227142 213.67298889]
[102.11414337 228.65983582]
[112.53292847 240.23941040]
[111.68241882 255.42924500]
[100.57885742 265.29061890]
[99.95072174 280.27746582]
[99.32258606 295.26428223]
[98.69445038 310.25112915]
[98.06631470 325.23797607]
[97.43817902 340.22482300]
[96.81004333 355.21166992]
[96.18191528 370.19851685]
[95.55377960 385.18536377]
[105.14122009 392.19467163]
[110.10814667 402.85058594]
[109.32727814 414.46118164]
[103.10758209 424.15435791]
[93.08905029 429.58810425]
[92.04270172 444.55157471]
[90.99635315 459.51504517]
[89.95000458 474.47848511]
[88.90365601 489.44195557]
[91.18372345 494.11514282]
[91.42588043 498.73483276]
[89.99009705 502.53591919]
[87.48722839 505.00592041]
[85.81519318 519.91241455]
[84.14315796 534.81896973]
[82.47112274 549.72546387]
[80.79909515 564.63201904]
[79.12705994 579.53851318]
[77.45502472 594.44500732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 224]
[10 223]
[11 222]
[12 221]
[13 220]
[14 219]
[15 218]
[16 214]
[17 213]
[18 212]
[19 211]
[20 210]
[23 205]
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[29 199]
[30 198]
[31 197]
[34 194]
[35 193]
[38 190]
[39 189]
[40 188]
[41 187]
[43 89]
[44 88]
[46 86]
[47 85]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[55 76]
[56 75]
[57 74]
[58 73]
[62 70]
[63 69]
[64 68]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[96 107]
[97 106]
[98 105]
[119 135]
[120 134]
[121 133]
[122 132]
[137 184]
[138 183]
[139 182]
[140 181]
[141 180]
[142 179]
[143 178]
[144 177]
[145 176]
[146 175]
[148 172]
[149 171]
[150 170]
[151 169]
[152 168]
[153 167]
[154 166]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
