%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGCCUCAGCAGCUGCGGGAGACGGAAGUGGCAAGAGCGCGGCCUCAGAGGGUCGGGCGGACGCCGCCUGGUGAGAAGCAGGCAGCCAGUACCCUUGCCACGGUAGAAUGGGUGAGGAGGGGCCCCCCAGCCUGGAGUACAUCCAAGCCAAGGAUCUGUUCCCCCCCAAGGAACUAGUGAAGGAGGAAGAGAAUCUUCAGGUCCCCU\
) } def
/len { sequence length } bind def

/coor [
[80.28211975 207.60993958]
[78.22052765 210.02166748]
[75.76851654 211.38026428]
[70.94252014 225.58271790]
[66.11652374 239.78518677]
[61.29052353 253.98764038]
[56.46452713 268.19009399]
[64.72690582 281.46664429]
[62.47108078 296.94067383]
[50.76218033 307.30578613]
[35.12878799 307.66790771]
[22.95251846 297.85604858]
[19.98262978 282.50308228]
[27.62141418 268.85818481]
[42.26206970 263.36410522]
[47.08806992 249.16163635]
[51.91406631 234.95918274]
[56.74006271 220.75672913]
[61.56606293 206.55427551]
[65.96705627 192.21441650]
[69.93915558 177.74989319]
[73.91125488 163.28536987]
[72.65120697 156.00292969]
[78.05165863 148.63591003]
[82.23867035 134.23213196]
[86.42568207 119.82834625]
[77.47969818 111.11648560]
[73.83797455 98.60097504]
[76.96157074 85.38280487]
[86.56220245 75.01532745]
[100.54472351 70.55102539]
[86.96851349 64.17242432]
[73.39230347 57.79381943]
[59.81610107 51.41521454]
[46.23989105 45.03660965]
[32.66368484 38.65800476]
[19.08747864 32.27939987]
[5.51127148 25.90079308]
[-0.56996614 36.98386765]
[-15.21046734 43.39084625]
[-30.17681122 44.39510727]
[-43.42800140 53.03897858]
[-56.64473724 46.17113876]
[-71.61107635 47.17539597]
[-86.57742310 48.17965698]
[-101.54376984 49.18391800]
[-116.51011658 50.18817902]
[-131.47645569 51.19243622]
[-144.78897095 60.76890945]
[-159.62545776 53.78241730]
[-160.72338867 37.42006302]
[-146.95332336 28.51403809]
[-132.48071289 36.22609329]
[-117.51437378 35.22183228]
[-102.54802704 34.21757126]
[-87.58168793 33.21331406]
[-72.61534119 32.20905304]
[-57.64899445 31.20479202]
[-45.46829605 22.63275337]
[-31.18107224 29.42876244]
[-16.21472740 28.42450142]
[-10.96800900 14.37203121]
[-21.61401749 3.80498338]
[-32.33839798 -6.68251753]
[-43.14055252 -17.08989143]
[-54.09646225 -27.33528328]
[-65.20369720 -37.41641998]
[-80.62253571 -40.96185303]
[-84.84680176 -55.24487686]
[-95.95403290 -65.32601929]
[-107.06126404 -75.40715790]
[-118.16850281 -85.48829651]
[-129.27572632 -95.56943512]
[-144.43836975 -92.27182770]
[-158.62989807 -98.54718018]
[-166.39338684 -111.98249817]
[-164.74362183 -127.41162872]
[-154.31497192 -138.90174866]
[-139.11746216 -142.03466797]
[-124.99484253 -135.60572815]
[-117.37755585 -122.08699036]
[-119.19459534 -106.67666626]
[-108.08736420 -96.59552765]
[-96.98012543 -86.51438904]
[-85.87289429 -76.43325043]
[-74.76566315 -66.35211182]
[-60.14128876 -63.52775192]
[-55.12255859 -48.52365494]
[-44.01532364 -38.44251633]
[-39.28636932 -37.77466202]
[-34.92675018 -34.12901688]
[-32.73318100 -27.89204788]
[-21.93102455 -17.48467445]
[-14.93307972 -15.10758209]
[-11.04697037 -6.84102535]
[-0.40096125 3.72602224]
[11.88987637 12.32458591]
[25.46608353 18.70319176]
[39.04228973 25.08179665]
[52.61849976 31.46040154]
[66.19470215 37.83900452]
[79.77091217 44.21761322]
[93.34712219 50.59621811]
[106.92332458 56.97482300]
[121.55078888 53.65256119]
[131.03968811 42.03529739]
[140.52857971 30.41803551]
[138.34231567 21.24593735]
[140.58815002 12.22995090]
[146.63964844 5.36163330]
[155.04457092 2.09789896]
[163.87185669 3.05292821]
[173.87002563 -8.12904644]
[183.86819458 -19.31102180]
[193.86636353 -30.49299622]
[203.86453247 -41.67496872]
[213.86271667 -52.85694504]
[223.35160828 -64.47420502]
[232.31230164 -76.50358582]
[241.27299500 -88.53296661]
[239.18672180 -103.96945190]
[248.44551086 -116.04130554]
[263.17471313 -117.93511963]
[272.13540649 -129.96449280]
[281.09609985 -141.99388123]
[285.70916748 -158.30816650]
[302.66290283 -158.39161682]
[307.43637085 -142.12355042]
[293.12545776 -133.03317261]
[284.16476440 -121.00379944]
[275.20407104 -108.97442627]
[277.60610962 -94.31953430]
[268.69006348 -81.99238586]
[253.30238342 -79.57226562]
[244.34169006 -67.54289246]
[235.38098145 -55.51351166]
[250.34115601 -56.60601425]
[261.78176880 -46.90486145]
[263.14913940 -31.96731377]
[253.65994263 -20.35027695]
[238.75006104 -18.70851898]
[226.96052551 -27.98251152]
[225.04469299 -42.85877228]
[215.04650879 -31.67679787]
[205.04833984 -20.49482346]
[195.05017090 -9.31284904]
[185.05200195 1.86912560]
[175.05383301 13.05109978]
[172.60885620 33.54468155]
[152.14584351 39.90693283]
[142.65695190 51.52419662]
[133.16804504 63.14146042]
[135.72387695 77.92211151]
[148.56282043 85.67850494]
[161.40176392 93.43489838]
[174.24070740 101.19129181]
[190.05357361 101.70467377]
[196.94631958 114.90843964]
[209.78526306 122.66482544]
[222.62420654 130.42121887]
[238.43707275 130.93460083]
[245.32981873 144.13836670]
[258.16876221 151.89476013]
[271.00769043 159.65115356]
[283.84664917 167.40754700]
[296.74298096 175.06814575]
[309.69595337 182.63252258]
[324.80383301 178.83905029]
[337.83224487 186.69493103]
[341.35562134 201.12133789]
[354.30862427 208.68572998]
[368.00897217 201.59317017]
[383.36679077 203.05622864]
[395.48150635 212.60806274]
[400.48730469 227.20071411]
[396.78689575 242.17771912]
[385.56106567 252.75996399]
[370.39190674 255.57069397]
[356.11984253 249.71302795]
[347.29907227 237.05610657]
[346.74426270 221.63871765]
[333.79125977 214.07434082]
[319.49533081 218.09451294]
[306.25137329 210.60766602]
[302.13159180 195.58552551]
[289.17858887 188.02113342]
[281.81735229 187.36254883]
[276.09024048 180.24649048]
[263.25131226 172.49009705]
[250.41236877 164.73370361]
[237.57342529 156.97731018]
[222.67887878 157.01870728]
[214.86781311 143.26016235]
[202.02886963 135.50376892]
[189.18992615 127.74737549]
[174.29537964 127.78878021]
[166.48431396 114.03022766]
[153.64537048 106.27383423]
[140.80642700 98.51744843]
[127.96749115 90.76105499]
[127.80398560 104.05363464]
[121.94023132 115.28895569]
[112.13397980 122.29805756]
[100.82946777 124.01535797]
[96.64245605 138.41914368]
[92.45544434 152.82292175]
[88.37577820 167.25747681]
[84.40367889 181.72200012]
[80.43158722 196.18652344]
[81.67824554 200.34582520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[20 209]
[21 208]
[22 207]
[24 206]
[25 205]
[26 204]
[31 104]
[32 103]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[40 61]
[41 60]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[48 53]
[62 96]
[63 95]
[64 93]
[65 92]
[66 89]
[67 88]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[105 152]
[106 151]
[107 150]
[112 148]
[113 147]
[114 146]
[115 145]
[116 144]
[117 143]
[118 136]
[119 135]
[120 134]
[123 131]
[124 130]
[125 129]
[153 200]
[154 199]
[155 198]
[156 197]
[158 195]
[159 194]
[160 193]
[162 191]
[163 190]
[164 189]
[165 188]
[166 186]
[167 185]
[170 182]
[171 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
