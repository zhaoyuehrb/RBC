%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUACAGACUCCUCCGAACACAGAGCUGCAGCUCUUCAGGGAAGAAAUCAAAACAAGAUCACAAGAAUACUGAAAAAUGAAGCCUAAAAUGAAGUAUUCAACCAACAAAAUUUCCACAGCAAAGUGGAAGAACACAGCAAGCAAAGCCUUGUGUUUCAAGCUGGGAAAAUCCCAAC\
) } def
/len { sequence length } bind def

/coor [
[91.73418427 464.53393555]
[88.34140015 479.14520264]
[84.94860840 493.75646973]
[81.55581665 508.36773682]
[86.84562683 523.89031982]
[75.84542084 536.05285645]
[59.87126923 532.34356689]
[55.35601425 516.57830811]
[66.94455719 504.97494507]
[70.33734894 490.36367798]
[73.73013306 475.75241089]
[77.12292480 461.14114380]
[80.54061890 436.06701660]
[97.42601776 426.55331421]
[96.63659668 411.57409668]
[85.42752075 401.83282471]
[84.41355133 386.65301514]
[94.70709229 374.96197510]
[93.91767120 359.98275757]
[93.12825012 345.00354004]
[92.33882904 330.02432251]
[91.54940796 315.04510498]
[90.75998688 300.06591797]
[89.97056580 285.08670044]
[89.18114471 270.10748291]
[80.78475952 257.80505371]
[87.78505707 243.61679077]
[86.99563599 228.63758850]
[86.20621490 213.65837097]
[85.15403748 198.69531250]
[83.83941650 183.75303650]
[73.00386047 169.96450806]
[80.87773132 153.33354187]
[79.30107117 138.41664124]
[67.51521301 129.13798523]
[52.64497375 131.10675049]
[37.77473831 133.07551575]
[22.90449905 135.04428101]
[8.03426170 137.01306152]
[-6.87425900 145.08599854]
[-18.75879288 132.99491882]
[-10.43020535 118.22769165]
[6.06549454 122.14281464]
[20.93573189 120.17404938]
[35.80596924 118.20528412]
[50.67620468 116.23651123]
[65.54644012 114.26774597]
[56.57028580 95.60702515]
[58.56138611 71.99982452]
[44.52183151 66.71864319]
[30.48227692 61.43745422]
[16.94634438 69.26768494]
[1.55306029 66.51436615]
[-8.42933846 54.47751236]
[-8.28746700 38.84057236]
[1.91168582 26.98682785]
[17.35239220 24.51325226]
[30.74402428 32.58779526]
[35.76346207 47.39789963]
[49.80301666 52.67908478]
[63.84257126 57.96026993]
[69.56906128 53.11698914]
[56.81753159 45.21771622]
[60.38993073 30.64932632]
[75.34923553 29.54518700]
[81.02203369 43.43043518]
[86.74851990 38.58715439]
[83.87059021 23.86582756]
[80.99266815 9.14449692]
[78.11473846 -5.57683229]
[75.23681641 -20.29816246]
[72.35888672 -35.01949310]
[69.48096466 -49.74082184]
[54.43198776 -50.93703461]
[40.26420212 -56.15013885]
[28.02895164 -64.99327850]
[18.63417053 -76.81024933]
[12.77701378 -90.72413635]
[10.89212322 -105.70244598]
[13.11936951 -120.63368225]
[19.29347610 -134.40986633]
[28.95628357 -146.00868225]
[41.39074707 -154.56944275]
[55.67414474 -159.45689392]
[70.74655914 -160.30831909]
[85.48950958 -157.06057739]
[98.80898285 -149.95463562]
[109.71657562 -139.51782227]
[117.40287018 -126.52461243]
[121.29750061 -111.93919373]
[121.11145020 -96.84390259]
[116.85853577 -82.35889435]
[108.85434723 -69.55907440]
[97.69284821 -59.39425659]
[84.20229340 -52.61874771]
[87.08022308 -37.89741898]
[89.95814514 -23.17608833]
[92.83607483 -8.45475864]
[95.71399689 6.26657152]
[98.59192657 20.98790169]
[101.46984863 35.70922852]
[108.11312103 39.19017029]
[112.64528656 24.89123726]
[117.17744446 10.59230423]
[115.78300476 -4.34274006]
[124.52805328 -16.52978897]
[139.12321472 -19.99119759]
[152.40968323 -13.02917290]
[157.87054443 0.94147068]
[152.82731628 15.06824589]
[139.75410461 22.42201424]
[130.57688904 34.28703308]
[121.39966583 46.15205002]
[128.04293823 49.63299179]
[141.78509521 43.62025070]
[155.52725220 37.60750961]
[169.26940918 31.59477043]
[183.01158142 25.58203125]
[196.75373840 19.56929207]
[202.27818298 4.76199770]
[216.68940735 -1.72586751]
[231.43746948 3.95483088]
[237.77259827 18.43383598]
[231.93629456 33.12100983]
[217.39112854 39.30271149]
[202.76647949 33.31145096]
[189.02430725 39.32419205]
[175.28215027 45.33692932]
[161.53999329 51.34967041]
[147.79783630 57.36241150]
[134.05567932 63.37515259]
[142.41931152 76.64936066]
[146.03514099 91.40026093]
[144.83677673 106.03733826]
[139.26055908 119.08000946]
[130.16990662 129.30741882]
[118.73797607 135.87202454]
[106.30369568 138.36665344]
[94.21797943 136.83998108]
[95.79463959 151.75689697]
[105.32537079 160.47575378]
[106.31710815 172.95236206]
[98.78169250 182.43841553]
[100.09631348 197.38069153]
[103.59699249 203.04467773]
[103.67743683 208.76379395]
[101.18543243 212.86895752]
[101.97485352 227.84815979]
[102.76427460 242.82737732]
[111.21712494 256.20123291]
[104.16036224 269.31805420]
[104.94978333 284.29727173]
[105.73920441 299.27648926]
[106.52862549 314.25570679]
[107.31804657 329.23489380]
[108.10746765 344.21411133]
[108.89688873 359.19332886]
[109.68630981 374.17254639]
[121.15167999 384.71688843]
[121.73887634 399.91918945]
[111.61580658 410.78466797]
[112.40522766 425.76388550]
[130.27993774 433.66448975]
[135.96299744 458.55776978]
[140.62329102 472.81546021]
[145.28356934 487.07315063]
[149.94386292 501.33084106]
[154.60414124 515.58850098]
[165.27226257 528.76531982]
[155.56365967 542.66418457]
[139.52032471 537.18261719]
[140.34645081 520.24884033]
[135.68617249 505.99111938]
[131.02587891 491.73342896]
[126.36560059 477.47573853]
[121.70531464 463.21804810]
[114.21253204 463.54702759]
[107.28981781 476.85400391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[14 162]
[15 161]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 152]
[25 151]
[27 149]
[28 148]
[29 147]
[30 144]
[31 143]
[33 140]
[34 139]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[49 61]
[50 60]
[51 59]
[67 101]
[68 100]
[69 99]
[70 98]
[71 97]
[72 96]
[73 95]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[164 176]
[165 175]
[166 174]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
