%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCCACACAGAGGCUCCCGGCUGCGCAGACCUUGCCCAGCACACCAGAUUGCCAGCUCCGAGACCCGGGACUCCUCCUGUCCUGGGCCGAAUGCUCUUUUAGCGCGGUAGAGUGCACUUUCUCCAACUGGAAAAGCGGGGACCCAGCGAGAACCCGAGCGAACGAUGGGAGGGAGCUGCGCGCAGAGGCGCCGGGCCGGCCCGCGGCAGGUACUAUUUCCUUUGCUGCUGCCUUUGUUCUACCCCACGCUGU\
GUGAGCCGAUCC\
) } def
/len { sequence length } bind def

/coor [
[105.47362518 338.74652100]
[117.55632019 329.01058960]
[116.67765045 314.03634644]
[115.79897308 299.06210327]
[114.92030334 284.08786011]
[112.03570557 280.32095337]
[111.46408844 274.71032715]
[114.20072937 268.75308228]
[113.67333221 253.76235962]
[113.14593506 238.77162170]
[112.61853790 223.78089905]
[112.09114075 208.79017639]
[111.56374359 193.79945374]
[100.15917969 178.16009521]
[109.98297882 160.53173828]
[109.10430908 145.55749512]
[95.60616302 139.01530457]
[83.30769348 147.60295105]
[71.00921631 156.19058228]
[68.11840820 171.49682617]
[55.52367401 180.03070068]
[40.94932556 177.18045044]
[28.65085030 185.76808167]
[16.35237503 194.35571289]
[4.05389833 202.94334412]
[-8.24457836 211.53099060]
[-13.46575546 218.98295593]
[-20.73793030 220.14620972]
[-33.13622665 228.58909607]
[-45.53452301 237.03196716]
[-57.93281937 245.47485352]
[-61.09010696 257.95727539]
[-71.56162262 264.73794556]
[-83.45445251 262.64920044]
[-95.95086670 270.94616699]
[-108.24934387 279.53381348]
[-120.34311676 288.40740967]
[-132.43690491 297.28097534]
[-141.63038635 311.52584839]
[-157.86357117 306.63500977]
[-157.65766907 289.68231201]
[-141.31048584 285.18719482]
[-129.21670532 276.31362915]
[-117.12292480 267.44003296]
[-116.55250549 264.72885132]
[-114.89240265 262.07601929]
[-112.15810394 259.89096069]
[-108.51054382 258.57052612]
[-104.24783325 258.44976807]
[-91.75141907 250.15280151]
[-84.78104401 234.03150940]
[-66.37570190 233.07655334]
[-53.97740555 224.63368225]
[-41.57910919 216.19079590]
[-29.18081093 207.74790955]
[-16.83221245 199.23251343]
[-4.53373718 190.64486694]
[7.76473951 182.05723572]
[20.06321526 173.46960449]
[32.36169052 164.88197327]
[34.70624542 150.21777344]
[47.05631638 141.33349609]
[62.42157745 143.89210510]
[74.72005463 135.30447388]
[87.01853180 126.71683502]
[75.34397888 122.83674622]
[65.10610199 113.76425171]
[50.60215759 109.93861389]
[36.09820938 106.11296844]
[21.59426308 102.28733063]
[7.09031677 98.46168518]
[-7.41362953 94.63604736]
[-21.91757584 90.81040192]
[-36.42152405 86.98476410]
[-49.09072495 96.15129852]
[-64.68423462 94.97810364]
[-75.83927917 84.01913452]
[-77.28878784 68.44887543]
[-68.34833527 55.61912918]
[-53.23934555 51.58770752]
[-39.09581375 58.25812531]
[-32.59588242 72.48081970]
[-18.09193420 76.30645752]
[-3.58798814 80.13210297]
[10.91595840 83.95774078]
[25.41990471 87.78338623]
[39.92385101 91.60902405]
[54.42779922 95.43466949]
[68.93174744 99.26030731]
[72.70709229 92.77982330]
[59.74612045 85.22911835]
[46.78527069 77.67819977]
[54.33639908 64.71747589]
[67.29682159 72.26814270]
[80.25779724 79.81884003]
[84.03314972 73.33835602]
[73.55160522 62.60815048]
[63.07006454 51.87794495]
[47.10953140 50.25287247]
[38.55035400 36.68378830]
[43.95840836 21.57973099]
[59.18509293 16.52724266]
[72.54979706 25.40216064]
[73.80027008 41.39640427]
[84.28181458 52.12660980]
[94.76335144 62.85681534]
[121.28520966 72.33188629]
[132.07652283 96.15663910]
[123.16098022 118.59776306]
[135.94139099 110.74530029]
[148.72178650 102.89282990]
[161.50219727 95.04036713]
[174.28260803 87.18790436]
[187.06300354 79.33543396]
[192.96376038 56.84191895]
[198.29548645 42.82147598]
[203.62719727 28.80103493]
[208.95890808 14.78059387]
[214.29063416 0.76015198]
[219.54008484 -13.29129887]
[224.70709229 -27.37327576]
[229.87408447 -41.45525360]
[235.04109192 -55.53723145]
[240.20809937 -69.61920929]
[245.37509155 -83.70118713]
[250.54209900 -97.78316498]
[255.70910645 -111.86514282]
[247.23767090 -124.73140717]
[247.95823669 -139.94108582]
[257.38516235 -151.67126465]
[271.73983765 -155.55474854]
[276.90682983 -169.63671875]
[265.79037476 -179.96627808]
[259.49252319 -193.72784424]
[258.94473267 -208.81138611]
[264.19931030 -222.91731262]
[274.42636108 -233.90695190]
[288.04464722 -240.12687683]
[302.96603394 -240.65760803]
[308.13302612 -254.73957825]
[313.30004883 -268.82156372]
[318.46704102 -282.90353394]
[307.51052856 -293.48062134]
[301.80932617 -307.60208130]
[302.35125732 -322.82138062]
[309.04241943 -336.50158691]
[320.72351074 -346.27258301]
[335.37069702 -350.44146729]
[350.44628906 -348.28594971]
[363.33834839 -340.17947388]
[371.81323242 -327.52658081]
[374.40264893 -312.51940918]
[370.65792847 -297.75808716]
[361.22787476 -285.80004883]
[347.74633789 -278.71716309]
[332.54901123 -277.73654175]
[327.38201904 -263.65454102]
[322.21502686 -249.57257080]
[317.04800415 -235.49060059]
[328.08508301 -225.43513489]
[334.44866943 -211.88337708]
[335.14093018 -196.88719177]
[330.02523804 -182.73031616]
[319.85183716 -171.58061218]
[306.14801025 -165.15812683]
[290.98880005 -164.46971130]
[285.82180786 -150.38774109]
[294.25817871 -138.14170837]
[293.86123657 -123.09822083]
[284.57363892 -111.03198242]
[269.79107666 -106.69813538]
[264.62408447 -92.61615753]
[259.45706177 -78.53417969]
[254.29006958 -64.45220184]
[249.12306213 -50.37022781]
[243.95606995 -36.28824997]
[238.78906250 -22.20627403]
[233.62205505 -8.12429619]
[234.26605225 -0.78788334]
[228.31108093 6.09186983]
[222.97935486 20.11231232]
[217.64764404 34.13275146]
[212.31591797 48.15319443]
[206.98420715 62.17363739]
[213.76271057 75.55466461]
[228.22080994 79.55005646]
[242.67892456 83.54545593]
[257.13702393 87.54084778]
[271.59512329 91.53624725]
[286.05322266 95.53163910]
[300.51135254 99.52703857]
[314.96945190 103.52243042]
[329.89505005 105.01455688]
[344.85797119 103.96041870]
[359.82086182 102.90627289]
[374.78378296 101.85212708]
[390.15884399 94.70762634]
[401.28036499 107.50402832]
[392.06280518 121.73332214]
[375.83792114 116.81504059]
[360.87503052 117.86918640]
[345.91210938 118.92333221]
[330.94918823 119.97747040]
[329.68051147 127.36939240]
[327.14315796 142.15322876]
[325.87448120 149.54515076]
[339.62960815 155.52816772]
[353.38473511 161.51119995]
[367.13986206 167.49423218]
[380.89495850 173.47726440]
[394.65008545 179.46028137]
[408.47439575 185.28166199]
[422.36599731 190.94059753]
[435.47720337 182.64143372]
[450.96032715 183.66744995]
[462.86178589 193.62409973]
[466.60522461 208.68286133]
[460.75122070 223.05332947]
[447.55075073 231.20976257]
[432.07968140 230.01585388]
[420.28692627 219.93067932]
[416.70706177 204.83218384]
[402.81546021 199.17326355]
[398.17327881 200.15333557]
[392.86386108 198.25177002]
[388.66705322 193.21540833]
[374.91195679 187.23237610]
[361.15682983 181.24935913]
[347.40170288 175.26632690]
[333.64657593 169.28329468]
[319.89144897 163.30026245]
[304.37722778 138.52284241]
[310.97406006 117.98053741]
[296.51596069 113.98513794]
[282.05783081 109.98974609]
[267.59973145 105.99434662]
[253.14163208 101.99895477]
[238.68351746 98.00356293]
[224.22541809 94.00816345]
[209.76731873 90.01277161]
[194.91548157 92.11584473]
[182.13507080 99.96830750]
[169.35466003 107.82077026]
[156.57424927 115.67324066]
[143.79385376 123.52570343]
[131.01344299 131.37817383]
[124.07855225 144.67881775]
[124.95722198 159.65306091]
[133.45782471 166.36888123]
[136.80857849 176.44036865]
[134.13787842 186.48657227]
[126.55447388 193.27204895]
[127.08187103 208.26278687]
[127.60926819 223.25350952]
[128.13665771 238.24423218]
[128.66406250 253.23495483]
[129.19145203 268.22567749]
[129.89454651 283.20919800]
[130.77320862 298.18344116]
[131.65188599 313.15768433]
[132.53056335 328.13192749]
[145.66900635 336.38787842]
[151.41423035 350.80218506]
[147.55708313 365.83221436]
[135.58071899 375.69863892]
[120.09028625 376.60760498]
[107.04217529 368.20959473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 261]
[3 260]
[4 259]
[5 258]
[8 257]
[9 256]
[10 255]
[11 254]
[12 253]
[13 252]
[15 248]
[16 247]
[17 65]
[18 64]
[19 63]
[22 60]
[23 59]
[24 58]
[25 57]
[26 56]
[28 55]
[29 54]
[30 53]
[31 52]
[34 50]
[35 49]
[36 44]
[37 43]
[38 42]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[96 106]
[97 105]
[98 104]
[109 246]
[110 245]
[111 244]
[112 243]
[113 242]
[114 241]
[115 184]
[116 183]
[117 182]
[118 181]
[119 180]
[120 178]
[121 177]
[122 176]
[123 175]
[124 174]
[125 173]
[126 172]
[127 171]
[131 167]
[132 166]
[139 159]
[140 158]
[141 157]
[142 156]
[185 240]
[186 239]
[187 238]
[188 237]
[189 236]
[190 235]
[191 234]
[192 233]
[193 203]
[194 202]
[195 201]
[196 200]
[206 231]
[207 230]
[208 229]
[209 228]
[210 227]
[211 226]
[212 223]
[213 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
