%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUUGGGCGCAGCACGCAGGAACCGGAAGUCAAUGGAGGAAGACUGGACCUACUGAUUCAACUUGGAGAUGAGCGGGUCUGUCCUCUUCACGGCGGGAGAGAGGUGGAGAUGCUUUCUGACCCCGUCGAGGUCAUCCCUGUACUGGGCCUUACAUAAUUUCUGCUGUC\
) } def
/len { sequence length } bind def

/coor [
[88.29254150 452.48889160]
[87.60515594 437.43484497]
[90.40859985 422.62817383]
[96.55168152 408.86737061]
[105.70310211 396.89456177]
[117.36935425 387.35543823]
[130.92127991 380.76437378]
[127.64106750 366.12744141]
[124.36084747 351.49047852]
[121.08063507 336.85354614]
[110.74739075 326.12631226]
[115.27958679 310.96817017]
[111.99936676 296.33120728]
[108.71915436 281.69427490]
[99.59313202 276.99526978]
[94.47055054 267.84707642]
[95.26586151 257.17181396]
[101.95676422 248.53555298]
[99.21645355 233.78799438]
[96.47615051 219.04042053]
[93.73584747 204.29286194]
[90.99553680 189.54528809]
[76.23713684 175.14683533]
[83.54834747 155.02964783]
[79.99979401 140.45542908]
[76.45124054 125.88121796]
[75.25366211 140.83334351]
[67.48082733 153.66233826]
[54.78202057 161.64608765]
[39.85173416 163.09056091]
[25.85794640 157.68927002]
[15.76993179 146.58828735]
[11.72821140 132.14305115]
[14.59037876 117.41865540]
[23.74912453 105.53937531]
[37.26110077 99.02581024]
[52.25927353 99.26005554]
[65.56110382 106.19226837]
[55.10165024 95.44052887]
[44.64220047 84.68878937]
[34.18274689 73.93704987]
[23.72329521 63.18531418]
[8.55451870 58.68878555]
[5.22579384 44.17090607]
[-5.23365784 33.41916656]
[-15.69311047 22.66743088]
[-23.95351410 18.67783928]
[-26.24369240 11.62078381]
[-36.50386047 0.67871165]
[-46.76402664 -10.26336098]
[-57.02419662 -21.20543289]
[-67.28436279 -32.14750671]
[-77.54453278 -43.08957672]
[-92.62814331 -47.86400986]
[-95.68960571 -62.44059372]
[-105.94976807 -73.38266754]
[-121.03338623 -78.15709686]
[-124.09484100 -92.73368073]
[-134.35501099 -103.67575073]
[-144.71525574 -114.52311707]
[-155.17471313 -125.27484894]
[-170.97895813 -125.24197388]
[-182.11839294 -136.45306396]
[-181.98417664 -152.25679016]
[-170.65594482 -163.27706909]
[-154.85452271 -162.97576904]
[-143.95463562 -151.53164673]
[-144.42297363 -135.73429871]
[-133.96351624 -124.98256683]
[-127.01905823 -122.37078857]
[-123.41293335 -113.93592072]
[-113.15277100 -102.99384308]
[-98.80303192 -99.00206757]
[-95.00769806 -83.64282990]
[-84.74752808 -72.70075989]
[-70.39779663 -68.70897675]
[-66.60246277 -53.34974670]
[-56.34229279 -42.40767288]
[-46.08212280 -31.46560097]
[-35.82195663 -20.52352905]
[-25.56178856 -9.58145714]
[-15.30161953 1.36061561]
[-4.94137239 12.20797825]
[5.51807976 22.95971680]
[15.97753143 33.71145248]
[30.39818001 37.43894577]
[34.47503281 52.72586060]
[44.93448639 63.47760010]
[55.39393616 74.22933960]
[65.85338593 84.98107147]
[76.31284332 95.73281097]
[91.18291473 80.53871918]
[109.62340546 84.01009369]
[121.87104034 75.35009766]
[134.11866760 66.69010925]
[146.36630249 58.03011703]
[158.61393738 49.37012863]
[170.86157227 40.71013641]
[183.10920715 32.05014420]
[195.11357117 23.05596733]
[206.86555481 13.73443222]
[218.61753845 4.41289663]
[230.36950684 -4.90863848]
[242.12149048 -14.23017406]
[253.87345886 -23.55171013]
[252.24060059 -38.89241791]
[259.18118286 -52.67036819]
[272.48046875 -60.48906708]
[287.89474487 -59.85359955]
[300.50534058 -50.96673584]
[306.28826904 -36.66424561]
[303.39822388 -21.51000023]
[292.75741577 -10.33966446]
[277.76126099 -6.71765089]
[263.19500732 -11.79973221]
[251.44302368 -2.47819638]
[239.69104004 6.84333897]
[227.93907166 16.16487503]
[216.18708801 25.48641014]
[204.43510437 34.80794525]
[203.67839050 38.28852081]
[201.17544556 41.56749725]
[197.04345703 43.81772995]
[191.76919556 44.29777908]
[179.52156067 52.95777130]
[167.27392578 61.61776352]
[155.02629089 70.27775574]
[142.77865601 78.93774414]
[130.53102112 87.59773254]
[118.28339386 96.25772858]
[113.68690491 116.40582275]
[91.02545166 122.33266449]
[94.57401276 136.90687561]
[98.12256622 151.48109436]
[106.82015991 155.29428101]
[112.68329620 162.58885193]
[114.48298645 171.63237000]
[111.93648529 180.35099792]
[105.74310303 186.80499268]
[108.48341370 201.55255127]
[111.22371674 216.30012512]
[113.96402740 231.04768372]
[116.70433044 245.79525757]
[130.49224854 260.46667480]
[123.35609436 278.41406250]
[126.63631439 293.05099487]
[129.91653442 307.68792725]
[140.48439026 319.46209717]
[135.71757507 333.57333374]
[138.99780273 348.21026611]
[142.27801514 362.84722900]
[145.55822754 377.48416138]
[160.62692261 377.66119385]
[175.24845886 381.30908203]
[188.63432312 388.23117065]
[200.06265259 398.05410767]
[208.91709900 410.24819946]
[214.72016907 424.15579224]
[217.15892029 439.02688599]
[216.10180664 454.05947876]
[211.60586548 468.44290161]
[203.91354370 481.40148926]
[193.43968201 492.23638916]
[180.74911499 500.36328125]
[166.52622986 505.34390259]
[151.53807068 506.90963745]
[136.59289551 504.97604370]
[122.49671173 499.64743042]
[110.00968933 491.21115112]
[99.80523682 480.12216187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 152]
[8 151]
[9 150]
[10 149]
[12 147]
[13 146]
[14 145]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[24 134]
[25 133]
[26 132]
[38 91]
[39 90]
[40 89]
[41 88]
[42 87]
[44 85]
[45 84]
[46 83]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[55 75]
[56 74]
[58 72]
[59 71]
[60 69]
[61 68]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
