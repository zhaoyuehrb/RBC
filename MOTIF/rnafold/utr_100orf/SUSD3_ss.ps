%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGCCGGGCUCACUCCCCUGGCAGACCCCGCCAAGCGCCUCGGAGCGCGCAGGAUGCGCUGGGCGGCCGCCACCCUCCGUGGCAAGGCGAGGCCCCGGGGGCGGGCCGGGGUCACCACGCCUGCCCCAGGGAACCGCACAGACGGUACUCACCCUUCUUGCGAUGAUGUGAGAUGAUAAAAUGCCUACAUGAUGAGAUGAAGUGAGAUGAAAAACAUAGGCCUUGUGAUGGAAUGGGAAAUUCCAGAGAUAAU\
UUGCACGUGCGCUAAGCUGCGGCUACCCCCGCAAGCAACCUUCCAAGUCCUUC\
) } def
/len { sequence length } bind def

/coor [
[133.63723755 252.55340576]
[120.46488190 259.72900391]
[105.48101807 259.03350830]
[93.03000641 250.66856384]
[86.72224426 237.06188965]
[82.36341095 251.41461182]
[78.00458527 265.76733398]
[73.64575195 280.12005615]
[69.28692627 294.47277832]
[64.92809296 308.82550049]
[74.39662933 321.11883545]
[74.79733276 336.63073730]
[65.97612000 349.39654541]
[51.32493591 354.50756836]
[36.47745132 349.99847412]
[27.14283180 337.60314941]
[26.91042709 322.08779907]
[35.86960220 309.41842651]
[50.57537079 304.46667480]
[54.93420029 290.11395264]
[59.29303360 275.76123047]
[63.65186310 261.40850830]
[68.01069641 247.05578613]
[72.36952209 232.70306396]
[69.72257996 221.79533386]
[77.72037506 212.10647583]
[80.89868927 197.44706726]
[84.07701111 182.78765869]
[65.95851898 159.26705933]
[60.54648972 134.46983337]
[47.95398712 142.62022400]
[35.36148453 150.77061462]
[22.76898384 158.92100525]
[10.17648029 167.07139587]
[2.79536748 181.06532288]
[-12.09331417 181.48533630]
[-24.68581772 189.63572693]
[-37.27832031 197.78611755]
[-49.87082291 205.93650818]
[-62.46332550 214.08689880]
[-69.84443665 228.08081055]
[-84.73312378 228.50083923]
[-97.32562256 236.65122986]
[-95.86953735 251.88731384]
[-101.67153168 266.05047607]
[-113.39835358 275.88613892]
[-128.35527039 279.13412476]
[-143.10527039 275.04809570]
[-154.25894165 264.56695557]
[-159.25323486 250.09919739]
[-156.94049072 234.96943665]
[-147.85218811 222.65435791]
[-134.07672119 215.98388672]
[-118.77960968 216.49082947]
[-105.47601318 224.05873108]
[-92.88351440 215.90832520]
[-86.40309906 202.49739075]
[-70.61371613 201.49440002]
[-58.02121353 193.34400940]
[-45.42871094 185.19361877]
[-32.83620834 177.04322815]
[-20.24370575 168.89283752]
[-13.76329327 155.48188782]
[2.02608919 154.47889709]
[14.61859226 146.32850647]
[27.21109581 138.17811584]
[39.80359650 130.02772522]
[52.39609909 121.87733459]
[50.43632126 116.97618103]
[48.97966766 111.90270996]
[48.04091644 106.70841217]
[33.04266357 106.47966003]
[18.04440689 106.25091553]
[3.04615116 106.02217102]
[-11.95210457 105.79341888]
[-24.42269325 115.88618469]
[-40.05714035 112.28846741]
[-46.86203766 97.76011658]
[-39.61724472 83.44604492]
[-23.88035393 80.32678223]
[-11.72335625 90.79516602]
[3.27489901 91.02391052]
[18.27315521 91.25266266]
[33.27141190 91.48140717]
[48.26966476 91.71015930]
[53.93041611 75.05321503]
[64.78596497 61.20926666]
[79.61225128 51.73936462]
[96.73746490 47.71133041]
[97.95615387 32.76092148]
[99.17484283 17.81051064]
[100.39353943 2.86009860]
[101.61222839 -12.09031200]
[102.83091736 -27.04072380]
[104.04961395 -41.99113464]
[105.26830292 -56.94154739]
[99.89990234 -70.94798279]
[89.00093079 -81.25392914]
[73.65774536 -85.11360931]
[69.72614288 -99.47994995]
[58.82717896 -109.78588867]
[47.92820740 -120.09183502]
[37.02923965 -130.39778137]
[26.13027000 -140.70372009]
[15.23129940 -151.00965881]
[4.33233023 -161.31561279]
[-6.56663895 -171.62155151]
[-17.46560860 -181.92749023]
[-33.04015732 -181.66069031]
[-43.94644928 -192.26763916]
[-44.10482407 -207.11723328]
[-55.00379562 -217.42318726]
[-71.07331085 -220.69468689]
[-76.01754761 -236.33074951]
[-64.75030518 -248.24633789]
[-48.86235046 -244.18371582]
[-44.69784927 -228.32215881]
[-33.79888153 -218.01620483]
[-18.96364403 -218.68801880]
[-7.76372766 -208.39158630]
[-7.15966511 -192.82646179]
[3.73930430 -182.52052307]
[14.63827419 -172.21458435]
[25.53724289 -161.90863037]
[36.43621063 -151.60269165]
[47.33518219 -141.29675293]
[58.23414993 -130.99079895]
[69.13311768 -120.68486023]
[80.03208923 -110.37892151]
[94.59571075 -107.25638580]
[99.30687714 -92.15289307]
[110.20584869 -81.84695435]
[116.64309692 -85.69556427]
[129.51759338 -93.39279938]
[135.95483398 -97.24140930]
[132.03573608 -111.72038269]
[128.11663818 -126.19935608]
[124.19754028 -140.67832947]
[110.36753845 -148.32730103]
[106.07724762 -163.53811646]
[113.87200165 -177.28646851]
[129.12733459 -181.41571045]
[142.79251099 -173.47602844]
[146.76022339 -158.17790222]
[138.67651367 -144.59742737]
[142.59561157 -130.11845398]
[146.51470947 -115.63948059]
[150.43380737 -101.16051483]
[152.07601929 -99.01795959]
[153.50924683 -96.80117035]
[160.67668152 -109.97796631]
[167.84410095 -123.15475464]
[175.01153564 -136.33155823]
[182.17897034 -149.50834656]
[174.70036316 -164.70693970]
[177.74320984 -181.20098877]
[189.90870667 -192.50384521]
[206.25054932 -194.29132080]
[213.28364563 -207.54029846]
[220.31674194 -220.78929138]
[227.34982300 -234.03826904]
[227.17115784 -239.15292358]
[228.78221130 -243.41757202]
[231.57135010 -246.29927063]
[234.80479431 -247.57922363]
[242.23866272 -260.60757446]
[242.35763550 -276.42831421]
[255.38543701 -283.64813232]
[262.81930542 -296.67648315]
[270.25317383 -309.70480347]
[277.68704224 -322.73315430]
[285.12091064 -335.76150513]
[280.20623779 -352.57595825]
[288.82565308 -367.43664551]
[305.20285034 -371.36160278]
[312.50387573 -384.46484375]
[307.94058228 -399.59600830]
[315.48669434 -413.48239136]
[330.66522217 -417.88546753]
[344.47106934 -410.19296265]
[348.71340942 -394.96871948]
[340.87539673 -381.24499512]
[325.60711670 -377.16381836]
[318.30609131 -364.06057739]
[323.52416992 -352.31198120]
[321.00070190 -339.50875854]
[311.43429565 -330.35003662]
[298.14923096 -328.32763672]
[290.71536255 -315.29928589]
[283.28149414 -302.27093506]
[275.84762573 -289.24261475]
[268.41375732 -276.21426392]
[268.82653809 -261.32537842]
[255.26699829 -253.17370605]
[247.83312988 -240.14537048]
[240.59881592 -227.00517273]
[233.56571960 -213.75619507]
[226.53262329 -200.50720215]
[219.49952698 -187.25822449]
[226.43818665 -175.88562012]
[226.86775208 -162.46223450]
[220.56991577 -150.47790527]
[209.08923340 -143.10099792]
[195.35575867 -142.34091187]
[188.18833923 -129.16412354]
[181.02090454 -115.98732758]
[173.85346985 -102.81053162]
[166.68603516 -89.63373566]
[176.54034424 -78.32477570]
[190.57389832 -83.62190247]
[204.60743713 -88.91902924]
[212.49826050 -102.88736725]
[228.36117554 -105.28481293]
[240.02749634 -94.27224731]
[238.54782104 -78.29757690]
[225.05725098 -69.61519623]
[209.90457153 -74.88548279]
[195.87101746 -69.58835602]
[181.83747864 -64.29122925]
[156.20678711 -35.52664566]
[120.21871185 -55.72285461]
[119.00002289 -40.77244186]
[117.78133392 -25.82203293]
[116.56263733 -10.87162113]
[115.34394836 4.07878971]
[114.12525940 19.02920151]
[112.90656281 33.97961044]
[111.68787384 48.93002319]
[138.66279602 50.22259521]
[165.51060486 66.30789185]
[184.23884583 96.66006470]
[199.07614136 98.86338043]
[213.91343689 101.06669617]
[228.75073242 103.27001190]
[243.58802795 105.47332764]
[258.42532349 107.67663574]
[272.11724854 99.31534576]
[287.14120483 104.94209290]
[291.97210693 120.24052429]
[282.90411377 133.47499084]
[266.89340210 134.49313354]
[256.22201538 122.51393890]
[241.38471985 120.31062317]
[226.54742432 118.10730743]
[211.71011353 115.90399170]
[196.87281799 113.70067596]
[182.03552246 111.49736786]
[179.28025818 118.47293091]
[193.23139954 123.98345184]
[207.18252563 129.49397278]
[221.13366699 135.00450134]
[230.46067810 146.75212097]
[215.62313843 148.95562744]
[201.67201233 143.44511414]
[187.72087097 137.93458557]
[173.76974487 132.42407227]
[171.01448059 139.39962769]
[183.35256958 147.93025208]
[195.69065857 156.46087646]
[212.07064819 157.25321960]
[219.33285522 171.95671082]
[210.00651550 185.44566345]
[193.68579102 183.84378052]
[187.16003418 168.79896545]
[174.82194519 160.26834106]
[162.48385620 151.73771667]
[157.08703613 156.94583130]
[167.50308228 167.73963928]
[156.70910645 178.15548706]
[146.29341125 167.36204529]
[140.89660645 172.57015991]
[148.98287964 185.20393372]
[157.06915283 197.83770752]
[165.21954346 210.43020630]
[173.43383789 222.98110962]
[181.64813232 235.53202820]
[189.86242676 248.08293152]
[205.38224792 251.06805420]
[214.17631531 264.19967651]
[211.02728271 279.68707275]
[197.80340576 288.34182739]
[182.35017395 285.02920532]
[173.83572388 271.71456909]
[177.31152344 256.29724121]
[169.09722900 243.74632263]
[160.88293457 231.19541931]
[152.66862488 218.64450073]
[146.40908813 214.78858948]
[144.43537903 205.92398071]
[136.34910583 193.29020691]
[128.26283264 180.65643311]
[120.88122559 181.98381042]
[123.53599548 196.74702454]
[126.19076538 211.51022339]
[128.84553528 226.27342224]
[131.50006104 241.03668213]
[116.73677063 243.69096375]
[114.08233643 228.92819214]
[111.42756653 214.16499329]
[108.77278900 199.40179443]
[106.11801910 184.63858032]
[98.73641968 185.96597290]
[95.55810547 200.62538147]
[92.37978363 215.28479004]
[104.51506042 206.46804810]
[119.46326447 205.22251892]
[132.89035034 211.90931702]
[140.90332031 224.58970642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[26 304]
[27 303]
[28 302]
[30 68]
[31 67]
[32 66]
[33 65]
[34 64]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[42 56]
[43 55]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[89 228]
[90 227]
[91 226]
[92 225]
[93 224]
[94 223]
[95 222]
[96 221]
[97 132]
[98 131]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[111 118]
[112 117]
[135 148]
[136 147]
[137 146]
[138 145]
[150 208]
[151 207]
[152 206]
[153 205]
[154 204]
[158 199]
[159 198]
[160 197]
[161 196]
[165 195]
[166 194]
[168 192]
[169 191]
[170 190]
[171 189]
[172 188]
[175 184]
[176 183]
[209 219]
[210 218]
[211 217]
[231 247]
[232 246]
[233 245]
[234 244]
[235 243]
[236 242]
[257 266]
[258 265]
[259 264]
[271 291]
[272 290]
[273 289]
[274 287]
[275 286]
[276 285]
[277 284]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
