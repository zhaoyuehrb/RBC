%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGGAUGGUGGAUUUUCCAGGCUACAAUCUGUCUGGUGCAGUCGCCUCCUUCCUAUUCAUCCUGCUGACAAUGAAGCAGUCAGAAGACUUUAGAGUCAUUGGCC\
) } def
/len { sequence length } bind def

/coor [
[85.68035126 106.73394012]
[70.78177643 104.99254608]
[55.88319778 103.25115204]
[40.98462296 101.50975800]
[26.08604813 99.76836395]
[11.18747234 98.02696991]
[-3.71110296 96.28557587]
[-18.60967827 94.54418182]
[-27.65526009 96.67686462]
[-33.91393661 92.52934265]
[-48.75556183 90.35536194]
[-63.59718323 88.18138123]
[-78.43881226 86.00740814]
[-93.28043365 83.83342743]
[-101.87138367 96.40151978]
[-115.01364136 103.96247101]
[-130.07382202 105.06303406]
[-144.06091309 99.53833771]
[-154.22033691 88.53398895]
[-158.57637024 74.26898193]
[-173.41799927 72.09500122]
[-188.25961304 69.92102814]
[-203.10124207 67.74704742]
[-217.94287109 65.57307434]
[-232.78448486 63.39909363]
[-243.53158569 74.59193420]
[-258.81103516 77.29700470]
[-272.74761963 70.47415924]
[-279.98242188 56.74691010]
[-277.73352051 41.39366913]
[-266.86563110 30.31807137]
[-251.55770874 27.77890968]
[-237.69596863 34.75254440]
[-230.61051941 48.55746841]
[-215.76889038 50.73144531]
[-200.92726135 52.90542221]
[-186.08563232 55.07940292]
[-171.24401855 57.25337982]
[-156.40238953 59.42735672]
[-148.13810730 47.01095581]
[-135.24940491 39.38266373]
[-120.26541138 38.10160446]
[-106.15356445 43.47523880]
[-95.73192596 54.48778915]
[-91.10645294 68.99180603]
[-76.26483154 71.16577911]
[-61.42320633 73.33975983]
[-46.58158112 75.51374054]
[-31.73995781 77.68771362]
[-16.86828423 79.64560699]
[-1.96970916 81.38700104]
[12.92886639 83.12839508]
[27.82744217 84.86978912]
[42.72601700 86.61118317]
[57.62459183 88.35257721]
[72.52317047 90.09397125]
[87.42174530 91.83536530]
[95.18289948 80.16287231]
[112.80387115 77.56508636]
[126.39849091 71.22581482]
[139.99310303 64.88654327]
[143.06140137 49.79045868]
[154.29907227 39.51581192]
[169.25509644 37.84818268]
[182.17066956 45.21882248]
[195.76527405 38.87954712]
[209.35989380 32.54027176]
[222.95451355 26.20100021]
[236.54913330 19.86172485]
[239.37762451 4.60462093]
[250.65698242 -6.05164146]
[266.05004883 -8.00951099]
[279.63787842 -0.51614666]
[286.19567871 13.54709911]
[283.20184326 28.77262306]
[271.80755615 39.30589676]
[256.39413452 41.09666824]
[242.88841248 33.45634079]
[229.29379272 39.79561615]
[215.69917297 46.13489151]
[202.10455322 52.47416306]
[188.50993347 58.81343842]
[185.85421753 73.44508362]
[174.96318054 83.83014679]
[159.86891174 85.83427429]
[146.33238220 78.48115540]
[132.73776245 84.82043457]
[119.14314270 91.15970612]
[116.53842163 105.93182373]
[127.14502716 116.53842163]
[137.75163269 127.14502716]
[148.35823059 137.75163269]
[164.33000183 141.47108459]
[168.83520508 157.23925781]
[157.23925781 168.83520508]
[141.47108459 164.33000183]
[137.75163269 148.35823059]
[127.14502716 137.75163269]
[116.53842163 127.14502716]
[105.93182373 116.53842163]
[111.28600311 130.55029297]
[107.84196472 145.14956665]
[96.78986359 155.29112244]
[81.94900513 157.47032166]
[68.44798279 150.93408203]
[60.95236969 137.94117737]
[62.05245209 122.98156738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 57]
[2 56]
[3 55]
[4 54]
[5 53]
[6 52]
[7 51]
[8 50]
[10 49]
[11 48]
[12 47]
[13 46]
[14 45]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[59 88]
[60 87]
[61 86]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[89 100]
[90 99]
[91 98]
[92 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
