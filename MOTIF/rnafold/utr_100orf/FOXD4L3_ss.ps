%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUCAUCCCAGGCUUCCAGCUCAGCCCGCCCCAGGCCAGGUGAUCGGCCGCCACAUCCCCUGCGACUGAAGCACCUGCUCCUCCAUGAACCUGCCAAGAGCUGAGCGCCUUCGCUCCACACCGCAGCGCAGCCUCCGGGACUCCGAUGGGGAAGACGGUAAAAUCGAUGUCCUGGGAGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[126.09580994 367.06256104]
[128.41746521 351.59826660]
[140.17036438 341.28308105]
[139.66375732 326.29162598]
[139.15713501 311.30020142]
[135.78157043 304.70690918]
[138.77073669 296.05172729]
[138.51739502 281.05386353]
[138.26405334 266.05599976]
[138.01071167 251.05815125]
[137.75737000 236.06028748]
[137.50402832 221.06243896]
[137.25067139 206.06457520]
[134.97926331 191.23754883]
[130.73118591 176.85165405]
[126.48310089 162.46577454]
[122.23501587 148.07987976]
[117.98693085 133.69398499]
[80.52247620 124.51720428]
[76.40481567 93.66664124]
[63.81097412 85.51831818]
[51.21713257 77.36999512]
[38.62329483 69.22166443]
[26.02945518 61.07334137]
[13.43561649 52.92501450]
[0.84177721 44.77668762]
[-11.68704891 53.33847809]
[-26.49940681 56.44284439]
[-41.33173752 53.64720917]
[-53.92959976 45.40818787]
[-62.39031982 33.00733948]
[-65.45034027 18.35190773]
[-62.67384338 3.68151736]
[-75.26768494 -4.46680832]
[-87.86152649 -12.61513424]
[-100.45536041 -20.76346016]
[-111.88522339 -21.69710732]
[-117.93182373 -29.89241600]
[-131.81413269 -35.57410049]
[-145.69644165 -41.25578308]
[-159.57875061 -46.93746567]
[-173.46105957 -52.61914825]
[-187.34335327 -58.30083084]
[-205.51574707 -55.38980484]
[-215.72279358 -69.65363312]
[-229.69908142 -75.10004425]
[-243.67536926 -80.54644775]
[-257.65164185 -85.99285889]
[-273.31936646 -83.79436493]
[-282.36865234 -95.62480927]
[-296.34497070 -101.07122040]
[-310.32125854 -106.51762390]
[-322.25582886 -96.85009003]
[-337.42776489 -94.46089172]
[-351.75585938 -99.99272919]
[-361.38592529 -111.95755768]
[-363.72756958 -127.13689423]
[-358.15084839 -141.44758606]
[-346.15588379 -151.04011536]
[-330.96926880 -153.33415222]
[-316.67614746 -147.71260071]
[-307.12124634 -135.68763733]
[-304.87484741 -120.49391174]
[-290.89855957 -115.04750824]
[-276.92227173 -109.60109711]
[-262.25421143 -112.18915558]
[-252.20524597 -99.96914673]
[-238.22895813 -94.52273560]
[-224.25267029 -89.07633209]
[-210.27638245 -83.62992096]
[-199.06434631 -88.20687103]
[-187.36744690 -83.76657867]
[-181.66168213 -72.18314362]
[-167.77937317 -66.50145721]
[-153.89706421 -60.81977463]
[-140.01475525 -55.13809204]
[-126.13244629 -49.45640564]
[-112.25013733 -43.77472305]
[-120.02659607 -56.60152054]
[-121.70522308 -71.50729370]
[-116.97636414 -85.74239349]
[-106.71234131 -96.68084717]
[-92.80657196 -102.30486298]
[-77.82424164 -101.57696533]
[-64.52914429 -94.63143158]
[-55.37382507 -82.74951172]
[-52.04716492 -68.12304688]
[-55.16283035 -53.45019531]
[-64.14608002 -41.43764877]
[-77.33976746 -34.30136490]
[-92.30703735 -33.35729980]
[-79.71319580 -25.20897293]
[-67.11935425 -17.06064796]
[-54.52552032 -8.91232204]
[-42.28154755 -17.45717239]
[-27.65929985 -20.67201996]
[-12.88028812 -18.03655624]
[-0.20207131 -9.92172909]
[8.42660236 2.46211672]
[11.66530895 17.24568176]
[8.99010277 32.18284988]
[21.58394241 40.33117676]
[34.17778015 48.47949982]
[46.77162170 56.62782669]
[59.36545944 64.77615356]
[71.95929718 72.92447662]
[84.55313873 81.07280731]
[95.46001434 71.33893585]
[112.16194916 68.67144012]
[129.86390686 76.18904114]
[142.02886963 67.41330719]
[148.69409180 53.06459045]
[163.54257202 51.89344788]
[175.70755005 43.11771393]
[187.87251282 34.34197998]
[200.03749084 25.56624413]
[199.10612488 10.16701889]
[206.66799927 -3.27997661]
[220.31011963 -10.48385620]
[235.67936707 -9.14588737]
[247.87142944 0.30698845]
[252.99591064 14.85839272]
[249.41757202 29.86502647]
[238.27825928 40.53832626]
[223.13249207 43.47248077]
[208.81321716 37.73121262]
[196.64825439 46.50694656]
[184.48327637 55.28268433]
[172.31831360 64.05841827]
[166.52322388 77.77942657]
[150.80461121 79.57826996]
[138.63964844 88.35400391]
[142.76608276 102.77526093]
[157.73185730 103.78790283]
[169.57507324 93.66979980]
[184.73808289 94.90995789]
[194.31115723 106.26300812]
[209.27694702 107.27565765]
[224.24272156 108.28829956]
[238.71963501 100.58435822]
[252.48471069 109.49810028]
[251.37760925 125.85983276]
[236.53723145 132.83801270]
[223.23007202 123.25408173]
[208.26429749 122.24143982]
[193.29850769 121.22879028]
[182.28330994 131.18875122]
[167.09146118 130.37496948]
[156.71922302 118.75368500]
[141.75343323 117.74103546]
[132.37281799 129.44590759]
[136.62091064 143.83180237]
[140.86898804 158.21768188]
[145.11706543 172.60357666]
[149.36515808 186.98947144]
[166.20130920 177.58082581]
[190.05088806 182.87626648]
[200.92277527 193.21076965]
[211.79466248 203.54527283]
[222.66656494 213.87977600]
[238.31237793 220.41006470]
[236.36848450 237.25221252]
[219.64642334 240.04664612]
[212.33206177 224.75166321]
[201.46015930 214.41716003]
[190.58827209 204.08265686]
[179.71638489 193.74815369]
[172.84942627 196.76393127]
[178.88073730 210.49794006]
[165.14663696 216.52905273]
[159.11549377 202.79545593]
[152.24853516 205.81123352]
[152.50187683 220.80909729]
[152.75521851 235.80694580]
[153.00856018 250.80480957]
[153.26190186 265.80267334]
[153.51524353 280.80053711]
[153.76858521 295.79840088]
[154.14859009 310.79357910]
[154.65519714 325.78503418]
[155.16180420 340.77645874]
[167.58427429 350.27468872]
[170.94461060 365.54696655]
[163.65618896 379.38217163]
[149.16036987 385.24774170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 181]
[4 180]
[5 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[12 173]
[13 172]
[14 155]
[15 154]
[16 153]
[17 152]
[18 151]
[20 107]
[21 106]
[22 105]
[23 104]
[24 103]
[25 102]
[26 101]
[33 94]
[34 93]
[35 92]
[36 91]
[38 78]
[39 77]
[40 76]
[41 75]
[42 74]
[43 73]
[45 70]
[46 69]
[47 68]
[48 67]
[50 65]
[51 64]
[52 63]
[110 132]
[111 131]
[113 129]
[114 128]
[115 127]
[116 126]
[133 150]
[134 149]
[137 146]
[138 145]
[139 144]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
