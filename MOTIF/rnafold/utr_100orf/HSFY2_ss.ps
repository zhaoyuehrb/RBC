%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCAUUGUGAUGGUCUAGAUAAGUGUACAUGCUUAGGCCUUCUGAAGCAGCAUUUGAAGCUGCAGUCCUGAAAACCAUGCAGGCCGGAAGAGUAGAUAAAGAAAUAUUUAUUUGAGAUGGCACAUGUUUCUUCAGAAACUCAAGAUGUUUCCCCCAAAGAUGAAUUAACUGCUUCAGAAGCCUCCACUAGGUCUCCAUUGUGUGAACACACCUUCC\
) } def
/len { sequence length } bind def

/coor [
[25.35957718 616.06463623]
[11.12190819 616.69781494]
[7.48375845 631.24993896]
[3.84560895 645.80206299]
[0.20745924 660.35412598]
[-3.43069029 674.90625000]
[1.59719384 690.51562500]
[-9.60609436 702.49133301]
[-25.51557350 698.51385498]
[-29.76493454 682.67480469]
[-17.98279953 671.26812744]
[-14.34464931 656.71600342]
[-10.70650005 642.16387939]
[-7.06835032 627.61175537]
[-3.43020058 613.05969238]
[-16.79625702 604.88964844]
[-26.99541092 592.97375488]
[-33.01980591 578.47106934]
[-34.26842880 562.79718018]
[-30.60703659 547.48583984]
[-22.38246918 534.03918457]
[-10.38985062 523.78027344]
[4.20428896 517.72271729]
[19.97546387 516.47088623]
[23.40353394 501.86785889]
[26.83160210 487.26483154]
[30.25967216 472.66180420]
[25.63580322 458.50308228]
[36.32220078 446.83639526]
[39.75026703 432.23336792]
[43.17833710 417.63037109]
[46.60640717 403.02734375]
[50.03447342 388.42431641]
[55.74443054 369.01016235]
[68.62528992 358.21423340]
[82.12325287 357.24884033]
[82.55551910 342.25506592]
[82.98779297 327.26129150]
[83.42005920 312.26751709]
[80.47229767 305.49444580]
[83.96813965 297.06121826]
[84.61643219 282.07525635]
[85.26472473 267.08926392]
[85.91301727 252.10327148]
[86.56130981 237.11729431]
[87.20960236 222.13131714]
[87.85789490 207.14532471]
[88.50617981 192.15934753]
[89.15447235 177.17335510]
[89.80276489 162.18737793]
[90.45105743 147.20138550]
[81.49400330 144.93510437]
[73.05625153 140.96997070]
[65.45975494 135.42214966]
[59.00091171 128.46876526]
[53.93905640 120.34231567]
[50.48616409 111.32299042]
[48.79808044 101.72901917]
[48.96780014 91.90545654]
[51.02089310 82.21177673]
[54.91344070 73.00873566]
[41.78135681 65.75970459]
[28.64927483 58.51068115]
[15.51718998 51.26165771]
[2.38510585 44.01263046]
[-9.73558331 53.23265076]
[-24.55999184 56.71931076]
[-39.51970291 53.86852646]
[-52.02285385 45.17420959]
[-59.90319824 32.14270782]
[-61.79541779 17.03180504]
[-57.37167740 2.45955801]
[-47.39841843 -9.04930496]
[-33.60356140 -15.50080395]
[-18.37715149 -15.77717590]
[-4.35725927 -9.83053875]
[6.02708721 1.30881679]
[10.97673607 15.71092987]
[9.63413143 30.88054848]
[22.76621628 38.12957382]
[35.89830017 45.37859726]
[49.03038406 52.62762451]
[62.16246796 59.87664795]
[74.37350464 51.16512680]
[71.79243469 36.38885880]
[69.21137238 21.61259079]
[66.63030243 6.83632326]
[51.33806610 -0.39746442]
[43.45079803 -15.17496586]
[45.90313721 -31.57704163]
[57.53229141 -43.16663742]
[54.73855972 -57.90417480]
[51.94482803 -72.64171600]
[49.15109634 -87.37925720]
[46.35736847 -102.11679077]
[43.56363678 -116.85433197]
[40.76990509 -131.59187317]
[37.97617340 -146.32940674]
[35.18244171 -161.06695557]
[21.98180008 -169.75709534]
[18.87426758 -185.25285339]
[27.70348740 -198.36088562]
[43.23124313 -201.30441284]
[56.24518967 -192.33709717]
[59.02438736 -176.77909851]
[49.91998291 -163.86068726]
[52.71371460 -149.12313843]
[55.50744247 -134.38560486]
[58.30117416 -119.64806366]
[61.09490585 -104.91052246]
[63.88863754 -90.17298889]
[66.68236542 -75.43544769]
[69.47609711 -60.69790649]
[72.26982880 -45.96036911]
[84.81752777 -41.40841675]
[93.54853058 -31.16948891]
[96.10176086 -17.84765244]
[91.70556641 -4.90116167]
[81.40657043 4.25525761]
[83.98764038 19.03152466]
[86.56870270 33.80779266]
[89.14977264 48.58406067]
[115.60029602 52.12462997]
[135.79528809 67.78430176]
[148.37141418 59.60867310]
[160.94754028 51.43304443]
[168.30058289 37.42435455]
[183.18838501 36.97447968]
[195.76452637 28.79885101]
[208.34065247 20.62322426]
[206.87783813 6.71482706]
[211.52697754 -6.40472937]
[221.32743835 -16.19509888]
[234.32701111 -20.78667831]
[247.97074890 -19.33746719]
[259.60302734 -12.18685246]
[272.29565430 -20.18040276]
[284.98831177 -28.17395401]
[297.68093872 -36.16750336]
[310.37359619 -44.16105270]
[312.31594849 -59.67753601]
[323.81280518 -70.27737427]
[339.43566895 -70.95564270]
[351.80792236 -61.39209366]
[355.08773804 -46.10233307]
[347.72653198 -32.30572510]
[333.19998169 -26.51660156]
[318.36712646 -31.46841240]
[305.67449951 -23.47486305]
[292.98184204 -15.48131180]
[280.28921509 -7.48776102]
[267.59655762 0.50578946]
[268.61120605 16.63528061]
[261.30981445 31.15850258]
[247.60125732 40.06760788]
[231.17678833 40.85070038]
[216.51628113 33.19935608]
[203.94015503 41.37498474]
[191.36401367 49.55061340]
[184.91050720 62.97452927]
[169.12316895 64.00917816]
[156.54704285 72.18480682]
[143.97091675 80.36043549]
[147.60366821 92.71684265]
[147.83155823 105.59418488]
[144.63830566 118.07140350]
[138.25227356 129.25605774]
[129.13024902 138.34817505]
[117.92468262 144.69741821]
[105.43704224 147.84968567]
[104.78874969 162.83566284]
[104.14045715 177.82165527]
[103.49216461 192.80763245]
[102.84387207 207.79362488]
[102.19558716 222.77960205]
[101.54729462 237.76557922]
[100.89900208 252.75157166]
[100.25070953 267.73754883]
[99.60241699 282.72354126]
[98.95412445 297.70953369]
[98.41382599 312.69979858]
[97.98155975 327.69357300]
[97.54929352 342.68731689]
[97.11701965 357.68109131]
[103.10596466 371.43365479]
[114.37762451 381.33059692]
[130.55686951 384.00720215]
[136.07443237 399.45028687]
[125.25431824 411.77331543]
[109.22733307 408.29943848]
[104.48066711 392.60226440]
[93.20900726 382.70529175]
[86.06613159 384.99206543]
[91.21308899 399.08139038]
[101.99931335 409.50527954]
[98.59099579 424.11291504]
[84.30539703 428.68692017]
[73.04647827 418.77548218]
[75.77302551 404.02447510]
[71.78038025 389.56561279]
[64.63749695 391.85238647]
[61.20943069 406.45541382]
[57.78136063 421.05841064]
[54.35329437 435.66143799]
[50.92522430 450.26446533]
[55.30389404 465.46768188]
[44.86269760 476.08987427]
[41.43462753 490.69290161]
[38.00655746 505.29592896]
[34.57849121 519.89892578]
[47.02717972 527.12707520]
[56.92344666 537.55883789]
[63.47163773 550.34246826]
[66.14894867 564.43768311]
[64.74717712 578.70025635]
[59.38887787 591.97503662]
[50.51669693 603.18933105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[24 210]
[25 209]
[26 208]
[27 207]
[29 205]
[30 204]
[31 203]
[32 202]
[33 201]
[36 184]
[37 183]
[38 182]
[39 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[50 171]
[51 170]
[61 83]
[62 82]
[63 81]
[64 80]
[65 79]
[84 122]
[85 121]
[86 120]
[87 119]
[91 114]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[124 163]
[125 162]
[126 161]
[128 159]
[129 158]
[130 157]
[136 152]
[137 151]
[138 150]
[139 149]
[140 148]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
