%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGCGCGGCCGGGCCCAGCUGCGGGGCGGAGGCGGAGGCGGAGGAGAGGCCUGCGGCGGCAGGGAGCGGCGGGACUGGGAGCGGGCGCCGGAGCCGACCCGAGCCGAGCCGAGCCGAGCCGAGCCGGAGCGGGCGGCGAAGGCCGGCGCGGCGAGCAGCAACCAUGUCGGUGUUCGGGAAGCUGUUCGGGGCUGGAGGGGGUAAGGCCGGCAAGGGCGGCCCGACCCCCCAGGAGGCCAUCCAGCGGCUGCGG\
GACACGGAAG\
) } def
/len { sequence length } bind def

/coor [
[333.47933960 190.56883240]
[319.60424805 184.86952209]
[305.72915649 179.17021179]
[291.01654053 181.49148560]
[281.19113159 169.09100342]
[267.31604004 163.39169312]
[253.40756226 157.77442932]
[239.46614075 152.23937988]
[222.24836731 155.70578003]
[210.96855164 141.13121033]
[196.96272278 135.76119995]
[182.95690918 130.39120483]
[168.95108032 125.02119446]
[154.29739380 127.68930817]
[144.18183899 115.52436066]
[130.17601013 110.15435028]
[116.17019653 104.78434753]
[116.35511780 113.27567291]
[111.99761963 122.23667145]
[102.95965576 129.31967163]
[90.25666809 132.22998047]
[79.96781921 143.14508057]
[69.67896271 154.06018066]
[59.39011383 164.97529602]
[62.75038147 181.56886292]
[55.61743927 196.73960876]
[40.98836136 204.57978821]
[24.73525620 202.16764832]
[14.57603264 213.20350647]
[11.51979065 229.31533813]
[-4.04873514 234.46830750]
[-16.11397934 223.36146545]
[-12.26425457 207.42057800]
[3.54017425 203.04428101]
[13.69939804 192.00842285]
[9.86625576 179.23919678]
[12.85895920 166.13635254]
[22.00172615 156.13790894]
[34.99096298 151.92118835]
[48.47500992 154.68644714]
[58.76385880 143.77133179]
[69.05271149 132.85623169]
[79.34156036 121.94112396]
[78.67808533 114.47052765]
[67.82403564 124.82376862]
[52.96213531 122.79301453]
[45.28346634 109.90744019]
[50.57010269 95.86993408]
[64.84117889 91.25080872]
[77.35114288 99.52933502]
[76.68767548 92.05873871]
[64.63626099 83.12770081]
[52.58485413 74.19665527]
[40.53344345 65.26560974]
[28.48203278 56.33457184]
[16.43062210 47.40353012]
[0.99931788 49.52781677]
[-11.09529972 40.29879379]
[-13.02538586 25.57431030]
[-25.07679558 16.64326859]
[-37.12820435 7.71222639]
[-49.17961502 -1.21881568]
[-64.61092377 0.90547222]
[-76.70553589 -8.32355118]
[-78.63562012 -23.04803276]
[-90.68703461 -31.97907639]
[-106.11833954 -29.85478783]
[-118.21295166 -39.08381271]
[-120.14304352 -53.80829239]
[-132.19445801 -62.73933411]
[-144.24586487 -71.67037964]
[-156.29727173 -80.60141754]
[-174.64942932 -82.28983307]
[-180.97161865 -98.67572021]
[-193.12767029 -107.46381378]
[-201.88356018 -109.94270325]
[-205.37455750 -116.42816925]
[-217.42596436 -125.35921478]
[-233.12022400 -127.35951233]
[-238.73884583 -141.15373230]
[-250.79025269 -150.08476257]
[-266.22155762 -147.96047974]
[-278.31616211 -157.18949890]
[-280.24627686 -171.91398621]
[-292.29766846 -180.84503174]
[-304.34909058 -189.77607727]
[-316.40048218 -198.70710754]
[-328.50442505 -207.56683350]
[-340.66049194 -216.35491943]
[-355.77938843 -212.36082458]
[-369.90640259 -219.06614685]
[-376.37118530 -233.30484009]
[-372.12127686 -248.35383606]
[-359.16333008 -257.10745239]
[-343.61572266 -255.43251038]
[-332.81951904 -244.11984253]
[-331.87237549 -228.51097107]
[-319.71633911 -219.72288513]
[-312.47903442 -218.35554504]
[-307.46945190 -210.75852966]
[-295.41802979 -201.82748413]
[-283.36663818 -192.89643860]
[-271.31521606 -183.96539307]
[-256.66629028 -186.40351868]
[-244.31721497 -177.51785278]
[-241.85920715 -162.13618469]
[-229.80780029 -153.20513916]
[-214.97555542 -151.84364319]
[-208.49493408 -137.41062927]
[-196.44351196 -128.47958374]
[-184.33958435 -119.61985779]
[-172.18353271 -110.83177185]
[-160.21632385 -112.44510651]
[-150.02301025 -105.25192261]
[-147.36622620 -92.65283203]
[-135.31481934 -83.72178650]
[-123.26341248 -74.79074860]
[-111.21199799 -65.85970306]
[-96.56307220 -68.29782867]
[-84.21399689 -59.41216278]
[-81.75598907 -44.03048706]
[-69.70458221 -35.09944153]
[-55.05565262 -37.53757095]
[-42.70658112 -28.65190125]
[-40.24857330 -13.27022552]
[-28.19716263 -4.33918333]
[-16.14575386 4.59185886]
[-4.09434319 13.52290058]
[10.55458546 11.08477306]
[22.90365601 19.97044373]
[25.36166382 35.35211945]
[37.41307449 44.28316116]
[49.46448517 53.21420288]
[61.51589584 62.14524460]
[73.56730652 71.07628632]
[85.61871338 80.00733185]
[99.62453461 74.63732147]
[102.61602020 59.93864822]
[105.60750580 45.23997498]
[99.89469910 29.86805725]
[110.55778503 17.40890312]
[126.62750244 20.67942047]
[131.57269287 36.31518555]
[120.30617523 48.23146057]
[117.31469727 62.93013382]
[114.32321167 77.62880707]
[121.54019928 90.77852631]
[135.54602051 96.14852905]
[149.55184937 101.51853943]
[165.20732117 99.23451996]
[174.32109070 111.01537323]
[188.32690430 116.38537598]
[202.33273315 121.75538635]
[216.33854675 127.12538910]
[228.39349365 122.60056305]
[239.93547058 127.33641815]
[245.00117493 138.29795837]
[258.94259644 143.83300781]
[268.03909302 144.08659363]
[273.01535034 149.51661682]
[286.89044189 155.21592712]
[302.59548950 153.30230713]
[311.42846680 165.29513550]
[325.30355835 170.99444580]
[339.17861938 176.69374084]
[352.35806274 168.71821594]
[367.52926636 170.01725769]
[378.89212036 179.88386536]
[382.22634888 194.37596130]
[396.10140991 200.07527161]
[411.80648804 198.16165161]
[420.63946533 210.15447998]
[434.51452637 215.85379028]
[448.38961792 221.55308533]
[462.26470947 227.25239563]
[476.13977051 232.95170593]
[490.01486206 238.65101624]
[501.15774536 230.57002258]
[514.72979736 229.05348206]
[527.18273926 234.39048767]
[535.31365967 245.09228516]
[537.08892822 258.30569458]
[550.89569092 264.16848755]
[564.70251465 270.03125000]
[578.50933838 275.89404297]
[592.31610107 281.75680542]
[606.12292480 287.61959839]
[619.92974854 293.48236084]
[629.01770020 293.95074463]
[633.86431885 299.49679565]
[647.60095215 305.52221680]
[661.40771484 311.38500977]
[675.28283691 317.08428955]
[689.15789795 322.78359985]
[703.03295898 328.48291016]
[718.20593262 318.50582886]
[736.17114258 319.65017700]
[749.71612549 331.26647949]
[753.51727295 348.53939819]
[767.52313232 353.90939331]
[781.52893066 359.27938843]
[795.53472900 364.64941406]
[809.54058838 370.01940918]
[823.54638672 375.38940430]
[837.84191895 369.20260620]
[851.96929932 374.84808350]
[857.77935791 388.51477051]
[871.78521729 393.88476562]
[885.79101562 399.25476074]
[899.79681396 404.62478638]
[913.80267334 409.99478149]
[927.38793945 402.25045776]
[942.76342773 405.10122681]
[952.66943359 417.20104980]
[952.42846680 432.83679199]
[942.15447998 444.62570190]
[926.69842529 447.00140381]
[913.35815430 438.84222412]
[908.43267822 424.00061035]
[894.42681885 418.63061523]
[880.42102051 413.26058960]
[866.41516113 407.89059448]
[852.40936279 402.52059937]
[838.95178223 408.79980469]
[824.67138672 403.55337524]
[818.17639160 389.39523315]
[804.17059326 384.02523804]
[790.16473389 378.65521240]
[776.15893555 373.28521729]
[762.15313721 367.91522217]
[748.14727783 362.54519653]
[739.09344482 370.57556152]
[727.41900635 374.02749634]
[715.31146240 372.19058228]
[705.06646729 365.35122681]
[698.65270996 354.75027466]
[697.33367920 342.35800171]
[683.45855713 336.65869141]
[669.58349609 330.95938110]
[655.70843506 325.26007080]
[651.06256104 326.22705078]
[645.75775146 324.30929565]
[641.57550049 319.25881958]
[627.83886719 313.23339844]
[614.06695557 307.28918457]
[600.26013184 301.42639160]
[586.45336914 295.56362915]
[572.64654541 289.70083618]
[558.83972168 283.83807373]
[545.03295898 277.97528076]
[531.22613525 272.11251831]
[517.41510010 281.01400757]
[500.85455322 279.90612793]
[488.09902954 269.02832031]
[484.31555176 252.52609253]
[470.44046021 246.82679749]
[456.56539917 241.12748718]
[442.69030762 235.42817688]
[428.81521606 229.72886658]
[414.94015503 224.02955627]
[400.22753906 226.35083008]
[390.40209961 213.95034790]
[376.52703857 208.25103760]
[363.96871948 216.21514893]
[348.95126343 215.24581909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[5 161]
[6 160]
[7 158]
[8 157]
[10 154]
[11 153]
[12 152]
[13 151]
[15 149]
[16 148]
[17 147]
[21 43]
[22 42]
[23 41]
[24 40]
[28 35]
[29 34]
[51 136]
[52 135]
[53 134]
[54 133]
[55 132]
[56 131]
[59 128]
[60 127]
[61 126]
[62 125]
[65 122]
[66 121]
[69 118]
[70 117]
[71 116]
[72 115]
[74 112]
[75 111]
[77 110]
[78 109]
[80 107]
[81 106]
[84 103]
[85 102]
[86 101]
[87 100]
[88 98]
[89 97]
[137 146]
[138 145]
[139 144]
[169 263]
[170 262]
[172 260]
[173 259]
[174 258]
[175 257]
[176 256]
[177 255]
[182 251]
[183 250]
[184 249]
[185 248]
[186 247]
[187 246]
[188 245]
[190 244]
[191 243]
[192 240]
[193 239]
[194 238]
[195 237]
[199 231]
[200 230]
[201 229]
[202 228]
[203 227]
[204 226]
[207 223]
[208 222]
[209 221]
[210 220]
[211 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
