%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COPS9)
} def

/sequence { (\
AUGUGGCGCGCGCCGGAAGCGGCUCUGAGGCCGGAAGUGAGCCUAGAGCGCCGCGGCCCCGAGAUGAAGCCGGCGGUGGACGAGAUGUUCCCCGAGGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.031863775 ubox
2 10 0.006091527 ubox
2 12 0.011718232 ubox
2 55 0.630221041 ubox
2 61 0.162116504 ubox
2 64 0.032131525 ubox
2 66 0.013603614 ubox
2 100 0.005568418 ubox
3 9 0.008685377 ubox
3 11 0.028191192 ubox
3 13 0.029307672 ubox
3 54 0.895096346 ubox
3 57 0.174559330 ubox
3 60 0.261533273 ubox
3 65 0.028465242 ubox
3 99 0.005142459 ubox
4 8 0.008132992 ubox
4 10 0.028154962 ubox
4 12 0.029422634 ubox
4 15 0.021891778 ubox
4 53 0.895406403 ubox
4 56 0.174741510 ubox
4 61 0.077106467 ubox
4 64 0.028969720 ubox
4 66 0.005869057 ubox
4 98 0.004735013 ubox
5 9 0.026841841 ubox
5 11 0.029784406 ubox
5 14 0.213159820 ubox
5 52 0.896400730 ubox
5 54 0.003668300 ubox
5 58 0.314218777 ubox
5 59 0.079736087 ubox
5 60 0.098993666 ubox
5 65 0.007666674 ubox
6 13 0.213632420 ubox
6 51 0.896407978 ubox
6 54 0.175554261 ubox
6 57 0.315200344 ubox
6 58 0.078519181 ubox
6 59 0.098742504 ubox
7 12 0.213326384 ubox
7 21 0.003324744 ubox
7 50 0.896357974 ubox
7 53 0.175538245 ubox
7 55 0.076774439 ubox
7 56 0.306438416 ubox
7 61 0.031959935 ubox
7 66 0.005594647 ubox
7 78 0.003310596 ubox
7 100 0.003356564 ubox
8 20 0.010934735 ubox
8 49 0.890193333 ubox
8 51 0.121434605 ubox
8 52 0.128668913 ubox
8 54 0.107042497 ubox
8 57 0.113527856 ubox
8 60 0.031905185 ubox
8 65 0.005102246 ubox
8 77 0.003358755 ubox
8 99 0.003537001 ubox
9 19 0.010942625 ubox
9 21 0.095561409 ubox
9 22 0.005320896 ubox
9 27 0.004500945 ubox
9 48 0.888595477 ubox
9 50 0.170389294 ubox
9 53 0.107200477 ubox
9 55 0.299530053 ubox
9 56 0.110420147 ubox
9 61 0.030039365 ubox
9 66 0.003343286 ubox
9 76 0.003360520 ubox
9 98 0.003506904 ubox
9 100 0.004440620 ubox
10 20 0.097248743 ubox
10 23 0.023871672 ubox
10 26 0.013090055 ubox
10 42 0.011955146 ubox
10 49 0.170716494 ubox
10 51 0.052884623 ubox
10 52 0.103897179 ubox
10 54 0.301784934 ubox
10 57 0.006524814 ubox
10 60 0.030237129 ubox
10 99 0.004785100 ubox
11 19 0.097240665 ubox
11 21 0.060090946 ubox
11 22 0.017383490 ubox
11 27 0.009740847 ubox
11 41 0.011952763 ubox
11 48 0.170566935 ubox
11 50 0.058046287 ubox
11 53 0.301707847 ubox
11 55 0.107260344 ubox
11 56 0.006277428 ubox
11 61 0.009366244 ubox
11 75 0.003400456 ubox
11 98 0.004776037 ubox
11 100 0.006670011 ubox
12 20 0.066110848 ubox
12 23 0.903758834 ubox
12 42 0.039360547 ubox
12 49 0.046717827 ubox
12 51 0.114760284 ubox
12 52 0.291925072 ubox
12 54 0.107646707 ubox
12 57 0.060512458 ubox
12 60 0.009279202 ubox
12 74 0.003565249 ubox
12 99 0.007702808 ubox
13 19 0.066078429 ubox
13 22 0.906716128 ubox
13 41 0.039403447 ubox
13 48 0.011957877 ubox
13 50 0.132301300 ubox
13 53 0.084663616 ubox
13 56 0.060666792 ubox
13 73 0.003573754 ubox
13 97 0.003988024 ubox
13 98 0.007699462 ubox
14 21 0.917880342 ubox
14 27 0.007320446 ubox
14 39 0.040217072 ubox
14 50 0.027693419 ubox
14 53 0.066992149 ubox
14 55 0.060709876 ubox
14 61 0.028157203 ubox
14 72 0.003573333 ubox
14 96 0.003967034 ubox
14 97 0.007650906 ubox
15 20 0.914073488 ubox
15 26 0.007370160 ubox
15 38 0.039379990 ubox
15 43 0.004609383 ubox
15 49 0.013061420 ubox
15 52 0.094961852 ubox
15 54 0.059400720 ubox
15 58 0.206734616 ubox
15 59 0.041967014 ubox
15 60 0.042252371 ubox
15 71 0.003482239 ubox
16 25 0.007381691 ubox
16 42 0.004612529 ubox
16 51 0.073030924 ubox
16 57 0.207900741 ubox
16 58 0.041147112 ubox
16 59 0.042031622 ubox
16 70 0.003468110 ubox
17 24 0.006993588 ubox
19 42 0.003345398 ubox
19 49 0.004886434 ubox
19 51 0.290888611 ubox
19 54 0.217343200 ubox
20 33 0.041229210 ubox
20 41 0.003370305 ubox
20 48 0.004441820 ubox
20 50 0.295915458 ubox
20 53 0.217437965 ubox
21 32 0.041330483 ubox
21 43 0.011470719 ubox
21 49 0.209404790 ubox
21 52 0.217107610 ubox
22 31 0.041331862 ubox
22 38 0.003598936 ubox
22 42 0.011528437 ubox
22 49 0.294618425 ubox
22 51 0.208161740 ubox
23 30 0.041296400 ubox
23 37 0.003670018 ubox
23 41 0.011529417 ubox
23 48 0.371187560 ubox
23 50 0.200057722 ubox
24 29 0.037960909 ubox
24 35 0.009434383 ubox
24 40 0.011438052 ubox
24 45 0.005132825 ubox
24 47 0.934568367 ubox
25 29 0.004643580 ubox
25 34 0.010268384 ubox
25 39 0.011367261 ubox
25 46 0.974280048 ubox
25 48 0.162947505 ubox
26 33 0.010355793 ubox
26 45 0.948923293 ubox
26 47 0.161890773 ubox
27 32 0.010270007 ubox
27 44 0.583207139 ubox
28 44 0.804424613 ubox
29 43 0.998890410 ubox
29 44 0.003232315 ubox
30 42 0.999011236 ubox
31 37 0.003378747 ubox
31 41 0.998843150 ubox
32 39 0.977795517 ubox
33 38 0.867381512 ubox
50 77 0.005656767 ubox
51 76 0.005825589 ubox
52 75 0.005846932 ubox
53 74 0.006191556 ubox
54 61 0.026316765 ubox
54 66 0.004337879 ubox
54 72 0.013651473 ubox
54 73 0.004409732 ubox
54 100 0.003660749 ubox
55 60 0.077234531 ubox
55 65 0.010373456 ubox
55 71 0.034078416 ubox
55 99 0.024076496 ubox
56 70 0.034283716 ubox
56 74 0.004542253 ubox
56 77 0.010421184 ubox
56 99 0.254553864 ubox
57 69 0.034331807 ubox
57 73 0.004624822 ubox
57 76 0.010775633 ubox
57 97 0.023549932 ubox
57 98 0.254773054 ubox
58 72 0.004590589 ubox
58 75 0.010779390 ubox
58 96 0.023812825 ubox
58 97 0.254529423 ubox
58 98 0.008273836 ubox
59 73 0.087462894 ubox
59 96 0.240086549 ubox
59 97 0.010729645 ubox
60 66 0.142901993 ubox
60 72 0.180725768 ubox
60 94 0.123029057 ubox
60 96 0.012618181 ubox
60 100 0.009026032 ubox
61 65 0.088844396 ubox
61 71 0.180874264 ubox
61 74 0.006094761 ubox
61 89 0.005049524 ubox
61 90 0.005577314 ubox
61 93 0.120574017 ubox
61 99 0.003994942 ubox
62 88 0.012637338 ubox
62 89 0.006255011 ubox
63 88 0.005773395 ubox
63 89 0.014686167 ubox
63 90 0.022806425 ubox
64 86 0.014189377 ubox
64 88 0.015126552 ubox
64 89 0.022287920 ubox
65 72 0.052758426 ubox
65 82 0.003895123 ubox
65 85 0.014394843 ubox
65 87 0.015036776 ubox
65 100 0.013779567 ubox
66 71 0.073939794 ubox
66 74 0.018812129 ubox
66 81 0.004692923 ubox
66 86 0.010439766 ubox
66 89 0.004664921 ubox
66 90 0.051249173 ubox
66 99 0.007538016 ubox
67 88 0.004900231 ubox
67 89 0.050489604 ubox
68 88 0.048865040 ubox
68 89 0.011554529 ubox
69 77 0.036908377 ubox
69 88 0.016245950 ubox
69 99 0.964441100 ubox
70 76 0.038699910 ubox
70 79 0.023275133 ubox
70 87 0.018558783 ubox
70 97 0.025628417 ubox
70 98 0.965551819 ubox
71 75 0.038447628 ubox
71 78 0.023322698 ubox
71 82 0.023667610 ubox
71 87 0.003965736 ubox
71 94 0.039123763 ubox
71 96 0.029932719 ubox
71 97 0.965263986 ubox
72 77 0.020690617 ubox
72 81 0.023827880 ubox
72 86 0.003747938 ubox
72 92 0.009841937 ubox
72 93 0.040039613 ubox
73 91 0.009815867 ubox
73 92 0.038760558 ubox
73 99 0.006175876 ubox
74 82 0.051836238 ubox
74 94 0.989123171 ubox
74 98 0.005776897 ubox
75 81 0.051880255 ubox
75 90 0.003693287 ubox
75 91 0.035960346 ubox
75 92 0.107751773 ubox
75 93 0.990481404 ubox
76 90 0.034324435 ubox
76 91 0.113924625 ubox
76 92 0.989319358 ubox
78 89 0.004888308 ubox
78 90 0.717796149 ubox
78 91 0.688369786 ubox
78 92 0.005688359 ubox
79 88 0.004127493 ubox
79 89 0.722432282 ubox
79 90 0.687497182 ubox
79 91 0.005710177 ubox
80 88 0.812009370 ubox
80 89 0.572897292 ubox
81 87 0.892297947 ubox
82 86 0.550723296 ubox
82 89 0.024534476 ubox
82 90 0.007978947 ubox
83 88 0.046252377 ubox
83 89 0.009090954 ubox
84 88 0.010861056 ubox
84 90 0.003385426 ubox
87 99 0.004630842 ubox
88 98 0.004102865 ubox
89 97 0.003668984 ubox
90 96 0.003650649 ubox
90 97 0.003557341 ubox
90 98 0.005297455 ubox
91 96 0.003585005 ubox
91 97 0.006270075 ubox
91 98 0.006162179 ubox
92 96 0.006235216 ubox
92 97 0.006314897 ubox
3 54 0.9500000 lbox
4 53 0.9500000 lbox
5 52 0.9500000 lbox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
69 99 0.9500000 lbox
70 98 0.9500000 lbox
71 97 0.9500000 lbox
74 94 0.9500000 lbox
75 93 0.9500000 lbox
76 92 0.9500000 lbox
78 90 0.9500000 lbox
79 89 0.9500000 lbox
80 88 0.9500000 lbox
81 87 0.9500000 lbox
showpage
end
%%EOF
