%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUACAGCAGUAGUGCGCUUGCGCAGCUGGUCCCACACCAAGUCGCCCGCCUCUCCUCGUCCGGCUAGCAGAGGGCGCUGUGAGCCGCCUUCGCCCCCGGACCGCUCACCGCAACCAUGGUCUCCAAAUCCGACCAAUUGCUCAUCGUCGUGUCCAUCCUAGAAGGUCGGCAUUUCCCCAAACGUCCAAAGCAUAUGCUUGUAGUGGAAGCAAAGU\
) } def
/len { sequence length } bind def

/coor [
[174.08204651 52.29880142]
[184.09155273 41.12696457]
[169.95132446 46.13236237]
[155.81109619 51.13776016]
[141.67086792 56.14315796]
[127.53064728 61.14855194]
[113.39041901 66.15395355]
[99.25019073 71.15934753]
[115.96630096 70.98688507]
[132.08906555 80.82427979]
[141.64595032 99.60182190]
[139.85581970 122.79427338]
[125.02915955 143.49163818]
[117.37298584 156.39059448]
[109.71681213 169.28953552]
[102.06063843 182.18849182]
[102.40394592 198.58404541]
[88.23838043 206.84654236]
[74.13626099 198.47622681]
[74.60463715 182.08377075]
[89.16168213 174.53231812]
[96.81785583 161.63337708]
[104.47402954 148.73442078]
[112.13020325 135.83546448]
[106.73180389 130.62899780]
[90.53660583 115.00959778]
[77.92314148 123.12751770]
[65.30967712 131.24542236]
[52.75530624 139.45443726]
[40.26068497 147.75410461]
[27.76606560 156.05377197]
[23.19681358 171.43237305]
[8.27102089 177.31457520]
[-5.56151962 169.18804932]
[-7.68966722 153.28677368]
[3.51911020 141.80885315]
[19.46639824 143.55914307]
[31.96101761 135.25947571]
[44.45563889 126.95981598]
[48.28624344 120.64331818]
[57.19176102 118.63196564]
[69.80522156 110.51405334]
[82.41868591 102.39613342]
[80.96216583 95.03892517]
[76.59260559 72.96729279]
[61.83755493 70.26757812]
[47.08250427 67.56785583]
[32.32745361 64.86814117]
[21.29326630 71.54149628]
[9.06164742 68.99212646]
[2.07603860 59.11996078]
[-12.63838196 56.20692062]
[-27.37350464 53.40046692]
[-42.12855530 50.70074844]
[-56.92114258 48.21492004]
[-71.74816895 45.94350433]
[-84.33692932 55.49853897]
[-99.98339081 53.27062988]
[-109.40480042 40.58155441]
[-107.01158905 24.95951653]
[-94.22361755 15.67279339]
[-78.62775421 18.23103333]
[-69.47675323 31.11647987]
[-54.64972687 33.38789749]
[-50.34154510 31.33615303]
[-44.69918060 31.96585846]
[-39.42883682 35.94569778]
[-24.67378616 38.64541626]
[-17.53168106 36.75807190]
[-9.72534084 41.49249649]
[4.98908043 44.40554047]
[21.27528381 37.86386108]
[35.02716827 50.11309052]
[49.78221893 52.81280899]
[64.53726959 55.51252747]
[79.29232025 58.21224213]
[94.24479675 57.01912308]
[108.38502502 52.01372528]
[122.52524567 47.00832748]
[136.66548157 42.00292969]
[150.80569458 36.99753189]
[164.94592285 31.99213600]
[179.08615112 26.98674011]
[204.61880493 9.44602585]
[212.46090698 -3.34073901]
[220.30300903 -16.12750435]
[228.14512634 -28.91426849]
[235.89445496 -41.75746536]
[243.55062866 -54.65641785]
[251.20680237 -67.55537415]
[258.86297607 -80.45433044]
[266.51916504 -93.35327911]
[257.48016357 -105.54231262]
[253.80641174 -120.22381592]
[256.02746582 -135.15299988]
[263.77413940 -148.05947876]
[275.83917236 -156.99252319]
[290.36557007 -160.61592102]
[305.13220215 -158.40771484]
[312.78839111 -171.30667114]
[320.44454956 -184.20562744]
[328.10070801 -197.10458374]
[335.66333008 -210.05860901]
[343.13195801 -223.06706238]
[333.23080444 -235.73762512]
[328.96118164 -251.20072937]
[330.94854736 -267.08004761]
[338.85913086 -280.94705200]
[351.45556641 -290.69232178]
[366.79037476 -294.84667969]
[382.50698853 -292.80227661]
[389.78649902 -305.91748047]
[397.06604004 -319.03268433]
[404.34555054 -332.14788818]
[400.75540161 -342.40927124]
[403.34939575 -352.74038696]
[411.03775024 -359.79174805]
[421.12072754 -361.41470337]
[428.77691650 -374.31365967]
[436.43307495 -387.21261597]
[444.08926392 -400.11157227]
[451.74542236 -413.01052856]
[444.75033569 -426.76089478]
[446.32241821 -442.10794067]
[455.96005249 -454.15451050]
[470.58789062 -459.05654907]
[485.53823853 -455.24987793]
[496.04049683 -443.94915771]
[498.74343872 -428.76043701]
[492.78454590 -414.53033447]
[480.06530762 -405.79968262]
[464.64437866 -405.35433960]
[456.98822021 -392.45541382]
[449.33203125 -379.55645752]
[441.67587280 -366.65750122]
[434.01968384 -353.75854492]
[435.19671631 -334.45562744]
[417.46075439 -324.86834717]
[410.18124390 -311.75314331]
[402.90170288 -298.63793945]
[395.62216187 -285.52273560]
[404.76281738 -274.87738037]
[409.73202515 -261.72366333]
[409.91397095 -247.63388062]
[405.26644897 -234.29980469]
[396.32827759 -223.32934570]
[384.15704346 -216.05278015]
[370.20385742 -213.36140442]
[356.14041138 -215.59841919]
[348.67175293 -202.58998108]
[348.06765747 -195.22746277]
[340.99966431 -189.44841003]
[333.34350586 -176.54945374]
[325.68731689 -163.65049744]
[318.03115845 -150.75154114]
[327.04220581 -138.84649658]
[330.81903076 -124.35923004]
[328.75598145 -109.48950958]
[321.13653564 -96.50753784]
[309.09494019 -87.40731049]
[294.44738770 -83.60042572]
[279.41812134 -85.69710541]
[271.76193237 -72.79815674]
[264.10577393 -59.89920044]
[256.44958496 -47.00024796]
[248.79341125 -34.10129166]
[248.08277893 -26.74828339]
[240.93188477 -21.07216263]
[233.08978271 -8.28539658]
[225.24766541 4.50136805]
[217.40556335 17.28813362]
[230.41796875 9.82639694]
[240.61608887 -1.17351413]
[254.47903442 -6.90230322]
[269.46734619 -6.31057072]
[282.83551025 0.49328968]
[292.13470459 12.26294708]
[295.66152954 26.84243584]
[292.76992798 41.56108856]
[283.98959351 53.72273636]
[270.92892456 61.09961319]
[255.98031616 62.34042358]
[241.88211060 57.21787643]
[231.21824646 46.67254639]
[217.89413452 39.78282928]
[226.28402710 52.21704102]
[234.67391968 64.65125275]
[243.06381226 77.08547211]
[258.32186890 80.22063446]
[266.65328979 92.95021820]
[263.57037354 107.47712708]
[271.96026611 119.91133881]
[280.35015869 132.34555054]
[295.91040039 135.11224365]
[304.88815308 148.11898804]
[301.95712280 163.64909363]
[288.85617065 172.48884583]
[273.35791016 169.39376831]
[264.65716553 156.20011902]
[267.91592407 140.73544312]
[259.52603149 128.30123901]
[251.13615417 115.86701965]
[236.51132202 113.28829193]
[227.82563782 100.79775238]
[230.62960815 85.47536469]
[222.23971558 73.04115295]
[213.84982300 60.60693741]
[205.45993042 48.17272186]
[206.86146545 63.10710144]
[211.36686707 77.41448975]
[207.75003052 91.97190857]
[197.07240295 102.50701904]
[182.46771240 105.92796326]
[168.22215271 101.23074341]
[158.51652527 89.79393005]
[156.19926453 74.97399902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 83]
[3 82]
[4 81]
[5 80]
[6 79]
[7 78]
[8 77]
[13 24]
[14 23]
[15 22]
[16 21]
[26 43]
[27 42]
[28 41]
[29 39]
[30 38]
[31 37]
[45 76]
[46 75]
[47 74]
[48 73]
[51 71]
[52 70]
[53 68]
[54 67]
[55 64]
[56 63]
[84 171]
[85 170]
[86 169]
[87 168]
[88 166]
[89 165]
[90 164]
[91 163]
[92 162]
[99 155]
[100 154]
[101 153]
[102 152]
[103 150]
[104 149]
[111 141]
[112 140]
[113 139]
[114 138]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[185 208]
[186 207]
[187 206]
[188 205]
[191 202]
[192 201]
[193 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
