%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGACGUCACGGCCCGUGGCGCCCUUCGUGGACUGGGCUGUACGGUGCGCGUGACGGCUGCGUGCGGCGGGAAUCAUGGCUGCUCGCAGAGCUCUGCACUUCGUAUUCAAAGUGGGAAACCGCUUCCAGACGGCGCGUUUCUAUCGGGACGUCCUGGGGAUGAAGGUUCUGCGGC\
) } def
/len { sequence length } bind def

/coor [
[117.86505127 135.59669495]
[107.37971497 139.13851929]
[96.32454681 139.65823364]
[85.55317688 137.11567688]
[75.89734650 131.70719910]
[68.10262299 123.85040283]
[54.61294174 130.41001892]
[41.12326050 136.96961975]
[27.63357735 143.52923584]
[14.14389515 150.08883667]
[0.65421277 156.64845276]
[-12.83546925 163.20806885]
[-26.26640701 169.88713074]
[-39.63754272 176.68511963]
[-52.94782257 183.60150146]
[-66.19620514 190.63574219]
[-79.44458008 197.66998291]
[-92.69295502 204.70422363]
[-105.94133759 211.73844910]
[-110.66539764 226.58166504]
[-124.20134735 233.52665710]
[-138.32296753 228.93150330]
[-151.57135010 235.96574402]
[-164.81971741 242.99998474]
[-178.06809998 250.03421021]
[-178.53300476 265.38607788]
[-186.62519836 278.44027710]
[-200.16790771 285.68530273]
[-215.51823425 285.17227173]
[-228.54699707 277.03918457]
[-235.74954224 263.47384644]
[-235.18840027 248.12519836]
[-227.01454163 235.12199402]
[-213.42666626 227.96200562]
[-198.07986450 228.57125854]
[-185.10234070 236.78584290]
[-171.85395813 229.75160217]
[-158.60557556 222.71736145]
[-145.35720825 215.68312073]
[-141.25315857 201.41104126]
[-127.91761780 194.08860779]
[-112.97557068 198.49008179]
[-99.72719574 191.45584106]
[-86.47881317 184.42160034]
[-73.23043823 177.38735962]
[-59.98205948 170.35313416]
[-55.53490067 164.42071533]
[-46.43553543 163.31398010]
[-33.06439972 156.51599121]
[-28.51265144 150.66345215]
[-19.39507866 149.71838379]
[-5.90539694 143.15876770]
[7.58428478 136.59916687]
[21.07396698 130.03955078]
[34.56364822 123.47994232]
[48.05332947 116.92033386]
[61.54301453 110.36071777]
[62.07769394 87.82695770]
[74.75816345 69.19197845]
[67.60662842 56.00654984]
[60.45510101 42.82111740]
[53.30356979 29.63568687]
[46.15203857 16.45025635]
[32.77123642 8.00841045]
[33.50458145 -6.86813068]
[26.35304832 -20.05356216]
[19.20151711 -33.23899460]
[12.04998589 -46.42442322]
[4.89845467 -59.60985565]
[-10.45692062 -59.93850327]
[-23.58241653 -67.91452789]
[-30.94734001 -81.39241791]
[-30.57056236 -96.74668121]
[-22.55343628 -109.84711456]
[-9.05252838 -117.16975403]
[6.30048561 -116.74485016]
[19.37572098 -108.68669891]
[26.65600586 -95.16291046]
[26.18298149 -79.81130219]
[18.08388710 -66.76139069]
[25.23541832 -53.57595444]
[32.38694763 -40.39052582]
[39.53847885 -27.20509338]
[46.69001007 -14.01966190]
[59.55928802 -6.52092695]
[59.33746719 9.29872417]
[66.48899841 22.48415565]
[73.64053345 35.66958618]
[80.79206085 48.85501862]
[87.94359589 62.04045105]
[101.84009552 60.21434402]
[115.50872040 63.31534195]
[127.25672150 70.95941925]
[135.62922668 82.19991302]
[139.58935547 95.64479828]
[154.54153442 96.84159088]
[169.49371338 98.03837585]
[184.44589233 99.23516846]
[199.39807129 100.43196106]
[214.38330078 101.09733582]
[229.38272095 101.23045349]
[244.38212585 101.36357117]
[259.38153076 101.49668121]
[274.38095093 101.62979889]
[289.38034058 101.76291656]
[279.11145020 90.82902527]
[280.25787354 75.87290192]
[292.07318115 66.63179016]
[306.86502075 69.12216949]
[315.00305176 81.72265625]
[311.18927002 96.22930908]
[324.31072998 88.96104431]
[337.43215942 81.69277954]
[350.55361938 74.42451477]
[363.67504883 67.15625763]
[376.79650879 59.88799286]
[384.77853394 45.56251526]
[401.17767334 45.58299255]
[409.12390137 59.92835999]
[400.44281006 73.84133148]
[384.06475830 73.00943756]
[370.94332886 80.27770233]
[357.82186890 87.54596710]
[344.70043945 94.81422424]
[331.57897949 102.08248901]
[318.45755005 109.35075378]
[319.38876343 124.32182312]
[333.30978394 129.90798950]
[343.08493042 125.04872894]
[353.70034790 126.36216736]
[361.66186523 133.17164612]
[364.48385620 143.03219604]
[378.19784546 149.10891724]
[391.91183472 155.18563843]
[407.66336060 153.70233154]
[416.16497803 165.93228149]
[429.87896729 172.00900269]
[443.59295654 178.08572388]
[457.30694580 184.16244507]
[471.02093506 190.23916626]
[484.73492432 196.31587219]
[498.44891357 202.39259338]
[514.68878174 200.11241150]
[524.56878662 213.20123291]
[517.92523193 228.19441223]
[501.59246826 229.66824341]
[492.37219238 216.10658264]
[478.65820312 210.02986145]
[464.94421387 203.95315552]
[451.23022461 197.87643433]
[437.51623535 191.79971313]
[423.80224609 185.72299194]
[410.08825684 179.64627075]
[395.31765747 181.56422424]
[385.83511353 168.89962769]
[372.12112427 162.82290649]
[358.40713501 156.74618530]
[339.40618896 160.23191833]
[327.72360229 143.82901001]
[313.80261230 138.24284363]
[289.24722290 116.76232910]
[274.24783325 116.62921143]
[259.24841309 116.49609375]
[244.24900818 116.36297607]
[229.24960327 116.22985840]
[214.25018311 116.09674835]
[212.14805603 117.99583435]
[209.15539551 119.16318512]
[205.55207825 119.25101471]
[201.74008179 118.02104950]
[198.20127869 115.38414001]
[183.24909973 114.18734741]
[168.29692078 112.99056244]
[153.34474182 111.79376984]
[138.39256287 110.59697723]
[133.99418640 120.75282288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 57]
[7 56]
[8 55]
[9 54]
[10 53]
[11 52]
[12 51]
[13 49]
[14 48]
[15 46]
[16 45]
[17 44]
[18 43]
[19 42]
[22 39]
[23 38]
[24 37]
[25 36]
[59 90]
[60 89]
[61 88]
[62 87]
[63 86]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[95 175]
[96 174]
[97 173]
[98 172]
[99 171]
[100 166]
[101 165]
[102 164]
[103 163]
[104 162]
[105 161]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[127 160]
[128 159]
[132 157]
[133 156]
[134 155]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
