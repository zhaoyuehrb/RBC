%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR52B6)
} def

/sequence { (\
AUGGCACAGGUGAGGGCGCUGCAUAAAAUCAUGGCCCUUUUUUCUGCUAACAGCAUAGGUGCUAUGAACAACUCUGACACUCGCAUAGCAGGCUGCUUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.013864339 ubox
2 49 0.901406995 ubox
2 52 0.016595727 ubox
2 64 0.014821028 ubox
2 95 0.012913067 ubox
3 48 0.986802091 ubox
3 51 0.026628347 ubox
3 63 0.015079075 ubox
3 94 0.023189812 ubox
3 97 0.051802537 ubox
3 99 0.008677796 ubox
3 100 0.015038021 ubox
4 11 0.004990362 ubox
4 47 0.995732859 ubox
4 62 0.015113205 ubox
4 84 0.003849193 ubox
4 93 0.024030525 ubox
4 96 0.056060253 ubox
4 98 0.007005995 ubox
4 99 0.014993313 ubox
5 10 0.005157749 ubox
5 46 0.994973574 ubox
5 61 0.015113331 ubox
5 83 0.003959754 ubox
5 92 0.023977192 ubox
5 95 0.055930327 ubox
6 45 0.978960100 ubox
6 60 0.015093173 ubox
6 94 0.048319367 ubox
7 46 0.070214747 ubox
7 59 0.015023979 ubox
7 95 0.019658631 ubox
8 40 0.003836224 ubox
8 41 0.029400041 ubox
8 42 0.069930652 ubox
8 43 0.842583061 ubox
8 45 0.102357622 ubox
8 94 0.020879718 ubox
8 98 0.008497464 ubox
9 40 0.027028290 ubox
9 41 0.076774991 ubox
9 42 0.879611330 ubox
9 43 0.042990363 ubox
9 44 0.129753464 ubox
9 45 0.009038864 ubox
9 48 0.003283289 ubox
9 93 0.021992729 ubox
9 94 0.012547084 ubox
9 97 0.009835538 ubox
9 100 0.012855930 ubox
10 39 0.012789992 ubox
10 40 0.063828731 ubox
10 41 0.871023577 ubox
10 42 0.047101932 ubox
10 43 0.120561669 ubox
10 44 0.012704233 ubox
10 47 0.003408329 ubox
10 56 0.004375789 ubox
10 78 0.004128263 ubox
10 84 0.003750120 ubox
10 93 0.016503570 ubox
10 96 0.009992461 ubox
10 99 0.012947918 ubox
11 46 0.003397179 ubox
11 55 0.004333560 ubox
11 77 0.004121710 ubox
11 83 0.003751815 ubox
11 92 0.015546450 ubox
11 95 0.009762901 ubox
12 39 0.983801175 ubox
12 40 0.037040920 ubox
12 41 0.015076370 ubox
12 42 0.004939165 ubox
12 54 0.003916505 ubox
12 82 0.003758931 ubox
12 98 0.010457802 ubox
12 99 0.006921450 ubox
13 38 0.997973087 ubox
13 39 0.031049192 ubox
13 40 0.009570741 ubox
13 41 0.003231687 ubox
13 75 0.004231343 ubox
13 81 0.003751335 ubox
13 97 0.011227554 ubox
13 98 0.006899057 ubox
14 37 0.999579282 ubox
14 38 0.021683929 ubox
14 39 0.003563826 ubox
14 74 0.004259773 ubox
14 80 0.003736431 ubox
14 96 0.011198441 ubox
14 97 0.006733880 ubox
15 36 0.999592221 ubox
15 37 0.021652928 ubox
15 73 0.004203151 ubox
15 94 0.013751246 ubox
15 96 0.006503510 ubox
16 35 0.999586676 ubox
16 36 0.021534670 ubox
16 72 0.004128201 ubox
16 93 0.015122265 ubox
17 33 0.027079252 ubox
17 34 0.999154628 ubox
17 92 0.015122220 ubox
18 32 0.036405013 ubox
18 35 0.021958897 ubox
18 93 0.005866189 ubox
19 34 0.022258227 ubox
19 91 0.015779990 ubox
19 92 0.004493745 ubox
20 31 0.944015685 ubox
20 33 0.019800914 ubox
20 90 0.016254314 ubox
21 30 0.947083509 ubox
21 32 0.013101031 ubox
21 89 0.016406005 ubox
22 33 0.141602378 ubox
22 76 0.003193297 ubox
22 88 0.016376340 ubox
23 29 0.372424620 ubox
23 32 0.141430245 ubox
23 86 0.003869125 ubox
24 28 0.332263215 ubox
24 31 0.134835032 ubox
24 33 0.008503653 ubox
24 85 0.003661508 ubox
24 87 0.004751848 ubox
25 32 0.008092398 ubox
25 86 0.004527842 ubox
29 67 0.016946989 ubox
30 66 0.017958071 ubox
31 65 0.017959451 ubox
32 64 0.017953846 ubox
33 63 0.017959945 ubox
34 62 0.017969032 ubox
35 61 0.017966516 ubox
36 59 0.017591495 ubox
37 58 0.017589685 ubox
37 59 0.003580606 ubox
38 57 0.017106322 ubox
38 58 0.003546598 ubox
39 57 0.003610072 ubox
42 58 0.005315573 ubox
43 57 0.006039502 ubox
43 92 0.042097806 ubox
44 53 0.015940026 ubox
44 58 0.004071925 ubox
44 91 0.064474045 ubox
45 52 0.016016484 ubox
45 55 0.018032177 ubox
45 90 0.064596814 ubox
46 51 0.015945594 ubox
46 54 0.020702346 ubox
46 89 0.064649384 ubox
47 53 0.020781413 ubox
47 58 0.009761300 ubox
47 88 0.064652334 ubox
48 52 0.018731696 ubox
48 57 0.009803480 ubox
48 87 0.064576933 ubox
49 56 0.009353015 ubox
49 86 0.063676662 ubox
49 98 0.044188156 ubox
50 60 0.003297741 ubox
50 97 0.067740373 ubox
51 59 0.003763566 ubox
51 76 0.004478690 ubox
51 95 0.407438776 ubox
52 63 0.010127059 ubox
52 75 0.004494195 ubox
52 94 0.409143542 ubox
52 97 0.846685671 ubox
52 98 0.039693231 ubox
53 60 0.003600813 ubox
53 62 0.010703294 ubox
53 74 0.004486399 ubox
53 84 0.066310136 ubox
53 93 0.409410835 ubox
53 96 0.906153049 ubox
53 97 0.009450626 ubox
54 59 0.004797275 ubox
54 61 0.010704502 ubox
54 66 0.008656174 ubox
54 83 0.066310674 ubox
54 92 0.407434698 ubox
54 95 0.906007307 ubox
55 60 0.009395919 ubox
55 65 0.009131802 ubox
55 94 0.862012561 ubox
56 64 0.009191196 ubox
56 95 0.059828074 ubox
57 63 0.009192342 ubox
57 75 0.003264018 ubox
57 81 0.006028624 ubox
57 94 0.169901693 ubox
57 98 0.007566349 ubox
58 62 0.008992526 ubox
58 74 0.003293346 ubox
58 80 0.005370496 ubox
58 81 0.066338627 ubox
58 82 0.008662227 ubox
58 93 0.238944522 ubox
58 94 0.063982757 ubox
58 97 0.009308847 ubox
58 100 0.004900836 ubox
59 72 0.004487496 ubox
59 78 0.005223733 ubox
59 80 0.067866123 ubox
59 84 0.003590137 ubox
59 86 0.099984957 ubox
59 89 0.011101763 ubox
59 93 0.090196487 ubox
59 96 0.009509242 ubox
59 99 0.004936851 ubox
60 71 0.004336331 ubox
60 77 0.005188088 ubox
60 79 0.067932304 ubox
60 83 0.003587984 ubox
60 85 0.101013972 ubox
60 88 0.007796319 ubox
60 90 0.968295637 ubox
60 92 0.071358073 ubox
60 95 0.007715459 ubox
61 78 0.067826953 ubox
61 82 0.003530743 ubox
61 84 0.101171700 ubox
61 89 0.991980974 ubox
62 83 0.100994581 ubox
62 88 0.992086961 ubox
63 76 0.051017421 ubox
63 87 0.991793967 ubox
64 75 0.050366383 ubox
64 86 0.991375568 ubox
65 76 0.004466032 ubox
65 79 0.044978666 ubox
65 83 0.054410781 ubox
65 85 0.989336137 ubox
66 74 0.071635837 ubox
66 75 0.004608131 ubox
66 78 0.047102720 ubox
66 82 0.089244054 ubox
66 84 0.985062798 ubox
66 99 0.010139466 ubox
67 73 0.072337553 ubox
67 81 0.096976854 ubox
67 98 0.010170358 ubox
68 97 0.009951005 ubox
69 76 0.247947395 ubox
69 95 0.010031756 ubox
70 75 0.224316256 ubox
70 94 0.009857720 ubox
72 92 0.008085413 ubox
73 92 0.007157651 ubox
74 91 0.011810513 ubox
75 83 0.307952432 ubox
75 85 0.009824035 ubox
75 90 0.011849666 ubox
76 82 0.317672937 ubox
76 84 0.011666240 ubox
76 89 0.011814954 ubox
77 81 0.276549761 ubox
78 95 0.004240487 ubox
79 94 0.004229516 ubox
80 88 0.003849578 ubox
80 91 0.004385901 ubox
80 92 0.004154535 ubox
81 87 0.003712681 ubox
81 90 0.004387518 ubox
81 91 0.004096597 ubox
82 91 0.005459889 ubox
83 89 0.012269730 ubox
83 93 0.004794912 ubox
83 96 0.009513155 ubox
84 88 0.012197106 ubox
84 92 0.004799352 ubox
84 95 0.009523314 ubox
85 94 0.009239994 ubox
87 97 0.019465861 ubox
88 96 0.021060255 ubox
89 95 0.021063900 ubox
90 94 0.017072900 ubox
90 97 0.005085119 ubox
91 96 0.006463707 ubox
91 100 0.008965187 ubox
92 99 0.008965831 ubox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
8 43 0.9500000 lbox
9 42 0.9500000 lbox
10 41 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
17 34 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
52 97 0.9500000 lbox
53 96 0.9500000 lbox
54 95 0.9500000 lbox
55 94 0.9500000 lbox
60 90 0.9500000 lbox
61 89 0.9500000 lbox
62 88 0.9500000 lbox
63 87 0.9500000 lbox
64 86 0.9500000 lbox
65 85 0.9500000 lbox
66 84 0.9500000 lbox
showpage
end
%%EOF
