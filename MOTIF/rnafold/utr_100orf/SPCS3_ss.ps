%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:03:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGAGGCGGGGCUGCGGCGGCGCGCGCUCCCGGAACGCGCGCACCGCAGACGGCGCGGAUCGCAGGGAGCCGGUCCGCCGCCGGAACGGGAGCCUGGGUGUGCGUGUGGAGUCCGGACUCGUGGGAGACGAUCGCGAUGAACACGGUGCUGUCGCGGGCGAACUCACUGUUCGCCUUCUCGCUGAGCGUGAUGGCGGCGCUCACCUUCGGCUGCUUCAUCACCACCGCCUUCAAAG\
) } def
/len { sequence length } bind def

/coor [
[76.75462341 321.95599365]
[71.82982635 307.24118042]
[76.52683258 292.45205688]
[89.03955078 283.27539062]
[88.84238434 268.27667236]
[88.64521790 253.27796936]
[88.44805145 238.27926636]
[88.25089264 223.28056335]
[88.05372620 208.28186035]
[87.85655975 193.28315735]
[87.65939331 178.28445435]
[87.36365509 163.28736877]
[86.96936035 148.29255676]
[73.23693085 142.25761414]
[61.92419434 152.10758972]
[50.61146164 161.95756531]
[39.29872513 171.80754089]
[27.98599052 181.65753174]
[16.67325592 191.50750732]
[15.01105881 204.28555298]
[5.40191221 212.25694275]
[-6.66340446 211.57444763]
[-18.10463333 221.27487183]
[-29.54586220 230.97529602]
[-40.98709106 240.67572021]
[-52.42832184 250.37615967]
[-63.86954880 260.07656860]
[-75.31078339 269.77700806]
[-80.83316803 284.60311890]
[-95.54454803 286.93215942]
[-106.98577881 296.63259888]
[-115.15692139 311.48751831]
[-131.69329834 307.74798584]
[-132.67762756 290.82263184]
[-116.68621063 285.19137573]
[-105.24497986 275.49093628]
[-100.54093933 261.35867310]
[-85.01120758 258.33578491]
[-73.56997681 248.63534546]
[-62.12874603 238.93492126]
[-50.68751907 229.23449707]
[-39.24628830 219.53407288]
[-27.80505943 209.83364868]
[-16.36383057 200.13322449]
[-11.33402348 183.31204224]
[6.82328033 180.19476318]
[18.13601494 170.34478760]
[29.44874954 160.49481201]
[40.76148605 150.64483643]
[52.07421875 140.79486084]
[63.38695526 130.94488525]
[56.76461411 114.17395020]
[57.03946304 97.06938934]
[42.48079681 93.45757294]
[27.92213058 89.84574890]
[13.36346436 86.23393250]
[-1.19520175 82.62210846]
[-15.77729130 79.10605621]
[-30.38217545 75.68591309]
[-44.98705673 72.26576233]
[-59.59194183 68.84561920]
[-74.19682312 65.42547607]
[-88.80170441 62.00533295]
[-103.42875671 58.68125153]
[-118.07733154 55.45337677]
[-132.31658936 62.84412766]
[-146.91374207 56.18811798]
[-150.67112732 40.59126663]
[-140.70637512 28.01814651]
[-124.66360474 28.11377716]
[-114.84945679 40.80479813]
[-100.20087433 44.03267288]
[-93.00621796 42.40578079]
[-85.38156128 47.40045166]
[-70.77667999 50.82059479]
[-56.17179871 54.24073792]
[-41.56691360 57.66088104]
[-26.96203041 61.08102417]
[-12.35714722 64.50116730]
[-5.14172411 62.96898651]
[2.41661859 68.06344604]
[16.97528458 71.67526245]
[31.53395081 75.28708649]
[46.09261703 78.89890289]
[60.65128326 82.51072693]
[69.76902771 69.33594513]
[83.07215881 60.40650940]
[98.71891022 56.95868301]
[114.54301453 59.46980286]
[128.35368347 67.59220886]
[140.04595947 58.19588852]
[145.95616150 43.52005386]
[160.72367859 41.57852173]
[172.41593933 32.18219757]
[184.10821533 22.78587151]
[195.80047607 13.38954544]
[202.07400513 -3.93234706]
[219.51890564 -5.91382456]
[231.08665466 -15.46302509]
[242.65440369 -25.01222610]
[254.22215271 -34.56142807]
[265.78988647 -44.11062622]
[271.50668335 -58.86287689]
[286.24740601 -60.99835205]
[297.81515503 -70.54755402]
[309.38290405 -80.09675598]
[320.95065308 -89.64595795]
[328.64898682 -102.51979828]
[331.58740234 -117.22916412]
[334.52584839 -131.93853760]
[324.55334473 -146.32208252]
[328.01028442 -163.13481140]
[342.27572632 -172.05802917]
[345.02056885 -186.80476379]
[347.76541138 -201.55148315]
[339.09207153 -214.49020386]
[342.08578491 -229.40638733]
[354.47433472 -237.59536743]
[357.21917725 -252.34208679]
[355.71420288 -261.33190918]
[360.09823608 -267.26403809]
[363.03668213 -281.97341919]
[365.97512817 -296.68280029]
[368.91357422 -311.39215088]
[361.24349976 -325.48294067]
[367.61044312 -340.20849609]
[383.13015747 -344.27264404]
[395.89730835 -334.55770874]
[396.11798096 -318.51617432]
[383.62292480 -308.45370483]
[380.68450928 -293.74435425]
[377.74606323 -279.03497314]
[374.80761719 -264.32562256]
[371.96591187 -249.59724426]
[369.22106934 -234.85052490]
[377.83355713 -222.75256348]
[375.25997925 -207.75819397]
[362.51214600 -198.80664062]
[359.76730347 -184.05992126]
[357.02246094 -169.31318665]
[365.72186279 -159.82295227]
[367.39773560 -146.86219788]
[361.21713257 -135.12716675]
[349.23522949 -129.00009155]
[346.29678345 -114.29072571]
[343.35833740 -99.58135986]
[348.53826904 -94.15747833]
[358.89810181 -83.30971527]
[364.07800293 -77.88583374]
[378.90695190 -80.14467621]
[393.73590088 -82.40351868]
[408.56484985 -84.66236115]
[423.39379883 -86.92120361]
[438.22274780 -89.18004608]
[453.05169678 -91.43888855]
[467.88061523 -93.69773102]
[482.70956421 -95.95657349]
[497.53851318 -98.21540833]
[509.73226929 -142.70611572]
[524.08099365 -147.07807922]
[538.42974854 -151.45002747]
[552.77844238 -155.82199097]
[567.12719727 -160.19393921]
[581.47589111 -164.56590271]
[595.82464600 -168.93785095]
[604.60839844 -182.36265564]
[620.59375000 -183.72193909]
[631.51812744 -171.97299194]
[629.00128174 -156.12860107]
[614.97387695 -148.34321594]
[600.19659424 -154.58912659]
[585.84783936 -150.21717834]
[571.49914551 -145.84521484]
[557.15039062 -141.47326660]
[542.80169678 -137.10130310]
[528.45294189 -132.72935486]
[514.10424805 -128.35739136]
[514.74426270 -120.88475037]
[516.02429199 -105.93946838]
[516.66430664 -98.46682739]
[531.54754639 -96.59857178]
[546.43072510 -94.73030853]
[562.89959717 -98.75679016]
[571.32775879 -84.04616547]
[559.52520752 -71.87507629]
[544.56243896 -79.84710693]
[529.67926025 -81.71537018]
[514.79608154 -83.58363342]
[499.79736328 -83.38646698]
[484.96841431 -81.12762451]
[470.13946533 -78.86878204]
[455.31051636 -76.60993958]
[440.48156738 -74.35109711]
[425.65261841 -72.09225464]
[410.82369995 -69.83341217]
[395.99475098 -67.57456970]
[381.16580200 -65.31573486]
[366.33685303 -63.05688858]
[330.49984741 -78.07820892]
[318.93209839 -68.52900696]
[307.36434937 -58.97980881]
[295.79660034 -49.43060684]
[290.90722656 -35.36138153]
[275.33908081 -32.54288101]
[263.77136230 -22.99368095]
[252.20359802 -13.44447899]
[240.63584900 -3.89527869]
[229.06811523 5.65392208]
[227.61006165 17.65024567]
[218.06761169 25.70134926]
[205.19680786 25.08181190]
[193.50453186 34.47813797]
[181.81227112 43.87446213]
[170.12001038 53.27078629]
[165.04611206 67.27452850]
[149.44227600 69.88815308]
[137.75001526 79.28447723]
[142.78088379 90.80800629]
[144.31689453 103.49042511]
[142.11441040 116.27850342]
[136.24520874 128.07691956]
[127.09979248 137.84199524]
[115.36315155 144.67376709]
[101.96417236 147.89825439]
[102.35847473 162.89306641]
[105.70708466 171.37062073]
[102.65809631 178.08729553]
[102.85526276 193.08599854]
[103.05242920 208.08470154]
[103.24959564 223.08340454]
[103.44676208 238.08210754]
[103.64392090 253.08081055]
[103.84108734 268.07952881]
[104.03825378 283.07821655]
[116.78787231 291.92282104]
[121.87200928 306.58334351]
[117.33571625 321.42254639]
[104.92327881 330.73440552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 234]
[5 233]
[6 232]
[7 231]
[8 230]
[9 229]
[10 228]
[11 227]
[12 225]
[13 224]
[14 51]
[15 50]
[16 49]
[17 48]
[18 47]
[19 46]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[30 36]
[31 35]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[58 79]
[59 78]
[60 77]
[61 76]
[62 75]
[63 74]
[64 72]
[65 71]
[90 217]
[91 216]
[93 214]
[94 213]
[95 212]
[96 211]
[98 208]
[99 207]
[100 206]
[101 205]
[102 204]
[104 202]
[105 201]
[106 200]
[107 199]
[108 146]
[109 145]
[110 144]
[113 140]
[114 139]
[115 138]
[118 135]
[119 134]
[121 133]
[122 132]
[123 131]
[124 130]
[149 198]
[150 197]
[151 196]
[152 195]
[153 194]
[154 193]
[155 192]
[156 191]
[157 190]
[158 189]
[159 177]
[160 176]
[161 175]
[162 174]
[163 173]
[164 172]
[165 171]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
