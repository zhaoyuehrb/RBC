%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCACUUCCGGUGUCGCGCGGCGGCUCCCGGCAGGAGGCAGAGGGCACACCGCCAGCCCCAGGCCAGGCUGCGAGGGCCGCGGACCCGAGCCGGGAAGGACCUUGGGCGGACGAGCCGCGCGUCCCGCAGCCAUGGAGCAGGACGACCCGGUCGAGGCGCUGACGGAGCUGCGCGAGCGGCGGCUGGGCGCGCUGGAGCUGCUGCAGGCGGCGGCCGGCUCGGGCUUGGCAG\
) } def
/len { sequence length } bind def

/coor [
[150.99015808 515.66418457]
[149.78315735 500.71282959]
[148.57615662 485.76144409]
[147.36917114 470.81008911]
[133.85415649 464.54830933]
[125.23066711 452.28079224]
[123.89659882 437.24462891]
[130.30996704 423.46908569]
[142.83917236 414.69604492]
[141.63217163 399.74468994]
[140.42517090 384.79333496]
[139.21817017 369.84194946]
[138.01116943 354.89059448]
[136.70384216 339.94769287]
[135.29621887 325.01388550]
[133.88861084 310.08007812]
[132.48098755 295.14627075]
[131.07337952 280.21246338]
[129.46540833 265.29888916]
[127.65735626 250.40824890]
[125.84930420 235.51762390]
[124.04125214 220.62698364]
[122.23320007 205.73635864]
[120.42514801 190.84571838]
[118.61710358 175.95509338]
[116.80905151 161.06445312]
[115.00099945 146.17382812]
[113.19294739 131.28318787]
[97.39308929 132.19221497]
[83.70418549 125.95177460]
[74.98995209 114.66043091]
[60.52745438 118.63988495]
[46.06495285 122.61934662]
[33.42950058 136.02450562]
[16.63283157 130.91793823]
[2.22505999 135.09120178]
[-5.13291597 140.47631836]
[-12.40420437 139.22238159]
[-26.86670494 143.20184326]
[-41.32920456 147.18130493]
[-44.84531784 155.89959717]
[-51.86800385 161.94021606]
[-60.74666977 164.04969788]
[-69.46917725 161.87956238]
[-76.11774445 156.03684998]
[-90.72875214 159.43074036]
[-105.33975983 162.82463074]
[-115.00927734 175.62619019]
[-131.04992676 175.90385437]
[-141.15669250 163.44461060]
[-137.57653809 147.80612183]
[-123.05584717 140.98490906]
[-108.73364258 148.21362305]
[-94.12263489 144.81973267]
[-79.51162720 141.42584229]
[-65.69518280 126.08262634]
[-45.30866241 132.71879578]
[-30.84616280 128.73933411]
[-16.38366318 124.75988007]
[-1.94820189 120.68342590]
[12.45956993 116.51016998]
[18.56087685 106.07665253]
[30.51751900 102.47573090]
[42.08549500 108.15684509]
[56.54799652 104.17738342]
[71.01049805 100.19792938]
[73.64432526 87.92486572]
[81.21934509 77.91567230]
[74.78895569 64.36391449]
[68.35857391 50.81215668]
[61.92818451 37.26039886]
[55.49779510 23.70864296]
[49.06740570 10.15688705]
[42.63701630 -3.39486980]
[36.14133835 -9.79372883]
[36.21263504 -17.17200089]
[29.96476173 -30.80886650]
[23.71688843 -44.44573212]
[17.46901321 -58.08259583]
[11.12973976 -71.67720795]
[4.69935179 -85.22896576]
[-1.73103666 -98.78072357]
[-8.16142464 -112.33248138]
[-14.59181309 -125.88423920]
[-33.85758209 -131.63757324]
[-42.52349472 -149.44094849]
[-35.39025116 -167.58346558]
[-42.36109924 -180.86529541]
[-49.33194351 -194.14714050]
[-61.38233566 -198.71673584]
[-66.91822815 -209.90966797]
[-63.46426773 -221.49217224]
[-70.25617981 -234.86640930]
[-77.04808807 -248.24063110]
[-83.83999634 -261.61486816]
[-90.63190460 -274.98907471]
[-105.73198700 -279.65417480]
[-113.03665161 -293.66906738]
[-108.21217346 -308.71899414]
[-94.12082672 -315.87509155]
[-79.12276459 -310.89175415]
[-72.11605835 -296.72552490]
[-77.25767517 -281.78100586]
[-70.46576691 -268.40676880]
[-63.67385864 -255.03253174]
[-56.88195038 -241.65830994]
[-50.09004211 -228.28408813]
[-34.88822937 -219.50285339]
[-36.05010605 -201.11798096]
[-29.07925797 -187.83615112]
[-22.10840988 -174.55430603]
[-11.87515640 -174.25611877]
[-2.61285758 -169.70898438]
[3.98396802 -161.67034912]
[6.67777157 -151.54289246]
[4.91971779 -141.12998962]
[-1.04005694 -132.31462097]
[5.39033127 -118.76287079]
[11.82071972 -105.21111298]
[18.25110817 -91.65935516]
[24.68149757 -78.10759735]
[30.37941170 -73.41955566]
[31.10587883 -64.33046722]
[37.35375214 -50.69360352]
[43.60162735 -37.05673981]
[49.84949875 -23.41987419]
[56.18877411 -9.82525826]
[62.61916351 3.72649813]
[69.04955292 17.27825546]
[75.47994232 30.83001137]
[81.91032410 44.38176727]
[88.34071350 57.93352509]
[94.77110291 71.48528290]
[102.37132263 70.39590454]
[110.17556763 71.34545898]
[117.63410187 74.36277008]
[124.19722748 79.32798767]
[129.35556030 85.97494507]
[132.67893982 93.90439606]
[133.85102844 102.60761261]
[148.54788208 99.60722351]
[163.24475098 96.60684204]
[171.97369385 83.70554352]
[186.92114258 80.87209320]
[199.16674805 89.27330780]
[213.86361694 86.27292633]
[221.63105774 81.49734497]
[228.77786255 83.33230591]
[243.51367188 80.52950287]
[258.24948120 77.72669220]
[272.98532104 74.92388916]
[287.72113037 72.12107849]
[302.45693970 69.31827545]
[317.19274902 66.51546478]
[331.92858887 63.71266174]
[337.50546265 54.39766312]
[347.08682251 49.77669907]
[357.41345215 51.15418243]
[365.11697388 57.83776474]
[379.92272949 55.43159485]
[394.72848511 53.02542877]
[409.53424072 50.61925888]
[418.77557373 38.07990646]
[433.82498169 35.85062408]
[445.72238159 44.73810959]
[460.52813721 42.33193970]
[469.56158447 29.36380196]
[485.13354492 26.66382790]
[498.00543213 35.83386612]
[500.54061890 51.43349457]
[491.23501587 64.20772552]
[475.60943604 66.57784271]
[462.93432617 57.13769531]
[448.12857056 59.54386139]
[439.65780640 71.74149323]
[424.67697144 74.39260101]
[411.94039917 65.42501068]
[397.13464355 67.83118439]
[382.32888794 70.23735046]
[367.52313232 72.64351654]
[353.46151733 85.92935181]
[334.73138428 78.44847870]
[319.99557495 81.25128174]
[305.25973511 84.05409241]
[290.52392578 86.85689545]
[275.78811646 89.65970612]
[261.05230713 92.46250916]
[246.31648254 95.26531219]
[231.58067322 98.06812286]
[216.86399841 100.96978760]
[202.16714478 103.97016907]
[194.19442749 116.49899292]
[179.33245850 119.75116730]
[166.24513245 111.30369568]
[151.54827881 114.30408478]
[136.85140991 117.30447388]
[128.08358765 129.47514343]
[129.89163208 144.36576843]
[131.69969177 159.25640869]
[133.50773621 174.14703369]
[135.31578064 189.03767395]
[137.12384033 203.92829895]
[138.93188477 218.81893921]
[140.73992920 233.70956421]
[142.54798889 248.60020447]
[144.35603333 263.49084473]
[148.00163269 268.97546387]
[148.29783630 274.63067627]
[146.00718689 278.80484009]
[147.41481018 293.73864746]
[148.82241821 308.67245483]
[150.23002625 323.60626221]
[151.63764954 338.54006958]
[155.55305481 346.77468872]
[152.96253967 353.68359375]
[154.16954041 368.63494873]
[155.37652588 383.58633423]
[156.58352661 398.53768921]
[157.79052734 413.48904419]
[171.56477356 420.13864136]
[180.10484314 432.70703125]
[181.20002747 447.76248169]
[174.65605164 461.25442505]
[162.32052612 469.60308838]
[163.52752686 484.55444336]
[164.73452759 499.50582886]
[165.94151306 514.45715332]
[178.79449463 523.36419678]
[182.86523438 538.46264648]
[176.23165894 552.62347412]
[162.02593994 559.16040039]
[146.95558167 554.98687744]
[138.13635254 542.07354736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 227]
[2 226]
[3 225]
[4 224]
[9 219]
[10 218]
[11 217]
[12 216]
[13 215]
[14 213]
[15 212]
[16 211]
[17 210]
[18 209]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 198]
[28 197]
[31 66]
[32 65]
[33 64]
[35 61]
[36 60]
[38 59]
[39 58]
[40 57]
[45 55]
[46 54]
[47 53]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[87 111]
[88 110]
[89 109]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[140 196]
[141 195]
[142 194]
[145 191]
[146 190]
[148 189]
[149 188]
[150 187]
[151 186]
[152 185]
[153 184]
[154 183]
[155 182]
[159 180]
[160 179]
[161 178]
[162 177]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
