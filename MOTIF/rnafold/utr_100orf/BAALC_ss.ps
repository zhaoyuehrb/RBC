%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGAGGAGGGACGGGCUGGGAGAGGGCCCGGACUAGGGGCGGCGGGCACCGCAGGAGCUCCGCGCGGCUGCAGCGCGGGCGGGAGCGGGGACGCGAUGUCGCCGCCGCCGCCUCCUUGCGGGCCGGGGCUGCGCCUCCGGGGCUGAGCCGCCGCCAGAGCCGACAGCCGAGCAGCCGCUGGGCGCUCCCGCGGCGCAGGAGGAUGGGCUGCGGCGGGAGCCGGGCGGAUGCCAUCGAGCCCCGCUACUACGA\
GAGCUGGACCCGGGAGACAGAAUCCACCUGGCUCACCUACACCGACUCGG\
) } def
/len { sequence length } bind def

/coor [
[104.70842743 405.32992554]
[116.86167145 395.68218994]
[116.09201050 380.70196533]
[115.32234955 365.72171021]
[102.35801697 354.97332764]
[101.17995453 337.83477783]
[113.00856781 324.91403198]
[112.08515167 309.94250488]
[111.16173553 294.97094727]
[109.96273041 294.73248291]
[108.77379608 294.44796753]
[101.67739868 307.66314697]
[106.00862122 322.62573242]
[98.62360382 335.92669678]
[84.33239746 339.96365356]
[77.23599243 353.17883301]
[70.13958740 366.39401245]
[63.04318619 379.60922241]
[55.94678116 392.82440186]
[48.85037994 406.03958130]
[54.81637573 420.49435425]
[50.04597473 435.38656616]
[36.79161835 443.68450928]
[21.31160545 441.47018433]
[10.91512585 429.78912354]
[10.51107788 414.15676880]
[20.29024124 401.95422363]
[35.63519669 398.94317627]
[42.73159790 385.72799683]
[49.82800293 372.51281738]
[56.92440414 359.29760742]
[64.02080536 346.08242798]
[71.11721039 332.86724854]
[66.58846283 318.72421265]
[73.59696960 305.22103882]
[88.46221161 300.56677246]
[95.55861664 287.35156250]
[84.88741302 259.35781860]
[102.33541870 234.50170898]
[98.97615814 219.88269043]
[95.61689758 205.26368713]
[92.25764465 190.64468384]
[88.89838409 176.02568054]
[78.83791351 169.36622620]
[75.89791107 157.25291443]
[82.17588806 146.02355957]
[78.96688843 131.37083435]
[68.41487885 120.70993042]
[53.79586792 117.35066986]
[39.17686081 113.99141693]
[30.16424561 115.11833954]
[24.42538261 110.52189636]
[9.84163284 107.01273346]
[-4.74211645 103.50356293]
[-19.32586670 99.99440002]
[-33.90961456 96.48522949]
[-48.51118469 93.05097198]
[-63.13019180 89.69171143]
[-77.74919891 86.33245087]
[-92.36820984 82.97319794]
[-93.56626129 91.93145752]
[-99.80080414 100.65804291]
[-110.81134033 106.71157837]
[-125.74736023 108.09560394]
[-140.68336487 109.47962952]
[-155.61938477 110.86365509]
[-170.55538940 112.24768066]
[-185.49140930 113.63170624]
[-194.24554443 126.58929443]
[-209.29470825 130.83860779]
[-223.53314209 124.37323761]
[-230.23789978 110.24594879]
[-226.24319458 95.12720490]
[-213.43519592 86.15562439]
[-197.86146545 87.56729889]
[-186.87542725 98.69569397]
[-171.93942261 97.31166840]
[-157.00340271 95.92764282]
[-142.06739807 94.54361725]
[-127.13138580 93.15959167]
[-112.19536591 91.77556610]
[-109.59064484 77.00344849]
[-123.15254211 70.59447479]
[-136.71443176 64.18550110]
[-150.27633667 57.77652359]
[-164.99694824 62.86978149]
[-178.65934753 56.17697525]
[-183.42427063 42.11172867]
[-196.98616028 35.70275497]
[-210.54806519 29.29377937]
[-224.10995483 22.88480377]
[-239.89292908 23.98397064]
[-248.09411621 11.55055428]
[-261.65600586 5.14157867]
[-275.21792603 -1.26739717]
[-290.74548340 2.76675653]
[-303.49380493 -6.97281551]
[-303.68350220 -23.01474762]
[-291.16903687 -33.05303955]
[-275.55041504 -29.38717842]
[-268.80892944 -14.82929325]
[-255.24703979 -8.42031765]
[-241.68515015 -2.01134229]
[-226.87220764 -3.56892157]
[-217.70097351 9.32290745]
[-204.13908386 15.73188305]
[-190.57719421 22.14085770]
[-177.01528931 28.54983521]
[-163.12324524 23.30135918]
[-149.27824402 29.60777855]
[-143.86735535 44.21462631]
[-130.30546570 50.62360382]
[-116.74356842 57.03257751]
[-103.18167114 63.44155502]
[-89.00894928 68.35418701]
[-74.38994598 71.71344757]
[-59.77093506 75.07270813]
[-45.15192795 78.43196106]
[-37.96589661 76.87542725]
[-30.40044785 81.90148163]
[-15.81669903 85.41064453]
[-1.23294926 88.91981506]
[13.35080051 92.42898560]
[27.93454933 95.93814850]
[42.53612137 99.37240601]
[57.15512848 102.73166656]
[71.77413177 106.09092712]
[73.55706787 92.95390320]
[80.79108429 82.69302368]
[91.32144165 77.25370789]
[90.55178070 62.27346802]
[89.78211975 47.29322815]
[89.01245880 32.31298447]
[88.24279785 17.33274460]
[87.39625549 2.35665131]
[86.47283936 -12.61489868]
[77.90066528 -25.91258049]
[84.83978271 -39.09202957]
[83.91637421 -54.06357956]
[82.99295807 -69.03512573]
[74.42078400 -82.33280945]
[81.35990143 -95.51226044]
[80.43649292 -110.48381042]
[79.43623352 -125.45042419]
[78.35916901 -140.41169739]
[77.28209686 -155.37298584]
[65.17064667 -165.52622986]
[63.86922455 -181.27684021]
[74.14994812 -193.28027344]
[89.91344452 -194.41508484]
[101.80750275 -184.00802612]
[102.77560425 -168.23342896]
[92.24337769 -156.45005798]
[93.32044983 -141.48876953]
[94.39751434 -126.52748871]
[97.99362183 -120.11423492]
[95.40804291 -111.40722656]
[96.33145142 -96.43567657]
[104.83758545 -84.20885468]
[97.96450806 -69.95854187]
[98.88792419 -54.98699188]
[99.81133270 -40.01544189]
[108.31745911 -27.78862572]
[101.44438934 -13.53831196]
[102.36780548 1.43323779]
[105.89787292 7.88307905]
[103.22303772 16.56308365]
[103.99269867 31.54332542]
[104.76235962 46.52356720]
[105.53202057 61.50380707]
[106.30168152 76.48404694]
[109.91005707 77.76260376]
[113.27340698 79.59098816]
[116.30856323 81.92399597]
[129.29893494 74.42399597]
[142.28932190 66.92399597]
[150.37197876 53.32320786]
[165.26275635 53.66027069]
[178.25314331 46.16027069]
[191.24353027 38.66027069]
[204.23390198 31.16027260]
[217.22428894 23.66027260]
[225.30693054 10.05948734]
[240.19772339 10.39654922]
[253.18811035 2.89654946]
[266.17849731 -4.60345030]
[274.26113892 -18.20423508]
[289.15191650 -17.86717224]
[302.14230347 -25.36717224]
[315.13269043 -32.86717224]
[328.08441162 -40.43375778]
[340.99710083 -48.06672668]
[353.90979004 -55.69969559]
[366.82250977 -63.33266830]
[379.73519897 -70.96563721]
[392.64788818 -78.59860992]
[405.56057739 -86.23157501]
[413.50317383 -99.91462708]
[428.39663696 -99.73045349]
[441.30935669 -107.36342621]
[444.99960327 -122.73084259]
[458.51889038 -130.91647339]
[473.84643555 -127.06394196]
[481.88867188 -113.45886993]
[477.87429810 -98.17292023]
[464.18496704 -90.27496338]
[448.94232178 -94.45072937]
[436.02963257 -86.81775665]
[429.01062012 -73.68067169]
[413.19357300 -73.31887817]
[400.28085327 -65.68591309]
[387.36816406 -58.05294037]
[374.45547485 -50.41996765]
[361.54275513 -42.78699875]
[348.63006592 -35.15402985]
[335.71737671 -27.52105904]
[331.57937622 -21.44332504]
[322.63269043 -19.87679100]
[309.64230347 -12.37679195]
[296.65191650 -4.87679148]
[289.49844360 8.18754292]
[273.67849731 8.38693047]
[260.68811035 15.88693047]
[247.69772339 23.38693047]
[240.54423523 36.45126343]
[224.72428894 36.65065384]
[211.73390198 44.15065384]
[198.74353027 51.65065384]
[185.75314331 59.15065384]
[172.76275635 66.65065002]
[165.60926819 79.71498871]
[149.78932190 79.91437531]
[136.79893494 87.41437531]
[123.80856323 94.91437531]
[124.41013336 107.29937744]
[118.69992828 118.93244934]
[107.61921692 126.67633820]
[93.61961365 128.16184998]
[96.82861328 142.81457520]
[109.54697418 156.16302490]
[103.51738739 172.66641235]
[106.87664795 187.28541565]
[110.23590851 201.90443420]
[113.59516907 216.52343750]
[116.95442200 231.14244080]
[123.43595123 231.91604614]
[129.61775208 233.96203613]
[135.25335693 237.19213867]
[140.11938477 241.47099304]
[144.02442932 246.62184143]
[146.81657410 252.43379211]
[148.38934326 258.67044067]
[148.68565369 265.07958984]
[147.69995117 271.40328979]
[145.47814941 277.38830566]
[142.11550903 282.79629517]
[151.63883972 294.38534546]
[161.16218567 305.97439575]
[170.68551636 317.56341553]
[180.20886230 329.15246582]
[189.73219299 340.74151611]
[199.25552368 352.33056641]
[209.70967102 350.69876099]
[219.82775879 353.50582886]
[227.82339478 360.18725586]
[232.31346130 369.50070190]
[232.55714417 379.75662231]
[228.57737732 389.12466431]
[237.73931885 401.00149536]
[246.90124512 412.87832642]
[262.53204346 413.33950806]
[274.17501831 423.77859497]
[276.33273315 439.26660156]
[267.98638916 452.49053955]
[253.07687378 457.20648193]
[238.64399719 451.18768311]
[231.50251770 437.27606201]
[235.02442932 422.04025269]
[225.86248779 410.16342163]
[216.70056152 398.28662109]
[197.21031189 397.15917969]
[184.70101929 381.77218628]
[187.66648865 361.85391235]
[178.14314270 350.26486206]
[168.61981201 338.67581177]
[159.09646606 327.08676147]
[149.57313538 315.49771118]
[140.04978943 303.90866089]
[130.52645874 292.31961060]
[128.36206055 293.26541138]
[126.13328552 294.04754639]
[127.05670166 309.01907349]
[127.98011780 323.99063110]
[139.01055908 331.66717529]
[143.55476379 344.10769653]
[140.16986084 356.71124268]
[130.30258179 364.95205688]
[131.07225037 379.93228149]
[131.84190369 394.91253662]
[144.91990662 403.26391602]
[150.56007385 417.71963501]
[146.59362793 432.72122192]
[134.54576111 442.50021362]
[119.04912567 443.29638672]
[106.06249237 434.80364990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 299]
[3 298]
[4 297]
[7 293]
[8 292]
[9 291]
[11 37]
[12 36]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[39 245]
[40 244]
[41 243]
[42 242]
[43 241]
[46 239]
[47 238]
[48 127]
[49 126]
[50 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 118]
[58 117]
[59 116]
[60 115]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[82 114]
[83 113]
[84 112]
[85 111]
[88 108]
[89 107]
[90 106]
[91 105]
[93 103]
[94 102]
[95 101]
[130 171]
[131 170]
[132 169]
[133 168]
[134 167]
[135 165]
[136 164]
[138 162]
[139 161]
[140 160]
[142 158]
[143 157]
[144 155]
[145 154]
[146 153]
[174 234]
[175 233]
[176 232]
[178 230]
[179 229]
[180 228]
[181 227]
[182 226]
[184 224]
[185 223]
[186 222]
[188 220]
[189 219]
[190 218]
[191 216]
[192 215]
[193 214]
[194 213]
[195 212]
[196 211]
[197 210]
[199 208]
[200 207]
[256 289]
[257 288]
[258 287]
[259 286]
[260 285]
[261 284]
[262 283]
[268 280]
[269 279]
[270 278]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
