%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGACGUCACAGCUAAGCGCCUCUGUAUCGUCGCGAAUCCGUCGCGGAACCUGUCUUCUGUCUUUACCCAGAGCUACCAUGAGCAAGCGGAACCAGGUAUCGUACGUGCGGCCAGCCGAGCCGGCGUUUCUGGCCCGCUUCAAGGAACGGGUCGGCUACAGGGAGGGACCCACCGUAG\
) } def
/len { sequence length } bind def

/coor [
[9.19779491 95.80895996]
[5.17121458 99.36244202]
[-3.85601091 111.34197235]
[-12.88323593 123.32151031]
[-21.91046143 135.30104065]
[-30.93768692 147.28057861]
[-39.96491241 159.26010132]
[-37.96421814 174.70791626]
[-47.28976059 186.72827148]
[-62.02922058 188.54043579]
[-71.05644226 200.51995850]
[-80.08367157 212.49949646]
[-89.11089325 224.47903442]
[-83.03591919 238.58541870]
[-84.84397125 253.83752441]
[-94.04869080 266.13259888]
[-108.17405701 272.16333008]
[-123.42041016 270.30746460]
[-135.68656921 261.06423950]
[-141.67298889 246.92005920]
[-139.76936340 231.67959595]
[-130.48774719 219.44247437]
[-116.32485199 213.50041199]
[-101.09043121 215.45179749]
[-92.06320190 203.47227478]
[-83.03598022 191.49273682]
[-74.00875092 179.51319885]
[-76.32954407 164.84523010]
[-67.34530640 152.56768799]
[-51.94444656 150.23287964]
[-42.91722107 138.25334167]
[-33.88999557 126.27381134]
[-24.86276817 114.29428101]
[-15.83554363 102.31475067]
[-6.80831814 90.33522034]
[-20.23627090 97.02027893]
[-34.22864151 91.61531830]
[-39.67562866 77.63925934]
[-33.03095245 64.19127655]
[-18.62065506 60.02674103]
[-5.82688189 67.85662842]
[-13.77567101 55.13591003]
[-21.72446060 42.41518784]
[-28.94672203 36.77590179]
[-29.69872665 29.40236855]
[-37.42429733 16.54485893]
[-45.14986801 3.68734956]
[-52.87543869 -9.17016029]
[-66.61521149 -17.01421165]
[-66.53808594 -31.90861702]
[-74.26365662 -44.76612854]
[-81.98922729 -57.62363815]
[-89.71479797 -70.48114777]
[-97.44036865 -83.33865356]
[-109.76000977 -87.21963501]
[-115.92547607 -98.11087799]
[-113.09927368 -109.89069366]
[-120.59927368 -122.88108063]
[-128.09927368 -135.87145996]
[-135.59927368 -148.86184692]
[-143.09927368 -161.85221863]
[-150.12033081 -167.74012756]
[-150.61454773 -175.13540649]
[-157.88668823 -188.25471497]
[-165.15882874 -201.37400818]
[-168.54870605 -186.76206970]
[-179.79092407 -176.83168030]
[-194.70956421 -175.27149963]
[-207.76309204 -182.66104126]
[-214.10278320 -196.25546265]
[-211.37374878 -211.00512695]
[-200.58969116 -221.43124390]
[-185.75634766 -223.66105652]
[-172.38252258 -216.86524963]
[-177.75804138 -230.86895752]
[-183.13356018 -244.87266541]
[-197.67161560 -251.07107544]
[-203.49104309 -265.76492310]
[-197.13928223 -280.23666382]
[-182.38470459 -285.90039062]
[-167.98094177 -279.39599609]
[-162.47351074 -264.58236694]
[-169.12985229 -250.24818420]
[-163.75433350 -236.24447632]
[-158.37881470 -222.24076843]
[-152.03953552 -208.64614868]
[-144.76739502 -195.52685547]
[-137.49525452 -182.40756226]
[-130.10888672 -169.35221863]
[-122.60889435 -156.36184692]
[-115.10889435 -143.37145996]
[-107.60889435 -130.38107300]
[-100.10889435 -117.39069366]
[-84.46495056 -109.46506500]
[-84.58285522 -91.06422424]
[-76.85728455 -78.20671844]
[-69.13171387 -65.34920502]
[-61.40614700 -52.49169922]
[-53.68057251 -39.63418961]
[-40.49338531 -32.70979309]
[-40.01792908 -16.89573097]
[-32.29235840 -4.03822184]
[-24.56678772 8.81928825]
[-16.84121704 21.67679787]
[-9.00373840 34.46640015]
[-1.05494940 47.18712234]
[6.89383936 59.90784454]
[18.87337303 68.93506622]
[33.29229736 73.06962585]
[47.71122360 77.20418549]
[62.13014984 81.33875275]
[76.54907227 85.47331238]
[84.42313385 75.05249786]
[96.87789154 68.91978455]
[111.58262634 69.03314972]
[125.41160583 76.09616089]
[138.65582275 69.05409241]
[151.90003967 62.01201630]
[165.14424133 54.96994400]
[176.29078674 42.19532013]
[191.65184021 49.36988068]
[189.01002502 66.11673737]
[172.18632507 68.21415710]
[158.94210815 75.25623322]
[145.69789124 82.29830170]
[132.45367432 89.34037781]
[133.89137268 104.27132416]
[148.23593140 108.65689850]
[162.06785583 101.49339294]
[176.55281067 106.14533234]
[183.29687500 119.37610626]
[197.64144897 123.76168060]
[211.98602295 128.14724731]
[226.33059692 132.53283691]
[240.67517090 136.91841125]
[255.01972961 141.30398560]
[269.36431885 145.68955994]
[283.70889282 150.07513428]
[292.85928345 149.59292603]
[298.26431274 154.66444397]
[312.53015137 159.29969788]
[326.79602051 163.93495178]
[343.72833252 163.07910156]
[349.23806763 179.11279297]
[335.35623169 188.84576416]
[322.16076660 178.20080566]
[307.89489746 173.56555176]
[293.62905884 168.93028259]
[279.32330322 164.41970825]
[264.97872925 160.03413391]
[250.63415527 155.64854431]
[236.28959656 151.26296997]
[221.94502258 146.87739563]
[207.60044861 142.49182129]
[193.25587463 138.10624695]
[178.91130066 133.72067261]
[165.92167664 140.91824341]
[151.31176758 136.67498779]
[143.85035706 123.00146484]
[129.50578308 118.61589050]
[123.84564209 120.17704010]
[118.37820435 120.57212067]
[124.95377350 134.05403137]
[131.52934265 147.53593445]
[146.16917419 154.09756470]
[150.02717590 169.66983032]
[140.14381409 182.30702209]
[124.10076904 182.31498718]
[114.20487976 169.68759155]
[118.04743195 154.11151123]
[111.47186279 140.62959290]
[104.89629364 127.14768982]
[82.26825714 121.13186646]
[72.41451263 99.89223480]
[57.99558640 95.75767517]
[43.57666397 91.62311554]
[29.15773773 87.48855591]
[14.73881149 83.35399628]
[13.98127747 87.54415131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[7 30]
[10 27]
[11 26]
[12 25]
[13 24]
[41 107]
[42 106]
[43 105]
[45 104]
[46 103]
[47 102]
[48 101]
[50 99]
[51 98]
[52 97]
[53 96]
[54 95]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[63 88]
[64 87]
[65 86]
[74 85]
[75 84]
[76 83]
[108 178]
[109 177]
[110 176]
[111 175]
[112 174]
[116 126]
[117 125]
[118 124]
[119 123]
[127 160]
[128 159]
[131 156]
[132 155]
[133 154]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[140 148]
[141 147]
[142 146]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
