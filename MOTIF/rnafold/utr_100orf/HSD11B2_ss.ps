%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCUCGCGCCCCAGGCCGGUGUACCCCCGCACUCCGCGCCCCGGCCUAGAAGCUCUCUCUCCCCGCUCCCCGGCCCGGCCCCCGCCCCGCCCCGCCCCAGCCCGCUGGGCCGCCAUGGAGCGCUGGCCUUGGCCGUCGGGCGGCGCCUGGCUGCUCGUGGCUGCCCGCGCGCUGCUGCAGCUGCUGCGCUCAGACCUGCGUCUGGGCCGCCCGC\
) } def
/len { sequence length } bind def

/coor [
[19.65742874 380.37573242]
[8.56582642 390.47406006]
[-5.60749054 395.38497925]
[-20.56919861 394.31384277]
[-33.89840317 387.43399048]
[-43.43836212 375.85864258]
[-47.64545441 361.46069336]
[-45.83811951 346.56741333]
[-55.60870743 357.94879150]
[-65.37929535 369.33016968]
[-75.14987946 380.71154785]
[-75.79880524 384.99459839]
[-77.59420776 388.49789429]
[-80.15097809 390.95712280]
[-83.03777313 392.25988770]
[-85.83044434 392.44763184]
[-96.24337769 403.24441528]
[-98.20443726 409.55075073]
[-102.42115784 413.35235596]
[-107.11750793 414.19754028]
[-117.83864594 424.68835449]
[-128.55978394 435.17916870]
[-139.28092957 445.66998291]
[-150.00207520 456.16079712]
[-149.92303467 471.96487427]
[-161.10153198 483.13702393]
[-176.90557861 483.04895020]
[-187.95890808 471.75296021]
[-187.70376587 455.95074463]
[-176.29153442 445.01745605]
[-160.49288940 445.43966675]
[-149.77174377 434.94885254]
[-139.05059814 424.45803833]
[-128.32946777 413.96722412]
[-117.60832214 403.47640991]
[-107.04017639 392.83148193]
[-96.62724304 382.03469849]
[-86.53125763 370.94094849]
[-76.76066589 359.55957031]
[-66.99008179 348.17822266]
[-57.21949387 336.79684448]
[-57.21614075 330.13845825]
[-53.06805420 323.86788940]
[-45.37337875 320.54159546]
[-37.53127289 307.75482178]
[-29.68916512 294.96807861]
[-21.84705734 282.18130493]
[-14.00495052 269.39453125]
[-6.16284370 256.60778809]
[1.67926335 243.82101440]
[9.52136993 231.03424072]
[17.36347771 218.24748230]
[17.42171669 203.35298157]
[31.23221397 195.63414001]
[39.07432175 182.84736633]
[32.84771729 171.04037476]
[33.27056885 157.59054565]
[40.33932877 146.01322937]
[52.29947281 139.38720703]
[66.07984161 139.53613281]
[74.10623932 126.86424255]
[82.13263702 114.19234467]
[75.87250519 101.59195709]
[78.08592987 86.87909698]
[88.88448334 75.49993134]
[105.04532623 72.18839264]
[103.52780151 57.26535034]
[102.01027679 42.34231186]
[100.49275208 27.41927147]
[98.97522736 12.49623203]
[87.01025391 2.52241158]
[85.68385315 -12.63329029]
[95.26609802 -23.97860146]
[93.74857330 -38.90164185]
[92.23104858 -53.82468033]
[90.71352386 -68.74771881]
[89.19599915 -83.67076111]
[78.07942963 -98.35339355]
[85.89580536 -114.06766510]
[84.16240692 -128.96716309]
[82.42900085 -143.86668396]
[80.69559479 -158.76618958]
[68.58747864 -168.56575012]
[67.04180908 -183.70065308]
[76.45881653 -195.18350220]
[74.72541046 -210.08300781]
[72.99200439 -224.98251343]
[63.71178818 -237.79611206]
[69.92648315 -251.33222961]
[68.19307709 -266.23175049]
[66.45967102 -281.13125610]
[53.09905624 -288.79937744]
[46.88812637 -302.70181274]
[50.01737595 -317.42156982]
[61.08175278 -327.35726929]
[59.34834671 -342.25677490]
[50.06813049 -355.07034302]
[56.28282547 -368.60647583]
[54.54942322 -383.50598145]
[52.81601715 -398.40548706]
[51.08261108 -413.30499268]
[49.34920883 -428.20449829]
[39.13451004 -441.03384399]
[45.38867188 -456.19357300]
[61.67795563 -458.08868408]
[71.24533844 -444.76962280]
[64.24871063 -429.93792725]
[65.98211670 -415.03842163]
[67.71552277 -400.13891602]
[69.44892883 -385.23941040]
[71.18233490 -370.33990479]
[80.33856201 -358.59201050]
[74.24785614 -343.99017334]
[75.98126221 -329.09066772]
[89.03107452 -321.96041870]
[95.45600128 -308.35217285]
[92.60256958 -293.39520264]
[81.35917664 -282.86465454]
[83.09258270 -267.96514893]
[84.82598877 -253.06564331]
[93.98222351 -241.31776428]
[87.89151001 -226.71591187]
[89.62491608 -211.81640625]
[91.35832214 -196.91690063]
[103.15995026 -187.90263367]
[105.13011932 -172.81710815]
[95.59510040 -160.49958801]
[97.32850647 -145.60008240]
[99.06191254 -130.70057678]
[100.79531860 -115.80107117]
[110.08055878 -108.05234528]
[111.64892578 -95.65670013]
[104.11904144 -85.18828583]
[105.63656616 -70.26524353]
[107.15409088 -55.34220505]
[108.67161560 -40.41916656]
[110.18914032 -25.49612617]
[121.85903168 -16.31194687]
[123.61060333 -1.19948053]
[113.89826965 10.97870731]
[115.41579437 25.90174675]
[116.93331909 40.82478714]
[118.45084381 55.74782562]
[119.96836853 70.67086792]
[130.30287170 81.54275513]
[145.12989807 83.81417847]
[159.95692444 86.08559418]
[174.78395081 88.35700989]
[191.78427124 81.27555084]
[205.03768921 92.78122711]
[219.89604187 94.83776093]
[234.75439453 96.89428711]
[249.61274719 98.95082092]
[264.47109985 101.00734711]
[279.32946777 103.06388092]
[294.18780518 105.12040710]
[304.92184448 97.97425842]
[317.25262451 99.99014282]
[324.66027832 109.54969788]
[339.48730469 111.82111359]
[354.31433105 114.09252930]
[369.14135742 116.36394501]
[383.96838379 118.63536072]
[392.92034912 116.84197998]
[398.99298096 121.04848480]
[413.78558350 123.53430939]
[428.95260620 117.29788208]
[441.76998901 127.52758026]
[439.05230713 143.69996643]
[423.59524536 149.17828369]
[411.29974365 138.32690430]
[396.50717163 135.84106445]
[381.69696045 133.46238708]
[366.86993408 131.19096375]
[352.04290771 128.91955566]
[337.21588135 126.64813995]
[322.38885498 124.37671661]
[306.40203857 131.61935425]
[292.13128662 119.97875977]
[277.27291870 117.92223358]
[262.41458130 115.86569977]
[247.55622864 113.80917358]
[232.69787598 111.75263977]
[217.83952332 109.69611359]
[202.98115540 107.63957977]
[193.15243530 114.68617249]
[180.75938416 113.09748077]
[172.51252747 103.18403625]
[157.68550110 100.91262054]
[142.85847473 98.64119720]
[128.03144836 96.36978149]
[123.02800751 113.01148987]
[109.89586639 122.55884552]
[94.80452728 122.21874237]
[86.77812958 134.89064026]
[78.75173187 147.56253052]
[85.20526123 163.19969177]
[81.10573578 179.44056702]
[68.26139069 189.93121338]
[51.86108780 190.68946838]
[44.01897812 203.47624207]
[43.39981842 219.28532410]
[30.15024185 226.08958435]
[22.30813599 238.87635803]
[14.46602821 251.66311646]
[6.62392139 264.44989014]
[-1.21818554 277.23663330]
[-9.06029224 290.02340698]
[-16.90239906 302.81018066]
[-24.74450684 315.59695435]
[-32.58661270 328.38369751]
[-18.96504021 322.10256958]
[-3.97052574 321.69689941]
[9.97072792 327.23239136]
[20.60294342 337.81332397]
[26.20576668 351.72763062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 41]
[9 40]
[10 39]
[11 38]
[16 37]
[17 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[44 211]
[45 210]
[46 209]
[47 208]
[48 207]
[49 206]
[50 205]
[51 204]
[52 203]
[54 201]
[55 200]
[60 196]
[61 195]
[62 194]
[66 144]
[67 143]
[68 142]
[69 141]
[70 140]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[79 130]
[80 129]
[81 128]
[82 127]
[85 124]
[86 123]
[87 122]
[89 120]
[90 119]
[91 118]
[95 114]
[96 113]
[98 111]
[99 110]
[100 109]
[101 108]
[102 107]
[145 191]
[146 190]
[147 189]
[148 188]
[150 185]
[151 184]
[152 183]
[153 182]
[154 181]
[155 180]
[156 179]
[159 177]
[160 176]
[161 175]
[162 174]
[163 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
