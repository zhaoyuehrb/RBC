%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUGAUUGGCUGUUGCCAUGGAUACGCUUUGUGUAGCGGCUAUGGGCGCUGUCUUACAACAAAGCCAAGGAAUCUCGCUGCUGAGGGUUCUGUGCUUUAUUAUGAAGAAUAAUGGACGAUGAUGAUGCAAAGCUCAAAGCAGAAAUAGAAGCUGAAUUGGAUAAACUCAGCAUUUCCUCCUUGGAAAAAGAAGACAUUGAGAGUGAUGCAA\
) } def
/len { sequence length } bind def

/coor [
[-37.23947144 381.39492798]
[-33.35481644 366.90631104]
[-43.64245224 377.82257080]
[-53.93008804 388.73880005]
[-52.64706802 407.64096069]
[-65.37018585 421.24450684]
[-83.67689514 421.22756958]
[-93.63652802 432.44387817]
[-103.59616089 443.66021729]
[-113.55579376 454.87652588]
[-123.51542664 466.09283447]
[-133.47505188 477.30914307]
[-143.43469238 488.52548218]
[-153.39431763 499.74179077]
[-163.35395813 510.95809937]
[-173.31358337 522.17443848]
[-183.18983459 533.46423340]
[-192.98217773 544.82690430]
[-196.13014221 560.33172607]
[-210.29988098 564.92175293]
[-220.09220886 576.28436279]
[-220.34330750 592.32550049]
[-233.12882996 602.01617432]
[-248.64083862 597.92260742]
[-254.97982788 583.18499756]
[-247.28308105 569.10882568]
[-231.45487976 566.49206543]
[-221.66253662 555.12939453]
[-219.21499634 540.43725586]
[-204.34483337 535.03454590]
[-194.55250549 523.67187500]
[-192.56727600 516.55346680]
[-184.52990723 512.21478271]
[-174.57026672 500.99847412]
[-164.61064148 489.78216553]
[-154.65100098 478.56582642]
[-144.69137573 467.34951782]
[-134.73173523 456.13320923]
[-124.77210999 444.91690063]
[-114.81247711 433.70056152]
[-104.85284424 422.48425293]
[-94.89321136 411.26794434]
[-98.02138519 400.29705811]
[-95.43874359 389.06207275]
[-87.67411041 380.37973022]
[-76.56999969 376.48379517]
[-64.84633636 378.45117188]
[-54.55870438 367.53494263]
[-44.27106857 356.61868286]
[-35.43631744 344.49649048]
[-28.19443512 331.36047363]
[-20.95255089 318.22445679]
[-13.71066856 305.08843994]
[-6.46878576 291.95239258]
[0.77309752 278.81637573]
[-7.88968420 269.69049072]
[-13.64733887 258.48220825]
[-16.02697754 246.09007263]
[-14.82697392 233.51074219]
[-10.13401318 221.75878906]
[-2.31690788 211.78491211]
[8.00236607 204.39898682]
[19.99814606 200.20434570]
[32.70714951 199.54847717]
[45.10582352 202.49426270]
[52.92433929 189.69305420]
[60.74285507 176.89186096]
[68.56137085 164.09065247]
[76.37989044 151.28945923]
[84.19841003 138.48825073]
[92.01692200 125.68704987]
[77.02275085 99.48014069]
[95.17048645 81.55446625]
[97.38518524 66.71885681]
[99.59988403 51.88325882]
[87.75571442 37.09635925]
[90.43592072 18.66402817]
[105.47605133 8.22706413]
[107.25015259 -6.66765165]
[109.02424622 -21.56236839]
[110.79834747 -36.45708466]
[112.57244110 -51.35180283]
[103.07110596 -63.69531631]
[105.08247375 -78.77540588]
[116.90868378 -87.75740814]
[118.68278503 -102.65212250]
[120.45687866 -117.54683685]
[122.23097992 -132.44155884]
[124.00507355 -147.33627319]
[116.79539490 -155.47924805]
[115.28801727 -166.02854919]
[119.74156952 -175.46752930]
[128.46739197 -180.78295898]
[130.68209839 -195.61856079]
[132.89678955 -210.45416260]
[127.28183746 -225.24548340]
[136.81347656 -236.69087219]
[139.02818298 -251.52647400]
[141.24287415 -266.36209106]
[143.45758057 -281.19769287]
[145.67227173 -296.03329468]
[147.88697815 -310.86889648]
[150.10166931 -325.70449829]
[136.89897156 -333.19134521]
[127.29541016 -344.94448853]
[122.58980560 -359.37438965]
[123.41853333 -374.52947998]
[129.66952515 -388.36022949]
[140.49739075 -398.99612427]
[154.43774414 -404.99871826]
[169.60525513 -405.55621338]
[183.94866943 -400.59323120]
[195.52813721 -390.78097534]
[202.77763367 -377.44647217]
[204.71672058 -362.39309692]
[201.08316040 -347.65667725]
[192.36837769 -335.23022461]
[179.75094604 -326.79431152]
[164.93727112 -323.48980713]
[162.72257996 -308.65417480]
[160.50787354 -293.81857300]
[158.29318237 -278.98297119]
[156.07847595 -264.14736938]
[153.86378479 -249.31178284]
[151.64907837 -234.47618103]
[157.42243958 -220.74600220]
[147.73239136 -208.23947144]
[145.51770020 -193.40386963]
[143.30299377 -178.56826782]
[151.68905640 -161.14477539]
[138.89979553 -145.56217957]
[137.12570190 -130.66746521]
[135.35159302 -115.77274323]
[133.57749939 -100.87802887]
[131.80340576 -85.98330688]
[141.18899536 -74.47478485]
[139.60198975 -59.34415436]
[127.46716309 -49.57770538]
[125.69306183 -34.68298721]
[123.91896820 -19.78827095]
[122.14486694 -4.89355421]
[120.37077332 10.00116253]
[129.20213318 17.22286224]
[133.49546814 27.92156219]
[132.07696533 39.48273468]
[125.18417358 49.02049637]
[114.43548584 54.09795761]
[112.22078705 68.93355560]
[110.00609589 83.76916504]
[121.54169464 91.98877716]
[125.64734650 108.10971832]
[140.62100220 108.99832916]
[155.59466553 109.88694000]
[170.56831360 110.77555084]
[185.54197693 111.66415405]
[199.77627563 104.75797272]
[212.02282715 113.23565674]
[226.99647522 114.12426758]
[239.89916992 104.59011841]
[255.36013794 108.87243652]
[261.51904297 123.68620300]
[253.65129089 137.66755676]
[237.79237366 140.09120178]
[226.10787964 129.09793091]
[211.13421631 128.20932007]
[197.97093201 135.17906189]
[184.65336609 126.63780975]
[169.67970276 125.74920654]
[154.70605469 124.86059570]
[139.73239136 123.97198486]
[124.75873566 123.08337402]
[138.23257446 129.67547607]
[143.80766296 143.60093689]
[138.60560608 157.66999817]
[125.31220245 164.61877441]
[110.79088593 160.85960388]
[102.53903961 148.33334351]
[104.81813049 133.50556946]
[96.99961090 146.30676270]
[89.18109131 159.10797119]
[81.36257935 171.90917969]
[73.54405975 184.71037292]
[65.72554016 197.51158142]
[57.90702438 210.31277466]
[68.58168793 224.27742004]
[73.06537628 241.23670959]
[70.69654083 258.58239746]
[61.86537933 273.65759277]
[47.94983673 284.16366577]
[31.10068893 288.51071167]
[13.90912151 286.05825806]
[6.66723871 299.19427490]
[-0.57464445 312.33032227]
[-7.81652737 325.46633911]
[-15.05841064 338.60235596]
[-22.30029297 351.73837280]
[-9.69738770 343.60409546]
[4.84798098 339.93908691]
[19.80061531 341.13018799]
[33.58233261 347.05169678]
[44.73854065 357.07861328]
[52.09175110 370.15264893]
[54.86586761 384.89389038]
[52.76809311 399.74645996]
[46.01984024 413.14279175]
[35.33335495 423.66888428]
[21.83654785 430.21383667]
[6.95394039 432.08679199]
[-7.74367476 429.09011841]
[-20.70503426 421.54006958]
[-30.56212425 410.23352051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 49]
[3 48]
[4 47]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 31]
[18 30]
[20 28]
[21 27]
[50 196]
[51 195]
[52 194]
[53 193]
[54 192]
[55 191]
[65 184]
[66 183]
[67 182]
[68 181]
[69 180]
[70 179]
[71 178]
[73 149]
[74 148]
[75 147]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[93 129]
[94 128]
[95 127]
[97 125]
[98 124]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
[157 165]
[158 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
