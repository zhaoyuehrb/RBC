%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCAGAGGCCACGCCCCCGGAAGCGGCGGUGCAGGUUUCUUGCCUUGAUGUACUGGAGCAAUCAGAUCACACGGCGGCUUGGAGAGUGAGUGCAAGGUUUUAUGAGUGGAAUUAGCCCUCAGCAGAUGGGGGAGCCAGAAGGCAGUUGGAGUGGGAAGAACCCAGGGACCAUGGGCGCCUCCAGGCUCUAUACCCUGGUGC\
) } def
/len { sequence length } bind def

/coor [
[-308.66723633 420.61352539]
[-318.46618652 431.97045898]
[-328.26516724 443.32742310]
[-331.42218018 458.83044434]
[-345.59460449 463.41213989]
[-355.39355469 474.76907349]
[-365.19253540 486.12603760]
[-374.99148560 497.48297119]
[-384.79046631 508.83993530]
[-394.58941650 520.19689941]
[-404.38839722 531.55383301]
[-407.41122437 549.71520996]
[-424.19082642 554.84515381]
[-433.81286621 566.35235596]
[-443.43490601 577.85961914]
[-453.05694580 589.36682129]
[-455.97366333 604.91687012]
[-470.07348633 609.71734619]
[-479.69552612 621.22454834]
[-489.31756592 632.73175049]
[-491.60290527 648.97088623]
[-506.90832520 654.85955811]
[-519.48889160 644.34002686]
[-516.40283203 628.23388672]
[-500.82479858 623.10974121]
[-491.20275879 611.60247803]
[-481.58071899 600.09527588]
[-479.35220337 585.36834717]
[-464.56417847 579.74481201]
[-454.94213867 568.23754883]
[-445.32009888 556.73034668]
[-435.69805908 545.22308350]
[-436.45950317 533.14648438]
[-428.53182983 523.48016357]
[-415.74533081 521.75488281]
[-405.94638062 510.39791870]
[-396.14739990 499.04095459]
[-386.34844971 487.68402100]
[-376.54946899 476.32705688]
[-366.75051880 464.97012329]
[-356.95153809 453.61315918]
[-354.49542236 438.92248535]
[-339.62210083 433.52844238]
[-329.82315063 422.17150879]
[-320.02416992 410.81454468]
[-325.14236450 396.71475220]
[-339.94476318 394.28802490]
[-354.74716187 391.86129761]
[-369.54956055 389.43457031]
[-384.35195923 387.00784302]
[-399.17266846 384.69570923]
[-414.01086426 382.49835205]
[-426.55175781 392.11611938]
[-442.20916748 389.96633911]
[-451.69378662 377.32446289]
[-449.37860107 361.69067383]
[-436.63714600 352.34020996]
[-421.02871704 354.82055664]
[-411.81347656 367.66018677]
[-396.97531128 369.85754395]
[-389.89358521 367.72628784]
[-381.92523193 372.20544434]
[-367.12283325 374.63217163]
[-352.32043457 377.05889893]
[-337.51803589 379.48562622]
[-322.71563721 381.91235352]
[-308.85220337 368.21575928]
[-290.87112427 365.97058105]
[-276.43399048 374.47241211]
[-263.52169800 366.83877563]
[-250.60937500 359.20516968]
[-246.44866943 353.09109497]
[-237.43765259 351.55508423]
[-224.40875244 344.12222290]
[-211.37985229 336.68933105]
[-202.13497925 315.49249268]
[-178.28559875 315.63845825]
[-166.00201416 307.02951050]
[-153.71842957 298.42059326]
[-141.43486023 289.81167603]
[-129.15127563 281.20272827]
[-116.86769104 272.59381104]
[-104.58411407 263.98489380]
[-92.30052948 255.37596130]
[-80.01695251 246.76702881]
[-76.34131622 240.34963989]
[-67.47599792 238.12165833]
[-55.06066513 229.70384216]
[-53.29622269 225.25958252]
[-48.71767044 221.87940979]
[-42.12830353 221.22462463]
[-29.45841217 213.19506836]
[-22.85000992 199.84672546]
[-7.05175591 198.99481201]
[5.61813593 190.96525574]
[12.22653866 177.61691284]
[28.02479172 176.76501465]
[40.69468307 168.73544312]
[53.36457443 160.70588684]
[66.03446960 152.67633057]
[78.70436096 144.64675903]
[91.37425232 136.61720276]
[76.40579987 137.58953857]
[61.47826767 139.06222534]
[46.75348282 136.20202637]
[33.46275711 129.24813843]
[22.71748543 118.78204346]
[15.41620541 105.67893982]
[12.16946507 91.03453064]
[13.24876213 76.07341003]
[18.56384277 62.04665375]
[27.67025185 50.12720108]
[39.80649567 41.31177902]
[53.95771408 36.33755493]
[68.94056702 35.62047195]
[83.49906158 39.21924210]
[80.11791229 53.83320236]
[90.09145355 42.62925339]
[100.06499481 31.42530632]
[110.03853607 20.22135925]
[120.01208496 9.01741314]
[129.98562622 -2.18653440]
[130.49429321 -18.22152138]
[143.43380737 -27.70564651]
[158.87806702 -23.36350250]
[164.97956848 -8.52600861]
[157.05776978 5.42477846]
[141.18957520 7.78700924]
[131.21603394 18.99095535]
[121.24248505 30.19490242]
[111.26894379 41.39884949]
[101.29540253 52.60279846]
[91.32185364 63.80674362]
[95.67371368 69.91504669]
[108.72929382 88.23994446]
[122.57635498 82.47289276]
[136.42341614 76.70584106]
[145.94607544 63.35477066]
[162.24162292 65.19521332]
[168.54660034 80.33388519]
[158.37498474 93.19741058]
[142.19046021 90.55290985]
[128.34339905 96.31995392]
[114.49634552 102.08700562]
[115.19175720 109.55469513]
[130.12713623 108.16387177]
[145.06251526 106.77304840]
[159.99792480 105.38246918]
[161.38824463 120.31790161]
[146.45333862 121.70842743]
[131.51795959 123.09925079]
[116.58258057 124.49007416]
[117.27799225 131.95776367]
[131.95181274 135.06887817]
[146.62562561 138.17997742]
[161.29945374 141.29109192]
[175.47938538 133.78715515]
[190.12910461 140.32670593]
[194.01057434 155.89312744]
[184.14628601 168.54521179]
[168.10325623 168.57736206]
[158.18833923 155.96490479]
[143.51452637 152.85380554]
[128.84069824 149.74269104]
[114.16688538 146.63159180]
[99.40380859 149.28709412]
[86.73391724 157.31665039]
[74.06402588 165.34622192]
[61.39413834 173.37577820]
[48.72424316 181.40533447]
[36.05435181 189.43490601]
[28.53971481 203.35757446]
[13.64769650 203.63514709]
[0.97780436 211.66470337]
[-6.53683376 225.58737183]
[-21.42885208 225.86495972]
[-34.09874344 233.89451599]
[-46.64286041 242.11918640]
[-59.05819321 250.53698730]
[-71.40802002 259.05059814]
[-83.69160461 267.65954590]
[-95.97518158 276.26846313]
[-108.25876617 284.87738037]
[-120.54234314 293.48632812]
[-132.82592773 302.09524536]
[-145.10951233 310.70419312]
[-157.39308167 319.31311035]
[-169.67666626 327.92202759]
[-169.11065674 334.76477051]
[-170.67811584 341.39660645]
[-174.19412231 347.17376709]
[-179.28622437 351.54568481]
[-185.43371582 354.10733032]
[-192.02076721 354.63659668]
[-198.39810181 353.11337280]
[-203.94696045 349.71823120]
[-216.97586060 357.15112305]
[-230.00476074 364.58398438]
[-242.97575378 372.11749268]
[-255.88806152 379.75109863]
[-268.80038452 387.38473511]
[-269.86325073 407.12213135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[13 32]
[14 31]
[15 30]
[16 29]
[18 27]
[19 26]
[20 25]
[46 66]
[47 65]
[48 64]
[49 63]
[50 62]
[51 60]
[52 59]
[69 201]
[70 200]
[71 199]
[73 198]
[74 197]
[75 196]
[77 188]
[78 187]
[79 186]
[80 185]
[81 184]
[82 183]
[83 182]
[84 181]
[85 180]
[87 179]
[88 178]
[91 177]
[92 176]
[94 174]
[95 173]
[97 171]
[98 170]
[99 169]
[100 168]
[101 167]
[102 166]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[135 144]
[136 143]
[137 142]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
