%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUCCAGCGCGCGCCCGGGGCGGCGGCGCGCGGCGGGGGGUGGUUGGGGUGCGCGCCGGCCCGAGUGGACGCCGUCGCGACCGCCAUGCAGCUGACGGUGAAGGCGCUGCAGGGCCGCGAGUGCAGCCUGCAGGUGCCAGAGGACGAGCUGGUGUCCACGCUGAAGCAGCUGGUCUCCGAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[77.59084320 232.55291748]
[62.84127426 229.82339478]
[50.98566437 220.63403320]
[44.66411209 207.03117371]
[45.28416824 192.04460144]
[36.14441681 203.93850708]
[33.38834763 212.66964722]
[26.74986458 215.95373535]
[17.41159821 227.69242859]
[8.07333088 239.43112183]
[-1.26493680 251.16979980]
[-10.60320377 262.90847778]
[-19.94147110 274.64718628]
[-29.18080521 286.46389771]
[-38.32055664 298.35778809]
[-47.46030426 310.25170898]
[-45.16014481 325.88769531]
[-54.65693283 338.52047729]
[-70.31638336 340.65518188]
[-82.84803772 331.02536011]
[-84.81707001 315.34420776]
[-75.05529785 302.91506958]
[-59.35420990 301.11193848]
[-50.21446228 289.21804810]
[-41.07471085 277.32412720]
[-39.48876190 270.08953857]
[-31.68015862 265.30889893]
[-22.34189034 253.57022095]
[-13.00362301 241.83152771]
[-3.66535592 230.09284973]
[5.67291117 218.35415649]
[15.01117897 206.61547852]
[24.25051308 194.79876709]
[33.39026260 182.90486145]
[41.39359283 170.21838379]
[48.19221878 156.84756470]
[54.99084854 143.47674561]
[61.78947830 130.10594177]
[68.58810425 116.73512268]
[64.48316193 102.30773926]
[51.66402435 94.51866150]
[38.84488678 86.72958374]
[26.02575111 78.94050598]
[13.20661449 71.15142822]
[0.38747793 63.36235046]
[-12.43165874 55.57327271]
[-25.25079536 47.78419495]
[-41.06230927 47.23052216]
[-47.92139053 34.00923920]
[-60.74052811 26.22016144]
[-73.55966187 18.43108368]
[-86.37879944 10.64200497]
[-95.35829926 8.85389423]
[-99.34630585 2.61286378]
[-112.03278351 -5.39046574]
[-124.71926117 -13.39379597]
[-137.47251892 -21.29027748]
[-150.29165649 -29.07935524]
[-163.11079407 -36.86843491]
[-177.86238098 -31.67950821]
[-192.47982788 -37.23504639]
[-200.06124878 -50.91189575]
[-197.02691650 -66.25225830]
[-184.80953979 -76.01289368]
[-169.17781067 -75.58512115]
[-157.51254272 -65.17092896]
[-155.32171631 -49.68757248]
[-142.50257874 -41.89849091]
[-129.68344116 -34.10941315]
[-122.31909180 -33.32135773]
[-116.71593475 -26.08027267]
[-104.02945709 -18.07694435]
[-91.34297943 -10.07361412]
[-78.58972168 -2.17713141]
[-65.77058411 5.61194658]
[-52.95145035 13.40102482]
[-40.13231277 21.19010353]
[-25.23770714 21.18664932]
[-17.46171761 34.96505737]
[-4.64258051 42.75413513]
[8.17655563 50.54321289]
[20.99569321 58.33229065]
[33.81483078 66.12136841]
[46.63396454 73.91044617]
[59.45310211 81.69952393]
[72.27223969 89.48860168]
[82.55516052 77.85842896]
[96.63734436 73.48941803]
[110.18298340 76.88581848]
[119.43748474 86.27861023]
[133.79386902 81.93187714]
[148.15025330 77.58514404]
[162.50665283 73.23841095]
[176.86303711 68.89167786]
[191.21942139 64.54494476]
[204.30470276 49.22868347]
[222.92680359 54.38983154]
[237.12907410 49.56326675]
[251.33132935 44.73670578]
[265.53359985 39.91014099]
[279.73587036 35.08358002]
[281.84381104 17.80469131]
[296.96630859 4.39741850]
[319.99447632 4.18495274]
[332.11489868 -4.65220070]
[344.23532104 -13.48935413]
[356.35574341 -22.32650757]
[368.47616577 -31.16366196]
[380.52194214 -40.10231400]
[392.49218750 -49.14183426]
[404.46246338 -58.18135071]
[416.43270874 -67.22087097]
[428.40295410 -76.26039124]
[433.37884521 -83.94606018]
[440.65109253 -85.34921265]
[452.77151489 -94.18636322]
[459.36407471 -108.56860352]
[474.20645142 -109.81483459]
[486.32687378 -118.65199280]
[492.47354126 -133.85562134]
[508.74899292 -135.86601257]
[518.41046143 -122.61503601]
[511.51901245 -107.73416901]
[495.16403198 -106.53156281]
[483.04360962 -97.69441223]
[477.31799316 -83.94425964]
[461.60867310 -82.06594086]
[449.48825073 -73.22878265]
[437.44247437 -64.29013062]
[425.47222900 -55.25061417]
[413.50198364 -46.21109390]
[401.53170776 -37.17157364]
[389.56146240 -28.13205528]
[386.11114502 -21.57843018]
[377.31332397 -19.04323578]
[365.19290161 -10.20608234]
[353.07247925 -1.36892843]
[340.95205688 7.46822500]
[328.83163452 16.30537796]
[329.89898682 23.72904015]
[343.82452393 29.30394745]
[332.03369141 38.57636261]
[333.10107422 46.00002289]
[347.22024536 51.06449127]
[361.33941650 56.12895966]
[375.45858765 61.19342804]
[389.57775879 66.25789642]
[403.76123047 59.28613663]
[418.69305420 64.46457672]
[425.51446533 78.72094727]
[420.17843628 93.59718323]
[405.85073853 100.26748657]
[391.03176880 94.77448273]
[384.51330566 80.37707520]
[370.39413452 75.31260681]
[356.27496338 70.24813843]
[342.15576172 65.18367004]
[328.03659058 60.11919785]
[300.96176147 64.41088867]
[284.56243896 49.28584290]
[270.36016846 54.11240768]
[256.15789795 58.93896866]
[241.95562744 63.76553345]
[227.75337219 68.59209442]
[224.06745911 78.14974976]
[215.54391479 84.21901703]
[204.86697388 84.59133148]
[195.56616211 78.90133667]
[181.20977783 83.24806976]
[166.85337830 87.59480286]
[152.49699402 91.94153595]
[138.14060974 96.28826904]
[123.78421783 100.63500214]
[118.67228699 117.72608185]
[102.17695618 127.61408234]
[81.95891571 123.53375244]
[75.16029358 136.90457153]
[68.36166382 150.27537537]
[61.56303406 163.64619446]
[54.76440430 177.01701355]
[68.02375031 170.00346375]
[83.02297211 169.85121155]
[96.42194366 176.59417725]
[105.23687744 188.73078918]
[107.50478363 203.55834961]
[102.72064972 217.77494812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 34]
[6 33]
[8 32]
[9 31]
[10 30]
[11 29]
[12 28]
[13 27]
[14 25]
[15 24]
[16 23]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[47 79]
[49 77]
[50 76]
[51 75]
[52 74]
[54 73]
[55 72]
[56 71]
[57 69]
[58 68]
[59 67]
[90 173]
[91 172]
[92 171]
[93 170]
[94 169]
[95 168]
[97 164]
[98 163]
[99 162]
[100 161]
[101 160]
[104 139]
[105 138]
[106 137]
[107 136]
[108 135]
[109 133]
[110 132]
[111 131]
[112 130]
[113 129]
[115 128]
[116 127]
[118 125]
[119 124]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
