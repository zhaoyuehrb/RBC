%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUCGGGGACCCCCUGAGGACCCUCGGAUUCCCCCCAACUCCCCUGCCCUCUAAAACCACUUCAAUUCCUCAACUCUUCCCCCGGCCCGCAGGAACCCCCGCCAUGGCCCGUUCUUACGGCGGCCGGGUGCUGGCUGCAAUGACCCUGCUGGGCAUCGCGGCGGCCGUGCUGGCGGCGCUGGGCGCGCAGCUGCUGUUUCAGC\
) } def
/len { sequence length } bind def

/coor [
[88.40480804 166.31156921]
[79.74916077 154.06083679]
[72.28054047 154.74615479]
[66.91213989 168.75259399]
[61.54373932 182.75903320]
[56.17533875 196.76545715]
[50.80693817 210.77189636]
[45.43853760 224.77833557]
[40.07013702 238.78477478]
[34.70174026 252.79121399]
[34.67886353 269.74514771]
[18.38116646 274.41647339]
[9.38073730 260.04885864]
[20.69530106 247.42282104]
[26.06370163 233.41638184]
[31.43210220 219.40994263]
[36.80050278 205.40350342]
[42.16889954 191.39706421]
[47.53730011 177.39062500]
[52.90570068 163.38418579]
[58.27410126 149.37774658]
[52.43592072 144.66970825]
[43.01983643 156.34606934]
[33.60356140 168.02227783]
[21.92751312 158.60580444]
[31.34347725 146.92999268]
[40.75955963 135.25363159]
[34.92137909 130.54559326]
[22.37047195 138.75988770]
[19.38535118 154.27969360]
[6.25371599 163.07377625]
[-9.23366928 159.92472839]
[-17.88841248 146.70085144]
[-14.57580948 131.24763489]
[-1.26116669 122.73317719]
[14.15617275 126.20897675]
[26.70708084 117.99468231]
[11.75447845 119.18618011]
[-3.19812441 120.37767792]
[-18.15072632 121.56917572]
[-33.10332870 122.76068115]
[-46.28711700 129.91523743]
[-60.34793091 135.13955688]
[-75.00486755 138.32925415]
[-89.96511841 139.42059326]
[-104.92979431 138.39179993]
[-119.59993744 135.26341248]
[-133.68247986 130.09793091]
[-146.89605713 122.99855042]
[-158.97671509 114.10710144]
[-169.68307495 103.60121918]
[-178.80128479 91.69078827]
[-186.14915466 78.61375427]
[-191.57989502 64.63137054]
[-194.98501587 50.02297592]
[-196.29647827 35.08041763]
[-195.48809814 20.10221481]
[-192.57600403 5.38760471]
[-187.61839294 -8.76944637]
[-180.71429443 -22.08610916]
[-172.00166321 -34.29634476]
[-161.65452576 -45.15621567]
[-149.87960815 -54.44876862]
[-136.91217041 -61.98834991]
[-123.01124573 -67.62434387]
[-108.45455933 -71.24414062]
[-93.53292847 -72.77543640]
[-78.54444885 -72.18763733]
[-63.78856659 -69.49248505]
[-49.56006622 -64.74382019]
[-36.14321136 -58.03651428]
[-23.80603790 -49.50456619]
[-12.79501915 -39.31842422]
[-3.33013415 -27.68158913]
[4.39952898 -14.82653904]
[10.23954773 -1.01009262]
[14.07324982 13.49172592]
[15.82404518 28.38919830]
[15.45730019 43.38113022]
[21.20514107 57.23617554]
[26.95298386 71.09122467]
[32.70082474 84.94627380]
[38.44866562 98.80131531]
[40.04692459 83.88671112]
[41.64518356 68.97209930]
[43.24343872 54.05748749]
[44.84169769 39.14287949]
[46.43995285 24.22826958]
[48.03821182 9.31366062]
[49.40883636 -5.62358761]
[50.55151367 -20.57999992]
[43.88796997 -34.92948914]
[52.57233047 -47.03036118]
[53.71500778 -61.98677444]
[54.85768127 -76.94318390]
[56.00035858 -91.89959717]
[57.14303207 -106.85601044]
[58.28570938 -121.81242371]
[46.65347672 -134.87551880]
[48.03860474 -151.97328186]
[61.09752274 -162.56779480]
[62.01198196 -177.53990173]
[52.50012207 -190.45903015]
[56.80912781 -205.91258240]
[71.63349915 -212.04589844]
[85.60124969 -204.15402222]
[87.99751282 -188.29093933]
[76.98408508 -176.62544250]
[76.06961823 -161.65333557]
[85.87598419 -153.29129028]
[89.12286377 -140.61846924]
[84.40740967 -128.20730591]
[73.24211884 -120.66975403]
[72.09944916 -105.71334076]
[70.95677185 -90.75692749]
[69.81409454 -75.80051422]
[68.67141724 -60.84409714]
[67.52874756 -45.88768768]
[74.27401733 -32.60798264]
[65.50792694 -19.43732452]
[64.36524963 -4.48091173]
[66.74282837 -0.33477721]
[66.53834534 5.34955835]
[62.95281982 10.91191864]
[61.35456467 25.82652855]
[59.75630569 40.74113846]
[58.15804672 55.65574646]
[56.55979156 70.57035828]
[54.96153259 85.48496246]
[53.36327744 100.39957428]
[91.94709778 63.89522171]
[124.85227966 88.59218597]
[139.67819214 86.31347656]
[154.50408936 84.03476715]
[169.33000183 81.75605774]
[177.34037781 77.35771179]
[184.39920044 79.55743408]
[199.25813293 77.50508118]
[214.11706543 75.45272827]
[228.97599792 73.40037537]
[241.58775330 63.84765625]
[255.25396729 69.77079773]
[270.11291504 67.71844482]
[284.97183228 65.66609192]
[293.04837036 61.39042282]
[300.07281494 63.69753265]
[314.96130371 61.87201691]
[329.84982300 60.04649734]
[342.61575317 49.75265121]
[357.81387329 55.91294098]
[359.80966187 72.19019318]
[346.55001831 81.83975983]
[331.67532349 74.93499756]
[316.78683472 76.76051331]
[301.89834595 78.58603668]
[287.02416992 80.52502441]
[272.16525269 82.57737732]
[257.30633545 84.62973022]
[245.75738525 94.03565216]
[231.02835083 88.25930786]
[216.16941833 90.31166077]
[201.31048584 92.36401367]
[186.45155334 94.41636658]
[171.60870361 96.58196259]
[156.78280640 98.86067200]
[141.95689392 101.13938141]
[127.13099670 103.41809082]
[129.56492615 112.67835999]
[128.64965820 123.40088654]
[123.82111359 134.36662292]
[114.95060730 144.17716980]
[122.77833557 156.97274780]
[130.60606384 169.76832581]
[138.43377686 182.56390381]
[146.45571899 195.23861694]
[154.67002869 207.78952026]
[162.88432312 220.34043884]
[171.09861755 232.89134216]
[179.31292725 245.44224548]
[187.62268066 257.93014526]
[196.02742004 270.35433960]
[204.43217468 282.77853394]
[212.83691406 295.20269775]
[228.40045166 297.95080566]
[237.39375305 310.94680786]
[234.48126221 326.48040771]
[221.39089966 335.33581543]
[205.88896179 332.25924683]
[197.17245483 319.07598877]
[200.41273499 303.60745239]
[192.00799561 291.18325806]
[183.60324097 278.75909424]
[175.19850159 266.33489990]
[168.84436035 262.55459595]
[166.76200867 253.65655518]
[158.54771423 241.10563660]
[150.33341980 228.55473328]
[142.11911011 216.00382996]
[133.90481567 203.45291138]
[129.49221802 201.61654663]
[126.18814850 196.98657227]
[125.63820648 190.39163208]
[117.81047821 177.59605408]
[109.98275757 164.80047607]
[102.15503693 152.00489807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[10 14]
[28 37]
[29 36]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 121]
[91 120]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[101 109]
[102 108]
[132 167]
[133 166]
[134 165]
[135 164]
[137 163]
[138 162]
[139 161]
[140 160]
[142 158]
[143 157]
[144 156]
[146 155]
[147 154]
[148 153]
[171 205]
[172 204]
[173 203]
[174 202]
[175 199]
[176 198]
[177 197]
[178 196]
[179 195]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
