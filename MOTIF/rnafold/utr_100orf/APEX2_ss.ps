%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAACGCGCGCGGGAGGCGGGCCUGGCCAACUUCUGAACAGGAAGCAGUUCGCUCGCGCCUAGGUUGGCGCGGGCUGGGAGGUGUUCCAGCCCUUUAAGAUGUUGCGCGUGGUGAGCUGGAACAUCAAUGGGAUUCGGAGACCCCUGCAAGGGGUGGCAAAUCAGGAACCCAGCAACUGUGCCGCCGUGGCCGUGGGGC\
) } def
/len { sequence length } bind def

/coor [
[60.79945374 512.54833984]
[51.81021500 525.34393311]
[36.68597794 529.31781006]
[22.56794930 522.59356689]
[16.12222862 508.34625244]
[20.39228630 493.30294800]
[33.36193466 484.56668091]
[34.76655579 469.63259888]
[26.60299301 454.10189819]
[37.37705231 439.17327881]
[38.54809570 424.21905518]
[39.71913910 409.26486206]
[40.89018250 394.31063843]
[42.06122589 379.35641479]
[29.35095215 366.19012451]
[30.30910110 347.59527588]
[44.79344177 335.39364624]
[45.49652481 320.41012573]
[46.19960785 305.42660522]
[46.90269470 290.44308472]
[47.60577774 275.45959473]
[45.28393173 274.26068115]
[43.12990952 272.78131104]
[30.25833321 280.48342896]
[17.38675690 288.18554688]
[4.51518202 295.88763428]
[0.55586326 310.95288086]
[-12.60746384 318.58056641]
[-26.94547081 314.71313477]
[-39.81704712 322.41522217]
[-45.10538101 337.56161499]
[-60.29159927 342.73446655]
[-73.72612762 333.96560669]
[-75.10315704 317.98178101]
[-63.36634064 307.04437256]
[-47.51916122 309.54367065]
[-34.64758301 301.84155273]
[-31.27828217 287.37835693]
[-18.33439255 279.38397217]
[-3.18693113 283.01608276]
[9.68464470 275.31396484]
[22.55621910 267.61184692]
[35.42779541 259.90972900]
[36.62104797 247.45248413]
[44.82634354 237.66494751]
[57.38063049 234.17767334]
[63.30986404 220.39927673]
[69.23909760 206.62088013]
[75.16833496 192.84248352]
[81.09757233 179.06410217]
[87.02680206 165.28570557]
[86.78289795 157.89297485]
[93.15788269 151.33944702]
[99.30174255 137.65539551]
[105.44559479 123.97135162]
[77.07823944 134.43737793]
[42.71230316 110.00369263]
[29.17604637 103.54073334]
[15.63979149 97.07778168]
[2.10353684 90.61482239]
[-11.43271828 84.15187073]
[-26.24711227 89.65725708]
[-40.58036804 82.99892426]
[-45.92881775 68.12715149]
[-39.11932373 53.86509323]
[-24.19183540 48.67417526]
[-10.00256824 55.63407898]
[-4.96976185 70.61561584]
[8.56649303 77.07856750]
[22.10274887 83.54152679]
[35.63900375 90.00447845]
[49.17525864 96.46743774]
[59.31631088 85.41487885]
[51.71502304 72.48350525]
[44.11373520 59.55213547]
[36.51244354 46.62076187]
[28.91115761 33.68938828]
[21.30986786 20.75801468]
[13.70858002 7.82664108]
[6.10729122 -5.10473204]
[-1.49399745 -18.03610611]
[-16.01882553 -25.64934540]
[-16.41753578 -42.04364395]
[-2.27996922 -50.35395432]
[11.85035706 -42.03134155]
[11.43737602 -25.63739395]
[19.03866386 -12.70602036]
[26.63995361 0.22535244]
[34.24124146 13.15672588]
[41.84252930 26.08809853]
[49.44381714 39.01947021]
[57.04510880 51.95084381]
[64.64639282 64.88221741]
[72.24768066 77.81359100]
[79.73303223 77.34500122]
[74.21569824 63.39656067]
[85.77661896 53.83910370]
[98.43872833 61.88093567]
[94.70372772 76.40782166]
[102.18907166 75.93923187]
[108.11830902 62.16083908]
[114.04754639 48.38244629]
[119.97677612 34.60404968]
[125.90601349 20.82565498]
[131.83525085 7.04725885]
[130.18304443 -8.68744087]
[142.32107544 -17.31978226]
[148.25030518 -31.09817696]
[148.76925659 -40.22615051]
[154.38139343 -45.04443741]
[160.52525330 -58.72848129]
[156.18969727 -74.17459869]
[165.67935181 -87.11005402]
[181.71455383 -87.61187744]
[191.99447632 -75.29510498]
[188.63323975 -59.60811615]
[174.20928955 -52.58462524]
[168.06542969 -38.90058136]
[162.02870178 -25.16894341]
[156.09947205 -11.39054775]
[158.17578125 3.35862947]
[145.61364746 12.97649384]
[139.68440247 26.75488853]
[133.75517273 40.53328323]
[127.82593536 54.31167984]
[121.89670563 68.09007263]
[115.96746826 81.86846924]
[120.01779175 88.18074799]
[135.00129700 87.47763824]
[128.11843872 100.80531311]
[132.16876221 107.11759186]
[147.16464233 107.46923065]
[162.16050720 107.82086945]
[170.82127380 104.89164734]
[177.38751221 108.29701233]
[192.37606812 108.88298035]
[207.36462402 109.46895599]
[217.27961731 91.52229309]
[234.85847473 81.11791992]
[255.20921326 81.06135559]
[272.71389771 91.29085541]
[282.57943726 108.91583252]
[297.55700684 108.09568024]
[312.53457642 107.27552032]
[327.51211548 106.45536804]
[342.48968506 105.63520813]
[357.46725464 104.81505585]
[372.95208740 97.91172028]
[383.87228394 110.88037872]
[374.43344116 124.96387482]
[358.28741455 119.79261780]
[343.30984497 120.61277008]
[328.33227539 121.43292999]
[313.35473633 122.25308228]
[298.37716675 123.07324219]
[283.39959717 123.89339447]
[280.80703735 133.45578003]
[275.84588623 142.05142212]
[268.83880615 149.10391235]
[260.24600220 154.13771057]
[250.63496399 156.81027222]
[240.64302063 156.93533325]
[230.93505859 154.49584961]
[222.15934753 149.64575195]
[214.90417480 142.70021057]
[209.65841675 134.11517334]
[206.77865601 124.45750427]
[191.79010010 123.87153625]
[176.80154419 123.28556824]
[161.80888367 122.81674957]
[146.81300354 122.46511078]
[131.81712341 122.11347198]
[119.12963867 130.11520386]
[112.98578644 143.79925537]
[106.84192657 157.48329163]
[100.80519867 171.21493530]
[94.87596130 184.99333191]
[88.94673157 198.77172852]
[83.01749420 212.55012512]
[77.08826447 226.32852173]
[71.15902710 240.10691833]
[77.05865479 260.93734741]
[62.58929062 276.16265869]
[61.88620758 291.14617920]
[61.18312454 306.12969971]
[60.48003769 321.11322021]
[59.77695465 336.09671021]
[69.34541321 343.16854858]
[74.25830078 353.87322998]
[73.39885712 365.49984741]
[67.09633636 375.16485596]
[57.01544189 380.52746582]
[55.84440231 395.48168945]
[54.67335892 410.43588257]
[53.50231552 425.39010620]
[52.33127213 440.34432983]
[60.10551071 450.64291382]
[58.81735229 463.07888794]
[49.70064545 471.03723145]
[48.29602432 485.97131348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 200]
[8 199]
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[23 43]
[24 42]
[25 41]
[26 40]
[29 37]
[30 36]
[46 181]
[47 180]
[48 179]
[49 178]
[50 177]
[51 176]
[53 175]
[54 174]
[55 173]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[100 127]
[101 126]
[102 125]
[103 124]
[104 123]
[105 122]
[107 120]
[108 119]
[110 118]
[111 117]
[131 172]
[132 171]
[133 170]
[135 169]
[136 168]
[137 167]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
