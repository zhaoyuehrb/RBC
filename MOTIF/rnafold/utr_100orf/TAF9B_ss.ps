%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCCUGAGCGAGGAGCCCGCGAGCUCUCCUCUCUCCUCUGUCUCCGCGGAUGACGAGUGGCUGGAUAACAUGGAGUCGGGCAAGAUGGCGCCUCCCAAGAACGCUCCGAGAGAUGCCUUGGUGAUGGCACAGAUCCUGAAGGAUAUGGGAAUCACAGAGUAUGAACCAA\
) } def
/len { sequence length } bind def

/coor [
[191.54510498 151.19776917]
[177.96337891 144.83091736]
[164.38165283 138.46406555]
[150.79992676 132.09721375]
[137.21821594 125.73036957]
[127.44802094 135.97016907]
[114.99221039 142.69052124]
[101.06951141 145.23387146]
[87.04216003 143.35137939]
[74.28266144 137.22721863]
[64.03943634 127.46060944]
[57.31472778 115.00715637]
[54.76650620 101.08534241]
[56.64409256 87.05734253]
[43.18091965 80.44349670]
[29.71774673 73.82965088]
[16.25457382 67.21580505]
[3.79305339 70.63570404]
[-7.29585552 64.82102966]
[-11.30292320 53.38296127]
[-24.64305496 46.52432632]
[-37.98318863 39.66569138]
[-51.79312515 46.49151230]
[-66.79891205 43.90698624]
[-77.28150177 33.10979462]
[-79.37120056 18.38664627]
[-92.71133423 11.52801132]
[-107.59394073 16.12646103]
[-121.02503204 8.98079395]
[-125.31723022 -5.23583651]
[-138.65736389 -12.09447098]
[-151.99749756 -18.95310593]
[-166.88011169 -14.35465622]
[-180.31118774 -21.50032234]
[-184.60339355 -35.71695328]
[-197.94352722 -42.57558823]
[-211.28366089 -49.43422318]
[-224.62379456 -56.29285812]
[-242.39355469 -49.80746460]
[-258.99414062 -58.19199753]
[-264.14126587 -75.73182678]
[-277.72299194 -82.09867859]
[-291.30471802 -88.46552277]
[-304.88644409 -94.83237457]
[-318.46817017 -101.19922638]
[-332.16390991 -107.31695557]
[-345.96908569 -113.18352509]
[-359.77429199 -119.05010223]
[-373.57946777 -124.91667175]
[-386.27349854 -116.14938354]
[-401.69308472 -115.65962982]
[-414.91790771 -123.60366821]
[-421.72796631 -137.44659424]
[-419.95019531 -152.77119446]
[-410.15185547 -164.68742371]
[-395.45962524 -169.39285278]
[-380.56167603 -165.38603210]
[-370.21191406 -153.94548035]
[-367.71292114 -138.72186279]
[-353.90771484 -132.85528564]
[-340.10253906 -126.98872375]
[-326.29733276 -121.12214661]
[-321.58071899 -122.06261444]
[-316.22613525 -120.02402496]
[-312.10131836 -114.78095245]
[-298.51959229 -108.41410065]
[-284.93786621 -102.04724884]
[-271.35614014 -95.68039703]
[-257.77441406 -89.31354523]
[-248.10215759 -95.44516754]
[-236.55068970 -96.13665771]
[-225.99923706 -91.09925079]
[-219.13412476 -81.48665619]
[-217.76515198 -69.63298798]
[-204.42501831 -62.77435684]
[-191.08488464 -55.91572189]
[-177.74476624 -49.05708694]
[-163.68505859 -53.83835602]
[-150.05856323 -47.07275772]
[-145.13885498 -32.29323959]
[-131.79873657 -25.43460274]
[-118.45859528 -18.57596779]
[-104.39890289 -23.35723877]
[-90.77240753 -16.59164238]
[-85.85269928 -1.81212103]
[-72.51256561 5.04651403]
[-59.32247162 -1.82074916]
[-44.44183731 0.42219448]
[-33.60861969 11.12241554]
[-31.12455177 26.32555962]
[-17.78442001 33.18419647]
[-4.44428778 40.04283142]
[12.99496746 38.22946548]
[22.86841965 53.75262833]
[36.33159256 60.36647415]
[49.79476547 66.98032379]
[63.25793839 73.59416962]
[74.49455261 62.62729263]
[88.80258942 56.16091919]
[104.45903778 54.97373962]
[119.57852173 59.20872116]
[132.34031677 68.35587311]
[141.20762634 81.31368256]
[145.11262512 96.52173615]
[143.58505249 112.14864349]
[157.16677856 118.51549530]
[170.74850464 124.88234711]
[184.33023071 131.24919128]
[197.91195679 137.61604309]
[211.47200012 125.90620422]
[228.73011780 121.29483795]
[246.22006226 124.66051483]
[260.44970703 135.28439331]
[268.59835815 151.00311279]
[269.07580566 168.64921570]
[282.98587036 174.26268005]
[296.89590454 179.87612915]
[310.80593872 185.48957825]
[319.97271729 185.80424500]
[324.91723633 191.33467102]
[338.72244263 197.20124817]
[354.44946289 195.47756958]
[363.13687134 207.57626343]
[376.94204712 213.44282532]
[390.74725342 219.30940247]
[404.55242920 225.17596436]
[418.35763550 231.04254150]
[429.63400269 223.07952881]
[443.26538086 221.74835205]
[455.67138672 227.29093933]
[463.64672852 238.15785217]
[465.18917847 251.43969727]
[478.88491821 257.55743408]
[494.64080811 256.12127686]
[503.10577393 268.37661743]
[516.80151367 274.49435425]
[530.49725342 280.61206055]
[544.19299316 286.72979736]
[560.43963623 284.49822998]
[570.28039551 297.61654663]
[563.59204102 312.58978271]
[547.25494385 314.01473999]
[538.07525635 300.42553711]
[524.37951660 294.30780029]
[510.68380737 288.19009399]
[496.98803711 282.07235718]
[482.21176147 283.94607544]
[472.76718140 271.25317383]
[459.07144165 265.13543701]
[445.13317871 273.77532959]
[428.62515259 272.40438843]
[416.05358887 261.36468506]
[412.49105835 244.84773254]
[398.68588257 238.98115540]
[384.88067627 233.11459351]
[371.07550049 227.24801636]
[357.27029419 221.38145447]
[342.53070068 223.52474976]
[332.85586548 211.00643921]
[319.05065918 205.13987732]
[305.19247437 199.39961243]
[291.28244019 193.78616333]
[277.37240601 188.17271423]
[263.46237183 182.55926514]
[255.30812073 191.75822449]
[244.69654846 198.01205444]
[232.65103149 200.70010376]
[220.33866882 199.54649353]
[208.95713806 194.64825439]
[199.61825562 186.46748352]
[193.23934937 175.78767395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 106]
[5 105]
[14 97]
[15 96]
[16 95]
[17 94]
[20 92]
[21 91]
[22 90]
[26 86]
[27 85]
[30 82]
[31 81]
[32 80]
[35 77]
[36 76]
[37 75]
[38 74]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 62]
[47 61]
[48 60]
[49 59]
[115 164]
[116 163]
[117 162]
[118 161]
[120 160]
[121 159]
[123 157]
[124 156]
[125 155]
[126 154]
[127 153]
[132 149]
[133 148]
[135 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
