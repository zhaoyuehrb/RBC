%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUGGUGGGGCUGCAGGGUGGGGGCAGGCCAGCUCAGCAGAGCCUGGGGCCAGAGGGCCAGACAGCCACAGAGCUCCUGGCGUGGGCAAGGCUGGCCAAGGAUGGCGACGCCCAGGGGCCUGGGGGCCCUGCUCCUGCUCCUCCUGCUCCCGACCUCAGGUCAGGAAAAGCCCACCGAAGGGCCAAGAAACACCUGCCUGG\
) } def
/len { sequence length } bind def

/coor [
[317.24731445 418.25833130]
[312.25619507 413.85266113]
[308.84686279 408.07449341]
[307.38137817 401.47470093]
[308.03469849 394.69400024]
[310.77444458 388.40081787]
[301.92031860 376.29278564]
[293.06622314 364.18475342]
[279.30807495 358.47839355]
[277.40774536 342.77172852]
[268.55364990 330.66366577]
[259.69952393 318.55563354]
[247.79498291 316.38931274]
[240.31991577 306.36950684]
[241.72082520 293.54394531]
[233.05421448 281.30099487]
[224.38761902 269.05804443]
[215.72100830 256.81509399]
[207.05439758 244.57214355]
[198.01487732 232.60188293]
[188.61102295 220.91567993]
[179.20716858 209.22946167]
[169.80331421 197.54325867]
[160.39944458 185.85705566]
[150.99559021 174.17083740]
[141.59173584 162.48463440]
[132.18788147 150.79843140]
[122.78401947 139.11221313]
[113.38016510 127.42601013]
[103.97631073 115.73979950]
[89.54891968 111.63485718]
[75.40160370 116.62017822]
[61.25429153 121.60549927]
[47.10697174 126.59082031]
[32.99846268 131.68492126]
[18.92959404 136.88751221]
[4.86072636 142.09010315]
[-5.19383717 155.04533386]
[-21.40166664 152.54766846]
[-27.08953667 137.16650391]
[-16.40625381 124.72466278]
[-0.34186384 128.02124023]
[13.72700405 122.81864929]
[27.79587173 117.61605835]
[32.98204422 112.34466553]
[42.12165070 112.44350433]
[56.26896667 107.45818329]
[70.41628265 102.47286224]
[84.56359863 97.48754120]
[83.06461334 82.56262970]
[68.20845795 80.49028015]
[53.35229874 78.41793823]
[38.49614334 76.34558868]
[23.50891685 83.00254822]
[10.41124725 73.13426208]
[12.67689323 56.89237595]
[27.97515297 50.98514938]
[40.56848526 61.48943329]
[55.42464447 63.56177902]
[70.28079987 65.63412476]
[85.13695526 67.70646667]
[90.48093414 62.44416046]
[77.16867828 55.53157425]
[79.62924957 40.73476410]
[94.46221924 38.50246429]
[101.16889191 51.91954422]
[106.51287079 46.65723419]
[104.66954803 31.77092743]
[102.82622528 16.88461876]
[91.39089966 2.45478725]
[98.84978485 -13.42755318]
[96.77743530 -28.28370857]
[94.70509338 -43.13986588]
[90.41792297 -51.21218872]
[92.71704865 -58.24055862]
[90.87372589 -73.12686920]
[89.03040314 -88.01317596]
[87.18707275 -102.89948273]
[85.34375000 -117.78578949]
[83.50042725 -132.67210388]
[81.65710449 -147.55841064]
[79.81378174 -162.44471741]
[75.65142822 -170.58209229]
[78.05850983 -177.57423401]
[76.44464874 -192.48715210]
[74.83078003 -207.40008545]
[71.50905609 -222.02766418]
[66.52372742 -236.17498779]
[61.53841019 -250.32229614]
[50.57156372 -263.25152588]
[59.95957947 -277.36892700]
[76.12414551 -272.25588989]
[75.68572235 -255.30761719]
[80.67105103 -241.16030884]
[85.65637207 -227.01298523]
[100.46134949 -229.42803955]
[115.26502228 -231.84286499]
[115.49600983 -246.84109497]
[115.72700500 -261.83932495]
[115.95799255 -276.83752441]
[107.50973511 -290.89309692]
[115.69367981 -305.10418701]
[132.09088135 -304.85165405]
[139.83331299 -290.39526367]
[130.95620728 -276.60653687]
[130.72521973 -261.60830688]
[130.49423218 -246.61009216]
[130.26324463 -231.61187744]
[118.93572235 -214.46607971]
[103.64408112 -206.97994995]
[89.74370575 -209.01396179]
[91.35757446 -194.10102844]
[92.97144318 -179.18809509]
[94.70008850 -164.28804016]
[96.54341125 -149.40173340]
[98.38673401 -134.51542664]
[100.23005676 -119.62911224]
[102.07338715 -104.74280548]
[103.91670990 -89.85649872]
[105.76003265 -74.97019196]
[107.60335541 -60.08388519]
[109.56124878 -45.21221161]
[111.63359833 -30.35605431]
[113.70594025 -15.49989796]
[123.16911316 -7.95937157]
[125.01443481 4.40460443]
[117.71253204 15.04129505]
[119.55585480 29.92760277]
[121.39917755 44.81391144]
[115.66251373 106.33594513]
[125.06637573 118.02214813]
[134.47023010 129.70835876]
[143.87408447 141.39456177]
[153.27793884 153.08078003]
[162.68180847 164.76698303]
[172.08566284 176.45320129]
[181.48951721 188.13940430]
[190.89337158 199.82560730]
[200.29722595 211.51182556]
[209.70108032 223.19802856]
[213.81553650 224.62461853]
[216.94456482 227.04504395]
[218.89646912 230.02639771]
[219.64022827 233.11801147]
[219.29734802 235.90553284]
[227.96395874 248.14849854]
[236.63056946 260.39144897]
[245.29718018 272.63439941]
[253.96377563 284.87734985]
[270.86511230 292.18023682]
[271.80755615 309.70150757]
[280.66168213 321.80957031]
[289.51577759 333.91760254]
[303.90725708 340.49002075]
[305.17425537 355.33062744]
[314.02838135 367.43865967]
[322.88247681 379.54672241]
[345.50552368 387.09701538]
[347.41940308 410.14251709]
[357.35293579 421.38195801]
[367.28646851 432.62139893]
[377.22000122 443.86083984]
[385.25265503 448.22186279]
[387.21832275 455.35067749]
[396.97760010 466.74176025]
[406.73687744 478.13284302]
[416.49615479 489.52389526]
[435.84866333 484.87570190]
[454.80630493 490.67218018]
[468.14370728 505.23190308]
[472.22714233 524.46960449]
[466.00436401 543.04229736]
[476.61096191 553.64886475]
[487.21755981 564.25549316]
[497.82415771 574.86206055]
[513.62646484 574.61145020]
[524.91931152 585.66796875]
[525.00286865 601.47204590]
[513.82757568 612.64739990]
[498.02346802 612.56384277]
[486.96694946 601.27099609]
[487.21755981 585.46868896]
[476.61096191 574.86206055]
[466.00436401 564.25549316]
[455.39776611 553.64886475]
[445.99130249 558.17449951]
[435.67694092 559.91107178]
[425.26538086 558.71026611]
[415.57827759 554.65509033]
[407.38345337 548.05426025]
[401.33386230 539.41876221]
[397.91577148 529.42224121]
[397.40951538 518.84863281]
[399.86669922 508.53036499]
[405.10507202 499.28317261]
[395.34579468 487.89212036]
[385.58651733 476.50103760]
[375.82723999 465.10995483]
[365.98056030 453.79437256]
[356.04702759 442.55493164]
[346.11349487 431.31549072]
[336.17996216 420.07604980]
[329.83468628 421.49850464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 157]
[7 156]
[8 155]
[10 153]
[11 152]
[12 151]
[15 149]
[16 148]
[17 147]
[18 146]
[19 145]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 49]
[32 48]
[33 47]
[34 46]
[35 44]
[36 43]
[37 42]
[50 61]
[51 60]
[52 59]
[53 58]
[67 129]
[68 128]
[69 127]
[71 124]
[72 123]
[73 122]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[84 113]
[85 112]
[86 111]
[87 95]
[88 94]
[89 93]
[97 108]
[98 107]
[99 106]
[100 105]
[159 202]
[160 201]
[161 200]
[162 199]
[164 198]
[165 197]
[166 196]
[167 195]
[172 185]
[173 184]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
