%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCACGUGGCGGCGGGGCGGGGACCGGGCGGGCCGGGCGCUGGGAGCUGGCUGUCCCAGGAGCAGAGCAGUCUCCCUGUCCAGAUCACCAGGAUCCCUGCUUGCUGGAGAAUGACCCAGAUGUCCCAGGUGCAGGAGCUCUUCCAUGAGGCAGCCCAGCAGGAUGCCCUGGCCCAGCCCCAGCCCUGGUGGAAGACCCAGCUGUUCAUGU\
) } def
/len { sequence length } bind def

/coor [
[159.00265503 1021.88183594]
[144.18888855 1028.04064941]
[130.20753479 1020.17297363]
[127.78389740 1004.31402588]
[138.77717590 992.62951660]
[139.66577148 977.65588379]
[140.55438232 962.68225098]
[141.44299316 947.70855713]
[142.33160400 932.73492432]
[143.22021484 917.76129150]
[143.99784851 902.78143311]
[144.66448975 887.79626465]
[145.33111572 872.81109619]
[145.99774170 857.82586670]
[138.83370972 844.76733398]
[147.17666626 831.32464600]
[147.84329224 816.33947754]
[148.50991821 801.35430908]
[148.28764343 786.35595703]
[147.17726135 771.39709473]
[146.06686401 756.43823242]
[144.95646667 741.47943115]
[143.84606934 726.52056885]
[131.10502625 718.85217285]
[125.25333405 704.98779297]
[128.72817993 690.16284180]
[140.40104675 680.11047363]
[139.29064941 665.15161133]
[138.18025208 650.19281006]
[137.06985474 635.23394775]
[135.84864807 620.28375244]
[134.51670837 605.34295654]
[133.18478394 590.40222168]
[131.85284424 575.46148682]
[130.52090454 560.52075195]
[129.18896484 545.58001709]
[127.85702515 530.63922119]
[126.52508545 515.69848633]
[122.80036926 509.31573486]
[125.28578949 500.52673340]
[124.17539215 485.56790161]
[110.25721741 480.20599365]
[100.00513458 469.28793335]
[95.49162292 454.94259644]
[97.66301727 439.99917603]
[106.14163208 427.42938232]
[119.29019165 419.75625610]
[118.17979431 404.79742432]
[117.06939697 389.83856201]
[115.95899963 374.87973022]
[114.84860992 359.92086792]
[113.62740326 344.97067261]
[112.29546356 330.02993774]
[110.96353149 315.08917236]
[109.63159180 300.14843750]
[108.29965210 285.20767212]
[99.46278381 273.21774292]
[105.94412231 258.78503418]
[104.61218262 243.84428406]
[103.16957855 228.91381836]
[101.61639404 213.99444580]
[100.06320190 199.07507324]
[96.98548126 195.42404175]
[96.16812897 189.80105591]
[98.69179535 183.69152832]
[97.58139801 168.73268127]
[96.47100067 153.77384949]
[95.36060333 138.81500244]
[94.25020599 123.85615540]
[87.21470642 123.08563232]
[80.23939514 120.17448425]
[73.98485565 115.12059784]
[69.11042786 108.12591553]
[66.21163177 99.59357452]
[65.75965118 90.10616302]
[68.04850006 80.38600159]
[59.12417603 68.32961273]
[50.19984818 56.27323151]
[41.27552414 44.21685028]
[26.02495003 46.03773499]
[11.91345215 39.97463226]
[2.73694992 27.65848923]
[0.96387696 12.40228462]
[7.07118082 -1.69013882]
[19.41602707 -10.82799053]
[34.67771530 -12.55323410]
[48.75092697 -6.40178776]
[57.85003662 5.97164106]
[59.52743530 21.23866081]
[53.33190536 35.29252243]
[62.25623322 47.34890366]
[71.18055725 59.40528870]
[80.10488892 71.46166992]
[87.50546265 70.24452972]
[92.79759216 56.20909119]
[102.30661774 67.81023407]
[109.70719910 66.59308624]
[114.30015564 52.31356430]
[118.89310455 38.03403854]
[123.48606110 23.75451660]
[128.07901001 9.47499371]
[120.59034729 -1.71973896]
[120.91157532 -14.98982525]
[128.70144653 -25.49640083]
[140.93618774 -29.53732109]
[145.74024963 -43.74721527]
[150.54429626 -57.95711136]
[155.34834290 -72.16700745]
[140.95245361 -67.95294189]
[128.59510803 -76.45565796]
[127.38626862 -91.40686798]
[138.21708679 -101.78440094]
[153.10299683 -99.93784332]
[161.07002258 -87.22794342]
[166.91279602 -101.04322052]
[172.75556946 -114.85850525]
[166.58436584 -129.40814209]
[172.58618164 -144.02845764]
[187.20025635 -150.04548645]
[201.75630188 -143.88941956]
[207.61848450 -129.21255493]
[201.30886841 -114.72241211]
[186.57084656 -109.01573181]
[180.72807312 -95.20044708]
[174.88529968 -81.38516998]
[169.55822754 -67.36296082]
[164.75418091 -53.15306473]
[159.95013428 -38.94316864]
[155.14608765 -24.73327255]
[163.24029541 -9.99101353]
[158.06556702 6.36592102]
[142.35853577 14.06794834]
[137.76557922 28.34747124]
[133.17262268 42.62699509]
[128.57968140 56.90651703]
[123.98672485 71.18604279]
[130.64465332 104.78096771]
[109.20905304 122.74575806]
[110.31945038 137.70460510]
[111.42984772 152.66345215]
[112.54023743 167.62229919]
[113.65063477 182.58113098]
[114.98257446 197.52188110]
[116.53576660 212.44125366]
[118.08895111 227.36062622]
[122.08985901 235.57136536]
[119.55293274 242.51234436]
[120.88487244 257.45309448]
[129.81700134 270.51171875]
[123.24040222 283.87576294]
[124.57233429 298.81649780]
[125.90427399 313.75723267]
[127.23621368 328.69799805]
[128.56814575 343.63873291]
[132.44696045 351.90786743]
[129.80744934 358.81048584]
[130.91784668 373.76931763]
[132.02824402 388.72817993]
[133.13864136 403.68701172]
[134.24903870 418.64587402]
[148.38639832 424.29354858]
[158.62797546 435.47375488]
[162.98191833 449.93276978]
[160.63591003 464.78732300]
[152.10820007 477.09939575]
[139.13423157 484.45751953]
[140.24462891 499.41635132]
[141.46583557 514.36657715]
[142.79777527 529.30731201]
[144.12971497 544.24804688]
[145.46165466 559.18878174]
[146.79357910 574.12957764]
[148.12551880 589.07031250]
[149.45745850 604.01104736]
[150.78939819 618.95178223]
[154.66819763 627.22088623]
[152.02870178 634.12353516]
[153.13909912 649.08239746]
[154.24949646 664.04125977]
[155.35989380 679.00006104]
[168.38902283 687.21881104]
[174.01463318 701.36822510]
[170.27409363 715.94470215]
[158.80491638 725.41015625]
[159.91531372 740.36901855]
[161.02569580 755.32788086]
[162.13609314 770.28668213]
[163.24649048 785.24554443]
[172.25366211 773.25091553]
[186.55676270 768.73193359]
[200.82031250 773.37426758]
[209.72355652 785.44622803]
[209.94532776 800.44464111]
[201.40289307 812.77453613]
[187.28285217 817.83660889]
[172.85238647 813.74243164]
[163.49510193 802.02093506]
[162.82847595 817.00610352]
[162.16184998 831.99127197]
[169.27819824 846.12170410]
[160.98292542 858.49249268]
[160.31628418 873.47772217]
[159.64965820 888.46289062]
[158.98303223 903.44805908]
[161.72781372 912.15954590]
[158.19387817 918.64984131]
[157.30526733 933.62353516]
[156.41665649 948.59716797]
[155.52804565 963.57086182]
[154.63943481 978.54449463]
[153.75082397 993.51812744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 211]
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 204]
[12 203]
[13 202]
[14 201]
[16 199]
[17 198]
[18 197]
[19 188]
[20 187]
[21 186]
[22 185]
[23 184]
[27 180]
[28 179]
[29 178]
[30 177]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[40 167]
[41 166]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[58 148]
[59 147]
[60 145]
[61 144]
[62 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[76 93]
[77 92]
[78 91]
[79 90]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[105 129]
[106 128]
[107 127]
[108 126]
[114 125]
[115 124]
[116 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
