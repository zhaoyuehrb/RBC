%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUAUACAUAGGGAGGGCAAGAGCUCCGGGCCACUGAGAAGAUUCAAAACCUACAAAAGCCUGCCGCUGACAUUGAAGAACCAAUAUAUACAAUGGACAAACAAUCCAGUGCCGGCGGGGUGAAGAGGAGCGUCCCCUGUGAUUCCAACGAGGCCAACGAGAUGAUGCCGGAGACCUCGAGUGGGUACUCAG\
) } def
/len { sequence length } bind def

/coor [
[94.30103302 205.01887512]
[93.81529999 190.02674866]
[93.32957458 175.03460693]
[92.84384918 160.04248047]
[92.35811615 145.05033875]
[91.87239075 130.05821228]
[74.99044037 110.29875183]
[80.14048767 88.48493195]
[70.33427429 77.13423920]
[60.52806473 65.78354645]
[50.72185135 54.43285370]
[40.91564178 43.08216095]
[31.10943031 31.73146820]
[21.30321693 20.38077545]
[15.17309380 17.84343910]
[11.76600361 13.27255726]
[11.37050343 8.50008011]
[1.93699145 -3.16220331]
[-7.49652052 -14.82448673]
[-11.63370991 -16.24552917]
[-14.78001881 -18.67090988]
[-16.74069405 -21.66299629]
[-17.48413849 -24.76593971]
[-17.13360977 -27.56081009]
[-25.79244041 -39.80926514]
[-34.45127106 -52.05772018]
[-43.11010361 -64.30617523]
[-51.76893234 -76.55462646]
[-67.00897980 -75.25530243]
[-80.76237488 -81.71601868]
[-89.37805939 -94.11103058]
[-90.62439728 -109.05434418]
[-84.26645660 -122.52439117]
[-92.92528534 -134.77284241]
[-101.58411407 -147.02130127]
[-115.59939575 -152.36657715]
[-130.21556091 -148.99493408]
[-144.83171082 -145.62330627]
[-152.99554443 -132.09085083]
[-168.35699463 -128.37580872]
[-181.80238342 -136.68225098]
[-185.35479736 -152.08212280]
[-176.90666199 -165.43893433]
[-161.47009277 -168.82833862]
[-148.20335388 -160.23945618]
[-133.58718872 -163.61109924]
[-118.97103119 -166.98272705]
[-133.41436768 -171.03120422]
[-147.85769653 -175.07966614]
[-162.82934570 -174.15786743]
[-176.48133850 -180.37260437]
[-185.61778259 -192.26904297]
[-188.09986877 -207.06227112]
[-183.34654236 -221.28919983]
[-172.47053528 -231.61938477]
[-158.01789856 -235.63452148]
[-143.37196350 -232.39471436]
[-131.96128845 -222.65835571]
[-126.45714569 -208.70518494]
[-116.67373657 -197.33482361]
[-106.89032745 -185.96447754]
[-110.02484131 -200.63331604]
[-113.15935516 -215.30215454]
[-116.29386902 -229.97099304]
[-119.42838287 -244.63983154]
[-122.56289673 -259.30865479]
[-125.69741058 -273.97750854]
[-129.18727112 -288.56588745]
[-133.03044128 -303.06518555]
[-136.87361145 -317.56451416]
[-147.62052917 -324.71340942]
[-150.51756287 -336.87973022]
[-144.54086304 -347.40692139]
[-148.14874268 -361.96658325]
[-151.75660706 -376.52621460]
[-155.36448669 -391.08587646]
[-170.24975586 -394.27801514]
[-182.22416687 -403.57858276]
[-188.94549561 -417.10058594]
[-189.12858582 -432.13812256]
[-182.79066467 -445.70794678]
[-171.23738098 -455.14123535]
[-174.84524536 -469.70086670]
[-178.45312500 -484.26049805]
[-193.23295593 -488.43807983]
[-203.93237305 -499.45709229]
[-207.67327881 -514.35345459]
[-203.44940186 -529.12011719]
[-192.39692688 -539.78491211]
[-177.48892212 -543.47912598]
[-162.73556519 -539.20898438]
[-152.10545349 -528.12310791]
[-148.45799255 -513.20361328]
[-152.77436829 -498.46371460]
[-163.89347839 -487.86837769]
[-160.28561401 -473.30874634]
[-156.67773438 -458.74908447]
[-142.05654907 -455.80184937]
[-130.11582947 -446.76144409]
[-123.25628662 -433.37832642]
[-122.88614655 -418.28253174]
[-129.13235474 -404.46688843]
[-140.80484009 -394.69372559]
[-137.19696045 -380.13409424]
[-133.58909607 -365.57446289]
[-129.98121643 -351.01480103]
[-117.14521027 -339.05691528]
[-122.37429810 -321.40768433]
[-118.53113556 -306.90835571]
[-114.68796539 -292.40905762]
[-111.82481384 -290.32827759]
[-109.83337402 -286.75076294]
[-109.40904999 -282.10421753]
[-111.02857208 -277.11203003]
[-107.89405823 -262.44317627]
[-104.75954437 -247.77433777]
[-101.62503052 -233.10549927]
[-98.49051666 -218.43666077]
[-95.35600281 -203.76782227]
[-92.22148895 -189.09898376]
[-89.33566284 -155.68013000]
[-80.67682648 -143.43168640]
[-72.01799774 -131.18322754]
[-57.19865417 -132.68409729]
[-43.52684021 -126.52474976]
[-34.71545029 -114.26808929]
[-33.21220779 -99.14733887]
[-39.52047729 -85.21346283]
[-30.86164856 -72.96500397]
[-22.20281792 -60.71654892]
[-13.54398632 -48.46809387]
[-4.88515520 -36.21963882]
[4.16576290 -24.25799942]
[13.59927464 -12.59571552]
[23.03278732 -0.93343198]
[32.65391159 10.57456493]
[42.46012115 21.92525673]
[52.26633453 33.27594757]
[62.07254410 44.62664032]
[71.87875366 55.97733307]
[81.68496704 67.32802582]
[91.49118042 78.67871857]
[104.86257935 75.47569275]
[118.85138702 80.60495758]
[128.36447144 93.53301239]
[129.23614502 110.71455383]
[141.19778442 119.76547241]
[153.15943909 128.81639099]
[171.47392273 130.66528320]
[177.67593384 147.07531738]
[189.78256226 155.93135071]
[201.88920593 164.78738403]
[213.99583435 173.64341736]
[226.10247803 182.49946594]
[240.13667297 176.41764832]
[255.23110962 178.16554260]
[267.34347534 187.17425537]
[273.28060913 200.94401550]
[271.53997803 215.73710632]
[283.64660645 224.59313965]
[298.00357056 218.94674683]
[313.12957764 221.98106384]
[324.19802856 232.72782898]
[327.67697144 247.75781250]
[322.45635986 262.27499390]
[310.20199585 271.64697266]
[294.82424927 272.88323975]
[281.23007202 265.58923340]
[273.75735474 252.09251404]
[274.79058838 236.69978333]
[262.68392944 227.84375000]
[249.11270142 233.98272705]
[234.19152832 232.49458313]
[221.93766785 223.67932129]
[215.70050049 209.82310486]
[217.24644470 194.60609436]
[205.13980103 185.75006104]
[193.03317261 176.89402771]
[180.92652893 168.03799438]
[168.81990051 159.18196106]
[156.81300354 160.72373962]
[146.65182495 153.43246460]
[144.10852051 140.77803040]
[132.14686584 131.72711182]
[120.18522644 122.67619324]
[106.86452484 129.57247925]
[107.35025024 144.56462097]
[107.83598328 159.55674744]
[108.32170868 174.54887390]
[108.80743408 189.54101562]
[109.29316711 204.53314209]
[115.84923553 220.16818237]
[102.64012146 230.79624939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[4 188]
[5 187]
[6 186]
[8 142]
[9 141]
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[17 135]
[18 134]
[19 133]
[24 132]
[25 131]
[26 130]
[27 129]
[28 128]
[33 123]
[34 122]
[35 121]
[36 47]
[37 46]
[38 45]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[68 110]
[69 109]
[70 108]
[73 106]
[74 105]
[75 104]
[76 103]
[82 97]
[83 96]
[84 95]
[146 185]
[147 184]
[148 183]
[150 180]
[151 179]
[152 178]
[153 177]
[154 176]
[159 171]
[160 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
