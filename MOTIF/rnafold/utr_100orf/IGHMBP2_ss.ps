%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGUAACGCACGGGCCCGGCGGGGAACACCGGUCCGCUGUAACACCGGCCCGGCGCAGAAGCGGGACGUCGGCUUCUAGGGGCCCAGGCCGGCGGCGGCGAUGGCCUCGGCAGCUGUGGAGAGCUUCGUGACCAAGCAACUGGACCUGCUGGAGCUUGAGAGAGACGCGGAGGUGGAGGAGCGCAGGUCCUGGCAGGAGA\
) } def
/len { sequence length } bind def

/coor [
[102.66278839 122.79134369]
[99.43823242 137.44064331]
[96.21367645 152.08996582]
[92.98912048 166.73927307]
[89.76456451 181.38858032]
[92.26459503 198.15718079]
[76.84339142 205.20152283]
[65.80532837 192.33305359]
[75.11525726 178.16401672]
[78.33981323 163.51470947]
[81.56436920 148.86540222]
[84.78892517 134.21609497]
[88.01348114 119.56678772]
[75.86459351 110.76879883]
[62.95228577 118.40242004]
[50.03997421 126.03604126]
[37.12765884 133.66966248]
[24.21534920 141.30328369]
[11.73524952 149.62477112]
[-0.27602988 158.60971069]
[-12.28730965 167.59465027]
[-24.29858971 176.57960510]
[-36.30986786 185.56454468]
[-48.32114792 194.54948425]
[-60.33242798 203.53442383]
[-59.13471985 218.91522217]
[-66.46275330 232.49107361]
[-79.97817230 239.92994690]
[-95.36825562 238.85815430]
[-107.72209167 229.61767578]
[-113.09761047 215.15713501]
[-109.77950287 200.09082031]
[-98.82656860 189.22634888]
[-83.73384857 186.03053284]
[-69.31736755 191.52314758]
[-57.30608749 182.53820801]
[-45.29481125 173.55325317]
[-33.28353119 164.56831360]
[-21.27225113 155.58337402]
[-9.26097107 146.59843445]
[2.75030875 137.61349487]
[-12.10186672 135.51281738]
[-22.22573090 124.44450378]
[-22.99692535 109.46434784]
[-14.06318092 97.41493988]
[0.49475843 93.80019379]
[14.02714443 100.27124023]
[20.35267639 113.87226105]
[16.58172607 128.39097595]
[29.49403763 120.75735474]
[42.40634918 113.12373352]
[55.31866074 105.49011230]
[68.23097229 97.85648346]
[74.21161652 84.10032654]
[70.98706055 69.45101929]
[67.64924622 54.82709885]
[64.19837952 40.22944641]
[60.74750519 25.63179398]
[55.72471619 17.99443054]
[57.35803604 10.78155994]
[54.13348007 -3.86774826]
[50.90892029 -18.51705742]
[47.68436432 -33.16636658]
[44.45980835 -47.81567383]
[29.91067886 -52.53478622]
[19.74421120 -63.82814026]
[16.61631584 -78.59575653]
[21.26906586 -92.85086060]
[32.35770416 -102.79609680]
[29.13314629 -117.44540405]
[24.22915077 -125.15958405]
[25.97389412 -132.34631348]
[22.97642326 -147.04376221]
[19.97895432 -161.74122620]
[16.98148537 -176.43867493]
[13.98401546 -191.13613892]
[3.64506793 -203.11180115]
[8.68300247 -217.12852478]
[5.68553305 -231.82598877]
[0.90150297 -239.61512756]
[2.75725317 -246.77400208]
[-0.01241100 -261.51608276]
[-2.78207517 -276.25814819]
[-5.55173969 -291.00024414]
[-8.32140350 -305.74230957]
[-11.09106827 -320.48440552]
[-24.95456314 -327.20077515]
[-32.12119293 -340.63552856]
[-30.02751923 -355.53790283]
[-19.68400383 -366.22198486]
[-22.45366859 -380.96408081]
[-25.22333336 -395.70614624]
[-27.99299812 -410.44824219]
[-39.07868195 -422.53292847]
[-33.89844894 -438.09240723]
[-17.78127861 -441.12039185]
[-7.30713272 -428.50198364]
[-13.25091648 -413.21789551]
[-10.48125172 -398.47583008]
[-7.71158743 -383.73373413]
[-4.94192314 -368.99166870]
[8.57396698 -362.79016113]
[15.93352604 -349.66381836]
[14.13156414 -334.54406738]
[3.65101314 -323.25405884]
[6.42067766 -308.51199341]
[9.19034195 -293.76989746]
[11.96000576 -279.02783203]
[14.72967052 -264.28573608]
[17.49933434 -249.54365540]
[20.38298798 -234.82345581]
[23.38045692 -220.12599182]
[33.50500488 -209.20158386]
[28.68147087 -194.13360596]
[31.67893982 -179.43614197]
[34.67641068 -164.73869324]
[37.67387772 -150.04124451]
[40.67134857 -135.34378052]
[43.78245544 -120.66996002]
[47.00701141 -106.02065277]
[61.24668121 -101.65059662]
[71.45496368 -90.66665649]
[74.81692505 -75.95056152]
[70.33204651 -61.43220520]
[59.10911560 -51.04022980]
[62.33367538 -36.39092255]
[65.55822754 -21.74161339]
[68.78278351 -7.09230471]
[72.00734711 7.55700350]
[75.34515381 22.18092155]
[78.79602814 36.77857590]
[82.24690247 51.37622833]
[86.84801483 57.16613007]
[85.63636780 66.22646332]
[88.86092377 80.87577057]
[103.70907593 73.33843994]
[122.82924652 77.99944305]
[136.30448914 96.31105804]
[149.76826477 102.92369843]
[160.06411743 96.96436310]
[171.83784485 96.72054291]
[182.15922546 102.13710785]
[188.51538086 111.76458740]
[189.42228699 123.14502716]
[202.67495728 130.17115784]
[215.92764282 137.19728088]
[229.18032837 144.22340393]
[242.43299866 151.24952698]
[255.68568420 158.27566528]
[268.93835449 165.30178833]
[282.19104004 172.32791138]
[286.53640747 172.01455688]
[290.36813354 173.00428772]
[293.33895874 174.97459412]
[295.24227905 177.52316284]
[296.02633667 180.22084045]
[308.81896973 188.05337524]
[321.61160278 195.88591003]
[334.40423584 203.71842957]
[342.43048096 197.90199280]
[351.80624390 194.77760315]
[361.65808105 194.61763000]
[371.07373047 197.41912842]
[379.18670654 202.90574646]
[385.25601196 210.55493164]
[388.73370361 219.64756775]
[389.31445312 229.33564758]
[386.96228027 238.72132874]
[399.11114502 247.51931763]
[411.26004028 256.31732178]
[427.61883545 257.46710205]
[434.55825806 272.32565308]
[424.93960571 285.60775757]
[408.65774536 283.64990234]
[402.46206665 268.46618652]
[390.31317139 259.66821289]
[378.16427612 250.87022400]
[359.39663696 258.61901855]
[339.62438965 253.42320251]
[326.91894531 237.23001099]
[326.57171631 216.51107788]
[313.77908325 208.67854309]
[300.98645020 200.84600830]
[288.19381714 193.01348877]
[275.16491699 185.58059692]
[261.91223145 178.55447388]
[248.65956116 171.52833557]
[235.40687561 164.50221252]
[222.15420532 157.47608948]
[208.90151978 150.44996643]
[195.64883423 143.42382812]
[182.39616394 136.39770508]
[165.25735474 142.81703186]
[148.58023071 134.53407288]
[143.15562439 116.38746643]
[129.69184875 109.77483368]
[122.93458557 113.02896118]
[131.57989502 125.28696442]
[140.30589294 137.48765564]
[132.58006287 150.34500122]
[117.71096039 148.36766052]
[113.61349487 133.93913269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[5 9]
[14 53]
[15 52]
[16 51]
[17 50]
[18 49]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[54 135]
[55 134]
[56 132]
[57 131]
[58 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[69 120]
[70 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
[78 112]
[79 111]
[81 110]
[82 109]
[83 108]
[84 107]
[85 106]
[86 105]
[90 101]
[91 100]
[92 99]
[93 98]
[138 196]
[139 195]
[144 192]
[145 191]
[146 190]
[147 189]
[148 188]
[149 187]
[150 186]
[151 185]
[156 184]
[157 183]
[158 182]
[159 181]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
