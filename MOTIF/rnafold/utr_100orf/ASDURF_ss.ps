%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAUUGGUAAGACUCGCGGGAAAAGAAAGGGUGAGCGCGGCUGGAAGCGCGCAUGCGCUGUGGCUAAUGCCGUAGGCUCCUUCAGGGCUGAGCCAUCCCGCGUGUCUUGCGCUCGGUGGAAAUGCCCAGCCGAGGGACGCGACCAGAGGACAGCUCUGUGCUGAUCCCCACCGACAAUUCGACCCCACACAAGGAGGAUCUAAGCAGCAAGAUUAAAGAAC\
) } def
/len { sequence length } bind def

/coor [
[106.85605621 163.45637512]
[103.50352478 148.83583069]
[100.15100098 134.21527100]
[90.29593658 132.81065369]
[81.26227570 128.62875366]
[73.81468201 122.02355957]
[68.58356476 113.55416107]
[66.01170349 103.93746948]
[51.09535599 102.35552979]
[36.17900848 100.77359772]
[21.26265907 99.19165802]
[6.34630919 97.60971832]
[-8.57004070 96.02778625]
[-23.48638916 94.44584656]
[-38.02559662 100.68460083]
[-49.86589813 91.64820099]
[-64.78224945 90.06626129]
[-79.69859314 88.48432159]
[-94.61494446 86.90238953]
[-109.53129578 85.32044983]
[-124.44764709 83.73851013]
[-139.36399841 82.15657806]
[-140.60856628 92.25096130]
[-145.50897217 102.33255768]
[-154.09645081 111.08338165]
[-165.93618774 117.18866730]
[-180.13894653 119.49750519]
[-195.42658997 117.17486572]
[-210.24682617 109.82725525]
[-224.49955750 114.50269318]
[-235.20056152 126.15598297]
[-249.70545959 122.77117157]
[-263.95819092 127.44660187]
[-278.21093750 132.12203979]
[-288.91192627 143.77532959]
[-303.41683960 140.39051819]
[-317.66955566 145.06594849]
[-331.92230225 149.74137878]
[-346.17501831 154.41680908]
[-360.42776489 159.09223938]
[-365.05282593 173.90400696]
[-377.52078247 183.14140320]
[-393.03747559 183.25245667]
[-405.63638306 174.19447327]
[-410.47299194 159.45042419]
[-405.68750000 144.68969727]
[-393.12005615 135.58810425]
[-377.60308838 135.64538574]
[-365.10317993 144.83950806]
[-350.85046387 140.16407776]
[-336.59771729 135.48864746]
[-322.34500122 130.81321716]
[-308.09225464 126.13778687]
[-298.41070557 114.81890869]
[-282.88635254 117.86930847]
[-268.63363647 113.19387054]
[-254.38088989 108.51844025]
[-244.69935608 97.19956207]
[-229.17498779 100.24996185]
[-214.92225647 95.57452393]
[-214.86943054 88.07471466]
[-214.76377869 73.07508850]
[-214.71095276 65.57527161]
[-228.89639282 60.69952011]
[-243.08184814 55.82376862]
[-259.06567383 59.49106979]
[-270.03390503 47.29968643]
[-264.70336914 31.79106522]
[-248.55766296 28.91914749]
[-238.20610046 41.63831711]
[-224.02064514 46.51406860]
[-209.83518982 51.38982010]
[-205.69590759 45.13551331]
[-212.38967896 31.71189880]
[-197.41734314 32.62690353]
[-193.27806091 26.37259674]
[-203.30978394 15.22071266]
[-213.34150696 4.06882811]
[-223.37322998 -7.08305645]
[-233.40495300 -18.23494148]
[-248.41287231 -14.97025394]
[-263.03753662 -19.66219139]
[-273.34503174 -31.04864502]
[-276.56265259 -46.06671524]
[-271.82492065 -60.67661667]
[-260.40618896 -70.94836426]
[-245.37812805 -74.11889648]
[-230.78314209 -69.33537292]
[-220.54724121 -57.88452530]
[-217.42382812 -42.84657669]
[-222.25306702 -28.26666451]
[-212.22134399 -17.11478043]
[-202.18962097 -5.96289539]
[-192.15789795 5.18898916]
[-182.12617493 16.34087372]
[-143.65724182 35.18553543]
[-137.78205872 67.24022675]
[-122.86570740 68.82216644]
[-107.94935608 70.40409851]
[-93.03301239 71.98603821]
[-78.11666107 73.56797791]
[-63.20030975 75.14990997]
[-48.28396225 76.73184967]
[-34.81167221 70.37994385]
[-21.90445328 79.52949524]
[-6.98810339 81.11143494]
[7.92824602 82.69337463]
[22.84459496 84.27530670]
[37.76094437 85.85724640]
[52.67729187 87.43918610]
[67.59364319 89.02111816]
[81.44967651 67.63533020]
[108.15274048 60.43898773]
[134.77490234 73.89869690]
[146.79739380 64.92877197]
[158.81988525 55.95883942]
[170.84237671 46.98891068]
[182.86486816 38.01898193]
[194.88735962 29.04905128]
[206.90986633 20.07912254]
[201.60673523 16.86202049]
[197.06144714 11.79685688]
[193.77421570 5.08534145]
[192.19073486 -2.95019722]
[192.67506409 -11.88114548]
[195.48608398 -21.19274521]
[203.49848938 -33.87349319]
[211.51091003 -46.55423737]
[207.78883362 -61.91398239]
[216.08914185 -75.36316681]
[231.48738098 -78.92263031]
[244.84805298 -70.48060608]
[248.24452209 -55.04559326]
[239.66171265 -41.77491760]
[224.19165039 -38.54183197]
[216.17924500 -25.86108398]
[208.16683960 -13.18033791]
[212.56666565 -7.10650587]
[224.71434021 -15.90618038]
[236.86199951 -24.70585442]
[249.00965881 -33.50552750]
[257.84353638 -45.62833405]
[272.10284424 -40.97294235]
[272.08163452 -25.97295570]
[257.80932617 -21.35786438]
[245.66166687 -12.55819035]
[233.51400757 -3.75851607]
[221.36634827 5.04115772]
[225.76618958 11.11499023]
[240.31263733 7.45427513]
[254.85908508 3.79356003]
[269.37939453 0.03047254]
[283.87280273 -3.83480072]
[298.36624146 -7.70007372]
[312.85968018 -11.56534672]
[322.10955811 -24.67333794]
[338.13281250 -25.47031784]
[348.63775635 -13.34491348]
[345.56591797 2.40130472]
[331.27374268 9.68918419]
[316.72497559 2.92808795]
[302.23153687 6.79336119]
[287.73809814 10.65863419]
[273.24465942 14.52390766]
[267.59667969 19.28045654]
[258.51980591 18.34000778]
[243.97334290 22.00072289]
[229.42689514 25.66143799]
[215.87979126 32.10161591]
[203.85729980 41.07154465]
[191.83480835 50.04147339]
[179.81230164 59.01140594]
[167.78981018 67.98133850]
[155.76731873 76.95126343]
[143.74482727 85.92119598]
[143.58634949 93.41951752]
[156.73236084 86.19577789]
[169.56124878 93.96878052]
[169.24397278 108.96542358]
[156.09780884 116.18888092]
[143.26939392 108.41616821]
[143.11091614 115.91449738]
[154.74369812 125.38437653]
[166.44287109 134.77207947]
[178.20790100 144.07714844]
[190.03817749 153.29911804]
[201.93310547 162.43753052]
[217.56886292 160.13560486]
[230.20269775 169.63095093]
[232.33917236 185.29017639]
[222.71078491 197.82290649]
[207.02984619 199.79371643]
[194.59960938 190.03335571]
[192.79470825 174.33245850]
[180.89976501 165.19406128]
[173.68693542 163.61305237]
[168.90283203 155.84217834]
[157.13780212 146.53710938]
[149.94796753 144.85464478]
[145.27380371 137.01715088]
[133.64103699 127.54726410]
[127.19348907 129.86729431]
[120.83147430 130.94569397]
[114.77155304 130.86274719]
[118.12407684 145.48329163]
[121.47660828 160.10385132]
[136.53692627 161.67408752]
[150.27032471 168.05158997]
[161.18710327 178.54455566]
[168.10310364 192.01481628]
[170.26812744 207.00119019]
[167.44732666 221.87806702]
[159.94668579 235.03173828]
[148.57980347 245.03538513]
[134.57969666 250.80386353]
[119.46496582 251.71148682]
[104.87516022 247.65977478]
[92.39287567 239.08824158]
[83.37208557 226.92665100]
[78.79130554 212.49421692]
[79.14742279 197.35646057]
[84.40180969 183.15539551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[8 111]
[9 110]
[10 109]
[11 108]
[12 107]
[13 106]
[14 105]
[16 103]
[17 102]
[18 101]
[19 100]
[20 99]
[21 98]
[22 97]
[29 60]
[30 59]
[32 57]
[33 56]
[34 55]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[63 72]
[64 71]
[65 70]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[114 175]
[115 174]
[116 173]
[117 172]
[118 171]
[119 170]
[120 169]
[126 137]
[127 136]
[128 135]
[149 168]
[150 167]
[151 166]
[152 164]
[153 163]
[154 162]
[155 161]
[182 201]
[183 200]
[184 198]
[185 197]
[186 195]
[187 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
