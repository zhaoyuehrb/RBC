%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:27:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCCCUGGGCCCGCCCCCUCUUCAGUCCAGGCCGGGCUUCCGCCCGGUCUGCCGGCAACGCUGCGGCCCCGCCCACGUCAUGGCGCCCGAGGAGAACGCGGGGACCGAACUCUUGCUGCAGAGUUUCGAGCGCCGCUUCCUGGCGGCACGCACACUGCGCUCCUUCCCCUGGCAGAGCU\
) } def
/len { sequence length } bind def

/coor [
[66.50439453 266.70986938]
[77.27111053 255.14036560]
[76.49468994 240.16047668]
[75.71826935 225.18058777]
[74.94184875 210.20068359]
[74.16542816 195.22079468]
[65.38493347 186.87678528]
[64.62994385 174.38563538]
[72.85150146 164.42541504]
[72.33375549 149.43435669]
[71.81601715 134.44328308]
[63.50939178 121.95329285]
[49.88453674 115.67927551]
[36.25968170 109.40525818]
[22.63482475 103.13124084]
[9.00996780 96.85722351]
[-4.49115610 104.27516174]
[-19.59485626 102.34342957]
[-30.53555870 92.01071167]
[-33.26140976 77.39196777]
[-46.88626862 71.11795044]
[-60.51112366 64.84393311]
[-74.13597870 58.56991577]
[-87.76083374 52.29589844]
[-101.38568878 46.02188110]
[-111.05216980 55.84842300]
[-123.99176788 61.44329453]
[-138.39872742 61.76986313]
[-152.16462708 56.54541779]
[-163.18701172 46.31667328]
[-169.68974304 32.41141129]
[-184.54695129 34.47621536]
[-199.40415955 36.54101944]
[-214.26136780 38.60581970]
[-229.11857605 40.67062378]
[-243.97578430 42.73542786]
[-258.83297729 44.80022812]
[-273.69018555 46.86503220]
[-288.54739380 48.92983627]
[-301.14605713 59.42772293]
[-316.44131470 53.51273346]
[-318.69873047 37.26969910]
[-305.59603882 27.40806007]
[-290.61221313 34.07262802]
[-275.75500488 32.00782394]
[-260.89779663 29.94302177]
[-246.04058838 27.87821960]
[-231.18338013 25.81341743]
[-216.32617188 23.74861526]
[-201.46896362 21.68381119]
[-186.61175537 19.61900902]
[-171.75454712 17.55420685]
[-166.67835999 3.43924141]
[-176.81750488 -7.61505842]
[-186.95666504 -18.66935730]
[-197.09582520 -29.72365761]
[-210.54542542 -28.75369453]
[-221.92755127 -35.61413193]
[-227.19454956 -47.60324097]
[-224.62518311 -60.24506378]
[-234.57202148 -71.47272491]
[-244.51885986 -82.70038605]
[-252.57397461 -87.06369019]
[-254.53845215 -94.20875549]
[-264.29000854 -105.60643768]
[-272.26861572 -110.10812378]
[-274.10946655 -117.28603363]
[-283.66284180 -128.85032654]
[-293.21621704 -140.41462708]
[-307.96548462 -148.77499390]
[-304.01483154 -165.26222229]
[-287.07827759 -166.03010559]
[-281.65191650 -149.96800232]
[-272.09854126 -138.40370178]
[-262.54516602 -126.83940887]
[-252.89233398 -115.35799408]
[-243.14077759 -103.96031952]
[-233.29119873 -92.64722443]
[-223.34436035 -81.41956329]
[-213.39752197 -70.19190216]
[-196.59388733 -69.90262604]
[-184.96043396 -57.31036758]
[-186.04151917 -39.86281204]
[-175.90235901 -28.80851173]
[-165.76321411 -17.75421333]
[-155.62405396 -6.69991302]
[-137.43547058 -14.20167637]
[-118.35061646 -12.17881680]
[-102.93558502 -1.57733703]
[-94.65821075 14.66022110]
[-95.11167145 32.39702606]
[-81.48681641 38.67104340]
[-67.86196136 44.94506073]
[-54.23710632 51.21907806]
[-40.61225128 57.49309158]
[-26.98739433 63.76710892]
[-14.10732269 56.33462906]
[0.85653770 57.93052673]
[12.14333534 68.15116882]
[15.28398514 83.23236847]
[28.90884018 89.50638580]
[42.53369904 95.78040314]
[56.15855408 102.05442047]
[69.78340912 108.32843781]
[58.37757874 88.70318604]
[61.70233536 60.64598083]
[84.28689575 35.17931747]
[122.90464020 24.93376160]
[135.24938965 16.41279030]
[147.59416199 7.89181900]
[159.93891907 -0.62915200]
[172.20967102 -9.25634861]
[184.40551758 -17.98913002]
[196.60134888 -26.72190857]
[208.79719543 -35.45468903]
[211.12965393 -51.08591461]
[223.88142395 -60.42227936]
[239.48712158 -57.92469025]
[248.68814087 -45.07491684]
[246.02569580 -29.49650383]
[233.07936096 -20.43184853]
[217.52996826 -23.25884819]
[205.33413696 -14.52606773]
[193.13829041 -5.79328775]
[180.94244385 2.93949246]
[177.32513428 9.40680599]
[168.45988464 11.71560574]
[156.11512756 20.23657799]
[143.77037048 28.75754929]
[131.42561340 37.27851868]
[133.03134155 44.60461044]
[147.32633972 49.14918518]
[136.24282837 59.25679016]
[137.84855652 66.58288574]
[152.62564087 69.15927124]
[167.40272522 71.73565674]
[182.17980957 74.31204224]
[196.95689392 76.88842773]
[211.73397827 79.46481323]
[226.93893433 73.32139587]
[239.69342041 83.62941742]
[236.87672424 99.78485107]
[221.38641357 105.16838837]
[209.15759277 94.24189758]
[194.38050842 91.66551208]
[179.60342407 89.08912659]
[164.82633972 86.51274109]
[150.04925537 83.93635559]
[135.27217102 81.35997009]
[132.19407654 88.19921875]
[122.95979309 108.71696472]
[134.68727112 118.06931305]
[146.41473389 127.42165375]
[158.14221191 136.77400208]
[174.29557800 141.92231750]
[173.82014465 158.86959839]
[157.40356445 163.10423279]
[148.78985596 148.50148010]
[137.06239319 139.14912415]
[125.33491516 129.79678345]
[113.60744476 120.44443512]
[106.90735626 123.81471252]
[113.64791107 137.21488953]
[124.19931030 147.87641907]
[117.31999969 161.20590210]
[102.51712036 158.78213501]
[100.24772644 143.95545959]
[93.50717163 130.55526733]
[86.80707550 133.92555237]
[87.32482147 148.91661072]
[87.84255981 163.90766907]
[97.95715332 179.28088379]
[89.14532471 194.44438171]
[89.92174530 209.42427063]
[90.69816589 224.40415955]
[91.47458649 239.38404846]
[92.25100708 254.36395264]
[104.15612793 264.75833130]
[105.14100647 280.53192139]
[94.62132263 292.32647705]
[78.83821869 293.14453125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[5 174]
[6 173]
[9 171]
[10 170]
[11 169]
[12 104]
[13 103]
[14 102]
[15 101]
[16 100]
[20 96]
[21 95]
[22 94]
[23 93]
[24 92]
[25 91]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[53 86]
[54 85]
[55 84]
[56 83]
[60 80]
[61 79]
[62 78]
[64 77]
[65 76]
[67 75]
[68 74]
[69 73]
[108 130]
[109 129]
[110 128]
[111 127]
[112 125]
[113 124]
[114 123]
[115 122]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
