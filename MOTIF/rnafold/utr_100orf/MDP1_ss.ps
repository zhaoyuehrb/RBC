%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:16:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGCCAUUUGUCUAUGGCAGGCAGGGUGGCUGCCUUAGCUGCCGGAGGUUCCGCACUCUCUAAGGCCCCGGGUGAAGCCCCACCUCUGCUGCGCGCAGCCUGCGGUGCGGGUCAUGGCGCGGCUACCGAAGCUGGCAGUCUUUGAUUUGGAUUACACUCUCUGGCCUUUCUGGGUCGACACGCACGUAGACCCUCCGUUCCAUAAGAGCAGUG\
) } def
/len { sequence length } bind def

/coor [
[149.07072449 182.45645142]
[137.58006287 172.81463623]
[126.08938599 163.17282104]
[114.59872437 153.53100586]
[100.08198547 157.30783081]
[94.74722290 171.32710266]
[89.41246033 185.34638977]
[84.07769775 199.36567688]
[78.74294281 213.38496399]
[85.44094849 227.69972229]
[79.97662354 242.52929688]
[65.59185028 249.07559204]
[50.82086182 243.45478821]
[44.42702484 229.00160217]
[50.20368576 214.29087830]
[64.72365570 208.05020142]
[70.05841827 194.03091431]
[75.39318085 180.01162720]
[80.72794342 165.99234009]
[86.06269836 151.97306824]
[73.71318054 143.45899963]
[62.50780106 153.43093872]
[51.30242538 163.40287781]
[40.09704971 173.37481689]
[28.89167404 183.34675598]
[17.68629837 193.31869507]
[15.32179356 209.18653870]
[1.36987174 217.10635376]
[-13.46674728 211.00271606]
[-17.80667877 195.55783081]
[-8.32069874 182.61968994]
[7.71436071 182.11331177]
[18.91973686 172.14137268]
[30.12511253 162.16943359]
[41.33049011 152.19749451]
[52.53586578 142.22555542]
[63.74124146 132.25361633]
[55.97852707 108.81554413]
[60.98686600 86.56185150]
[75.47991180 71.45577240]
[68.16963959 58.35768509]
[60.85936356 45.25959778]
[53.54908752 32.16151047]
[46.23881149 19.06342506]
[38.92853546 5.96533918]
[31.61825943 -7.13274717]
[24.30798340 -20.23083305]
[-5.50598001 -21.99175453]
[-24.75385857 -47.88796234]
[-39.52597427 -50.49268723]
[-52.38178253 -41.69689178]
[-67.32570648 -44.54888535]
[-75.63191986 -56.85913849]
[-90.40403748 -59.46385956]
[-99.71159363 -47.31363297]
[-113.60438538 -40.89110184]
[-128.88995361 -41.67211914]
[-142.05578613 -49.47720718]
[-150.07647705 -62.51282120]
[-151.10891724 -77.78347015]
[-144.91586304 -91.78006744]
[-132.92044067 -101.28630066]
[-117.87911224 -104.11770630]
[-103.24825287 -99.62364960]
[-92.38993073 -88.83683014]
[-87.79931641 -74.23597717]
[-73.02719879 -71.63125610]
[-61.01155090 -80.35821533]
[-45.99341965 -77.92708588]
[-36.92125320 -65.26480103]
[-22.14913559 -62.66007996]
[-15.51480579 -76.11316681]
[-26.57396507 -86.24702454]
[-37.63312531 -96.38087463]
[-48.69228745 -106.51473236]
[-59.75144577 -116.64858246]
[-75.52777100 -115.70890045]
[-87.29215240 -126.26233673]
[-88.06498718 -142.04771423]
[-77.38776398 -153.69985962]
[-61.59509277 -154.30575562]
[-50.05648422 -143.50593567]
[-49.61759186 -127.70774078]
[-38.55843353 -117.57389069]
[-27.49927330 -107.44003296]
[-16.44011307 -97.30618286]
[-5.38095284 -87.17233276]
[-1.09475482 -86.94098663]
[2.95585990 -86.22303009]
[6.71891308 -85.06200409]
[6.50075436 -100.06041718]
[6.28259611 -115.05883026]
[6.06443739 -130.05723572]
[5.84627914 -145.05564880]
[5.62812042 -160.05406189]
[5.40996218 -175.05249023]
[2.15707636 -183.58396912]
[5.29929352 -190.27024841]
[5.29929352 -205.27024841]
[5.08113527 -220.26866150]
[4.64486408 -235.26231384]
[4.20859337 -250.25596619]
[3.77232265 -265.24963379]
[3.33605194 -280.24328613]
[2.89978123 -295.23693848]
[-3.60467720 -310.89349365]
[9.63941956 -321.47793579]
[23.47653961 -311.68148804]
[17.89343452 -295.67318726]
[18.32970619 -280.67953491]
[18.76597786 -265.68588257]
[19.20224762 -250.69223022]
[19.63851929 -235.69857788]
[20.07478905 -220.70492554]
[22.86947441 -216.83631897]
[23.26611137 -211.17187500]
[20.29929352 -205.27024841]
[20.29929352 -190.27024841]
[20.40837479 -175.27064514]
[20.62653351 -160.27223206]
[20.84469223 -145.27381897]
[21.06285095 -130.27540588]
[21.28100967 -115.27698517]
[21.49916840 -100.27857208]
[21.71732712 -85.28015900]
[29.38576508 -82.70385742]
[36.22325897 -78.33832550]
[41.81848145 -72.43319702]
[45.83171844 -65.33107758]
[48.01546860 -57.44772720]
[48.22970581 -49.24765396]
[46.45077896 -41.21680450]
[42.77348328 -33.83373642]
[37.40607071 -27.54110909]
[44.71634674 -14.44302368]
[52.02662277 -1.34493697]
[59.33689880 11.75314903]
[66.64717102 24.85123634]
[73.95745087 37.94932175]
[81.26772308 51.04740906]
[88.57800293 64.14549255]
[98.36629486 61.41392899]
[108.79016876 61.37622070]
[119.10340881 64.17269897]
[128.53182983 69.73605347]
[136.33116150 77.78698730]
[141.84510803 87.84594727]
[144.55909729 99.26075745]
[144.14541626 111.24858093]
[140.49588013 122.94960022]
[133.73910522 133.48861694]
[124.24053955 142.04034424]
[135.73120117 151.68215942]
[147.22186279 161.32397461]
[158.71253967 170.96577454]
[174.25752258 173.90924072]
[179.03373718 188.01728821]
[190.52439880 197.65910339]
[202.01507568 207.30091858]
[213.50573730 216.94273376]
[225.06622314 226.50073242]
[236.69589233 235.97441101]
[248.32557678 245.44808960]
[259.95526123 254.92175293]
[271.78884888 264.13949585]
[283.82067871 273.09686279]
[295.82986450 265.44338989]
[309.70089722 262.35467529]
[323.76361084 264.18176270]
[336.33181763 270.68502808]
[345.90554810 281.06536865]
[351.35006714 294.06237793]
[352.03033447 308.10736084]
[347.88504028 321.51266479]
[359.78533936 330.64410400]
[371.68563843 339.77551270]
[383.58593750 348.90692139]
[395.48623657 358.03836060]
[411.14483643 360.30096436]
[416.53189087 374.18722534]
[428.43218994 383.31866455]
[444.06658936 381.00756836]
[456.70599365 390.49548340]
[458.85165405 406.15344238]
[449.23062134 418.69183350]
[433.55084229 420.67184448]
[421.11489868 410.91879272]
[419.30075073 395.21896362]
[407.40045166 386.08755493]
[392.59307861 384.47808838]
[386.35482788 369.93865967]
[374.45452881 360.80722046]
[362.55422974 351.67581177]
[350.65393066 342.54440308]
[338.75363159 333.41296387]
[325.15148926 341.54702759]
[309.43109131 343.84332275]
[293.99591064 339.92089844]
[281.21731567 330.35180664]
[273.07028198 316.57803345]
[270.82803345 300.69409180]
[274.86331177 285.12869263]
[262.83145142 276.17132568]
[259.31204224 276.31610107]
[255.54743958 274.76577759]
[252.33409119 271.42352295]
[250.48158264 266.55145264]
[238.85189819 257.07775879]
[227.22222900 247.60409546]
[215.59254456 238.13041687]
[208.42402649 236.34370422]
[203.86392212 228.43341064]
[192.37326050 218.79159546]
[180.88258362 209.14978027]
[169.39192200 199.50796509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 153]
[4 152]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[49 71]
[50 70]
[53 67]
[54 66]
[72 87]
[73 86]
[74 85]
[75 84]
[76 83]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[98 118]
[99 117]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
[157 215]
[158 214]
[159 213]
[160 212]
[161 210]
[162 209]
[163 208]
[164 207]
[165 203]
[166 202]
[174 195]
[175 194]
[176 193]
[177 192]
[178 191]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
