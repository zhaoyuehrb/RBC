%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCAGCAGAGACGCUGCAGAGGGCUUUUCUUAGACAUCAACUGCAGACGGCUGGCAGGAUAGAAGCAGCGGCUCACUUGGACUUUUUCACCAGGGAAAUCAGAGACAAUGAUGGGGCUCUUCCCCAGAACUACAGGGGCUCUGGCCAUCUUCGUGGUGGUCAUAUUGGUUCAUGGAGAAUUGCGAAUAGAGACUAAAGGUCAAUAUG\
) } def
/len { sequence length } bind def

/coor [
[61.65440750 484.86499023]
[49.45386887 476.13876343]
[53.98236084 461.83932495]
[46.48257065 461.89544678]
[41.42261887 476.01623535]
[36.36267090 490.13702393]
[31.30271912 504.25784302]
[26.24276924 518.37860107]
[33.21906662 532.55981445]
[28.04540062 547.49334717]
[13.79122066 554.31927490]
[-1.08672261 548.98803711]
[-7.76161003 534.66247559]
[-2.27334881 519.84173584]
[12.12197304 513.31866455]
[17.18192291 499.19787598]
[22.24187279 485.07708740]
[27.30182266 470.95629883]
[32.36177063 456.83547974]
[25.67617035 444.28933716]
[23.89787292 430.83129883]
[26.81455231 418.23022461]
[33.62371445 407.99398804]
[43.08572388 401.18933105]
[53.72553253 398.33416748]
[53.72553253 383.33416748]
[43.04465866 373.01647949]
[42.83097839 357.80435181]
[53.72553253 346.67123413]
[53.72553253 331.67123413]
[53.72553253 316.67123413]
[53.72553253 301.67123413]
[53.72553253 286.67123413]
[42.85799789 270.67852783]
[53.20231247 253.37716675]
[52.75358200 238.38388062]
[49.41110992 231.79158020]
[52.41197586 223.16331482]
[52.18758392 208.16499329]
[51.96319199 193.16667175]
[51.73880386 178.16835022]
[51.51441193 163.17002869]
[40.59525681 152.88546753]
[25.61035919 153.55844116]
[10.62546349 154.23141479]
[-4.35943222 154.90438843]
[-19.33887482 155.68942261]
[-34.31202698 156.58648682]
[-47.69278336 166.06738281]
[-62.47884750 158.97483826]
[-63.45958328 142.60504150]
[-49.62609482 133.79785156]
[-35.20909119 141.61334229]
[-20.23593712 140.71627808]
[-13.74658871 137.17808533]
[-5.03240490 139.91949463]
[9.95249081 139.24652100]
[24.93738747 138.57354736]
[39.92228317 137.90057373]
[41.75483704 130.62789917]
[27.20949364 126.96279907]
[12.66421127 123.29745483]
[16.32979965 108.75222778]
[30.87459946 112.41745758]
[45.41994095 116.08256531]
[47.25249481 108.80989075]
[34.37576294 101.11640167]
[21.49903107 93.42291260]
[5.10255289 93.71875000]
[-3.11888790 79.52931976]
[5.29222298 65.45149231]
[21.68325615 65.96733093]
[29.19252014 80.54618073]
[42.06925201 88.23966980]
[54.94598389 95.93315887]
[60.24928665 90.62985992]
[70.85588837 80.02325439]
[76.15918732 74.71995544]
[68.46569824 61.84322357]
[60.77220917 48.96649170]
[53.07872009 36.08975983]
[45.38523102 23.21302795]
[29.96307182 22.81235504]
[17.21860886 14.11855030]
[11.21855640 -0.09422217]
[13.87750626 -15.29071903]
[24.34700012 -26.62179375]
[39.28625870 -30.47174263]
[53.92821884 -25.61205864]
[63.60068512 -13.59345055]
[65.21720886 1.74898744]
[58.26196289 15.51953888]
[65.95545197 28.39627075]
[73.64894104 41.27300262]
[81.34243011 54.14973450]
[89.03591919 67.02646637]
[96.32209778 65.24836731]
[100.52848053 50.85022736]
[110.89444733 61.69215775]
[118.18061829 59.91405487]
[119.07768250 44.94090271]
[119.97474670 29.96775055]
[120.87181091 14.99459934]
[109.39167786 4.37666464]
[107.47375488 -11.14285851]
[116.02362823 -24.23612595]
[131.00431824 -28.72089577]
[145.34237671 -22.47959900]
[152.26783752 -8.45918274]
[148.51069641 6.72033930]
[135.84495544 15.89166164]
[134.94789124 30.86481285]
[134.05084229 45.83796692]
[133.15377808 60.81111908]
[146.99040222 66.60315704]
[157.02735901 55.45598602]
[167.06431580 44.30881500]
[177.10127258 33.16164017]
[187.13822937 22.01446915]
[197.17520142 10.86729622]
[207.21215820 -0.27987584]
[217.24911499 -11.42704868]
[227.28607178 -22.57422066]
[221.45027161 -36.67763138]
[222.32020569 -51.91593552]
[229.72315979 -65.26355743]
[242.18927002 -74.07032013]
[257.24334717 -76.58763885]
[271.89645386 -72.31568146]
[283.23916626 -62.10266113]
[289.01937866 -47.97637939]
[288.08944702 -32.74161911]
[280.63397217 -19.42325020]
[268.13330078 -10.66564751]
[253.06939697 -8.20763779]
[238.43324280 -12.53726196]
[228.39628601 -1.39008915]
[218.35932922 9.75708294]
[208.32237244 20.90425491]
[198.28541565 32.05142975]
[188.24844360 43.19860077]
[178.21148682 54.34577179]
[168.17453003 65.49294281]
[158.13757324 76.64011383]
[164.94743347 90.00521851]
[179.86526489 88.43728638]
[194.78308105 86.86936188]
[209.70091248 85.30143738]
[224.61874390 83.73350525]
[239.53657532 82.16558075]
[254.45440674 80.59765625]
[265.62741089 69.08491516]
[281.58007812 70.78560638]
[290.07485962 84.39510345]
[284.59527588 99.47336578]
[269.34481812 104.45363617]
[256.02233887 95.51548004]
[241.10449219 97.08341217]
[226.18667603 98.65133667]
[211.26884460 100.21926117]
[196.35101318 101.78719330]
[181.43318176 103.35511780]
[166.51535034 104.92304230]
[157.10867310 136.63214111]
[133.32130432 160.41883850]
[100.52881622 170.14659119]
[66.51273346 162.94563293]
[66.73712158 177.94395447]
[66.96151733 192.94227600]
[67.18590546 207.94059753]
[67.41030121 222.93891907]
[67.74687195 237.93515015]
[68.19560242 252.92843628]
[76.53190613 259.91668701]
[79.58279419 270.12908936]
[76.57220459 280.12432861]
[68.72553253 286.67123413]
[68.72553253 301.67123413]
[68.72553253 316.67123413]
[68.72553253 331.67123413]
[68.72553253 346.67123413]
[79.62008667 357.80435181]
[79.40640259 373.01647949]
[68.72553253 383.33416748]
[68.72553253 398.33416748]
[88.72985077 407.85659790]
[98.58479309 430.45886230]
[90.52525330 456.40042114]
[95.79587555 470.44393921]
[101.06649780 484.48745728]
[115.17826080 491.08261108]
[120.32336426 505.39981079]
[113.94892883 518.81256104]
[119.21955109 532.85614014]
[124.49017334 546.89965820]
[129.76080322 560.94317627]
[140.98706055 573.64776611]
[131.88668823 587.95227051]
[115.62195587 583.16748047]
[115.71727753 566.21380615]
[110.44665527 552.17022705]
[105.17603302 538.12670898]
[99.90541077 524.08319092]
[86.28022766 518.17645264]
[80.73501587 504.00936890]
[87.02297211 489.75808716]
[81.75234985 475.71456909]
[76.48172760 461.67105103]
[68.98194122 461.72714233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[25 185]
[26 184]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[35 173]
[36 172]
[38 171]
[39 170]
[40 169]
[41 168]
[42 167]
[43 59]
[44 58]
[45 57]
[46 56]
[47 54]
[48 53]
[66 75]
[67 74]
[68 73]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[100 114]
[101 113]
[102 112]
[103 111]
[115 144]
[116 143]
[117 142]
[118 141]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[188 208]
[189 207]
[190 206]
[193 203]
[194 202]
[195 201]
[196 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
