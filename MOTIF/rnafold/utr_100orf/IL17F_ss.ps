%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACACAGGCAUACACAGGAAGAUACAUUCACAGAAAGAGCUUCCUGCACAAAGUAAGCCACCAGCGCAACAUGACAGUGAAGACCCUGCAUGGCCCAGCCAUGGUCAAGUACUUGCUGCUGUCGAUAUUGGGGCUUGCCUUUCUGAGUGAGGCGGCAGCUCGGAAAAUCC\
) } def
/len { sequence length } bind def

/coor [
[115.34156799 226.40707397]
[108.07913208 239.53173828]
[96.97582245 249.61720276]
[83.21545410 255.58815002]
[68.26513672 256.80798340]
[53.71884918 253.14662170]
[41.12749481 244.99444580]
[31.83354950 233.22064209]
[26.82791519 219.08050537]
[26.64428711 204.08161926]
[31.30224228 189.82316589]
[40.30515671 177.82536316]
[52.69289398 169.36749268]
[61.77904510 157.43258667]
[70.86519623 145.49768066]
[79.95133972 133.56278992]
[66.25559998 139.68051147]
[52.55985641 145.79824829]
[38.86411285 151.91598511]
[25.16837120 158.03370667]
[11.47262764 164.15144348]
[-2.22311497 170.26916504]
[-2.94863725 184.25836182]
[-9.60605049 196.50790405]
[-20.84263802 204.64848328]
[-34.42644882 207.13368225]
[-47.68954086 203.53346252]
[-58.05195999 194.60737610]
[-71.85714722 200.47393799]
[-85.66234589 206.34051514]
[-97.87507629 218.10000610]
[-112.55581665 209.61988831]
[-108.47115326 193.16535950]
[-91.52891541 192.53532410]
[-77.72372437 186.66874695]
[-63.91852951 180.80218506]
[-62.35621643 164.73594666]
[-52.85875702 151.56785583]
[-37.93543625 144.93847656]
[-21.61113167 146.73912048]
[-8.34084606 156.57342529]
[5.35489655 150.45570374]
[19.05064011 144.33796692]
[32.74638367 138.22023010]
[46.44212341 132.10250854]
[60.13786697 125.98477173]
[73.83361053 119.86704254]
[69.78857422 110.00568390]
[69.20495605 99.69937897]
[71.92973328 90.09127808]
[77.45446014 82.17768097]
[84.99313354 76.70491791]
[93.58744049 74.10033417]
[102.22566223 74.44371796]
[107.83911133 60.53367996]
[113.45256805 46.62364197]
[119.06601715 32.71360397]
[124.67947388 18.80356789]
[130.29292297 4.89353037]
[135.90637207 -9.01650715]
[136.22105408 -18.18330574]
[141.75148010 -23.12781715]
[147.61804199 -36.93301010]
[153.48461914 -50.73820496]
[159.35118103 -64.54339600]
[152.07763672 -72.37965393]
[147.85868835 -82.16196442]
[147.15660095 -92.75370026]
[150.02667236 -102.93348694]
[156.11369324 -111.53604126]
[164.69580078 -117.58555603]
[174.76995850 -120.40635681]
[185.16917419 -119.69830322]
[192.02781677 -133.03843689]
[198.88644409 -146.37857056]
[205.74508667 -159.71870422]
[212.60371399 -173.05883789]
[219.46235657 -186.39897156]
[226.32098389 -199.73910522]
[224.39717102 -219.78123474]
[241.02694702 -229.60519409]
[247.39379883 -243.18692017]
[253.76065063 -256.76864624]
[260.00320435 -270.40795898]
[266.12094116 -284.10369873]
[256.28662109 -297.37396240]
[254.48596191 -313.69827271]
[261.11535645 -328.62161255]
[274.28344727 -338.11904907]
[290.34967041 -339.68136597]
[296.21624756 -353.48657227]
[302.08282471 -367.29174805]
[307.94940186 -381.09695435]
[313.81594849 -394.90213013]
[319.68252563 -408.70733643]
[320.31256104 -425.64956665]
[336.76708984 -429.73425293]
[345.24722290 -415.05349731]
[333.48773193 -402.84075928]
[327.62115479 -389.03558350]
[321.75457764 -375.23037720]
[315.88800049 -361.42520142]
[310.02145386 -347.61999512]
[304.15487671 -333.81478882]
[313.08096313 -323.45239258]
[316.68118286 -310.18930054]
[314.19598389 -296.60546875]
[306.05541992 -285.36889648]
[293.80584717 -278.71148682]
[279.81668091 -277.98596191]
[273.69894409 -264.29022217]
[273.84243774 -256.87313843]
[267.34237671 -250.40179443]
[260.97552490 -236.82006836]
[254.60867310 -223.23834229]
[258.94763184 -213.93734741]
[257.39874268 -203.56906128]
[250.23674011 -195.61495972]
[239.66111755 -192.88046265]
[232.80249023 -179.54032898]
[225.94384766 -166.20019531]
[219.08522034 -152.86006165]
[212.22657776 -139.51992798]
[205.36795044 -126.17980194]
[198.50930786 -112.83966827]
[208.49595642 -96.06852722]
[206.36906433 -76.52125549]
[192.81301880 -62.08138275]
[173.15638733 -58.67682648]
[167.28981018 -44.87163162]
[161.42323303 -31.06643867]
[155.55667114 -17.26124763]
[149.81642151 -3.40305376]
[144.20295715 10.50698376]
[138.58950806 24.41702080]
[132.97605896 38.32705688]
[127.36260223 52.23709488]
[121.74915314 66.14713287]
[116.13569641 80.05716705]
[129.02151489 103.67654419]
[113.64323425 129.88714600]
[122.81084442 141.75959778]
[131.97845459 153.63203430]
[141.14605713 165.50448608]
[150.31365967 177.37693787]
[159.48126221 189.24937439]
[168.64886475 201.12182617]
[177.81648254 212.99427795]
[186.98408508 224.86672974]
[202.34475708 223.43389893]
[216.03109741 230.55343628]
[223.67584229 243.95349121]
[222.83956909 259.35815430]
[213.78912354 271.85189819]
[199.41249084 277.44796753]
[184.29719543 274.36068726]
[173.26646423 263.57519531]
[169.84017944 248.53312683]
[175.11163330 234.03433228]
[165.94403076 222.16188049]
[156.77642822 210.28942871]
[147.60881042 198.41699219]
[138.44120789 186.54454041]
[129.27360535 174.67208862]
[120.10600281 162.79965210]
[110.93839264 150.92720032]
[101.77079010 139.05474854]
[104.12416840 153.86898804]
[106.47753906 168.68322754]
[108.83091736 183.49746704]
[115.73862457 196.81225586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[28 36]
[29 35]
[30 34]
[54 139]
[55 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[62 132]
[63 131]
[64 130]
[65 129]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[81 115]
[82 114]
[83 113]
[84 111]
[85 110]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
[95 99]
[141 167]
[142 166]
[143 165]
[144 164]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
