%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCUUACGCGCCCCACUUCCGCUUCCGGCCCCGGGCUGUGGUGACUGGCGGUGUGGGGUGGGUCAGAGGGCAGUAGGUACCUCCAGGCGGGAGCAGCGUUUGCACCGCGGUGGGUUCCUGCGAGCUGGUGCAGAGGGGCCCCAGCGGGCCGGCCCCGGGGCACAUGCGACGACCUCCACCCCUGGGCCCCACGACGGCCUCAGGGCCUGAAGGCAAUGUGCGAAACCUGCAGAAGCGGCAGGCGCCAGGG\
CCAGGCGCGGCGG\
) } def
/len { sequence length } bind def

/coor [
[200.63363647 808.03906250]
[185.89839172 814.38348389]
[171.81932068 806.69201660]
[169.19668579 790.86474609]
[180.04234314 779.04309082]
[180.74281311 764.05944824]
[181.44328308 749.07586670]
[182.14375305 734.09222412]
[180.08415222 731.27099609]
[179.26980591 727.32269287]
[180.21099854 722.83483887]
[183.14031982 718.59869385]
[184.36523438 703.64880371]
[185.59013367 688.69891357]
[186.81504822 673.74902344]
[188.03994751 658.79907227]
[189.26486206 643.84918213]
[181.02253723 656.38171387]
[166.61906433 652.19366455]
[155.53236389 642.08990479]
[150.02885437 628.13604736]
[151.23359680 613.18450928]
[158.90029907 600.29180908]
[171.46170044 592.09356689]
[186.34991455 590.26568604]
[200.52140808 595.18188477]
[211.07907104 605.83703613]
[221.75515747 616.37371826]
[217.43756104 602.00854492]
[213.11997986 587.64337158]
[202.04672241 577.68182373]
[205.48434448 562.23858643]
[201.16676331 547.87341309]
[196.84918213 533.50823975]
[192.53158569 519.14306641]
[188.21400452 504.77786255]
[174.80601501 493.43258667]
[179.22888184 475.54083252]
[174.74382019 461.22705078]
[170.25877380 446.91326904]
[165.77371216 432.59951782]
[161.28866577 418.28573608]
[156.80360413 403.97195435]
[152.31855774 389.65817261]
[141.12971497 379.82662964]
[144.38674927 364.34429932]
[139.90168762 350.03051758]
[135.41664124 335.71673584]
[126.00955963 331.83779907]
[120.15169525 323.25109863]
[119.96389008 312.63906860]
[125.74800873 303.47973633]
[121.59848022 289.06512451]
[117.44895172 274.65048218]
[105.58689880 272.26071167]
[95.80038452 265.02246094]
[89.97356415 254.25328064]
[89.26034546 241.95742798]
[93.85639191 230.45294189]
[102.95066833 221.93467712]
[99.13893127 207.42706299]
[95.32719421 192.91946411]
[91.51546478 178.41184998]
[87.70372772 163.90425110]
[83.89199066 149.39663696]
[80.08026123 134.88903809]
[68.67132568 125.15064240]
[53.74517441 123.66403961]
[38.81901932 122.17743683]
[24.10513687 129.41854858]
[10.62957668 120.07289124]
[12.25484180 103.75447845]
[27.30899811 97.25029755]
[40.30562210 107.25128937]
[55.23177338 108.73789215]
[70.15792847 110.22448730]
[70.80114746 97.04501343]
[76.59874725 86.23208618]
[66.27449036 75.35046387]
[55.95022964 64.46884155]
[45.62596893 53.58722305]
[35.30170822 42.70560074]
[20.19031334 38.01984406]
[17.04329300 23.46149635]
[6.71903419 12.57987595]
[-3.60522532 1.69825542]
[-13.92948532 -9.18336487]
[-24.31711006 -20.00451279]
[-34.76774597 -30.76481819]
[-40.96007919 -32.91496658]
[-44.61219025 -37.21159744]
[-45.33315277 -41.90060043]
[-55.52962494 -52.90205383]
[-65.72609711 -63.90350342]
[-75.92257690 -74.90495300]
[-88.73584747 -76.16644287]
[-97.00150299 -85.50997925]
[-96.70909882 -97.58100128]
[-106.77639771 -108.70077515]
[-116.84369659 -119.82055664]
[-132.73117065 -122.04942322]
[-140.76986694 -135.93318176]
[-134.79321289 -150.82139587]
[-119.38596344 -155.29310608]
[-106.36724854 -145.91799927]
[-105.72391510 -129.88786316]
[-95.65661621 -118.76807404]
[-85.58931732 -107.64829254]
[-68.60887146 -103.15903473]
[-64.92112732 -85.10142517]
[-54.72464752 -74.09997559]
[-44.52817535 -63.09852600]
[-34.33169937 -52.09707642]
[-24.00744057 -41.21545410]
[-13.55680370 -30.45514870]
[-6.66661835 -27.85558510]
[-3.04786468 -19.50762558]
[7.27639484 -8.62600422]
[17.60065460 2.25561619]
[27.92491341 13.13723660]
[42.29784775 17.04466629]
[46.18333054 32.38134003]
[56.50758743 43.26296234]
[66.83184814 54.14458084]
[77.15610504 65.02619934]
[87.48036957 75.90782166]
[92.28255463 73.96895599]
[97.36551666 72.97716522]
[102.54432678 72.96852875]
[108.02056122 59.00389862]
[101.94250488 44.66182709]
[107.69512177 30.57771683]
[121.40554810 24.87160683]
[126.88178253 10.90697670]
[132.35801697 -3.05765295]
[137.83424377 -17.02228165]
[129.64854431 -30.07220650]
[130.70429993 -45.26229477]
[140.38755798 -56.78178406]
[154.82435608 -60.34781265]
[160.30059814 -74.31244659]
[165.77682495 -88.27706909]
[171.25306702 -102.24169922]
[176.72929382 -116.20632935]
[182.20552063 -130.17095947]
[187.51829529 -144.19859314]
[192.66688538 -158.28730774]
[189.30871582 -174.33894348]
[201.70948792 -185.06987000]
[217.11236572 -179.44104004]
[219.67216492 -163.24290466]
[206.75559998 -153.13871765]
[201.60700989 -139.05000305]
[202.75550842 -134.44702148]
[201.04916382 -129.07231140]
[196.17015076 -124.69472504]
[190.69392395 -110.73010254]
[185.21768188 -96.76547241]
[179.74145508 -82.80084229]
[174.26522827 -68.83621216]
[168.78898621 -54.87158203]
[176.95332336 -42.44251251]
[176.22476196 -27.41143608]
[166.67340088 -15.55290604]
[151.79887390 -11.54605007]
[146.32264709 2.41857958]
[140.84640503 16.38320923]
[135.37017822 30.34783936]
[141.54699707 43.85274124]
[136.19226074 58.09287262]
[121.98519135 64.48013306]
[116.50895691 78.44475555]
[122.46920776 83.90468597]
[126.64598846 90.99207306]
[128.60243225 99.13034058]
[128.08636475 107.62837982]
[125.05934906 115.73919678]
[119.70722961 122.72558594]
[112.43067932 127.92697906]
[103.81593323 130.82148743]
[94.58786774 131.07730103]
[98.39960480 145.58489990]
[102.21133423 160.09251404]
[106.02307129 174.60011292]
[109.83480835 189.10772705]
[113.64653778 203.61534119]
[117.45827484 218.12294006]
[134.56408691 224.22175598]
[144.47468567 239.25105286]
[143.36225891 257.06140137]
[131.86358643 270.50097656]
[136.01310730 284.91558838]
[140.16262817 299.33023071]
[155.28816223 312.69049072]
[149.73042297 331.23168945]
[154.21546936 345.54547119]
[158.70053101 359.85925293]
[170.21015930 370.71459961]
[166.63232422 385.17309570]
[171.11738586 399.48687744]
[175.60244751 413.80065918]
[180.08749390 428.11444092]
[184.57255554 442.42822266]
[189.05760193 456.74200439]
[193.54266357 471.05578613]
[204.57305908 477.69668579]
[208.02618408 489.68414307]
[202.57919312 500.46026611]
[206.89677429 514.82543945]
[211.21435547 529.19061279]
[215.53195190 543.55584717]
[219.84953308 557.92102051]
[231.23161316 568.91003418]
[227.48516846 583.32574463]
[231.80274963 597.69097900]
[236.12033081 612.05615234]
[243.56970215 625.07562256]
[253.76617432 636.07708740]
[263.96264648 647.07849121]
[279.52096558 647.83813477]
[289.70492554 659.14044189]
[288.88482666 673.96820068]
[299.08129883 684.96966553]
[307.17977905 689.11682129]
[309.33169556 696.15966797]
[319.39898682 707.27941895]
[329.46630859 718.39923096]
[334.36831665 719.97906494]
[337.84561157 722.96826172]
[339.60131836 726.59729004]
[339.68307495 730.08935547]
[349.35467529 741.55493164]
[359.02630615 753.02050781]
[368.69790649 764.48614502]
[378.36950684 775.95172119]
[394.00552368 775.73022461]
[406.09304810 785.65118408]
[408.92474365 801.03027344]
[401.16354370 814.60589600]
[386.47409058 819.96807861]
[371.79223633 814.58502197]
[364.05035400 800.99835205]
[366.90390015 785.62335205]
[357.23229980 774.15771484]
[347.56069946 762.69213867]
[337.88909912 751.22656250]
[328.21746826 739.76092529]
[318.34652710 728.46649170]
[308.27920532 717.34674072]
[298.21191406 706.22692871]
[288.07986450 695.16613770]
[277.88339233 684.16467285]
[263.03610229 683.85784912]
[252.53872681 672.84606934]
[252.96119690 657.27496338]
[242.76472473 646.27355957]
[232.56825256 635.27209473]
[218.39088440 640.17333984]
[204.21476746 645.07409668]
[202.98985291 660.02398682]
[201.76495361 674.97387695]
[200.54003906 689.92382812]
[199.31513977 704.87371826]
[198.09022522 719.82360840]
[197.12739563 734.79266357]
[196.42691040 749.77630615]
[195.72644043 764.75994873]
[195.02597046 779.74359131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 268]
[6 267]
[7 266]
[8 265]
[12 264]
[13 263]
[14 262]
[15 261]
[16 260]
[17 259]
[28 216]
[29 215]
[30 214]
[32 212]
[33 211]
[34 210]
[35 209]
[36 208]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 200]
[44 199]
[46 197]
[47 196]
[48 195]
[52 193]
[53 192]
[54 191]
[60 187]
[61 186]
[62 185]
[63 184]
[64 183]
[65 182]
[66 181]
[67 76]
[68 75]
[69 74]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[84 120]
[85 119]
[86 118]
[87 117]
[88 115]
[89 114]
[92 113]
[93 112]
[94 111]
[95 110]
[98 108]
[99 107]
[100 106]
[129 172]
[130 171]
[133 168]
[134 167]
[135 166]
[136 165]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 153]
[147 152]
[217 257]
[218 256]
[219 255]
[222 252]
[223 251]
[225 250]
[226 249]
[227 248]
[231 247]
[232 246]
[233 245]
[234 244]
[235 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
