%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST1H2AJ)
} def

/sequence { (\
AUGUCUGGGCGUGGUAAGCAGGGAGGCAAAGCUCGCGCCAAGGCCAAGACCCGCUCUUCUCGGGCCGGGCUUCAGUUUCCCGUAGGCCGAGUGCAUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.007000224 ubox
1 96 0.232742401 ubox
2 11 0.007536431 ubox
2 93 0.006684348 ubox
2 95 0.272860968 ubox
2 98 0.304068965 ubox
3 10 0.008074445 ubox
3 44 0.003623544 ubox
3 92 0.010768546 ubox
3 94 0.284572566 ubox
3 96 0.033387625 ubox
3 97 0.428748197 ubox
3 99 0.400651614 ubox
4 9 0.007690262 ubox
4 43 0.003676853 ubox
4 93 0.276423849 ubox
4 95 0.024411210 ubox
4 98 0.395090707 ubox
5 42 0.003691773 ubox
5 91 0.278453126 ubox
6 41 0.003415827 ubox
6 90 0.278077538 ubox
6 95 0.883328785 ubox
6 98 0.038660695 ubox
7 94 0.948716019 ubox
7 97 0.052940544 ubox
7 100 0.013449681 ubox
8 39 0.003744646 ubox
8 88 0.279349569 ubox
8 96 0.048344513 ubox
8 97 0.006696211 ubox
8 99 0.012883040 ubox
8 100 0.093634564 ubox
9 19 0.005664212 ubox
9 38 0.003761126 ubox
9 87 0.279385439 ubox
9 92 0.951459148 ubox
9 94 0.063025737 ubox
9 96 0.003426032 ubox
9 99 0.094813135 ubox
10 18 0.005689834 ubox
10 37 0.003764929 ubox
10 86 0.279323950 ubox
10 91 0.953109991 ubox
10 93 0.063028057 ubox
10 98 0.094901126 ubox
11 19 0.045029496 ubox
11 36 0.003764970 ubox
11 92 0.055485091 ubox
11 94 0.006620202 ubox
11 96 0.003428174 ubox
11 97 0.094040262 ubox
12 18 0.044744234 ubox
12 20 0.035104278 ubox
12 35 0.003761797 ubox
12 84 0.256469189 ubox
12 89 0.945966006 ubox
12 91 0.008968711 ubox
12 93 0.006911340 ubox
12 95 0.013043566 ubox
13 19 0.043035482 ubox
13 34 0.003740117 ubox
13 83 0.127126026 ubox
13 88 0.959930357 ubox
13 94 0.008901126 ubox
14 32 0.003348590 ubox
14 83 0.010080351 ubox
14 87 0.959987574 ubox
14 94 0.012102893 ubox
15 31 0.003275466 ubox
15 82 0.011153896 ubox
15 84 0.007770623 ubox
15 86 0.953066558 ubox
15 93 0.012219558 ubox
16 83 0.009015533 ubox
16 92 0.011593343 ubox
18 27 0.003515354 ubox
18 83 0.774846152 ubox
18 87 0.010130046 ubox
19 26 0.003517503 ubox
19 82 0.799622716 ubox
19 86 0.010120620 ubox
21 80 0.025974799 ubox
21 81 0.999107499 ubox
22 79 0.025430235 ubox
22 80 0.999640430 ubox
23 78 0.024804174 ubox
23 79 0.999654889 ubox
24 77 0.025557962 ubox
24 78 0.999007925 ubox
25 45 0.003593049 ubox
25 76 0.025393258 ubox
25 77 0.995471057 ubox
26 44 0.003607046 ubox
26 76 0.998205064 ubox
27 43 0.003605927 ubox
27 75 0.997074587 ubox
28 72 0.047526751 ubox
29 71 0.039138935 ubox
29 72 0.926779229 ubox
30 71 0.990801466 ubox
30 72 0.069844723 ubox
30 77 0.003268843 ubox
31 38 0.004618900 ubox
31 44 0.004637200 ubox
31 70 0.999826148 ubox
31 71 0.011491919 ubox
31 76 0.004465917 ubox
32 37 0.004620436 ubox
32 43 0.004641645 ubox
32 69 0.999887520 ubox
32 75 0.004567918 ubox
33 42 0.004198642 ubox
33 68 0.999190092 ubox
33 74 0.004586352 ubox
34 67 0.999687116 ubox
34 68 0.008962247 ubox
35 44 0.010625618 ubox
35 65 0.042207285 ubox
35 66 0.997787830 ubox
36 43 0.010840133 ubox
36 62 0.009399016 ubox
36 64 0.059511433 ubox
36 67 0.003704295 ubox
37 44 0.026676917 ubox
37 61 0.009592720 ubox
37 65 0.989748954 ubox
37 70 0.008415860 ubox
38 43 0.026762979 ubox
38 63 0.139192397 ubox
38 64 0.988974347 ubox
38 68 0.005133068 ubox
38 69 0.008461075 ubox
39 62 0.145107140 ubox
39 63 0.987321289 ubox
39 67 0.005230217 ubox
39 68 0.008493953 ubox
40 58 0.447389594 ubox
41 55 0.006500451 ubox
41 57 0.457180504 ubox
41 58 0.018573867 ubox
41 60 0.359315245 ubox
42 51 0.032594429 ubox
42 52 0.030446364 ubox
42 54 0.006312568 ubox
42 55 0.139032164 ubox
42 56 0.456959222 ubox
42 57 0.015824316 ubox
42 58 0.008744514 ubox
42 59 0.359625439 ubox
42 60 0.701479406 ubox
42 61 0.291217299 ubox
42 66 0.034177891 ubox
43 50 0.032896367 ubox
43 51 0.030224916 ubox
43 54 0.487007326 ubox
43 55 0.058474367 ubox
43 56 0.015037245 ubox
43 57 0.008231784 ubox
43 58 0.257570269 ubox
43 59 0.709542467 ubox
43 60 0.257447837 ubox
43 65 0.037620743 ubox
44 53 0.489869472 ubox
44 63 0.029137936 ubox
44 64 0.037513144 ubox
45 62 0.041073423 ubox
45 63 0.037393029 ubox
46 58 0.702336844 ubox
46 72 0.008055069 ubox
47 55 0.194005119 ubox
47 57 0.832523934 ubox
47 58 0.019614611 ubox
47 60 0.064714178 ubox
47 71 0.009101128 ubox
48 54 0.200272615 ubox
48 56 0.836182603 ubox
48 57 0.017227368 ubox
48 58 0.009606647 ubox
48 59 0.067979311 ubox
48 61 0.006050858 ubox
48 70 0.009225520 ubox
49 55 0.796158300 ubox
49 57 0.009793207 ubox
49 58 0.066938737 ubox
49 60 0.005724297 ubox
50 64 0.024883192 ubox
50 68 0.003358190 ubox
50 69 0.009906394 ubox
51 63 0.025832395 ubox
51 67 0.003406751 ubox
51 68 0.010121271 ubox
52 62 0.030100703 ubox
52 67 0.010127197 ubox
53 61 0.029427550 ubox
53 65 0.015722384 ubox
53 66 0.007263096 ubox
54 64 0.017264230 ubox
55 63 0.017208871 ubox
56 62 0.024638718 ubox
57 62 0.004105436 ubox
85 100 0.007885771 ubox
86 99 0.007955822 ubox
87 98 0.005687575 ubox
88 98 0.006053846 ubox
89 97 0.012741024 ubox
90 96 0.012859120 ubox
91 99 0.007156613 ubox
92 98 0.007325428 ubox
93 97 0.007413318 ubox
93 99 0.020680656 ubox
94 98 0.020600534 ubox
6 95 0.9500000 lbox
7 94 0.9500000 lbox
9 92 0.9500000 lbox
10 91 0.9500000 lbox
12 89 0.9500000 lbox
13 88 0.9500000 lbox
14 87 0.9500000 lbox
15 86 0.9500000 lbox
18 83 0.9500000 lbox
19 82 0.9500000 lbox
21 81 0.9500000 lbox
22 80 0.9500000 lbox
23 79 0.9500000 lbox
24 78 0.9500000 lbox
25 77 0.9500000 lbox
26 76 0.9500000 lbox
27 75 0.9500000 lbox
29 72 0.9500000 lbox
30 71 0.9500000 lbox
31 70 0.9500000 lbox
32 69 0.9500000 lbox
33 68 0.9500000 lbox
34 67 0.9500000 lbox
35 66 0.9500000 lbox
37 65 0.9500000 lbox
38 64 0.9500000 lbox
39 63 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
showpage
end
%%EOF
