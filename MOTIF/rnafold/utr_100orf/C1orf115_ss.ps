%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGGCGCUGCGGCCCCCCCAAUCCCCCGCCCCGUCCGGGCUGGGGCGGAGGAGCGGGCGGGGACCAAAGGUUGGUGUCUUUGCGCUCGGACCUUCGCCAGAGGGGCCGGGACAUCAUGACGGUGGGAGCCAGGCUCCGAAGCAAGGCGGAGAGCAGCCUCCUGCGCCGCGGGCCCCGAGGGCGAGGGCGAACCGAGGGGGACGAGGAGGCGGCCG\
) } def
/len { sequence length } bind def

/coor [
[-384.74014282 485.31564331]
[-404.94244385 487.64761353]
[-409.82369995 501.83117676]
[-414.70495605 516.01470947]
[-419.58621216 530.19830322]
[-424.46746826 544.38183594]
[-421.64208984 559.94873047]
[-433.09994507 569.46545410]
[-437.98120117 583.64898682]
[-434.32006836 599.63421631]
[-446.51571655 610.59777832]
[-462.02227783 605.26116943]
[-464.88793945 589.11437988]
[-452.16473389 578.76776123]
[-447.28350830 564.58416748]
[-450.45800781 550.03179932]
[-438.65103149 539.50061035]
[-433.76977539 525.31701660]
[-428.88851929 511.13348389]
[-424.00726318 496.94992065]
[-419.12600708 482.76635742]
[-422.91793823 480.27008057]
[-426.39541626 477.35168457]
[-429.51171875 474.05035400]
[-432.22494507 470.41049194]
[-434.49862671 466.48107910]
[-448.93981934 470.53707886]
[-463.38104248 474.59307861]
[-477.82226562 478.64907837]
[-492.26348877 482.70507812]
[-506.70471191 486.76107788]
[-521.14593506 490.81707764]
[-535.58715820 494.87307739]
[-543.35968018 508.37219238]
[-558.06286621 512.27984619]
[-570.88433838 504.78674316]
[-585.32556152 508.84274292]
[-599.76678467 512.89874268]
[-608.05261230 528.30816650]
[-624.59448242 532.86511230]
[-639.02276611 524.21978760]
[-653.40405273 528.48345947]
[-664.29089355 540.74755859]
[-680.29876709 537.18676758]
[-684.96014404 521.46405029]
[-673.47979736 509.75363159]
[-657.66772461 514.10217285]
[-643.28643799 509.83850098]
[-638.78759766 497.76739502]
[-627.99743652 490.37988281]
[-614.72729492 490.55679321]
[-603.82275391 498.45751953]
[-589.38153076 494.40151978]
[-574.94030762 490.34552002]
[-567.89514160 477.27261353]
[-553.30743408 472.95355225]
[-539.64318848 480.43185425]
[-525.20196533 476.37585449]
[-510.76071167 472.31985474]
[-496.31948853 468.26385498]
[-481.87826538 464.20785522]
[-467.43704224 460.15185547]
[-452.99584961 456.09585571]
[-438.55462646 452.03985596]
[-437.36346436 438.40100098]
[-431.54013062 425.97122192]
[-421.77270508 416.27667236]
[-409.23513794 410.51696777]
[-395.44616699 409.41668701]
[-382.08541870 413.13436890]
[-370.78884888 421.24014282]
[-358.21270752 413.06451416]
[-345.63659668 404.88888550]
[-333.06045532 396.71325684]
[-329.16781616 390.43542480]
[-320.24365234 388.51193237]
[-307.55102539 380.51840210]
[-300.90475464 367.18887329]
[-285.10412598 366.38183594]
[-272.41149902 358.38827515]
[-259.71884155 350.39471436]
[-247.02621460 342.40118408]
[-234.33357239 334.40762329]
[-221.64093018 326.41406250]
[-218.72488403 307.14801025]
[-202.32217407 296.07388306]
[-182.76806641 300.71179199]
[-170.43276978 292.17715454]
[-158.09745789 283.64248657]
[-145.76216125 275.10784912]
[-133.42684937 266.57318115]
[-126.24902344 247.21972656]
[-104.86092377 245.83952332]
[-92.90600586 236.77972412]
[-80.95109558 227.71992493]
[-68.99617767 218.66012573]
[-57.04126358 209.60032654]
[-45.08634567 200.54052734]
[-33.13143158 191.48071289]
[-21.17651558 182.42091370]
[-21.66137314 167.55812073]
[-13.20135784 155.11254883]
[1.13244677 149.97489929]
[15.91383934 154.31271362]
[27.86875534 145.25291443]
[39.82366943 136.19311523]
[51.77858734 127.13330841]
[63.73350143 118.07350922]
[75.68841553 109.01371002]
[69.43365479 100.07694244]
[66.93033600 87.92818451]
[69.59259796 74.25583649]
[78.06417084 61.30570984]
[92.01973724 51.53539658]
[96.69608307 37.28297043]
[101.37243652 23.03054047]
[106.04878998 8.77811146]
[100.11880493 -6.12875843]
[108.20096588 -19.98726273]
[124.09534454 -22.16634369]
[135.60913086 -10.99439621]
[133.90992737 4.95841789]
[120.30122375 13.45446491]
[115.62487030 27.70689392]
[110.94851685 41.95932388]
[106.27216339 56.21175003]
[119.40424347 63.46077728]
[128.97227478 51.90859222]
[138.54028320 40.35640717]
[148.10830688 28.80422020]
[157.67633057 17.25203514]
[163.12304688 1.19682944]
[180.05860901 1.98616040]
[183.98835754 18.47838402]
[169.22851562 26.82005692]
[159.66049194 38.37224197]
[150.09246826 49.92442703]
[140.52445984 61.47661209]
[130.95643616 73.02879333]
[134.53353882 79.62078094]
[147.71751404 72.46656799]
[160.90148926 65.31235504]
[174.08557129 58.15834427]
[181.23937988 71.34253693]
[168.05570984 78.49633026]
[154.87173462 85.65054321]
[141.68775940 92.80476379]
[145.26486206 99.39675140]
[160.16528320 97.67125702]
[175.06571960 95.94577026]
[189.96614075 94.22028351]
[196.21333313 85.32431793]
[206.11999512 81.41286469]
[216.32974243 83.55175018]
[223.52394104 90.79924011]
[238.46791077 89.50386810]
[253.41186523 88.20849609]
[268.35583496 86.91312408]
[281.47943115 77.07935333]
[296.44906616 83.77574921]
[297.86529541 100.11363220]
[284.27117920 109.28598785]
[269.65121460 101.85708618]
[254.70724487 103.15245819]
[239.76327515 104.44783020]
[224.81932068 105.74320221]
[209.81814575 117.94845581]
[191.69163513 109.12070465]
[176.79119873 110.84619904]
[161.89077759 112.57168579]
[146.99035645 114.29717255]
[111.92065430 135.57910156]
[84.74821472 120.96862030]
[72.79330444 130.02842712]
[60.83838654 139.08822632]
[48.88347244 148.14802551]
[36.92855453 157.20782471]
[24.97364044 166.26762390]
[25.15297127 181.67132568]
[16.33084869 194.08195496]
[2.06131482 198.86152649]
[-12.11671448 194.37583923]
[-24.07163048 203.43563843]
[-36.02654648 212.49543762]
[-47.98146057 221.55523682]
[-59.93637466 230.61503601]
[-71.89128876 239.67483521]
[-83.84620667 248.73463440]
[-95.80112457 257.79443359]
[-95.83312988 267.21414185]
[-100.12918091 275.44241333]
[-107.61508942 280.69479370]
[-116.54155731 281.89825439]
[-124.89219666 278.90850830]
[-137.22750854 287.44314575]
[-149.56280518 295.97778320]
[-161.89811707 304.51245117]
[-174.23341370 313.04708862]
[-173.46749878 323.67926025]
[-177.15318298 333.59542847]
[-184.56346130 341.03192139]
[-194.31546021 344.69573975]
[-204.62809753 343.98928833]
[-213.64736938 339.10671997]
[-226.34001160 347.10028076]
[-239.03265381 355.09381104]
[-251.72529602 363.08737183]
[-264.41793823 371.08093262]
[-277.11059570 379.07446289]
[-284.66473389 392.97573853]
[-299.55746460 393.21102905]
[-312.25012207 401.20458984]
[-324.88482666 409.28936768]
[-337.46096802 417.46499634]
[-350.03707886 425.64062500]
[-362.61322021 433.81625366]
[-360.21194458 454.28903198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[4 19]
[5 18]
[6 17]
[8 15]
[9 14]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[31 59]
[32 58]
[33 57]
[36 54]
[37 53]
[38 52]
[41 48]
[42 47]
[71 216]
[72 215]
[73 214]
[74 213]
[76 212]
[77 211]
[79 209]
[80 208]
[81 207]
[82 206]
[83 205]
[84 204]
[87 198]
[88 197]
[89 196]
[90 195]
[91 194]
[93 189]
[94 188]
[95 187]
[96 186]
[97 185]
[98 184]
[99 183]
[100 182]
[104 178]
[105 177]
[106 176]
[107 175]
[108 174]
[109 173]
[114 126]
[115 125]
[116 124]
[117 123]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
[148 171]
[149 170]
[150 169]
[151 168]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
