%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGGAAGACCAUCUCUGCAAGUGCAGCAUAGCCUCGGCCUAGGACAGCGGGAGUGCGUGGCCAAAGCUGUGAGCAGAGGCACAGGUGGUGGCAGACAGUAGAGGCGCCCCAUGGGGAACAUACUGACCUGUCGUGUGCACCCUAGCGUCAGCCUCGAGUUUGACCAGCAGCAGGGGUCGGUGUGUCCCUCUGAAUCUGAGAUCUAUGAGG\
) } def
/len { sequence length } bind def

/coor [
[198.08891296 383.45657349]
[193.94017029 369.04171753]
[182.98457336 358.95092773]
[186.60314941 343.54910278]
[182.45442200 329.13424683]
[178.30567932 314.71939087]
[174.15693665 300.30453491]
[159.10501099 292.80114746]
[154.03800964 276.41015625]
[162.55841064 261.13116455]
[158.19752502 246.77905273]
[153.83663940 232.42695618]
[149.37002563 218.10742188]
[144.79794312 203.82119751]
[140.22586060 189.53497314]
[135.65376282 175.24876404]
[131.08168030 160.96253967]
[126.50959778 146.67633057]
[121.93750763 132.39010620]
[117.36542511 118.10388947]
[102.56385040 123.38053131]
[88.59658051 118.76162720]
[80.98468018 107.35997009]
[65.98508453 107.24935150]
[50.98549652 107.13873291]
[35.98590469 107.02811432]
[21.63440132 123.45597839]
[0.10967158 123.89437103]
[-14.50716400 108.47742462]
[-29.47413635 109.47226715]
[-44.44110870 110.46710968]
[-59.40808487 111.46195221]
[-74.37505341 112.45680237]
[-89.34202576 113.45164490]
[-97.66115570 126.41691589]
[-111.85359192 131.93309021]
[-126.40070343 128.08010864]
[-135.77734375 116.53816986]
[-150.74432373 117.53301239]
[-165.71130371 118.52785492]
[-180.67826843 119.52269745]
[-184.19544983 122.06307220]
[-187.95942688 123.23516083]
[-191.51007080 123.12929535]
[-194.46371460 121.97586060]
[-196.55230713 120.10829163]
[-211.55189514 120.21891022]
[-220.10870361 123.41112518]
[-226.77313232 120.21891022]
[-241.77272034 120.10829163]
[-256.77230835 119.99767303]
[-270.75964355 128.55845642]
[-285.03594971 120.48883057]
[-284.91500854 104.09012604]
[-270.52124023 96.23193359]
[-256.66168213 104.99807739]
[-241.66210938 105.10869598]
[-226.66250610 105.21931458]
[-211.66250610 105.21931458]
[-196.66291809 105.10869598]
[-181.67311096 104.55572510]
[-166.70614624 103.56088257]
[-151.73916626 102.56604004]
[-136.77220154 101.57119751]
[-129.00566101 88.88975525]
[-115.09648132 83.14530182]
[-100.29882050 86.73452759]
[-90.33687592 98.48467255]
[-75.36990356 97.48982239]
[-60.40292740 96.49497986]
[-45.43595505 95.50013733]
[-30.46898079 94.50529480]
[-15.50200844 93.51044464]
[-12.34664345 85.49926758]
[-6.73355484 78.91304779]
[0.75084090 74.48331451]
[9.31038094 72.71405792]
[18.02382278 73.82447815]
[25.94399261 77.72229004]
[32.20074081 84.01067352]
[36.09652328 92.02852631]
[51.09611511 92.13914490]
[66.09570312 92.24976349]
[81.09529877 92.36038208]
[87.70447540 82.28486633]
[99.39254761 77.27011108]
[112.56565094 79.65573883]
[122.72344208 89.37201691]
[132.13743591 77.69397736]
[134.77464294 62.09411240]
[148.78604126 57.04139328]
[158.20004272 45.36334991]
[167.61402893 33.68530273]
[176.94165039 21.93815231]
[186.18237305 10.12253284]
[195.42311096 -1.69308674]
[204.66384888 -13.50870609]
[213.90457153 -25.32432556]
[210.19261169 -36.61656570]
[212.36955261 -48.18026733]
[219.78106689 -57.16478729]
[230.49710083 -61.41222763]
[241.81347656 -59.97514343]
[251.39868164 -71.51307678]
[260.98388672 -83.05101013]
[270.56909180 -94.58893585]
[280.15429688 -106.12686920]
[273.13973999 -119.58316040]
[271.81503296 -134.65924072]
[276.35098267 -149.05502319]
[286.02673340 -160.58618164]
[299.34396362 -167.51557922]
[314.25894165 -168.81488037]
[328.49621582 -164.31713867]
[338.08142090 -175.85507202]
[347.66662598 -187.39299011]
[357.25183105 -198.93092346]
[366.83703613 -210.46885681]
[365.57119751 -225.99417114]
[375.45632935 -237.55873108]
[390.26516724 -238.66981506]
[399.85037231 -250.20774841]
[409.43557739 -261.74569702]
[419.02075195 -273.28359985]
[428.60595703 -284.82153320]
[431.68194580 -293.42083740]
[438.41864014 -296.45761108]
[448.17297363 -307.85290527]
[450.64575195 -324.06454468]
[466.01815796 -329.77600098]
[478.47637939 -319.11181641]
[475.20446777 -303.04238892]
[459.56826782 -298.09857178]
[449.81393433 -286.70327759]
[440.14389038 -275.23632812]
[430.55868530 -263.69839478]
[420.97348022 -252.16047668]
[411.38827515 -240.62254333]
[401.80307007 -229.08460999]
[403.42562866 -214.32307434]
[393.86923218 -202.48542786]
[378.37496948 -200.88365173]
[368.78976440 -189.34571838]
[359.20455933 -177.80778503]
[349.61935425 -166.26986694]
[340.03414917 -154.73193359]
[347.06567383 -141.56048584]
[348.52267456 -126.66007233]
[344.15206909 -112.29821777]
[334.59011841 -100.67253113]
[321.26983643 -93.57436371]
[306.20639038 -92.11283112]
[291.69223022 -96.54166412]
[282.10702515 -85.00373077]
[272.52182007 -73.46580505]
[262.93661499 -61.92787170]
[253.35140991 -50.38993835]
[256.12982178 -32.29473495]
[244.60029602 -17.66513634]
[225.72019958 -16.08359337]
[216.47946167 -4.26797390]
[207.23872375 7.54764557]
[197.99800110 19.36326599]
[188.75726318 31.17888451]
[187.11302185 38.38313675]
[179.29206848 43.09929657]
[169.87808228 54.77734375]
[160.46409607 66.45539093]
[158.50022888 81.21995544]
[143.81547546 87.10797119]
[134.40148926 98.78601074]
[131.65164185 113.53180695]
[136.22372437 127.81802368]
[140.79580688 142.10423279]
[145.36790466 156.39045715]
[149.93998718 170.67668152]
[154.51206970 184.96289062]
[159.08416748 199.24911499]
[163.65625000 213.53532410]
[169.25164795 220.75341797]
[168.18873596 228.06607056]
[172.54962158 242.41816711]
[176.91050720 256.77026367]
[189.44253540 261.70364380]
[196.73896790 272.79187012]
[196.32353210 285.86419678]
[188.57179260 296.15582275]
[192.72053528 310.57064819]
[196.86926270 324.98550415]
[201.01800537 339.40036011]
[212.27035522 350.52218628]
[208.35502625 364.89297485]
[212.50376892 379.30783081]
[227.60913086 379.37506104]
[242.08329773 383.69656372]
[254.75289917 391.92199707]
[264.59088135 403.38458252]
[270.79968262 417.15509033]
[272.87603760 432.11724854]
[270.65158081 447.05807495]
[264.30670166 460.76641846]
[254.35566711 472.13101196]
[241.60522461 480.23056030]
[227.08895874 484.40847778]
[211.98367310 484.32608032]
[197.51385498 479.99005127]
[184.85252380 471.75189209]
[175.02607727 460.27941895]
[168.83108521 446.50265503]
[166.76977539 431.53845215]
[169.00923157 416.59985352]
[175.36790466 402.89788818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[4 190]
[5 189]
[6 188]
[7 187]
[10 183]
[11 182]
[12 181]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[19 173]
[20 172]
[23 84]
[24 83]
[25 82]
[26 81]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[38 64]
[39 63]
[40 62]
[41 61]
[46 60]
[47 59]
[49 58]
[50 57]
[51 56]
[88 171]
[89 170]
[91 168]
[92 167]
[93 166]
[94 164]
[95 163]
[96 162]
[97 161]
[98 160]
[103 157]
[104 156]
[105 155]
[106 154]
[107 153]
[114 146]
[115 145]
[116 144]
[117 143]
[118 142]
[121 139]
[122 138]
[123 137]
[124 136]
[125 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
