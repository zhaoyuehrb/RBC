%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACUCUGUGGAUGAACCUUGAAGGAGCCUCCAAGCCUGAACCAAAGCACUACAGAUCACCUGCUAUCUUCAUAGCACCAUGAGUGAAGAAUCUGAUGGAAAGCUUAUUGAAGACAGCCUGAUUCAGCUGAGAUGUCACUUUACAUGGAAGUUGUUAAUUGAAGCCCCUGAAAUUCCUG\
) } def
/len { sequence length } bind def

/coor [
[74.31892395 177.49626160]
[67.31052399 164.23419189]
[66.56167603 149.25289917]
[72.21263123 135.35804749]
[83.20355988 125.15277100]
[91.59233093 112.71780396]
[78.26884460 119.60872650]
[64.94536591 126.49964905]
[51.62188339 133.39056396]
[38.29840088 140.28149414]
[24.97491646 147.17240906]
[11.65143490 154.06333923]
[5.44579649 160.80372620]
[-1.96362770 160.95596313]
[-15.40470219 167.61460876]
[-12.82400703 182.48808289]
[-14.53722095 197.47097778]
[-20.39700890 211.35002136]
[-29.92060471 223.00375366]
[-42.32957458 231.49311829]
[-56.61343384 236.13719177]
[-71.61194611 236.56773376]
[-86.10934448 232.75837708]
[-98.93289948 225.02612305]
[-109.04777527 214.00492859]
[-122.48884583 220.66357422]
[-128.81053162 227.29524231]
[-136.22149658 227.31886292]
[-149.77610779 233.74322510]
[-154.85157776 248.71035767]
[-169.06062317 255.62979126]
[-183.97326660 250.39636230]
[-190.74209595 236.11495972]
[-185.35127258 221.25848389]
[-170.99911499 214.64102173]
[-156.20046997 220.18859863]
[-142.64584351 213.76425171]
[-129.14749146 207.22250366]
[-115.70642090 200.56385803]
[-118.34583282 185.83937073]
[-116.72757721 170.95271301]
[-110.97429657 157.11126709]
[-101.54435730 145.44006348]
[-89.19533539 136.89033508]
[-74.92316437 132.16200256]
[-59.88180923 131.64637756]
[-45.28995895 135.39378357]
[-32.33230972 143.10879517]
[-22.06334496 154.17353821]
[-8.62227058 147.51489258]
[4.76051188 140.73985291]
[18.08399391 133.84893799]
[31.40747643 126.95800781]
[44.73095703 120.06708527]
[58.05443954 113.17616272]
[71.37792206 106.28524017]
[84.70140839 99.39431763]
[92.50000000 86.58097076]
[92.50000000 71.58097076]
[92.50000000 56.58097076]
[84.35363007 49.32252121]
[81.61791992 38.98745346]
[84.96608734 29.06607819]
[93.05777740 22.77231216]
[93.57837677 7.78134871]
[94.09897614 -7.20961428]
[86.84529877 -21.27000999]
[95.01966095 -33.72107697]
[95.54026031 -48.71203995]
[96.06085968 -63.70300293]
[96.58146667 -78.69396973]
[97.10206604 -93.68492889]
[97.62266541 -108.67589569]
[87.34750366 -125.99848938]
[98.22957611 -141.96293640]
[98.22957611 -156.96293640]
[98.22957611 -171.96293640]
[87.35939026 -188.91848755]
[97.68083954 -205.25099182]
[97.16024017 -220.24195862]
[96.63964081 -235.23292542]
[96.11903381 -250.22387695]
[87.90744019 -263.74719238]
[95.19835663 -276.73535156]
[94.67775726 -291.72631836]
[81.74034882 -300.29388428]
[76.34120941 -314.84133911]
[80.55640411 -329.77493286]
[92.76512146 -339.35232544]
[108.27285004 -339.89089966]
[121.11654663 -331.18347168]
[126.35755920 -316.57830811]
[121.98060608 -301.69131470]
[109.66871643 -292.24691772]
[110.18931580 -277.25595093]
[118.36367798 -264.80487061]
[111.11000061 -250.74449158]
[111.63059998 -235.75352478]
[112.15120697 -220.76255798]
[112.67180634 -205.77159119]
[120.76349640 -199.47782898]
[124.11165619 -189.55645752]
[121.37594604 -179.22138977]
[113.22957611 -171.96293640]
[113.22957611 -156.96293640]
[113.22957611 -141.96293640]
[121.09795380 -135.39212036]
[124.09976196 -125.36052704]
[121.00700378 -115.12663269]
[112.61363220 -108.15528870]
[112.09302521 -93.16432953]
[111.57242584 -78.17336273]
[111.05182648 -63.18239975]
[110.53122711 -48.19143677]
[110.01062012 -33.20047379]
[117.30153656 -20.21233368]
[109.08994293 -6.68901300]
[108.56933594 8.30195045]
[108.04873657 23.29291344]
[118.37018585 39.62542343]
[107.50000000 56.58097076]
[107.50000000 71.58097076]
[107.50000000 86.58097076]
[115.51980591 99.25703430]
[129.07443237 105.68139648]
[142.62904358 112.10575104]
[156.18365479 118.53010559]
[169.90092468 124.59942627]
[183.77154541 130.30960083]
[197.64215088 136.01977539]
[212.08435059 130.18362427]
[226.06979370 136.17214966]
[231.54464722 149.97654724]
[245.41526794 155.68672180]
[259.28588867 161.39689636]
[275.29232788 154.37109375]
[291.12142944 160.95330811]
[297.18301392 176.62773132]
[311.15063477 182.09629822]
[325.16522217 187.44345093]
[339.22564697 192.66877747]
[353.28610229 197.89410400]
[367.34652710 203.11943054]
[382.47207642 197.77175903]
[396.00686646 206.38507080]
[397.56817627 222.35195923]
[385.95828247 233.42401123]
[370.08334351 231.10768127]
[362.12121582 217.17987061]
[348.06076050 211.95454407]
[334.00033569 206.72921753]
[319.93988037 201.50389099]
[312.55477905 202.12271118]
[305.68206787 196.06393433]
[291.71444702 190.59535217]
[280.73171997 197.36387634]
[267.66137695 196.55039978]
[257.29891968 188.22850037]
[253.57571411 175.26750183]
[239.70509338 169.55732727]
[225.83448792 163.84716797]
[212.22766113 169.79612732]
[198.07954407 164.20278931]
[191.93197632 149.89038086]
[178.06137085 144.18020630]
[164.19075012 138.47004700]
[160.79200745 139.50006104]
[156.72259521 138.91824341]
[152.75329590 136.42623901]
[149.75930786 132.08471680]
[136.20468140 125.66036987]
[122.65007019 119.23600769]
[109.09545135 112.81165314]
[117.91074371 124.94798279]
[129.02235413 135.02430725]
[134.83618164 148.85179138]
[134.26339722 163.84085083]
[127.41130066 177.18434143]
[115.56313324 186.38331604]
[100.93781281 189.71496582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 57]
[7 56]
[8 55]
[9 54]
[10 53]
[11 52]
[12 51]
[14 50]
[15 49]
[25 39]
[26 38]
[28 37]
[29 36]
[58 123]
[59 122]
[60 121]
[64 119]
[65 118]
[66 117]
[68 115]
[69 114]
[70 113]
[71 112]
[72 111]
[73 110]
[75 106]
[76 105]
[77 104]
[79 100]
[80 99]
[81 98]
[82 97]
[84 95]
[85 94]
[124 173]
[125 172]
[126 171]
[127 170]
[128 166]
[129 165]
[130 164]
[133 161]
[134 160]
[135 159]
[138 155]
[139 154]
[140 152]
[141 151]
[142 150]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
