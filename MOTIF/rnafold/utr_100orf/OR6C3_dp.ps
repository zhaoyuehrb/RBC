%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR6C3)
} def

/sequence { (\
AUGAACCACACAAUGGUCACAGAGUUUGUCCUCCUGGGCCUUUCUGAUGAUCCUGACCUUCAGAUUGUGAUUUUUCUCUUUUUAUUUAUCACGUAUAUAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.027929295 ubox
1 65 0.010262411 ubox
1 71 0.007154978 ubox
1 85 0.027699731 ubox
1 89 0.023042499 ubox
1 94 0.027502901 ubox
1 96 0.049168426 ubox
1 98 0.078613163 ubox
1 100 0.025946883 ubox
2 8 0.055410454 ubox
2 10 0.075081532 ubox
2 12 0.069005812 ubox
2 13 0.028558810 ubox
2 19 0.118638811 ubox
2 62 0.130986138 ubox
2 64 0.011101128 ubox
2 70 0.008274723 ubox
2 84 0.032455035 ubox
2 88 0.026999375 ubox
2 91 0.033784601 ubox
2 93 0.027375196 ubox
2 95 0.051699214 ubox
2 97 0.083360998 ubox
2 99 0.030520034 ubox
3 7 0.062844975 ubox
3 9 0.086662958 ubox
3 11 0.076854878 ubox
3 18 0.137031436 ubox
3 52 0.012527919 ubox
3 61 0.145447322 ubox
3 66 0.009166185 ubox
3 72 0.018040456 ubox
3 73 0.130468882 ubox
3 74 0.094163494 ubox
3 75 0.147384706 ubox
3 76 0.538858292 ubox
3 78 0.066515419 ubox
3 80 0.004125038 ubox
3 81 0.008090403 ubox
3 82 0.007739220 ubox
3 83 0.032604016 ubox
3 87 0.027360636 ubox
3 90 0.038755812 ubox
3 92 0.018873317 ubox
3 94 0.046738112 ubox
3 96 0.079748937 ubox
3 98 0.027173198 ubox
4 17 0.096875287 ubox
4 51 0.011860751 ubox
4 60 0.144956511 ubox
4 65 0.009273702 ubox
4 66 0.008112211 ubox
4 71 0.018428590 ubox
4 72 0.141046673 ubox
4 73 0.101210935 ubox
4 74 0.164312825 ubox
4 75 0.536442957 ubox
4 77 0.064512146 ubox
4 79 0.004065923 ubox
4 80 0.008633975 ubox
4 81 0.008368203 ubox
4 82 0.032177404 ubox
4 83 0.003857126 ubox
4 86 0.027075655 ubox
4 87 0.003328523 ubox
4 89 0.037058332 ubox
5 17 0.141735612 ubox
5 59 0.135154260 ubox
5 65 0.007307486 ubox
5 68 0.003515758 ubox
5 71 0.139911644 ubox
5 72 0.095249522 ubox
5 73 0.162231336 ubox
5 74 0.500571550 ubox
5 79 0.007998494 ubox
5 80 0.007754005 ubox
5 81 0.028761892 ubox
5 82 0.003824237 ubox
5 85 0.024338999 ubox
5 86 0.003641742 ubox
5 94 0.104348382 ubox
6 16 0.187368029 ubox
6 67 0.003584821 ubox
6 93 0.105970057 ubox
7 15 0.188881277 ubox
7 46 0.003976730 ubox
7 49 0.018972957 ubox
7 55 0.027083186 ubox
7 67 0.003243947 ubox
7 69 0.135297245 ubox
8 14 0.172788199 ubox
8 17 0.004429751 ubox
8 45 0.003890792 ubox
8 48 0.018919746 ubox
8 54 0.026463125 ubox
8 66 0.003901471 ubox
8 68 0.135122952 ubox
8 94 0.084461969 ubox
9 15 0.023088629 ubox
9 16 0.005596026 ubox
9 46 0.022027833 ubox
9 49 0.003421316 ubox
9 55 0.095130825 ubox
9 67 0.134723111 ubox
9 69 0.771834707 ubox
9 93 0.088437635 ubox
10 14 0.019944453 ubox
10 17 0.004056412 ubox
10 45 0.021764543 ubox
10 48 0.003412509 ubox
10 54 0.092459952 ubox
10 66 0.119678219 ubox
10 68 0.775655629 ubox
10 94 0.083659049 ubox
11 16 0.005251121 ubox
11 46 0.004649613 ubox
11 55 0.096114670 ubox
11 67 0.776303616 ubox
11 69 0.003247804 ubox
11 93 0.087706800 ubox
12 42 0.004979848 ubox
12 43 0.019043251 ubox
12 45 0.004417281 ubox
12 54 0.093263521 ubox
12 60 0.012193736 ubox
12 66 0.774583257 ubox
13 41 0.005368311 ubox
13 42 0.019557258 ubox
13 51 0.042348153 ubox
13 59 0.013416140 ubox
13 65 0.764844613 ubox
13 94 0.021353421 ubox
13 96 0.025440355 ubox
13 98 0.026613215 ubox
13 100 0.015232891 ubox
14 50 0.043573033 ubox
14 55 0.004292846 ubox
14 62 0.011450884 ubox
14 64 0.742701904 ubox
14 93 0.020491596 ubox
14 95 0.025253493 ubox
14 97 0.026357531 ubox
14 99 0.016329864 ubox
15 40 0.035487587 ubox
15 52 0.952413544 ubox
15 53 0.088677492 ubox
15 54 0.003754851 ubox
15 58 0.105784988 ubox
15 61 0.008995610 ubox
15 72 0.003731254 ubox
15 92 0.003308219 ubox
15 94 0.009912687 ubox
15 96 0.008662290 ubox
15 98 0.005763175 ubox
16 39 0.035549900 ubox
16 48 0.045261864 ubox
16 51 0.967918377 ubox
16 52 0.092925930 ubox
16 53 0.003678815 ubox
16 57 0.105938646 ubox
16 60 0.004760583 ubox
16 71 0.004478464 ubox
17 38 0.035528474 ubox
17 47 0.045649860 ubox
17 50 0.976343390 ubox
17 56 0.105792058 ubox
17 70 0.004731136 ubox
18 37 0.035384489 ubox
18 46 0.045675826 ubox
18 49 0.981282174 ubox
18 55 0.105692176 ubox
18 69 0.005051301 ubox
19 45 0.044572495 ubox
19 48 0.976179704 ubox
19 54 0.104439366 ubox
19 68 0.004823681 ubox
20 36 0.034202474 ubox
20 46 0.997406637 ubox
20 49 0.006891018 ubox
20 67 0.004703914 ubox
21 35 0.034153559 ubox
21 43 0.042262109 ubox
21 45 0.997852642 ubox
21 48 0.006376888 ubox
21 66 0.004065737 ubox
22 33 0.025548206 ubox
22 34 0.024763340 ubox
22 42 0.046219285 ubox
22 43 0.006189627 ubox
22 44 0.998077750 ubox
23 32 0.034724165 ubox
23 41 0.053053423 ubox
23 42 0.043978108 ubox
23 43 0.993122381 ubox
23 45 0.010540416 ubox
24 31 0.034573426 ubox
24 39 0.006335173 ubox
24 40 0.063241980 ubox
24 41 0.059262603 ubox
24 42 0.907163423 ubox
24 44 0.010980332 ubox
25 38 0.006225363 ubox
26 37 0.005106209 ubox
27 36 0.004978843 ubox
28 35 0.003286252 ubox
28 39 0.995097631 ubox
29 37 0.005941543 ubox
29 38 0.997901324 ubox
30 36 0.006022506 ubox
30 37 0.998782281 ubox
30 38 0.031458672 ubox
31 36 0.998265670 ubox
31 37 0.031548573 ubox
32 36 0.028528988 ubox
43 50 0.009381584 ubox
43 64 0.021428637 ubox
44 49 0.010109000 ubox
44 63 0.025122606 ubox
45 62 0.025140311 ubox
46 52 0.003175401 ubox
46 61 0.025150651 ubox
47 60 0.024830240 ubox
47 65 0.003331510 ubox
47 68 0.030020761 ubox
47 94 0.003827888 ubox
47 96 0.006741955 ubox
47 98 0.005634113 ubox
47 100 0.003303977 ubox
48 62 0.011694059 ubox
48 64 0.003406635 ubox
48 67 0.030646446 ubox
48 93 0.003734983 ubox
48 95 0.006878959 ubox
48 97 0.005697347 ubox
48 99 0.003582463 ubox
49 61 0.013009039 ubox
49 66 0.090931727 ubox
49 72 0.003553441 ubox
49 94 0.006005656 ubox
49 96 0.004417718 ubox
50 60 0.012850236 ubox
50 65 0.103699224 ubox
50 71 0.004071179 ubox
51 64 0.105579508 ubox
51 70 0.004175528 ubox
52 63 0.075980214 ubox
52 69 0.004197992 ubox
53 63 0.966625098 ubox
54 62 0.973239494 ubox
54 91 0.003549035 ubox
55 61 0.973820399 ubox
55 76 0.005304893 ubox
55 90 0.003997662 ubox
56 60 0.847240821 ubox
56 65 0.003440375 ubox
56 75 0.005200496 ubox
56 89 0.003892331 ubox
56 94 0.004288311 ubox
57 93 0.004322720 ubox
60 70 0.009841461 ubox
61 69 0.010320506 ubox
62 68 0.010130202 ubox
62 77 0.004421616 ubox
63 76 0.004985760 ubox
63 78 0.003320677 ubox
63 82 0.003723664 ubox
63 90 0.013467206 ubox
64 75 0.004962504 ubox
64 77 0.003274055 ubox
64 81 0.004320908 ubox
64 89 0.013618663 ubox
64 94 0.113595313 ubox
64 96 0.199053266 ubox
64 98 0.047342630 ubox
64 100 0.013655949 ubox
65 88 0.013274349 ubox
65 93 0.081467854 ubox
65 95 0.199748438 ubox
65 97 0.047980898 ubox
65 99 0.014969628 ubox
66 91 0.004726250 ubox
66 93 0.431400284 ubox
66 95 0.010752228 ubox
66 97 0.005842585 ubox
66 99 0.003261348 ubox
67 85 0.015935289 ubox
67 89 0.006827766 ubox
67 90 0.005212958 ubox
67 92 0.612268401 ubox
68 84 0.016546712 ubox
68 88 0.008545365 ubox
68 91 0.612765709 ubox
69 76 0.040629514 ubox
69 78 0.023414461 ubox
69 80 0.003520875 ubox
69 81 0.003694995 ubox
69 82 0.003261253 ubox
69 83 0.016835063 ubox
69 86 0.005293128 ubox
69 87 0.008964738 ubox
69 90 0.613433430 ubox
70 74 0.005914004 ubox
70 75 0.043943867 ubox
70 77 0.024505131 ubox
70 79 0.010345857 ubox
70 80 0.010410807 ubox
70 81 0.009502380 ubox
70 82 0.018498245 ubox
70 85 0.015387321 ubox
70 86 0.010956321 ubox
70 89 0.611443457 ubox
70 94 0.007450498 ubox
70 96 0.010035433 ubox
70 98 0.009304594 ubox
70 100 0.005373925 ubox
71 84 0.017732248 ubox
71 88 0.599982627 ubox
71 93 0.007304402 ubox
71 95 0.010200553 ubox
71 97 0.009406871 ubox
71 99 0.005803108 ubox
83 95 0.072444241 ubox
83 97 0.079036916 ubox
83 99 0.190967456 ubox
84 94 0.076466489 ubox
84 96 0.083401278 ubox
84 98 0.201870695 ubox
84 100 0.037087547 ubox
85 93 0.074813944 ubox
85 95 0.081872292 ubox
85 97 0.188052248 ubox
85 99 0.039436204 ubox
87 95 0.200952939 ubox
87 97 0.079410741 ubox
87 99 0.053809427 ubox
88 94 0.205910610 ubox
88 96 0.083508939 ubox
88 98 0.056640619 ubox
88 100 0.008420815 ubox
89 93 0.190840537 ubox
89 95 0.079388237 ubox
89 97 0.054292077 ubox
89 99 0.009050106 ubox
93 100 0.031490488 ubox
94 99 0.032865731 ubox
9 69 0.9500000 lbox
10 68 0.9500000 lbox
11 67 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
17 50 0.9500000 lbox
18 49 0.9500000 lbox
19 48 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
53 63 0.9500000 lbox
54 62 0.9500000 lbox
55 61 0.9500000 lbox
56 60 0.9500000 lbox
showpage
end
%%EOF
