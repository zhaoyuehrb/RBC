%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGGUCCAAUUCUCGGCCGGGAAGUCUCUGGCCGGGACGGGGCAGGGCGAACCUGCCAGUGACUGGACUCAGCUUCUUUGCGUAACCAAUACUGGAAGGCAUUUAAAGGCACCUCUGCCGCCACAGACCUUGCAGUUAACUCCGCCCUGACCCACCCUUCCCGAUGCAGUCCCUGAUGCAGGCUCCCCUCCUGAUCGCCCUGGGCUUGCUUCUCGCGGCCCCUGCGCAAGCCCACCUGAAAAAGCCAUCCCAG\
CUCAGUAGCU\
) } def
/len { sequence length } bind def

/coor [
[36.59330368 84.23654938]
[35.01659393 81.11812592]
[21.35211372 74.93088531]
[7.68763351 68.74363708]
[-5.97684669 62.55639648]
[-19.64132690 56.36915207]
[-25.82714081 63.76130295]
[-33.37668991 69.72563171]
[-41.96818542 74.01707458]
[-51.23728180 76.46166992]
[-60.79253387 76.96361542]
[-70.23192596 75.50898743]
[-79.15976715 72.16602325]
[-87.80368042 84.42501068]
[-96.44759369 96.68399811]
[-105.09149933 108.94298553]
[-113.73541260 121.20197296]
[-122.37932587 133.46096802]
[-131.02323914 145.71995544]
[-139.66714478 157.97894287]
[-148.31105042 170.23793030]
[-156.95497131 182.49691772]
[-165.59887695 194.75590515]
[-164.29272461 210.74569702]
[-176.07791138 221.63096619]
[-191.91384888 219.06144714]
[-199.65257263 205.00827026]
[-193.35758972 190.25183105]
[-177.85786438 186.11199951]
[-169.21395874 173.85301208]
[-160.57005310 161.59402466]
[-151.92613220 149.33503723]
[-143.28222656 137.07603455]
[-134.63830566 124.81705475]
[-125.99440002 112.55806732]
[-117.35049438 100.29907227]
[-108.70658112 88.04008484]
[-100.06266785 75.78109741]
[-91.41875458 63.52210999]
[-102.79296875 45.50556946]
[-104.92832947 24.30630875]
[-97.37567902 4.38330841]
[-108.29078674 -5.90554237]
[-119.20589447 -16.19439316]
[-130.18156433 -26.41860962]
[-141.21742249 -36.57783127]
[-152.25328064 -46.73705673]
[-163.28913879 -56.89627838]
[-174.32499695 -67.05550385]
[-185.36085510 -77.21472931]
[-196.39671326 -87.37394714]
[-216.30194092 -83.37923431]
[-233.79801941 -93.22499084]
[-240.55969238 -111.88805389]
[-255.05619812 -115.74180603]
[-269.55270386 -119.59556580]
[-284.87750244 -115.66348267]
[-295.18969727 -126.41092682]
[-309.68621826 -130.26467896]
[-324.18270874 -134.11843872]
[-338.67919922 -137.97219849]
[-353.17572021 -141.82595825]
[-367.67221069 -145.67971802]
[-379.17904663 -139.90145874]
[-391.15835571 -143.38604736]
[-397.35842896 -153.74827576]
[-411.80841064 -157.77297974]
[-426.25836182 -161.79766846]
[-435.70999146 -151.51087952]
[-448.60736084 -146.31793213]
[-462.41812134 -147.17710876]
[-474.45684814 -153.86436462]
[-482.40722656 -165.02793884]
[-484.76766968 -178.46128845]
[-499.16909790 -182.65635681]
[-512.90155029 -174.83364868]
[-528.12109375 -179.09298706]
[-535.79815674 -192.90737915]
[-531.37817383 -208.08100891]
[-517.48339844 -215.61161804]
[-502.35733032 -211.03143311]
[-494.97402954 -197.05780029]
[-480.57260132 -192.86271667]
[-469.16357422 -204.32769775]
[-453.43643188 -208.48918152]
[-437.66894531 -204.11709595]
[-426.19952393 -192.31593323]
[-422.23367310 -176.24765015]
[-407.78369141 -172.22294617]
[-393.33370972 -168.19825745]
[-376.58090210 -173.47180176]
[-363.81845093 -160.17620850]
[-349.32196045 -156.32246399]
[-334.82546997 -152.46870422]
[-320.32894897 -148.61494446]
[-305.83245850 -144.76118469]
[-291.33593750 -140.90742493]
[-277.04803467 -145.11515808]
[-265.69894409 -134.09207153]
[-251.20243835 -130.23831177]
[-236.70594788 -126.38455200]
[-234.56262207 -129.55244446]
[-232.01268005 -132.40325928]
[-229.10243225 -134.88516235]
[-225.88479614 -136.95306396]
[-229.39509583 -151.53652954]
[-232.90539551 -166.12001038]
[-236.41567993 -180.70349121]
[-249.61308289 -188.97793579]
[-252.96527100 -203.81765747]
[-244.99552917 -216.34837341]
[-248.50581360 -230.93185425]
[-252.01611328 -245.51533508]
[-267.11083984 -254.38832092]
[-271.02444458 -271.10757446]
[-261.80630493 -285.19207764]
[-265.48858643 -299.73309326]
[-269.17086792 -314.27407837]
[-272.85314941 -328.81509399]
[-286.55648804 -336.68875122]
[-290.59796143 -351.96755981]
[-282.57989502 -365.58685303]
[-267.25918579 -369.46658325]
[-253.72541809 -361.30496216]
[-250.00788879 -345.94409180]
[-258.31216431 -332.49737549]
[-254.62988281 -317.95635986]
[-250.94760132 -303.41537476]
[-247.26531982 -288.87435913]
[-235.39846802 -283.90399170]
[-228.44850159 -272.84671021]
[-229.13551331 -259.61004639]
[-237.43263245 -249.02561951]
[-233.92233276 -234.44213867]
[-230.41204834 -219.85865784]
[-217.61322021 -212.32701111]
[-213.84553528 -197.58729553]
[-221.83219910 -184.21379089]
[-218.32191467 -169.63031006]
[-214.81161499 -155.04682922]
[-211.30133057 -140.46334839]
[-197.53736877 -136.68461609]
[-187.24652100 -126.61872864]
[-183.09471130 -112.70779419]
[-186.23750305 -98.40980530]
[-175.20164490 -88.25058746]
[-164.16578674 -78.09136200]
[-153.12991333 -67.93213654]
[-142.09405518 -57.77291489]
[-131.05819702 -47.61368942]
[-120.02234650 -37.45446777]
[-112.99655914 -35.24387741]
[-108.91704559 -27.10949898]
[-98.00193787 -16.82064819]
[-87.08683014 -6.53179789]
[-74.46097565 -13.46855831]
[-60.29496002 -16.21198654]
[-45.94602585 -14.48470592]
[-32.79341507 -8.43838024]
[-22.10576057 1.35948777]
[-14.91873360 13.97879505]
[-11.93469715 28.21512032]
[-13.45408344 42.70467377]
[0.21039665 48.89191437]
[13.87487698 55.07915878]
[27.53935623 61.26640320]
[41.20383835 67.45364380]
[54.97578049 73.39785767]
[68.85086060 79.09716034]
[75.05171204 70.12496185]
[83.85739899 63.03972244]
[94.68008423 58.59917068]
[106.71235657 57.37451172]
[118.98715973 59.68737793]
[130.45550537 65.56619263]
[140.07574463 74.72673798]
[154.47718811 70.53166199]
[168.87861633 66.33658600]
[183.28005981 62.14151764]
[190.61422729 56.75445175]
[197.87638855 57.98302078]
[212.32637024 53.95832443]
[226.77633667 49.93362808]
[241.22631836 45.90893173]
[247.53009033 31.59821701]
[261.58056641 24.73396873]
[276.74356079 28.55727386]
[285.85955811 41.26288605]
[284.62426758 56.85160065]
[273.62097168 67.96290588]
[258.04504395 69.35038757]
[245.25102234 60.35890961]
[230.80104065 64.38360596]
[216.35105896 68.40830231]
[201.90109253 72.43299866]
[187.47512817 76.54295349]
[173.07369995 80.73802185]
[158.67225647 84.93309784]
[144.27082825 89.12817383]
[143.56324768 96.59471893]
[155.78813171 105.28679657]
[142.14808655 111.52781677]
[141.44052124 118.99436188]
[154.79756165 125.81999969]
[168.15460205 132.64564514]
[181.51165771 139.47128296]
[194.86869812 146.29690552]
[208.22573853 153.12254333]
[221.58279419 159.94818115]
[234.93983459 166.77381897]
[248.29689026 173.59945679]
[246.04026794 158.77017212]
[256.13778687 147.67784119]
[271.11328125 148.53521729]
[279.87884521 160.70750427]
[275.94451904 175.18234253]
[262.22302246 181.24256897]
[275.15393066 188.84461975]
[288.08486938 196.44667053]
[301.01577759 204.04872131]
[317.73440552 206.86372375]
[319.65759277 223.70823669]
[304.00375366 230.21928406]
[293.41375732 216.97964478]
[280.48281860 209.37759399]
[267.55187988 201.77554321]
[254.62095642 194.17349243]
[241.47125244 186.95651245]
[228.11419678 180.13087463]
[214.75715637 173.30523682]
[201.40010071 166.47959900]
[188.04306030 159.65396118]
[174.68601990 152.82832336]
[161.32896423 146.00268555]
[147.97192383 139.17704773]
[134.61488342 132.35140991]
[127.70041656 132.16130066]
[121.26925659 130.90010071]
[127.13203430 144.70690918]
[132.99481201 158.51370239]
[138.85758972 172.32051086]
[142.35124207 174.76960754]
[144.66975403 177.88197327]
[145.74873352 181.21324158]
[145.67253113 184.34295654]
[144.65409851 186.92048645]
[149.85832214 200.98875427]
[164.64071655 206.08923340]
[172.64179993 219.52487183]
[170.08369446 234.95181274]
[158.17428589 245.08589172]
[142.53678894 245.14212036]
[130.55479431 235.09396362]
[127.88581085 219.68582153]
[135.79005432 206.19297791]
[130.58583069 192.12471008]
[125.05078888 178.18328857]
[119.18801117 164.37648010]
[113.32523346 150.56968689]
[107.46245575 136.76287842]
[83.58520508 133.73057556]
[66.46563721 116.81201172]
[63.15155029 92.97224426]
[49.27647018 87.27293396]
[44.16919327 87.95901489]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[4 165]
[5 164]
[6 163]
[13 39]
[14 38]
[15 37]
[16 36]
[17 35]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[42 155]
[43 154]
[44 153]
[45 151]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[54 101]
[55 100]
[56 99]
[58 97]
[59 96]
[60 95]
[61 94]
[62 93]
[63 92]
[66 90]
[67 89]
[68 88]
[74 83]
[75 82]
[105 141]
[106 140]
[107 139]
[108 138]
[111 135]
[112 134]
[113 133]
[116 129]
[117 128]
[118 127]
[119 126]
[168 264]
[169 263]
[176 199]
[177 198]
[178 197]
[179 196]
[181 195]
[182 194]
[183 193]
[184 192]
[203 236]
[204 235]
[205 234]
[206 233]
[207 232]
[208 231]
[209 230]
[210 229]
[211 228]
[217 227]
[218 226]
[219 225]
[220 224]
[238 260]
[239 259]
[240 258]
[241 257]
[246 256]
[247 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
