%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGCCCCGGGGCGGCGAGGGGCCGCAACGGUGACGACUGUGGCAGAGAAGGCCCGGAGGGGCUCUGCGUUCUGUAGUGGCGCUGCUUGGGCCCUUGGCGGAUUGUAAGCUGCUGGUUUUGCGGCUGGGAAGAGCGGCGAGAGGGUUCGGCAUUUUUCGUCGGGAUCCCCGCAAGGAUGAGUGCUGCCAGAGAGUCUCACCCGCAUGGGGUGAAGCGUUCAGCCUCCCCAGACGACGAUCUGGGAUCUAGCAA\
UUGGGAGGCAGCAGACUUGGGUA\
) } def
/len { sequence length } bind def

/coor [
[108.25974274 290.45498657]
[94.55472565 297.38812256]
[79.22016907 296.52386475]
[66.38098907 288.09469604]
[59.49085236 274.36801147]
[60.40317917 259.03625488]
[68.87255096 246.22354126]
[82.62075806 239.37646484]
[83.46482849 224.40023804]
[84.30889893 209.42401123]
[85.15296173 194.44776917]
[85.99703217 179.47154236]
[86.84110260 164.49530029]
[72.36319733 160.57225037]
[65.53077698 173.92582703]
[58.69835663 187.27940369]
[51.86593246 200.63298035]
[45.03351212 213.98655701]
[48.57721710 229.63333130]
[38.44144058 242.06900024]
[22.40147972 241.75395203]
[12.76182175 228.92990112]
[16.91718674 213.43432617]
[31.67993546 207.15412903]
[38.51235580 193.80055237]
[45.34477997 180.44697571]
[52.17720032 167.09339905]
[59.00962067 153.73982239]
[47.04481888 144.69198608]
[35.08108521 135.64494324]
[24.09351730 145.85636902]
[13.10594845 156.06779480]
[2.11837959 166.27923584]
[-8.86918926 176.49066162]
[-13.17051792 192.31565857]
[-29.09296608 196.24092102]
[-40.25688553 184.22846985]
[-35.17779160 168.63569641]
[-19.08061981 165.50309753]
[-8.09305191 155.29165649]
[2.89451647 145.08023071]
[13.88208485 134.86880493]
[24.86965370 124.65736389]
[27.22451210 109.84336853]
[19.94498253 96.72816467]
[12.66545296 83.61296844]
[5.38592291 70.49776459]
[-1.89360642 57.38256836]
[1.61271179 84.80933380]
[-11.24879074 107.15016174]
[-33.29091263 116.41129303]
[-54.62250900 110.86470795]
[-67.03082275 94.95565796]
[-81.63296509 98.38750458]
[-96.23510742 101.81934357]
[-110.83724213 105.25118256]
[-125.43938446 108.68302155]
[-137.01170349 120.30254364]
[-152.78901672 115.82945251]
[-156.54096985 99.86528015]
[-144.40786743 88.83259583]
[-128.87121582 94.08088684]
[-114.26908112 90.64904022]
[-99.66694641 87.21720123]
[-85.06480408 83.78536224]
[-70.46266937 80.35352325]
[-73.88033295 64.00077057]
[-67.77426147 45.23108292]
[-81.45674896 39.08377838]
[-95.13924408 32.93647003]
[-108.82173920 26.78916740]
[-124.58069611 28.19128036]
[-133.01918030 15.91768074]
[-146.70167542 9.77037621]
[-160.38417053 3.62307143]
[-174.06666565 -2.52423334]
[-187.74916077 -8.67153835]
[-201.18086243 -1.12862337]
[-216.30183411 -2.92010927]
[-227.33795166 -13.15085030]
[-230.19935608 -27.74366951]
[-243.88185120 -33.89097595]
[-252.95210266 -34.54628372]
[-257.68319702 -40.18530273]
[-271.29559326 -46.48627853]
[-284.90802002 -52.78725815]
[-300.40301514 -48.62981415]
[-313.22836304 -58.26775360]
[-313.54556274 -74.30767059]
[-301.11126709 -84.44511414]
[-285.46401978 -80.90351105]
[-278.60702515 -66.39966583]
[-264.99462891 -60.09869003]
[-251.38221741 -53.79771042]
[-237.73454285 -47.57346725]
[-224.05204773 -41.42616272]
[-211.24151611 -48.97785568]
[-196.26348877 -47.52089310]
[-184.88232422 -37.40543365]
[-181.60185242 -22.35403252]
[-167.91935730 -16.20672798]
[-154.23686218 -10.05942249]
[-140.55436707 -3.91211772]
[-126.87187195 2.23518705]
[-112.09158325 0.39337751]
[-102.67443848 13.10667324]
[-88.99194336 19.25397873]
[-75.30944824 25.40128326]
[-61.62695312 31.54858780]
[-51.23140335 20.73505211]
[-57.91303253 7.30538893]
[-64.59465790 -6.12427378]
[-71.27629089 -19.55393600]
[-77.95791626 -32.98360062]
[-84.63954163 -46.41326141]
[-99.88333893 -49.90048218]
[-109.27794647 -62.40149689]
[-108.38751984 -78.01371002]
[-97.63249207 -89.36550903]
[-82.09105682 -91.09692383]
[-69.10140991 -82.39043427]
[-64.79685211 -67.35697937]
[-71.20988464 -53.09489059]
[-64.52825165 -39.66522598]
[-57.84662628 -26.23556519]
[-51.16499710 -12.80590153]
[-44.48336792 0.62376100]
[-37.80174255 14.05342388]
[-22.89673424 12.36796284]
[-19.38273811 -2.21462369]
[-15.86874104 -16.79721069]
[-12.35474396 -31.37979698]
[-22.04034424 -41.15535355]
[-25.61252213 -54.33291245]
[-22.24383736 -67.45236206]
[-12.91502285 -77.12314606]
[-0.13265194 -80.90045166]
[3.54532146 -95.44255066]
[7.22329473 -109.98464203]
[10.90126801 -124.52674103]
[14.57924175 -139.06883240]
[18.25721550 -153.61093140]
[21.93518829 -168.15301514]
[25.61316109 -182.69511414]
[29.29113388 -197.23721313]
[32.96910858 -211.77931213]
[22.93205833 -223.61303711]
[21.80118179 -239.08885193]
[30.01132584 -252.25598145]
[44.40552139 -258.05139160]
[59.44890594 -254.24662781]
[69.35699463 -242.30470276]
[70.31991577 -226.81753540]
[61.96741867 -213.74024963]
[47.51120377 -208.10133362]
[43.83322906 -193.55923462]
[40.15525436 -179.01713562]
[36.47728348 -164.47505188]
[32.79930878 -149.93295288]
[29.12133598 -135.39085388]
[25.44336319 -120.84876251]
[21.76538849 -106.30667114]
[18.08741570 -91.76457214]
[14.40944290 -77.22248077]
[25.32291222 -64.93556976]
[26.76235390 -48.39777374]
[17.96109772 -34.12672806]
[2.22784233 -27.86579895]
[-1.28615451 -13.28321362]
[-4.80015135 1.29937315]
[-8.31414795 15.88195992]
[4.41551542 23.81641960]
[15.96028423 14.23945141]
[27.50505257 4.66248322]
[26.37545204 -10.81342125]
[34.58668137 -23.97986984]
[48.98135376 -29.77409172]
[64.02442169 -25.96809387]
[73.93152618 -14.02535820]
[74.89318085 1.46189034]
[66.53960419 14.53848743]
[52.08292007 20.17621422]
[37.08201981 16.20725250]
[25.53725243 25.78421974]
[13.99248409 35.36118698]
[11.22159290 50.10303879]
[18.50112152 63.21823883]
[25.78065109 76.33343506]
[33.06018066 89.44863892]
[40.33971024 102.56383514]
[91.64862061 58.38267899]
[123.62494659 91.29223633]
[138.60569763 90.53250122]
[153.58644104 89.77276611]
[166.97702026 81.34642792]
[180.07983398 88.42916870]
[195.06059265 87.66943359]
[208.45115662 79.24309540]
[221.55398560 86.32584381]
[236.53472900 85.56610107]
[251.51547241 84.80636597]
[266.49621582 84.04663086]
[281.47695923 83.28688812]
[296.45773315 82.52715302]
[308.23638916 71.63482666]
[324.07385254 74.19483948]
[331.82101440 88.24337006]
[325.53488159 103.00358582]
[310.03762817 107.15271759]
[297.21746826 97.50790405]
[282.23672485 98.26763916]
[267.25595093 99.02737427]
[252.27522278 99.78711700]
[237.29446411 100.54685211]
[222.31372070 101.30658722]
[209.99467468 109.67858124]
[195.82032776 102.65018463]
[180.83956909 103.40991974]
[168.52052307 111.78191376]
[154.34617615 104.75350952]
[139.36543274 105.51325226]
[124.38468170 106.27298737]
[136.41413879 121.81186676]
[140.40750122 143.96768188]
[151.04391479 154.54438782]
[161.68032837 165.12109375]
[172.31674194 175.69779968]
[182.95317078 186.27449036]
[193.58958435 196.85119629]
[204.22599792 207.42790222]
[217.69474792 200.56857300]
[232.60400391 198.21133423]
[247.49169922 200.57460022]
[260.90179443 207.41448975]
[271.52673340 218.04997253]
[278.33486938 231.43055725]
[280.67068481 246.24014282]
[278.31787109 261.02642822]
[271.51922607 274.34332275]
[282.15567017 284.92004395]
[292.79208374 295.49673462]
[303.42849731 306.07342529]
[318.92327881 312.95440674]
[316.60061646 329.74850464]
[299.81988525 332.16567993]
[292.85180664 316.70986938]
[282.21536255 306.13314819]
[271.57894897 295.55645752]
[260.94253540 284.97973633]
[247.66413879 291.85324097]
[232.89132690 294.28927612]
[218.06881714 292.03686523]
[204.65011597 285.30416870]
[193.95498657 274.73928833]
[187.03968811 261.36791992]
[184.59265137 246.49375916]
[186.86590576 231.57147217]
[193.64930725 218.06431580]
[183.01287842 207.48760986]
[172.37646484 196.91091919]
[161.74005127 186.33421326]
[151.10362244 175.75750732]
[140.46720886 165.18080139]
[129.83079529 154.60411072]
[122.82743073 157.28791809]
[128.19506836 171.29464722]
[133.56248474 185.30146790]
[119.55558777 190.66867065]
[114.18833160 176.66229248]
[108.82070160 162.65556335]
[101.81732941 165.33937073]
[100.97326660 180.31561279]
[100.12919617 195.29183960]
[99.28512573 210.26806641]
[98.44106293 225.24430847]
[97.59699249 240.22053528]
[110.48876953 248.56906128]
[117.46482086 262.25225830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 276]
[9 275]
[10 274]
[11 273]
[12 272]
[13 271]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[68 109]
[69 108]
[70 107]
[71 106]
[73 104]
[74 103]
[75 102]
[76 101]
[77 100]
[81 96]
[82 95]
[84 94]
[85 93]
[86 92]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[129 171]
[130 170]
[131 169]
[132 168]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
[172 185]
[173 184]
[174 183]
[192 222]
[193 221]
[194 220]
[196 218]
[197 217]
[199 215]
[200 214]
[201 213]
[202 212]
[203 211]
[204 210]
[224 264]
[225 263]
[226 262]
[227 261]
[228 260]
[229 259]
[230 258]
[239 249]
[240 248]
[241 247]
[242 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
