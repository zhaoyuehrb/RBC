%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCUUUCCCUUUCGGAUUCCCGACGCUGUGGUUGCUGUAAGGGGUCCUCCCUGCGCCACACGGCCGUCGCCAUGGUGAAGCUGAGCAAAGAGGCCAAGCAGAGACUACAGCAGCUCUUCAAGGGGAGCCAGUUUGCCAUUCGCUGGGGCUUUAUCCCUCUUGUGAUUUACC\
) } def
/len { sequence length } bind def

/coor [
[164.60722351 229.44387817]
[154.64968872 240.66206360]
[141.74775696 248.31320190]
[127.12813568 251.66981506]
[112.18090820 250.41273499]
[98.32726288 244.66149902]
[86.88444519 234.96295166]
[78.94046021 222.23922729]
[75.25061798 207.70014954]
[76.16577148 192.72808838]
[81.59890747 178.74662781]
[91.03311157 167.08543396]
[94.07413483 152.39692688]
[97.11515808 137.70841980]
[87.40436554 149.14085388]
[77.69357300 160.57328796]
[67.98278046 172.00572205]
[65.57184601 188.22666931]
[50.22132111 193.99673462]
[37.72251511 183.38014221]
[40.93312073 167.29835510]
[56.55034637 162.29492188]
[66.26113892 150.86248779]
[75.97193146 139.43006897]
[85.68273163 127.99763489]
[72.95948792 106.30068970]
[80.68601990 85.61264038]
[72.04544067 73.35130310]
[63.40485764 61.08996964]
[54.76427460 48.82863617]
[46.12369156 36.56730270]
[37.48311234 24.30596542]
[28.84252930 12.04463100]
[20.20194626 -0.21670394]
[11.56136417 -12.47803879]
[-2.71271300 -19.30162239]
[-3.71947360 -34.16216278]
[-12.36005592 -46.42350006]
[-21.00063896 -58.68483353]
[-29.64122009 -70.94616699]
[-41.56750488 -70.65958405]
[-52.03668594 -76.12435150]
[-58.48778534 -85.87262726]
[-59.40645599 -97.40555573]
[-54.67906189 -107.83338928]
[-62.87134933 -120.39868164]
[-70.20584106 -125.90242767]
[-71.09572601 -133.26559448]
[-79.05982208 -145.97674561]
[-87.02391052 -158.68789673]
[-94.98800659 -171.39903259]
[-110.13117218 -175.04899597]
[-118.02682495 -188.05335999]
[-114.45381927 -202.46755981]
[-122.41791534 -215.17871094]
[-130.38200378 -227.88984680]
[-138.68739319 -240.38067627]
[-147.32797241 -252.64201355]
[-162.64653015 -255.46678162]
[-171.23464966 -268.02459717]
[-168.44725037 -282.61111450]
[-177.08782959 -294.87243652]
[-185.72840881 -307.13378906]
[-194.69786072 -319.15664673]
[-203.98957825 -330.93218994]
[-213.28131104 -342.70776367]
[-228.70771790 -348.27175903]
[-231.33563232 -364.45898438]
[-218.46170044 -374.61740112]
[-203.32949829 -368.29690552]
[-201.50575256 -351.99948120]
[-192.21401978 -340.22393799]
[-182.92230225 -328.44836426]
[-179.44717407 -327.68206787]
[-176.17787170 -325.17379761]
[-173.93852234 -321.04241943]
[-173.46707153 -315.77435303]
[-164.82649231 -303.51303101]
[-156.18591309 -291.25170898]
[-141.51174927 -288.97039795]
[-132.57429504 -276.65875244]
[-135.06663513 -261.28259277]
[-126.42605591 -249.02125549]
[-122.99751282 -248.06793213]
[-119.86881256 -245.38636780]
[-117.85640717 -241.13978577]
[-117.67086029 -235.85394287]
[-109.70676422 -223.14280701]
[-101.74267578 -210.43165588]
[-87.21353149 -207.35925293]
[-78.95573425 -194.58180237]
[-82.27686310 -179.36312866]
[-74.31276703 -166.65197754]
[-66.34867096 -153.94084167]
[-58.38457870 -141.22969055]
[-50.30606079 -128.59095764]
[-42.11377335 -116.02567291]
[-24.02747345 -113.36388397]
[-13.41986179 -98.08569336]
[-17.37988472 -79.58675385]
[-8.73930359 -67.32541656]
[-0.09872089 -55.06408310]
[8.54186153 -42.80274582]
[22.19790649 -36.85617447]
[23.82269859 -21.11862183]
[32.46327972 -8.85728645]
[41.10386276 3.40404892]
[49.74444580 15.66538429]
[58.38502884 27.92671967]
[67.02561188 40.18805313]
[75.66619110 52.44939041]
[84.30677795 64.71072388]
[92.94735718 76.97206116]
[108.43691254 75.48699188]
[122.74725342 84.07987213]
[129.60063171 100.53395844]
[125.09609222 118.94829559]
[138.82121277 124.99982452]
[151.12915039 121.06776428]
[162.44821167 126.41720581]
[166.92623901 137.67768860]
[180.53987122 143.97602844]
[194.15350342 150.27436829]
[207.76713562 156.57269287]
[221.38076782 162.87103271]
[234.99440002 169.16937256]
[248.60803223 175.46771240]
[262.49197388 181.14535522]
[276.61801147 186.19071960]
[290.74401855 191.23609924]
[304.87002563 196.28147888]
[314.20367432 187.90657043]
[326.14721680 184.32887268]
[338.40505981 186.17169189]
[348.64846802 193.02262878]
[354.95806885 203.52380371]
[356.18325806 215.64067078]
[370.11791992 221.19273376]
[385.36413574 216.19955444]
[398.69421387 225.12641907]
[399.88241577 241.12541199]
[388.01730347 251.92346191]
[372.20071411 249.23724365]
[364.56585693 235.12739563]
[350.63119507 229.57531738]
[336.18661499 239.68782043]
[318.40603638 239.12644958]
[304.38305664 227.92721558]
[299.82464600 210.40748596]
[285.69863892 205.36212158]
[271.57263184 200.31674194]
[257.44662476 195.27136230]
[261.21777344 209.78956604]
[252.36724854 221.90022278]
[237.38948059 222.71659851]
[227.27508545 211.63964844]
[229.44595337 196.79756165]
[242.30969238 189.08134460]
[228.69606018 182.78300476]
[215.08242798 176.48466492]
[201.46879578 170.18632507]
[187.85516357 163.88798523]
[174.24153137 157.58966064]
[160.62789917 151.29132080]
[143.27793884 153.82690430]
[132.76968384 138.72494507]
[119.04456329 132.67341614]
[128.18823242 144.56431580]
[137.33190918 156.45520020]
[150.90827942 162.83346558]
[161.89596558 173.04475403]
[169.25025940 186.11817932]
[172.27188110 200.81068420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 25]
[15 24]
[16 23]
[17 22]
[27 113]
[28 112]
[29 111]
[30 110]
[31 109]
[32 108]
[33 107]
[34 106]
[35 105]
[37 103]
[38 102]
[39 101]
[40 100]
[45 97]
[46 96]
[48 95]
[49 94]
[50 93]
[51 92]
[54 89]
[55 88]
[56 87]
[57 83]
[58 82]
[61 79]
[62 78]
[63 77]
[64 73]
[65 72]
[66 71]
[117 167]
[118 166]
[121 164]
[122 163]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[128 152]
[129 151]
[130 150]
[131 149]
[137 145]
[138 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
