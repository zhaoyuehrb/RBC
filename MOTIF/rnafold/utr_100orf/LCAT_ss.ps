%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGGCUGGAAUGGGGCCGCCCGGCUCCCCAUGGCAGUGGGUGACGCUGCUGCUGGGGCUGCUGCUCCCUCCUGCCGCCCCCUUCUGGCUCCUCAAUGUGCUCUUCCCCC\
) } def
/len { sequence length } bind def

/coor [
[173.92712402 336.71463013]
[182.20115662 324.07669067]
[193.70143127 314.28280640]
[187.57476807 300.59106445]
[181.44810486 286.89932251]
[175.13002014 273.29483032]
[168.62176514 259.78030396]
[162.11351013 246.26576233]
[155.60525513 232.75123596]
[149.09700012 219.23669434]
[142.58874512 205.72216797]
[136.08049011 192.20764160]
[123.58726501 184.09785461]
[124.57065582 168.30723572]
[118.06240082 154.79269409]
[111.55414581 141.27816772]
[105.04589081 127.76363373]
[98.53763580 114.24909973]
[87.09457397 106.21492767]
[87.94783020 92.25915527]
[81.43957520 78.74462128]
[58.99265289 67.69362640]
[59.35553360 43.32713699]
[50.00318527 31.59966469]
[40.65084076 19.87219238]
[31.29849243 8.14472103]
[14.04756641 1.89749634]
[11.95623779 -15.46434593]
[2.27865767 -26.92490768]
[-7.39892197 -38.38546753]
[-17.07650185 -49.84602737]
[-26.75408173 -61.30658722]
[-36.59143829 -72.63030243]
[-46.58663559 -83.81493378]
[-56.58183670 -94.99956512]
[-66.57703400 -106.18419647]
[-76.57223511 -117.36882782]
[-86.56742859 -128.55346680]
[-96.56262970 -139.73809814]
[-106.55783081 -150.92272949]
[-122.43055725 -153.25425720]
[-130.37934875 -167.18969727]
[-124.30655670 -182.03895569]
[-108.87071991 -186.41098022]
[-95.91288757 -176.95190430]
[-95.37319946 -160.91792297]
[-85.37799835 -149.73329163]
[-75.38279724 -138.54866028]
[-65.38760376 -127.36402893]
[-55.39240265 -116.17939758]
[-45.39720154 -104.99476624]
[-35.40200424 -93.81012726]
[-25.40680504 -82.62549591]
[-18.50434113 -79.69305420]
[-15.29352093 -70.98416901]
[-5.61594105 -59.52360916]
[4.06163883 -48.06304550]
[13.73921871 -36.60248566]
[23.41679764 -25.14192581]
[35.52669525 -23.77791595]
[43.67726135 -14.18328667]
[43.02596664 -1.20762622]
[52.37831116 10.51984596]
[61.73065948 22.24731827]
[71.08300781 33.97478867]
[77.01992798 32.66063690]
[83.12489319 32.98252487]
[88.95294189 34.93455887]
[94.07460022 38.39138412]
[98.10755920 43.11610413]
[100.74514771 48.77646255]
[101.77963257 54.96817780]
[101.11849213 61.24380875]
[98.79235840 67.14508057]
[94.95410919 72.23636627]
[101.46236420 85.75090027]
[112.90542603 93.78507233]
[112.05216980 107.74084473]
[118.56042480 121.25537872]
[125.06867981 134.76991272]
[131.57693481 148.28443909]
[138.08518982 161.79898071]
[151.04393005 170.87541199]
[149.59501648 185.69937134]
[156.10327148 199.21391296]
[162.61152649 212.72843933]
[169.11978149 226.24298096]
[175.62803650 239.75750732]
[182.13629150 253.27204895]
[188.64454651 266.78659058]
[195.28244019 273.27444458]
[195.13984680 280.77264404]
[201.26651001 294.46438599]
[207.39317322 308.15615845]
[222.35908508 306.10717773]
[237.29582214 308.35894775]
[250.99253845 314.72894287]
[262.33889771 324.70074463]
[270.41510010 337.46600342]
[274.56646729 351.98986816]
[274.45642090 367.09500122]
[270.09390259 381.55685425]
[261.83258057 394.20306396]
[250.34216309 404.00851440]
[236.55409241 410.17828369]
[221.58613586 412.21221924]
[206.65165710 409.94543457]
[192.96134949 403.56167603]
[181.62501526 393.57849121]
[173.56164551 380.80514526]
[169.42488098 366.27709961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 94]
[4 93]
[5 92]
[6 90]
[7 89]
[8 88]
[9 87]
[10 86]
[11 85]
[12 84]
[14 82]
[15 81]
[16 80]
[17 79]
[18 78]
[20 76]
[21 75]
[23 65]
[24 64]
[25 63]
[26 62]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[33 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
