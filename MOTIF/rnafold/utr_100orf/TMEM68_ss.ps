%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAGAGACAUUGAAGUUUGGGACAAGAUAUUUAUCUAACUUCUGUGUCAAAAUUAGCGACCUGCUAUGGCAAUGAAGAAAGAAACUGAAUUUGUCAUUUUCACCUGAAGAAAAAUGAUAGACAAAAAUCAAACCUGUGGUGUAGGACAGGAUUCUGUGCCCUAUAUGAUUUGUCUGAUUCACAUACUCGAAGAAUGGUUUGGUGUGGAGCAGU\
) } def
/len { sequence length } bind def

/coor [
[39.81356812 214.32777405]
[30.85231781 229.37152100]
[17.70956230 240.91618347]
[1.66786456 247.84936523]
[-15.71167660 249.50799561]
[-32.74134064 245.74169922]
[-47.77068329 236.92643738]
[-58.72020340 247.17866516]
[-69.66972351 257.43087769]
[-80.61924744 267.68310547]
[-91.56877136 277.93530273]
[-96.35415649 293.01544189]
[-110.93296051 296.06631470]
[-121.88247681 306.31854248]
[-132.83200073 316.57077026]
[-143.78152466 326.82296753]
[-154.73104858 337.07519531]
[-165.68057251 347.32742310]
[-150.68545532 347.71017456]
[-139.36326599 357.54928589]
[-136.89268494 372.34442139]
[-144.40373230 385.32843018]
[-158.46090698 390.56253052]
[-172.63459778 385.65267944]
[-180.44187927 372.84463501]
[-178.31146240 357.99606323]
[-190.25056458 367.07669067]
[-202.18968201 376.15731812]
[-214.12878418 385.23794556]
[-219.96652222 400.56283569]
[-236.19795227 402.90219116]
[-246.12557983 389.84942627]
[-239.53671265 374.83215332]
[-223.20941162 373.29882812]
[-211.27029419 364.21820068]
[-199.33119202 355.13757324]
[-187.39207458 346.05697632]
[-175.93278503 336.37789917]
[-164.98326111 326.12567139]
[-154.03373718 315.87344360]
[-143.08421326 305.62124634]
[-132.13470459 295.36901855]
[-121.18517303 285.11679077]
[-117.18296814 270.76995850]
[-101.82098389 266.98577881]
[-90.87146759 256.73358154]
[-79.92194366 246.48135376]
[-68.97241974 236.22914124]
[-58.02289963 225.97691345]
[-64.14766693 214.98143005]
[-67.66067505 202.88635254]
[-68.38024139 190.30332947]
[-66.26605225 177.86952209]
[-61.42136765 166.21546936]
[-54.08803177 155.93301392]
[-44.63436890 147.54527283]
[-33.53669739 141.48004150]
[-21.35533524 138.04798889]
[-8.70629406 137.42668152]
[3.76984978 139.65148926]
[15.44041538 144.61351013]
[25.71268845 152.06497192]
[37.24239731 142.46987915]
[48.77210236 132.87477112]
[60.30181122 123.27968597]
[71.83152008 113.68458557]
[65.32844543 98.21658325]
[67.60370636 79.91333771]
[57.59392166 68.74176025]
[47.58414078 57.57017517]
[37.57435608 46.39859390]
[27.56457520 35.22700882]
[17.55479240 24.05542755]
[0.75237060 26.01079178]
[-13.76005650 17.64787292]
[-20.36091995 2.43482208]
[-16.63003159 -13.55277920]
[-26.80197906 -24.57691193]
[-42.41267014 -23.66023254]
[-54.92946625 -33.03380585]
[-58.44231415 -48.27171707]
[-51.29255676 -62.17908859]
[-36.85609436 -68.18928528]
[-21.94937706 -63.46447754]
[-13.61090374 -50.23557663]
[-15.77784729 -34.74885941]
[-5.60590029 -23.72472763]
[7.45032263 -26.50546837]
[20.27878189 -22.43982315]
[29.49706841 -12.48759270]
[32.61942673 0.82491237]
[28.72637558 14.04564476]
[38.73615646 25.21722794]
[48.74594116 36.38880920]
[58.75572205 47.56039429]
[68.76550293 58.73197556]
[78.77528381 69.90355682]
[92.53724670 63.93628311]
[91.22384644 48.99389648]
[89.91044617 34.05150604]
[88.59704590 19.10911751]
[87.28364563 4.16672993]
[77.43405151 -8.94500065]
[84.11238098 -23.92271614]
[100.44853973 -25.35862732]
[109.63729095 -11.77559090]
[102.22603607 2.85332847]
[103.53943634 17.79571724]
[104.85283661 32.73810577]
[106.16623688 47.68049622]
[107.47963715 62.62288284]
[115.59826660 65.51882172]
[122.80222321 70.13817596]
[128.73516846 76.21930695]
[133.11119080 83.42920685]
[135.72851562 91.38168335]
[149.77752686 86.12571716]
[163.82655334 80.86975861]
[177.79727173 75.40908051]
[191.68670654 69.74485016]
[205.57614136 64.08061981]
[219.46557617 58.41638947]
[233.35502625 52.75215912]
[247.24446106 47.08793259]
[261.13391113 41.42370224]
[246.46247864 38.30130005]
[234.86502075 28.78820419]
[228.93370056 15.01070690]
[229.99424744 0.04824547]
[237.80960083 -12.75488758]
[250.63293457 -20.53703690]
[265.59811401 -21.55879593]
[279.36016846 -15.59179115]
[288.84320068 -3.96971965]
[291.92755127 10.70974445]
[287.92388916 25.16556168]
[277.72912598 36.16531372]
[292.34603882 32.79698181]
[304.05633545 22.15837669]
[318.19601440 26.84009743]
[332.81292725 23.47176361]
[347.42984009 20.10343170]
[362.04678345 16.73509789]
[376.66369629 13.36676502]
[391.28060913 9.99843121]
[405.89752197 6.63009834]
[420.46368408 3.04854894]
[434.97592163 -0.74545187]
[449.48818970 -4.53945255]
[464.00042725 -8.33345318]
[475.28015137 -20.23723984]
[491.16384888 -16.15798378]
[495.31173706 -0.29207632]
[483.45681763 11.03899860]
[467.79443359 6.17880201]
[453.28219604 9.97280312]
[438.76992798 13.76680374]
[424.25765991 17.56080437]
[421.11560059 21.15388680]
[415.68414307 22.81311035]
[409.26586914 21.24701691]
[394.64895630 24.61535072]
[380.03201294 27.98368454]
[365.41510010 31.35201645]
[350.79818726 34.72035217]
[336.18127441 38.08868408]
[321.56436157 41.45701599]
[310.89956665 51.85469437]
[295.71438599 47.41390228]
[281.09747314 50.78223419]
[266.79812622 55.31314087]
[252.90869141 60.97737122]
[239.01925659 66.64160156]
[225.12980652 72.30583191]
[211.24037170 77.97005463]
[197.35093689 83.63428497]
[183.46150208 89.29851532]
[180.81771851 93.27259064]
[175.65074158 95.62971497]
[169.08250427 94.91876984]
[155.03349304 100.17473602]
[140.98448181 105.43069458]
[136.34922791 119.69654846]
[144.62573242 132.20651245]
[152.90225220 144.71647644]
[161.17877197 157.22644043]
[169.45529175 169.73641968]
[176.79797363 175.16468811]
[177.75978088 182.49018860]
[185.85263062 195.11975098]
[193.94546509 207.74931335]
[202.03831482 220.37887573]
[217.52861023 223.51358032]
[226.19558716 236.72943115]
[222.89729309 252.18572998]
[209.59054565 260.71249390]
[194.16999817 257.25097656]
[185.78437805 243.85481262]
[189.40875244 228.47172546]
[181.31590271 215.84216309]
[173.22305298 203.21260071]
[165.13021851 190.58303833]
[156.94531250 178.01292419]
[148.66880798 165.50296021]
[140.39228821 152.99299622]
[132.11576843 140.48303223]
[123.83925629 127.97306061]
[101.20626831 134.01356506]
[81.42661285 125.21429443]
[69.89690399 134.80938721]
[58.36719894 144.40447998]
[46.83749008 153.99957275]
[35.30778503 163.59468079]
[42.16596985 179.76278687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 49]
[8 48]
[9 47]
[10 46]
[11 45]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[18 38]
[26 37]
[27 36]
[28 35]
[29 34]
[62 213]
[63 212]
[64 211]
[65 210]
[66 209]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[73 92]
[77 87]
[78 86]
[98 111]
[99 110]
[100 109]
[101 108]
[102 107]
[116 182]
[117 181]
[118 180]
[119 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 172]
[125 171]
[137 170]
[138 169]
[140 167]
[141 166]
[142 165]
[143 164]
[144 163]
[145 162]
[146 161]
[147 158]
[148 157]
[149 156]
[150 155]
[183 207]
[184 206]
[185 205]
[186 204]
[187 203]
[189 202]
[190 201]
[191 200]
[192 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
