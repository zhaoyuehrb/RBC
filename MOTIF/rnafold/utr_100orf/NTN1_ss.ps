%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGGGGCGAGCGCGCGUGUGUGUGAGUGCGCGCCGGCCAGCGCGCCUUCUGCGGCAGGCGGACAGAUCCUCGGCGCGGCAGGGCCGGGGCAAGCUGGACGCAGCAUGAUGCGCGCAGUGUGGGAGGCGCUGGCGGCGCUGGCGGCGGUGGCGUGCCUGGUGGGCGCGGUGCGCGGCGGGCCCGGGCUCAGCAUGUUCGCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[86.01059723 682.48681641]
[79.74651337 696.68334961]
[66.31735992 704.45751953]
[50.88692856 702.82000732]
[39.38853455 692.40045166]
[36.24354553 677.20544434]
[42.66127014 663.07775879]
[56.17396545 655.44970703]
[57.75691223 640.53344727]
[59.33985901 625.61724854]
[49.80745316 614.22998047]
[51.20029831 599.08026123]
[63.20889282 589.15899658]
[64.79183960 574.24273682]
[66.37478638 559.32653809]
[60.02379990 545.85382080]
[69.17422485 532.94720459]
[70.75717163 518.03094482]
[72.34011841 503.11471558]
[73.92306519 488.19848633]
[75.50601196 473.28222656]
[77.08895874 458.36599731]
[75.16703033 455.40725708]
[74.58402252 451.36996460]
[75.83152771 446.89419556]
[79.09642029 442.81542969]
[81.35338593 427.98617554]
[83.61035919 413.15695190]
[85.86732483 398.32772827]
[88.12429047 383.49850464]
[82.39008331 369.75192261]
[92.11573029 357.27304077]
[94.37269592 342.44381714]
[88.63848877 328.69726562]
[98.36413574 316.21838379]
[100.62110138 301.38916016]
[102.87807465 286.55990601]
[97.14385986 272.81335449]
[106.86951447 260.33447266]
[109.12648010 245.50524902]
[111.38344574 230.67601013]
[109.28160858 223.58868408]
[113.78811646 215.64053345]
[116.26879883 200.84709167]
[118.74947357 186.05363464]
[121.23015594 171.26017761]
[123.71083069 156.46673584]
[126.19151306 141.67327881]
[128.67219543 126.87982941]
[94.09085083 149.83131409]
[46.92327499 130.18432617]
[32.16897964 127.48049927]
[17.41467857 124.77667999]
[2.66038084 122.07285309]
[-12.09391785 119.36902618]
[-26.06075859 127.26249695]
[-40.88583374 121.13088226]
[-45.19661713 105.67783356]
[-35.68624115 92.75760651]
[-19.65025330 92.28149414]
[-9.39009190 104.61473083]
[5.36420631 107.31855011]
[20.11850548 110.02237701]
[34.87280273 112.72620392]
[49.62710190 115.43003082]
[53.45855331 108.98255157]
[38.82675934 105.67943573]
[37.44676590 90.74304962]
[51.22567749 84.81501770]
[61.12145996 96.08759308]
[64.95291138 89.64012146]
[55.52484894 77.97342682]
[46.09678650 66.30673981]
[36.66872406 54.64005280]
[27.24065971 42.97336197]
[17.81259727 31.30667496]
[8.38453293 19.63998604]
[-7.10459042 20.57094193]
[-20.16460609 12.19146633]
[-25.77367210 -2.27636003]
[-21.77498817 -17.26936340]
[-9.70612907 -27.02242851]
[5.79218197 -27.78530121]
[18.76052856 -19.26464272]
[24.21231651 -4.73682022]
[20.05122185 10.21192265]
[29.47928429 21.87861252]
[38.90734863 33.54529953]
[48.33541107 45.21199036]
[57.76347351 56.87867737]
[67.19153595 68.54536438]
[76.61959839 80.21205139]
[90.56291199 74.68176270]
[89.43119812 59.72451401]
[80.67476654 46.54743576]
[87.42977905 33.27267838]
[86.29806519 18.31543159]
[85.16635895 3.35818553]
[84.03464508 -11.59906101]
[74.34512329 -24.82952499]
[81.20498657 -39.72497177]
[97.55738831 -40.96224594]
[106.58039093 -27.26854134]
[98.99189758 -12.73077106]
[100.12360382 2.22647619]
[101.25531769 17.18372345]
[102.38702393 32.14096832]
[111.06250763 44.24820709]
[104.38845062 58.59280396]
[105.52015686 73.55004883]
[112.71344757 75.67292786]
[123.58364105 65.33663177]
[127.10002136 79.91867065]
[134.29331970 82.04154205]
[143.36470032 70.09542084]
[152.43609619 58.14929962]
[155.13458252 49.42004776]
[161.73582458 46.09263229]
[170.98660278 34.28488159]
[180.23738098 22.47712898]
[189.48817444 10.66937733]
[198.73895264 -1.13837481]
[207.98973083 -12.94612694]
[207.49111938 -28.98143005]
[219.80995178 -39.25888062]
[235.49627686 -35.89449692]
[242.51687622 -21.46914673]
[235.48616028 -7.04872513]
[219.79748535 -3.69534397]
[210.54670715 8.11240864]
[201.29591370 19.92016029]
[192.04513550 31.72791290]
[182.79435730 43.53566360]
[173.54356384 55.34341812]
[164.38221741 67.22069550]
[155.31082153 79.16681671]
[146.23944092 91.11293793]
[153.41007996 104.28797913]
[168.36734009 103.15627289]
[183.32458496 102.02455902]
[198.28182983 100.89285278]
[213.23907471 99.76114655]
[226.41615295 91.00470734]
[239.69090271 97.75971985]
[254.64816284 96.62800598]
[269.58660889 95.27052307]
[284.50283813 93.68757629]
[299.41909790 92.10462952]
[314.33532715 90.52168274]
[324.07272339 78.07344818]
[339.77026367 76.23956299]
[352.11483765 86.10803223]
[353.78268433 101.82406616]
[343.78424072 114.06362915]
[328.05145264 115.56520081]
[315.91827393 105.43792725]
[301.00204468 107.02087402]
[286.08578491 108.60382080]
[271.16955566 110.18676758]
[267.52301025 113.27419281]
[261.89761353 114.10213470]
[255.77986145 111.58525848]
[240.82261658 112.71696472]
[228.71537781 121.39244843]
[214.37078857 114.71839142]
[199.41354370 115.85009766]
[184.45628357 116.98181152]
[169.49903870 118.11351776]
[154.54179382 119.24522400]
[143.46565247 129.36050415]
[140.98497009 144.15396118]
[138.50428772 158.94741821]
[136.02360535 173.74085999]
[133.54292297 188.53431702]
[131.06224060 203.32777405]
[128.58157349 218.12121582]
[126.21267700 232.93298340]
[123.95571136 247.76222229]
[121.69874573 262.59146118]
[127.27152252 277.39871216]
[117.70730591 288.81689453]
[115.45033264 303.64611816]
[113.19336700 318.47534180]
[118.76614380 333.28259277]
[109.20192719 344.70077515]
[106.94496155 359.53002930]
[112.51773834 374.33728027]
[102.95352173 385.75546265]
[100.69655609 400.58468628]
[98.43959045 415.41390991]
[96.18261719 430.24316406]
[93.92565155 445.07238770]
[92.00520325 459.94894409]
[90.42225647 474.86517334]
[88.83930969 489.78143311]
[87.25636292 504.69766235]
[85.67341614 519.61389160]
[84.09046936 534.53015137]
[90.32823181 549.06976318]
[81.29103088 560.90948486]
[79.70808411 575.82568359]
[78.12513733 590.74194336]
[87.78398132 602.96258545]
[85.96615601 618.06726074]
[74.25610352 627.20019531]
[72.67315674 642.11639404]
[71.09020996 657.03265381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[13 202]
[14 201]
[15 200]
[17 198]
[18 197]
[19 196]
[20 195]
[21 194]
[22 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[32 186]
[33 185]
[35 183]
[36 182]
[37 181]
[39 179]
[40 178]
[41 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[71 92]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[93 110]
[94 109]
[96 107]
[97 106]
[98 105]
[99 104]
[114 137]
[115 136]
[116 135]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
[123 129]
[138 169]
[139 168]
[140 167]
[141 166]
[142 165]
[144 163]
[145 162]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
