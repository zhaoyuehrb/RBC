%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGUGGCUGUUGCGGAUGGGGCGUAGGUGGGCGGUGCGCCCACAGCUGCCUGGGUAAGGCCCAAGAUGGCUGUCUUCGCCUUAGUACUCGUGUGAAGUUGGCGGGGACGGUUCCUGUCAUCUUCUUGGGCUUAUUUGGUGUGCUGUUGAAGGGGGGAGACUAGAGAAAUGGCAGGGAACCUCUUAUCCGGGGCAGGUAGGCGCCUGUGGGACUGGGUGCCUCUGGCGUGCAGAAGCUUCUCUCUUGGUGUGCC\
UAGAUUGAUCGGUA\
) } def
/len { sequence length } bind def

/coor [
[52.27755737 398.60369873]
[50.53616333 413.50228882]
[48.79476929 428.40084839]
[52.96141434 444.83483887]
[38.32313156 453.38803101]
[26.05192757 441.68957520]
[33.89619446 426.65945435]
[35.63758850 411.76089478]
[37.37898254 396.86230469]
[30.37152672 389.48510742]
[28.52390480 379.25671387]
[32.67882156 369.49075317]
[41.69408417 363.48559570]
[43.78168106 348.63159180]
[45.86927795 333.77755737]
[39.97856903 320.09732056]
[49.56118393 307.50827026]
[51.64878082 292.65426636]
[53.73637772 277.80023193]
[47.84566879 264.11999512]
[57.42828369 251.53096008]
[59.51588058 236.67694092]
[50.40899277 227.59056091]
[48.15381622 214.72778320]
[53.79163361 202.73336792]
[65.47208405 196.06939697]
[67.73236847 181.24067688]
[69.99265289 166.41195679]
[72.25293732 151.58322144]
[74.51322937 136.75450134]
[61.39393234 129.48236084]
[50.01622772 139.25721741]
[38.63852310 149.03207397]
[27.26081848 158.80693054]
[15.88311577 168.58178711]
[7.80905962 183.48970032]
[-8.75137043 179.85810852]
[-9.84608078 162.93954468]
[6.10825729 157.20408630]
[17.48596001 147.42922974]
[28.86366463 137.65437317]
[40.24136734 127.87950897]
[51.61907196 118.10465240]
[51.27003860 103.10871124]
[39.44987488 93.87379456]
[27.62971497 84.63887024]
[15.80955410 75.40394592]
[3.98939252 66.16902161]
[-7.88429499 57.00302505]
[-19.81110764 47.90625763]
[-31.73791885 38.80949402]
[-43.66473007 29.71272659]
[-52.35240936 27.01100349]
[-55.67657471 20.44007683]
[-67.49673462 11.20515442]
[-79.31689453 1.97023273]
[-91.13705444 -7.26468945]
[-102.95722198 -16.49961090]
[-114.77738190 -25.73453331]
[-126.59754181 -34.96945572]
[-135.25318909 -37.77207947]
[-138.50068665 -44.38124084]
[-150.21258545 -53.75306702]
[-161.92449951 -63.12489319]
[-173.63641357 -72.49671936]
[-185.34832764 -81.86855316]
[-197.06024170 -91.24037933]
[-208.77214050 -100.61220551]
[-220.85578918 -102.99623108]
[-225.77609253 -112.81578827]
[-238.40347290 -120.91204834]
[-251.03083801 -129.00830078]
[-263.65820312 -137.10456848]
[-276.28558350 -145.20082092]
[-288.91296387 -153.29708862]
[-301.54034424 -161.39334106]
[-314.16772461 -169.48960876]
[-326.79507446 -177.58586121]
[-339.42245483 -185.68212891]
[-352.04983521 -193.77838135]
[-364.67721558 -201.87464905]
[-377.30459595 -209.97090149]
[-391.93154907 -202.22497559]
[-408.37426758 -202.91896057]
[-422.13833618 -211.76812744]
[-429.50961304 -226.27172852]
[-428.55606079 -242.41886902]
[-441.27679443 -250.36766052]
[-453.99749756 -258.31643677]
[-470.39663696 -258.34771729]
[-478.33343506 -272.69830322]
[-469.64318848 -286.60556030]
[-453.26571655 -285.76290894]
[-446.04870605 -271.03717041]
[-433.32800293 -263.08837891]
[-420.60726929 -255.13958740]
[-409.01559448 -262.32510376]
[-395.39425659 -263.83001709]
[-382.38870239 -259.30477905]
[-372.54953003 -249.57661438]
[-367.83209229 -236.49893188]
[-369.20831299 -222.59828186]
[-356.58093262 -214.50201416]
[-343.95358276 -206.40576172]
[-331.32620239 -198.30949402]
[-318.69882202 -190.21324158]
[-306.07144165 -182.11697388]
[-293.44409180 -174.02072144]
[-280.81671143 -165.92445374]
[-268.18933105 -157.82820129]
[-255.56195068 -149.73193359]
[-242.93458557 -141.63568115]
[-230.30720520 -133.53941345]
[-217.67982483 -125.44316101]
[-222.33799744 -139.70153809]
[-219.56330872 -154.44267273]
[-210.03994751 -166.03170776]
[-196.11616516 -171.61100769]
[-181.22531128 -169.80482483]
[-169.03913879 -161.05854797]
[-162.56253052 -147.52882385]
[-163.39247131 -132.55180359]
[-171.32432556 -119.82051849]
[-184.40225220 -112.47423553]
[-199.40031433 -112.32411957]
[-187.68840027 -102.95228577]
[-175.97650146 -93.58045959]
[-164.26458740 -84.20863342]
[-152.55267334 -74.83680725]
[-140.84075928 -65.46497345]
[-129.12886047 -56.09315109]
[-117.36261749 -46.78961563]
[-105.54245758 -37.55469513]
[-93.72229767 -28.31977272]
[-81.90213776 -19.08485031]
[-70.08197784 -9.84992886]
[-58.26181412 -0.61500651]
[-46.44165039 8.61991596]
[-34.56796265 17.78591537]
[-22.64115334 26.88268089]
[-10.71434021 35.97944641]
[1.21247125 45.07621384]
[8.41094875 46.62833786]
[13.22431469 54.34886551]
[25.04447556 63.58378601]
[36.86463547 72.81871033]
[48.68479919 82.05362701]
[60.50495911 91.28855133]
[82.63959503 67.63267517]
[111.91019440 69.20940399]
[127.61827850 90.22059631]
[142.56855774 89.00021362]
[157.51882935 87.77983093]
[172.46910095 86.55945587]
[187.41937256 85.33907318]
[202.36964417 84.11869049]
[217.31991577 82.89831543]
[232.27018738 81.67793274]
[247.22045898 80.45755005]
[262.17074585 79.23717499]
[270.43475342 75.43175507]
[277.30187988 78.09059906]
[292.26535034 77.04425812]
[296.98025513 63.74065018]
[306.37612915 53.26618958]
[319.01324463 47.17652512]
[332.97393799 46.35919189]
[346.15353394 50.90440750]
[356.57766724 60.09643555]
[362.69805908 72.52606964]
[377.67266846 71.65390015]
[392.64730835 70.78172302]
[405.97424316 62.25510788]
[419.12985229 69.23929596]
[434.10449219 68.36711884]
[449.07910156 67.49494934]
[464.05374146 66.62277222]
[479.02835083 65.75060272]
[494.19631958 55.28078842]
[509.55310059 63.80517578]
[524.51660156 62.75883102]
[539.48004150 61.71248245]
[554.44348145 60.66613388]
[560.32281494 50.38197327]
[570.32513428 44.26127243]
[581.91925049 43.71798325]
[592.23522949 48.77130508]
[598.77496338 58.06930161]
[613.75872803 57.37142181]
[628.74249268 56.67354202]
[635.55957031 48.25548553]
[645.66949463 45.02629852]
[655.68188477 47.81665421]
[662.37579346 55.47948074]
[677.37170410 55.13044739]
[692.36767578 54.78141403]
[707.36358643 54.43237686]
[722.35955811 54.08334351]
[737.35546875 53.73431015]
[751.07391357 44.74896240]
[765.59082031 52.37736130]
[765.97241211 68.77207184]
[751.82617188 77.06761169]
[737.70452881 68.73024750]
[722.70855713 69.07928467]
[707.71264648 69.42831421]
[692.71667480 69.77735138]
[677.72076416 70.12638855]
[662.72485352 70.47541809]
[646.94989014 81.69261932]
[629.44036865 71.65729523]
[614.45660400 72.35517883]
[599.47283936 73.05305481]
[587.94677734 87.30784607]
[569.33929443 88.59683990]
[555.48986816 75.62959290]
[540.52636719 76.67594147]
[525.56292725 77.72229004]
[510.59945679 78.76863861]
[502.44906616 87.67700195]
[490.01574707 88.69052124]
[479.90051270 80.72522736]
[464.92590332 81.59739685]
[449.95129395 82.46956635]
[434.97665405 83.34174347]
[420.00204468 84.21391296]
[407.74618530 92.67814636]
[393.51947021 85.75634766]
[378.54486084 86.62851715]
[363.57022095 87.50069427]
[357.75939941 102.40392303]
[345.98242188 113.31457520]
[330.56799316 118.00592041]
[314.59445190 115.48789215]
[301.27508545 106.21552277]
[293.31170654 92.00771332]
[278.34823608 93.05406189]
[263.39111328 94.18744659]
[248.44084167 95.40782928]
[233.49057007 96.62820435]
[218.54029846 97.84858704]
[203.59002686 99.06896973]
[188.63975525 100.28934479]
[173.68948364 101.50972748]
[158.73921204 102.73011017]
[143.78892517 103.95048523]
[128.83865356 105.17086792]
[127.99880981 113.66659546]
[124.58413696 122.03482819]
[118.62219238 129.48277283]
[110.38577271 135.23014832]
[100.38594055 138.58480835]
[89.34194946 139.01478577]
[87.08166504 153.84350586]
[84.82138062 168.67224121]
[82.56109619 183.50096130]
[80.30081177 198.32969666]
[90.92398834 212.24946594]
[88.22853088 229.20866394]
[74.36990356 238.76454163]
[72.28230286 253.61856079]
[78.02368927 268.36123657]
[68.59040070 279.88784790]
[66.50279999 294.74185181]
[64.41520691 309.59588623]
[70.15659332 324.33856201]
[60.72329712 335.86517334]
[58.63570023 350.71917725]
[56.54810333 365.57321167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[13 269]
[14 268]
[15 267]
[17 265]
[18 264]
[19 263]
[21 261]
[22 260]
[26 257]
[27 256]
[28 255]
[29 254]
[30 253]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[49 142]
[50 141]
[51 140]
[52 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[60 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[70 114]
[71 113]
[72 112]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[78 106]
[79 105]
[80 104]
[81 103]
[82 102]
[87 96]
[88 95]
[89 94]
[151 247]
[152 246]
[153 245]
[154 244]
[155 243]
[156 242]
[157 241]
[158 240]
[159 239]
[160 238]
[162 237]
[163 236]
[170 230]
[171 229]
[172 228]
[174 226]
[175 225]
[176 224]
[177 223]
[178 222]
[180 219]
[181 218]
[182 217]
[183 216]
[188 213]
[189 212]
[190 211]
[194 209]
[195 208]
[196 207]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
