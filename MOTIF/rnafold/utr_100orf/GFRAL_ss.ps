%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUUCUGGACAGUUACUCUUAAGAAAGUUGUCAGAAGAAACGCAUCUGCCUUUUUUUCCAGGUGAACUGCCGUGAGUUGUCCAGCAUGAUAGUGUUUAUUUUCUUGGCUAUGGGGUUAAGCUUGGAAAAUGAAUACACUUCCCAAACCAAUAAUUGCACAUAUUUAAGAGAGCAAUGCUUACGUG\
) } def
/len { sequence length } bind def

/coor [
[344.36721802 97.68368530]
[329.38046265 98.31349945]
[314.39367676 98.94331360]
[299.40692139 99.57312775]
[287.01571655 107.83798981]
[272.90286255 100.68695068]
[257.91607666 101.31676483]
[242.92930603 101.94657898]
[227.94253540 102.57639313]
[212.95576477 103.20619965]
[197.96899414 103.83601379]
[182.98222351 104.46582794]
[167.99545288 105.09564209]
[153.01449585 105.85131836]
[138.04042053 106.73281097]
[123.06634521 107.61430359]
[108.09226990 108.49578857]
[93.93105316 113.44148254]
[81.66387939 122.07377625]
[69.39670563 130.70606995]
[57.12953186 139.33836365]
[54.29440308 154.65501404]
[41.73077393 163.23463440]
[27.14616203 160.43737793]
[14.87898922 169.06967163]
[12.41819382 184.68121338]
[-0.40985352 193.91249084]
[-15.99449921 191.28678894]
[-25.08964920 178.36186218]
[-22.29931450 162.80584717]
[-9.27894783 153.84785461]
[6.24669552 156.80250549]
[18.51386833 148.17021179]
[20.80509186 133.49758911]
[33.12277603 124.56845856]
[48.49724197 127.07118988]
[60.76441193 118.43889618]
[73.03158569 109.80660248]
[85.29875946 101.17430878]
[84.29379272 93.74194336]
[70.41547394 88.05052185]
[82.28385925 78.87721252]
[81.27889252 71.44484711]
[67.15971375 66.38037872]
[53.04053879 61.31591415]
[38.83827591 56.48934937]
[24.55693436 51.90205383]
[15.40796661 52.25572968]
[10.07536221 47.11588287]
[-4.12690163 42.28931808]
[-18.32916451 37.46275711]
[-32.53142929 32.63619232]
[-45.12829208 41.69702530]
[-60.64499283 41.58947754]
[-73.11505127 32.35490417]
[-77.74346161 17.54418373]
[-72.75051880 2.85234499]
[-60.05610657 -6.07130337]
[-44.54148483 -5.79543543]
[-32.17234039 3.57387209]
[-27.70486641 18.43392944]
[-13.50260162 23.26049232]
[0.69966143 28.08705521]
[14.90192509 32.91361618]
[29.14422989 37.62071228]
[43.42557144 42.20800781]
[48.02430725 40.85067749]
[53.52426529 42.38263702]
[58.10500717 47.19673538]
[72.22418213 52.26120377]
[86.34336090 57.32567215]
[107.12562561 73.69826508]
[107.21077728 93.52171326]
[122.18486023 92.64022064]
[137.15893555 91.75873566]
[152.13301086 90.87724304]
[160.53640747 87.24246216]
[167.36564636 90.10887146]
[182.35241699 89.47905731]
[197.33918762 88.84924316]
[212.32595825 88.21942902]
[227.31272888 87.58961487]
[242.29949951 86.95980072]
[257.28628540 86.32999420]
[272.27304077 85.70018005]
[285.73617554 77.39026642]
[298.77709961 84.58635712]
[313.76385498 83.95654297]
[328.75064087 83.32672882]
[343.73739624 82.69691467]
[347.52716064 73.92584229]
[355.00881958 67.24143982]
[365.06295776 64.17627716]
[374.98074341 52.92294312]
[384.89852905 41.66961288]
[394.81631470 30.41627884]
[404.73410034 19.16294670]
[414.65188599 7.90961456]
[424.56967163 -3.34371758]
[434.48748779 -14.59704971]
[444.40527344 -25.85038185]
[454.32305908 -37.10371399]
[464.24084473 -48.35704803]
[474.15863037 -59.61037827]
[484.07641602 -70.86370850]
[487.39620972 -86.33270264]
[501.61596680 -90.76519012]
[511.53378296 -102.01852417]
[521.45153809 -113.27185059]
[531.36932373 -124.52518463]
[527.04864502 -139.33514404]
[531.44262695 -154.12353516]
[543.14916992 -164.17144775]
[558.43273926 -166.27259827]
[572.41650391 -159.75654602]
[580.63818359 -146.70252991]
[580.47430420 -131.27603149]
[571.97717285 -118.39960480]
[557.85821533 -112.18206024]
[542.62268066 -114.60739899]
[532.70489502 -103.35406494]
[522.78710938 -92.10073090]
[512.86932373 -80.84740448]
[510.25891113 -66.18332672]
[495.32974243 -60.94592285]
[485.41195679 -49.69259262]
[475.49417114 -38.43925858]
[465.57638550 -27.18592644]
[455.65859985 -15.93259525]
[445.74081421 -4.67926264]
[435.82302856 6.57406998]
[425.90524292 17.82740211]
[415.98745728 29.08073425]
[406.06964111 40.33406830]
[396.15185547 51.58739853]
[386.23406982 62.84073257]
[376.31628418 74.09406281]
[390.41510010 68.97317505]
[404.51391602 63.85228729]
[415.15295410 53.27821732]
[429.02572632 47.57333374]
[444.02569580 47.60392380]
[457.87512207 53.36533737]
[468.47094727 63.98271179]
[474.20419312 77.84379578]
[474.20428467 92.84379578]
[468.47122192 106.70496368]
[457.87557983 117.32248688]
[444.02624512 123.08409882]
[429.02627563 123.11489868]
[415.15341187 117.41020966]
[404.51391602 106.83583832]
[390.41510010 101.71495056]
[376.31628418 96.59406281]
[386.23406982 107.84739685]
[396.15185547 119.10073090]
[406.06964111 130.35406494]
[415.98745728 141.60739136]
[430.35827637 136.65286255]
[445.53091431 137.57995605]
[459.19165039 144.24728394]
[469.25726318 155.63812256]
[474.19290161 170.01547241]
[473.24584961 185.18687439]
[466.56054688 198.83882141]
[455.15649414 208.88946533]
[440.77264404 213.80615234]
[425.60250854 212.83915710]
[411.95938110 206.13591003]
[401.92373657 194.71862793]
[397.02597046 180.32833862]
[398.01293945 165.15948486]
[404.73410034 151.52517700]
[394.81631470 140.27185059]
[384.89852905 129.01852417]
[374.98074341 117.76518250]
[365.06295776 106.51184845]
[372.71145630 119.41536713]
[373.21011353 134.40707397]
[366.43600464 147.79032898]
[354.05947876 156.26509094]
[339.13232422 157.74165344]
[325.33529663 151.85592651]
[316.07043457 140.05921936]
[313.62228394 125.26035309]
[318.59448242 111.10842133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 90]
[2 89]
[3 88]
[4 87]
[6 85]
[7 84]
[8 83]
[9 82]
[10 81]
[11 80]
[12 79]
[13 78]
[14 76]
[15 75]
[16 74]
[17 73]
[18 39]
[19 38]
[20 37]
[21 36]
[24 33]
[25 32]
[43 71]
[44 70]
[45 69]
[46 66]
[47 65]
[49 64]
[50 63]
[51 62]
[52 61]
[93 137]
[94 136]
[95 135]
[96 134]
[97 133]
[98 132]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[105 125]
[107 123]
[108 122]
[109 121]
[110 120]
[154 177]
[155 176]
[156 175]
[157 174]
[158 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
