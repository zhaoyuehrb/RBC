%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGAUUGGUGCUGCCUGGCGGCGGGGCGCGGGGCACGCUGGGACGUCUCGCUGGCGGGAGGCCACGGGCUUUCCACAGCGCGGGGGAACGGGAGGCUGCAGGAUGGUCAAGCUGACGGCGGAGCUGAUCGAGCAGGCGGCGCAGUACACCAACGCGGUGCGCGACCGGGAGCUGGACCUCCGGGGGUAUAAAAUUCCCGUCA\
) } def
/len { sequence length } bind def

/coor [
[97.88169861 136.07186890]
[83.31749725 133.07015991]
[70.85679626 124.30082703]
[60.29091263 134.94798279]
[49.72502518 145.59513855]
[45.44422150 163.50254822]
[28.34707642 167.45014954]
[17.94558907 178.25798035]
[7.54410124 189.06579590]
[-2.85738611 199.87362671]
[-13.25887394 210.68145752]
[-23.66036034 221.48927307]
[-27.35877419 229.84681702]
[-34.30501938 232.38148499]
[-44.87090683 243.02864075]
[-55.43679810 253.67579651]
[-66.00268555 264.32296753]
[-76.56857300 274.97012329]
[-80.79729462 290.21572876]
[-95.25430298 293.79959106]
[-105.82019043 304.44674683]
[-116.38607788 315.09390259]
[-116.07490540 330.89514160]
[-127.08810425 342.23025513]
[-142.89173889 342.37435913]
[-154.10978699 331.24191284]
[-154.08679199 315.43765259]
[-142.83638000 304.33792114]
[-127.03324127 304.52801514]
[-116.46735382 293.88085938]
[-105.90146637 283.23370361]
[-102.42848969 268.74963379]
[-87.21572876 264.40423584]
[-76.64984131 253.75708008]
[-66.08395386 243.10990906]
[-55.51807022 232.46275330]
[-44.95217896 221.81559753]
[-34.46818542 211.08778381]
[-24.06669807 200.27996826]
[-13.66520977 189.47213745]
[-3.26372242 178.66432190]
[7.13776493 167.85649109]
[17.53925323 157.04866028]
[17.62198448 144.94941711]
[26.20334435 135.85984802]
[39.07786179 135.02925110]
[49.64375305 124.38209534]
[60.20964050 113.73493958]
[57.91989899 98.91072845]
[44.63395309 91.94771576]
[31.29504395 85.08670044]
[17.90395355 78.32810211]
[4.51286411 71.56949615]
[-8.87822533 64.81089020]
[-22.26931572 58.05228806]
[-34.74557877 61.33649063]
[-45.76136398 55.42781830]
[-49.66678619 43.97589874]
[-62.95273209 37.01288223]
[-76.23867798 30.04986382]
[-89.52462769 23.08684540]
[-102.81056976 16.12382698]
[-116.09651947 9.16080952]
[-129.38246155 2.19779205]
[-142.66841125 -4.76522589]
[-159.50431824 -6.76234674]
[-162.24589539 -23.49316025]
[-146.92787170 -30.75914001]
[-135.70539856 -18.05117226]
[-122.41944885 -11.08815479]
[-109.13349915 -4.12513685]
[-95.84755707 2.83788085]
[-82.56160736 9.80089855]
[-69.27566528 16.76391602]
[-55.98971558 23.72693443]
[-42.70376968 30.68995285]
[-25.23576927 29.02713966]
[-15.51071262 44.66119766]
[-2.11962271 51.41980362]
[11.27146721 58.17840576]
[24.66255760 64.93701172]
[38.05364609 71.69561005]
[45.44497681 71.90308380]
[51.59696960 78.66176605]
[64.88291931 85.62478638]
[75.53821564 72.42870331]
[90.48741150 65.51628113]
[106.46138000 65.92227936]
[120.17029572 73.13021088]
[128.98117065 85.26681519]
[143.55999756 81.73719788]
[158.13880920 78.20758820]
[172.71762085 74.67797089]
[187.29643250 71.14836121]
[201.87524414 67.61874390]
[216.45405579 64.08912659]
[230.85525513 59.89322662]
[245.04840088 55.03990173]
[259.24154663 50.18658066]
[263.90225220 35.50380707]
[276.17156982 26.48619461]
[291.22015381 26.42306519]
[303.27603149 35.12904739]
[317.46917725 30.27572441]
[331.66232300 25.42239952]
[338.77392578 19.68202019]
[346.11029053 20.60526466]
[360.37612915 15.97000980]
[374.64199829 11.33475494]
[388.90783691 6.69950008]
[399.64163208 -4.92359781]
[414.13693237 -1.49793112]
[428.40277100 -6.13318586]
[442.66864014 -10.76844120]
[456.93447876 -15.40369606]
[464.15609741 -29.20535660]
[478.68972778 -33.70294189]
[491.80300903 -26.73316765]
[506.06884766 -31.36842155]
[520.33471680 -36.00367737]
[534.56463623 -40.74810410]
[548.75775146 -45.60142899]
[548.46215820 -59.22640991]
[557.55163574 -72.59053040]
[575.01837158 -79.36077881]
[586.21667480 -89.34066772]
[597.41497803 -99.32054901]
[599.76818848 -115.19007111]
[613.71453857 -123.11978149]
[628.55548096 -117.02667999]
[632.90637207 -101.58487701]
[623.42956543 -88.63999939]
[607.39483643 -88.12225342]
[596.19653320 -78.14236450]
[584.99822998 -68.16248322]
[588.06628418 -61.31870270]
[594.20227051 -47.63114929]
[597.27032471 -40.78737259]
[612.17132568 -42.50762177]
[627.07238770 -44.22787476]
[639.89416504 -53.49677658]
[653.42480469 -47.27013397]
[668.32580566 -48.99038315]
[683.22686768 -50.71063614]
[691.39758301 -54.80530548]
[698.36920166 -52.34127045]
[713.29479980 -53.83297348]
[723.10815430 -66.22142792]
[738.81658936 -67.95928955]
[751.10064697 -58.01551819]
[752.67230225 -42.28957367]
[742.59924316 -30.11138153]
[726.85754395 -28.70604706]
[714.78649902 -38.90732956]
[699.86090088 -37.41563034]
[684.94708252 -35.80960464]
[670.04608154 -34.08935165]
[655.14501953 -32.36910248]
[643.38909912 -23.22324371]
[628.79260254 -29.32684326]
[613.89160156 -27.60659218]
[598.99053955 -25.88634109]
[571.27203369 -16.92696381]
[553.61108398 -31.40828896]
[539.41790771 -26.55496407]
[534.10351562 -21.41378593]
[524.96997070 -21.73782921]
[510.70410156 -17.10257530]
[496.43826294 -12.46731949]
[489.92614746 0.87913281]
[475.52456665 5.78316307]
[461.56973267 -1.13784814]
[447.30389404 3.49740672]
[433.03802490 8.13266182]
[418.77218628 12.76791668]
[409.05880737 24.05946922]
[393.54309082 20.96534729]
[379.27725220 25.60060310]
[365.01138306 30.23585701]
[350.74554443 34.87111282]
[336.51562500 39.61553955]
[322.32250977 44.46886444]
[308.12936401 49.32218933]
[303.92837524 63.58717346]
[291.99194336 72.75153351]
[276.77001953 73.13450623]
[264.09484863 64.37972260]
[249.90171814 69.23303986]
[235.70858765 74.08636475]
[248.64845276 81.67317200]
[252.57080078 96.15126801]
[245.23020935 109.23237610]
[230.82891846 113.42797089]
[217.61125183 106.33619690]
[213.14392090 92.01688385]
[219.98367310 78.66794586]
[205.40486145 82.19755554]
[190.82604980 85.72717285]
[176.24723816 89.25678253]
[161.66842651 92.78639984]
[147.08959961 96.31601715]
[132.51078796 99.84562683]
[130.72927856 113.13007355]
[123.60681915 124.91501617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 48]
[4 47]
[5 46]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[20 31]
[21 30]
[22 29]
[49 85]
[50 84]
[51 82]
[52 81]
[53 80]
[54 79]
[55 78]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[90 202]
[91 201]
[92 200]
[93 199]
[94 198]
[95 197]
[96 196]
[97 189]
[98 188]
[99 187]
[103 183]
[104 182]
[105 181]
[107 180]
[108 179]
[109 178]
[110 177]
[112 175]
[113 174]
[114 173]
[115 172]
[118 169]
[119 168]
[120 167]
[121 165]
[122 164]
[125 135]
[126 134]
[127 133]
[138 162]
[139 161]
[140 160]
[142 158]
[143 157]
[144 156]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
