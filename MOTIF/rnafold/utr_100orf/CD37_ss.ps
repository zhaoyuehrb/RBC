%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUUUCUCUCUCAGCUCUCCGUCUCUCUUUCUCUCUCAGCCUCUUUCUUUCUCCCUGUCUCCCCCACUGUCAGCACCUCUUCUGUGUGGUGAGUGGACCGCUUACCCCACUAGGUGAAGAUGUCAGCCCAGGAGAGCUGCCUCAGCCUCAUCAAGUACUUCCUCUUCGUUUUCAACCUCUUCUUCUUCGUCCUCGGCAGCCUGAUCUUCUGCUUCGGCA\
) } def
/len { sequence length } bind def

/coor [
[326.42623901 294.76620483]
[317.82354736 297.30755615]
[308.89279175 298.21673584]
[299.94107056 297.45993042]
[291.27673340 295.06072998]
[283.19869995 291.09930420]
[275.98605347 285.70983887]
[269.88858032 279.07577515]
[265.11798096 271.42382812]
[261.84057617 263.01605225]
[260.17144775 254.14093018]
[260.17053223 245.10351562]
[261.84033203 236.21484375]
[265.12579346 227.78134155]
[252.94084167 219.03340149]
[240.75587463 210.28546143]
[228.57090759 201.53750610]
[216.38594055 192.78956604]
[204.20097351 184.04162598]
[192.01600647 175.29367065]
[179.83102417 166.54573059]
[167.64605713 157.79777527]
[159.75282288 165.92552185]
[150.89071655 172.98429871]
[141.20344543 178.85968018]
[130.84806824 183.45639038]
[119.99252319 186.69990540]
[108.81279755 188.53761292]
[97.49018097 188.93972778]
[86.20825958 187.89971924]
[75.14996338 185.43447876]
[64.49459839 181.58393860]
[54.41493607 176.41056824]
[45.07441330 169.99824524]
[36.62448120 162.45091248]
[29.20215416 153.89099121]
[22.92778015 144.45724487]
[17.90309334 134.30264282]
[14.20956707 123.59184265]
[-0.53731912 126.33580780]
[-15.28420448 129.07977295]
[-18.05669403 144.00216675]
[-26.03587914 156.91328430]
[-38.14264297 166.06701660]
[-52.73964310 170.22538757]
[-67.85275269 168.82600403]
[-81.43805695 162.05813599]
[-91.65824890 150.83708191]
[-97.13112640 136.68038940]
[-97.11653900 121.50263214]
[-91.61644745 107.35648346]
[-81.37470245 96.15509796]
[-67.77641296 89.41336060]
[-52.66064072 88.04304504]
[-38.07166290 92.22946930]
[-25.98252106 101.40645599]
[-18.02817345 114.33289337]
[-3.28128719 111.58892059]
[11.46559906 108.84495544]
[11.02487946 100.03815460]
[11.45804596 91.23097229]
[12.76084328 82.50991821]
[14.92047501 73.96064758]
[17.91572952 65.66712952]
[21.71719170 57.71081161]
[26.28752136 50.16984940]
[31.58183098 43.11830139]
[37.54812241 36.62542725]
[44.12779617 30.75499916]
[51.25622559 25.56467247]
[58.86340714 21.10542488]
[53.07416153 7.26762629]
[47.28491974 -6.57017183]
[32.93765259 -12.63595295]
[27.26366043 -26.75191879]
[33.13487244 -40.39246368]
[27.34563065 -54.23026276]
[21.55638695 -68.06806183]
[15.76714325 -81.90586090]
[9.97789955 -95.74365234]
[1.81877530 -97.42143250]
[-4.93888044 -102.12944794]
[-9.24029350 -109.04261017]
[-10.44997311 -116.99943542]
[-8.44470596 -124.69691467]
[-3.62172341 -130.90390015]
[-8.61882019 -145.04705811]
[-13.61591721 -159.19023132]
[-25.50862885 -169.62449646]
[-22.45326424 -184.20234680]
[-27.45036125 -198.34552002]
[-32.44746017 -212.48867798]
[-37.44455338 -226.63183594]
[-42.44165039 -240.77499390]
[-47.43874741 -254.91816711]
[-52.43584442 -269.06130981]
[-57.43294144 -283.20449829]
[-68.41054535 -296.12457275]
[-59.03428650 -310.24978638]
[-42.86547089 -305.15020752]
[-43.28977966 -288.20156860]
[-38.29268265 -274.05841064]
[-33.29558563 -259.91525269]
[-28.29849052 -245.77209473]
[-23.30139351 -231.62893677]
[-18.30429649 -217.48577881]
[-13.30719948 -203.34260559]
[-8.31010246 -189.19944763]
[3.22518396 -179.77679443]
[0.52724451 -164.18731689]
[5.52434158 -150.04415894]
[10.52143860 -135.90100098]
[28.26270676 -123.49958801]
[23.81569862 -101.53289795]
[29.60494041 -87.69509888]
[35.39418411 -73.85729980]
[41.18342972 -60.01950455]
[46.97267151 -46.18170547]
[60.80809402 -40.78571701]
[66.87633514 -26.83469200]
[61.12271500 -12.35941505]
[66.91195679 1.47838283]
[72.70120239 15.31618118]
[93.79874420 11.24123764]
[115.25794983 12.34289265]
[135.82728577 18.55689430]
[154.30708313 29.52083015]
[169.61959839 44.59525681]
[180.87173462 62.90100861]
[187.40727234 83.37045288]
[188.84503174 104.80976105]
[185.10116577 125.96855927]
[176.39401245 145.61280823]
[188.57897949 154.36076355]
[200.76394653 163.10870361]
[212.94891357 171.85665894]
[225.13388062 180.60459900]
[237.31884766 189.35253906]
[249.50381470 198.10049438]
[261.68878174 206.84843445]
[273.87374878 215.59637451]
[292.17434692 203.98556519]
[313.65640259 201.45877075]
[334.07043457 208.47833252]
[349.39450073 223.62191772]
[356.62649536 243.87046814]
[354.37240601 265.21008301]
[367.66940308 272.15200806]
[380.96636963 279.09393311]
[389.35675049 270.50656128]
[400.79989624 265.31930542]
[413.90270996 264.60205078]
[426.90734863 268.85116577]
[437.92697144 277.87078857]
[445.21743774 290.75015259]
[460.06747437 288.63452148]
[474.91754150 286.51889038]
[482.05722046 272.74194336]
[495.94625854 265.82284546]
[511.24407959 268.42214966]
[522.06835938 279.54040527]
[524.25689697 294.90234375]
[516.96820068 308.60107422]
[503.00488281 315.36907959]
[487.73617554 312.60394287]
[477.03317261 301.36895752]
[462.18310547 303.48458862]
[447.33303833 305.60018921]
[443.81512451 312.22396851]
[457.86157227 317.48681641]
[471.90798950 322.74969482]
[485.95443726 328.01254272]
[500.00085449 333.27542114]
[514.04730225 338.53829956]
[528.09375000 343.80114746]
[542.14013672 349.06402588]
[556.18658447 354.32687378]
[571.05480957 352.34298706]
[585.35949707 356.85708618]
[596.39593506 367.01565552]
[602.07745361 380.89804077]
[601.32989502 395.87939453]
[594.29455566 409.12716675]
[582.30163574 418.13659668]
[567.61865234 421.20419312]
[553.02178955 417.75000000]
[541.27087402 408.42709351]
[534.58715820 394.99575806]
[522.36120605 386.30523682]
[510.13519287 377.61468506]
[497.90921021 368.92416382]
[485.68322754 360.23364258]
[473.45724487 351.54309082]
[461.23126221 342.85256958]
[449.00527954 334.16201782]
[436.77929688 325.47149658]
[433.26138306 332.09527588]
[439.82424927 345.58337402]
[446.38708496 359.07147217]
[452.94992065 372.55960083]
[459.51278687 386.04769897]
[474.84402466 387.76721191]
[486.79739380 397.52017212]
[491.55865479 412.19442749]
[487.60845947 427.10751343]
[476.20733643 437.50067139]
[460.99331665 440.05752563]
[446.82116699 433.96215820]
[438.21313477 421.15957642]
[437.91604614 405.73507690]
[446.02465820 392.61053467]
[439.46182251 379.12243652]
[432.89898682 365.63433838]
[426.33612061 352.14620972]
[419.77328491 338.65811157]
[391.54479980 335.81497192]
[373.98297119 316.39215088]
[374.02447510 292.39089966]
[360.72747803 285.44897461]
[347.43048096 278.50708008]
[341.48757935 285.19921875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[39 59]
[40 58]
[41 57]
[71 123]
[72 122]
[73 121]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[86 112]
[87 111]
[88 110]
[90 108]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[147 220]
[148 219]
[149 218]
[155 168]
[156 167]
[157 166]
[197 215]
[198 214]
[199 213]
[200 212]
[201 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
