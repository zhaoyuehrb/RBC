%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGCCGCCUCGCCCGCCGCGCGCGCCGGUCCGGCAGCGCACGGGUUAAGGCUGGCACCGCGCCCGGCGGGAGGGGGGGCGCCCACCUCCCCUCCUCCCCGCGCCGGGCAUGCGGGGCCCAGUGGGCACCGAGGAGGAGCUGCCGCGGCUGUUCGCCGAGGAGAUGGAGAAUGAGGACGAGAUGUCAGAAGAAGAAGAUGGUGGUCUUG\
) } def
/len { sequence length } bind def

/coor [
[62.14566803 314.36853027]
[64.62163544 295.14562988]
[64.84391022 280.14727783]
[65.06618500 265.14892578]
[65.28845978 250.15058899]
[65.51073456 235.15223694]
[65.73300934 220.15388489]
[65.95528412 205.15551758]
[66.17755890 190.15716553]
[66.39982605 175.15881348]
[66.62210083 160.16046143]
[66.73324585 145.16087341]
[66.73324585 130.16087341]
[59.39422989 117.07887268]
[46.59302902 109.26035309]
[33.79182434 101.44184113]
[20.99062347 93.62332153]
[17.59651566 103.25824738]
[8.74527359 111.44889069]
[-3.57027316 120.01203156]
[-15.88581944 128.57516479]
[-22.79922676 142.80595398]
[-37.66581726 143.71903992]
[-49.98136520 152.28218079]
[-62.29690933 160.84532166]
[-74.61245728 169.40844727]
[-86.86421967 178.06260681]
[-99.05152130 186.80729675]
[-111.23882294 195.55198669]
[-123.42612457 204.29667664]
[-132.77032471 218.44314575]
[-148.95066833 213.38024902]
[-148.56480408 196.43069458]
[-132.17082214 192.10937500]
[-119.98351288 183.36468506]
[-107.79621124 174.61999512]
[-95.60890961 165.87530518]
[-92.00720215 159.42231750]
[-83.17559052 157.09291077]
[-70.86004639 148.52976990]
[-58.54450226 139.96662903]
[-46.22895432 131.40348816]
[-40.19643784 117.78520203]
[-24.44895744 116.25962067]
[-12.13341045 107.69647980]
[0.18213619 99.13334656]
[-13.60747242 105.03645325]
[-27.79570961 100.16880798]
[-35.05715561 87.04358673]
[-31.64270973 72.43737030]
[-19.31525803 63.89138031]
[-4.43949223 65.81793213]
[5.30488110 77.22427368]
[-1.93700218 64.08824921]
[-9.17888546 50.95222473]
[-16.42076874 37.81620026]
[-23.75978279 24.73419380]
[-31.19552231 11.70692444]
[-44.75621796 3.55719113]
[-44.34560394 -11.33175373]
[-51.78134537 -24.35902214]
[-59.21708679 -37.38629150]
[-66.65282440 -50.41356277]
[-74.28079224 -63.32921600]
[-82.09931183 -76.13041687]
[-89.91783142 -88.93161774]
[-97.73634338 -101.73282623]
[-105.55486298 -114.53402710]
[-113.37338257 -127.33522797]
[-121.19189453 -140.13642883]
[-129.29301453 -152.76069641]
[-137.67271423 -165.20178223]
[-146.05241394 -177.64286804]
[-154.43211365 -190.08395386]
[-162.81181335 -202.52503967]
[-171.19151306 -214.96612549]
[-179.57121277 -227.40721130]
[-187.95091248 -239.84829712]
[-196.33062744 -252.28938293]
[-204.71032715 -264.73046875]
[-213.09002686 -277.17153931]
[-228.51124573 -276.73623657]
[-241.70791626 -284.72692871]
[-248.46903992 -298.59384155]
[-246.63716125 -313.91204834]
[-236.79682922 -325.79360962]
[-222.08804321 -330.44714355]
[-207.20434570 -326.38769531]
[-196.89505005 -314.91067505]
[-194.44982910 -299.67834473]
[-200.64894104 -285.55123901]
[-192.26924133 -273.11016846]
[-183.88954163 -260.66906738]
[-175.50982666 -248.22799683]
[-167.13012695 -235.78691101]
[-158.75042725 -223.34582520]
[-150.37072754 -210.90473938]
[-141.99102783 -198.46365356]
[-133.61132812 -186.02256775]
[-125.23162842 -173.58148193]
[-116.85192108 -161.14039612]
[-113.48063660 -160.11003113]
[-110.44071960 -157.39599609]
[-108.51788330 -153.17173767]
[-108.39069366 -147.95495605]
[-100.57218170 -135.15374756]
[-92.75366211 -122.35254669]
[-84.93514252 -109.55133820]
[-77.11662292 -96.75013733]
[-69.29811096 -83.94893646]
[-61.47959137 -71.14773560]
[-57.13084793 -69.17521667]
[-53.97469711 -64.45030975]
[-53.62555695 -57.84930420]
[-46.18981552 -44.82203293]
[-38.75407410 -31.79476357]
[-31.31833458 -18.76749420]
[-18.28949547 -11.54955864]
[-18.16825294 4.27118301]
[-10.73251247 17.29845238]
[-4.68716192 21.54898071]
[-3.28474402 30.57431602]
[3.95713902 43.71034241]
[11.19902229 56.84636688]
[18.44090462 69.98239136]
[28.80913925 80.82212067]
[41.61034393 88.64063263]
[54.41154480 96.45915222]
[67.21274567 104.27767181]
[78.37606812 69.44690704]
[118.88140869 62.71079636]
[132.94270325 57.48777008]
[139.58561707 43.39842987]
[153.92016602 38.30184937]
[167.31126404 44.72167587]
[181.37255859 39.49864960]
[187.44573975 28.12032700]
[199.26435852 24.05930138]
[210.31578064 28.97670364]
[224.45292664 23.96261597]
[238.59008789 18.94853020]
[252.72723389 13.93444347]
[263.14718628 2.02920222]
[277.72872925 5.06704950]
[291.86587524 0.05296284]
[302.09268188 -12.76671696]
[318.26568604 -10.05265331]
[323.74746704 5.40315723]
[312.89883423 17.70110321]
[296.87994385 14.19011021]
[282.74279785 19.20419693]
[273.33401489 30.75079727]
[257.74130249 28.07159042]
[243.60417175 33.08567810]
[229.46702576 38.09976578]
[215.32987976 43.11384964]
[204.67474365 57.05826569]
[186.59558105 53.55994415]
[172.53428650 58.78297043]
[166.58139038 72.38806152]
[152.39562988 77.88526154]
[138.16572571 71.54906464]
[124.10443115 76.77208710]
[122.77775574 84.15381622]
[137.62174988 86.31153107]
[152.46574402 88.46923828]
[167.30975342 90.62694550]
[182.15374756 92.78465271]
[196.70918274 89.15980530]
[207.66130066 99.40924835]
[205.00817871 114.17274475]
[191.17274475 119.96765900]
[178.78990173 111.50138092]
[164.12351990 108.35535431]
[149.45715332 105.20932770]
[134.79077148 102.06330109]
[120.12439728 98.91727448]
[118.79772186 106.29900360]
[130.16038513 116.09133911]
[141.52305603 125.88366699]
[157.56414795 126.13476562]
[167.25485229 138.92030334]
[163.16128540 154.43231201]
[148.42369080 160.77130127]
[134.34748840 153.07453918]
[131.73072815 137.24633789]
[120.36805725 127.45401001]
[109.00539398 117.66167450]
[102.18735504 120.78647614]
[108.43695831 134.42254639]
[114.68655396 148.05862427]
[120.93615723 161.69470215]
[127.18553162 175.33087158]
[113.54924774 181.58001709]
[107.30008698 167.94429016]
[101.05048370 154.30822754]
[94.80088043 140.67214966]
[88.55127716 127.03607941]
[81.73324585 130.16087341]
[81.73324585 145.16087341]
[84.86245728 153.74176025]
[81.62046051 160.38273621]
[81.39818573 175.38108826]
[81.17591095 190.37944031]
[80.95363617 205.37779236]
[80.73136139 220.37615967]
[80.50908661 235.37451172]
[80.28681183 250.37286377]
[80.06453705 265.37121582]
[79.84226227 280.36956787]
[79.61998749 295.36791992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 211]
[3 210]
[4 209]
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[12 200]
[13 199]
[14 129]
[15 128]
[16 127]
[17 126]
[19 46]
[20 45]
[21 44]
[23 42]
[24 41]
[25 40]
[26 39]
[27 37]
[28 36]
[29 35]
[30 34]
[53 125]
[54 124]
[55 123]
[56 122]
[57 120]
[58 119]
[60 117]
[61 116]
[62 115]
[63 114]
[64 111]
[65 110]
[66 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 101]
[72 100]
[73 99]
[74 98]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[131 163]
[132 162]
[135 159]
[136 158]
[139 156]
[140 155]
[141 154]
[142 153]
[144 151]
[145 150]
[178 188]
[179 187]
[180 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
