%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGACAGGACUCCCCUCAGGGAAGGGAGCUGGAUGCCGGGAGGGACUGGAGCCAGCAAGGCCAGAGUGAAAGCAAAAUGACAACUACUCAGAAACACGAUCUCUUCACGCCGGAGCCUCACUAUGUCCCUGGCUAUGCCGGCUUCUUUCCGCAGCUGCGCUACCAGGUGGGGAACA\
) } def
/len { sequence length } bind def

/coor [
[79.27960205 257.63586426]
[68.52638245 268.34719849]
[54.62834930 274.44711304]
[39.46509933 275.11068726]
[25.08733749 270.24813843]
[13.43953705 260.51708984]
[6.09696722 247.23359680]
[4.05264997 232.19413757]
[7.58306313 217.43267822]
[16.21074677 204.94558716]
[28.76887894 196.42163086]
[43.55907059 193.01362610]
[45.66997147 178.16288757]
[47.78086853 163.31216431]
[49.89176559 148.46144104]
[52.00266266 133.61070251]
[54.02450562 114.38051605]
[62.25175095 99.82598114]
[73.99703217 91.60265350]
[86.24512482 90.17774963]
[96.11592865 94.81494904]
[94.53044891 79.89897919]
[92.94496918 64.98300171]
[91.35948944 50.06703186]
[89.77400970 35.15105820]
[88.18853760 20.23508453]
[86.60305786 5.31911135]
[85.01757812 -9.59686184]
[83.43209839 -24.51283455]
[81.84661865 -39.42881012]
[80.26113892 -54.34477997]
[78.67565918 -69.26075745]
[77.09018707 -84.17672729]
[61.91663742 -95.48104095]
[59.82855606 -113.96641541]
[71.68508911 -127.88545990]
[69.57418823 -142.73619080]
[67.46328735 -157.58691406]
[65.35239410 -172.43765259]
[63.24149704 -187.28837585]
[61.13059998 -202.13909912]
[57.84811401 -216.77554321]
[53.41474152 -231.10540771]
[48.98136902 -245.43528748]
[35.28304672 -252.85105896]
[30.99111176 -267.44674683]
[38.14533997 -280.46029663]
[33.71196747 -294.79016113]
[29.27859306 -309.12002563]
[24.84522057 -323.44992065]
[-7.63390636 -325.72729492]
[-28.64485931 -362.88229370]
[-42.20823288 -369.28811646]
[-55.77160645 -375.69396973]
[-71.29824066 -371.65625000]
[-84.04882812 -381.39288330]
[-84.24221802 -397.43475342]
[-71.73005676 -407.47595215]
[-56.11059952 -403.81369019]
[-49.36576080 -389.25735474]
[-35.80238724 -382.85150146]
[-22.23901176 -376.44564819]
[-16.84294319 -381.65454102]
[-6.05080223 -392.07229614]
[-0.65473217 -397.28118896]
[-6.57791710 -411.06216431]
[-12.50110149 -424.84317017]
[-18.42428589 -438.62417603]
[-24.34747124 -452.40515137]
[-39.47989273 -451.51876831]
[-54.00198746 -455.86441040]
[-66.16014099 -464.91732788]
[-74.48620605 -477.58428955]
[-77.97476196 -492.33578491]
[-76.20455170 -507.39041138]
[-69.38932800 -520.93029785]
[-58.35207748 -531.32043457]
[-44.42559052 -537.30615234]
[-29.29156494 -538.16467285]
[-14.77750301 -533.79223633]
[-2.63604975 -524.71697998]
[5.66665506 -512.03466797]
[9.12801933 -497.27679443]
[7.33006573 -482.22543335]
[0.48990735 -468.69812012]
[-10.56647396 -458.32833862]
[-4.64328957 -444.54736328]
[1.27989531 -430.76635742]
[7.20308018 -416.98535156]
[13.12626457 -403.20437622]
[20.61896515 -402.87353516]
[21.28060341 -417.85894775]
[21.94223976 -432.84432983]
[22.60412598 -447.82974243]
[37.58950424 -447.16760254]
[36.92764282 -432.18270874]
[36.26600266 -417.19729614]
[35.60436630 -402.21191406]
[43.09706497 -401.88107300]
[50.21175766 -415.08642578]
[47.00139999 -430.80499268]
[57.39919281 -443.02243042]
[73.42883301 -442.36654663]
[82.79375458 -429.34051514]
[78.30998993 -413.93676758]
[63.41710281 -407.97174072]
[56.30241394 -394.76638794]
[66.63998413 -372.34890747]
[64.88253021 -350.52984619]
[54.05407333 -334.77001953]
[39.17509079 -327.88327026]
[43.60846329 -313.55340576]
[48.04183578 -299.22354126]
[52.47520828 -284.89367676]
[65.72838593 -278.19375610]
[70.42858887 -263.72436523]
[63.31124115 -249.86865234]
[67.74461365 -235.53878784]
[72.17798615 -221.20890808]
[77.85839844 -235.09173584]
[90.07003021 -243.80242920]
[105.04584503 -244.65390015]
[118.16610718 -237.38349915]
[125.38348389 -224.23399353]
[124.47156525 -209.26173401]
[115.71165466 -197.08537292]
[101.80600739 -191.46104431]
[87.04423523 -194.12374878]
[75.98132324 -204.25000000]
[78.09222412 -189.39927673]
[80.20311737 -174.54853821]
[82.31401825 -159.69781494]
[84.42491913 -144.84709167]
[86.53581238 -129.99635315]
[96.95652008 -125.26574707]
[103.85993958 -115.98809052]
[105.42987823 -104.40971375]
[101.15941620 -93.40486908]
[92.00615692 -85.76220703]
[93.59163666 -70.84623718]
[95.17711639 -55.93025970]
[96.76259613 -41.01428604]
[98.34806824 -26.09831429]
[99.93354797 -11.18234062]
[101.51902771 3.73363280]
[103.10450745 18.64960670]
[104.68998718 33.56557846]
[106.27546692 48.48155212]
[107.86093903 63.39752579]
[109.44641876 78.31349945]
[111.03189850 93.22946930]
[117.55718994 106.73578644]
[128.25697327 117.24838257]
[144.26095581 120.82674408]
[148.90512085 136.55455017]
[137.41195679 148.25236511]
[121.60463715 143.88650513]
[117.74438477 127.94816589]
[107.04460144 117.43557739]
[94.97189331 126.33780670]
[101.85241699 139.66665649]
[108.73294830 152.99551392]
[122.81829834 161.39401245]
[122.31714630 177.78550720]
[107.74501801 185.30781555]
[94.09248352 176.22265625]
[95.40409088 159.87603760]
[88.52356720 146.54719543]
[81.64303589 133.21833801]
[66.85339355 135.72160339]
[64.74249268 150.57232666]
[62.63159561 165.42306519]
[60.52069855 180.27378845]
[58.40980148 195.12451172]
[71.66453552 202.51887512]
[81.35004425 214.20455933]
[86.15644836 228.60118103]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 174]
[13 173]
[14 172]
[15 171]
[16 170]
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[26 146]
[27 145]
[28 144]
[29 143]
[30 142]
[31 141]
[32 140]
[33 139]
[36 134]
[37 133]
[38 132]
[39 131]
[40 130]
[41 129]
[42 119]
[43 118]
[44 117]
[47 114]
[48 113]
[49 112]
[50 111]
[52 62]
[53 61]
[54 60]
[65 90]
[66 89]
[67 88]
[68 87]
[69 86]
[99 107]
[100 106]
[152 159]
[153 158]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
