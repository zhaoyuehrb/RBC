%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:28:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUAUAAGUCAGUGGAGCCUGCGGAAGUGGCCAGAAUCCAGCACUCCAAGCACUGCUGUCUUCUCACAGAGUCUUGAAGCCAGAGCAGCGCCAGGAUGUCACGGGAGCUGGCCCCACUGCUGCUUCUCCUCCUCUCCAUCCACAGCGCCCUGGCCAUGAGGAUCUGCUCCUUCAACGUCAGGUCCUUUGGGGAAA\
) } def
/len { sequence length } bind def

/coor [
[92.61507416 144.26835632]
[87.70905304 158.44337463]
[82.80303192 172.61837769]
[77.89701843 186.79339600]
[72.99099731 200.96839905]
[68.08497620 215.14341736]
[63.17895889 229.31843567]
[70.30912781 243.42289734]
[65.29824066 258.41177368]
[51.11917114 265.39242554]
[36.18410492 260.22335815]
[29.35375404 245.97128296]
[34.68044662 231.09169006]
[49.00394440 224.41241455]
[53.90996552 210.23739624]
[58.81598282 196.06237793]
[63.72200394 181.88737488]
[68.62802124 167.71235657]
[73.53404236 153.53735352]
[78.44006348 139.36233521]
[60.82988739 121.90722656]
[55.17555618 97.76540375]
[63.20293045 74.30564117]
[52.51251984 63.78351593]
[41.82210541 53.26139450]
[31.13169289 42.73927307]
[15.86886883 38.57312393]
[12.22573853 24.13093567]
[1.53532588 13.60881233]
[-9.15508652 3.08668852]
[-20.01109695 -7.26449680]
[-31.02997208 -17.44213867]
[-42.04884720 -27.61977959]
[-53.06772232 -37.79742050]
[-64.08660126 -47.97505951]
[-75.10547638 -58.15270233]
[-90.67583466 -57.70358276]
[-101.70555878 -68.18212891]
[-102.03776550 -83.02885437]
[-113.05664062 -93.20648956]
[-124.07551575 -103.38413239]
[-143.91409302 -106.92145538]
[-148.87216187 -125.60476685]
[-160.20840454 -135.42767334]
[-171.54464722 -145.25057983]
[-180.08937073 -148.51026917]
[-182.98123169 -155.32040405]
[-194.16020203 -165.32192993]
[-205.33917236 -175.32347107]
[-220.90043640 -174.62736511]
[-232.09503174 -184.92959595]
[-232.66275024 -199.76918030]
[-243.84172058 -209.77070618]
[-259.28549194 -213.20590210]
[-263.61169434 -227.45838928]
[-274.79064941 -237.45993042]
[-285.96960449 -247.46145630]
[-297.14859009 -257.46298218]
[-308.32754517 -267.46453857]
[-327.18057251 -265.68585205]
[-341.11532593 -278.03237915]
[-341.60278320 -296.32434082]
[-353.09344482 -305.96615601]
[-364.58410645 -315.60797119]
[-376.07479858 -325.24978638]
[-389.96594238 -318.92535400]
[-405.22531128 -319.26293945]
[-418.82318115 -326.19555664]
[-428.05963135 -338.34671021]
[-431.10079956 -353.30380249]
[-427.34283447 -368.09704590]
[-417.53189087 -379.78927612]
[-403.61593628 -386.05895996]
[-388.35800171 -385.66128540]
[-374.78753662 -378.67517090]
[-365.59902954 -366.48773193]
[-362.61679077 -351.51879883]
[-366.43298340 -336.74044800]
[-354.94229126 -327.09863281]
[-343.45162964 -317.45681763]
[-331.96096802 -307.81503296]
[-321.06866455 -311.25131226]
[-309.75402832 -308.97451782]
[-300.85549927 -301.43768311]
[-296.66226196 -290.42788696]
[-298.32601929 -278.64349365]
[-287.14703369 -268.64196777]
[-275.96807861 -258.64044189]
[-264.78912354 -248.63888550]
[-253.61015320 -238.63735962]
[-238.96597290 -235.91754150]
[-233.84017944 -220.94967651]
[-222.66122437 -210.94815063]
[-207.85014343 -212.02871704]
[-196.37060547 -202.04498291]
[-195.33763123 -186.50244141]
[-184.15866089 -176.50090027]
[-172.97970581 -166.49935913]
[-161.72174072 -156.58682251]
[-150.38549805 -146.76391602]
[-139.04925537 -136.94100952]
[-128.95074463 -138.58409119]
[-119.41709900 -134.30235291]
[-113.70119476 -125.29166412]
[-113.89788055 -114.40300751]
[-102.87899780 -104.22537231]
[-91.86012268 -94.04772949]
[-77.03376770 -94.89316559]
[-65.71408081 -84.72855377]
[-64.92783356 -69.17157745]
[-53.90895844 -58.99393845]
[-42.89008331 -48.81629562]
[-31.87120819 -38.63865280]
[-20.85233116 -28.46101379]
[-9.83345604 -18.28337288]
[-5.10051298 -17.57550049]
[-0.76530862 -13.88010693]
[1.36703658 -7.60372400]
[12.05744934 2.91839933]
[22.74786186 13.44052219]
[37.24603653 16.85405540]
[41.65381622 32.04885864]
[52.34423065 42.57098007]
[63.03464127 53.09310532]
[73.72505188 63.61522675]
[82.10514832 58.84178543]
[91.31158447 55.96892166]
[100.91922760 55.12930298]
[110.48442078 56.36170197]
[119.56547546 59.60920334]
[127.74304199 64.72184753]
[134.63951111 71.46355438]
[139.93640137 79.52299500]
[143.38914490 88.52801514]
[144.83828735 98.06278229]
[144.21690369 107.68700409]
[141.55369568 116.95626068]
[154.29957581 124.86464691]
[167.04545593 132.77302551]
[173.64764404 133.36555481]
[178.26092529 136.70733643]
[180.06468201 141.13996887]
[192.55322266 149.44877625]
[205.04177856 157.75756836]
[220.81723022 158.95991516]
[227.12773132 172.45166016]
[239.61627197 180.76045227]
[255.39172363 181.96281433]
[261.70220947 195.45454407]
[274.19076538 203.76333618]
[286.67932129 212.07214355]
[295.56793213 214.22389221]
[299.29864502 220.61315918]
[311.65380859 229.11904907]
[324.00894165 237.62495422]
[336.36410522 246.13084412]
[351.71206665 243.47041321]
[364.12075806 252.27259827]
[366.56250000 266.92092896]
[378.91766357 275.42681885]
[391.27279663 283.93273926]
[403.62796021 292.43862915]
[415.98309326 300.94451904]
[430.56884766 295.64962769]
[445.47186279 299.97161865]
[454.96166992 312.24856567]
[455.38919067 327.75976562]
[446.59008789 340.54080200]
[431.94775391 345.67715454]
[417.09249878 341.19375610]
[407.73645020 328.81457520]
[407.47720337 313.29968262]
[395.12203979 304.79376221]
[382.76690674 296.28787231]
[370.41174316 287.78198242]
[358.05661011 279.27609253]
[343.50149536 282.22293091]
[330.85043335 273.77273560]
[327.85821533 258.48599243]
[315.50305176 249.98010254]
[303.14791870 241.47419739]
[290.79275513 232.96830750]
[278.37051392 224.56068420]
[265.88195801 216.25189209]
[253.39341736 207.94308472]
[238.51123047 207.33503723]
[231.30747986 193.24900818]
[218.81892395 184.94020081]
[203.93673706 184.33215332]
[196.73297119 170.24612427]
[184.24443054 161.93731689]
[171.75587463 153.62852478]
[159.13706970 145.51890564]
[146.39118958 137.61051941]
[133.64530945 129.70214844]
[125.13147736 137.18377686]
[115.01484680 142.29396057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[23 125]
[24 124]
[25 123]
[26 122]
[28 120]
[29 119]
[30 118]
[31 115]
[32 114]
[33 113]
[34 112]
[35 111]
[36 110]
[39 107]
[40 106]
[41 105]
[43 101]
[44 100]
[45 99]
[47 98]
[48 97]
[49 96]
[52 93]
[53 92]
[55 90]
[56 89]
[57 88]
[58 87]
[59 86]
[62 81]
[63 80]
[64 79]
[65 78]
[137 195]
[138 194]
[139 193]
[142 192]
[143 191]
[144 190]
[146 188]
[147 187]
[149 185]
[150 184]
[151 183]
[153 182]
[154 181]
[155 180]
[156 179]
[159 176]
[160 175]
[161 174]
[162 173]
[163 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
