%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGUCAUGUGACGCGAGUCCUCGCCCCACCCGUCUGCAGCCACUCCUGGUCUCAGUCCCAGAGCUCGAGAGGGCCACGUGACCGUCCCGGGGCCAGUCACGUGAGGCGCAGAUCCUGGCUGGGAGGGGGUUGGUAGAGGGGUCCAGAGUGGCAGUAAAGGAGGAAGAUGGCGGGGUGCAGGGGGUCUCUGUGCUGCUGCUGCAGGUGGUGCUGCUGCUGCGGUGAGCGUGAGACCCGCACCCCCGAGGAGCUGA\
CCAUCCUUGGAG\
) } def
/len { sequence length } bind def

/coor [
[59.43451309 111.61100006]
[67.25372314 98.81021881]
[81.97794342 95.94925690]
[68.75949860 88.85893250]
[55.54105377 81.76860046]
[42.32260895 74.67827606]
[29.10416603 67.58794403]
[15.34904480 61.60491943]
[1.14980984 56.76945496]
[-13.04942513 51.93399048]
[-28.60711479 54.80955505]
[-38.16072083 43.38248825]
[-52.35995483 38.54702377]
[-69.06234741 47.54473877]
[-86.72245789 41.54520798]
[-94.22510529 24.81992912]
[-108.53379822 20.31865883]
[-124.01979828 23.55814743]
[-133.83865356 12.35818100]
[-148.14735413 7.85691118]
[-162.45603943 3.35564160]
[-176.76472473 -1.14562798]
[-191.07341003 -5.64689732]
[-205.40823364 -10.06422424]
[-219.76870728 -14.39745712]
[-234.12918091 -18.73069000]
[-246.47711182 -9.52011395]
[-261.70288086 -9.34849834]
[-273.96514893 -18.07209015]
[-278.68280029 -32.17462540]
[-293.04327393 -36.50785828]
[-307.40374756 -40.84109116]
[-322.85070801 -37.42029572]
[-332.80020142 -48.50439835]
[-347.16067505 -52.83762741]
[-361.52111816 -57.17086029]
[-370.60537720 -56.65233994]
[-376.02398682 -61.63996887]
[-390.33267212 -66.14124298]
[-404.64135742 -70.64250946]
[-418.95007324 -75.14377594]
[-433.25875854 -79.64505005]
[-447.56744385 -84.14631653]
[-461.03677368 -73.88813019]
[-477.80007935 -73.69448853]
[-491.23336792 -83.44332886]
[-496.14694214 -99.12303162]
[-510.50738525 -103.45626831]
[-524.86785889 -107.78949738]
[-539.25347900 -112.03849030]
[-553.66375732 -116.20308685]
[-568.07403564 -120.36768341]
[-582.48431396 -124.53228760]
[-596.89459229 -128.69688416]
[-586.24499512 -118.13345337]
[-577.17993164 -106.18251801]
[-574.58105469 -91.40937805]
[-579.02325439 -77.08223724]
[-589.52374268 -66.37062836]
[-603.75970459 -61.64424515]
[-618.58160400 -63.94868088]
[-630.71057129 -72.77413940]
[-637.46295166 -86.16680145]
[-623.90057373 -92.57472229]
[-638.87481689 -93.45339966]
[-653.84906006 -94.33206940]
[-668.82330322 -95.21074677]
[-683.23071289 -87.37754822]
[-697.07495117 -96.16774750]
[-696.11431885 -112.53873444]
[-681.33697510 -119.64944458]
[-667.94464111 -110.18498993]
[-652.97039795 -109.30631256]
[-637.99615479 -108.42764282]
[-623.02191162 -107.54896545]
[-620.81323242 -114.71637726]
[-614.18725586 -136.21861267]
[-627.05883789 -143.92073059]
[-639.93035889 -151.62284851]
[-652.80194092 -159.32495117]
[-665.67352295 -167.02706909]
[-678.54510498 -174.72918701]
[-691.41668701 -182.43128967]
[-709.84637451 -182.30645752]
[-717.74914551 -197.99174500]
[-730.71008301 -205.54244995]
[-743.67108154 -213.09315491]
[-760.06329346 -212.61611938]
[-768.44104004 -226.71382141]
[-760.18603516 -240.88374329]
[-743.79028320 -240.54910278]
[-736.12036133 -226.05412292]
[-723.15942383 -218.50343323]
[-710.19842529 -210.95272827]
[-698.44836426 -213.73454285]
[-687.59765625 -207.57891846]
[-683.71459961 -195.30287170]
[-670.84301758 -187.60075378]
[-657.97143555 -179.89865112]
[-645.09985352 -172.19653320]
[-632.22827148 -164.49441528]
[-619.35668945 -156.79231262]
[-606.48510742 -149.09019470]
[-592.72998047 -143.10716248]
[-578.31970215 -138.94256592]
[-563.90942383 -134.77796936]
[-549.49914551 -130.61335754]
[-535.08886719 -126.44876862]
[-527.81585693 -127.60673523]
[-520.53460693 -122.14997101]
[-506.17416382 -117.81673431]
[-491.81369019 -113.48350525]
[-481.99246216 -122.49877930]
[-468.89596558 -125.51665497]
[-455.91253662 -121.64680481]
[-446.45562744 -111.79527283]
[-443.06616211 -98.45500946]
[-428.75747681 -93.95373535]
[-414.44879150 -89.45246887]
[-400.14010620 -84.95119476]
[-385.83142090 -80.44992828]
[-371.52273560 -75.94866180]
[-357.18789673 -71.53133392]
[-342.82742310 -67.19809723]
[-328.46694946 -62.86486816]
[-314.04714966 -66.59560394]
[-303.07052612 -55.20156097]
[-288.71005249 -50.86832809]
[-274.34957886 -46.53509521]
[-262.61877441 -55.67434311]
[-247.57785034 -56.15927887]
[-234.98828125 -47.59446335]
[-229.79594421 -33.09115982]
[-215.43547058 -28.75792694]
[-201.07501221 -24.42469406]
[-193.78890991 -25.49732780]
[-186.57214355 -19.95558548]
[-172.26345825 -15.45431709]
[-157.95477295 -10.95304680]
[-143.64607239 -6.45177746]
[-129.33738708 -1.95050812]
[-114.87483978 -5.51195765]
[-104.03252411 6.00997019]
[-89.72383881 10.51124001]
[-81.02548218 3.19106865]
[-69.75984955 0.94014490]
[-58.68818283 4.42762280]
[-50.58089066 12.90159416]
[-47.52449036 24.34778786]
[-33.32525635 29.18325233]
[-18.78318977 25.96182060]
[-8.21396065 37.73475266]
[5.98527479 42.57022095]
[20.18450928 47.40568542]
[10.07588100 36.32346344]
[4.92070627 22.23715210]
[5.48793697 7.24788046]
[11.69296360 -6.40853357]
[22.61023903 -16.69508362]
[36.61132812 -22.07741547]
[51.60781479 -21.75269508]
[65.36280060 -15.76935768]
[75.82457733 -5.01988554]
[81.43266296 8.89231873]
[81.35054016 23.89209366]
[75.59045410 37.74205780]
[65.01159668 48.37632751]
[51.19191742 54.20869446]
[36.19449615 54.36950302]
[49.41293716 61.45983124]
[62.63138199 68.55015564]
[75.84982300 75.64048767]
[89.06826782 82.73081207]
[123.14332581 82.43150330]
[137.91203308 85.05546570]
[152.68074036 87.67942810]
[167.44946289 90.30338287]
[182.21817017 92.92734528]
[196.98687744 95.55130768]
[201.83035278 93.79741669]
[206.41069031 94.03082275]
[210.02159119 95.82482147]
[212.22480774 98.53592682]
[226.89213562 101.67752838]
[241.55946350 104.81913757]
[256.22677612 107.96073914]
[270.89410400 111.10234070]
[285.56143188 114.24394226]
[300.22872925 117.38555145]
[314.91421509 120.44113159]
[329.61737061 123.41059113]
[344.32049561 126.38004303]
[359.05743408 129.17694092]
[373.82617188 131.80090332]
[388.59487915 134.42486572]
[403.36358643 137.04882812]
[418.13229370 139.67279053]
[433.07318115 134.46887207]
[444.25070190 144.31324768]
[459.01940918 146.93721008]
[473.96029663 141.73329163]
[485.13781738 151.57768250]
[499.90652466 154.20164490]
[514.67523193 156.82560730]
[529.44396973 159.44956970]
[542.25677490 150.19711304]
[557.84570312 152.79708862]
[566.96215820 165.70700073]
[564.19750977 181.26759338]
[551.19195557 190.24707031]
[535.66143799 187.31803894]
[526.82000732 174.21827698]
[512.05126953 171.59431458]
[497.28256226 168.97035217]
[482.51385498 166.34638977]
[468.62933350 171.73799133]
[456.39544678 161.70593262]
[441.62673950 159.08197021]
[427.74221802 164.47357178]
[415.50833130 154.44149780]
[400.73962402 151.81753540]
[385.97091675 149.19357300]
[371.20220947 146.56961060]
[356.43347168 143.94566345]
[352.09951782 145.87626648]
[346.50958252 145.12886047]
[341.35104370 141.08319092]
[326.64791870 138.11372375]
[311.94476318 135.14427185]
[304.79113770 136.89447021]
[297.08712769 132.05287170]
[282.41983032 128.91127014]
[267.75250244 125.76966095]
[253.08517456 122.62805939]
[238.41784668 119.48645782]
[223.75053406 116.34484863]
[209.08320618 113.20324707]
[194.36291504 110.32002258]
[179.59420776 107.69606018]
[164.82550049 105.07209778]
[150.05677795 102.44813538]
[135.28807068 99.82417297]
[120.51936340 97.20021820]
[110.68437958 108.52598572]
[115.35306549 122.78092194]
[120.02175140 137.03587341]
[124.69043732 151.29080200]
[129.35913086 165.54574585]
[134.02781677 179.80068970]
[138.69650269 194.05563354]
[153.50607300 198.68771362]
[162.73756409 211.16004944]
[162.84127808 226.67677307]
[153.77732849 239.27139282]
[139.03100586 244.10102844]
[124.27255249 239.30856323]
[115.17690277 226.73681641]
[115.24152374 211.21987915]
[124.44156647 198.72431946]
[119.77287292 184.46937561]
[115.10418701 170.21443176]
[110.43550110 155.95950317]
[105.76680756 141.70455933]
[101.09812164 127.44961548]
[96.42943573 113.19467163]
[91.03656006 127.19170380]
[77.06520081 132.65075684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[7 169]
[8 154]
[9 153]
[10 152]
[12 150]
[13 149]
[16 144]
[17 143]
[19 141]
[20 140]
[21 139]
[22 138]
[23 137]
[24 135]
[25 134]
[26 133]
[30 129]
[31 128]
[32 127]
[34 125]
[35 124]
[36 123]
[38 122]
[39 121]
[40 120]
[41 119]
[42 118]
[43 117]
[47 112]
[48 111]
[49 110]
[50 108]
[51 107]
[52 106]
[53 105]
[54 104]
[64 75]
[65 74]
[66 73]
[67 72]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[85 94]
[86 93]
[87 92]
[174 243]
[175 242]
[176 241]
[177 240]
[178 239]
[179 238]
[183 237]
[184 236]
[185 235]
[186 234]
[187 233]
[188 232]
[189 231]
[190 229]
[191 228]
[192 227]
[193 224]
[194 223]
[195 222]
[196 221]
[197 220]
[199 218]
[200 217]
[202 215]
[203 214]
[204 213]
[205 212]
[244 265]
[245 264]
[246 263]
[247 262]
[248 261]
[249 260]
[250 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
