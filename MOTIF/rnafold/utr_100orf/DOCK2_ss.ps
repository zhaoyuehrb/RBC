%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGGAAGUGGGGCCCUGCGGCGCCCAGCCACCCCCUGACGGCUUCCCCACGGGAGGACGCGAGGCCCCGGCCCAGCCAUGGCCCCCUGGCGCAAAGCUGACAAGGAGCGGCACGGCGUGGCCAUAUACAACUUCCAAGGCAGCGGAGCCCCCCAGCUCUCCCUGCAGAUCGGCGAUG\
) } def
/len { sequence length } bind def

/coor [
[229.28117371 171.10214233]
[239.60989380 160.22476196]
[252.73837280 152.96920776]
[267.44384766 150.01127625]
[282.35662842 151.62643433]
[296.08843994 157.66468811]
[287.10400391 145.65301514]
[278.11956787 133.64135742]
[269.13513184 121.62969208]
[260.15072632 109.61802673]
[251.16629028 97.60636139]
[237.34574890 91.77603912]
[222.47267151 93.72317505]
[207.59957886 95.67031097]
[192.72650146 97.61744690]
[177.85340881 99.56458282]
[162.98033142 101.51171875]
[151.36511230 110.83567047]
[136.67733765 104.95522308]
[121.80424500 106.90236664]
[106.93115997 108.84950256]
[93.01151276 114.43907928]
[80.92233276 123.31893158]
[68.83315277 132.19877625]
[64.99445343 147.77581787]
[50.36277008 154.35557556]
[36.16226959 146.89064026]
[33.28636169 131.10745239]
[43.94120407 119.11354065]
[59.95330429 120.10959625]
[72.04248810 111.22975159]
[84.13166809 102.34989929]
[81.21649933 95.43963623]
[67.39587402 101.26975250]
[61.56597137 87.44902802]
[75.38616943 81.61909485]
[72.47100830 74.70882416]
[57.67446136 77.17098999]
[45.36161041 88.00268555]
[29.91335297 82.49965668]
[27.22153091 66.32294464]
[40.05525970 56.11375809]
[55.21229935 62.37444305]
[70.00885010 59.91228104]
[70.52944946 44.92131805]
[55.93935394 41.43862915]
[41.34925842 37.95593643]
[26.75916290 34.47324753]
[12.16906929 30.99055481]
[-2.42102575 27.50786591]
[-19.23115730 29.71145630]
[-26.00214005 14.16828632]
[-12.94079590 3.35913920]
[1.06166470 12.91777039]
[15.65175915 16.40046120]
[30.24185371 19.88315201]
[44.83194733 23.36584282]
[59.42204285 26.84853172]
[74.01213837 30.33122253]
[99.60292053 47.82347107]
[110.05525970 71.73732758]
[104.98402405 93.97641754]
[119.85710907 92.02928162]
[134.73019409 90.08213806]
[147.40922546 80.61891937]
[161.03318787 86.63863373]
[175.90628052 84.69149780]
[190.77935791 82.74436188]
[205.65245056 80.79722595]
[220.52552795 78.85009003]
[235.39862061 76.90295410]
[246.75807190 67.10689545]
[250.87039185 52.68161011]
[254.98269653 38.25632477]
[259.09500122 23.83103561]
[251.67005920 10.13768291]
[256.04602051 -4.43302774]
[269.14630127 -11.42719269]
[273.25860596 -25.85247993]
[277.37091064 -40.27776718]
[269.50457764 -51.23085785]
[269.39321899 -64.52079010]
[276.85317993 -75.28392792]
[288.97082520 -79.71060181]
[293.33288574 -94.06233978]
[297.69491577 -108.41408539]
[292.22525024 -127.79795074]
[306.85018921 -140.42309570]
[310.71151733 -154.91758728]
[314.57284546 -169.41207886]
[317.92880249 -184.03184509]
[320.77529907 -198.75927734]
[323.62182617 -213.48670959]
[315.86392212 -227.52931213]
[322.13873291 -242.29432678]
[337.63278198 -246.45533752]
[350.46035767 -236.82034302]
[350.78121948 -220.78050232]
[338.34924316 -210.64019775]
[335.50274658 -195.91276550]
[332.65621948 -181.18533325]
[334.13909912 -178.77629089]
[334.74386597 -175.62698364]
[334.18075562 -172.07379150]
[332.28894043 -168.55262756]
[329.06732178 -165.55075073]
[325.20602417 -151.05625916]
[321.34469604 -136.56176758]
[327.25640869 -128.18690491]
[327.57470703 -117.72064972]
[321.95175171 -108.62779236]
[312.04666138 -104.05202484]
[307.68463135 -89.70028687]
[303.32257080 -75.34854889]
[311.86981201 -60.87876892]
[307.22851562 -44.37592316]
[291.79620361 -36.16545868]
[287.68389893 -21.74016953]
[283.57159424 -7.31488323]
[291.01458740 5.53568840]
[287.04962158 20.22356224]
[273.52029419 27.94334602]
[269.40798950 42.36863327]
[265.29568481 56.79391861]
[261.18334961 71.21920776]
[270.03326416 59.10809326]
[284.54800415 55.32357407]
[298.18481445 61.57157898]
[304.79669189 75.03572083]
[301.40322876 89.64682770]
[289.53405762 98.81870270]
[274.53945923 98.41699219]
[263.17794800 88.62194061]
[272.16238403 100.63359833]
[281.14682007 112.64526367]
[290.13122559 124.65692902]
[299.11566162 136.66859436]
[308.10009766 148.68025208]
[313.76132202 150.14601135]
[318.05184937 153.37979126]
[320.52276611 157.61132812]
[321.08395386 162.00663757]
[332.85766602 171.30070496]
[344.63137817 180.59478760]
[356.40505981 189.88885498]
[374.67266846 192.10646057]
[380.54895020 208.63018799]
[392.48220825 217.71852112]
[404.41543579 226.80683899]
[416.34869385 235.89517212]
[428.28192139 244.98350525]
[443.90786743 242.61589050]
[456.58148193 252.05805969]
[458.78378296 267.70816040]
[449.20812988 280.28125000]
[433.53561401 282.31793213]
[421.06448364 272.60992432]
[419.19360352 256.91674805]
[407.26034546 247.82841492]
[395.32711792 238.74008179]
[383.39385986 229.65176392]
[371.46063232 220.56343079]
[359.41802979 221.87153625]
[349.39767456 214.37432861]
[347.11099243 201.66256714]
[335.33728027 192.36848450]
[323.56359863 183.07441711]
[311.78988647 173.78033447]
[317.46844482 187.66392517]
[318.69506836 202.61369324]
[315.35552979 217.23721313]
[307.76089478 230.17248535]
[296.61846924 240.21472168]
[282.96606445 246.42860413]
[268.07528687 248.23535156]
[253.33300781 245.46672058]
[240.11233521 238.38055420]
[229.64460754 227.63687134]
[222.90480042 214.23631287]
[220.52066040 199.42698669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 138]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 71]
[13 70]
[14 69]
[15 68]
[16 67]
[17 66]
[19 64]
[20 63]
[21 62]
[22 32]
[23 31]
[24 30]
[37 44]
[38 43]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[72 125]
[73 124]
[74 123]
[75 122]
[78 119]
[79 118]
[80 117]
[84 114]
[85 113]
[86 112]
[88 108]
[89 107]
[90 106]
[91 101]
[92 100]
[93 99]
[142 168]
[143 167]
[144 166]
[145 165]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
