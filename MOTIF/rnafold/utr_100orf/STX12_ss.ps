%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACGCAGCCUUAGCUCCUUCCCCGCCCUUGCUCUUCCCAGUUUCUCCGUCAGCCUGCGGGUCCCGGCUGGCGGCUGCUUCCGGUAGGAGAGCGGUGUAGAGCGAGCAGGUCUCAGCUCCUCGUCAUGUCAUACGGUCCCUUAGACAUGUACCGGAACCCGGGGCCCUCGGGGCCCCAGCUCCGGGACUUCAGCAGCAUCAUCCAGACGUGCAGCGGCAACAUCC\
) } def
/len { sequence length } bind def

/coor [
[88.74826813 210.46162415]
[87.29097748 195.53257751]
[83.51688385 189.18766785]
[85.91867828 180.38610840]
[84.66905212 165.43824768]
[83.41941833 150.49038696]
[59.96607590 114.64182281]
[72.66186523 83.15397644]
[57.71401215 81.90435028]
[42.76615524 80.65472412]
[27.81829834 79.40509796]
[21.70052528 81.86568451]
[16.09684372 81.00440979]
[12.47421551 77.90729523]
[-2.43312788 76.24263000]
[-17.34047127 74.57796478]
[-32.24781418 72.91329193]
[-46.82141113 79.07128906]
[-58.61139679 69.96933746]
[-73.51873779 68.30467224]
[-88.42608643 66.64000702]
[-100.69949341 76.23173523]
[-115.79394531 74.33116150]
[-124.86254883 62.57123566]
[-139.76989746 60.90657043]
[-154.67723083 59.24190521]
[-169.58457947 57.57723999]
[-174.34690857 59.66136551]
[-178.97155762 59.71247864]
[-182.70944214 58.12159348]
[-185.07402039 55.51975632]
[-199.89900208 53.23504639]
[-214.72398376 50.95033264]
[-229.54896545 48.66561890]
[-244.37394714 46.38090515]
[-259.19894409 44.09619141]
[-274.02392578 41.81147766]
[-288.87921143 39.73305893]
[-303.76199341 37.86133575]
[-318.68054199 36.30032349]
[-333.62838745 35.05069733]
[-348.57626343 33.80106735]
[-355.97689819 43.08874512]
[-366.82888794 47.60916901]
[-378.39636230 46.34786224]
[-387.82293701 39.73248291]
[-392.83703613 29.49833298]
[-407.74438477 27.83366776]
[-422.65173340 26.16900063]
[-437.55908203 24.50433540]
[-452.46640015 22.83966827]
[-467.37374878 21.17500305]
[-482.28109741 19.51033592]
[-497.18844604 17.84567070]
[-512.09576416 16.18100357]
[-521.13922119 28.59519768]
[-535.18463135 34.80982590]
[-550.45391846 33.15318298]
[-562.83972168 24.07090187]
[-569.01025391 10.00606537]
[-567.30578613 -5.25795317]
[-558.18469238 -17.61520958]
[-544.10058594 -23.74166489]
[-528.84197998 -21.98933411]
[-516.51342773 -12.82958221]
[-510.43112183 1.27366054]
[-495.52377319 2.93832684]
[-480.61642456 4.60299301]
[-465.70907593 6.26765919]
[-450.80175781 7.93232536]
[-435.89440918 9.59699154]
[-420.98706055 11.26165771]
[-406.07971191 12.92632389]
[-391.17236328 14.59099007]
[-377.57449341 2.32323909]
[-359.01016235 3.92917442]
[-347.32662964 18.85321236]
[-332.37878418 20.10283852]
[-317.43090820 21.35246468]
[-314.52288818 19.37653923]
[-310.51644897 18.70498466]
[-306.03228760 19.83740807]
[-301.89025879 22.97857285]
[-287.00750732 24.85029602]
[-282.76043701 22.68739128]
[-277.11087036 23.16199303]
[-271.73919678 26.98649788]
[-256.91421509 29.27120972]
[-242.08923340 31.55592346]
[-227.26425171 33.84063721]
[-212.43927002 36.12535095]
[-197.61428833 38.41006088]
[-182.78930664 40.69477463]
[-167.91992188 42.66989517]
[-153.01257324 44.33456039]
[-138.10522461 45.99922562]
[-123.19788361 47.66389465]
[-111.75859833 38.19403076]
[-96.61671448 39.66987991]
[-86.76141357 51.73266220]
[-71.85407257 53.39733124]
[-56.94673157 55.06199646]
[-43.43940735 48.78493500]
[-30.58314896 58.00595093]
[-15.67580509 59.67061996]
[-0.76846182 61.33528519]
[14.13888168 62.99995041]
[29.06792450 64.45723724]
[44.01578140 65.70686340]
[58.96363831 66.95648956]
[73.91149902 68.20611572]
[58.98478699 66.72511292]
[45.84925461 59.48234177]
[36.63030243 47.64971924]
[32.81961441 33.14183807]
[35.03378296 18.30615616]
[42.91453934 5.54317474]
[55.18672943 -3.08197951]
[69.86464691 -6.17370605]
[84.57331085 -3.23174572]
[96.93277740 5.26787519]
[104.94321442 17.94986725]
[107.30847931 32.76221085]
[103.64586639 47.30818176]
[94.54604340 59.23585892]
[103.82835388 47.45287704]
[113.11067200 35.66989517]
[122.39298248 23.88691521]
[131.67529297 12.10393524]
[140.95761108 0.32095519]
[133.82481384 -13.13426876]
[132.78788757 -28.32784271]
[138.02648926 -42.62738800]
[148.63299561 -53.55541992]
[162.76976013 -59.21859360]
[177.98751831 -58.63572693]
[191.64970398 -51.90781021]
[201.38923645 -40.20048904]
[205.51870728 -25.54213333]
[203.32263184 -10.47238922]
[195.18153381 2.39781952]
[182.50587463 10.83865070]
[167.49180603 13.38767910]
[152.74060059 9.60327053]
[143.45828247 21.38625145]
[134.17596436 33.16923141]
[124.89365387 44.95221329]
[115.61133575 56.73519135]
[106.32901764 68.51817322]
[121.56623077 67.35886383]
[138.03691101 73.89603424]
[151.90840149 88.61086273]
[166.90261841 88.19389343]
[181.89682007 87.77692413]
[196.89102173 87.35994720]
[211.88522339 86.94297791]
[218.80223083 75.02754974]
[230.60848999 68.13810730]
[244.16876221 67.98048401]
[255.94256592 74.48894501]
[262.90863037 85.87124634]
[277.90719604 85.66273499]
[292.90573120 85.45423126]
[307.90429688 85.24572754]
[322.90283203 85.03721619]
[337.90139771 84.82871246]
[352.89993286 84.62020874]
[368.65350342 78.35427856]
[379.03558350 91.75759888]
[369.03009033 105.44434357]
[353.10845947 99.61875916]
[338.10989380 99.82726288]
[323.11135864 100.03576660]
[308.11279297 100.24427795]
[293.11425781 100.45278168]
[278.11569214 100.66128540]
[263.11715698 100.86979675]
[254.08357239 114.58234406]
[238.49916077 120.26158905]
[222.44233704 115.48146820]
[212.30220032 101.93717957]
[197.30798340 102.35415649]
[182.31378174 102.77112579]
[167.31958008 103.18809509]
[152.32537842 103.60507202]
[148.95765686 110.30644989]
[162.36041260 117.04188538]
[175.76316833 123.77732086]
[189.16592407 130.51275635]
[202.56858826 137.24841309]
[195.83273315 150.65095520]
[182.43049622 143.91551208]
[169.02774048 137.18008423]
[155.62498474 130.44464111]
[142.22222900 123.70920563]
[138.85450745 130.41058350]
[147.46763611 142.69120789]
[156.08076477 154.97184753]
[164.69390869 167.25248718]
[180.10415649 166.52606201]
[193.44937134 174.26612854]
[200.47113037 188.00288391]
[198.92883301 203.35296631]
[189.31460571 215.41821289]
[174.69631958 220.34864807]
[159.73861694 216.57099915]
[149.21444702 205.29069519]
[146.48202515 190.10723877]
[152.41326904 175.86561584]
[143.80014038 163.58497620]
[135.18701172 151.30435181]
[126.57387543 139.02371216]
[119.52222443 141.57797241]
[98.36727905 149.24076843]
[99.61690521 164.18862915]
[100.86653137 179.13647461]
[102.22002411 194.07528687]
[103.67730713 209.00433350]
[117.12528992 216.74586487]
[123.42382812 230.92712402]
[120.15100098 246.09512329]
[108.56526947 256.41744995]
[93.12159729 257.92498779]
[79.75839233 250.03802490]
[73.61406708 235.78926086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 218]
[2 217]
[4 216]
[5 215]
[6 214]
[8 111]
[9 110]
[10 109]
[11 108]
[14 107]
[15 106]
[16 105]
[17 104]
[19 102]
[20 101]
[21 100]
[24 97]
[25 96]
[26 95]
[27 94]
[31 93]
[32 92]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[38 84]
[39 83]
[40 79]
[41 78]
[42 77]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[54 67]
[55 66]
[125 149]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[152 185]
[153 184]
[154 183]
[155 182]
[156 181]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
[166 172]
[167 171]
[196 212]
[197 211]
[198 210]
[199 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
