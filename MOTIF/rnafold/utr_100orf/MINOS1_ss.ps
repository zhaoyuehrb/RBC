%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCGAGACUUUCAGGGGUCGGAGCGCGGGGGCCGGCCGAGAGGAAAGCUGGAGGCGCGGGUGGGGAACAUGUCUGAGUCGGAGCUCGGCAGGAAGUGGGACCGGUGUCUGGCGGAUGCGGUCGUGAAGAUAGGUACUGGUUUUGGAUUAGGAAUUGUUUUCUCACUUA\
) } def
/len { sequence length } bind def

/coor [
[-52.54229355 199.60244751]
[-55.25456238 198.75846863]
[-68.80326843 205.19528198]
[-82.35197449 211.63208008]
[-95.90068817 218.06889343]
[-109.13766479 225.12455750]
[-122.03466034 232.78402710]
[-127.84381104 239.88523865]
[-135.24151611 240.46333313]
[-148.27784729 247.88317871]
[-161.31417847 255.30300903]
[-174.35050964 262.72283936]
[-187.38684082 270.14270020]
[-188.83381653 288.18392944]
[-200.69409180 301.64736938]
[-218.10198975 305.29364014]
[-234.08413696 297.85385132]
[-246.83740234 305.75033569]
[-259.59066772 313.64682007]
[-272.34390259 321.54330444]
[-285.09716797 329.43978882]
[-297.85043335 337.33627319]
[-297.29727173 352.68518066]
[-304.50683594 366.24682617]
[-317.53982544 374.37310791]
[-332.89041138 374.87817383]
[-346.42935181 367.62612915]
[-354.51477051 354.56771851]
[-354.97171021 339.21563721]
[-347.67727661 325.69949341]
[-334.59359741 317.65502930]
[-319.24014282 317.24621582]
[-305.74691772 324.58300781]
[-292.99365234 316.68652344]
[-280.24038696 308.79003906]
[-267.48715210 300.89355469]
[-254.73388672 292.99707031]
[-241.98062134 285.10058594]
[-242.88641357 272.95046997]
[-238.50006104 261.50607300]
[-229.60115051 252.97372437]
[-217.84536743 249.02629089]
[-205.45669556 250.47563171]
[-194.80668640 257.10635376]
[-181.77035522 249.68652344]
[-168.73400879 242.26667786]
[-155.69767761 234.84684753]
[-142.66134644 227.42700195]
[-129.69412231 219.88702393]
[-116.79712677 212.22756958]
[-130.37181091 205.84571838]
[-134.03033447 191.29872131]
[-125.08978271 179.25436401]
[-110.10655212 178.54518127]
[-100.06835175 189.69123840]
[-102.33749390 204.52018738]
[-88.78878784 198.08337402]
[-75.24008179 191.64656067]
[-61.69137192 185.20976257]
[-48.38976669 178.27670288]
[-35.35343170 170.85685730]
[-22.31709671 163.43702698]
[-9.28076267 156.01718140]
[3.68645716 148.47721863]
[16.58345413 140.81774902]
[29.48045349 133.15827942]
[42.37744904 125.49880981]
[55.27444839 117.83934021]
[68.17144775 110.17987061]
[81.06844330 102.52040100]
[84.74751282 88.50574493]
[97.20560455 81.10694122]
[111.27208710 84.58259583]
[124.16908264 76.92313385]
[137.06608582 69.26366425]
[144.98056030 55.56433487]
[159.87437439 55.71792221]
[172.77137756 48.05845261]
[185.66836548 40.39898682]
[198.56536865 32.73951721]
[206.47984314 19.04018974]
[221.37365723 19.19377708]
[234.27066040 11.53430939]
[247.16766357 3.87484169]
[255.08213806 -9.82448673]
[269.97595215 -9.67089844]
[282.87295532 -17.33036613]
[295.76995850 -24.98983383]
[308.66693115 -32.64930344]
[305.12924194 -49.50740814]
[307.54522705 -66.53762817]
[315.60903931 -81.70325470]
[328.34042358 -93.19631958]
[344.20376587 -99.65316010]
[361.29339600 -100.31618500]
[377.56253052 -95.12273407]
[391.06826782 -84.71058655]
[403.52102661 -93.07292175]
[410.66424561 -107.18975830]
[425.54370117 -107.86169434]
[437.99645996 -116.22403717]
[450.44921875 -124.58638000]
[462.90197754 -132.94871521]
[475.35473633 -141.31106567]
[480.76147461 -148.72325134]
[488.11575317 -149.71038818]
[500.72091675 -157.84118652]
[513.32611084 -165.97198486]
[525.93127441 -174.10278320]
[538.53643799 -182.23358154]
[548.56927490 -195.90025330]
[564.47924805 -190.04275513]
[563.25494385 -173.13307190]
[546.66723633 -169.62841797]
[534.06207275 -161.49761963]
[521.45690918 -153.36682129]
[508.85171509 -145.23602295]
[496.24658203 -137.10522461]
[483.71707153 -128.85830688]
[471.26431274 -120.49595642]
[458.81155396 -112.13361359]
[446.35879517 -103.77127838]
[433.90603638 -95.40893555]
[427.65350342 -81.89022827]
[411.88336182 -80.62016296]
[399.43060303 -72.25782013]
[403.38412476 -59.95536041]
[404.00387573 -47.03457642]
[401.24020386 -34.38375092]
[395.27633667 -22.87444305]
[386.51617432 -13.30143261]
[375.55697632 -6.32785368]
[363.14871216 -2.43924642]
[350.14263916 -1.90976465]
[337.43292236 -4.78285551]
[325.89526367 -10.86778927]
[316.32641602 -19.75230408]
[303.42941284 -12.09283638]
[290.53240967 -4.43336916]
[277.63540649 3.22609901]
[270.64343262 16.37757111]
[254.82713318 16.77183914]
[241.93013000 24.43130684]
[229.03312683 32.09077454]
[222.04113770 45.24224854]
[206.22483826 45.63651657]
[193.32783508 53.29598236]
[180.43084717 60.95545197]
[167.53384399 68.61492157]
[160.54183960 81.76638794]
[144.72555542 82.16065979]
[131.82855225 89.82012939]
[118.93155670 97.47959900]
[115.25248718 111.49425507]
[102.79439545 118.89305878]
[88.72791290 115.41740417]
[75.83091736 123.07686615]
[62.93391418 130.73634338]
[50.03691864 138.39581299]
[37.13991928 146.05526733]
[24.24292183 153.71473694]
[11.34592533 161.37420654]
[5.53677511 168.47541809]
[-1.86092484 169.05352783]
[-14.89725876 176.47335815]
[-27.93359375 183.89318848]
[-40.96992874 191.31303406]
[-43.06531525 195.21786499]
[-46.01053238 197.95545959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 59]
[3 58]
[4 57]
[5 56]
[6 50]
[7 49]
[9 48]
[10 47]
[11 46]
[12 45]
[13 44]
[17 38]
[18 37]
[19 36]
[20 35]
[21 34]
[22 33]
[60 167]
[61 166]
[62 165]
[63 164]
[64 162]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[73 153]
[74 152]
[75 151]
[77 149]
[78 148]
[79 147]
[80 146]
[82 144]
[83 143]
[84 142]
[86 140]
[87 139]
[88 138]
[89 137]
[97 126]
[98 125]
[100 123]
[101 122]
[102 121]
[103 120]
[104 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
