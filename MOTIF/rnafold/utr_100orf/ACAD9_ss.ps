%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGCACGUGACUAAGGCCUUGGGCGCGGCAGGUGGUAGCCUUCCCGCCCUUCUGGCCUCUCCAUCCCCUGCUGCGGGGGACCGCGCAAGCGCAGUGAGUACUGCACGUUGUCGCGGGCCAGUAACGUCAUCAGACGUGUGUGUGUCCCUGCGGCGCUAAGAAGGGGAGACUGAGGCUGAGGCUGGGGAACAUCGGGCAGCAUGAGCGGCUGCGGGCUCUUCCUGCGCACCACGGCUGCGGCUCGUGCCUGCCG\
GGGUCUGGUGGUCUCUACCGCGAACCGGCGGCUACUGCGCACCAGCC\
) } def
/len { sequence length } bind def

/coor [
[607.84716797 746.77789307]
[608.76806641 731.22833252]
[598.92913818 719.90594482]
[589.09020996 708.58361816]
[579.25128174 697.26129150]
[569.41235352 685.93890381]
[554.61761475 688.41601562]
[539.82421875 690.89288330]
[534.20996094 704.80261230]
[528.59564209 718.71228027]
[522.98132324 732.62200928]
[524.99102783 748.31506348]
[513.05249023 757.22125244]
[507.43820190 771.13098145]
[501.82391357 785.04064941]
[496.20962524 798.95037842]
[499.03210449 815.10479736]
[486.28131104 825.41735840]
[471.07415771 819.27941895]
[469.05447388 803.00506592]
[482.29992676 793.33605957]
[487.91421509 779.42639160]
[493.52850342 765.51666260]
[499.14279175 751.60699463]
[496.73153687 736.90881348]
[509.07165527 727.00769043]
[514.68591309 713.09802246]
[520.30023193 699.18829346]
[525.91455078 685.27862549]
[525.21490479 670.29492188]
[518.32897949 656.96887207]
[511.44299316 643.64282227]
[504.55703735 630.31677246]
[497.67108154 616.99078369]
[484.95458984 609.23571777]
[485.49328613 593.42370605]
[478.60733032 580.09765625]
[472.77416992 575.62005615]
[471.71984863 566.59753418]
[464.97241211 553.20080566]
[458.22500610 539.80407715]
[451.47756958 526.40734863]
[434.98687744 483.16659546]
[425.03109741 471.94686890]
[415.07528687 460.72714233]
[405.11950684 449.50741577]
[395.16372681 438.28768921]
[385.20791626 427.06796265]
[370.97323608 422.68359375]
[367.60113525 407.22592163]
[357.64535522 396.00622559]
[347.68957520 384.78649902]
[337.73376465 373.56677246]
[333.15069580 372.39221191]
[329.23880005 368.35559082]
[327.69082642 362.00964355]
[317.96981812 350.58587646]
[308.24880981 339.16213989]
[298.52780151 327.73840332]
[288.80679321 316.31463623]
[279.08578491 304.89089966]
[264.46038818 307.71295166]
[250.29190063 302.80282593]
[240.41821289 291.38458252]
[237.56678772 276.45919800]
[242.60179138 262.01635742]
[232.88078308 250.59260559]
[223.15977478 239.16886902]
[213.43876648 227.74511719]
[203.71775818 216.32136536]
[193.99674988 204.89762878]
[183.86767578 193.83409119]
[173.34387207 183.14532471]
[162.82006836 172.45657349]
[152.29626465 161.76780701]
[141.77246094 151.07905579]
[131.24865723 140.39028931]
[120.72485352 129.70153809]
[110.20104980 119.01277161]
[99.67724609 108.32401276]
[93.39203644 115.32579041]
[82.46543884 117.88839722]
[69.59201813 113.83763123]
[56.52457809 106.47272491]
[43.45713425 99.10781097]
[30.38969040 91.74289703]
[17.32224655 84.37799072]
[4.21679735 77.08091736]
[-8.92630386 69.85189056]
[-22.06940460 62.62285995]
[-38.80368805 67.80038452]
[-53.79741669 59.41661453]
[-57.98065567 43.10448456]
[-71.19799805 36.01211166]
[-84.41534424 28.91973686]
[-97.63269043 21.82736397]
[-110.85003662 14.73499107]
[-127.21549988 15.78554726]
[-136.08161926 1.98975420]
[-128.32769775 -12.46045971]
[-111.93029785 -12.69995308]
[-103.75766754 1.51764441]
[-90.54032135 8.61001778]
[-77.32297516 15.70239067]
[-64.10562897 22.79476357]
[-50.88828278 29.88713646]
[-39.22260284 24.48318863]
[-26.37988281 26.80457497]
[-17.07094955 36.22673798]
[-14.84037495 49.47975540]
[-1.69727337 56.70878601]
[11.44582844 63.93781662]
[18.78443336 64.40579224]
[24.68715668 71.31054688]
[37.75460052 78.67545319]
[50.82204437 86.04036713]
[63.88948822 93.40528107]
[76.95693207 100.77018738]
[88.22811890 90.87269592]
[82.61382294 76.96299744]
[76.92749786 63.08259201]
[71.16928864 49.23184967]
[56.21660233 45.52736282]
[46.42679214 33.86490250]
[45.39366531 18.85168457]
[53.30434418 6.25965691]
[47.54613495 -7.59108448]
[41.78792953 -21.44182587]
[36.02972031 -35.29256821]
[30.27151299 -49.14331055]
[16.92652321 -58.67448425]
[18.77736855 -74.96884918]
[33.92005920 -81.26416016]
[46.77709198 -71.08434296]
[44.12225723 -54.90151596]
[49.88046265 -41.05077744]
[55.63867188 -27.20003319]
[61.39687729 -13.34929180]
[67.15508270 0.50144976]
[81.66121674 3.77407455]
[91.57601166 15.09488964]
[92.93949127 30.26045227]
[85.02003479 43.47364044]
[90.77824402 57.32438278]
[96.22035980 62.26983261]
[96.52352142 71.34870911]
[102.13781738 85.25840759]
[110.36600494 97.80020905]
[120.88980865 108.48896790]
[131.41362000 119.17772675]
[141.93740845 129.86648560]
[152.46121216 140.55525208]
[162.98501587 151.24400330]
[173.50881958 161.93276978]
[184.03262329 172.62152100]
[194.55642700 183.31028748]
[194.21525574 168.31416321]
[203.52465820 156.55256653]
[218.19834900 153.44082642]
[231.48019409 160.41166687]
[237.25489807 174.25553894]
[232.86366272 188.59837341]
[220.32830811 196.83638000]
[205.42048645 195.17662048]
[215.14149475 206.60035706]
[224.86250305 218.02410889]
[234.58351135 229.44786072]
[244.30451965 240.87159729]
[254.02552795 252.29534912]
[269.08798218 249.63633728]
[283.36471558 254.83934021]
[293.05587769 266.41293335]
[295.63552856 281.18457031]
[290.50952148 295.16989136]
[300.23052979 306.59362793]
[309.95153809 318.01739502]
[319.67254639 329.44113159]
[329.39355469 340.86486816]
[339.11456299 352.28863525]
[348.95349121 363.61096191]
[358.90930176 374.83068848]
[368.86508179 386.05041504]
[378.82086182 397.27014160]
[393.76766968 402.45703125]
[396.42764282 417.11218262]
[406.38345337 428.33190918]
[416.33923340 439.55163574]
[426.29501343 450.77136230]
[436.25082397 461.99108887]
[446.20660400 473.21081543]
[438.58901978 460.28903198]
[440.47515869 445.40808105]
[451.07571411 434.79541016]
[465.95446777 432.89224243]
[478.88497925 440.49502563]
[484.45599365 454.42211914]
[480.33612061 468.84524536]
[468.24829102 477.72897339]
[481.81539917 471.33102417]
[495.38250732 464.93307495]
[508.94961548 458.53512573]
[522.51672363 452.13717651]
[526.32348633 436.97003174]
[539.01916504 427.84020996]
[554.60919189 429.05850220]
[565.73248291 440.04968262]
[567.13696289 455.62408447]
[558.15942383 468.42791748]
[543.03881836 472.41558838]
[528.91467285 465.70428467]
[515.34753418 472.10223389]
[501.78045654 478.50018311]
[488.21334839 484.89813232]
[474.64624023 491.29608154]
[469.76007080 505.47863770]
[464.87429810 519.65991211]
[471.62173462 533.05664062]
[478.36914062 546.45336914]
[485.11657715 559.85009766]
[491.93334961 573.21166992]
[498.81933594 586.53771973]
[512.02832031 595.24591064]
[510.99713135 610.10479736]
[517.88305664 623.43084717]
[524.76904297 636.75689697]
[531.65502930 650.08294678]
[538.54095459 663.40899658]
[580.73468018 676.09997559]
[590.57366943 687.42236328]
[600.41259766 698.74468994]
[610.25152588 710.06701660]
[620.09045410 721.38934326]
[635.61639404 722.64685059]
[645.43322754 734.26947021]
[644.13867188 749.06341553]
[653.97760010 760.38574219]
[663.81652832 771.70806885]
[673.65545654 783.03045654]
[683.49438477 794.35278320]
[699.02038574 795.61029053]
[708.83715820 807.23291016]
[707.54266357 822.02679443]
[717.38159180 833.34912109]
[732.27380371 838.69073486]
[734.78173828 853.37268066]
[744.62066650 864.69500732]
[763.97308350 870.45111084]
[766.71478271 889.62036133]
[776.78637695 900.73626709]
[786.85797119 911.85217285]
[794.89685059 916.08239746]
[796.97564697 923.13592529]
[806.93139648 934.35565186]
[816.88720703 945.57537842]
[826.84301758 956.79510498]
[836.79876709 968.01483154]
[849.57263184 969.55053711]
[857.63403320 979.05889893]
[857.09393311 991.11236572]
[866.93286133 1002.43469238]
[876.83032227 1013.70587158]
[886.78613281 1024.92565918]
[896.74194336 1036.14538574]
[906.69769287 1047.36511230]
[916.65350342 1058.58483887]
[926.60931396 1069.80456543]
[941.64459229 1077.63879395]
[938.27862549 1094.25524902]
[921.37976074 1095.62072754]
[915.38958740 1079.76025391]
[905.43377686 1068.54052734]
[895.47796631 1057.32080078]
[885.52221680 1046.10107422]
[875.56640625 1034.88134766]
[865.61059570 1023.66168213]
[858.85443115 1020.75860596]
[855.61053467 1012.27362061]
[845.77160645 1000.95129395]
[828.88208008 996.10925293]
[825.57904053 977.97064209]
[815.62329102 966.75091553]
[805.66748047 955.53118896]
[795.71166992 944.31146240]
[785.75592041 933.09173584]
[775.74206543 921.92376709]
[765.67047119 910.80786133]
[755.59893799 899.69195557]
[745.44976807 900.11480713]
[736.54217529 894.79187012]
[731.91491699 885.25982666]
[733.29827881 874.53393555]
[723.45935059 863.21160889]
[709.27093506 858.67987061]
[706.05926514 843.18804932]
[696.22033691 831.86572266]
[681.39050293 831.08361816]
[671.25115967 819.74127197]
[672.17205811 804.19171143]
[662.33312988 792.86938477]
[652.49420166 781.54699707]
[642.65527344 770.22467041]
[632.81634521 758.90234375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 232]
[3 231]
[4 230]
[5 229]
[6 228]
[8 29]
[9 28]
[10 27]
[11 26]
[13 24]
[14 23]
[15 22]
[16 21]
[30 227]
[31 226]
[32 225]
[33 224]
[34 223]
[36 221]
[37 220]
[39 219]
[40 218]
[41 217]
[42 216]
[43 190]
[44 189]
[45 188]
[46 187]
[47 186]
[48 185]
[50 183]
[51 182]
[52 181]
[53 180]
[56 179]
[57 178]
[58 177]
[59 176]
[60 175]
[61 174]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[71 164]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[88 112]
[89 111]
[90 110]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[119 147]
[120 146]
[121 144]
[122 143]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[198 214]
[199 213]
[200 212]
[201 211]
[202 210]
[235 302]
[236 301]
[237 300]
[238 299]
[239 298]
[242 295]
[243 294]
[245 292]
[246 291]
[248 287]
[249 286]
[250 285]
[252 284]
[253 283]
[254 282]
[255 281]
[256 280]
[259 278]
[260 277]
[261 275]
[262 274]
[263 273]
[264 272]
[265 271]
[266 270]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
