%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUCAUCGGAGGCGUGGUCGUCCCCAAAAUUAGGGAGGAAGAGGAAAAAAAAAAGCCAGAAAAAGUUUUCUUUUCUGGAGUCCCAAACGAGGUGCGGGACGGAAGAGGGGGUGAAGGCCAGAGGCUCGGGGCUUCAAGACCGCUGUCUGGAGUCCCCCUUUCCAGGCCAUGUCGGGGCCCACCUGGCUGCCCCCGAAGCAGCCGGAGCCCGCCAGAGCCCCUCAGGGGAGGGCGAUCCCCCGCGGCACCCCGG\
GGCCACCACCGGCCC\
) } def
/len { sequence length } bind def

/coor [
[95.38300323 172.19969177]
[87.88350677 172.11274719]
[84.60626984 186.75035095]
[81.32902527 201.38796997]
[78.05178833 216.02558899]
[74.77455139 230.66319275]
[83.44886780 243.87423706]
[80.15915680 259.33236694]
[66.85713959 267.86651611]
[51.43466568 264.41354370]
[43.04162216 251.02204895]
[46.65744781 235.63694763]
[60.13693619 227.38595581]
[63.41417694 212.74833679]
[66.69141388 198.11073303]
[69.96865845 183.47311401]
[73.24589539 168.83551025]
[66.53787994 165.48103333]
[53.12184906 158.77206421]
[46.41383362 155.41758728]
[36.66880798 166.82086182]
[33.58530426 182.33866882]
[19.43476486 186.98748779]
[9.68973827 198.39076233]
[-0.05528803 209.79402161]
[-9.80031395 221.19729614]
[-6.05148029 236.25471497]
[-11.90033627 250.62727356]
[-25.09787750 258.78842163]
[-40.56938171 257.60006714]
[-52.36573410 247.51910400]
[-55.95100403 232.42190552]
[-49.94657898 218.11363220]
[-36.66128159 210.09611511]
[-21.20357895 211.45225525]
[-11.45855331 200.04899597]
[-1.71352780 188.64573669]
[8.03149796 177.24246216]
[10.41797161 162.54028320]
[25.26554108 157.07583618]
[35.01056671 145.67256165]
[31.97063637 138.81626892]
[18.25803947 144.89613342]
[4.54544401 150.97599792]
[-9.16715145 157.05584717]
[-22.87974739 163.13571167]
[-36.59234238 169.21557617]
[-50.30493927 175.29544067]
[-64.01763916 181.37507629]
[-70.09704590 167.66227722]
[-56.38479996 161.58283997]
[-42.67220306 155.50297546]
[-28.95960999 149.42312622]
[-15.24701309 143.34326172]
[-1.53441763 137.26339722]
[12.17817783 131.18353271]
[25.89077377 125.10367584]
[22.85084343 118.24737549]
[7.85714197 117.81271362]
[-7.13655901 117.37805176]
[-22.13026047 116.94338989]
[-37.12396240 116.50872803]
[-52.11766052 116.07406616]
[-67.11136627 115.63940430]
[-82.10506439 115.20474243]
[-92.36373901 127.00701141]
[-107.81670380 129.40284729]
[-121.16752625 121.26101685]
[-126.11237335 106.42584229]
[-120.31642151 91.90203094]
[-106.51635742 84.54729462]
[-91.22814178 87.83430481]
[-81.67040253 100.21104431]
[-66.67670441 100.64570618]
[-51.68299866 101.08036804]
[-36.68930054 101.51502991]
[-21.69559860 101.94969177]
[-6.70189762 102.38435364]
[8.29180336 102.81901550]
[23.28550529 103.25367737]
[41.20497131 89.82626343]
[60.56207657 84.01572418]
[47.87113571 76.01947021]
[35.18019485 68.02322388]
[22.48925400 60.02697372]
[9.79831314 52.03072357]
[-5.42871332 55.31331635]
[-18.18522263 47.02319336]
[-21.22083282 32.48632050]
[-33.91177368 24.49007034]
[-50.53587723 21.16207504]
[-51.93994904 4.26636791]
[-36.09321976 -1.76003110]
[-25.91552353 11.79912949]
[-13.22458267 19.79537964]
[1.19861829 16.25887489]
[14.18294621 24.18742371]
[17.79456329 39.33978271]
[30.48550415 47.33603287]
[43.17644501 55.33228302]
[55.86738586 63.32853317]
[68.55832672 71.32478333]
[75.40318298 65.27474213]
[83.38160706 60.82506180]
[92.12591553 58.18079758]
[101.23310852 57.46382523]
[110.28347015 58.70718002]
[118.85990906 61.85356140]
[126.56716156 66.75796509]
[133.05003357 73.19437408]
[146.18289185 65.94674683]
[159.31575012 58.69911575]
[172.44860840 51.45148468]
[185.58146667 44.20385742]
[198.71430969 36.95622635]
[200.16526794 24.45429230]
[207.69511414 14.63815594]
[218.99578857 10.15564346]
[221.93281555 -4.55401182]
[224.86982727 -19.26366615]
[227.80683899 -33.97332382]
[230.48764038 -48.73182297]
[232.91140747 -63.53470612]
[235.33517456 -78.33758545]
[237.75894165 -93.14047241]
[240.18272400 -107.94335175]
[238.36453247 -112.76007080]
[238.53509521 -117.34088898]
[240.27798462 -120.97472382]
[242.95674133 -123.21509552]
[245.89375305 -137.92474365]
[248.83076477 -152.63439941]
[251.76777649 -167.34405518]
[254.70480347 -182.05371094]
[257.64181519 -196.76336670]
[260.57882690 -211.47302246]
[263.51583862 -226.18267822]
[266.45285034 -240.89233398]
[265.06616211 -249.88363647]
[269.51010132 -255.75503540]
[272.61743164 -270.42965698]
[275.72479248 -285.10427856]
[270.13339233 -300.52078247]
[280.89443970 -312.89544678]
[296.93786621 -309.49826050]
[301.75955200 -293.82397461]
[290.39941406 -281.99694824]
[287.29205322 -267.32232666]
[284.18472290 -252.64770508]
[281.16250610 -237.95532227]
[278.22549438 -223.24566650]
[275.28848267 -208.53601074]
[272.35147095 -193.82635498]
[269.41445923 -179.11669922]
[266.47744751 -164.40704346]
[263.54043579 -149.69738770]
[260.60342407 -134.98773193]
[257.66641235 -120.27808380]
[254.98559570 -105.51958466]
[252.56182861 -90.71669769]
[250.13806152 -75.91381836]
[247.71429443 -61.11093521]
[245.29051208 -46.30805206]
[247.01023865 -43.26871872]
[247.36383057 -39.25407028]
[245.91249084 -34.90589905]
[242.51649475 -31.03630829]
[239.57948303 -16.32665443]
[236.64247131 -1.61699855]
[233.70544434 13.09265614]
[240.59600830 19.41730499]
[244.34323120 27.98698044]
[259.21011353 29.98078346]
[268.09478760 28.02403831]
[274.23742676 32.08483887]
[289.08023071 34.25085068]
[303.92300415 36.41686249]
[318.76580811 38.58287430]
[333.60858154 40.74888611]
[338.88333130 28.97947311]
[348.53634644 19.52195549]
[361.54397583 14.00096130]
[376.28631592 13.58687782]
[390.74752808 18.78118515]
[402.79156494 29.28936577]
[417.58013916 26.77983475]
[432.36874390 24.27030182]
[447.15731812 21.76077080]
[461.94589233 19.25123787]
[476.73449707 16.74170685]
[491.52307129 14.23217392]
[506.31167603 11.72264194]
[514.06085205 -1.85983598]
[528.74560547 -7.23500347]
[543.43218994 -1.86487043]
[551.18609619 11.71495056]
[548.34606934 27.09248352]
[536.25317383 37.00692749]
[520.61730957 36.77698517]
[508.82119751 26.51122665]
[494.03262329 29.02075958]
[479.24401855 31.53029060]
[464.45544434 34.03982162]
[449.66683960 36.54935455]
[434.87826538 39.05888748]
[420.08969116 41.56842041]
[405.30108643 44.07794952]
[404.13214111 51.48629379]
[418.94879150 53.82446671]
[416.61035156 68.64107513]
[401.79421997 66.30297852]
[400.62524414 73.71131897]
[413.92257690 80.65253448]
[427.21994019 87.59375763]
[440.51727295 94.53498077]
[450.90957642 88.85014343]
[462.63543701 88.87053680]
[472.79833984 94.47597504]
[478.94317627 104.18081665]
[479.64913940 115.52587128]
[492.78198242 122.77350616]
[505.91482544 130.02113342]
[519.04766846 137.26875305]
[535.83666992 139.62812805]
[538.21716309 156.41412354]
[522.74615479 163.34840393]
[511.80004883 150.40161133]
[498.66720581 143.15399170]
[485.53436279 135.90635681]
[472.40148926 128.65872192]
[455.11898804 134.77239990]
[438.58905029 126.13095856]
[433.57604980 107.83232880]
[420.27871704 100.89110565]
[406.98135376 93.94988251]
[393.68402100 87.00866699]
[371.49478149 94.22786713]
[350.14999390 89.03287506]
[335.69137573 74.35560608]
[331.44256592 55.59167862]
[316.59979248 53.42566299]
[301.75698853 51.25965118]
[286.91421509 49.09363937]
[272.07141113 46.92762756]
[257.21630859 44.84768677]
[242.34942627 42.85388184]
[226.25175476 55.47047806]
[205.96194458 50.08908463]
[192.82908630 57.33671188]
[179.69622803 64.58434296]
[166.56338501 71.83197021]
[153.43052673 79.07959747]
[140.29766846 86.32722473]
[154.89643860 123.38249969]
[132.59114075 169.52349854]
[135.52816772 184.23315430]
[138.46517944 198.94281006]
[141.40219116 213.65246582]
[144.33920288 228.36212158]
[157.62377930 236.92340088]
[160.88195801 252.38818359]
[152.18070984 265.58151245]
[136.68234253 268.67599487]
[123.58174896 259.83575439]
[120.65128326 244.30552673]
[129.62954712 231.29913330]
[126.69253540 216.58947754]
[123.75551605 201.87982178]
[120.81850433 187.17016602]
[117.88149261 172.46051025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[20 41]
[21 40]
[23 38]
[24 37]
[25 36]
[26 35]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[89 95]
[90 94]
[110 253]
[111 252]
[112 251]
[113 250]
[114 249]
[115 248]
[118 170]
[119 169]
[120 168]
[121 167]
[122 163]
[123 162]
[124 161]
[125 160]
[126 159]
[130 158]
[131 157]
[132 156]
[133 155]
[134 154]
[135 153]
[136 152]
[137 151]
[138 150]
[140 149]
[141 148]
[142 147]
[172 246]
[173 245]
[175 244]
[176 243]
[177 242]
[178 241]
[179 240]
[185 207]
[186 206]
[187 205]
[188 204]
[189 203]
[190 202]
[191 201]
[192 200]
[212 236]
[213 235]
[214 234]
[215 233]
[220 230]
[221 229]
[222 228]
[223 227]
[255 270]
[256 269]
[257 268]
[258 267]
[259 266]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
