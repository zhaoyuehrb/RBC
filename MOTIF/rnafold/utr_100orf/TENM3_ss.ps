%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCUGGAGCUUGGAGGAGAAGUCUGAACUAAGGAUAAACUAAAGAGAGGCCAAUGAGACUUGAACCCUGAGCCUAAGUUGUCACCAGCAGGACUGAUGUGCACACAGAAGGAAUGAAGUAUGGAUGUGAAAGAACGCAGGCCUUACUGCUCCCUGACCAAGAGCAGACGAGAGAAGGAACGGCGCUACACAAAUUCCUCCGCAGACAAUGAGGAGUGCC\
) } def
/len { sequence length } bind def

/coor [
[240.41670227 217.22267151]
[238.75399780 210.03146362]
[227.49391174 200.12133789]
[216.23384094 190.21122742]
[204.97375488 180.30110168]
[187.60408020 177.77493286]
[181.86972046 160.27247620]
[170.47052002 150.52268982]
[159.07133484 140.77290344]
[147.67213440 131.02311707]
[136.27294922 121.27333069]
[50.96054459 150.58078003]
[37.04220581 156.17362976]
[23.12387276 161.76646423]
[9.20553684 167.35931396]
[2.41624522 173.45790100]
[-4.94953918 172.93128967]
[-18.94562531 178.32662964]
[-25.74777985 194.44755554]
[-41.79010010 200.53747559]
[-56.96670151 193.28273010]
[-70.88504028 198.87557983]
[-84.80337524 204.46841431]
[-98.72171021 210.06126404]
[-112.64004517 215.65411377]
[-126.55838013 221.24696350]
[-123.68771362 236.01705933]
[-123.66445923 251.06352234]
[-126.48944855 265.84240723]
[-132.06056213 279.81951904]
[-140.17640686 292.48953247]
[-150.54359436 303.39450073]
[-162.78736877 312.14013672]
[-176.46513367 318.41036987]
[-191.08241272 321.97845459]
[-206.11082458 322.71548462]
[-221.00711060 320.59478760]
[-235.23275757 315.69299316]
[-248.27352905 308.18734741]
[-259.65798950 298.34915161]
[-268.97463989 286.53402710]
[-275.88665771 273.16912842]
[-280.14416504 258.73757935]
[-281.59329224 243.76104736]
[-280.18164062 228.78092957]
[-275.96023560 214.33876038]
[-269.08166504 200.95661926]
[-259.79461670 189.11824036]
[-248.43478394 179.25158691]
[-235.41284180 171.71334839]
[-221.19949341 166.77598572]
[-206.30856323 164.61802673]
[-191.27835083 165.31745911]
[-176.65219116 168.84898376]
[-162.95878601 175.08496094]
[-150.69317627 183.79997253]
[-140.29873657 194.67893982]
[-132.15122986 207.32862854]
[-118.23289490 201.73577881]
[-104.31455231 196.14292908]
[-90.39621735 190.55007935]
[-76.47788239 184.95724487]
[-62.55955124 179.36439514]
[-59.21270752 166.92623901]
[-49.16461563 158.55998230]
[-35.93815231 157.49024963]
[-24.34095573 164.33053589]
[-10.34486961 158.93521118]
[3.61268973 153.44097900]
[17.53102493 147.84812927]
[31.44935989 142.25529480]
[45.36769485 136.66244507]
[46.89587402 129.31977844]
[51.48041153 107.29179382]
[40.94912338 96.61041260]
[30.41783524 85.92903137]
[24.16830063 83.81169128]
[20.47519875 79.50553131]
[19.74500656 74.79319763]
[9.52020741 63.81806946]
[-0.70459175 52.84293747]
[-10.92939091 41.86780930]
[-26.75961494 37.58574677]
[-30.70425415 21.66808891]
[-18.70540237 10.48955536]
[-3.10645008 15.54966450]
[0.04573869 31.64300919]
[10.27053833 42.61813736]
[20.49533844 53.59326935]
[30.72013664 64.56839752]
[41.09922028 75.39774323]
[51.63050842 86.07912445]
[62.16179657 96.76050568]
[68.76050568 93.19581604]
[88.55663300 82.50173950]
[85.39644623 67.83841705]
[72.40090179 59.25042725]
[69.40490723 44.33470535]
[77.67232513 31.99836540]
[74.51213837 17.33503723]
[71.35194397 2.67170787]
[59.94924164 -9.11431599]
[64.71443939 -24.80587196]
[80.74551392 -28.26083374]
[91.55107117 -15.92503071]
[86.01527405 -0.48848125]
[89.17546844 14.17484760]
[92.33565521 28.83817673]
[104.95051575 36.67404175]
[108.36428833 51.49972534]
[100.05977631 64.67822266]
[103.21996307 79.34155273]
[110.54026794 80.97348022]
[113.80413055 66.33288574]
[117.06821442 51.69233322]
[131.70870972 54.95664597]
[128.44473267 69.59674072]
[125.18087006 84.23734283]
[132.50117493 85.86927795]
[141.59042358 73.93674469]
[150.67968750 62.00421524]
[159.76895142 50.07168198]
[161.97615051 34.40519333]
[175.84329224 28.96904755]
[184.93254089 17.03651619]
[186.85079956 -1.28120160]
[203.29840088 -7.41010284]
[212.21789551 -19.47006035]
[221.13739014 -31.53001785]
[230.05688477 -43.58997345]
[227.46960449 -59.18104553]
[236.73249817 -71.98629761]
[252.35005188 -74.40859985]
[265.05664062 -65.01084137]
[267.31369019 -49.36855316]
[257.78213501 -36.76202011]
[242.11685181 -34.67047501]
[233.19735718 -22.61051941]
[224.27784729 -10.55056190]
[215.35835266 1.50939465]
[216.83923340 13.50986767]
[209.51388550 23.62885857]
[196.86508179 26.12578011]
[187.77581787 38.05831146]
[186.21875000 52.87130356]
[171.70149231 59.16094589]
[162.61222839 71.09347534]
[153.52296448 83.02600861]
[144.43370056 94.95854187]
[146.02273560 109.87413788]
[157.42192078 119.62392426]
[168.82112122 129.37371826]
[180.22032166 139.12350464]
[191.61950684 148.87329102]
[204.51046753 148.64932251]
[213.80326843 156.99789429]
[214.88386536 169.04101562]
[226.14395142 178.95114136]
[237.40403748 188.86125183]
[248.66412354 198.77137756]
[243.01139832 184.87725830]
[241.06709290 170.00379944]
[242.95831299 155.12350464]
[248.56140137 141.20928955]
[257.51004028 129.17092896]
[269.21908569 119.79553986]
[282.92300415 113.69611359]
[297.72573853 111.27145386]
[312.65945435 112.68009949]
[326.74771118 117.82994843]
[339.06936646 126.38428497]
[348.81878662 137.78378296]
[355.35852051 151.28311157]
[358.26098633 165.99961853]
[357.33639526 180.97109985]
[352.64520264 195.21864319]
[344.49411011 207.81069946]
[333.41610718 217.92396545]
[320.13549805 224.89715576]
[305.52062988 228.27438354]
[290.52706909 227.83479309]
[276.13516235 223.60714722]
[263.28881836 215.87016296]
[271.33337402 228.53053284]
[279.37796021 241.19090271]
[287.42251587 253.85127258]
[295.46707153 266.51162720]
[296.95260620 251.58537292]
[306.19256592 239.76916504]
[320.32037354 234.72883606]
[334.95303345 238.02812195]
[345.55093384 248.64343262]
[348.82614136 263.28149414]
[343.76260376 277.40100098]
[331.93121338 286.62152100]
[317.00253296 288.08251953]
[303.60891724 281.33154297]
[309.98025513 294.91116333]
[316.35156250 308.49078369]
[322.72290039 322.07040405]
[329.09420776 335.65005493]
[344.40435791 336.87258911]
[357.04296875 345.59967041]
[363.61026001 359.48367310]
[362.33972168 374.78991699]
[353.57308960 387.40109253]
[339.66857910 393.92486572]
[324.36636353 392.60635376]
[311.78274536 383.80023193]
[305.30258179 369.87530518]
[306.66906738 354.57733154]
[315.51458740 342.02136230]
[309.14324951 328.44174194]
[302.77194214 314.86212158]
[296.40063477 301.28247070]
[290.02929688 287.70285034]
[282.80673218 274.55621338]
[274.76214600 261.89584351]
[266.71759033 249.23547363]
[258.67300415 236.57510376]
[250.62843323 223.91473389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 160]
[3 159]
[4 158]
[5 157]
[7 154]
[8 153]
[9 152]
[10 151]
[11 150]
[12 72]
[13 71]
[14 70]
[15 69]
[17 68]
[18 67]
[21 63]
[22 62]
[23 61]
[24 60]
[25 59]
[26 58]
[74 93]
[75 92]
[76 91]
[79 90]
[80 89]
[81 88]
[82 87]
[95 112]
[96 111]
[99 108]
[100 107]
[101 106]
[119 149]
[120 148]
[121 147]
[122 146]
[124 144]
[125 143]
[127 140]
[128 139]
[129 138]
[130 137]
[183 221]
[184 220]
[185 219]
[186 218]
[187 217]
[197 216]
[198 215]
[199 214]
[200 213]
[201 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
