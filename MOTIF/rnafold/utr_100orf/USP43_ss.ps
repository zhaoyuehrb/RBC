%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCACCAGGAGCCUUAGAGAAGCUGUAGGGCCUGCUGGCCGCUCGUCCGCCUCGCGCCCGGGGGCUCCGCGCCUGGAGCUGCGCCGGCGGCAGCCAUGGACCUGGGCCCCGGGGACGCGGCAGGAGGGGGACCGCUCGCGCCCCGGCCCCGCCGCCGCCGCUCCCUGCGCCGCCUGUUCAGCCGCUUCCUGCUGG\
) } def
/len { sequence length } bind def

/coor [
[120.26445770 173.08743286]
[117.64665222 158.31762695]
[115.02883911 143.54782104]
[112.41103363 128.77803040]
[99.75966644 128.62422180]
[89.34122467 123.61636353]
[79.47728729 134.91693115]
[69.61335754 146.21749878]
[59.74942398 157.51806641]
[56.50355148 173.00273132]
[42.30509567 177.50308228]
[32.44116211 188.80364990]
[22.66764832 200.18249512]
[12.98517418 211.63893127]
[3.30270028 223.09535217]
[-6.37977409 234.55177307]
[-16.06224823 246.00820923]
[-19.06078148 261.54266357]
[-33.18566895 266.26885986]
[-42.86814117 277.72528076]
[-48.47431183 293.72549438]
[-65.40118408 292.76773071]
[-69.16666412 276.23721313]
[-54.32456970 268.04281616]
[-44.64209366 256.58636475]
[-42.33611679 241.87135315]
[-27.51867485 236.32572937]
[-17.83620071 224.86930847]
[-8.15372562 213.41287231]
[1.52874875 201.95645142]
[11.21122265 190.50003052]
[13.12996197 183.35375977]
[21.14059639 178.93971252]
[31.00452805 167.63914490]
[33.54486847 152.96276855]
[48.44885635 147.65412903]
[58.31278992 136.35356140]
[68.17672729 125.05299377]
[78.04065704 113.75242615]
[75.00262451 106.81712341]
[74.09919739 99.29968262]
[75.40752411 91.84204865]
[63.14698029 83.20034027]
[50.88643646 74.55863190]
[40.27961349 77.03266144]
[30.27043533 73.33077240]
[24.08632278 64.90443420]
[23.57839966 54.68466568]
[11.59966660 45.65637970]
[-0.37906596 36.62809372]
[-12.35779858 27.59980583]
[-24.33653069 18.57151985]
[-42.65561295 16.75598526]
[-48.88618469 0.35554451]
[-61.00736237 -8.48057556]
[-73.12854004 -17.31669617]
[-85.31979370 -26.05588531]
[-97.58033752 -34.69759369]
[-109.90939331 -43.24126434]
[-122.30618286 -51.68635941]
[-134.70297241 -60.13145447]
[-147.09976196 -68.57654572]
[-159.49655151 -77.02164459]
[-175.25788879 -78.39671326]
[-181.42022705 -91.95675659]
[-193.81701660 -100.40185547]
[-210.31143188 -104.32237244]
[-211.11024475 -121.25749207]
[-195.05809021 -126.71318817]
[-185.37191772 -112.79864502]
[-172.97512817 -104.35354614]
[-158.10049438 -103.58252716]
[-151.05145264 -89.41843414]
[-138.65466309 -80.97333527]
[-126.25787354 -72.52824402]
[-113.86108398 -64.08314514]
[-101.46430206 -55.63805389]
[-94.15785980 -54.46904373]
[-88.93862915 -46.95813370]
[-76.67808533 -38.31642914]
[-69.39121246 -37.03105545]
[-64.29241943 -29.43787384]
[-52.17124557 -20.60175514]
[-40.05006409 -11.76563454]
[-28.04745102 -13.32740879]
[-17.87477684 -6.05516768]
[-15.30824471 6.59278631]
[-3.32951212 15.62107277]
[8.64922047 24.64935875]
[20.62795258 33.67764664]
[32.60668564 42.70593262]
[51.91352081 43.64130020]
[59.52814484 62.29809189]
[71.78868866 70.93979645]
[84.04923248 79.58150482]
[101.96724701 72.34964752]
[121.29083252 79.53699493]
[131.32478333 99.01670837]
[145.80848694 95.11517334]
[160.29220581 91.21363831]
[174.77592468 87.31210327]
[189.25964355 83.41056061]
[195.08059692 67.53523254]
[209.07569885 58.34524155]
[225.62513733 59.29410934]
[238.22306824 69.81056976]
[252.64273071 65.67856598]
[267.06237793 61.54656219]
[273.99395752 50.66028214]
[286.09793091 47.51984024]
[296.74212646 53.28206253]
[311.22583008 49.38052368]
[325.70956421 45.47898865]
[340.19326782 41.57744980]
[354.67700195 37.67591476]
[369.16070557 33.77437592]
[376.64340210 28.51476288]
[383.90652466 29.92807579]
[398.45062256 26.25799942]
[412.99472046 22.58792305]
[427.53878784 18.91784668]
[442.08288574 15.24777031]
[449.64849854 10.10814762]
[456.88818359 11.63710308]
[471.48892212 8.19941998]
[483.14859009 -2.49465394]
[497.31033325 2.11989164]
[511.91110229 -1.31779087]
[526.48400879 -4.87178326]
[541.02807617 -8.54185963]
[555.57214355 -12.21193600]
[567.05981445 -23.09058189]
[581.29333496 -18.70245171]
[595.83740234 -22.37252808]
[610.38153076 -26.04260445]
[615.19567871 -40.69960403]
[627.18414307 -50.40938950]
[642.52148438 -52.07360077]
[656.31359863 -45.16120148]
[664.15942383 -31.87790489]
[663.55548096 -16.46236801]
[654.69439697 -3.83363104]
[640.40374756 1.97852206]
[625.24365234 -0.88054550]
[614.05157471 -11.49851608]
[599.50750732 -7.82843924]
[584.96343994 -4.15836287]
[574.51605225 6.45777369]
[559.24224854 2.33215332]
[544.69818115 6.00222969]
[530.15405273 9.67230606]
[524.43109131 14.36254978]
[515.34875488 13.28297424]
[500.74801636 16.72065735]
[490.13272095 27.16884422]
[474.92660522 22.80018616]
[460.32586670 26.23786736]
[445.75296021 29.79186058]
[431.20886230 33.46193695]
[416.66479492 37.13201141]
[402.12069702 40.80208969]
[387.57659912 44.47216415]
[373.06225586 48.25809097]
[358.57852173 52.15962982]
[344.09481812 56.06116486]
[329.61108398 59.96270370]
[315.12738037 63.86423874]
[300.64367676 67.76577759]
[288.94604492 80.84096527]
[271.19439697 75.96621704]
[256.77471924 80.09822083]
[242.35507202 84.23023224]
[238.96748352 97.15063477]
[229.56044006 106.78519440]
[216.51655579 110.54047394]
[203.21612549 107.33193207]
[193.16117859 97.89427948]
[178.67745972 101.79581451]
[164.19374084 105.69735718]
[149.71002197 109.59889221]
[135.22631836 113.50042725]
[127.18083191 126.16021729]
[129.79864502 140.93002319]
[132.41645813 155.69982910]
[135.03425598 170.46961975]
[149.74438477 174.54084778]
[161.22566223 184.59783936]
[167.19847107 198.64376831]
[166.47689819 213.88983154]
[159.20422363 227.30888367]
[146.82444763 236.23657227]
[131.79556274 238.90029907]
[117.10157776 234.77117920]
[105.65999603 224.66905212]
[99.74254608 210.59970093]
[100.52414703 195.35661316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[6 39]
[7 38]
[8 37]
[9 36]
[11 34]
[12 33]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[19 25]
[20 24]
[42 95]
[43 94]
[44 93]
[48 91]
[49 90]
[50 89]
[51 88]
[52 87]
[54 84]
[55 83]
[56 82]
[57 80]
[58 79]
[59 77]
[60 76]
[61 75]
[62 74]
[63 73]
[65 71]
[66 70]
[98 181]
[99 180]
[100 179]
[101 178]
[102 177]
[106 172]
[107 171]
[108 170]
[111 168]
[112 167]
[113 166]
[114 165]
[115 164]
[116 163]
[118 162]
[119 161]
[120 160]
[121 159]
[122 158]
[124 157]
[125 156]
[127 154]
[128 153]
[129 151]
[130 150]
[131 149]
[133 147]
[134 146]
[135 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
