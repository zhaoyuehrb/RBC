%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGCAGGGGAAGGCGGGUCCUGGCGGCCAGCGCGCGGUCCGCGCCCACCCUAGCCGAGCGGGGCCGGCAGAGCGCGCGGCGUCGGUGCCCUUGACCAUGGCGGCGGCUGCGCUUCUGCUGGGGCUGGCGCUGCUGGCACCGCGGGCGGCCGGCGCGGGCAUGGGCGCGUGCUAUGACGGCGCAGGGCGCCCGCAGC\
) } def
/len { sequence length } bind def

/coor [
[70.82228088 103.85762024]
[57.87154770 111.42587280]
[44.92081451 118.99412537]
[31.97008133 126.56238556]
[19.01934624 134.13063049]
[6.06861258 141.69889832]
[-6.50929594 149.87179565]
[-18.68617249 158.63099670]
[-30.86304665 167.39019775]
[-43.03992081 176.14941406]
[-43.66668701 189.60972595]
[-51.81496048 200.09640503]
[-64.33076477 203.91572571]
[-76.57590485 199.88673401]
[-88.88953400 208.45262146]
[-101.20317078 217.01850891]
[-113.51679993 225.58439636]
[-125.76243591 234.24720764]
[-137.93931580 243.00642395]
[-144.62400818 257.34606934]
[-159.47407532 258.49703979]
[-171.65095520 267.25625610]
[-174.32688904 282.60150146]
[-186.80075073 291.31112671]
[-201.41362000 288.66546631]
[-213.59049988 297.42468262]
[-225.76736450 306.18386841]
[-229.76075745 321.72198486]
[-244.45713806 328.15594482]
[-258.58273315 320.55017090]
[-261.30154419 304.73916626]
[-250.52798462 292.85180664]
[-234.52658081 294.00701904]
[-222.34970093 285.24780273]
[-210.17282104 276.48858643]
[-208.03408813 261.79296875]
[-195.80978394 252.73641968]
[-180.41015625 255.07937622]
[-168.23327637 246.32017517]
[-162.41955566 232.60704041]
[-146.69851685 230.82954407]
[-134.52165222 222.07034302]
[-130.92396545 215.60598755]
[-122.08268738 213.27076721]
[-109.76905823 204.70487976]
[-97.45542145 196.13899231]
[-85.14179230 187.57310486]
[-82.88408661 170.91197205]
[-69.00440216 160.83660889]
[-51.79912949 163.97253418]
[-39.62225342 155.21333313]
[-27.44537926 146.45411682]
[-15.26850319 137.69491577]
[-29.84414673 134.15223694]
[-37.77012634 121.41728210]
[-34.51221848 106.77536011]
[-21.93417740 98.60266876]
[-7.23152971 101.57456207]
[1.18477321 113.99092102]
[-1.49964261 128.74815369]
[11.45109177 121.17990112]
[24.40182495 113.61164856]
[37.35255814 106.04339600]
[50.30329514 98.47513580]
[63.25402832 90.90688324]
[69.67070007 77.34862518]
[67.31248474 62.53515625]
[64.95427704 47.72169113]
[62.59606552 32.90822220]
[60.23785782 18.09475327]
[57.87964630 3.28128481]
[55.52143478 -11.53218365]
[53.16322327 -26.34565163]
[50.80501556 -41.15911865]
[46.36138916 -49.15133667]
[48.52842331 -56.22488403]
[46.40435410 -71.07373047]
[44.28028870 -85.92258453]
[42.15621948 -100.77143097]
[40.03215408 -115.62028503]
[37.90808487 -130.46913147]
[35.78401566 -145.31797791]
[31.99882698 -150.75798035]
[31.59700012 -156.43917847]
[33.83496857 -160.66833496]
[32.18071747 -175.57682800]
[22.96867943 -188.43952942]
[29.25517654 -201.94245911]
[27.60092354 -216.85096741]
[25.94667053 -231.75946045]
[24.29241943 -246.66796875]
[10.42801571 -253.43420410]
[2.44218087 -266.63381958]
[2.88316441 -282.05487061]
[11.61025047 -294.77658081]
[25.83865738 -300.73947144]
[41.02815247 -298.04080200]
[52.33182526 -287.54171753]
[56.14270782 -272.59243774]
[51.24477005 -257.96322632]
[39.20092010 -248.32221985]
[40.85517502 -233.41371155]
[42.50942612 -218.50521851]
[44.16367722 -203.59671021]
[53.25739288 -191.80036926]
[47.08921814 -177.23107910]
[48.74346924 -162.32258606]
[50.63286591 -147.44204712]
[52.75693512 -132.59320068]
[54.88100052 -117.74434662]
[57.00506973 -102.89550018]
[59.12913895 -88.04665375]
[61.25320435 -73.19779968]
[63.37727356 -58.34895325]
[65.61848450 -43.51733017]
[67.97669220 -28.70386314]
[70.33489990 -13.89039421]
[72.69311523 0.92307425]
[75.05132294 15.73654270]
[77.40953827 30.55001068]
[79.76774597 45.36347961]
[82.12595367 60.17694855]
[84.48416901 74.99041748]
[103.58345795 66.98352051]
[125.78939056 73.48391724]
[138.61903381 65.71216583]
[151.44868469 57.94040680]
[164.27832031 50.16865158]
[177.10797119 42.39689636]
[189.93762207 34.62514114]
[200.35227966 21.24712372]
[216.09053040 27.55136299]
[214.38945007 44.41975403]
[197.70938110 47.45478821]
[184.87973022 55.22654343]
[172.05007935 62.99829865]
[159.22044373 70.77005005]
[146.39079285 78.54180908]
[133.56114197 86.31356049]
[133.26521301 93.80772400]
[145.94956970 101.81442261]
[132.67335510 108.79604340]
[132.37744141 116.29019928]
[144.55430603 125.04940796]
[156.73118591 133.80860901]
[168.90806580 142.56782532]
[181.08493042 151.32702637]
[193.26181030 160.08624268]
[205.43869019 168.84544373]
[221.15972900 170.62294006]
[226.97344971 184.33605957]
[239.15032959 193.09527588]
[254.87136841 194.87277222]
[260.68508911 208.58589172]
[272.86196899 217.34510803]
[285.03881836 226.10430908]
[297.21569824 234.86352539]
[311.88446045 230.15885925]
[326.34179688 234.93788147]
[335.10919189 247.16885376]
[334.99468994 262.03912354]
[347.17156982 270.79833984]
[359.34844971 279.55752563]
[371.52532959 288.31674194]
[383.70220947 297.07595825]
[398.81158447 293.04595947]
[412.95446777 299.71774292]
[419.45306396 313.94104004]
[415.23886108 329.00009155]
[402.30175781 337.78445435]
[386.75018311 336.14639282]
[375.92718506 324.85940552]
[374.94299316 309.25283813]
[362.76611328 300.49362183]
[350.58923340 291.73440552]
[338.41235352 282.97521973]
[326.23550415 274.21600342]
[312.17358398 279.05346680]
[297.78942871 274.63079834]
[288.66091919 262.44378662]
[288.45651245 247.04039001]
[276.27963257 238.28118896]
[264.10275269 229.52198792]
[251.92587280 220.76277161]
[237.07580566 219.61180115]
[230.39111328 205.27215576]
[218.21423340 196.51293945]
[203.36416626 195.36196899]
[196.67947388 181.02232361]
[184.50260925 172.26310730]
[172.32572937 163.50390625]
[160.14884949 154.74470520]
[147.97198486 145.98548889]
[135.79510498 137.22628784]
[123.61822510 128.46707153]
[109.33257294 134.22813416]
[94.58200073 133.53121948]
[82.03585052 127.02945709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[4 62]
[5 61]
[6 60]
[7 53]
[8 52]
[9 51]
[10 50]
[14 47]
[15 46]
[16 45]
[17 44]
[18 42]
[19 41]
[21 39]
[22 38]
[25 35]
[26 34]
[27 33]
[66 123]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
[73 116]
[74 115]
[76 114]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[85 107]
[86 106]
[88 104]
[89 103]
[90 102]
[91 101]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[143 195]
[144 194]
[145 193]
[146 192]
[147 191]
[148 190]
[149 189]
[151 187]
[152 186]
[154 184]
[155 183]
[156 182]
[157 181]
[161 177]
[162 176]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
