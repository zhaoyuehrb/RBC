%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUUAGCAGAAGAAUUCCUUUAAACGUCAUUUUUGAGGAAGUAGACAAACCUAAAUAUGUGUCUGAACUCCAAGGAAUAUGAACAAGAUGCCUGCUGGUGAACAAGAAUGUGAAUAUAACAAAGAAGGGAAGUACUACUCUAAAGGAGUUAAACUGGUGAGAAAAAAGAAAAAAAUUC\
) } def
/len { sequence length } bind def

/coor [
[152.54644775 419.67883301]
[160.09825134 406.61618042]
[170.77429199 395.95388794]
[183.84663391 388.41888428]
[179.96435547 373.92999268]
[176.08206177 359.44113159]
[165.31434631 349.15008545]
[169.21626282 333.81756592]
[165.33396912 319.32867432]
[161.45169067 304.83981323]
[147.50349426 299.68365479]
[139.16740417 287.15475464]
[139.81481934 271.94177246]
[149.40681458 259.88775635]
[145.52453613 245.39886475]
[141.64224243 230.90997314]
[137.75996399 216.42108154]
[133.87768555 201.93220520]
[129.99539185 187.44331360]
[126.11310577 172.95442200]
[122.23081970 158.46554565]
[118.34853363 143.97665405]
[100.61093140 148.43679810]
[82.19527435 145.89791870]
[65.80530548 136.50651550]
[53.93125534 121.43124390]
[48.47240067 102.72119141]
[50.43601227 83.02861786]
[36.43230438 77.65309906]
[22.42859840 72.27758026]
[8.42489243 66.90205383]
[-5.62519073 61.64894485]
[-19.72058105 56.51864624]
[-33.81596756 51.38834381]
[-47.91135788 46.25804138]
[-62.09923172 52.68781662]
[-76.32087708 47.28416824]
[-82.36325073 33.71857834]
[-96.45864105 28.58827400]
[-110.55403137 23.45797157]
[-126.25491333 31.14127541]
[-142.34304810 25.22177887]
[-149.05018616 9.81305981]
[-163.23297119 4.92953777]
[-177.41574097 0.04601533]
[-191.59852600 -4.83750677]
[-205.78129578 -9.72102928]
[-219.96408081 -14.60455132]
[-230.66610718 -3.72202730]
[-245.03295898 1.43127072]
[-260.21206665 -0.16784894]
[-273.18963623 -8.20187950]
[-281.38894653 -21.07565880]
[-283.18200684 -36.23308945]
[-278.21282959 -50.66464996]
[-267.46801758 -61.50494385]
[-253.08099365 -66.60162354]
[-237.90827942 -64.94274139]
[-224.96246338 -56.85766983]
[-216.81391907 -43.95170212]
[-215.08055115 -28.78733063]
[-200.89778137 -23.90380859]
[-186.71499634 -19.02028656]
[-172.53222656 -14.13676357]
[-158.34944153 -9.25324059]
[-144.16667175 -4.36971855]
[-133.47406006 -11.58893299]
[-120.38059235 -11.31871033]
[-109.68130493 -3.43349695]
[-105.42372894 9.36258316]
[-91.32833862 14.49288464]
[-77.23294830 19.62318802]
[-63.88442612 13.11530495]
[-49.51661682 18.11736679]
[-42.78105545 32.16265106]
[-28.68566704 37.29295349]
[-14.59027767 42.42325592]
[-0.49488866 47.55355835]
[6.88666296 46.88480759]
[13.80041122 52.89834976]
[27.80411720 58.27386856]
[41.80782318 63.64939117]
[55.81153107 69.02490997]
[62.37117767 65.38883972]
[48.50578308 59.66600800]
[44.33499146 45.25751877]
[52.99942780 33.01303101]
[67.97473145 32.15269470]
[77.98443604 43.32434845]
[75.49047089 58.11669159]
[82.05012512 54.48062134]
[84.91225433 39.75621414]
[87.77439117 25.03180504]
[81.92665100 9.71070862]
[92.47978973 -2.84171629]
[108.57763672 0.28738859]
[113.66011047 15.87906837]
[102.49880219 27.89393997]
[99.63666534 42.61834717]
[96.77452850 57.34275436]
[103.16933441 61.26149368]
[111.00680542 48.47189331]
[118.84428406 35.68228912]
[122.34599304 21.09674644]
[137.29975891 19.91990852]
[143.03993225 33.77812958]
[131.63389587 43.51976776]
[123.79640961 56.30937195]
[115.95893097 69.09897614]
[122.35373688 73.01771545]
[134.17388916 63.78279114]
[145.99406433 54.54786682]
[146.35894775 38.91454315]
[156.72613525 27.20747185]
[172.20054626 24.95438004]
[185.47564697 33.21910477]
[190.28334045 48.09929657]
[184.35357666 62.56898499]
[170.48620605 69.79602814]
[155.22897339 66.36802673]
[143.40881348 75.60295105]
[131.58865356 84.83787537]
[134.09220886 91.90768433]
[148.23190308 86.90080261]
[153.23857117 101.04058075]
[139.09930420 106.04730988]
[141.60285950 113.11711884]
[156.60057068 112.85533142]
[171.59829712 112.59354401]
[186.59600830 112.33175659]
[195.38558960 99.54415131]
[210.02407837 94.39689636]
[224.88267517 98.86921692]
[234.24795532 111.24141693]
[234.51876831 126.75612640]
[225.59097290 139.44763184]
[210.89750671 144.43579102]
[196.08830261 139.80253601]
[186.85778809 127.32947540]
[171.86007690 127.59126282]
[156.86236572 127.85305023]
[141.86465454 128.11483765]
[132.83741760 140.09436035]
[136.71971130 154.58325195]
[140.60198975 169.07214355]
[144.48428345 183.56103516]
[148.36656189 198.04991150]
[152.24885559 212.53880310]
[156.13113403 227.02769470]
[160.01342773 241.51657104]
[163.89570618 256.00546265]
[178.22964478 261.64855957]
[186.39678955 274.49966431]
[185.44200134 289.51806641]
[175.94056702 300.95751953]
[179.82286072 315.44641113]
[183.70513916 329.93530273]
[194.75054932 341.26266479]
[190.57095337 355.55883789]
[194.45323181 370.04772949]
[198.33552551 384.53662109]
[213.42401123 384.52593994]
[228.00086975 388.42172241]
[241.07225037 395.95840454]
[251.74691772 406.62210083]
[259.29705811 419.68569946]
[263.20785522 434.25854492]
[263.21270752 449.34704590]
[259.31127930 463.92239380]
[251.76956177 476.99087524]
[241.10176086 487.66140747]
[228.03523254 495.20648193]
[213.46087646 499.11169434]
[198.37239075 499.11071777]
[183.79853821 495.20364380]
[170.73298645 487.65689087]
[160.06655884 476.98495483]
[152.52651978 463.91552734]
[148.62695312 449.33966064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[8 157]
[9 156]
[10 155]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[28 83]
[29 82]
[30 81]
[31 80]
[32 78]
[33 77]
[34 76]
[35 75]
[38 72]
[39 71]
[40 70]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[91 100]
[92 99]
[93 98]
[110 122]
[111 121]
[112 120]
[127 142]
[128 141]
[129 140]
[130 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
