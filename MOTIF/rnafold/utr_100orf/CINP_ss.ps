%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAAUGCGUUUCCGGUGGGGUGGGCGGGGCUUCGCGUCUCCUUCUACGGAUAUCUGUGGACCUUAUGGAAGCAAAGACUCUUGGAACUGUAACGCCCAGAAAACCUGUCUUAUCUGUCAGUGCAAGAAAAAUUAAGGACAAUGCGGCUGAUUGGCACAAUUUAA\
) } def
/len { sequence length } bind def

/coor [
[96.42716217 153.98684692]
[93.88458252 168.76979065]
[100.06276703 183.96064758]
[89.78395844 196.73867798]
[73.62211609 193.95893860]
[68.20315552 178.48098755]
[79.10164642 166.22720337]
[81.64421844 151.44427490]
[71.87015533 140.06588745]
[56.87284470 140.34974670]
[41.87553024 140.63360596]
[26.87821579 140.91746521]
[11.88090229 141.20132446]
[-3.11641145 141.48518372]
[-18.11372566 141.76905823]
[-26.67841148 145.07223511]
[-33.39691544 141.91368103]
[-48.39691544 141.91368103]
[-63.39691544 141.91368103]
[-78.39691925 141.91368103]
[-93.39691925 141.91368103]
[-108.39691925 141.91368103]
[-125.81525421 181.72882080]
[-140.04560852 186.47193909]
[-154.27595520 191.21505737]
[-164.92144775 202.91908264]
[-179.44227600 199.60324097]
[-193.67262268 204.34635925]
[-204.31811523 216.05036926]
[-218.83894348 212.73452759]
[-233.06929016 217.47764587]
[-246.18382263 228.22219849]
[-260.13894653 218.59458923]
[-254.75073242 202.51965332]
[-237.81240845 203.24729919]
[-223.58206177 198.50418091]
[-213.95442200 187.13941956]
[-198.41574097 190.11599731]
[-184.18539429 185.37289429]
[-174.55775452 174.00813293]
[-159.01907349 176.98471069]
[-144.78872681 172.24159241]
[-130.55836487 167.49847412]
[-129.84890747 152.51460266]
[-129.13951111 137.53204346]
[-142.85803223 131.46559143]
[-156.57656860 125.39914703]
[-170.29510498 119.33269501]
[-184.01364136 113.26623535]
[-197.73217773 107.19978333]
[-213.97030640 109.49213409]
[-223.86012268 96.41070557]
[-217.22781372 81.41255951]
[-200.89613342 79.92649841]
[-191.66572571 93.48125458]
[-177.94718933 99.54770660]
[-164.22865295 105.61415863]
[-150.51011658 111.68061066]
[-136.79158020 117.74706268]
[-123.07305145 123.81351471]
[-108.39691925 126.91367340]
[-93.39691925 126.91367340]
[-78.39691925 126.91367340]
[-63.39691544 126.91367340]
[-48.39691544 126.91367340]
[-33.39691544 126.91367340]
[-18.39758682 126.77173615]
[-3.40027332 126.48787689]
[11.59704018 126.20401764]
[26.59435463 125.92015076]
[41.59166718 125.63629150]
[56.58898163 125.35243225]
[71.58629608 125.06856537]
[71.88856506 85.66043091]
[102.40573883 74.89155579]
[108.21149445 61.06067276]
[114.01725006 47.22979355]
[119.82300568 33.39891434]
[125.62875366 19.56803703]
[130.64031982 5.42999363]
[134.84153748 -8.96965027]
[139.04275513 -23.36929512]
[135.48030090 -38.78420639]
[146.47259521 -48.83501053]
[150.67382812 -63.23465347]
[139.99803162 -74.27653503]
[136.28904724 -89.18086243]
[140.54454041 -103.93844604]
[151.61982727 -114.57956696]
[166.53570557 -118.24182892]
[181.27987671 -113.94008636]
[191.88624573 -102.83149719]
[195.50172424 -87.90421295]
[191.15379333 -73.17359924]
[180.01200867 -62.60211182]
[165.07347107 -59.03343582]
[160.87225342 -44.63378906]
[164.73519897 -30.24883842]
[153.44239807 -19.16807365]
[149.24118042 -4.76842976]
[145.03996277 9.63121414]
[158.79843140 3.65589094]
[172.81562805 8.99612236]
[179.11056519 22.61133003]
[174.09906006 36.74939346]
[160.63453674 43.36049652]
[146.38331604 38.68045807]
[139.45964050 25.37379074]
[133.65388489 39.20466995]
[127.84812927 53.03554916]
[122.04237366 66.86642456]
[116.23661804 80.69730377]
[131.48284912 97.83059692]
[128.13807678 125.37755585]
[142.07635498 130.92053223]
[157.75889587 128.83049011]
[166.72613525 140.72326660]
[180.66439819 146.26623535]
[194.60267639 151.80921936]
[208.54093933 157.35220337]
[222.47921753 162.89517212]
[236.41748047 168.43815613]
[250.40757751 173.84898376]
[264.44824219 179.12721252]
[278.48892212 184.40542603]
[288.11416626 172.71640015]
[301.01464844 164.78816223]
[315.79095459 161.48071289]
[330.84030151 163.15280151]
[344.53024292 169.62306213]
[355.37579346 180.18965149]
[362.20050049 193.70637512]
[364.26409912 208.70706177]
[361.34271240 223.56452942]
[353.75323486 236.66714478]
[342.31893921 246.59365845]
[328.28012085 252.26730347]
[313.15960693 253.07263184]
[298.59753418 248.92231750]
[286.17352295 240.26652527]
[277.23522949 228.04418945]
[272.75219727 213.58110046]
[273.21072388 198.44609070]
[259.17004395 193.16787720]
[245.12936401 187.88966370]
[237.72911072 188.48210144]
[230.87451172 182.37641907]
[216.93623352 176.83345032]
[202.99797058 171.29046631]
[189.05969238 165.74749756]
[175.12142944 160.20451355]
[161.18315125 154.66152954]
[146.49755859 157.14804077]
[136.53337097 144.85879517]
[122.59510040 139.31582642]
[116.05311584 142.98358154]
[125.62765503 154.53036499]
[135.20219421 166.07714844]
[147.35507202 174.86961365]
[149.48924255 189.71701050]
[140.30488586 201.57650757]
[125.39575195 203.22505188]
[113.84227753 193.65858459]
[112.68114471 178.70353699]
[107.82514191 164.51130676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 8]
[2 7]
[9 73]
[10 72]
[11 71]
[12 70]
[13 69]
[14 68]
[15 67]
[17 66]
[18 65]
[19 64]
[20 63]
[21 62]
[22 61]
[23 43]
[24 42]
[25 41]
[27 39]
[28 38]
[30 36]
[31 35]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 101]
[81 100]
[82 99]
[84 97]
[85 96]
[114 155]
[115 154]
[117 152]
[118 151]
[119 150]
[120 149]
[121 148]
[122 147]
[123 145]
[124 144]
[125 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
