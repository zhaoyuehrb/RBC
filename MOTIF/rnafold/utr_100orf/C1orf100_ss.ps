%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUGCAGUUGAUCCAGCAGCAGGAGGCAGCUGUACCCAUCACUGUCCUCAGAGUACUUUUAAGAACAAGGAGGUCUCUGCCCACGGCAGCCCAAGCAGAUUCCCAUCCAUCAUGACUGCCAUCCGACUACGAGAAUUUAUUGAGCGUCGCCCAGUGAUCCCGCCAAGUAUAUUCAUCGCUCACCAAGGAAGAGACGUUCAAGGCUAUUACC\
) } def
/len { sequence length } bind def

/coor [
[-172.58206177 350.15795898]
[-183.71940613 360.20581055]
[-194.85675049 370.25366211]
[-205.99409485 380.30154419]
[-217.13143921 390.34939575]
[-228.26878357 400.39727783]
[-239.10635376 410.76776123]
[-249.63481140 421.45193481]
[-260.16326904 432.13607788]
[-270.69174194 442.82025146]
[-274.48498535 451.12728882]
[-281.45404053 453.58258057]
[-292.13821411 464.11102295]
[-302.82238770 474.63949585]
[-300.07208252 491.32986450]
[-307.73660278 506.22256470]
[-322.61877441 513.53814697]
[-338.76519775 510.57086182]
[-349.29367065 521.25500488]
[-359.82214355 531.93920898]
[-370.35058594 542.62335205]
[-380.87905884 553.30755615]
[-378.20648193 568.59271240]
[-385.05892944 582.51477051]
[-398.80151367 589.72033691]
[-414.14996338 587.43884277]
[-425.20242310 576.54742432]
[-427.70904541 561.23413086]
[-420.70596313 547.38726807]
[-406.88598633 540.33117676]
[-391.56323242 542.77905273]
[-381.03475952 532.09490967]
[-370.50631714 521.41070557]
[-359.97784424 510.72656250]
[-349.44937134 500.04238892]
[-352.84722900 487.13259888]
[-349.39523315 474.12515259]
[-339.89154053 464.44451904]
[-326.74179077 460.69378662]
[-313.35086060 463.95532227]
[-302.66668701 453.42684937]
[-291.98251343 442.89840698]
[-281.37591553 432.29180908]
[-270.84744263 421.60763550]
[-260.31896973 410.92346191]
[-249.79052734 400.23928833]
[-249.67503357 397.44058228]
[-248.44525146 394.51895142]
[-246.04878235 391.89849854]
[-242.58743286 390.01458740]
[-238.31663513 389.25991821]
[-227.17929077 379.21206665]
[-216.04194641 369.16418457]
[-204.90460205 359.11633301]
[-193.76727295 349.06848145]
[-182.62992859 339.02059937]
[-190.05142212 326.51791382]
[-194.88519287 312.80023193]
[-196.94256592 298.39700317]
[-196.14210510 283.86465454]
[-192.51281738 269.76492310]
[-186.19306946 256.64315796]
[-177.42535400 245.00738525]
[-166.54695129 235.30844116]
[-153.97700500 227.92259216]
[-140.20031738 223.13699341]
[-125.74868774 221.13839722]
[-111.18034363 222.00599670]
[-97.05844116 225.70820618]
[-83.92924500 232.10382080]
[-72.30101013 240.94740295]
[-61.01736450 231.06411743]
[-49.73372269 221.18081665]
[-45.25771713 206.97467041]
[-29.77863693 203.70227051]
[-18.49499321 193.81898499]
[-7.21134853 183.93569946]
[4.07229614 174.05239868]
[15.35594082 164.16911316]
[26.63958549 154.28582764]
[31.11558914 140.07968140]
[46.59466934 136.80728149]
[57.87831497 126.92398834]
[50.21030807 104.48601532]
[53.74409103 81.03876495]
[67.68462372 61.85745239]
[88.89553070 51.25753021]
[87.79549408 36.29792023]
[86.69545746 21.33831024]
[85.59542084 6.37870121]
[84.49538422 -8.58090782]
[69.82744598 -12.22905731]
[57.02260971 -20.22147369]
[47.32823563 -31.76476097]
[41.68408585 -45.72035599]
[40.63124084 -60.71682358]
[44.26026154 -75.28463745]
[52.20352936 -88.00016022]
[63.67247009 -97.62479401]
[77.53579712 -103.22560883]
[76.43576050 -118.18521881]
[75.33572388 -133.14482117]
[65.67423248 -146.39578247]
[72.56562042 -161.27667236]
[88.92060852 -162.47930908]
[97.91459656 -148.76654053]
[90.29533386 -134.24485779]
[91.39537048 -119.28525543]
[92.49540710 -104.32564545]
[107.02888489 -100.81295776]
[119.78231812 -92.96949005]
[129.50013733 -81.55265045]
[135.22105408 -67.67237091]
[136.37316895 -52.68320465]
[132.83110046 -38.05211258]
[124.92951965 -25.21492767]
[113.43151855 -15.43543053]
[99.45499420 -9.68094540]
[100.55503082 5.27866411]
[101.65506744 20.23827362]
[102.75510406 35.19788361]
[103.85514069 50.15749359]
[109.84753418 50.98812866]
[115.69571686 52.53651810]
[121.31404114 54.77999115]
[126.62023163 57.68568802]
[131.53657532 61.21105957]
[135.99108887 65.30447388]
[139.91851807 69.90599823]
[143.26136780 74.94822693]
[145.97067261 80.35733032]
[148.00675964 86.05409241]
[162.87602234 84.07800293]
[177.74530029 82.10192108]
[192.59965515 80.01674652]
[207.43830872 77.82260132]
[222.27696228 75.62844849]
[237.11563110 73.43429565]
[249.63557434 63.76157761]
[263.35772705 69.55395508]
[278.19638062 67.35980225]
[293.03503418 65.16564941]
[307.87368774 62.97150040]
[317.29345703 50.56561661]
[332.37322998 48.55181885]
[344.14227295 57.60857010]
[358.98092651 55.41442108]
[373.81958008 53.22026825]
[388.60635376 50.69992447]
[403.33401489 47.85460281]
[418.06167603 45.00928116]
[432.78933716 42.16395950]
[447.19396973 33.22290421]
[459.77322388 44.58947754]
[452.33312988 59.82369995]
[435.63464355 56.89162827]
[420.90698242 59.73694992]
[406.17932129 62.58226776]
[391.45166016 65.42758942]
[389.18505859 68.12568665]
[385.49996948 69.86102295]
[380.86264038 69.97928619]
[376.01373291 68.05892181]
[361.17507935 70.25307465]
[346.33642578 72.44722748]
[337.69207764 84.52244568]
[322.67483521 86.95900726]
[310.06784058 77.81015778]
[295.22918701 80.00431061]
[280.39053345 82.19845581]
[265.55187988 84.39260864]
[254.09329224 93.90838623]
[239.30976868 88.27295685]
[224.47111511 90.46710205]
[209.63246155 92.66125488]
[194.79380798 94.85540009]
[188.63816833 98.94251251]
[179.72137451 96.97119141]
[164.85211182 98.94727325]
[149.98284912 100.92335510]
[148.19586182 113.27769470]
[143.40382385 124.80415344]
[135.90553284 134.78405762]
[126.16850281 142.59515381]
[114.79985046 147.75041199]
[102.50842285 149.92840576]
[90.06058502 148.99331665]
[78.23248291 145.00347900]
[67.76160431 138.20762634]
[56.47795486 148.09092712]
[51.19487000 163.00398254]
[36.52287292 165.56947327]
[25.23922729 175.45275879]
[13.95558357 185.33604431]
[2.67193866 195.21934509]
[-8.61170578 205.10263062]
[-19.89535141 214.98591614]
[-25.17843628 229.89898682]
[-39.85043335 232.46446228]
[-51.13407898 242.34776306]
[-62.41772461 252.23104858]
[-54.82595444 265.73727417]
[-50.20151901 280.51876831]
[-48.74320221 295.93228149]
[-50.51206970 311.30758667]
[-55.42889404 325.97653198]
[-63.27772522 339.30224609]
[-73.71534729 350.70663452]
[-86.28631592 359.69549561]
[-100.44280243 365.88006592]
[-115.56848145 368.99356079]
[-131.00537109 368.90298462]
[-146.08242798 365.61462402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[6 51]
[7 46]
[8 45]
[9 44]
[10 43]
[12 42]
[13 41]
[14 40]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[71 201]
[72 200]
[73 199]
[75 197]
[76 196]
[77 195]
[78 194]
[79 193]
[80 192]
[82 190]
[83 189]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[100 109]
[101 108]
[102 107]
[132 180]
[133 179]
[134 178]
[135 176]
[136 175]
[137 174]
[138 173]
[140 171]
[141 170]
[142 169]
[143 168]
[146 165]
[147 164]
[148 163]
[149 159]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
