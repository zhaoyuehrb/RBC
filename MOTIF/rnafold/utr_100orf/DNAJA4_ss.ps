%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCCACCCUUCGGCGCAGGGCUCCGGCCAACACAGCCCUCCAGGCCGCCUACUCUCCAGCCAGCCGGCUCCACGGACCCACGGAAGGGCAAGGGGGCGGCCUCGGGGCGGCGGGACAGUUGUCGGAGGGCGCCCUCCAGGCCCAAGCCGCCUUCUCCGGCCCCCGCCAUGGCCCGGGGCGGCAGUCAGAGCUGGAGCUCCGGGGAAUCAGACGGGCAGCCAAAGGAGCAGACGCCCGAGAAGCCCAGACACAA\
GAUGGUGAAGGAGA\
) } def
/len { sequence length } bind def

/coor [
[286.68032837 439.76095581]
[283.32147217 424.07345581]
[293.60324097 411.75823975]
[293.60324097 396.75823975]
[293.60324097 381.75823975]
[293.42871094 366.75924683]
[293.07965088 351.76330566]
[292.73062134 336.76736450]
[292.38159180 321.77142334]
[290.81365967 306.85360718]
[288.03723145 292.11279297]
[285.26083374 277.37197876]
[282.48440552 262.63116455]
[279.45114136 247.94105530]
[276.16195679 233.30612183]
[272.87277222 218.67118835]
[269.58358765 204.03625488]
[258.23779297 201.26475525]
[248.92222595 194.05070496]
[243.30252075 183.57804871]
[242.42634583 171.62207031]
[228.72315979 165.52101135]
[215.01997375 159.41996765]
[201.31678772 153.31890869]
[187.54681396 158.87979126]
[173.56292725 152.88768005]
[167.82353210 138.40675354]
[154.12034607 132.30570984]
[140.41717529 126.20465088]
[126.71398926 120.10360718]
[118.22196198 128.03126526]
[107.52982330 132.57443237]
[95.92853546 133.18455505]
[84.81883240 129.78797913]
[75.54209900 122.79480743]
[69.21842194 113.04937744]
[66.61130524 101.72837067]
[51.83919144 99.12364960]
[37.06707764 96.51892853]
[22.28005600 94.00019073]
[7.47863293 91.56752014]
[-7.32279015 89.13484955]
[-22.12421227 86.70217896]
[-36.93953705 84.35566711]
[-51.76826477 82.09538269]
[-66.59699249 79.83509064]
[-81.42571259 77.57480621]
[-96.25444031 75.31452179]
[-111.08316803 73.05423737]
[-125.91189575 70.79395294]
[-140.74061584 68.53366852]
[-155.56935120 66.27337646]
[-170.37783813 71.84284210]
[-181.79388428 62.27607346]
[-196.62261963 60.01578903]
[-212.00958252 74.16146851]
[-236.21113586 67.96561432]
[-251.21113586 67.96561432]
[-266.21112061 67.96561432]
[-281.20706177 68.31465149]
[-296.19082642 69.01252747]
[-311.17459106 69.71041107]
[-326.15835571 70.40828705]
[-339.66397095 79.71041870]
[-354.35443115 72.42187500]
[-355.11740112 56.04048538]
[-341.16802979 47.41801834]
[-326.85623169 55.42453003]
[-311.87246704 54.72665024]
[-296.88870239 54.02877045]
[-281.90493774 53.33089066]
[-279.92971802 51.38942337]
[-277.07992554 50.09917831]
[-273.59475708 49.79217529]
[-269.82745361 50.70964432]
[-266.21112061 52.96561432]
[-251.21113586 52.96561432]
[-236.21113586 52.96561432]
[-233.26338196 38.25810623]
[-247.10481262 32.47756958]
[-260.94625854 26.69702911]
[-275.46795654 32.93364716]
[-290.11514282 26.99768639]
[-296.19787598 12.41084862]
[-290.10739136 -2.17275572]
[-275.45706177 -8.10093212]
[-260.93865967 -1.85659850]
[-255.16571045 12.85559273]
[-241.32427979 18.63613129]
[-227.48284912 24.41666985]
[-210.77589417 24.09422874]
[-198.54141235 32.67805481]
[-194.36233521 45.18706131]
[-179.53359985 47.44734573]
[-165.78575134 41.71621323]
[-153.30905151 51.44465256]
[-138.48033142 53.70494080]
[-123.65160370 55.96522522]
[-108.82288361 58.22550964]
[-93.99415588 60.48579788]
[-79.16542816 62.74608231]
[-64.33670044 65.00637054]
[-49.50797653 67.26665497]
[-34.67925262 69.52693939]
[-27.61855125 67.43560791]
[-19.69154358 71.90075684]
[-4.89012098 74.33342743]
[9.91130161 76.76609802]
[24.71272469 79.19876862]
[31.79728127 77.18972778]
[39.67179871 81.74681091]
[54.44391632 84.35153198]
[69.21603394 86.95625305]
[69.17338562 82.00417328]
[69.92234802 76.84763336]
[71.51165009 71.61147308]
[66.54570007 57.45734787]
[61.57975006 43.30321884]
[48.79494476 33.03283691]
[51.56402588 16.86916542]
[67.03839874 11.44000816]
[79.29936218 22.33041382]
[75.73387909 38.33726883]
[80.69982910 52.49139404]
[85.66577911 66.64552307]
[100.37329102 63.69777298]
[99.50111389 48.72315216]
[98.62894440 33.74853134]
[97.75677490 18.77390671]
[96.88459778 3.79928470]
[87.42595673 -9.59721184]
[94.54308319 -24.37146568]
[110.91448212 -25.32499123]
[119.69866943 -11.47688293]
[111.85922241 2.92711234]
[112.73139191 17.90173531]
[113.60356903 32.87635803]
[114.47573853 47.85097885]
[115.34790802 62.82560349]
[132.43498230 82.56133270]
[132.81503296 106.40042114]
[146.51821899 112.50147247]
[160.22140503 118.60252380]
[173.92457581 124.70357513]
[188.52641296 119.27915192]
[202.33647156 125.66168976]
[207.41784668 139.61573792]
[221.12103271 145.71678162]
[234.82420349 151.81782532]
[248.52738953 157.91888428]
[264.26678467 148.34019470]
[282.37939453 150.25775146]
[295.45733643 162.62963867]
[310.05300903 159.17039490]
[321.69683838 148.45912170]
[335.86538696 153.05274963]
[350.46105957 149.59350586]
[365.05673218 146.13426208]
[379.65240479 142.67503357]
[394.18548584 138.96159363]
[408.65155029 134.99507141]
[423.11761475 131.02856445]
[435.77734375 117.63394165]
[452.57086182 122.77919769]
[466.98977661 118.64463806]
[481.40869141 114.51007843]
[495.82763672 110.37551880]
[500.94616699 97.94001007]
[512.12286377 90.81732178]
[525.16827393 91.41222382]
[535.34277344 99.28482056]
[549.80877686 95.31830597]
[564.27484131 91.35179138]
[578.66949463 87.13341522]
[592.98828125 82.66446686]
[607.30712891 78.19551086]
[621.62591553 73.72655487]
[635.94476318 69.25759888]
[650.26354980 64.78865051]
[664.58239746 60.31969452]
[678.90118408 55.85073853]
[686.28289795 42.13403702]
[700.86791992 37.80585861]
[713.89916992 44.92773819]
[728.21801758 40.45878601]
[742.53680420 35.98983002]
[756.85565186 31.52087593]
[767.56591797 19.10229111]
[783.62310791 22.43379021]
[788.50891113 38.08821106]
[777.19726562 49.96163177]
[761.32458496 45.83969116]
[747.00573730 50.30864334]
[732.68695068 54.77759933]
[718.36816406 59.24655533]
[711.70117188 72.51633453]
[697.24353027 77.25246429]
[683.37011719 70.16955566]
[669.05133057 74.63850403]
[654.73254395 79.10746002]
[640.41369629 83.57641602]
[626.09490967 88.04537201]
[611.77606201 92.51432800]
[597.45727539 96.98327637]
[583.13842773 101.45223236]
[581.19238281 104.35239410]
[577.76165771 106.46835327]
[573.22344971 107.11988068]
[568.24139404 105.81784821]
[553.77532959 109.78436279]
[539.30926514 113.75087738]
[531.60046387 128.71586609]
[515.12408447 133.55398560]
[499.96218872 124.79444122]
[485.54327393 128.92900085]
[471.12432861 133.06356812]
[456.70541382 137.19812012]
[450.58529663 147.60638428]
[438.63436890 151.18278503]
[427.08410645 145.49462891]
[412.61807251 149.46113586]
[398.15200806 153.42764282]
[396.10592651 156.25811768]
[392.60342407 158.25306702]
[388.04522705 158.74580383]
[383.11166382 157.27070618]
[368.51599121 160.72993469]
[353.92031860 164.18917847]
[339.32464600 167.64842224]
[328.72476196 178.11227417]
[313.51223755 173.76606750]
[298.91656494 177.22531128]
[294.69262695 190.93896484]
[284.21853638 200.74708557]
[287.50772095 215.38201904]
[290.79687500 230.01695251]
[294.08605957 244.65188599]
[297.57461548 248.43949890]
[299.12991333 252.75239563]
[298.87228394 256.77493286]
[297.22521973 259.85473633]
[300.00161743 274.59555054]
[302.77804565 289.33636475]
[305.55447388 304.07717896]
[310.21737671 289.82034302]
[319.93539429 278.39404297]
[333.25875854 271.50289917]
[348.19985962 270.17492676]
[362.52975464 274.60827637]
[374.11065674 284.14151001]
[381.21490479 297.35247803]
[382.78265381 312.27032471]
[378.58004761 326.66955566]
[369.23403931 338.40206909]
[356.13885498 345.71759033]
[341.24813843 347.52474976]
[326.78323364 343.55392456]
[314.90213013 334.39755249]
[307.37753296 321.42239380]
[307.72656250 336.41833496]
[308.07559204 351.41427612]
[308.42465210 366.41021729]
[311.50381470 372.19610596]
[311.26153564 377.82937622]
[308.60324097 381.75823975]
[308.60324097 396.75823975]
[308.60324097 411.75823975]
[318.88500977 424.07345581]
[315.52612305 439.76095581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 267]
[4 266]
[5 265]
[6 262]
[7 261]
[8 260]
[9 259]
[10 244]
[11 243]
[12 242]
[13 241]
[14 237]
[15 236]
[16 235]
[17 234]
[21 150]
[22 149]
[23 148]
[24 147]
[27 144]
[28 143]
[29 142]
[30 141]
[37 113]
[38 112]
[39 111]
[40 109]
[41 108]
[42 107]
[43 106]
[44 104]
[45 103]
[46 102]
[47 101]
[48 100]
[49 99]
[50 98]
[51 97]
[52 96]
[54 94]
[55 93]
[57 78]
[58 77]
[59 76]
[60 71]
[61 70]
[62 69]
[63 68]
[79 90]
[80 89]
[81 88]
[116 125]
[117 124]
[118 123]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[153 232]
[154 231]
[156 229]
[157 228]
[158 227]
[159 226]
[160 222]
[161 221]
[162 220]
[164 217]
[165 216]
[166 215]
[167 214]
[171 211]
[172 210]
[173 209]
[174 205]
[175 204]
[176 203]
[177 202]
[178 201]
[179 200]
[180 199]
[181 198]
[184 195]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
