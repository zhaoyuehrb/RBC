%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGAAAGCGCAUGCGCGUCGGGCACAGCGCGUGCAGCCUCGUGCAGCUCUUCUGGUCUCCGGCGCCCGCCCCUCAGACGUAAUGUUGAAUUAAAGAAAAUACUUUAUCAGAAGAAGAUGGCCACUGCCCAGUUGCAGAGGACUCCCAUGAGUGCACUGGUAUUUCCCAAUAAGAUAUCAACUGAACACCAGUCUUUGGUGUUAGUGAAGAGGCUUC\
) } def
/len { sequence length } bind def

/coor [
[82.96367645 206.50463867]
[89.53086853 219.99063110]
[90.12356567 234.97892761]
[84.64179230 248.94137573]
[74.01018524 259.52291870]
[60.02200317 264.93872070]
[45.03668213 264.27526855]
[31.58184433 257.64447021]
[21.92695618 246.16479492]
[17.70053864 231.77252197]
[19.61647034 216.89241028]
[10.25211239 228.61029053]
[0.88775349 240.32817078]
[-8.47660542 252.04605103]
[-17.84096336 263.76394653]
[-27.20532227 275.48181152]
[-36.56968307 287.19970703]
[-45.93404007 298.91760254]
[-40.26281357 313.19110107]
[-42.50401688 328.38558960]
[-52.05477142 340.41381836]
[-66.34597778 346.04028320]
[-81.53337097 343.75146484]
[-93.53161621 334.16305542]
[-99.11325073 319.85427856]
[-96.77684021 304.67413330]
[-87.15086365 292.70599365]
[-72.82466888 287.16925049]
[-57.65192413 289.55322266]
[-48.28756332 277.83535767]
[-38.92320633 266.11746216]
[-29.55884743 254.39958191]
[-20.19448853 242.68170166]
[-10.83012962 230.96380615]
[-1.46577096 219.24592590]
[7.89858770 207.52804565]
[16.13123131 194.98916626]
[23.16063690 181.73822021]
[30.19004059 168.48727417]
[37.21944427 155.23634338]
[44.24884796 141.98539734]
[51.27825165 128.73445129]
[90.07801819 88.73511505]
[86.24771881 74.23239899]
[82.41741943 59.72968292]
[78.58712006 45.22696686]
[64.46917725 47.80434418]
[48.49533081 42.02244186]
[35.57686996 27.16073227]
[30.66710472 5.26684809]
[20.33008575 -5.60265255]
[9.99306679 -16.47215271]
[-0.34395215 -27.34165382]
[-10.68097115 -38.21115494]
[-21.01799011 -49.08065414]
[-31.35500908 -59.95015335]
[-43.71385574 -68.45068359]
[-57.56173325 -74.21577454]
[-71.40960693 -79.98086548]
[-85.25748444 -85.74595642]
[-102.49105072 -77.86602020]
[-119.71386719 -84.96905518]
[-126.15711212 -102.10839081]
[-140.16467285 -107.47386169]
[-154.17222595 -112.83933258]
[-170.27378845 -109.72937012]
[-180.81199646 -122.29432678]
[-174.94604492 -137.60845947]
[-158.71032715 -139.91790771]
[-148.80676270 -126.84689331]
[-134.79919434 -121.48142242]
[-120.79164124 -116.11594391]
[-111.63351440 -122.90835571]
[-100.21586609 -124.45509338]
[-89.35710907 -120.25770569]
[-81.79406738 -111.25018311]
[-79.49239349 -99.59383392]
[-65.64451599 -93.82874298]
[-51.79663849 -88.06365204]
[-37.94876099 -82.29856110]
[-32.29668427 -87.22846985]
[-42.15650177 -98.53262329]
[-52.01631927 -109.83678436]
[-61.87613678 -121.14094543]
[-71.73595428 -132.44509888]
[-81.59558868 -143.74942017]
[-70.29109955 -153.60887146]
[-60.43179703 -142.30491638]
[-50.57197952 -131.00076294]
[-40.71216202 -119.69660187]
[-30.85234261 -108.39244080]
[-20.99252510 -97.08828735]
[-15.34044552 -102.01819611]
[-19.17074585 -116.52091217]
[-23.00104523 -131.02363586]
[-26.83134460 -145.52635193]
[-30.66164398 -160.02906799]
[-44.44450760 -167.76263428]
[-48.64151382 -182.99946594]
[-40.76264954 -196.69978333]
[-25.48230743 -200.73547363]
[-11.86604214 -192.71218872]
[-7.99214411 -177.39004517]
[-16.15892601 -163.85935974]
[-12.32862663 -149.35664368]
[-8.49832726 -134.85392761]
[-4.66802835 -120.35121155]
[-0.83772874 -105.84849548]
[-5.13999796 -81.49959564]
[-20.48550797 -70.28717041]
[-10.14848995 -59.41767120]
[0.18852925 -48.54817200]
[10.52554798 -37.67867279]
[20.86256790 -26.80917168]
[31.19958687 -15.93967152]
[41.53660583 -5.07017088]
[49.02715302 -5.44657373]
[40.88474655 -18.04424095]
[47.72354126 -31.39455605]
[62.70465469 -32.14703369]
[70.84678650 -19.54919052]
[64.00825500 -6.19937897]
[71.49880219 -6.57578135]
[80.69410706 -18.42678833]
[83.04090881 -34.07297134]
[96.95597076 -39.38524628]
[106.15127563 -51.23625565]
[115.34658051 -63.08726120]
[124.54188538 -74.93826294]
[122.31492615 -90.58486938]
[131.87071228 -103.17304993]
[147.53999329 -105.23446655]
[160.02644348 -95.54611206]
[161.92207336 -79.85592651]
[152.10224915 -67.47260284]
[136.39289856 -65.74295807]
[127.19758606 -53.89195633]
[118.00228119 -42.04094696]
[108.80697632 -30.18994141]
[107.11788940 -15.39142036]
[92.54511261 -9.23148155]
[83.34980774 2.61952448]
[92.79797363 14.26994038]
[106.29243469 7.72017193]
[119.78689575 1.17040324]
[133.28135681 -5.37936544]
[142.02462769 -19.25334549]
[158.39877319 -18.34815407]
[165.55947876 -3.59497499]
[156.14042664 9.82938671]
[139.83113098 8.11509800]
[126.33666229 14.66486645]
[112.84220123 21.21463394]
[99.34774017 27.76440239]
[93.08983612 41.39666748]
[96.92013550 55.89938354]
[100.75043488 70.40209961]
[104.58073425 84.90481567]
[115.67012787 95.00557709]
[130.46647644 97.46891022]
[145.26283264 99.93224335]
[160.05918884 102.39557648]
[174.85552979 104.85890961]
[189.65188599 107.32224274]
[204.44822693 109.78557587]
[219.24458313 112.24890900]
[231.00857544 101.94636536]
[246.64367676 101.66758728]
[258.76745605 111.54421997]
[261.65545654 126.91280365]
[253.94404602 140.51676941]
[239.27430725 145.93275452]
[224.57284546 140.60346985]
[216.78125000 127.04525757]
[201.98489380 124.58192444]
[187.18855286 122.11859131]
[172.39219666 119.65525818]
[157.59585571 117.19192505]
[142.79949951 114.72859192]
[128.00314331 112.26525879]
[113.20679474 109.80192566]
[105.80016327 122.84576416]
[115.49681091 134.29019165]
[125.19345856 145.73463440]
[134.89010620 157.17906189]
[144.58676147 168.62348938]
[152.51695251 173.14442444]
[154.33898926 180.30233765]
[163.87046814 191.88468933]
[173.40196228 203.46704102]
[182.93344116 215.04939270]
[192.46493530 226.63174438]
[208.22955322 229.60765076]
[215.60430908 243.85519409]
[208.93191528 258.44488525]
[193.33085632 262.18472290]
[180.76893616 252.20587158]
[180.88258362 236.16322327]
[171.35108948 224.58087158]
[161.81961060 212.99851990]
[152.28813171 201.41616821]
[142.75663757 189.83383179]
[133.14233398 178.32014465]
[123.44567871 166.87570190]
[113.74903107 155.43127441]
[104.05238342 143.98684692]
[94.35573578 132.54241943]
[86.89910126 133.34777832]
[80.83741760 147.06842041]
[71.98583221 134.95849609]
[64.52919769 135.76385498]
[57.49979019 149.01480103]
[50.47038651 162.26574707]
[43.44098282 175.51667786]
[36.41157913 188.76762390]
[29.38217545 202.01856995]
[42.27140427 194.34603882]
[57.15754318 192.50135803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 36]
[12 35]
[13 34]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[37 216]
[38 215]
[39 214]
[40 213]
[41 212]
[42 211]
[43 158]
[44 157]
[45 156]
[46 155]
[50 116]
[51 115]
[52 114]
[53 113]
[54 112]
[55 111]
[56 110]
[57 80]
[58 79]
[59 78]
[60 77]
[63 72]
[64 71]
[65 70]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[123 142]
[124 141]
[126 139]
[127 138]
[128 137]
[129 136]
[143 154]
[144 153]
[145 152]
[146 151]
[159 181]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
[182 207]
[183 206]
[184 205]
[185 204]
[186 203]
[188 202]
[189 201]
[190 200]
[191 199]
[192 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
