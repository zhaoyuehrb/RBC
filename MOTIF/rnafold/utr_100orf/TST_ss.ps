%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCCAACUUCUCCAGCCGGCCGGGGCGAGCGCCAGCGCGGCGUCCGGGGCGAGUGACACGCAGAGCUGAAGCCAUGGUUCAUCAGGUGCUCUACCGGGCGCUGGUCUCCACCAAGUGGCUGGCGGAGUCCAUCAGGACUGGCAAGCUGGGGCCCGGCCUGCGGGUGCUGGACG\
) } def
/len { sequence length } bind def

/coor [
[106.96104431 116.26237488]
[99.58020782 117.59401703]
[92.86595154 131.00740051]
[86.15169525 144.42077637]
[79.43743896 157.83415222]
[72.72317505 171.24754333]
[77.48198700 186.07965088]
[70.48168945 199.58706665]
[56.31221390 204.03247070]
[49.59795761 217.44584656]
[53.27966690 233.06072998]
[43.25407791 245.58538818]
[27.21196175 245.41197205]
[17.45945930 232.67352295]
[21.47785378 217.14187622]
[36.18457794 210.73158264]
[42.89883804 197.31820679]
[37.96610260 183.31092834]
[44.58423615 169.61221313]
[59.30979919 164.53327942]
[66.02405548 151.11990356]
[72.73831177 137.70652771]
[79.45257568 124.29314423]
[86.16683197 110.87976074]
[87.10334778 95.90902710]
[82.11307526 81.76345825]
[77.12279510 67.61788177]
[72.13252258 53.47231293]
[59.37700653 49.08673859]
[51.59830475 38.30659866]
[51.46112823 25.20851707]
[58.79116821 14.58853245]
[54.05417633 0.35614392]
[49.31718063 -13.87624454]
[44.58018875 -28.10863304]
[39.84319305 -42.34102249]
[35.10620117 -56.57341003]
[30.36920738 -70.80580139]
[9.52558231 -74.79010773]
[-1.34794366 -100.32848358]
[-9.23103046 -113.09002686]
[-17.11411858 -125.85157013]
[-24.99720573 -138.61311340]
[-32.88029099 -151.37464905]
[-40.76337814 -164.13618469]
[-48.64646530 -176.89773560]
[-56.52955246 -189.65927124]
[-64.41264343 -202.42082214]
[-72.29573059 -215.18235779]
[-90.59631348 -216.27549744]
[-103.25736237 -233.99166870]
[-116.67073822 -240.70593262]
[-130.08412170 -247.42018127]
[-144.36175537 -241.04185486]
[-159.38470459 -245.38293457]
[-168.05958557 -258.39370728]
[-166.29039001 -273.93090820]
[-154.91247559 -284.65829468]
[-139.29814148 -285.51077271]
[-126.82000732 -276.08578491]
[-123.36985779 -260.83355713]
[-109.95648193 -254.11930847]
[-96.54310608 -247.40504456]
[-85.20685577 -257.22796631]
[-89.94385529 -271.46035767]
[-94.68084717 -285.69274902]
[-99.41783905 -299.92510986]
[-104.15483093 -314.15750122]
[-107.56343079 -316.96466064]
[-109.66989136 -320.37408447]
[-110.44554138 -323.89584351]
[-110.02597046 -327.08200073]
[-108.68249512 -329.57730103]
[-112.39208984 -344.11135864]
[-116.10169220 -358.64541626]
[-121.27205658 -366.21585083]
[-119.74532318 -373.47201538]
[-123.19490814 -388.06997681]
[-136.77073669 -396.16146851]
[-140.56770325 -411.50286865]
[-132.33312988 -424.99240112]
[-116.95243835 -428.62695312]
[-103.55072784 -420.25021362]
[-100.07899475 -404.83197021]
[-108.59695435 -391.51956177]
[-105.14736176 -376.92160034]
[-101.56762695 -362.35501099]
[-97.85803223 -347.82095337]
[-94.14843750 -333.28689575]
[-89.92244720 -318.89450073]
[-85.18545532 -304.66210938]
[-80.44845581 -290.42971802]
[-75.71146393 -276.19732666]
[-70.97447205 -261.96496582]
[-53.49885178 -243.53309631]
[-59.53418732 -223.06544495]
[-51.65110016 -210.30390930]
[-43.76801300 -197.54235840]
[-35.88492584 -184.78082275]
[-28.00183868 -172.01927185]
[-20.11875153 -159.25773621]
[-12.23566437 -146.49620056]
[-4.35257673 -133.73464966]
[3.53051043 -120.97311401]
[11.41359806 -108.21157074]
[18.75613594 -106.68280029]
[17.12627602 -121.59399414]
[30.80408096 -127.75171661]
[40.88696671 -116.64607239]
[33.44121170 -103.62526703]
[40.78374863 -102.09649658]
[53.10506058 -110.65133667]
[65.42637634 -119.20617676]
[74.98860168 -133.20617676]
[91.08856964 -127.89323425]
[90.44017029 -110.95169067]
[73.98120880 -106.88486481]
[61.65990067 -98.33002472]
[49.33858871 -89.77518463]
[44.60159683 -75.54279327]
[49.33858871 -61.31040573]
[54.07558441 -47.07801437]
[58.81257629 -32.84562683]
[63.54957199 -18.61323929]
[68.28656769 -4.38084984]
[73.02355957 9.85153866]
[88.36103058 16.71524620]
[94.11687469 32.86051941]
[86.27809906 48.48204041]
[91.26837158 62.62761307]
[96.25864410 76.77318573]
[101.24891663 90.91875458]
[111.25923157 84.41518402]
[126.29121399 87.09832001]
[139.32481384 101.28900909]
[150.30323792 111.51027679]
[161.28164673 121.73154449]
[176.65425110 125.47234344]
[180.69694519 139.80781555]
[191.67535400 150.02908325]
[202.65377808 160.25036621]
[218.02638245 163.99114990]
[222.06907654 178.32662964]
[233.04748535 188.54789734]
[244.02590942 198.76918030]
[259.39849854 202.50996399]
[263.44119263 216.84544373]
[274.41961670 227.06672668]
[285.39804077 237.28799438]
[296.37646484 247.50926208]
[307.35485840 257.73052979]
[323.06753540 264.09832764]
[321.29827881 280.95968628]
[304.60607910 283.92730713]
[297.13360596 268.70895386]
[286.15518188 258.48767090]
[275.17675781 248.26640320]
[264.19833374 238.04513550]
[253.21992493 227.82386780]
[238.63256836 224.81416321]
[233.80464172 209.74758911]
[222.82621765 199.52632141]
[211.84779358 189.30505371]
[197.26043701 186.29534912]
[192.43251038 171.22877502]
[181.45408630 161.00750732]
[170.47567749 150.78623962]
[155.88832092 147.77653503]
[151.06037903 132.70996094]
[140.08197021 122.48869324]
[129.10354614 112.26742554]
[121.72270966 113.59907532]
[131.40994263 125.05147552]
[126.33538818 139.16702271]
[111.57366943 141.83000183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[9 17]
[10 16]
[25 132]
[26 131]
[27 130]
[28 129]
[32 126]
[33 125]
[34 124]
[35 123]
[36 122]
[37 121]
[38 120]
[40 105]
[41 104]
[42 103]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 96]
[51 63]
[52 62]
[53 61]
[64 94]
[65 93]
[66 92]
[67 91]
[68 90]
[73 89]
[74 88]
[75 87]
[77 86]
[78 85]
[111 119]
[112 118]
[113 117]
[135 171]
[136 170]
[137 169]
[139 167]
[140 166]
[141 165]
[143 163]
[144 162]
[145 161]
[147 159]
[148 158]
[149 157]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
