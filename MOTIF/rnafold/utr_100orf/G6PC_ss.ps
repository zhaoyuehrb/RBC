%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCAGAGCAAUCACCACCAAGCCUGGAAUAACUGCAAGGGCUCUGCUGACAUCUUCCUGAGGUGCCAAGGAAAUGAGGAUGGAGGAAGGAAUGAAUGUUCUCCAUGACUUUGGGAUCCAGUCAACACAUUACCUCCAGGUGAAUUACCAAGACUCCCAGGACUGGUUCAUCUUGGUGU\
) } def
/len { sequence length } bind def

/coor [
[70.81916809 158.43234253]
[53.72065353 146.08775330]
[41.94694519 155.38182068]
[30.17323875 164.67590332]
[18.39953232 173.96997070]
[6.62582493 183.26405334]
[-5.14788198 192.55812073]
[-16.92158890 201.85220337]
[-28.69529724 211.14627075]
[-40.46900177 220.44035339]
[-27.81421471 212.38700867]
[-12.84681225 211.39863586]
[0.75707775 217.71798706]
[9.65622234 229.79296875]
[11.66491413 244.65786743]
[6.28980064 258.66171265]
[-5.14894342 268.36508179]
[-19.84186363 271.38470459]
[-34.18093109 266.97851562]
[-45.10476303 277.25811768]
[-56.02859116 287.53771973]
[-60.23138809 303.38916016]
[-76.12911224 307.41339111]
[-87.36754608 295.47064209]
[-82.38555145 279.84655762]
[-66.30818176 276.61386108]
[-55.38434982 266.33428955]
[-44.46052170 256.05468750]
[-48.13511276 249.51655579]
[-61.21140671 256.86575317]
[-76.21040344 256.69247437]
[-68.56059265 243.78944397]
[-55.48429871 236.44026184]
[-59.15889359 229.90211487]
[-73.61932373 233.88908386]
[-84.73947906 245.94204712]
[-100.67610168 242.07473755]
[-105.03495789 226.26548767]
[-93.33203125 214.77751160]
[-77.60629272 219.42864990]
[-63.14585876 215.44168091]
[-49.76307678 208.66664124]
[-37.98937225 199.37257385]
[-26.21566391 190.07849121]
[-14.44195652 180.78442383]
[-2.66824961 171.49034119]
[9.10545731 162.19627380]
[20.87916374 152.90219116]
[32.65287018 143.60812378]
[44.42657852 134.31404114]
[38.20951080 121.16114807]
[35.05817795 106.95833588]
[35.12893677 92.41028595]
[38.41827393 78.23880005]
[44.76299286 65.14699554]
[53.84829330 53.78443146]
[65.22341919 44.71484756]
[78.32398224 38.38824081]
[92.50000000 35.11849976]
[92.50000000 20.11850166]
[92.50000000 5.11850166]
[89.36380768 -3.49004745]
[92.63243103 -10.14127350]
[92.89277649 -25.13901329]
[93.15311432 -40.13675308]
[85.65649414 -54.06913757]
[93.61352539 -66.66020203]
[93.87386322 -81.65794373]
[94.13420105 -96.65568542]
[94.39454651 -111.65342712]
[94.65488434 -126.65116882]
[94.91522217 -141.64891052]
[87.39511871 -145.29029846]
[81.30842590 -150.96479797]
[77.18315125 -158.15286255]
[75.36909485 -166.20494080]
[76.00821686 -174.40013123]
[79.02375793 -182.01072693]
[84.12883759 -188.36686707]
[90.85362244 -192.91542053]
[98.58853149 -195.26815796]
[100.40651703 -210.15757751]
[102.22451019 -225.04699707]
[104.04250336 -239.93641663]
[105.86048889 -254.82583618]
[107.67848206 -269.71527100]
[109.49647522 -284.60467529]
[111.31446075 -299.49411011]
[98.68792725 -308.14450073]
[91.53797150 -321.67730713]
[91.50759888 -336.98278809]
[98.60379028 -350.54385376]
[111.19589996 -359.24426270]
[126.39034271 -361.08474731]
[140.69555664 -355.64236450]
[150.82429504 -344.16775513]
[154.44906616 -329.29766846]
[150.73690796 -314.44912720]
[140.54086304 -303.03427124]
[126.20388794 -297.67611694]
[124.38589478 -282.78671265]
[122.56790161 -267.89727783]
[120.74991608 -253.00785828]
[118.93192291 -238.11842346]
[117.11393738 -223.22900391]
[115.29594421 -208.33958435]
[113.47795105 -193.45016479]
[128.70722961 -177.68812561]
[127.36253357 -155.53762817]
[109.91296387 -141.38856506]
[109.65262604 -126.39082336]
[109.39228821 -111.39308167]
[109.13194275 -96.39534760]
[108.87160492 -81.39760590]
[108.61126709 -66.39986420]
[116.12650299 -53.54021835]
[108.15085602 -39.87641525]
[107.89051819 -24.87867355]
[107.63017273 -9.88093376]
[107.50000000 5.11850166]
[107.50000000 20.11850166]
[107.50000000 35.11849976]
[117.47109222 37.06654358]
[127.01944733 40.53733444]
[135.91403198 45.44689560]
[143.93963623 51.67643356]
[150.90206909 59.07521820]
[156.63287354 67.46422577]
[160.99337769 76.64047241]
[163.87806702 86.38193512]
[165.21714783 96.45289612]
[180.18948364 97.36357117]
[195.16181946 98.27424622]
[210.13414001 99.18492126]
[225.10647583 100.09559631]
[239.53057861 92.29321289]
[253.35604858 101.11298370]
[252.36042786 117.48188019]
[237.56793213 124.56098938]
[224.19580078 115.06793213]
[209.22346497 114.15725708]
[194.25114441 113.24658203]
[179.27880859 112.33590698]
[164.30647278 111.42523193]
[160.30484009 125.08358002]
[153.43962097 137.55084229]
[144.03683472 148.23500061]
[152.81143188 160.40078735]
[161.58604431 172.56657410]
[170.36064148 184.73236084]
[179.13523865 196.89816284]
[187.90983582 209.06394958]
[196.68443298 221.22973633]
[205.45903015 233.39552307]
[222.35961914 233.21871948]
[235.90686035 243.04463196]
[240.88751221 258.84777832]
[235.53079224 274.35192871]
[244.51521301 286.36358643]
[253.49964905 298.37524414]
[268.77716064 304.33587646]
[270.98605347 320.58560181]
[257.85397339 330.40805054]
[242.89010620 323.69876099]
[241.48797607 307.35968018]
[232.50355530 295.34802246]
[223.51911926 283.33633423]
[210.22933960 284.75814819]
[197.87609863 279.37811279]
[189.73510742 268.50598145]
[188.02267456 254.92286682]
[193.29324341 242.17012024]
[184.51864624 230.00433350]
[175.74404907 217.83854675]
[166.96945190 205.67276001]
[158.19485474 193.50697327]
[149.42025757 181.34118652]
[140.64564514 169.17538452]
[131.87104797 157.00959778]
[112.04333496 164.19358826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 50]
[3 49]
[4 48]
[5 47]
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[19 28]
[20 27]
[21 26]
[34 41]
[35 40]
[59 122]
[60 121]
[61 120]
[63 119]
[64 118]
[65 117]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
[72 110]
[81 107]
[82 106]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[147 179]
[148 178]
[149 177]
[150 176]
[151 175]
[152 174]
[153 173]
[154 172]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
