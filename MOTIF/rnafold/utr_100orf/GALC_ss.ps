%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAAAAUGGCGGCGGCGGCGUCAGCAUCAGCGGCCUCCUGCCCGUAUCUAUCGUGGCGGCGACGGGACCCGCCUCCCUGGGCGCCGGAGUCAUGUGACCCACACAAUGGCUGAGUGGCUACUCUCGGCUUCCUGGCAACGCCGAGCGAAAGCUAUGACUGCGGCCGCGGGUUCGGCGGGCCGCGCCGCGGUGCCCUUGCUGCUGU\
) } def
/len { sequence length } bind def

/coor [
[-165.26480103 783.71765137]
[-162.27473450 798.62158203]
[-165.22068787 813.53436279]
[-173.65339661 826.18176270]
[-186.28695679 834.63525391]
[-201.19483948 837.60571289]
[-216.10368347 834.64019775]
[-228.74002075 826.19085693]
[-237.17689514 813.54614258]
[-240.12774658 798.63439941]
[-237.14257812 783.72943115]
[-228.67662048 771.10424805]
[-216.02085876 762.68402100]
[-201.10522461 759.75280762]
[-198.17886353 745.04101562]
[-195.25251770 730.32922363]
[-192.32615662 715.61743164]
[-189.39979553 700.90563965]
[-186.47344971 686.19390869]
[-183.54708862 671.48211670]
[-180.62074280 656.77032471]
[-177.69438171 642.05853271]
[-187.92364502 631.26501465]
[-189.85864258 616.34124756]
[-182.54948425 602.98345947]
[-168.61531067 596.41497803]
[-165.68894958 581.70318604]
[-162.76260376 566.99139404]
[-159.83624268 552.27966309]
[-156.90989685 537.56787109]
[-158.68853760 530.39257812]
[-153.82664490 522.65673828]
[-150.67842102 507.99081421]
[-147.53021240 493.32492065]
[-144.38198853 478.65902710]
[-141.23377991 463.99310303]
[-148.50196838 457.97463989]
[-153.11174011 449.74063110]
[-168.10490417 450.19366455]
[-183.09420776 450.75994873]
[-198.07881165 451.43936157]
[-213.06341553 452.11880493]
[-228.04801941 452.79824829]
[-243.03262329 453.47769165]
[-258.01165771 454.27026367]
[-272.98431396 455.17596436]
[-282.14834595 467.84695435]
[-297.32568359 471.61282349]
[-311.35009766 464.69543457]
[-317.59963989 450.36096191]
[-313.12347412 435.37771606]
[-300.03515625 426.82031250]
[-284.51452637 428.72930908]
[-273.88998413 440.20330811]
[-258.91735840 439.29763794]
[-252.42901611 435.75512695]
[-243.71206665 438.49310303]
[-228.72746277 437.81365967]
[-213.74285889 437.13421631]
[-198.75825500 436.45477295]
[-183.77365112 435.77532959]
[-177.23254395 432.33120728]
[-168.55793762 435.20053101]
[-153.56478882 434.74746704]
[-146.57980347 422.46942139]
[-134.02095032 415.58840942]
[-119.52506256 416.32968140]
[-110.63513184 404.24792480]
[-109.20257568 396.99563599]
[-101.51856995 392.05218506]
[-92.44717407 380.10604858]
[-83.37578583 368.15994263]
[-74.30438995 356.21380615]
[-65.23300171 344.26770020]
[-56.16160583 332.32156372]
[-55.14658356 313.01342773]
[-36.44764328 305.48675537]
[-27.74119949 293.27209473]
[-19.03475380 281.05746460]
[-19.25529480 277.53619385]
[-17.77976990 273.73324585]
[-14.49442196 270.44760132]
[-9.64693165 268.49884033]
[-0.39614841 256.69107056]
[8.85463428 244.88331604]
[18.01598358 233.00604248]
[27.08737564 221.05992126]
[36.15876770 209.11380005]
[37.69366074 194.29849243]
[52.20149231 187.98713684]
[61.27288437 176.04100037]
[70.34427643 164.09487915]
[79.41567230 152.14875793]
[88.48706055 140.20263672]
[97.55845642 128.25651550]
[29.55953789 54.01579666]
[28.20205498 39.07735062]
[26.84457207 24.13890076]
[15.49047852 12.80469894]
[17.41587830 -3.12239742]
[31.14376640 -11.42448235]
[46.14328384 -5.73290777]
[50.90808487 9.58623886]
[41.78302002 22.78141785]
[43.14050293 37.71986771]
[44.49798584 52.65831375]
[51.84261703 54.17700195]
[61.81766510 42.97439575]
[66.53187561 57.21437454]
[73.87650299 58.73305893]
[81.04715729 45.55801773]
[88.21781158 32.38297272]
[95.38845825 19.20792961]
[102.55911255 6.03288651]
[109.72975922 -7.14215660]
[116.90041351 -20.31719971]
[110.11289215 -34.27102280]
[112.85666656 -49.54359055]
[124.07669830 -60.26229095]
[139.45866394 -62.30556107]
[153.08786011 -54.88772583]
[159.72361755 -40.86109161]
[156.81433105 -25.61918640]
[145.47868347 -15.02283478]
[130.07545471 -13.14654827]
[122.90480804 0.02849478]
[115.73415375 13.20353794]
[108.56350708 26.37858009]
[101.39285278 39.55362320]
[94.22219849 52.72866821]
[87.05155182 65.90370941]
[92.31465149 71.24691010]
[106.83243561 67.47412109]
[102.84085083 81.93331146]
[108.10395050 87.27650452]
[121.38578796 80.30565643]
[134.66763306 73.33481598]
[147.94947815 66.36396790]
[159.16445923 53.64938354]
[174.48675537 60.90633392]
[171.75505066 77.63876343]
[154.92031860 79.64580536]
[141.63847351 86.61665344]
[128.35664368 93.58750153]
[115.07479858 100.55834961]
[119.86061859 114.77439117]
[134.65406799 112.29370880]
[149.44752502 109.81303406]
[161.74681091 98.96592712]
[177.20193481 104.44961548]
[179.91401672 120.62295532]
[167.09306335 130.84819031]
[151.92820740 124.60648346]
[137.13475037 127.08716583]
[122.34130096 129.56784058]
[109.50457764 137.32791138]
[100.43318939 149.27403259]
[91.36179352 161.22015381]
[82.29039764 173.16627502]
[73.21900940 185.11239624]
[64.14761353 197.05851746]
[61.96387863 212.72830200]
[48.10489273 218.18519592]
[39.03349686 230.13131714]
[29.96210670 242.07743835]
[27.26361656 250.80668640]
[20.66238594 254.13410950]
[11.41160393 265.94186401]
[2.16082072 277.74960327]
[-6.82009840 289.76388550]
[-15.52654362 301.97854614]
[-24.23298836 314.19320679]
[-21.81676865 324.80145264]
[-25.56184387 334.78228760]
[-34.00511932 340.92395020]
[-44.21548462 341.39294434]
[-53.28687668 353.33908081]
[-62.35826874 365.28518677]
[-71.42966461 377.23132324]
[-80.50105286 389.17745972]
[-89.57244873 401.12356567]
[-98.55336761 413.13784790]
[-107.44329834 425.21963501]
[-102.33673859 443.09378052]
[-110.06663513 459.72540283]
[-126.56787109 467.14132690]
[-129.71609497 481.80725098]
[-132.86430359 496.47314453]
[-136.01252747 511.13903809]
[-139.16073608 525.80493164]
[-142.19810486 540.49420166]
[-145.12446594 555.20599365]
[-148.05082703 569.91778564]
[-150.97717285 584.62951660]
[-153.90353394 599.34130859]
[-143.54368591 610.74218750]
[-141.90269470 625.88024902]
[-149.40150452 638.92755127]
[-162.98260498 644.98492432]
[-165.90895081 659.69665527]
[-168.83531189 674.40844727]
[-171.76167297 689.12023926]
[-174.68801880 703.83203125]
[-177.61437988 718.54382324]
[-180.54072571 733.25555420]
[-183.46708679 747.96734619]
[-186.39344788 762.67913818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[26 195]
[27 194]
[28 193]
[29 192]
[30 191]
[32 190]
[33 189]
[34 188]
[35 187]
[36 186]
[38 64]
[39 63]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 55]
[46 54]
[67 183]
[68 182]
[70 181]
[71 180]
[72 179]
[73 178]
[74 177]
[75 176]
[77 172]
[78 171]
[79 170]
[83 169]
[84 168]
[85 167]
[86 165]
[87 164]
[88 163]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
[95 156]
[96 106]
[97 105]
[98 104]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[135 145]
[136 144]
[137 143]
[138 142]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
