%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCGGACCUCCGGAAACCGUAGAUUCCGGGCGGUCGGAGCCGCCGGGAGCUGUAGUUCUCCCGCGGCUCAGAGAAGUAGGCAGAGAGCGGACCUGGCGGCCGGGCAGCAUGGCGGGGCUGGAGCUCUUGUCGGACCAGGGCUACCGGGUGGACGGGCGGCGCGCCGGGGAGCUGCGCAAGAUCCAGGCGCGGAUGGGCGUGUUCGCGC\
) } def
/len { sequence length } bind def

/coor [
[107.97920990 194.76614380]
[91.59642029 194.03388977]
[84.28034210 179.35713196]
[93.55713654 165.83407593]
[94.22692108 150.84902954]
[94.89670563 135.86399841]
[80.80556488 130.72203064]
[71.66676331 142.61666870]
[62.52796173 154.51130676]
[53.38916016 166.40592957]
[44.33916092 178.36827087]
[35.37846375 190.39764404]
[26.41776657 202.42703247]
[17.45707130 214.45640564]
[8.49637508 226.48577881]
[-0.46432066 238.51515198]
[-9.42501640 250.54454041]
[-4.67770720 265.31756592]
[-9.55240154 280.04907227]
[-22.17468071 289.07446289]
[-37.69101715 288.92330933]
[-50.13507080 279.65371704]
[-54.72183990 264.83004761]
[-49.68762589 250.15229797]
[-36.96818161 241.26437378]
[-21.45439339 241.58384705]
[-12.49369812 229.55445862]
[-3.53300238 217.52508545]
[5.42769384 205.49571228]
[14.38838959 193.46632385]
[23.34908485 181.43695068]
[32.30978012 169.40757751]
[33.78458405 162.16555786]
[41.49452591 157.26713562]
[50.63332748 145.37249756]
[59.77213287 133.47785950]
[68.91093445 121.58323669]
[63.39178848 115.94496155]
[58.95133972 108.95144653]
[43.98499680 107.94718170]
[29.01865196 106.94292450]
[14.05230904 105.93865967]
[-0.91403574 104.93440247]
[-15.88037968 103.93014526]
[-30.84672356 102.92588043]
[-39.61862946 105.47372437]
[-46.02789307 101.79362488]
[-60.97762680 100.56665039]
[-75.92736053 99.33967590]
[-90.87709045 98.11269379]
[-105.82682800 96.88571930]
[-115.84134674 108.73853302]
[-130.91816711 112.40856171]
[-145.25993347 106.48461914]
[-153.35195923 93.24457550]
[-152.08270264 77.77950287]
[-141.94018555 66.03603363]
[-126.82444000 62.52976608]
[-112.54777527 68.60894012]
[-104.59985352 81.93598938]
[-89.65011597 83.16296387]
[-74.70038605 84.38993835]
[-59.75065231 85.61691284]
[-44.80091858 86.84388733]
[-29.84246445 87.95954132]
[-14.87611961 88.96379852]
[0.09022439 89.96805573]
[15.05656910 90.97232056]
[30.02291298 91.97657776]
[44.98925781 92.98084259]
[59.95560074 93.98509979]
[63.73778915 87.50859833]
[50.78479385 79.94422150]
[37.83179474 72.37984467]
[24.87879562 64.81546021]
[11.92591381 57.25088501]
[19.49069214 44.29811859]
[32.44317245 51.86246490]
[45.39617157 59.42684174]
[58.34917068 66.99121857]
[71.30216980 74.55560303]
[75.08435822 68.07910156]
[66.85555267 55.53770065]
[51.50305939 50.88146973]
[45.70544052 35.92262268]
[53.91013336 22.13630295]
[69.82319641 20.09819984]
[81.23749542 31.37176895]
[79.39694977 47.30889511]
[87.62576294 59.85029602]
[103.04263306 60.27480698]
[116.44778442 66.11076355]
[126.12927246 75.97156525]
[133.20637512 62.74604034]
[140.28347778 49.52051163]
[147.36059570 36.29498672]
[154.43769836 23.06945801]
[161.51480103 9.84393120]
[161.20382690 -5.97421932]
[174.03063965 -13.54536533]
[181.10774231 -26.77089310]
[188.18484497 -39.99642181]
[195.26194763 -53.22194672]
[194.24107361 -71.60779572]
[209.49792480 -80.27930450]
[216.37734985 -93.60873413]
[210.70153809 -102.64249420]
[209.29829407 -113.13716888]
[212.35438538 -123.19021606]
[219.25424194 -131.00717163]
[228.70260620 -135.22189331]
[238.96728516 -135.13507080]
[246.43501282 -148.14402771]
[253.90275574 -161.15296936]
[261.37051392 -174.16192627]
[268.83825684 -187.17088318]
[276.30596924 -200.17982483]
[283.77371216 -213.18878174]
[291.14440918 -226.25297546]
[298.41763306 -239.37165833]
[297.59194946 -255.75001526]
[311.50820923 -264.42581177]
[325.85055542 -256.47418213]
[325.86483765 -240.07502747]
[311.53634644 -232.09843445]
[304.26312256 -218.97973633]
[303.76907349 -211.60562134]
[296.78268433 -205.72103882]
[289.31494141 -192.71209717]
[281.84719849 -179.70314026]
[274.37945557 -166.69418335]
[266.91171265 -153.68522644]
[259.44396973 -140.67628479]
[251.97622681 -127.66732788]
[258.43130493 -109.28673553]
[249.14418030 -91.81525421]
[229.70677185 -86.72931671]
[222.82736206 -73.39988708]
[226.20544434 -61.78459167]
[220.58317566 -50.62332535]
[208.48747253 -46.14484406]
[201.41036987 -32.91931534]
[194.33326721 -19.69378662]
[187.25616455 -6.46825981]
[188.07333374 8.40391159]
[174.74032593 16.92103577]
[167.66322327 30.14656448]
[160.58612061 43.37209320]
[153.50901794 56.59761810]
[146.43190002 69.82314301]
[139.35479736 83.04867554]
[142.78585815 97.65099335]
[155.01234436 106.34082031]
[167.23883057 115.03064728]
[179.46531677 123.72046661]
[191.69180298 132.41029358]
[207.42269897 134.09837341]
[213.31430054 147.77821350]
[225.54078674 156.46804810]
[245.14596558 152.07301331]
[261.41168213 163.33934021]
[264.10534668 182.63334656]
[276.70767212 190.76855469]
[289.30999756 198.90377808]
[301.91229248 207.03898621]
[314.51461792 215.17420959]
[327.11691284 223.30941772]
[339.86709595 221.36122131]
[350.19613647 228.39649963]
[352.87377930 240.19297791]
[365.35354614 248.51492310]
[377.83334351 256.83685303]
[393.60754395 258.05581665]
[399.90380859 271.55419922]
[412.38360596 279.87612915]
[428.33401489 278.15429688]
[439.52227783 289.65219116]
[437.36578369 305.54965210]
[423.51876831 313.65148926]
[408.60348511 307.74267578]
[404.06167603 292.35592651]
[391.58187866 284.03399658]
[376.70034790 283.41027832]
[369.51141357 269.31665039]
[357.03161621 260.99472046]
[344.55181885 252.67277527]
[327.00381470 252.48663330]
[318.98168945 235.91172791]
[306.37939453 227.77651978]
[293.77706909 219.64129639]
[281.17477417 211.50608826]
[268.57244873 203.37086487]
[255.97013855 195.23565674]
[246.88848877 200.02047729]
[236.55941772 200.60842896]
[226.84292603 196.82652283]
[219.51658630 189.29470825]
[215.95040894 179.32527161]
[216.85096741 168.69451904]
[204.62448120 160.00469971]
[189.76809692 158.93818665]
[183.00198364 144.63677979]
[170.77549744 135.94696045]
[158.54901123 127.25713348]
[146.32252502 118.56730652]
[134.09603882 109.87747955]
[125.69920349 126.16117859]
[109.88174438 136.53378296]
[109.21195984 151.51881409]
[108.54217529 166.50386047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 37]
[8 36]
[9 35]
[10 34]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[82 90]
[83 89]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
[98 146]
[100 144]
[101 143]
[102 142]
[103 141]
[105 138]
[106 137]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 126]
[120 125]
[152 206]
[153 205]
[154 204]
[155 203]
[156 202]
[158 200]
[159 199]
[162 193]
[163 192]
[164 191]
[165 190]
[166 189]
[167 188]
[170 186]
[171 185]
[172 184]
[174 182]
[175 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
