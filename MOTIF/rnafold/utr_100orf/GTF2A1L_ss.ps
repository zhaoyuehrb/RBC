%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGACGUACAUCGUUCAAAACGUGCCCAGUGUUUCCCUCCGAGGGCACUGCGUGCCGCGCAGGCGCAAAGGGCCAGGUGCUGGAGGUGCUGUCAUGGCCUGCCUCAACCCGGUGCCUAAACUCUACAGAUCUGUAAUUGAAGAUGUAAUUGAAGGAGUUCGGAAUCUAUUUGCUGAAGAAGGUAUAGAGGAAC\
) } def
/len { sequence length } bind def

/coor [
[247.78602600 344.74597168]
[249.48046875 331.95138550]
[241.09700012 319.51284790]
[232.71354675 307.07427979]
[216.63165283 308.59100342]
[201.89291382 301.75445557]
[192.55659485 288.34326172]
[191.24649048 271.96075439]
[198.41416931 257.06707764]
[189.83242798 244.76449585]
[181.25067139 232.46191406]
[172.66891479 220.15933228]
[164.08717346 207.85675049]
[155.50541687 195.55416870]
[149.09216309 191.86219788]
[146.88658142 182.98492432]
[138.50311279 170.54637146]
[130.11964417 158.10781860]
[121.73618317 145.66926575]
[113.35272217 133.23071289]
[102.99564362 135.68756104]
[92.37391663 134.99169922]
[82.42590332 131.20458984]
[74.03041077 124.66082001]
[67.92912292 115.93846130]
[64.66104126 105.80807495]
[49.67838287 105.08706665]
[34.69572067 104.36605835]
[19.71305847 103.64505768]
[8.06913280 113.99187469]
[-7.11514616 113.04724121]
[-16.90750313 101.88277435]
[-31.89016533 101.16176605]
[-46.87282562 100.44076538]
[-54.50060272 108.21681976]
[-64.93552399 110.45816040]
[-74.67413330 106.65962982]
[-80.58169556 98.30352020]
[-95.53354645 97.10266113]
[-110.48540497 95.90180969]
[-124.86070251 102.50947571]
[-136.92770386 93.77810669]
[-151.87956238 92.57724762]
[-162.19622803 100.33219147]
[-174.63215637 99.01657867]
[-182.57101440 89.87930298]
[-197.50170898 88.43895721]
[-212.43238831 86.99861145]
[-227.36308289 85.55826569]
[-242.29376221 84.11791992]
[-258.64028931 88.61539459]
[-267.48718262 74.15272522]
[-256.03875732 61.64791107]
[-240.85342407 69.18723297]
[-225.92272949 70.62757874]
[-210.99205017 72.06792450]
[-196.06135559 73.50827026]
[-181.13067627 74.94861603]
[-165.58308411 66.82126617]
[-150.67871094 77.62539673]
[-135.72685242 78.82624817]
[-122.42100525 72.13269043]
[-109.28455353 80.94995880]
[-94.33269501 82.15081024]
[-79.38084412 83.35166168]
[-62.58147049 73.79184723]
[-46.15182114 85.45809937]
[-31.16915894 86.17910767]
[-16.18649673 86.90011597]
[-5.36734343 76.72752380]
[9.83747673 77.24529266]
[20.43406296 88.66239166]
[35.41672516 89.38339996]
[50.39938736 90.10440826]
[65.38204956 90.82540894]
[73.28229523 69.42707825]
[94.35498047 54.96103668]
[94.35498047 39.96103668]
[94.35498047 24.96103668]
[94.35498047 9.96103573]
[94.35498047 -5.03896379]
[94.35498047 -20.03896332]
[94.35498047 -35.03896332]
[94.35498047 -50.03896332]
[94.35498047 -65.03896332]
[93.87420654 -80.03125763]
[92.91315460 -95.00043488]
[91.95209503 -109.96961975]
[90.99104309 -124.93879700]
[89.79019165 -139.89065552]
[88.34984589 -154.82133484]
[86.90950012 -169.75202942]
[75.49269867 -181.02305603]
[77.32969666 -196.96058655]
[91.01131439 -205.33871460]
[106.04217529 -199.73045349]
[110.89189911 -184.43797302]
[101.84018707 -171.19236755]
[103.28053284 -156.26168823]
[104.72087860 -141.33099365]
[107.78112793 -137.64968872]
[108.55313873 -132.00350952]
[105.96022797 -125.89985657]
[106.92127991 -110.93067169]
[107.88233185 -95.96149445]
[108.84338379 -80.99230957]
[110.87037659 -79.03889465]
[112.24073792 -76.15991974]
[112.59620667 -72.60324097]
[111.67543030 -68.74238586]
[109.35498047 -65.03896332]
[109.35498047 -50.03896332]
[109.35498047 -35.03896332]
[109.35498047 -20.03896332]
[109.35498047 -5.03896379]
[109.35498047 9.96103573]
[109.35498047 24.96103668]
[109.35498047 39.96103668]
[109.35498047 54.96103668]
[115.79949951 58.79745483]
[115.99976349 43.79879379]
[129.08906555 36.47280884]
[141.97825623 44.14541245]
[141.77827454 59.14407730]
[128.68855286 66.47029877]
[135.13307190 70.30671692]
[148.31915283 63.15637970]
[161.50523376 56.00604248]
[174.69131470 48.85570526]
[182.80143738 34.60235977]
[199.19973755 34.76985550]
[207.01702881 49.18588638]
[198.21156311 63.02047348]
[181.84164429 62.04178238]
[168.65556335 69.19212341]
[155.46948242 76.34246063]
[142.28341675 83.49279785]
[139.81466675 107.95813751]
[125.79127502 124.84725189]
[134.17472839 137.28579712]
[142.55819702 149.72434998]
[150.94166565 162.16290283]
[159.32511902 174.60145569]
[167.80799866 186.97241211]
[176.38975525 199.27500916]
[184.97151184 211.57759094]
[193.55325317 223.88017273]
[202.13500977 236.18275452]
[210.71675110 248.48533630]
[224.57972717 246.56954956]
[237.85153198 250.79605103]
[247.95722961 260.28494263]
[252.96203613 273.14129639]
[251.94158936 286.83328247]
[245.15209961 298.69082642]
[253.53555298 311.12936401]
[261.91900635 323.56793213]
[278.64669800 331.25262451]
[279.19467163 348.78775024]
[287.77642822 361.09033203]
[296.35815430 373.39291382]
[304.93991089 385.69549561]
[314.38244629 386.10043335]
[322.45663452 390.74252319]
[327.40875244 398.46725464]
[328.23120117 407.46789551]
[324.86511230 415.70724487]
[332.84558105 428.40811157]
[340.82608032 441.10897827]
[348.80654907 453.80984497]
[356.78701782 466.51071167]
[362.46139526 469.94281006]
[365.13946533 474.97302246]
[364.81219482 479.74902344]
[372.38146973 492.69915771]
[379.95077515 505.64926147]
[395.29983521 509.41516113]
[403.41879272 522.97460938]
[399.49084473 538.28295898]
[385.84634399 546.25811768]
[370.58035278 542.16851807]
[362.74987793 528.44049072]
[367.00064087 513.21856689]
[359.43136597 500.26846313]
[351.86206055 487.31832886]
[344.08618164 474.49118042]
[336.10568237 461.79031372]
[328.12521362 449.08944702]
[320.14471436 436.38858032]
[312.16424561 423.68774414]
[293.14398193 415.69250488]
[292.63732910 394.27725220]
[284.05557251 381.97467041]
[275.47384644 369.67208862]
[266.89208984 357.36950684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 157]
[3 156]
[4 155]
[9 149]
[10 148]
[11 147]
[12 146]
[13 145]
[14 144]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[26 75]
[27 74]
[28 73]
[29 72]
[32 69]
[33 68]
[34 67]
[38 65]
[39 64]
[40 63]
[42 61]
[43 60]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
[85 111]
[86 106]
[87 105]
[88 104]
[89 103]
[90 100]
[91 99]
[92 98]
[126 137]
[127 136]
[128 135]
[129 134]
[159 195]
[160 194]
[161 193]
[162 192]
[167 190]
[168 189]
[169 188]
[170 187]
[171 186]
[174 185]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
