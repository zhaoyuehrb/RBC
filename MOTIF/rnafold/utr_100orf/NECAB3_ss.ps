%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCGUCGGCGCCGGCGCCAAGGGGCGGCCUCUAGCCACACCGAGUCCGCCGCGGCGUCCAGGGUCGGCAGCAACCGCAGCCGAGCCCGAGCGGGUGGCGGCGCCAUGGCGUGCGCGGGGCUGCUCACCGUGUGCCUGCUCCGGCCGCCCGCGCCCCAGCCCCAGCCCCAGACCCCGCGGCACCCCCAGCUCGCGCCCGACCCGG\
) } def
/len { sequence length } bind def

/coor [
[1.55027020 682.62194824]
[-6.19538403 668.16729736]
[2.67863107 654.37658691]
[2.90627408 639.37829590]
[-4.63698387 626.53509521]
[3.30885959 612.85394287]
[3.53650260 597.85565186]
[3.76414537 582.85736084]
[3.99178839 567.85913086]
[4.21943140 552.86083984]
[4.33325577 537.86126709]
[4.33325577 522.86126709]
[4.33325577 507.86126709]
[-3.40404439 495.13400269]
[4.33325577 481.33383179]
[4.33325577 466.33383179]
[4.33325577 451.33383179]
[-4.61663961 446.29586792]
[-10.71407604 437.93112183]
[-12.80381203 427.71060181]
[-10.44279480 417.46640015]
[-3.99200869 409.06341553]
[5.43691778 404.05981445]
[6.11963654 389.07534790]
[6.80235577 374.09088135]
[7.48507452 359.10644531]
[-0.52034581 353.97381592]
[-4.91857529 344.11831665]
[-18.72169685 349.98977661]
[-28.39211845 362.51147461]
[-43.13246536 360.37338257]
[-56.93558502 366.24484253]
[-70.73870850 372.11627197]
[-72.51924896 387.37161255]
[-81.70177460 399.68325806]
[-95.81623840 405.73947144]
[-111.06591797 403.91110229]
[-123.34872437 394.69003296]
[-129.36064148 380.55667114]
[-127.48451233 365.31280518]
[-118.22498322 353.05895996]
[-104.07283020 347.09133911]
[-88.83491516 349.01525879]
[-76.61015320 358.31317139]
[-62.80702972 352.44171143]
[-49.00391006 346.57028198]
[-40.32077789 334.46850586]
[-24.59313965 336.18664551]
[-10.79001808 330.31521606]
[-0.30483168 319.58856201]
[5.25088692 305.65536499]
[10.80660534 291.72216797]
[16.36232376 277.78897095]
[21.91804123 263.85577393]
[27.47376060 249.92257690]
[33.02947998 235.98937988]
[30.55639839 221.30151367]
[42.85474777 211.34857178]
[48.41046524 197.41537476]
[53.96618271 183.48217773]
[47.86641312 169.94229126]
[53.30221558 155.73291016]
[67.54544830 149.42671204]
[73.10116577 135.49351501]
[78.65688324 121.56031036]
[84.21260071 107.62711334]
[80.71645355 93.04023743]
[69.44824219 83.13935852]
[58.18003464 73.23847961]
[46.91182327 63.33759689]
[31.43786812 60.04104233]
[26.98403549 45.82793045]
[15.71582508 35.92704773]
[-0.46248385 33.24481583]
[-5.97467136 17.79982376]
[4.84972811 5.48055363]
[20.87549973 8.96001625]
[25.61670494 24.65883827]
[36.88491440 34.55971909]
[51.55289459 37.14809418]
[56.81270599 52.06938934]
[68.08091736 61.97026825]
[79.34912872 71.87114716]
[90.61734009 81.77202606]
[96.64456940 77.30857086]
[114.72627258 63.91819763]
[108.54214478 50.25230408]
[94.90856171 41.13871765]
[96.25421143 24.79487419]
[111.19481659 18.03391647]
[124.36074829 27.81093979]
[122.20803833 44.06818008]
[128.39216614 57.73406982]
[143.18362427 60.22662354]
[153.50480652 49.34209061]
[163.82600403 38.45755768]
[174.06430054 27.49501991]
[184.21911621 16.45510483]
[194.37393188 5.41518879]
[197.88191223 -3.02226758]
[204.76760864 -5.71372509]
[215.08879089 -16.59825706]
[225.40998840 -27.48278999]
[235.73117065 -38.36732101]
[246.05236816 -49.25185394]
[245.13555908 -60.09410095]
[250.23377991 -69.45742798]
[259.45074463 -74.36426544]
[269.62789917 -73.40671539]
[280.27465820 -83.97299957]
[290.92144775 -94.53927612]
[301.56820679 -105.10556030]
[305.45657349 -113.37461090]
[312.45764160 -115.74987793]
[323.26354980 -126.15336609]
[327.27694702 -134.36244202]
[334.31326294 -136.63119507]
[345.27578735 -146.86949158]
[356.23834229 -157.10778809]
[367.20086670 -167.34608459]
[378.16342163 -177.58438110]
[389.12594604 -187.82267761]
[394.08447266 -205.55516052]
[411.32022095 -208.84907532]
[422.12609863 -219.25256348]
[426.70132446 -234.39778137]
[441.23629761 -237.65109253]
[452.04220581 -248.05458069]
[459.25906372 -263.39581299]
[475.99856567 -260.70785522]
[478.04962158 -243.87841797]
[462.44567871 -237.24867249]
[451.63980103 -226.84518433]
[447.83746338 -212.44409180]
[432.52960205 -208.44665527]
[421.72369385 -198.04316711]
[421.18014526 -185.95686340]
[412.25997925 -177.20104980]
[399.36425781 -176.86013794]
[388.40170288 -166.62184143]
[377.43917847 -156.38354492]
[366.47662354 -146.14524841]
[355.51409912 -135.90695190]
[344.55154419 -125.66865540]
[333.66702271 -115.34746552]
[322.86111450 -104.94397736]
[312.13449097 -94.45879364]
[301.48770142 -83.89250946]
[290.84094238 -73.32622528]
[280.19418335 -62.75994492]
[276.50085449 -43.78163528]
[256.93688965 -38.93066406]
[246.61570740 -28.04613304]
[236.29450989 -17.16160011]
[225.97332764 -6.27706814]
[215.65213013 4.60746431]
[205.41383362 15.57000351]
[195.25901794 26.60991859]
[185.10420227 37.64983368]
[182.88891602 44.70315170]
[174.71052551 48.77874756]
[164.38934326 59.66328049]
[154.06814575 70.54781342]
[144.20539856 110.70800781]
[116.51937866 124.31799316]
[98.14579773 113.18283081]
[92.59008026 127.11602783]
[87.03436279 141.04922485]
[81.47864532 154.98242188]
[87.47487640 169.35890198]
[81.64210510 183.41000366]
[67.89938354 189.03788757]
[62.34366226 202.97108459]
[56.78794479 216.90428162]
[58.86363983 232.58874512]
[46.96267700 241.54508972]
[41.40695953 255.47828674]
[35.85123825 269.41149902]
[30.29552078 283.34469604]
[24.73980331 297.27789307]
[19.18408394 311.21109009]
[13.62836552 325.14428711]
[33.08832169 340.72027588]
[22.46953011 359.78915405]
[21.78680992 374.77362061]
[21.10409164 389.75805664]
[20.42137337 404.74252319]
[34.73488617 418.83813477]
[34.08258057 438.61105347]
[19.33325577 451.33383179]
[19.33325577 466.33383179]
[19.33325577 481.33383179]
[27.07055664 495.13400269]
[19.33325577 507.86126709]
[19.33325577 522.86126709]
[19.33325577 537.86126709]
[22.46345711 546.44604492]
[19.21770287 553.08850098]
[18.99006081 568.08673096]
[18.76241875 583.08502197]
[18.53477478 598.08331299]
[18.30713272 613.08154297]
[25.83410645 626.99755859]
[17.90454674 639.60595703]
[17.67690277 654.60424805]
[26.12829781 668.65789795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 196]
[12 195]
[13 194]
[15 192]
[16 191]
[17 190]
[23 187]
[24 186]
[25 185]
[26 184]
[28 49]
[29 48]
[31 46]
[32 45]
[33 44]
[50 182]
[51 181]
[52 180]
[53 179]
[54 178]
[55 177]
[56 176]
[58 174]
[59 173]
[60 172]
[63 169]
[64 168]
[65 167]
[66 166]
[67 84]
[68 83]
[69 82]
[70 81]
[72 79]
[73 78]
[86 93]
[87 92]
[94 163]
[95 162]
[96 161]
[97 159]
[98 158]
[99 157]
[101 156]
[102 155]
[103 154]
[104 153]
[105 152]
[109 150]
[110 149]
[111 148]
[112 147]
[114 146]
[115 145]
[117 144]
[118 143]
[119 142]
[120 141]
[121 140]
[122 139]
[124 136]
[125 135]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
