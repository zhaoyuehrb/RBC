%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGCAGCAGGUUAGGCAGUGAGAAGUUAGUGGCGCUGCUGGGACGGGGGAAAGGAGACGCUUCUUCCUCUUGCUGCUCUUCUCGUUCCCGAGAUCAGCGGCGGCGGUGACCGCGAGUGGGUCGGCACCGUCUCCGGCUCCGGGUGCGAACAAUGCUGACUGAUAGCGGAGGCGGCGGCACCUCCUUUGAGGAGGACCUGGACUCUGUGGCUCCGCGAUCCGCCCCAGCUGGGGCCUCGGAGCCGCCUCCGC\
) } def
/len { sequence length } bind def

/coor [
[92.93465424 257.59536743]
[101.42616272 243.56590271]
[101.24137115 228.56703186]
[101.05657196 213.56817627]
[100.87178040 198.56932068]
[100.68698120 183.57044983]
[100.50218964 168.57159424]
[93.49208832 165.90541077]
[92.75300598 180.88719177]
[78.27604675 184.81372070]
[70.06822205 172.25857544]
[79.47189331 160.57304382]
[72.46179199 157.90686035]
[62.35636139 168.99200439]
[52.25092697 180.07713318]
[48.71573639 198.16194153]
[31.77783203 202.79792786]
[21.80973053 214.00671387]
[11.84162712 225.21549988]
[1.87352479 236.42428589]
[-8.09457779 247.63308716]
[-18.06268120 258.84185791]
[-28.03078270 270.05065918]
[-22.10821724 284.11785889]
[-22.88427162 299.36123657]
[-30.20486069 312.75421143]
[-42.61647797 321.63757324]
[-57.65478516 324.24758911]
[-72.33391571 320.06597900]
[-83.73931885 309.92300415]
[-89.60644531 295.83261108]
[-88.77036285 280.59240723]
[-81.39709473 267.22836304]
[-68.95059204 258.39392090]
[-53.90212250 255.84317017]
[-39.23957062 260.08255005]
[-29.27146912 248.87376404]
[-19.30336571 237.66497803]
[-9.33526325 226.45619202]
[0.63283944 215.24740601]
[10.60094166 204.03862000]
[20.56904411 192.82981873]
[20.17048073 180.75744629]
[28.35889053 171.34019470]
[41.16579056 169.97169495]
[51.27122498 158.88656616]
[61.37666321 147.80143738]
[54.77342606 134.33305359]
[39.82149506 135.53295898]
[24.86956596 136.73287964]
[9.91763592 137.93280029]
[-5.03429413 139.13270569]
[-19.98622322 140.33262634]
[-34.93815231 141.53253174]
[-43.21463776 145.32911682]
[-50.08148575 142.65397644]
[-65.04706573 143.66958618]
[-80.01264191 144.68521118]
[-94.97821808 145.70083618]
[-110.37162018 152.80572510]
[-121.46017456 139.98074341]
[-112.20600891 125.77522278]
[-95.99383545 130.73526001]
[-81.02825928 129.71963501]
[-66.06268311 128.70401001]
[-51.09710693 127.68839264]
[-36.13806915 126.58060455]
[-21.18613815 125.38069153]
[-6.23420811 124.18077850]
[8.71772194 122.98086548]
[23.66965103 121.78095245]
[38.62158203 120.58103943]
[53.57351303 119.38111877]
[55.29875565 99.40066528]
[64.33372498 83.97482300]
[52.25301361 75.08346558]
[40.17229843 66.19210052]
[28.09158516 57.30073547]
[16.01086998 48.40937042]
[3.93015695 39.51800537]
[-11.49407864 41.69302750]
[-23.61897850 32.50382614]
[-25.59747505 17.78577042]
[-37.67818832 8.89440632]
[-49.75890350 0.00304224]
[-61.83961487 -8.88832188]
[-73.92033386 -17.77968597]
[-90.26976776 -19.05554581]
[-97.09445953 -33.96714020]
[-87.37374115 -47.17470169]
[-71.10745239 -45.09141922]
[-65.02896881 -29.86039925]
[-52.94825363 -20.96903610]
[-40.86753845 -12.07767200]
[-28.78682518 -3.18630743]
[-16.70611191 5.70505667]
[-2.06527877 3.21876979]
[10.31294346 12.06378269]
[12.82152081 27.43729210]
[24.90223503 36.32865524]
[36.98294830 45.22002029]
[49.06366348 54.11138535]
[61.14437485 63.00275040]
[73.22509003 71.89411163]
[85.88009644 63.84111404]
[82.94241333 49.13159180]
[80.00473022 34.42206955]
[77.06705475 19.71254921]
[74.12937164 5.00302744]
[71.19168854 -9.70649433]
[68.25400543 -24.41601562]
[63.51693344 -32.19253922]
[65.37191010 -39.32479477]
[62.61566925 -54.06938934]
[59.76865387 -68.79673004]
[56.83097076 -83.50624847]
[43.54599762 -92.06691742]
[40.28711700 -107.53156281]
[48.98776245 -120.72528076]
[64.48600006 -123.82048035]
[77.58699799 -114.98082733]
[80.51816559 -99.45073700]
[71.54049683 -86.44393158]
[74.47817230 -71.73441315]
[78.85771179 -65.80738068]
[77.36026764 -56.82563400]
[80.11650848 -42.08103561]
[82.96352386 -27.35369682]
[85.90120697 -12.64417648]
[88.83889008 2.06534553]
[91.77657318 16.77486801]
[94.71425629 31.48438835]
[97.65193939 46.19390869]
[100.58961487 60.90343094]
[125.64184570 66.85835266]
[143.09901428 88.12416077]
[144.21389771 117.38053131]
[126.41744995 142.81547546]
[141.41488647 143.09265137]
[156.41232300 143.36984253]
[171.40977478 143.64701843]
[186.40721130 143.92420959]
[201.40464783 144.20138550]
[216.40208435 144.47857666]
[231.39952087 144.75575256]
[246.39695740 145.03294373]
[244.82191467 117.16313171]
[273.54296875 100.77500153]
[282.35974121 88.63974762]
[291.17654419 76.50449371]
[290.09710693 60.49779510]
[302.03536987 49.78064728]
[317.83331299 52.57432938]
[325.37210083 66.73577118]
[318.86862183 81.40151978]
[303.31179810 85.32127380]
[294.49499512 97.45652771]
[285.67822266 109.59178162]
[288.93829346 116.34618378]
[299.77111816 105.97072601]
[312.98626709 113.06716919]
[310.32083130 127.82845306]
[295.45843506 129.85498047]
[298.71853638 136.60939026]
[313.70458984 137.25598145]
[328.69064331 137.90257263]
[342.81152344 130.76734924]
[355.19342041 139.04608154]
[370.17947388 139.69268799]
[385.16552734 140.33927917]
[400.15158081 140.98588562]
[415.13766479 141.63247681]
[423.81796265 138.88175964]
[430.30401611 142.38047791]
[445.28097534 143.21165466]
[459.48867798 136.25093079]
[471.76766968 144.68157959]
[486.74459839 145.51275635]
[501.72155762 146.34391785]
[516.69854736 147.17509460]
[531.69140625 147.63702393]
[546.69110107 147.72941589]
[561.69000244 147.54461670]
[576.68286133 147.08270264]
[591.67578125 146.62077332]
[606.66864014 146.15884399]
[621.66149902 145.69691467]
[636.65441895 145.23500061]
[652.29980469 138.70375061]
[662.90692139 151.92971802]
[653.13415527 165.78358459]
[637.11633301 160.22787476]
[622.12347412 160.68980408]
[607.13055420 161.15173340]
[592.13769531 161.61366272]
[577.14477539 162.07557678]
[562.15191650 162.53750610]
[559.49560547 164.81588745]
[555.61346436 165.93528748]
[551.05554199 165.33776855]
[546.59869385 162.72914124]
[531.59899902 162.63673401]
[529.52166748 164.47918701]
[526.59942627 165.62158203]
[523.09112549 165.74177551]
[519.36602783 164.61561584]
[515.86737061 162.15205383]
[500.89038086 161.32087708]
[485.91345215 160.48970032]
[470.93649292 159.65853882]
[457.80001831 166.67871094]
[444.44979858 158.18861389]
[429.47283936 157.35743713]
[414.49105835 156.61853027]
[399.50500488 155.97193909]
[384.51895142 155.32533264]
[369.53286743 154.67874146]
[354.54681396 154.03215027]
[341.49786377 161.21362305]
[328.04403687 152.88864136]
[313.05798340 152.24203491]
[298.07192993 151.59544373]
[284.72442627 158.82441711]
[271.68374634 158.61166382]
[280.19888306 170.96046448]
[288.71398926 183.30924988]
[297.22912598 195.65805054]
[305.74423218 208.00683594]
[320.78085327 214.55148315]
[322.36221313 230.87420654]
[308.86157227 240.18359375]
[294.16720581 232.90293884]
[293.39544678 216.52195740]
[284.88031006 204.17317200]
[276.36520386 191.82437134]
[267.85009766 179.47558594]
[259.33496094 167.12678528]
[246.11978149 160.03038025]
[231.12234497 159.75320435]
[216.12490845 159.47601318]
[201.12745667 159.19883728]
[186.13002014 158.92164612]
[171.13258362 158.64447021]
[156.13514709 158.36727905]
[141.13771057 158.09010315]
[126.14026642 157.81291199]
[115.50105286 168.38679504]
[115.68584442 183.38566589]
[115.87063599 198.38452148]
[116.05543518 213.38337708]
[116.24022675 228.38224792]
[116.42502594 243.38110352]
[125.25960541 257.19711304]
[117.47268677 271.62957764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 252]
[3 251]
[4 250]
[5 249]
[6 248]
[7 247]
[13 47]
[14 46]
[15 45]
[17 42]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[54 67]
[56 66]
[57 65]
[58 64]
[59 63]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[80 99]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[113 127]
[114 126]
[115 124]
[116 123]
[138 246]
[139 245]
[140 244]
[141 243]
[142 242]
[143 241]
[144 240]
[145 239]
[146 238]
[148 158]
[149 157]
[150 156]
[164 222]
[165 221]
[166 220]
[168 218]
[169 217]
[170 216]
[171 215]
[172 214]
[174 213]
[175 212]
[177 210]
[178 209]
[179 208]
[180 207]
[181 202]
[182 201]
[183 197]
[184 196]
[185 195]
[186 194]
[187 193]
[188 192]
[224 237]
[225 236]
[226 235]
[227 234]
[228 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
