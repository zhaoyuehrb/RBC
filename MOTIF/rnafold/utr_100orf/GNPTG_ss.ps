%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUUCCGGUCCCCGUGGUCACGUGACCGUCACUUCACGUGACCGCGCGGCGGCCGCUGCGGCGCGAUGGCGGCGGGGCUGGCGCGGCUCCUGUUGCUCCUCGGGCUCUCGGCCGGCGGGCCCGCGCCGGCAGGUGCAGCGAAGAUGAAGGUGGUGGAGGAGCCCA\
) } def
/len { sequence length } bind def

/coor [
[112.62124634 219.05780029]
[110.10865784 204.26974487]
[107.59606171 189.48167419]
[105.08346558 174.69360352]
[102.57087708 159.90554810]
[92.81099701 148.65414429]
[98.12736511 133.75289917]
[95.61476898 118.96483612]
[82.62438965 111.46483612]
[68.56124878 116.68289948]
[54.49811554 121.90096283]
[40.43497849 127.11902618]
[26.42124367 132.46835327]
[12.45813751 137.94847107]
[-1.45311999 143.55889893]
[-15.31131268 149.29914856]
[-29.16950607 155.03939819]
[-43.02769852 160.77964783]
[-56.88589096 166.51989746]
[-70.74408722 172.26014709]
[-84.60227966 178.00039673]
[-98.46047211 183.74066162]
[-112.31866455 189.48091125]
[-126.17685699 195.22116089]
[-140.03504944 200.96141052]
[-153.89324951 206.70166016]
[-167.75143433 212.44190979]
[-171.24273682 227.56111145]
[-182.97618103 237.71524048]
[-198.43998718 238.99981689]
[-211.68803406 230.92088318]
[-217.62615967 216.58497620]
[-213.97103882 201.50453186]
[-202.12814331 191.47830200]
[-186.65130615 190.36155701]
[-173.49168396 198.58372498]
[-159.63349915 192.84347534]
[-145.77529907 187.10321045]
[-131.91711426 181.36296082]
[-118.05891418 175.62271118]
[-104.20072174 169.88246155]
[-90.34252930 164.14221191]
[-76.48433685 158.40196228]
[-62.62614441 152.66171265]
[-48.76795197 146.92146301]
[-34.90975571 141.18119812]
[-21.05156517 135.44094849]
[-7.19337130 129.70069885]
[-2.19622064 124.21293640]
[6.97802258 123.98535919]
[20.94112778 118.50524139]
[26.04001999 113.11187744]
[35.21691513 113.05589294]
[49.28005219 107.83782959]
[63.34318924 102.61976624]
[77.40632629 97.40170288]
[84.36650848 87.52593994]
[94.27128601 83.72073364]
[103.17613983 85.83629608]
[111.85620880 73.60288239]
[120.53628540 61.36947250]
[122.21180725 45.63723755]
[135.88694763 39.73472595]
[144.56701660 27.50131416]
[153.24708557 15.26790047]
[161.92715454 3.03448772]
[160.54264832 -9.81652641]
[168.05834961 -19.83474350]
[179.99343872 -21.95886421]
[188.90074158 -34.02783203]
[190.87014771 -49.72598648]
[204.65327454 -55.37175369]
[213.56057739 -67.44071960]
[222.46788025 -79.50968933]
[231.37518311 -91.57865143]
[240.28248596 -103.64762115]
[249.07655334 -115.79933929]
[257.75662231 -128.03276062]
[266.43667603 -140.26617432]
[275.11676025 -152.49958801]
[283.79684448 -164.73300171]
[285.47235107 -180.46522522]
[299.14749146 -186.36773682]
[307.82757568 -198.60115051]
[310.25680542 -207.45086670]
[316.78607178 -210.98010254]
[325.69338989 -223.04907227]
[334.60067749 -235.11804199]
[343.50799561 -247.18701172]
[352.41528320 -259.25598145]
[360.74884033 -271.72802734]
[368.49044800 -284.57589722]
[376.23202515 -297.42376709]
[383.97363281 -310.27163696]
[377.80465698 -324.50970459]
[381.21560669 -339.64724731]
[392.89495850 -349.86352539]
[408.35174561 -351.23019409]
[421.64248657 -343.22174072]
[427.65664673 -328.91757202]
[424.08166504 -313.81793213]
[412.29220581 -303.72894287]
[396.82150269 -302.53002930]
[389.07989502 -289.68215942]
[381.33831787 -276.83428955]
[373.59671021 -263.98641968]
[388.57632446 -264.76846313]
[398.66995239 -253.67257690]
[396.47750854 -238.83366394]
[383.60638428 -231.13079834]
[369.49298096 -236.21128845]
[364.48425293 -250.34867859]
[355.57696533 -238.27970886]
[346.66964722 -226.21073914]
[337.76235962 -214.14176941]
[328.85504150 -202.07279968]
[320.06097412 -189.92108154]
[311.38092041 -177.68766785]
[310.32623291 -162.83044434]
[296.03024292 -156.05291748]
[287.35015869 -143.81951904]
[278.67010498 -131.58610535]
[269.99002075 -119.35268402]
[261.30996704 -107.11927032]
[259.99841309 -99.81400299]
[252.35145569 -94.74031830]
[243.44415283 -82.67134857]
[234.53684998 -70.60238647]
[225.62954712 -58.53341675]
[216.72224426 -46.46445084]
[215.38993835 -31.62955093]
[200.96971130 -25.12052917]
[192.06240845 -13.05156231]
[191.06069946 4.45104790]
[174.16056824 11.71455669]
[165.48049927 23.94796944]
[156.80043030 36.18138504]
[148.12036133 48.41479492]
[147.06570435 63.27201462]
[132.76969910 70.04954529]
[124.08962250 82.28295135]
[115.40955353 94.51636505]
[127.86135864 86.15259552]
[142.86116028 86.23047638]
[155.22543335 94.72309875]
[160.68144226 108.69564819]
[157.34371948 123.31958771]
[146.36570740 133.54129028]
[131.54110718 135.82843018]
[117.99287415 129.39060974]
[110.40283203 116.45224762]
[112.91542816 131.24031067]
[122.85502625 143.54945374]
[117.35894012 157.39294434]
[119.87153625 172.18101501]
[122.38412476 186.96908569]
[124.89672089 201.75714111]
[127.40931702 216.54521179]
[141.83663940 221.81282043]
[151.68496704 233.59866333]
[154.30511475 248.73242188]
[148.99230957 263.14315796]
[137.17565918 272.95449829]
[122.03376770 275.52719116]
[107.63974762 270.16925049]
[97.86550140 258.32189941]
[95.34027100 243.17201233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[7 152]
[8 151]
[9 56]
[10 55]
[11 54]
[12 53]
[13 51]
[14 50]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[59 142]
[60 141]
[61 140]
[63 138]
[64 137]
[65 136]
[66 135]
[69 133]
[70 132]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[83 118]
[84 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 106]
[92 105]
[93 104]
[94 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
