%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACUUCCGCCCAUCCCCCUCCGGAUCCCUCUGUUCGGGCUCGGGUUUCCGCCGAGACGACAGGGACUGCCAGGUCGGAAGUAGUGUGAGGCUCGUGGGCGGAGCCAAGCGCCGCCAUGUCCGCCGCCCUGCUGCGGCGGGGCCUGGAGCUGCUGGCGGCGUCCGAGGCCCCCCGGGACCCUCCAGGUCAGGCCAAGCCGAGAGGGGCUCCGGUGA\
) } def
/len { sequence length } bind def

/coor [
[80.52090454 336.89569092]
[77.72717285 351.63320923]
[74.93344116 366.37075806]
[84.03784180 379.28918457]
[81.25865173 394.84719849]
[68.24470520 403.81448364]
[52.71694565 400.87097168]
[43.88772583 387.76293945]
[46.99525833 372.26718140]
[60.19590378 363.57702637]
[62.98963165 348.83950806]
[65.78336334 334.10195923]
[68.36443329 319.32568359]
[70.73229218 304.51376343]
[73.10015869 289.70184326]
[75.46802521 274.88989258]
[77.40805817 260.01589966]
[78.91864777 245.09214783]
[80.42922974 230.16839600]
[81.93981934 215.24465942]
[83.45040894 200.32090759]
[84.96099091 185.39717102]
[86.36400604 170.46293640]
[87.65938568 155.51896667]
[88.95475769 140.57499695]
[81.57849884 137.80180359]
[74.84915924 133.70109558]
[69.00306702 128.41687012]
[64.24552155 122.13471222]
[60.74359131 115.07523346]
[46.00605011 117.86896515]
[31.26851082 120.66269684]
[16.53097153 123.45642853]
[1.79343224 126.25016022]
[-12.94410706 129.04388428]
[-20.78787422 133.71459961]
[-27.91405869 131.77008057]
[-42.69032669 134.35115051]
[-50.72763443 144.43461609]
[-63.08422852 146.28253174]
[-73.05821228 139.44387817]
[-87.87014008 141.81175232]
[-102.68206787 144.17961121]
[-117.49399567 146.54748535]
[-132.30592346 148.91534424]
[-140.18478394 162.42303467]
[-154.92030334 167.65739441]
[-169.55480957 162.14692688]
[-177.17834473 148.49351501]
[-174.19129944 133.14385986]
[-162.00407410 123.34562683]
[-146.37109375 123.72521973]
[-134.67379761 134.10342407]
[-119.86186218 131.73554993]
[-105.04993439 129.36769104]
[-90.23800659 126.99982452]
[-75.42607880 124.63195801]
[-62.41654587 112.85074615]
[-45.27139282 119.57488251]
[-30.49512482 116.99382019]
[-15.73783779 114.30635071]
[-1.00029886 111.51261902]
[13.73724079 108.71888733]
[28.47477913 105.92515564]
[43.21231842 103.13142395]
[57.94985962 100.33769226]
[59.34868240 89.23901367]
[63.62423325 78.90184784]
[70.47394562 70.05770874]
[79.41310120 63.33246613]
[89.80910492 59.20203400]
[100.92627716 57.95870590]
[111.97789764 59.69046783]
[122.18190002 64.27477264]
[132.24024963 53.14690781]
[142.29861450 42.01903915]
[152.35697937 30.89117432]
[155.87080383 15.46510601]
[170.14514160 11.21158409]
[180.20350647 0.08371796]
[177.02799988 -10.09202290]
[178.34991455 -20.58809280]
[183.86457825 -29.52128410]
[192.52116394 -35.31684494]
[202.72232056 -36.98592758]
[212.61875916 -34.29381561]
[223.14866638 -44.97657013]
[226.94148254 -53.28046417]
[233.90811157 -55.73601913]
[244.59086609 -66.26592255]
[255.27362061 -76.79582214]
[265.95635986 -87.32572174]
[270.35308838 -102.52373505]
[284.84878540 -105.94781494]
[295.53152466 -116.47771454]
[299.92825317 -131.67572021]
[314.42391968 -135.09980774]
[325.10668945 -145.62971497]
[335.78942871 -156.15960693]
[346.47219849 -166.68951416]
[350.38427734 -174.93789673]
[357.38555908 -177.29280090]
[368.21896362 -187.66766357]
[372.24951172 -195.85881042]
[379.28399658 -198.11257935]
[390.26577759 -208.33024597]
[401.24752808 -218.54792786]
[401.21051025 -237.49697876]
[414.80642700 -250.23315430]
[433.07495117 -249.00292969]
[443.75772095 -259.53283691]
[454.44046021 -270.06271362]
[465.12322998 -280.59262085]
[475.80596924 -291.12252808]
[486.48870850 -301.65243530]
[497.17147827 -312.18234253]
[507.85421753 -322.71221924]
[518.53698730 -333.24212646]
[517.62213135 -353.31790161]
[531.55749512 -367.37106323]
[551.02954102 -366.64779663]
[561.24725342 -377.62957764]
[571.46490479 -388.61132812]
[581.68255615 -399.59310913]
[581.99798584 -412.48397827]
[590.72998047 -421.41998291]
[602.80969238 -421.99377441]
[613.18450928 -432.82714844]
[623.55938721 -443.66055298]
[633.93426514 -454.49392700]
[644.30914307 -465.32730103]
[654.68395996 -476.16070557]
[665.05883789 -486.99407959]
[668.43218994 -503.04251099]
[684.09930420 -507.88748169]
[695.94317627 -496.54489136]
[691.77990723 -480.68301392]
[675.89221191 -476.61920166]
[665.51739502 -465.78582764]
[655.14251709 -454.95245361]
[644.76763916 -444.11904907]
[634.39276123 -433.28567505]
[624.01788330 -422.45230103]
[613.64306641 -411.61889648]
[610.39019775 -394.37176514]
[592.66436768 -389.37542725]
[582.44665527 -378.39364624]
[572.22900391 -367.41189575]
[562.01129150 -356.43011475]
[565.12866211 -346.65927124]
[563.90197754 -336.39550781]
[558.48596191 -327.49655151]
[549.79949951 -321.60095215]
[539.37036133 -319.82662964]
[529.06689453 -322.55938721]
[518.38415527 -312.02947998]
[507.70138550 -301.49957275]
[497.01861572 -290.96966553]
[486.33587646 -280.43978882]
[475.65310669 -269.90988159]
[464.97036743 -259.37997437]
[454.28762817 -248.85006714]
[443.60485840 -238.32017517]
[445.99691772 -227.17094421]
[442.67776489 -216.13655090]
[434.36065674 -207.98941040]
[423.02920532 -204.83444214]
[411.46520996 -207.56616211]
[400.48342896 -197.34848022]
[389.50167847 -187.13081360]
[378.59381104 -176.83427429]
[367.76043701 -166.45941162]
[357.00207520 -156.00675964]
[346.31933594 -145.47685242]
[335.63659668 -134.94696045]
[324.95382690 -124.41705322]
[321.32122803 -109.97222137]
[306.06143188 -105.79496765]
[295.37866211 -95.26506042]
[291.74606323 -80.82022858]
[276.48626709 -76.64297485]
[265.80352783 -66.11306763]
[255.12077332 -55.58317184]
[244.43801880 -45.05326843]
[233.83140564 -34.44666672]
[223.30151367 -23.76391602]
[224.86567688 -4.34130383]
[211.42791748 10.18838978]
[191.33137512 10.14207745]
[181.27301025 21.26994324]
[178.47862244 35.90007019]
[163.48484802 40.94953537]
[153.42648315 52.07740021]
[143.36811829 63.20526505]
[133.30976868 74.33312988]
[141.73428345 94.84462738]
[138.55435181 116.78960419]
[124.65414429 134.06613159]
[103.89871979 141.87037659]
[102.60334778 156.81434631]
[101.30797577 171.75830078]
[103.68373108 180.57283020]
[99.88473511 186.90776062]
[98.37415314 201.83149719]
[96.86356354 216.75524902]
[95.35297394 231.67898560]
[93.84238434 246.60273743]
[92.33180237 261.52648926]
[94.24693298 265.41027832]
[94.77656555 269.30963135]
[94.08539581 272.78799438]
[92.46276093 275.50683594]
[90.27995300 277.25775146]
[87.91208649 292.06970215]
[85.54421997 306.88162231]
[83.17636108 321.69354248]
[85.17364502 327.98727417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[13 216]
[14 215]
[15 214]
[16 213]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 201]
[24 200]
[25 199]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[37 60]
[38 59]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[74 195]
[75 194]
[76 193]
[77 192]
[79 190]
[80 189]
[86 186]
[87 185]
[89 184]
[90 183]
[91 182]
[92 181]
[94 179]
[95 178]
[97 176]
[98 175]
[99 174]
[100 173]
[102 172]
[103 171]
[105 170]
[106 169]
[107 168]
[110 163]
[111 162]
[112 161]
[113 160]
[114 159]
[115 158]
[116 157]
[117 156]
[118 155]
[121 149]
[122 148]
[123 147]
[124 146]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
[133 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
