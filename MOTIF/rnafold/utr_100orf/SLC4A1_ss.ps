%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACGAGUGGGAACGUAGCUGGUCGCAGAGGGCACCAGCGGCUGCAGGACUUCACCAAGGGACCCUGAGGCUCGUGAGCAGGGACCCGCGGUGCGGGUUAUGCUGGGGGCUCAGAUCACCGUAGACAACUGGACACUCAGGACCACGCCAUGGAGGAGCUGCAGGAUGAUUAUGAAGACAUGAUGGAGGAGAAUCUGGAGCAGGAGGAAUAUGAAGACCCAGACAUCCCCGAGUCCCAGAUGGAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[81.37026978 298.64144897]
[82.48989105 283.37695312]
[90.58487701 270.38735962]
[103.79506683 262.65756226]
[103.04139709 247.67649841]
[91.85561371 237.90850830]
[90.87787628 222.72631836]
[101.19929504 211.05987549]
[100.44563293 196.07881165]
[99.69196320 181.09776306]
[98.93830109 166.11671448]
[98.18463898 151.13565063]
[91.09666443 148.68399048]
[90.81375122 163.68132019]
[76.46295929 168.04650879]
[67.87693787 155.74690247]
[76.92071533 143.78067017]
[69.83274078 141.32901001]
[59.98395920 152.64277649]
[50.13516998 163.95655823]
[40.28638458 175.27032471]
[30.43759918 186.58409119]
[20.58881187 197.89787292]
[17.32637787 206.40203857]
[10.54448128 209.29092407]
[0.55430287 220.48004150]
[0.02181119 236.51425171]
[-12.93177414 245.97914124]
[-28.36957169 241.61405945]
[-34.44902420 226.76751709]
[-26.50649452 212.82852173]
[-10.63481426 210.48986816]
[-0.64463633 199.30075073]
[9.27504158 188.04908752]
[19.12382889 176.73530579]
[28.97261429 165.42153931]
[38.82139969 154.10777283]
[48.67018890 142.79399109]
[58.51897430 131.48022461]
[51.41038132 107.41856384]
[56.51079178 84.31412506]
[71.21562195 67.63867950]
[63.33800507 54.87376404]
[55.46038818 42.10884476]
[47.58276749 29.34392929]
[39.70514679 16.57901192]
[31.82752800 3.81409502]
[26.23307991 0.36810955]
[23.59596062 -4.63005352]
[23.91700172 -9.37207603]
[16.36265373 -22.33092690]
[8.80830574 -35.28977966]
[1.25395739 -48.24863052]
[-12.38056469 -56.27423859]
[-12.10587883 -71.16631317]
[-19.66022682 -84.12516022]
[-27.21457481 -97.08401489]
[-40.84909821 -105.10961914]
[-40.57441330 -120.00169373]
[-48.12876129 -132.96054077]
[-67.26187134 -134.09242249]
[-81.71257019 -146.45288086]
[-85.73181915 -164.88494873]
[-77.86552429 -181.86595154]
[-85.90292358 -194.53086853]
[-93.94033051 -207.19578552]
[-101.97772980 -219.86070251]
[-110.01512909 -232.52561951]
[-118.05253601 -245.19053650]
[-127.97221375 -256.44219971]
[-139.52990723 -266.00357056]
[-151.08761597 -275.56494141]
[-162.64530945 -285.12628174]
[-175.80403137 -282.32388306]
[-187.99934387 -287.52825928]
[-194.87544250 -298.63735962]
[-194.11698914 -311.48547363]
[-205.55363464 -321.19131470]
[-216.99026489 -330.89715576]
[-228.42691040 -340.60299683]
[-241.30552673 -340.32736206]
[-250.62838745 -348.62564087]
[-251.77037048 -360.65219116]
[-263.08413696 -370.50097656]
[-274.39791870 -380.34976196]
[-285.71170044 -390.19854736]
[-297.02545166 -400.04733276]
[-308.33923340 -409.89611816]
[-319.65301514 -419.74490356]
[-335.56964111 -425.58419800]
[-334.36471558 -442.49526978]
[-317.78097534 -446.01889038]
[-309.80422974 -431.05868530]
[-298.49044800 -421.20989990]
[-287.17666626 -411.36111450]
[-275.86291504 -401.51232910]
[-264.54913330 -391.66354370]
[-253.23536682 -381.81475830]
[-241.92158508 -371.96597290]
[-224.53231812 -369.52511597]
[-218.72106934 -352.03964233]
[-207.28442383 -342.33380127]
[-195.84779358 -332.62796021]
[-184.41114807 -322.92211914]
[-167.71109009 -325.00314331]
[-154.41906738 -314.13851929]
[-153.08395386 -296.68399048]
[-141.52624512 -287.12261963]
[-129.96855164 -277.56127930]
[-118.41085052 -267.99990845]
[-105.13238525 -274.97717285]
[-106.45014954 -289.91918945]
[-107.76792145 -304.86117554]
[-109.08568573 -319.80319214]
[-121.38254547 -335.79736328]
[-112.40708160 -352.94061279]
[-114.09992981 -367.84478760]
[-126.61959076 -377.49017334]
[-128.56913757 -393.17376709]
[-118.79192352 -405.59072876]
[-103.08860016 -407.37435913]
[-90.77567291 -397.46640015]
[-89.15818787 -381.74511719]
[-99.19575500 -369.53762817]
[-97.50291443 -354.63345337]
[-88.99176788 -349.03515625]
[-84.86788940 -339.48062134]
[-86.70780182 -329.01538086]
[-94.14368439 -321.12094116]
[-92.82591248 -306.17895508]
[-91.50814819 -291.23693848]
[-90.19037628 -276.29495239]
[-91.51219177 -267.76760864]
[-94.96401215 -260.81274414]
[-99.84882355 -255.89361572]
[-105.38761902 -253.22795105]
[-97.35021210 -240.56301880]
[-89.31281281 -227.89810181]
[-81.27541351 -215.23318481]
[-73.23800659 -202.56826782]
[-65.20060730 -189.90335083]
[-54.17770386 -191.31652832]
[-43.37111664 -188.51293945]
[-34.34301376 -181.85844421]
[-28.41308784 -172.27845764]
[-26.46570969 -161.12924194]
[-28.81821442 -150.00607300]
[-35.16990662 -140.51489258]
[-27.61556053 -127.55603790]
[-14.52137566 -120.45733643]
[-14.25572395 -104.63835907]
[-6.70137596 -91.67951202]
[0.85297221 -78.72065735]
[13.94715691 -71.62195587]
[14.21280861 -55.80297852]
[21.76715660 -42.84412766]
[29.32150459 -29.88527489]
[36.87585449 -16.92642403]
[44.59244537 -4.06352472]
[52.47006607 8.70139313]
[60.34768295 21.46631050]
[68.22530365 34.23122787]
[76.10292053 46.99614334]
[83.98054504 59.76106262]
[97.43083191 55.76650620]
[111.77153015 56.25035858]
[125.51834869 61.36320496]
[137.18557739 70.76647186]
[145.44619751 83.64826965]
[159.87660217 79.55399323]
[174.30702209 75.45970917]
[188.73744202 71.36543274]
[203.16784668 67.27114868]
[217.59826660 63.17687225]
[228.62857056 51.04162216]
[244.59349060 54.79045105]
[249.06965637 70.56688690]
[237.45240784 82.14147949]
[221.69255066 77.60729218]
[207.26213074 81.70156860]
[192.83171082 85.79584503]
[178.40130615 89.89012909]
[163.97088623 93.98440552]
[149.54046631 98.07868195]
[147.84762573 112.98285675]
[160.99221802 120.20915985]
[169.99473572 121.59449005]
[174.25576782 127.60975647]
[187.30851746 135.00067139]
[200.36128235 142.39157104]
[212.82640076 137.32934570]
[225.74435425 140.31892395]
[234.45866394 150.05307007]
[235.96064758 162.83563232]
[248.91949463 170.38998413]
[261.87835693 177.94432068]
[274.83718872 185.49867249]
[287.79605103 193.05302429]
[298.76251221 182.66488647]
[312.21206665 175.78837585]
[327.05438232 172.98095703]
[342.08633423 174.47018433]
[356.08926392 180.13536072]
[367.92807007 189.51722717]
[376.64303589 201.85522461]
[381.52764893 216.14918518]
[382.18594360 231.24035645]
[378.56454468 245.90534973]
[370.95706177 258.95535278]
[359.98016357 269.33248901]
[346.52371216 276.19546509]
[331.67855835 278.98797607]
[316.64813232 277.48364258]
[302.65090942 271.80441284]
[290.82153320 262.41067505]
[282.11895752 250.06391907]
[277.24871826 235.76506042]
[276.60559082 220.67323303]
[280.24169922 206.01187134]
[267.28283691 198.45753479]
[254.32398987 190.90318298]
[241.36514282 183.34883118]
[228.40629578 175.79447937]
[212.32823181 180.76628113]
[197.33982849 172.39575195]
[192.97036743 155.44433594]
[179.91761780 148.05342102]
[166.86485291 140.66250610]
[153.76591492 133.35375977]
[140.62132263 126.12745667]
[135.77787781 133.83403015]
[129.46177673 140.62817383]
[121.84790802 146.22705078]
[113.16568756 150.38198853]
[113.91935730 165.36303711]
[114.67301941 180.34410095]
[115.42668152 195.32514954]
[116.18035126 210.30621338]
[127.62052155 220.87788391]
[128.17143250 236.08154297]
[118.02245331 246.92283630]
[118.77611542 261.90390015]
[132.69537354 268.26885986]
[142.05316162 280.38043213]
[144.69909668 295.45550537]
[140.02517700 310.02990723]
[129.10545349 320.75454712]
[114.44916534 325.16500854]
[99.42424011 322.24774170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 242]
[5 241]
[8 238]
[9 237]
[10 236]
[11 235]
[12 234]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[25 33]
[26 32]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[50 158]
[51 157]
[52 156]
[53 155]
[55 153]
[56 152]
[57 151]
[59 149]
[60 148]
[64 141]
[65 140]
[66 139]
[67 138]
[68 137]
[69 136]
[70 110]
[71 109]
[72 108]
[73 107]
[77 104]
[78 103]
[79 102]
[80 101]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[111 132]
[112 131]
[113 130]
[114 129]
[116 125]
[117 124]
[169 184]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
[185 230]
[186 229]
[188 228]
[189 227]
[190 226]
[194 223]
[195 222]
[196 221]
[197 220]
[198 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
