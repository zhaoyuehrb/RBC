%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGAGUGCGCAGGCGCGCCGACAGCCGAGUUUUCUGCGCUUCCUUCUCCCUCUCUCCAGACGUCGUGGUCGUUCGGUCCUAUGUCGCGCCGGGCCCUCCGGAGGCUGAGGGGGGAACAGCGCGGCCAGGAGCCCCUCGGGCCCGGCGCCUUGCAUUUCGAUCUCCGUGAUGACGAUGACG\
) } def
/len { sequence length } bind def

/coor [
[-67.50517273 207.27156067]
[-73.89357758 207.31520081]
[-85.24514008 217.12040710]
[-96.59670258 226.92561340]
[-107.94825745 236.73081970]
[-106.78499603 252.09158325]
[-114.79605103 265.04058838]
[-128.73100281 270.72222900]
[-143.16668701 267.15167236]
[-154.51824951 276.95687866]
[-165.86981201 286.76208496]
[-177.22137451 296.56729126]
[-188.57293701 306.37249756]
[-199.92449951 316.17770386]
[-211.27604675 325.98291016]
[-210.70726013 339.45483398]
[-217.90315247 350.62716675]
[-230.04306030 355.53500366]
[-242.60235596 352.59121704]
[-254.12055969 362.20010376]
[-265.55587769 371.90753174]
[-276.90744019 381.71273804]
[-279.50622559 397.54388428]
[-293.57369995 405.25659180]
[-308.31848145 398.93432617]
[-312.42962646 383.42697144]
[-302.75341797 370.63046265]
[-286.71264648 370.36117554]
[-275.36108398 360.55596924]
[-272.34689331 353.78732300]
[-263.72946167 350.68191528]
[-252.21125793 341.07299805]
[-251.42257690 324.28491211]
[-238.48936462 313.03100586]
[-221.08125305 314.63134766]
[-209.72970581 304.82614136]
[-198.37814331 295.02093506]
[-187.02658081 285.21572876]
[-175.67501831 275.41052246]
[-164.32345581 265.60531616]
[-152.97189331 255.80010986]
[-154.40550232 240.99865723]
[-146.75805664 228.03793335]
[-132.78184509 221.99485779]
[-117.75347137 225.37925720]
[-106.40190887 215.57405090]
[-95.05034637 205.76884460]
[-83.69879150 195.96363831]
[-98.56919098 197.93115234]
[-113.10665894 194.23492432]
[-125.23143768 185.40374756]
[-133.20895386 172.70101929]
[-135.89791870 157.94400024]
[-132.91365051 143.24386597]
[-124.68309021 130.70361328]
[-112.38370514 122.11727905]
[-97.77506256 118.71323395]
[-82.94709015 120.97845459]
[-70.02109528 128.58889771]
[-60.84629059 140.45578003]
[-56.73522949 154.88142395]
[-58.27605057 169.80206299]
[-65.24942017 183.08454895]
[-52.13220978 175.80865479]
[-39.01499557 168.53276062]
[-25.89777946 161.25686646]
[-12.78056526 153.98095703]
[0.33664870 146.70506287]
[7.71335173 133.76545715]
[23.53439331 133.83766174]
[36.65160751 126.56176758]
[49.76882172 119.28587341]
[62.88603592 112.00997162]
[76.00325012 104.73407745]
[89.12046814 97.45817566]
[102.17474365 90.06995392]
[115.16512299 82.56995392]
[128.15550232 75.06995392]
[140.94847107 67.23796844]
[153.53553772 59.07918549]
[156.86428833 41.91752243]
[171.28437805 32.64501572]
[187.62387085 36.57978439]
[200.06903076 28.20612907]
[212.51419067 19.83247375]
[224.95933533 11.45881748]
[232.96121216 -7.02567625]
[252.27514648 -7.57464409]
[264.42553711 -16.37057686]
[276.57589722 -25.16650963]
[288.72625732 -33.96244431]
[300.87664795 -42.75837708]
[313.02700806 -51.55430984]
[325.17739868 -60.35024261]
[337.32775879 -69.14617157]
[349.47814941 -77.94210815]
[361.62850952 -86.73803711]
[373.77886963 -95.53397369]
[374.36712646 -109.00505829]
[382.49435425 -119.51936340]
[395.01031494 -123.36836243]
[407.27099609 -119.35869598]
[419.57058716 -127.94475555]
[424.83276367 -135.44230652]
[432.15579224 -136.57051086]
[444.60095215 -144.94415283]
[457.04611206 -153.31781006]
[469.49127197 -161.69146729]
[470.17785645 -177.08090210]
[479.68347168 -188.97613525]
[494.19906616 -192.94627380]
[508.10260010 -187.67089844]
[520.54772949 -196.04455566]
[517.87890625 -211.03778076]
[521.54534912 -225.81875610]
[530.91192627 -237.82655334]
[544.35577393 -244.98077393]
[559.54766846 -246.04188538]
[573.85552979 -240.82606506]
[584.80047607 -230.23698425]
[590.48614502 -216.10923767]
[589.92749023 -200.89057922]
[583.22137451 -187.21769714]
[571.52954102 -177.45953369]
[556.87780762 -173.30673218]
[541.80456543 -175.47879028]
[528.92138672 -183.59939575]
[516.47625732 -175.22573853]
[516.12512207 -160.35917664]
[506.97906494 -148.40870667]
[492.37918091 -144.08468628]
[477.86492920 -149.24632263]
[465.41976929 -140.87266541]
[452.97460938 -132.49900818]
[440.52944946 -124.12535095]
[428.15664673 -115.64517975]
[415.85705566 -107.05912018]
[413.63201904 -90.40045929]
[399.78161621 -80.29674530]
[382.57482910 -83.38359833]
[370.42443848 -74.58766937]
[358.27407837 -65.79173279]
[346.12368774 -56.99580002]
[333.97332764 -48.19986725]
[321.82293701 -39.40393448]
[309.67257690 -30.60800362]
[297.52221680 -21.81207085]
[285.37182617 -13.01613712]
[273.22146606 -4.22020388]
[261.07107544 4.57572889]
[260.36306763 14.79990482]
[254.00021362 23.11281013]
[243.90023804 26.61040306]
[233.33299255 23.90397263]
[220.88784790 32.27762985]
[208.44268799 40.65128326]
[195.99752808 49.02494049]
[195.31387329 61.90649796]
[187.20869446 72.19095612]
[174.47041321 75.97758484]
[161.69432068 71.66625214]
[149.10725403 79.82503510]
[148.02055359 83.20402527]
[145.22894287 86.21792603]
[140.92512512 88.06471252]
[135.65550232 88.06034088]
[122.66512299 95.56034088]
[109.67474365 103.06034088]
[104.80876923 109.51360321]
[96.39636230 110.57539368]
[83.27915192 117.85128784]
[70.16193390 125.12718964]
[57.04471970 132.40309143]
[43.92750549 139.67898560]
[30.81029129 146.95487976]
[22.49535751 160.41491699]
[7.61254644 159.82228088]
[-5.50466776 167.09817505]
[-18.62188148 174.37406921]
[-31.73909760 181.64997864]
[-44.85631180 188.92587280]
[-57.97352600 196.20176697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 48]
[3 47]
[4 46]
[5 45]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[15 35]
[19 32]
[20 31]
[21 29]
[22 28]
[63 182]
[64 181]
[65 180]
[66 179]
[67 178]
[68 177]
[70 175]
[71 174]
[72 173]
[73 172]
[74 171]
[75 170]
[76 168]
[77 167]
[78 166]
[79 162]
[80 161]
[83 157]
[84 156]
[85 155]
[86 154]
[88 150]
[89 149]
[90 148]
[91 147]
[92 146]
[93 145]
[94 144]
[95 143]
[96 142]
[97 141]
[98 140]
[102 137]
[103 136]
[105 135]
[106 134]
[107 133]
[108 132]
[112 128]
[113 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
