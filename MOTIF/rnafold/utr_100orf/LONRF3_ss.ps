%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUAUUAGGCGGCGCGGGGCGGCCGGCAUGGAGCUCCCGGAGGCGCGGCAGGGUCAGGAGCUCGGUGGCAUGGCGGCGGUGGCUGCCCCGAUUUCCUCCAGCUGCCACUCCUUGCUUCGUGUCCCCGGUCCCUAGACGCCUCGUCUCCUCCCGUGUCCCUCUUCCCAUGGAGUCAGUACGGAUCGAACAGAUGCUGAGCUUGCCCGCUGAGGUCAGCAGCGACAACUUGGAGUCGGCGGAGCGAGGGGCAUCAG\
CGGCCCAAGUAG\
) } def
/len { sequence length } bind def

/coor [
[-161.79774475 275.81668091]
[-175.97908020 270.46270752]
[-187.47200012 260.57891846]
[-194.88865662 247.35891724]
[-197.33346558 232.39900208]
[-194.51118469 217.50570679]
[-186.76263428 204.47743225]
[-175.02348328 194.88743591]
[-160.71128845 189.89373779]
[-160.53546143 174.89476013]
[-160.35961914 159.89579773]
[-167.94720459 147.07870483]
[-160.04866028 133.37017822]
[-159.87283325 118.37120056]
[-168.67538452 106.22562408]
[-182.98406982 101.72434998]
[-197.29275513 97.22308350]
[-211.60145569 92.72180939]
[-225.91014099 88.22054291]
[-240.21882629 83.71927643]
[-254.52751160 79.21800232]
[-268.83621216 74.71673584]
[-283.31747437 70.80615234]
[-297.94696045 67.49282837]
[-312.57644653 64.17951202]
[-327.20593262 60.86618805]
[-341.83541870 57.55287170]
[-356.52090454 54.49728775]
[-371.25784302 51.70038605]
[-385.99478149 48.90348434]
[-400.73171997 46.10658646]
[-415.46865845 43.30968475]
[-430.20559692 40.51278305]
[-444.94253540 37.71588135]
[-459.67947388 34.91898346]
[-467.98373413 43.36862946]
[-479.21582031 46.74153900]
[-490.56719971 44.31458282]
[-499.25704956 36.80009079]
[-503.21337891 26.14205170]
[-517.88067627 23.00044632]
[-532.54803467 19.85884285]
[-547.21533203 16.71723938]
[-560.38330078 25.03844261]
[-575.21331787 21.64346695]
[-583.06512451 9.03854370]
[-597.73248291 5.89693975]
[-612.39978027 2.75533581]
[-627.06713867 -0.38626826]
[-641.73443604 -3.52787209]
[-652.94494629 2.80493569]
[-665.07952881 -0.09014586]
[-671.77838135 -10.13640881]
[-686.40789795 -13.44972897]
[-692.77093506 -11.87186718]
[-698.17657471 -13.47961140]
[-701.33959961 -17.01600266]
[-715.88739014 -20.67136383]
[-730.43518066 -24.32672691]
[-744.98297119 -27.98208809]
[-759.53076172 -31.63745117]
[-774.80041504 -27.49638176]
[-785.25848389 -38.10194397]
[-799.80627441 -41.75730515]
[-814.35406494 -45.41267014]
[-828.90185547 -49.06803131]
[-821.94439697 -35.77916718]
[-826.31738281 -21.43074799]
[-839.50384521 -14.28115368]
[-853.91424561 -18.44540787]
[-861.25445557 -31.52672958]
[-857.29980469 -45.99602890]
[-844.32543945 -53.52548599]
[-858.58038330 -58.19417191]
[-872.83532715 -62.86286163]
[-887.09027100 -67.53154755]
[-901.34521484 -72.20023346]
[-915.60015869 -76.86892700]
[-931.52893066 -72.96927643]
[-942.67352295 -84.99967194]
[-937.56933594 -100.58425903]
[-921.46716309 -103.69096375]
[-910.93145752 -91.12386322]
[-896.67651367 -86.45517731]
[-882.42156982 -81.78649139]
[-868.16662598 -77.11779785]
[-853.91174316 -72.44911194]
[-839.65679932 -67.78042603]
[-825.24652100 -63.61582565]
[-810.69873047 -59.96046448]
[-796.15087891 -56.30509949]
[-781.60308838 -52.64973831]
[-767.37402344 -57.05226517]
[-755.87536621 -46.18524551]
[-741.32757568 -42.52988434]
[-726.77978516 -38.87451935]
[-712.23199463 -35.21915817]
[-697.68420410 -31.56379700]
[-683.09454346 -28.07921600]
[-668.46508789 -24.76589584]
[-651.98962402 -30.85201263]
[-638.59283447 -18.19519424]
[-623.92553711 -15.05358982]
[-609.25817871 -11.91198635]
[-594.59088135 -8.77038193]
[-579.92352295 -5.62877798]
[-567.59771729 -13.91182613]
[-552.67822266 -10.93473434]
[-544.07373047 2.04991770]
[-529.40643311 5.19152164]
[-514.73907471 8.33312511]
[-500.07177734 11.47472954]
[-485.29598999 0.62573469]
[-466.97427368 4.11697197]
[-456.88256836 20.18204308]
[-442.14562988 22.97894478]
[-427.40869141 25.77584457]
[-412.67175293 28.57274628]
[-397.93481445 31.36964607]
[-383.19787598 34.16654587]
[-368.46093750 36.96344757]
[-353.72399902 39.76034927]
[-350.64132690 38.11679459]
[-346.61721802 37.86476517]
[-342.30529785 39.42724228]
[-338.52212524 42.92338181]
[-323.89260864 46.23670197]
[-309.26312256 49.55002213]
[-294.63363647 52.86334229]
[-280.00415039 56.17666245]
[-288.29711914 43.67759323]
[-286.71411133 28.76136208]
[-275.98242188 18.28134155]
[-261.03280640 17.05266571]
[-248.73402405 25.63985443]
[-244.73681641 40.09746170]
[-250.87774658 53.78281784]
[-264.33493042 60.40804672]
[-250.02624512 64.90931702]
[-235.71755981 69.41058350]
[-221.40887451 73.91185760]
[-207.10017395 78.41312408]
[-192.79148865 82.91439056]
[-178.48280334 87.41566467]
[-164.17411804 91.91693115]
[-162.74690247 81.97608948]
[-158.23176575 73.15711975]
[-151.19567871 66.37521362]
[-142.46154785 62.30186462]
[-133.01251221 61.29891205]
[-123.88144684 63.38789749]
[-116.03814697 68.25709534]
[-110.28627777 75.30446625]
[-107.18131256 83.71089935]
[-92.19779968 84.41398621]
[-77.21428680 85.11706543]
[-62.23077393 85.82015228]
[-47.24726105 86.52323914]
[-32.26374817 87.22631836]
[-17.28023529 87.92940521]
[-2.29672194 88.63248444]
[12.68679142 89.33557129]
[27.67416763 89.95082092]
[42.66489410 90.47821808]
[57.65562057 91.00561523]
[72.64634705 91.53301239]
[76.80730438 74.68815613]
[91.54402161 60.87627411]
[114.21009827 56.54057693]
[138.45709229 65.86672974]
[152.76577759 61.36545944]
[159.98254395 55.82371902]
[167.26863098 56.89635086]
[181.62910461 52.56311798]
[192.60572815 41.16907883]
[207.02554321 44.89981461]
[221.38601685 40.56658173]
[235.74649048 36.23334885]
[246.72311401 24.83930779]
[261.14291382 28.57004356]
[275.50338745 24.23681068]
[289.86386108 19.90357780]
[304.19869995 15.48625088]
[318.50738525 10.98498154]
[332.81607056 6.48371220]
[341.47830200 -7.01980639]
[357.45074463 -8.52330208]
[368.48071289 3.12657833]
[366.10693359 18.99304390]
[352.15039062 26.90469933]
[337.31732178 20.79240036]
[323.00863647 25.29367065]
[308.69995117 29.79494095]
[303.28134155 34.78256989]
[294.19708252 34.26404953]
[279.83660889 38.59728241]
[265.47616577 42.93051147]
[255.52668762 54.01461411]
[240.07971191 50.59381866]
[225.71925354 54.92705154]
[211.35877991 59.26028442]
[201.40930176 70.34438324]
[185.96234131 66.92359161]
[171.60186768 71.25682068]
[157.26704407 75.67414856]
[142.95835876 80.17541504]
[143.22209167 95.17309570]
[157.68020630 99.16849518]
[172.13830566 103.16388702]
[186.59640503 107.15928650]
[202.32485962 102.51731110]
[214.02108765 114.01210785]
[209.65301514 129.81881714]
[193.71414185 133.67684937]
[182.60101318 121.61739349]
[168.14291382 117.62199402]
[153.68479919 113.62660217]
[139.22669983 109.63120270]
[135.91610718 116.36098480]
[129.29492188 129.82055664]
[125.98432922 136.55033875]
[137.97326660 145.56507874]
[149.96218872 154.57981873]
[161.95112610 163.59454346]
[176.74537659 158.91377258]
[191.45478821 163.85470581]
[200.42329407 176.51747131]
[200.20230103 192.03297424]
[190.87681580 204.43518066]
[176.03265381 208.95520020]
[161.37771606 203.85498047]
[152.54710388 191.09567261]
[152.93638611 175.58348083]
[140.94744873 166.56874084]
[128.95852661 157.55400085]
[116.96958923 148.53926086]
[90.31784058 142.74186707]
[74.47280121 125.70864868]
[72.11894989 106.52374268]
[57.12822342 105.99634552]
[42.13749695 105.46894836]
[27.14677048 104.94155121]
[18.49517250 107.75979614]
[11.98370743 104.31908417]
[-2.99980593 103.61599731]
[-17.98332024 102.91291809]
[-32.96683121 102.20983124]
[-47.95034790 101.50675201]
[-62.93386078 100.80366516]
[-77.91737366 100.10057831]
[-92.90088654 99.39749908]
[-107.88439941 98.69441223]
[-115.22302246 111.57424164]
[-128.74421692 119.11470795]
[-144.87387085 118.54703522]
[-145.04969788 133.54600525]
[-137.47470093 147.43592834]
[-145.36065674 160.07162476]
[-145.53648376 175.07060242]
[-145.71231079 190.06956482]
[-131.52113342 195.39739990]
[-120.01001740 205.25996399]
[-112.56900787 218.46629333]
[-110.09664154 233.42167664]
[-112.89147186 248.32015991]
[-120.61599731 261.36267090]
[-132.33746338 270.97430420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 260]
[10 259]
[11 258]
[13 256]
[14 255]
[15 145]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[22 138]
[23 130]
[24 129]
[25 128]
[26 127]
[27 126]
[28 122]
[29 121]
[30 120]
[31 119]
[32 118]
[33 117]
[34 116]
[35 115]
[40 112]
[41 111]
[42 110]
[43 109]
[46 106]
[47 105]
[48 104]
[49 103]
[50 102]
[53 100]
[54 99]
[57 98]
[58 97]
[59 96]
[60 95]
[61 94]
[63 92]
[64 91]
[65 90]
[66 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[154 252]
[155 251]
[156 250]
[157 249]
[158 248]
[159 247]
[160 246]
[161 245]
[162 244]
[163 242]
[164 241]
[165 240]
[166 239]
[170 206]
[171 205]
[173 204]
[174 203]
[176 201]
[177 200]
[178 199]
[180 197]
[181 196]
[182 195]
[183 193]
[184 192]
[185 191]
[207 218]
[208 217]
[209 216]
[210 215]
[221 236]
[222 235]
[223 234]
[224 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
