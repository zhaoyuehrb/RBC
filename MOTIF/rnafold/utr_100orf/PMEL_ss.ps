%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGCGCUCCUCCCCGCAAAUGAUCCCGCCCCAGGGGCCUAUCCCAGUCCCCCCAGUGCCUUUGGUUGCUGGAGGGAAGAACACAAUGGAUCUGGUGCUAAAAAGAUGCCUUCUUCAUUUGGCUGUGAUAGGUGCUUUGCUGGCUGUGGGGGCUACAAAAGUACCCAGAAACCAGGACUGGCUUG\
) } def
/len { sequence length } bind def

/coor [
[170.55024719 664.09600830]
[181.33297729 652.54144287]
[180.57728577 637.56048584]
[179.82160950 622.57952881]
[179.06593323 607.59857178]
[176.68972778 604.96697998]
[175.48086548 601.04620361]
[176.03472900 596.40234375]
[178.66893005 591.84765625]
[178.66893005 576.84765625]
[178.66893005 561.84765625]
[178.66893005 546.84765625]
[205.27799988 514.07257080]
[199.85937500 500.08547974]
[194.44075012 486.09841919]
[189.02212524 472.11132812]
[183.60350037 458.12423706]
[178.18487549 444.13714600]
[172.76625061 430.15008545]
[168.14488220 444.42041016]
[156.61846924 454.01947021]
[141.74743652 455.98217773]
[128.12528992 449.70223999]
[119.95983124 437.11950684]
[119.77326965 422.12066650]
[127.62324524 409.33874512]
[141.08496094 402.72192383]
[156.00021362 404.31414795]
[167.76292419 413.62506104]
[164.51290894 398.98138428]
[161.26290894 384.33770752]
[148.72360229 372.07305908]
[154.37475586 354.55761719]
[150.87919617 339.97061157]
[147.38365173 325.38357544]
[143.88809204 310.79656982]
[140.39254761 296.20956421]
[136.77458191 281.65240479]
[133.03446960 267.12615967]
[129.29435730 252.59992981]
[125.55424500 238.07369995]
[121.81414032 223.54745483]
[118.07402802 209.02122498]
[114.33391571 194.49497986]
[103.66756439 184.09892273]
[107.71954346 168.80538940]
[103.97943115 154.27914429]
[100.23931885 139.75291443]
[96.49921417 125.22667694]
[92.75910187 110.70043945]
[84.02407074 98.50621033]
[71.47383118 90.29088593]
[58.92359161 82.07556152]
[46.30479050 73.96595001]
[33.61831284 65.96262360]
[20.93183517 57.95929337]
[8.24535751 49.95596313]
[-4.44112015 41.95263290]
[-17.12759781 33.94930267]
[-29.88085556 26.05282021]
[-42.69999313 18.26374245]
[-59.37595367 15.20618439]
[-61.05424881 -1.66449034]
[-45.30748749 -7.94746637]
[-34.91091537 5.44460630]
[-22.09177780 13.23368454]
[-14.72742558 14.02173996]
[-9.12426853 21.26282501]
[3.56220937 29.26615524]
[16.24868774 37.26948547]
[28.93516541 45.27281570]
[41.62164307 53.27614594]
[54.30812073 61.27947617]
[61.65819168 62.19113541]
[67.13891602 69.52532959]
[79.68915558 77.74064636]
[92.23939514 85.95597076]
[99.31999969 83.48312378]
[92.24476624 70.25659943]
[82.10407257 59.20371246]
[85.75997925 44.65605545]
[99.92120361 39.71037674]
[111.83888245 48.81910324]
[110.78395844 63.78193665]
[113.48122406 78.53743744]
[120.56182861 76.06459045]
[125.26892853 61.82228470]
[129.97602844 47.57998276]
[134.68312073 33.33767700]
[139.39021301 19.09537125]
[144.09730530 4.85306597]
[135.21261597 -7.73138952]
[135.43902588 -22.95643806]
[144.48013306 -34.98649597]
[158.70115662 -39.33395767]
[163.40826416 -53.57626343]
[168.11535645 -67.81856537]
[172.82244873 -82.06087494]
[177.40974426 -96.34221649]
[181.87692261 -110.66158295]
[177.75300598 -126.53374481]
[189.62501526 -137.84689331]
[205.28004456 -132.96304321]
[208.61354065 -116.90627289]
[196.19628906 -106.19441223]
[191.72911072 -91.87504578]
[192.74058533 -84.53804016]
[187.06475830 -77.35377502]
[182.35766602 -63.11147308]
[177.65055847 -48.86916733]
[172.94346619 -34.62686157]
[181.77297974 -22.66117477]
[181.86462402 -7.61273384]
[172.97367859 4.74867535]
[158.33961487 9.56016159]
[153.63252258 23.80246735]
[148.92543030 38.04477310]
[144.21832275 52.28707504]
[139.51123047 66.52938080]
[134.80413818 80.77169037]
[124.71234894 103.20378876]
[107.28533936 106.96032715]
[111.02545166 121.48656464]
[114.76555634 136.01280212]
[118.50566864 150.53904724]
[122.24578094 165.06527710]
[133.17965698 176.50035095]
[128.86015320 190.75486755]
[132.60026550 205.28111267]
[136.34037781 219.80734253]
[140.08049011 234.33358765]
[143.82060242 248.85981750]
[147.56069946 263.38604736]
[151.30081177 277.91229248]
[156.48143005 285.46148682]
[154.97955322 292.71398926]
[158.47511292 307.30102539]
[161.97067261 321.88803101]
[165.46621704 336.47503662]
[168.96177673 351.06207275]
[179.53781128 358.46899414]
[182.14059448 370.70596313]
[175.90658569 381.08770752]
[179.15660095 395.73138428]
[182.40660095 410.37506104]
[186.75334167 424.73144531]
[192.17196655 438.71853638]
[197.59059143 452.70562744]
[203.00921631 466.69268799]
[208.42784119 480.67977905]
[213.84646606 494.66687012]
[219.26509094 508.65396118]
[228.60336304 520.39263916]
[241.01380920 528.81762695]
[253.42427063 537.24261475]
[269.38836670 535.65289307]
[280.48104858 547.24310303]
[278.19299316 563.12213135]
[264.27935791 571.10900879]
[249.41351318 565.07690430]
[244.99926758 549.65307617]
[232.58882141 541.22808838]
[220.17835999 532.80310059]
[213.55101013 536.31420898]
[220.57328796 549.56896973]
[227.59558105 562.82366943]
[234.61785889 576.07836914]
[245.39225769 586.51446533]
[238.79623413 599.98638916]
[223.94541931 597.87609863]
[221.36314392 583.10064697]
[214.34086609 569.84594727]
[207.31857300 556.59124756]
[200.29629517 543.33654785]
[193.66893005 546.84765625]
[193.66893005 561.84765625]
[193.66893005 576.84765625]
[193.66893005 591.84765625]
[194.04689026 606.84289551]
[194.80256653 621.82385254]
[195.55824280 636.80480957]
[196.31391907 651.78576660]
[208.20465088 662.19665527]
[209.16767883 677.97155762]
[198.63166809 689.75152588]
[182.84745789 690.54772949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[9 178]
[10 177]
[11 176]
[12 175]
[13 152]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[29 145]
[30 144]
[31 143]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[38 134]
[39 133]
[40 132]
[41 131]
[42 130]
[43 129]
[44 128]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[51 77]
[52 76]
[53 75]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[60 66]
[61 65]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[95 111]
[96 110]
[97 109]
[98 108]
[99 106]
[100 105]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
