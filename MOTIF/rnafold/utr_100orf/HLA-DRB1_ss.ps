%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAUAACUUGGAAUGUGGGUGGAGGGGUUCAUAGUUCUCCCUGAGUGAGACUUGCCUGCUUCUCUGGCCCCUGGUCCUGUCCUGUUCUCCAGCAUGGUGUGUCUGAAGCUCCCUGGAGGCUCCUGCAUGACAGCGCUGACAGUGACACUGAUGGUGCUGAGCUCCCCACUGGCUUUGUCUGGGGACACCCGAC\
) } def
/len { sequence length } bind def

/coor [
[120.87680054 408.76321411]
[117.75812531 423.43542480]
[128.24075317 434.87631226]
[129.96315002 450.29748535]
[122.26299286 463.76922607]
[108.10116577 470.11132812]
[92.92317200 466.88513184]
[82.56526947 455.33120728]
[81.01027679 439.89224243]
[88.85611725 426.50485229]
[103.08590698 420.31674194]
[106.20458221 405.64453125]
[98.55463409 387.43554688]
[100.73270416 369.26983643]
[110.77001953 355.74337769]
[124.88478088 349.59561157]
[123.67778778 334.64422607]
[114.94145203 322.58084106]
[121.54321289 308.20281982]
[120.33621216 293.25146484]
[119.12921906 278.30010986]
[117.92221832 263.34872437]
[116.71521759 248.39736938]
[113.03842926 241.97462463]
[115.61119080 233.19575500]
[114.64521790 218.22689819]
[113.67924500 203.25802612]
[112.71326447 188.28916931]
[111.74729156 173.32029724]
[110.78131866 158.35144043]
[109.81534576 143.38256836]
[93.52319336 140.54638672]
[80.66946411 132.29911804]
[72.76769257 120.72734833]
[70.30895233 108.20707703]
[72.78340912 96.96035767]
[78.87703705 88.67547607]
[86.79747009 84.25408936]
[78.17733002 71.97837067]
[69.55719757 59.70265198]
[60.93706131 47.42693329]
[43.65876389 44.73310471]
[33.86190033 30.65745544]
[37.20285034 14.18096733]
[28.38607025 2.04571223]
[19.56929207 -10.08954239]
[10.75251293 -22.22479820]
[-8.01120853 -29.56877518]
[-9.22791290 -48.85888672]
[-18.43106270 -60.70380402]
[-27.63421440 -72.54872131]
[-36.83736420 -84.39363098]
[-52.27102280 -86.50074768]
[-61.43558884 -98.64427948]
[-59.33166504 -113.34493256]
[-68.53482056 -125.18984222]
[-77.73796844 -137.03475952]
[-87.03623199 -148.80516052]
[-96.42900848 -160.50027466]
[-105.82179260 -172.19538879]
[-115.21456909 -183.89050293]
[-119.48651886 -169.51168823]
[-133.32896423 -163.73356628]
[-146.55593872 -170.80796814]
[-149.43435669 -185.52920532]
[-139.84614563 -197.06463623]
[-124.84669495 -196.92587280]
[-133.26794434 -209.33886719]
[-149.33622742 -206.82087708]
[-164.83944702 -211.54222107]
[-176.69131470 -222.51002502]
[-182.55557251 -237.49317932]
[-181.30642700 -253.47615051]
[-173.24426270 -267.26586914]
[-181.86439514 -279.54159546]
[-197.47349548 -282.01785278]
[-206.69206238 -294.85504150]
[-204.05091858 -310.43707275]
[-191.11697388 -319.51940918]
[-175.56373596 -316.71365356]
[-166.61865234 -303.68441772]
[-169.58868408 -288.16171265]
[-160.96855164 -275.88601685]
[-147.40061951 -278.81384277]
[-133.69876099 -276.33905029]
[-121.93939972 -268.80303955]
[-113.91736603 -257.31680298]
[-110.87200165 -243.59716797]
[-113.29576874 -229.71020508]
[-120.85494995 -217.76011658]
[-112.43370056 -205.34712219]
[-103.51945496 -193.28327942]
[-94.12667084 -181.58816528]
[-84.73389435 -169.89305115]
[-75.34111786 -158.19793701]
[-68.69260406 -154.94709778]
[-65.89305115 -146.23791504]
[-56.68990326 -134.39299011]
[-47.48675156 -122.54808044]
[-32.72213745 -120.95378876]
[-23.22009850 -109.07245636]
[-24.99244881 -93.59678650]
[-15.78929806 -81.75186920]
[-6.58614779 -69.90695190]
[2.61700249 -58.06203842]
[12.84529877 -57.70380783]
[21.36255074 -51.64172363]
[25.20961571 -41.68505478]
[22.88776779 -31.04157639]
[31.70454597 -18.90632057]
[40.52132416 -6.77106667]
[49.33810425 5.36418867]
[62.22926331 5.58140993]
[72.79681396 13.30240440]
[77.04648590 25.88655472]
[73.21278381 38.80679703]
[81.83291626 51.08251572]
[90.45304871 63.35823441]
[99.07318878 75.63394928]
[113.97789764 77.32199860]
[125.12507629 67.28503418]
[129.67532349 51.52980804]
[145.65766907 47.85602951]
[156.63084412 60.04297256]
[151.30657959 75.55374908]
[135.16203308 78.43221283]
[124.01486206 88.46916962]
[126.73079681 95.46013641]
[138.34999084 85.97360229]
[150.96264648 94.09276581]
[147.13821411 108.59703064]
[132.16267395 109.44207764]
[134.87861633 116.43305206]
[149.87812805 116.31222534]
[164.87763977 116.19139099]
[179.87715149 116.07056427]
[194.87666321 115.94973755]
[209.87619019 115.82890320]
[220.92118835 104.84502411]
[236.13455200 104.93616486]
[246.53793335 115.53357697]
[261.53744507 115.41275024]
[276.53695679 115.29191589]
[291.53646851 115.17108917]
[307.32638550 108.99736023]
[317.62994385 122.46113586]
[307.54461670 136.08915710]
[291.65728760 130.17060852]
[276.65777588 130.29142761]
[261.65826416 130.41226196]
[246.65876770 130.53309631]
[236.42745972 141.29672241]
[221.21752930 141.63293457]
[209.99700928 130.82841492]
[194.99749756 130.94924927]
[179.99798584 131.07008362]
[164.99847412 131.19090271]
[149.99896240 131.31173706]
[134.99945068 131.43257141]
[124.78421021 142.41659546]
[125.75018311 157.38545227]
[126.71615601 172.35432434]
[127.68212891 187.32318115]
[128.64810181 202.29205322]
[129.61407471 217.26091003]
[130.58006287 232.22978210]
[131.66658020 247.19038391]
[132.87358093 262.14172363]
[134.08058167 277.09310913]
[135.28756714 292.04446411]
[136.49456787 306.99581909]
[145.31723022 320.12863159]
[138.62915039 333.43722534]
[139.83615112 348.38861084]
[155.24351501 352.60348511]
[167.31892395 365.24212646]
[171.53590393 383.75811768]
[165.22615051 403.26605225]
[169.51533508 417.63973999]
[173.80451965 432.01342773]
[179.26417542 439.35369873]
[178.04501343 446.65328979]
[182.10208130 461.09420776]
[186.15914917 475.53515625]
[198.26593018 486.59671021]
[194.47596741 502.55187988]
[178.68804932 506.98739624]
[167.14343262 495.34033203]
[171.71823120 479.59222412]
[167.66116333 465.15130615]
[163.60409546 450.71035767]
[159.43083191 436.30261230]
[155.14164734 421.92892456]
[150.85246277 407.55523682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[16 174]
[17 173]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[38 119]
[39 118]
[40 117]
[41 116]
[44 112]
[45 111]
[46 110]
[47 109]
[49 105]
[50 104]
[51 103]
[52 102]
[55 99]
[56 98]
[57 97]
[58 95]
[59 94]
[60 93]
[61 92]
[67 91]
[68 90]
[74 83]
[75 82]
[120 127]
[121 126]
[133 159]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[141 151]
[142 150]
[143 149]
[144 148]
[178 194]
[179 193]
[180 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
