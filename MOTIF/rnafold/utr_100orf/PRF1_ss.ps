%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCAGGAAGUAGAAGUGAUGUGAGUGGUGGCUGGUGCAAGGAGCCACAGUGGGCUGCCUGGGGGGCUGAUGCCACCAUUCCAGGAGCCUCGGUGAAGAGAGGAUAUCCAUCUGUGUAGCCGCUUCUCUAUACGGGAUUCCAGAGCCCAAGUGCCCCCUGUCUCUGCAGCUCCAUGGCAGCCCGUCUGCUCCUCCUGGGCAUCCUUCUCCUGCUGCUGCCCCUGCCCGUCCCUGCCCCGUGCCACACAGCCGCA\
CGCUCAGAGUGCAAGCGCA\
) } def
/len { sequence length } bind def

/coor [
[440.14096069 953.95532227]
[434.30191040 940.13842773]
[428.46286011 926.32159424]
[422.62380981 912.50476074]
[416.78475952 898.68786621]
[410.94570923 884.87103271]
[405.10665894 871.05419922]
[399.26760864 857.23730469]
[380.71084595 851.20538330]
[372.50039673 833.16656494]
[380.37954712 814.64654541]
[374.07049561 801.03790283]
[367.76144409 787.42919922]
[361.45236206 773.82055664]
[347.42254639 768.95233154]
[340.83041382 755.24108887]
[346.03179932 740.55828857]
[339.72271729 726.94964600]
[329.89413452 724.32879639]
[322.96978760 716.58099365]
[321.39999390 706.08758545]
[325.93716431 696.25457764]
[319.94064331 682.50537109]
[314.40728760 677.64910889]
[313.95516968 668.56463623]
[308.11611938 654.74774170]
[302.27706909 640.93090820]
[296.43801880 627.11407471]
[290.59896851 613.29718018]
[278.51760864 604.58569336]
[280.27261353 588.86212158]
[274.43356323 575.04528809]
[260.57879639 569.69915771]
[254.46034241 555.77008057]
[260.16177368 541.27416992]
[254.32273865 527.45733643]
[248.40486145 513.67407227]
[242.40835571 499.92480469]
[236.41183472 486.17556763]
[221.74867249 476.50488281]
[224.01441956 458.21307373]
[217.86123657 444.53323364]
[211.70805359 430.85336304]
[205.55485535 417.17352295]
[199.40167236 403.49368286]
[184.80763245 400.63854980]
[174.57214355 389.60684204]
[172.77415466 374.48663330]
[180.31129456 361.05166626]
[174.15811157 347.37182617]
[168.00491333 333.69198608]
[161.77369690 320.04748535]
[155.46463013 306.43884277]
[149.15557861 292.83016968]
[142.84651184 279.22149658]
[136.53746033 265.61285400]
[130.22839355 252.00418091]
[123.91933441 238.39550781]
[117.61027527 224.78684998]
[111.30121613 211.17817688]
[104.91452026 197.60577393]
[98.45041656 184.07006836]
[91.98630524 170.53436279]
[85.52219391 156.99865723]
[79.05808258 143.46296692]
[66.53274536 135.20971680]
[51.54473495 134.61012268]
[36.55672455 134.01052856]
[22.29773140 142.11071777]
[8.29210758 133.57992554]
[8.94763470 117.19388580]
[23.58996391 109.80915833]
[37.15632248 119.02251434]
[52.14433289 119.62211609]
[67.13234711 120.22171021]
[69.69302368 113.17239380]
[55.59437943 108.05103302]
[41.49573898 102.92967987]
[27.39709473 97.80832672]
[17.74775124 86.32398224]
[32.51845169 83.70967865]
[46.61709213 88.83103943]
[60.71573639 93.95239258]
[74.81437683 99.07374573]
[77.37505341 92.02442932]
[65.49652100 82.86470795]
[53.61798859 73.70498657]
[33.51677322 71.89057159]
[27.02392387 53.65412521]
[14.93922710 44.76817322]
[2.85453129 35.88222504]
[-9.23016453 26.99627304]
[-23.97348976 31.83507347]
[-38.73492432 27.05179596]
[-47.83839035 14.48571014]
[-47.78342438 -1.03126752]
[-38.59115982 -13.53254318]
[-23.79620934 -18.21112061]
[-9.08753490 -13.26799297]
[-0.12092089 -0.60389143]
[-0.34421358 14.91157722]
[11.74048233 23.79752731]
[23.82517815 32.68347931]
[35.90987396 41.56943130]
[45.78533173 39.13113403]
[55.58572006 42.58474350]
[62.01658249 51.02394867]
[62.77770615 61.82645798]
[74.65624237 70.98617554]
[86.53477478 80.14588928]
[92.70153046 75.87727356]
[105.03504944 67.34004211]
[111.20180511 63.07141876]
[106.81167603 48.72824097]
[102.42154694 34.38506317]
[98.03142548 20.04188347]
[93.64129639 5.69870472]
[89.25116730 -8.64447403]
[84.86103821 -22.98765373]
[80.47090912 -37.33083344]
[65.75437927 -42.25050735]
[56.76758957 -54.90030289]
[56.96614838 -70.41610718]
[66.27371216 -82.83177948]
[81.11132050 -87.37324524]
[95.77362061 -82.29420471]
[104.62265778 -69.54766846]
[104.25579071 -54.03493118]
[94.81409454 -41.72095871]
[99.20421600 -27.37778091]
[103.59434509 -13.03460121]
[107.98447418 1.30857754]
[112.37460327 15.65175629]
[116.76472473 29.99493599]
[121.15485382 44.33811569]
[125.54498291 58.68129349]
[133.03715515 59.02389145]
[129.05842590 44.56119156]
[141.58378601 36.30799484]
[153.30357361 45.66996765]
[148.02149963 59.70909119]
[155.51367188 60.05169296]
[161.19450378 46.16903687]
[166.87532043 32.28638077]
[172.55615234 18.40372276]
[178.23698425 4.52106524]
[171.61584473 -5.29857016]
[170.55010986 -16.97374725]
[175.18833923 -27.61056137]
[184.27947998 -34.62799454]
[195.50784302 -36.38401031]
[201.50436401 -50.13325882]
[195.49583435 -64.75082397]
[201.66035461 -79.30328369]
[216.34063721 -85.15692902]
[230.82710266 -78.83889008]
[236.52520752 -64.09754944]
[230.05436707 -49.67868423]
[215.25360107 -44.13674927]
[209.25709534 -30.38750076]
[216.94895935 -13.74583244]
[209.87672424 3.51532698]
[192.11964417 10.20189571]
[186.43881226 24.08455276]
[180.75798035 37.96720886]
[175.07714844 51.84986496]
[169.39631653 65.73252106]
[167.15570068 106.60831451]
[145.65670776 135.05873108]
[116.74943542 144.60765076]
[92.59378815 136.99885559]
[99.05789948 150.53454590]
[105.52201080 164.07025146]
[111.98611450 177.60595703]
[118.45022583 191.14166260]
[124.94745636 197.50704956]
[124.90988159 204.86912537]
[131.21893311 218.47778320]
[137.52799988 232.08645630]
[143.83705139 245.69511414]
[150.14611816 259.30377197]
[156.45518494 272.91244507]
[162.76423645 286.52111816]
[169.07330322 300.12976074]
[175.38235474 313.73843384]
[181.80645752 320.17761230]
[181.68476868 327.53878784]
[187.83795166 341.21862793]
[193.99114990 354.89849854]
[209.04396057 358.17248535]
[219.16430664 369.54931641]
[220.62770081 384.52670288]
[213.08152771 397.34048462]
[219.23471069 411.02032471]
[225.38789368 424.70019531]
[231.54109192 438.38003540]
[237.69427490 452.05987549]
[249.43376160 457.34277344]
[254.28675842 468.83303833]
[250.16108704 480.17904663]
[256.15759277 493.92828369]
[262.15411377 507.67755127]
[268.42941284 514.26184082]
[268.13958740 521.61828613]
[273.97863770 535.43511963]
[288.34765625 541.44921875]
[294.07247925 555.54461670]
[288.25042725 569.20623779]
[294.08947754 583.02307129]
[306.58847046 592.72283936]
[304.41583252 607.45812988]
[310.25488281 621.27502441]
[316.09393311 635.09185791]
[321.93298340 648.90869141]
[327.77203369 662.72558594]
[333.68991089 676.50885010]
[339.68640137 690.25811768]
[356.42715454 701.53192139]
[353.33139038 720.64056396]
[359.64044189 734.24926758]
[374.20712280 739.76745605]
[380.41152954 753.65844727]
[375.06103516 767.51147461]
[381.37008667 781.12017822]
[387.67916870 794.72882080]
[393.98822021 808.33746338]
[404.53909302 809.38543701]
[413.64364624 814.66033936]
[419.70697021 823.16125488]
[421.69891357 833.32910156]
[419.32849121 843.33270264]
[413.08444214 851.39825439]
[418.92349243 865.21514893]
[424.76254272 879.03198242]
[430.60162354 892.84881592]
[436.44067383 906.66571045]
[442.27972412 920.48254395]
[448.11877441 934.29937744]
[453.95782471 948.11627197]
[459.95431519 961.86553955]
[466.10751343 975.54534912]
[472.26071167 989.22521973]
[478.41387939 1002.90509033]
[494.89343262 1008.82751465]
[501.83673096 1024.53442383]
[495.38409424 1040.08349609]
[501.69314575 1053.69213867]
[508.00219727 1067.30078125]
[514.62054443 1080.76184082]
[521.54461670 1094.06811523]
[528.46875000 1107.37438965]
[543.27435303 1113.55285645]
[547.53619385 1129.01940918]
[537.98498535 1141.90954590]
[521.94757080 1142.33483887]
[511.72650146 1129.96923828]
[515.16247559 1114.29846191]
[508.23837280 1100.99218750]
[501.31427002 1087.68591309]
[498.72540283 1086.70788574]
[496.36022949 1084.66479492]
[494.61935425 1081.63427734]
[493.86889648 1077.83459473]
[494.39355469 1073.60986328]
[488.08447266 1060.00122070]
[481.77542114 1046.39257812]
[469.19613647 1043.70471191]
[460.32061768 1034.12731934]
[458.54382324 1020.99499512]
[464.73403931 1009.05822754]
[458.58084106 995.37841797]
[452.42767334 981.69854736]
[446.27447510 968.01867676]
[442.24053955 965.52673340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 239]
[2 238]
[3 237]
[4 236]
[5 235]
[6 234]
[7 233]
[8 232]
[11 226]
[12 225]
[13 224]
[14 223]
[17 220]
[18 219]
[22 217]
[23 216]
[25 215]
[26 214]
[27 213]
[28 212]
[29 211]
[31 209]
[32 208]
[35 205]
[36 204]
[37 202]
[38 201]
[39 200]
[41 197]
[42 196]
[43 195]
[44 194]
[45 193]
[49 189]
[50 188]
[51 187]
[52 185]
[53 184]
[54 183]
[55 182]
[56 181]
[57 180]
[58 179]
[59 178]
[60 177]
[61 175]
[62 174]
[63 173]
[64 172]
[65 171]
[66 75]
[67 74]
[68 73]
[85 110]
[86 109]
[87 108]
[89 104]
[90 103]
[91 102]
[92 101]
[113 136]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[119 130]
[120 129]
[142 167]
[143 166]
[144 165]
[145 164]
[146 163]
[151 160]
[152 159]
[240 273]
[241 272]
[242 271]
[243 270]
[246 266]
[247 265]
[248 264]
[249 259]
[250 258]
[251 257]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
