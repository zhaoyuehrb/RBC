%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUGUAGCGGUGAACGCCUCCCUUGUAUUUGGGGGCCGUGCCCCAGGCCCCUCUCCCUGUGAACUCCUCUGGGCUUUGUAUCGCAAAGUGAAGACCUCAGGGCACAUGCUGGGGAACCUCUCAUUGGCUGAGAACAGCCUCACCUCUGAUGGGGCCGACUUGAUCACCCUGGCCCGGGAGACCAUCAGCAUCCGCUUCACAGCCA\
) } def
/len { sequence length } bind def

/coor [
[97.40548706 274.76138306]
[96.95243835 259.76824951]
[96.49939728 244.77508545]
[88.38122559 232.28730774]
[95.69818878 218.25973511]
[95.24514008 203.26658630]
[87.12696838 190.77880859]
[94.44393158 176.75123596]
[93.99089050 161.75808716]
[93.53784180 146.76492310]
[93.08479309 131.77177429]
[92.63175201 116.77861786]
[85.74679565 113.80416870]
[84.34400177 128.73843384]
[69.70715332 132.01905823]
[62.06421280 119.11225128]
[71.97687531 107.85526276]
[65.09191895 104.88081360]
[53.86425781 114.82765198]
[42.63659668 124.77449799]
[38.28696442 132.80957031]
[31.16342926 134.78521729]
[19.78681946 144.56134033]
[8.41020966 154.33747864]
[9.80855846 169.79141235]
[1.82735860 183.09855652]
[-12.46445656 189.14202881]
[-27.57139206 185.59800720]
[-37.68452454 173.82922363]
[-38.91514587 158.36102295]
[-30.79005623 145.14125061]
[-16.43352318 139.25315857]
[-1.36592150 142.96086121]
[10.01068878 133.18473816]
[21.38729858 123.40859985]
[32.68975830 113.54683685]
[43.91741943 103.59999084]
[55.14508057 93.65315247]
[73.14729309 95.54978180]
[91.02460480 98.29335022]
[79.07848358 89.22195435]
[67.13236237 80.15056610]
[55.18624115 71.07917023]
[43.24011993 62.00777817]
[31.29399681 52.93638611]
[17.19001770 47.82974625]
[2.20541310 47.15030670]
[-12.77919102 46.47086716]
[-27.76379585 45.79142761]
[-37.33815384 58.00254059]
[-52.27067184 62.22148514]
[-66.81949615 56.82598877]
[-75.39030457 43.89072800]
[-74.68743896 28.38957977]
[-64.98117828 16.28304863]
[-50.00376892 12.22634411]
[-35.51433563 17.77935028]
[-27.08435631 30.80682373]
[-12.09975243 31.48626328]
[2.88485217 32.16570282]
[17.86945724 32.84514236]
[21.40493202 26.23073196]
[8.17611313 19.15978050]
[-5.05270624 12.08882999]
[-18.28141594 5.01767445]
[-11.21005630 -8.21092606]
[2.01824498 -1.13998926]
[15.24706364 5.93096161]
[28.47588348 13.00191307]
[32.01136017 6.38750315]
[23.12142563 -5.69426346]
[14.23149300 -17.77603149]
[-1.14171958 -20.28642845]
[-9.98526669 -32.66569901]
[-7.49724531 -47.30623627]
[-16.38717842 -59.38800430]
[-25.27711105 -71.46977234]
[-34.16704559 -83.55153656]
[-43.05697632 -95.63330841]
[-51.94691086 -107.71507263]
[-60.83684158 -119.79683685]
[-75.09413147 -128.97105408]
[-70.22525787 -145.21083069]
[-53.27230072 -145.02786255]
[-48.75507736 -128.68676758]
[-39.86514282 -116.60500336]
[-30.97521019 -104.52323914]
[-22.08527756 -92.44146729]
[-13.19534397 -80.35970306]
[-4.30541134 -68.27793884]
[4.58452177 -56.19617081]
[19.30234146 -54.21593094]
[28.49010849 -42.08994293]
[26.31325912 -26.66596413]
[35.20319366 -14.58419609]
[44.09312439 -2.50242949]
[49.00139999 6.32941914]
[51.30098724 15.32266140]
[51.17877579 23.80140305]
[48.98265839 31.18260765]
[45.18946838 37.01198578]
[40.36539078 40.99026489]
[52.31151199 50.06165695]
[64.25763702 59.13304901]
[76.20375824 68.20444489]
[88.14987946 77.27583313]
[100.09600067 86.34722900]
[114.66012573 89.93695831]
[129.45358276 87.45628357]
[144.24702454 84.97560120]
[159.04048157 82.49492645]
[173.83393860 80.01424408]
[188.62739563 77.53356171]
[203.42083740 75.05288696]
[218.19514465 72.46055603]
[232.94943237 69.75672913]
[238.60231018 60.46060944]
[248.24029541 55.90517807]
[258.57681274 57.37672424]
[266.23144531 64.15006256]
[281.06066895 61.89309311]
[295.88989258 59.63612366]
[310.71911621 57.37915802]
[325.54837036 55.12218857]
[315.35354614 43.28577805]
[311.08462524 26.18995667]
[314.63409424 6.35246515]
[326.92984009 -13.13474464]
[338.87597656 -22.20613670]
[350.82208252 -31.27753067]
[362.76821899 -40.34892273]
[374.71432495 -49.42031479]
[380.56390381 -64.74070740]
[396.79714966 -67.06750488]
[406.71469116 -54.00708771]
[400.11422729 -38.99490356]
[383.78573608 -37.47419357]
[371.83959961 -28.40279961]
[359.89349365 -19.33140755]
[347.94735718 -10.26001453]
[336.00125122 -1.18862224]
[342.77069092 12.19698524]
[357.15728760 7.95123959]
[371.54385376 3.70549321]
[382.44598389 -8.54503822]
[398.44943237 -4.96424150]
[403.09118652 10.76426601]
[391.59625244 22.46034431]
[375.78961182 18.09207153]
[361.40301514 22.33781815]
[347.01644897 26.58356476]
[347.01644897 34.08356476]
[347.01644897 49.08356476]
[347.01644897 56.58356476]
[361.40301514 60.82931137]
[375.78961182 65.07505798]
[390.17617798 69.32080078]
[404.56274414 73.56655121]
[418.94934082 77.81229401]
[429.15505981 66.46302795]
[443.27761841 60.67374039]
[458.51300049 61.59389496]
[471.83615112 69.04079437]
[480.60177612 81.53585052]
[483.06945801 96.59816742]
[478.74923706 111.23709869]
[468.49890137 122.54608917]
[454.35363770 128.27972412]
[439.12200928 127.29957581]
[425.82830811 119.80027008]
[417.11193848 107.27079010]
[414.70358276 92.19887543]
[400.31701660 87.95312500]
[385.93041992 83.70738220]
[371.54385376 79.46163177]
[357.15728760 75.21588898]
[342.77069092 70.97014618]
[327.80532837 69.95142365]
[312.97610474 72.20838928]
[298.14688110 74.46535492]
[283.31762695 76.72232056]
[268.48840332 78.97929382]
[254.31475830 92.13005066]
[235.65325928 84.51103210]
[220.89895630 87.21485901]
[214.88493347 91.51362610]
[205.90151978 89.84633636]
[191.10806274 92.32701874]
[176.31462097 94.80769348]
[161.52116394 97.28837585]
[146.72770691 99.76905823]
[131.93426514 102.24973297]
[117.14080811 104.73041534]
[107.62490845 116.32556915]
[108.07794952 131.31872559]
[108.53099823 146.31188965]
[108.98404694 161.30503845]
[109.43708801 176.29820251]
[117.58766937 189.85838318]
[110.23829651 202.81353760]
[110.69134521 217.80670166]
[118.84191895 231.36688232]
[111.49255371 244.32203674]
[111.94559479 259.31518555]
[112.39864349 274.30834961]
[118.92061615 289.95764160]
[105.68836975 300.55688477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[5 201]
[6 200]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[18 38]
[19 37]
[20 36]
[22 35]
[23 34]
[24 33]
[40 107]
[41 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 61]
[47 60]
[48 59]
[49 58]
[70 96]
[71 95]
[72 94]
[75 91]
[76 90]
[77 89]
[78 88]
[79 87]
[80 86]
[81 85]
[108 193]
[109 192]
[110 191]
[111 190]
[112 189]
[113 188]
[114 187]
[115 185]
[116 184]
[120 182]
[121 181]
[122 180]
[123 179]
[124 178]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[142 151]
[143 150]
[144 149]
[154 177]
[155 176]
[156 175]
[157 174]
[158 173]
[159 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
