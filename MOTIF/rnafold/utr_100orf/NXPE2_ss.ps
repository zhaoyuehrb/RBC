%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCUCAUAGGGAAACUCCAACCCUAAGAUAAAUGCAAAGACUGCUUUAAUCAAGGAGAGUCUCUGGACACUAUAAUUCCUGUGAGAACACGAGAAGAUGGUGGAGAAAAUACUCAUCCAUAGGAUACUCACUUUGUUUCCAAAUGCCAUAGCUCGAAAAUUACUGCUGAUGUUGACAUUUAUCUUAAUUUUCUGGA\
) } def
/len { sequence length } bind def

/coor [
[154.88870239 409.73934937]
[140.26940918 413.09735107]
[125.28359985 412.44509888]
[111.01136017 407.82955933]
[98.48134613 399.58343506]
[88.59666443 388.30099487]
[82.06972504 374.79547119]
[79.37096405 360.04025269]
[80.69558716 345.09576416]
[72.62222290 357.73776245]
[64.54886627 370.37979126]
[56.47550964 383.02182007]
[48.40214920 395.66384888]
[54.94443130 409.63534546]
[52.87195206 424.92285156]
[42.84603500 436.64825439]
[28.06591415 441.06994629]
[13.24786949 436.77703857]
[3.12028623 425.13934326]
[0.91484016 409.87045288]
[7.33528090 395.84255981]
[20.33286858 387.53195190]
[35.76012039 387.59051514]
[43.83348083 374.94848633]
[51.90683746 362.30645752]
[59.98019791 349.66442871]
[68.05355835 337.02239990]
[73.93025970 323.22149658]
[77.44921112 308.64010620]
[80.96815491 294.05871582]
[84.48710632 279.47732544]
[88.00605011 264.89593506]
[91.52500153 250.31454468]
[95.04394531 235.73315430]
[98.56289673 221.15176392]
[102.08184052 206.57037354]
[105.48558044 191.96165466]
[108.77391052 177.32652283]
[112.06223297 162.69140625]
[103.11188507 150.65431213]
[88.14972687 149.58959961]
[73.18756104 148.52487183]
[58.22539520 147.46015930]
[43.26322937 146.39544678]
[34.47116470 148.90959167]
[28.07387161 145.19398499]
[13.13037968 143.89320374]
[-1.81311274 142.59240723]
[-16.75660515 141.29162598]
[-28.69622612 151.64639282]
[-44.45458984 150.44239807]
[-54.68253326 138.39396667]
[-53.31200409 122.64921570]
[-41.15610886 112.54922485]
[-25.42672729 114.08614349]
[-15.45582199 126.34813690]
[-0.51232958 127.64891815]
[14.43116283 128.94970703]
[29.37465477 130.25048828]
[44.32794952 131.43327332]
[59.29011536 132.49800110]
[74.25228119 133.56271362]
[89.21444702 134.62744141]
[104.17660522 135.69215393]
[69.62329865 109.10273743]
[87.65450287 75.44161224]
[84.82982635 60.70997238]
[82.00514984 45.97833252]
[79.18047333 31.24669266]
[74.86162567 16.88189125]
[69.09403992 3.03505301]
[63.32645035 -10.81178570]
[57.55886078 -24.65862465]
[51.79127502 -38.50546265]
[46.02368927 -52.35229874]
[34.41150665 -57.98128891]
[29.89546204 -69.64088440]
[34.38961029 -80.87822723]
[28.84132957 -94.81439209]
[23.29305077 -108.75054932]
[11.00001907 -118.71006775]
[13.48093891 -133.39660645]
[7.93265963 -147.33276367]
[2.38438058 -161.26892090]
[-3.16389871 -175.20507812]
[-16.36335945 -184.93679810]
[-14.26653290 -201.20133972]
[0.96954471 -207.26715088]
[13.67130375 -196.89422607]
[10.77226257 -180.75335693]
[16.32054138 -166.81719971]
[21.86882210 -152.88104248]
[27.41710091 -138.94488525]
[39.31328201 -129.98217773]
[37.22921371 -114.29882812]
[42.77749252 -100.36267090]
[48.32577133 -86.42650604]
[62.66464615 -76.31625366]
[59.87052536 -58.11988831]
[65.63811493 -44.27304840]
[71.40570068 -30.42621040]
[77.17328644 -16.57937241]
[82.94087982 -2.73253441]
[88.70846558 11.11430359]
[103.70426178 10.75913239]
[108.80982971 -3.34523463]
[113.91539764 -17.44960213]
[106.98497772 -31.65329361]
[112.20689392 -46.56996918]
[126.48306274 -53.34982681]
[141.34368896 -47.97050095]
[147.97224426 -33.62344742]
[142.43609619 -18.82052040]
[128.01976013 -12.34403133]
[122.91419220 1.76033485]
[117.80862427 15.86470127]
[106.42575836 26.77116776]
[93.91211700 28.42201805]
[96.73678589 43.15365982]
[99.56146240 57.88529968]
[102.38613892 72.61693573]
[117.10284424 74.98457336]
[129.70135498 85.34651947]
[135.88241577 101.95591736]
[148.95101929 94.59304810]
[162.01960754 87.23017883]
[170.24494934 73.71520996]
[185.13137817 74.20896912]
[198.19996643 66.84609985]
[200.89929199 51.44325638]
[212.90106201 41.41870880]
[228.53840637 41.50574493]
[240.42784119 51.66326904]
[242.95555115 67.09520721]
[234.92802429 80.51506805]
[220.13560486 85.58641052]
[205.56283569 79.91469574]
[192.49424744 87.27756500]
[185.20365906 100.26589203]
[169.38247681 100.29877472]
[156.31388855 107.66164398]
[143.24528503 115.02450562]
[143.77764893 122.50559235]
[158.73982239 121.44087219]
[173.70199585 120.37640381]
[174.76622009 135.33860779]
[159.80453491 136.40303040]
[144.84237671 137.46775818]
[145.37472534 144.94883728]
[159.35424805 150.38694763]
[173.33377075 155.82504272]
[187.35578918 161.15263367]
[201.41941833 166.36936951]
[215.48304749 171.58612061]
[226.43881226 160.95909119]
[240.92323303 156.14614868]
[256.06039429 158.10290527]
[268.84481812 166.44084167]
[276.73815918 179.50445557]
[278.17315674 194.69996643]
[272.86489868 209.01029968]
[261.86734009 219.59410095]
[247.36408997 224.34996033]
[232.23475647 222.33361816]
[219.48326111 213.94538879]
[211.64144897 200.85078430]
[210.26629639 185.64974976]
[196.20266724 180.43299866]
[182.13903809 175.21626282]
[174.76718140 175.83811951]
[167.89567566 169.80456543]
[153.91615295 164.36647034]
[139.93663025 158.92835999]
[126.69735718 165.97972107]
[123.40903473 180.61485291]
[120.12071228 195.24998474]
[121.29297638 204.31900024]
[116.66323090 210.08930969]
[113.14428711 224.67071533]
[109.62534332 239.25210571]
[106.10639191 253.83349609]
[102.58744812 268.41488647]
[99.06849670 282.99627686]
[95.54955292 297.57766724]
[92.03060150 312.15905762]
[88.51165771 326.74044800]
[98.36514282 315.43078613]
[110.87232971 307.15005493]
[125.13177490 302.49514771]
[140.11572266 301.80148315]
[154.74423218 305.11911011]
[167.96296692 312.20892334]
[178.81918335 322.55987549]
[186.53044128 335.42596436]
[190.54095459 349.87988281]
[190.56167603 364.87988281]
[186.59109497 379.34481812]
[178.91539001 392.23217773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 176]
[38 175]
[39 174]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[46 59]
[47 58]
[48 57]
[49 56]
[66 121]
[67 120]
[68 119]
[69 118]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[78 97]
[79 96]
[80 95]
[82 93]
[83 92]
[84 91]
[85 90]
[105 116]
[106 115]
[107 114]
[124 142]
[125 141]
[126 140]
[128 138]
[129 137]
[149 173]
[150 172]
[151 171]
[152 169]
[153 168]
[154 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
