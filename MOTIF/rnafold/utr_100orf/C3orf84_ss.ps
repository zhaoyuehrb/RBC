%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUGACCUCCAGAGAUUCUCUUUCCUGAAGAUACCCUCCAAAAGACAAGAGGAAAGUUUGCCUUUUCUGCUCCCUUCUUGGAAAGAUGCAAAGUGCUUUAGUAGGCUCCUGGCACAACAAUGGCUUCUAUGGGCACUACAGAAGCCAAUUCAAGAGUGAAAGUGCUAGAGAAUACCACCUUGCAG\
) } def
/len { sequence length } bind def

/coor [
[143.19276428 129.28039551]
[136.90423584 136.89219666]
[129.29447937 143.18321228]
[120.63595581 147.92822266]
[111.23863220 150.95733643]
[101.43895721 152.16212463]
[91.58776093 151.49943542]
[82.03773499 148.99299622]
[73.13078308 144.73255920]
[63.63912201 156.34756470]
[60.89794159 171.92950439]
[46.85316086 176.88867188]
[37.36150360 188.50367737]
[27.86984444 200.11868286]
[24.85409737 208.76251221]
[18.12124634 211.84674072]
[8.43682861 223.30152893]
[11.27318001 238.67973328]
[3.51610446 252.25772095]
[-11.17174530 257.62438965]
[-25.85521507 252.24574280]
[-33.60121918 238.66143799]
[-30.75233269 223.28555298]
[-18.65371132 213.37811279]
[-3.01795459 213.61711121]
[6.66646338 202.16232300]
[16.25483513 190.62702942]
[25.74649429 179.01202393]
[35.23815155 167.39701843]
[37.30042648 152.64587402]
[52.02411652 146.85591125]
[61.51577377 135.24090576]
[56.54979324 128.89700317]
[52.61951828 121.86428070]
[49.81863403 114.31039429]
[48.21390533 106.41539764]
[47.84358215 98.36748505]
[48.71649170 90.35847473]
[50.81182861 82.57929230]
[37.53895950 75.59137726]
[24.26609230 68.60346222]
[10.99322319 61.61555099]
[-2.27964568 54.62763596]
[-15.61043644 47.75086212]
[-28.99821854 40.98571014]
[-42.38600159 34.22055817]
[-54.51693344 43.41848755]
[-69.37786865 46.42505264]
[-84.01062775 42.69641495]
[-95.52609253 33.02403259]
[-101.67469788 19.36738396]
[-101.28573608 4.45717955]
[-114.67352295 -2.30797243]
[-128.06130981 -9.07312393]
[-141.44908142 -15.83827591]
[-154.83686829 -22.60342789]
[-168.22465515 -29.36857986]
[-181.61242676 -36.13373184]
[-197.24118042 -32.51134872]
[-209.72767639 -42.58443451]
[-209.49334717 -58.62577438]
[-196.71794128 -68.32983398]
[-181.20167542 -64.25247955]
[-174.84727478 -49.52151489]
[-161.45950317 -42.75636292]
[-148.07171631 -35.99121094]
[-134.68392944 -29.22605896]
[-121.29615021 -22.46090698]
[-107.90837097 -15.69575500]
[-94.52058411 -8.93060303]
[-82.74755096 -18.08817482]
[-68.10576630 -21.23896599]
[-53.48807526 -17.70566750]
[-41.80640793 -8.13702869]
[-35.41169357 5.61050224]
[-35.62084961 20.83277702]
[-22.23306656 27.59792900]
[-8.84528542 34.36307907]
[-1.44263387 34.57415009]
[4.70826912 41.35476685]
[17.98113823 48.34268188]
[31.25400734 55.33059692]
[44.52687454 62.31851196]
[57.79974365 69.30642700]
[75.36586761 53.99873352]
[97.84346008 47.86262131]
[120.75102234 52.12148285]
[139.52130127 65.92620850]
[150.41197205 86.52445221]
[165.30946350 84.77383423]
[180.20695496 83.02322388]
[195.10444641 81.27260590]
[210.00195312 79.52199554]
[222.80480957 70.22698212]
[236.34811401 76.42604065]
[251.24560547 74.67542267]
[266.14309692 72.92481232]
[256.25457764 61.64575958]
[258.73852539 46.85285187]
[271.76867676 39.42217255]
[285.76498413 44.81691742]
[290.43704224 59.07075119]
[282.35009766 71.70378113]
[297.34173584 71.20255280]
[312.33334351 70.70133209]
[323.09622192 59.44084930]
[338.30700684 59.14609528]
[348.97579956 69.47624207]
[363.96743774 68.97501373]
[378.95907593 68.47379303]
[387.45101929 65.05370331]
[394.20492554 68.09156036]
[409.20281982 67.84091187]
[424.20074463 67.59026337]
[439.19863892 67.33961487]
[454.19656372 67.08896637]
[469.19445801 66.83832550]
[474.02185059 57.90145493]
[481.87844849 51.58012390]
[491.50039673 48.81818390]
[501.36779785 49.99271774]
[509.94485474 54.86360931]
[515.91882324 62.61992264]
[530.70983887 60.12498093]
[545.50091553 57.63003922]
[560.29193115 55.13510132]
[575.08300781 52.64015961]
[589.87408447 50.14521790]
[604.66510010 47.65028000]
[619.45617676 45.15533829]
[631.77716064 35.23044205]
[645.61407471 40.74304581]
[660.40515137 38.24810410]
[675.19622803 35.75316620]
[689.80902100 27.15653801]
[702.11492920 38.81849289]
[694.31530762 53.87182236]
[677.69116211 50.54421997]
[662.90008545 53.03915787]
[648.10906982 55.53409958]
[636.84600830 65.28054047]
[621.95111084 59.94639206]
[607.16003418 62.44133377]
[592.36901855 64.93627167]
[577.57794189 67.43121338]
[562.78692627 69.92615509]
[547.99584961 72.42109680]
[533.20477295 74.91603088]
[518.41375732 77.41097260]
[518.28240967 78.23188782]
[518.12353516 79.04790497]
[531.15551758 86.47542572]
[544.18743896 93.90295410]
[557.21942139 101.33048248]
[573.60638428 100.69810486]
[582.11737061 114.71577454]
[573.99700928 128.96330261]
[557.59887695 128.78405762]
[549.79187012 114.36243439]
[536.75994873 106.93491364]
[523.72796631 99.50738525]
[510.69601440 92.07985687]
[487.56268311 98.32273865]
[469.44509888 81.83622742]
[454.44720459 82.08687592]
[439.44927979 82.33752441]
[424.45138550 82.58817291]
[409.45349121 82.83881378]
[394.45556641 83.08946228]
[379.46029663 83.46541595]
[364.46865845 83.96663666]
[349.47705078 84.46786499]
[339.52203369 95.48753357]
[324.32553101 96.20941162]
[312.83456421 85.69295502]
[297.84295654 86.19417572]
[282.85131836 86.69540405]
[267.89370728 87.82230377]
[252.99621582 89.57292175]
[238.09872437 91.32353210]
[226.36143494 100.49333191]
[211.75256348 94.41948700]
[196.85507202 96.17010498]
[181.95758057 97.92071533]
[167.06007385 99.67133331]
[152.16258240 101.42194366]
[150.96099854 111.22201538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 32]
[10 31]
[12 29]
[13 28]
[14 27]
[16 26]
[17 25]
[39 84]
[40 83]
[41 82]
[42 81]
[43 80]
[44 78]
[45 77]
[46 76]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[89 186]
[90 185]
[91 184]
[92 183]
[93 182]
[95 180]
[96 179]
[97 178]
[103 177]
[104 176]
[105 175]
[108 172]
[109 171]
[110 170]
[112 169]
[113 168]
[114 167]
[115 166]
[116 165]
[117 164]
[123 149]
[124 148]
[125 147]
[126 146]
[127 145]
[128 144]
[129 143]
[130 142]
[132 140]
[133 139]
[134 138]
[151 162]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
