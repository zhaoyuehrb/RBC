%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:18:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCCUGCCGAGAAAUGGGCCGGCCCGGCUGCGCGCGGGCAGCAGCGGUGGCGGCGGCGGUCCAAGAUGGCGGAACUGCAGCUGGACCCGGCGAUGGCGGGGCUGGGAGGGGGCGGCGGGAGUGGGGUGGGCGACGGGGGUGGCCCAGUCCGCGGGCCCCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[154.67030334 129.74411011]
[168.74775696 124.56547546]
[155.75737000 117.06547546]
[142.76699829 109.56547546]
[129.77661133 102.06547546]
[116.78623199 94.56547546]
[113.04875183 109.56584167]
[99.88996124 114.71450806]
[92.14836884 127.56237793]
[84.40676880 140.41024780]
[90.57575989 154.64833069]
[87.16479492 169.78587341]
[75.48544312 180.00215149]
[60.02867126 181.36882019]
[46.73791504 173.36036682]
[40.72374344 159.05619812]
[44.29872894 143.95655823]
[56.08821487 133.86756897]
[71.55890656 132.66865540]
[79.30049896 119.82078552]
[87.04209137 106.97291565]
[86.49233246 91.09391785]
[101.56298065 82.42533875]
[91.36038971 71.42956543]
[81.15779877 60.43378448]
[70.95520782 49.43800735]
[60.75261688 38.44223022]
[45.69427109 33.58868790]
[42.70936966 18.99623680]
[32.50677872 8.00045776]
[22.30418777 -2.99531984]
[12.10159779 -13.99109840]
[1.79664373 -24.89100266]
[-8.60977173 -35.69408035]
[-19.01618767 -46.49716187]
[-27.25999260 -50.52930450]
[-29.51384163 -57.60089111]
[-39.71643066 -68.59666443]
[-49.91902161 -79.59244537]
[-60.12161255 -90.58822632]
[-70.52803040 -101.39130402]
[-81.13462830 -111.99790192]
[-91.74123383 -122.60450745]
[-102.34783173 -133.21110535]
[-117.57712555 -137.49819946]
[-121.10556793 -151.96884155]
[-131.71217346 -162.57543945]
[-142.31877136 -173.18205261]
[-152.92536926 -183.78865051]
[-163.53198242 -194.39524841]
[-179.10789490 -194.56394958]
[-189.71340942 -205.47164917]
[-189.45658875 -220.31987000]
[-200.06318665 -230.92646790]
[-215.29248047 -235.21356201]
[-218.82092285 -249.68420410]
[-229.42753601 -260.29080200]
[-244.02091980 -255.67651367]
[-259.08505249 -258.38406372]
[-271.15826416 -267.79125977]
[-277.46627808 -281.73645020]
[-276.55950928 -297.01507568]
[-268.64636230 -310.11624146]
[-255.54519653 -318.02938843]
[-240.26657104 -318.93615723]
[-226.32139587 -312.62814331]
[-216.91418457 -300.55490112]
[-214.20663452 -285.49078369]
[-218.82092285 -270.89739990]
[-208.21432495 -260.29080200]
[-193.74368286 -256.76235962]
[-189.45658875 -241.53306580]
[-178.84999084 -230.92646790]
[-164.00177002 -231.18327332]
[-153.09407043 -220.57777405]
[-152.92536926 -205.00184631]
[-142.31877136 -194.39524841]
[-131.71217346 -183.78865051]
[-121.10556793 -173.18205261]
[-110.49897003 -162.57543945]
[-96.02832794 -159.04699707]
[-91.74123383 -143.81770325]
[-81.13462830 -133.21110535]
[-70.52803040 -122.60450745]
[-59.92142868 -111.99790192]
[-55.19111633 -111.10530853]
[-50.98535919 -107.20556641]
[-49.12583542 -100.79081726]
[-38.92324448 -89.79503632]
[-28.72065353 -78.79925537]
[-18.51806259 -67.80348206]
[-8.21310902 -56.90357590]
[2.19330668 -46.10049820]
[12.59972286 -35.29742050]
[19.53380775 -32.65060806]
[23.09737587 -24.19368935]
[33.29996490 -13.19791126]
[43.50255966 -2.20213294]
[53.70515060 8.79364491]
[68.03373718 12.86069489]
[71.74839020 28.23963737]
[81.95098114 39.23541641]
[92.15357208 50.23119354]
[102.35616302 61.22697067]
[112.55875397 72.22274780]
[124.28623199 81.57509613]
[137.27661133 89.07509613]
[150.26699829 96.57509613]
[163.25737000 104.07509613]
[176.24775696 111.57509613]
[189.63822937 118.33492279]
[203.38665771 124.33330536]
[217.13510132 130.33168030]
[230.88352966 136.33006287]
[240.04284668 136.90051270]
[244.83131409 142.57128906]
[258.46517944 148.82569885]
[272.09902954 155.08012390]
[282.27172852 148.83230591]
[294.07754517 148.29606628]
[304.55941772 153.48930359]
[311.14819336 163.00936890]
[312.29202271 174.40969849]
[325.68249512 181.16952515]
[339.07296753 187.92935181]
[352.46343994 194.68917847]
[365.85391235 201.44900513]
[381.66015625 200.76104736]
[389.53491211 213.40373230]
[402.92541504 220.16355896]
[416.31588745 226.92337036]
[429.70635986 233.68319702]
[443.09683228 240.44302368]
[458.90307617 239.75506592]
[466.77783203 252.39775085]
[480.16830444 259.15756226]
[496.50238037 257.69833374]
[505.71054077 271.26821899]
[498.32015991 285.90771484]
[481.93386841 286.55694580]
[473.40847778 272.54803467]
[460.01800537 265.78820801]
[445.16952515 266.95968628]
[436.33700562 253.83349609]
[422.94653320 247.07366943]
[409.55606079 240.31384277]
[396.16558838 233.55403137]
[382.77511597 226.79420471]
[367.92663574 227.96566772]
[359.09408569 214.83947754]
[345.70361328 208.07965088]
[332.31314087 201.31982422]
[318.92266846 194.55999756]
[305.53219604 187.80017090]
[288.55770874 194.57354736]
[271.71652222 186.69187927]
[265.84463501 168.71398926]
[252.21076965 162.45957947]
[238.57690430 156.20515442]
[224.88514709 150.07849121]
[211.13671875 144.08012390]
[197.38827515 138.08174133]
[183.63984680 132.08335876]
[187.83258057 146.48547363]
[180.76557922 159.71641541]
[166.46400452 164.24023438]
[153.07357788 157.48031616]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[5 107]
[6 106]
[8 21]
[9 20]
[10 19]
[23 105]
[24 104]
[25 103]
[26 102]
[27 101]
[29 99]
[30 98]
[31 97]
[32 96]
[33 94]
[34 93]
[35 92]
[37 91]
[38 90]
[39 89]
[40 88]
[41 85]
[42 84]
[43 83]
[44 82]
[46 80]
[47 79]
[48 78]
[49 77]
[50 76]
[53 73]
[54 72]
[56 70]
[57 69]
[111 163]
[112 162]
[113 161]
[114 160]
[116 159]
[117 158]
[118 157]
[123 154]
[124 153]
[125 152]
[126 151]
[127 150]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
