%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FRRS1L)
} def

/sequence { (\
AUGCGCAGACCGAGGCAGGGAGGCGGGGGUGCGGGAGGCUCCGCGGCUGCGCGGGCGCGUGCUGGUGGCCUCGGCGGAGGCUCAGUCCCGGCCCGCGCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 17 0.120624996 ubox
2 53 0.117083885 ubox
3 16 0.133885620 ubox
3 24 0.005445729 ubox
3 52 0.976497434 ubox
3 98 0.005482119 ubox
4 12 0.011079754 ubox
4 15 0.133868778 ubox
4 23 0.005558469 ubox
4 25 0.033967944 ubox
4 51 0.977490008 ubox
4 97 0.005498946 ubox
5 11 0.011988775 ubox
5 16 0.058099923 ubox
5 24 0.038760251 ubox
5 50 0.977458878 ubox
5 96 0.005471797 ubox
6 15 0.058153455 ubox
6 23 0.038883865 ubox
6 49 0.977460403 ubox
6 95 0.005464339 ubox
7 48 0.974085726 ubox
8 47 0.972117938 ubox
9 30 0.343579608 ubox
10 19 0.244100338 ubox
10 20 0.107296940 ubox
10 23 0.024224953 ubox
10 26 0.039469951 ubox
10 27 0.032770398 ubox
10 28 0.070673582 ubox
10 29 0.364895587 ubox
10 46 0.873657969 ubox
11 18 0.244724430 ubox
11 19 0.107606945 ubox
11 22 0.025078082 ubox
11 25 0.039599215 ubox
11 26 0.032773616 ubox
11 27 0.071085211 ubox
11 28 0.364986682 ubox
11 43 0.011644409 ubox
11 45 0.873564667 ubox
12 24 0.035684849 ubox
12 30 0.003655135 ubox
12 41 0.012953199 ubox
12 42 0.017308287 ubox
12 44 0.847127758 ubox
13 40 0.014927991 ubox
14 39 0.011986956 ubox
14 40 0.190130929 ubox
14 41 0.041547574 ubox
14 42 0.773429909 ubox
15 24 0.481419839 ubox
15 30 0.006181118 ubox
15 32 0.013194292 ubox
15 39 0.207337396 ubox
15 40 0.007184530 ubox
15 41 0.773363669 ubox
15 44 0.040057076 ubox
15 50 0.003970072 ubox
16 23 0.481373130 ubox
16 29 0.006398949 ubox
16 31 0.013380411 ubox
16 38 0.211513149 ubox
16 43 0.043654751 ubox
16 49 0.003988105 ubox
17 30 0.012905998 ubox
17 40 0.740057730 ubox
17 48 0.004027941 ubox
18 39 0.741975734 ubox
18 40 0.106222269 ubox
18 41 0.031408005 ubox
18 42 0.016404783 ubox
18 47 0.004064075 ubox
19 39 0.116807740 ubox
19 40 0.053569482 ubox
19 41 0.015593662 ubox
19 42 0.042767969 ubox
20 39 0.054566326 ubox
20 40 0.008913338 ubox
20 41 0.043574189 ubox
20 47 0.013523539 ubox
21 40 0.043707468 ubox
21 48 0.070011967 ubox
22 39 0.040646963 ubox
22 40 0.039981733 ubox
22 47 0.082124580 ubox
22 48 0.007099552 ubox
22 99 0.036450766 ubox
23 30 0.072454875 ubox
23 32 0.601540751 ubox
23 39 0.043891722 ubox
23 44 0.228663771 ubox
23 47 0.010448938 ubox
23 52 0.203785839 ubox
23 98 0.036583261 ubox
24 29 0.074053084 ubox
24 31 0.601584025 ubox
24 33 0.525584075 ubox
24 38 0.046623304 ubox
24 43 0.237198072 ubox
24 45 0.123744395 ubox
24 46 0.009129636 ubox
24 51 0.203996595 ubox
24 97 0.036606503 ubox
25 30 0.533252141 ubox
25 32 0.524935500 ubox
25 41 0.003652670 ubox
25 42 0.238838958 ubox
25 44 0.149294762 ubox
25 50 0.204802264 ubox
25 96 0.036595747 ubox
26 40 0.004073673 ubox
26 41 0.234576600 ubox
26 42 0.240926869 ubox
27 39 0.007971893 ubox
27 40 0.229025996 ubox
27 41 0.245565779 ubox
27 42 0.166096707 ubox
27 48 0.207163831 ubox
27 94 0.036574415 ubox
27 100 0.017530356 ubox
28 39 0.214571755 ubox
28 40 0.249068724 ubox
28 41 0.166013381 ubox
28 42 0.103323560 ubox
28 47 0.209275186 ubox
28 48 0.006570936 ubox
28 93 0.036579334 ubox
28 99 0.017750913 ubox
29 39 0.252717537 ubox
29 40 0.156225393 ubox
29 41 0.103842911 ubox
29 44 0.005832497 ubox
29 47 0.009203445 ubox
29 92 0.036576995 ubox
29 98 0.017762264 ubox
30 38 0.255161396 ubox
30 43 0.005895647 ubox
30 45 0.238670781 ubox
30 46 0.007999628 ubox
30 91 0.034652461 ubox
30 97 0.017769678 ubox
31 39 0.209735394 ubox
31 42 0.005985032 ubox
31 44 0.443791251 ubox
31 96 0.017777439 ubox
32 38 0.213087769 ubox
32 43 0.445102625 ubox
32 45 0.013652560 ubox
32 90 0.035330252 ubox
32 95 0.017777506 ubox
33 40 0.013727875 ubox
33 41 0.008273345 ubox
33 42 0.444972661 ubox
33 44 0.013956670 ubox
33 88 0.006896368 ubox
33 89 0.035935511 ubox
33 94 0.017770848 ubox
34 39 0.015229489 ubox
34 40 0.009870646 ubox
34 41 0.444164453 ubox
34 42 0.030852664 ubox
34 87 0.006931179 ubox
34 88 0.035927646 ubox
34 93 0.017749783 ubox
35 39 0.054537416 ubox
35 40 0.346735786 ubox
35 41 0.036687427 ubox
35 83 0.013601481 ubox
35 87 0.034191433 ubox
35 92 0.015373618 ubox
36 40 0.036276592 ubox
36 82 0.020890211 ubox
36 86 0.028227954 ubox
37 81 0.028590408 ubox
37 82 0.016597409 ubox
37 83 0.004720579 ubox
37 89 0.004414039 ubox
38 56 0.015149879 ubox
38 58 0.015974514 ubox
38 81 0.017321702 ubox
39 55 0.015093497 ubox
39 57 0.016015118 ubox
39 79 0.031365635 ubox
39 80 0.012915488 ubox
40 55 0.016019608 ubox
40 78 0.033430558 ubox
40 79 0.005675771 ubox
41 54 0.022197431 ubox
41 77 0.033909929 ubox
42 53 0.022259246 ubox
42 76 0.033909860 ubox
43 52 0.023039368 ubox
43 75 0.033901886 ubox
44 51 0.023040845 ubox
44 73 0.003613869 ubox
44 74 0.033684241 ubox
45 50 0.022939061 ubox
45 70 0.033258046 ubox
45 72 0.004127032 ubox
46 69 0.033322851 ubox
46 71 0.003517564 ubox
47 68 0.033298073 ubox
48 67 0.029314123 ubox
49 62 0.020833410 ubox
49 66 0.017030685 ubox
49 69 0.003395435 ubox
49 98 0.026624772 ubox
50 61 0.020873047 ubox
50 65 0.016904840 ubox
50 67 0.016077302 ubox
50 97 0.026733435 ubox
51 60 0.021016763 ubox
51 62 0.003538257 ubox
51 66 0.020416987 ubox
51 96 0.026759228 ubox
52 59 0.021026458 ubox
52 61 0.003555965 ubox
52 64 0.015165759 ubox
52 65 0.020734616 ubox
52 95 0.026759518 ubox
53 58 0.020933992 ubox
53 60 0.003284642 ubox
53 63 0.013889180 ubox
53 94 0.027275000 ubox
53 99 0.008413265 ubox
53 100 0.984610333 ubox
54 62 0.012460635 ubox
54 63 0.022289192 ubox
54 93 0.027276532 ubox
54 98 0.005985161 ubox
54 99 0.998676258 ubox
54 100 0.004896540 ubox
55 62 0.023304056 ubox
55 92 0.027280560 ubox
55 98 0.998767451 ubox
55 99 0.003519317 ubox
56 61 0.024069772 ubox
56 91 0.027237867 ubox
56 97 0.998777775 ubox
57 96 0.998777835 ubox
58 65 0.003230228 ubox
58 90 0.025781081 ubox
58 95 0.998773717 ubox
59 89 0.025790446 ubox
59 94 0.997088725 ubox
61 86 0.031195776 ubox
61 92 0.997775046 ubox
62 85 0.033223814 ubox
62 91 0.998844224 ubox
63 84 0.033246014 ubox
63 90 0.997974520 ubox
64 83 0.033079321 ubox
64 87 0.017117340 ubox
64 88 0.073186659 ubox
64 89 0.995897760 ubox
65 82 0.016398933 ubox
65 86 0.021113132 ubox
65 87 0.102303957 ubox
65 88 0.992420800 ubox
66 84 0.872611430 ubox
66 85 0.096533786 ubox
67 82 0.443728340 ubox
67 83 0.875410188 ubox
67 87 0.150350609 ubox
67 88 0.004282584 ubox
68 81 0.990599556 ubox
68 82 0.097404719 ubox
68 86 0.088091742 ubox
68 87 0.005800273 ubox
69 80 0.995632708 ubox
69 85 0.074095548 ubox
70 79 0.995720438 ubox
70 85 0.045153286 ubox
71 77 0.003824516 ubox
71 78 0.995534852 ubox
71 84 0.062223909 ubox
72 76 0.008523738 ubox
72 77 0.995260271 ubox
73 82 0.081734185 ubox
73 83 0.017269743 ubox
74 81 0.085764323 ubox
75 80 0.085762594 ubox
3 52 0.9500000 lbox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
10 46 0.9500000 lbox
11 45 0.9500000 lbox
12 44 0.9500000 lbox
14 42 0.9500000 lbox
15 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
53 100 0.9500000 lbox
54 99 0.9500000 lbox
55 98 0.9500000 lbox
56 97 0.9500000 lbox
57 96 0.9500000 lbox
58 95 0.9500000 lbox
59 94 0.9500000 lbox
61 92 0.9500000 lbox
62 91 0.9500000 lbox
63 90 0.9500000 lbox
64 89 0.9500000 lbox
65 88 0.9500000 lbox
66 84 0.9500000 lbox
67 83 0.9500000 lbox
68 81 0.9500000 lbox
69 80 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
72 77 0.9500000 lbox
showpage
end
%%EOF
