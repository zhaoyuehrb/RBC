%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCUGCGCGCUGCCCUCCCCGGCCCCGCCUCCGCGGCUCCCGCCCGCGAGCGGUUGGGAUUUGAAUCUGCCGCGGACUGCAGCCGGAAGUGUCGAUCCCUCAGCCAGGGCAUGGAGCUCUCCUGCCCCGGUUCGCGGUGCCCGGUGCAAGAGCAGCGUGCCCGCUGGGAGCGGAAACGCGCCUGCACCGCCCGGGAGCUGCUAGAGACCG\
) } def
/len { sequence length } bind def

/coor [
[99.75703430 311.31689453]
[95.71830750 325.76293945]
[86.21526337 337.36865234]
[72.84975433 344.17770386]
[57.87469864 345.04235840]
[43.81431580 339.81689453]
[33.03864670 329.38208008]
[27.36406326 315.49688721]
[27.74686241 300.50268555]
[19.58655548 313.08877563]
[11.42624950 325.67483521]
[14.51091766 340.94320679]
[6.05591297 353.59103394]
[-8.51913738 356.43768311]
[-16.67944336 369.02377319]
[-24.83974838 381.60986328]
[-21.29775047 397.01211548]
[-29.75492287 410.36322021]
[-45.19377518 413.74218750]
[-58.45471191 405.14431763]
[-61.67025375 389.67059326]
[-52.93267441 376.50131226]
[-37.42582703 373.44955444]
[-29.26552200 360.86346436]
[-21.10521698 348.27737427]
[-24.45420837 333.80950928]
[-16.35779190 320.92916870]
[-1.15982997 317.51452637]
[7.00047588 304.92846680]
[15.16078186 292.34237671]
[22.07883263 279.03295898]
[27.69109344 265.12243652]
[33.30335617 251.21192932]
[29.92023468 233.99147034]
[44.52082443 222.76960754]
[49.92731476 208.77783203]
[55.33380127 194.78604126]
[60.74028778 180.79426575]
[66.14677429 166.80249023]
[71.55326080 152.81071472]
[76.95975494 138.81892395]
[82.36624146 124.82714844]
[87.77272797 110.83537292]
[87.55149841 95.83700562]
[81.73468781 82.01077271]
[75.81607056 68.22781372]
[69.79596710 54.48887253]
[63.77586746 40.74993515]
[57.75576782 27.01099777]
[51.73567200 13.27206039]
[45.71557236 -0.46687722]
[39.69547272 -14.20581436]
[33.67537308 -27.94475174]
[25.33032608 -40.40911102]
[14.92106533 -51.20944595]
[4.51180410 -62.00978470]
[-5.89745665 -72.81011963]
[-16.30671692 -83.61045837]
[-26.79534340 -94.33374023]
[-37.36276245 -104.97937775]
[-52.93795395 -105.20550537]
[-63.50317001 -116.15223694]
[-63.19160843 -130.99940491]
[-73.75902557 -141.64505005]
[-84.32644653 -152.29067993]
[-94.89386749 -162.93632507]
[-110.46906281 -163.16246033]
[-121.03427124 -174.10917664]
[-120.72270966 -188.95635986]
[-131.29013062 -199.60198975]
[-146.50350952 -203.94522095]
[-149.97857666 -218.42877197]
[-160.54598999 -229.07440186]
[-171.19163513 -239.64183044]
[-181.91491699 -250.13044739]
[-197.19004822 -247.40100098]
[-211.13749695 -254.20159912]
[-218.39419556 -267.91726685]
[-216.16978455 -283.27407837]
[-205.31959534 -294.36700439]
[-190.01576233 -296.93060303]
[-176.14289856 -289.97909546]
[-169.03541565 -276.18551636]
[-171.42628479 -260.85372925]
[-160.70300293 -250.36511230]
[-153.72430420 -247.93559265]
[-149.90036011 -239.64183044]
[-139.33293152 -228.99618530]
[-124.87540436 -225.41441345]
[-120.64449310 -210.16941833]
[-110.07707214 -199.52377319]
[-95.22800446 -199.72583008]
[-84.35948944 -189.08018494]
[-84.24822998 -173.50373840]
[-73.68080902 -162.85810852]
[-63.11338806 -152.21246338]
[-52.54596710 -141.56683350]
[-37.69690323 -141.76889038]
[-26.82838440 -131.12322998]
[-26.71712303 -115.54679871]
[-16.14970398 -104.90116119]
[-9.20759296 -102.36898804]
[-5.50638008 -94.01972198]
[4.90288067 -83.21938324]
[15.31214142 -72.41904449]
[25.72140312 -61.61870575]
[36.13066483 -50.81837082]
[41.72541809 -61.79764175]
[52.20198059 -65.92209625]
[57.60846710 -79.91387177]
[63.01495743 -93.90565491]
[68.42144012 -107.89743042]
[73.82793427 -121.88921356]
[74.00177765 -131.02041626]
[79.41871643 -136.04650879]
[85.03097534 -149.95703125]
[90.64323425 -163.86755371]
[87.81839752 -180.02156067]
[100.56768799 -190.33599854]
[115.77573395 -184.20025635]
[117.79779816 -167.92623901]
[104.55375671 -158.25529480]
[98.94149780 -144.34477234]
[93.32923126 -130.43424988]
[87.81970978 -116.48271942]
[82.41322327 -102.49094391]
[77.00673676 -88.49916077]
[71.60025024 -74.50738525]
[66.19376373 -60.51560593]
[70.35607910 -47.68588638]
[62.55702591 -35.62744141]
[47.41431046 -33.96485138]
[53.43441010 -20.22591400]
[59.45450974 -6.48697662]
[65.47460938 7.25196123]
[71.49470520 20.99089813]
[77.51480865 34.72983551]
[83.53490448 48.46877289]
[89.55500793 62.20771027]
[95.11782837 67.07184601]
[95.56091309 76.19395447]
[101.37773132 90.02018738]
[111.57386017 85.78821564]
[125.05097198 91.10811615]
[139.66069031 94.50752258]
[154.27041626 97.90693665]
[168.88014221 101.30634308]
[183.48986816 104.70575714]
[198.09959412 108.10516357]
[207.16558838 107.00204468]
[212.89895630 111.66394806]
[227.45693970 115.27846527]
[236.53823853 114.30917358]
[242.20220947 119.05513763]
[256.70532227 122.88397217]
[265.79989624 122.04872131]
[271.39328003 126.87770081]
[285.83831787 130.92002869]
[300.28338623 134.96234131]
[314.72845459 139.00466919]
[328.38565063 131.51341248]
[342.97738647 135.81867981]
[350.03500366 148.88488770]
[364.48004150 152.92720032]
[378.92510986 156.96952820]
[393.37014771 161.01184082]
[407.81521606 165.05416870]
[424.69778442 163.49996948]
[430.86477661 179.29251099]
[417.39663696 189.59033203]
[403.77288818 179.49922180]
[389.32785034 175.45690918]
[374.88278198 171.41458130]
[360.43771362 167.37226868]
[345.99267578 163.32994080]
[333.17834473 170.83517456]
[318.47140503 166.94145203]
[310.68612671 153.44972229]
[296.24105835 149.40739441]
[281.79602051 145.36508179]
[267.35095215 141.32275391]
[252.87648010 137.38706970]
[238.37338257 133.55824280]
[223.84243774 129.83645630]
[209.28443909 126.22194672]
[194.70018005 122.71488953]
[180.09045410 119.31547546]
[165.48072815 115.91606903]
[150.87100220 112.51665497]
[136.26129150 109.11724854]
[121.65156555 105.71783447]
[129.94621277 118.21578217]
[122.39721680 131.17774963]
[107.43383789 130.13029480]
[101.76450348 116.24185944]
[96.35801697 130.23364258]
[90.95153046 144.22541809]
[85.54504395 158.21719360]
[80.13855743 172.20896912]
[74.73207092 186.20075989]
[69.32558441 200.19253540]
[63.91909409 214.18431091]
[58.51260376 228.17608643]
[63.00930023 240.26397705]
[58.21932220 251.80586243]
[47.21387482 256.82418823]
[41.60161209 270.73471069]
[35.98935318 284.64523315]
[48.04220200 275.71612549]
[62.66711044 272.38265991]
[77.39887238 275.20666504]
[89.75428009 283.71218872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 30]
[10 29]
[11 28]
[14 25]
[15 24]
[16 23]
[31 208]
[32 207]
[33 206]
[35 203]
[36 202]
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[42 196]
[43 195]
[44 142]
[45 141]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[59 101]
[60 100]
[63 97]
[64 96]
[65 95]
[66 94]
[69 91]
[70 90]
[72 88]
[73 87]
[74 85]
[75 84]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[115 124]
[116 123]
[117 122]
[144 191]
[145 190]
[146 189]
[147 188]
[148 187]
[149 186]
[151 185]
[152 184]
[154 183]
[155 182]
[157 181]
[158 180]
[159 179]
[160 178]
[163 175]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
