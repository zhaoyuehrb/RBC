%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUCUAUUAGAUAACAGUAGCUAUUUAAAUACUUCUGCAGAAGCUCACAUAUUUUUAGUUUGUUGAAGUUCGUGACUGCUUCACUCUCUCAUUCUUAGCUUGAAUUUGGAAAUGACUUUUGAUGACCUAAAGAUCCAGACUGUGAAGGACCAGCCUGAUGAGAAGUCAAAUGGAAAAAAAGCUAAAGGUCUUCAGUUUCUUUACUCUCCAU\
) } def
/len { sequence length } bind def

/coor [
[-43.32721710 468.46777344]
[-50.71622467 455.41394043]
[-52.72828674 440.54772949]
[-56.41616058 455.08734131]
[-60.10403061 469.62692261]
[-51.80493546 483.07684326]
[-55.52836990 498.43624878]
[-69.06528473 506.59268188]
[-84.38447571 502.70706177]
[-92.39733124 489.08468628]
[-88.34996796 473.80743408]
[-74.64361572 465.93905640]
[-70.95574951 451.39944458]
[-67.26787567 436.85986328]
[-73.66982269 432.95281982]
[-86.83883667 440.13455200]
[-86.47371674 425.13870239]
[-92.87566376 421.23165894]
[-104.12007904 431.15954590]
[-115.36449432 441.08746338]
[-120.58847809 456.02133179]
[-135.25019836 458.64489746]
[-146.49461365 468.57278442]
[-150.85467529 476.59594727]
[-157.97662354 478.56213379]
[-169.36489868 488.32467651]
[-180.75317383 498.08721924]
[-185.68574524 513.72698975]
[-201.75280762 517.01043701]
[-212.42596436 504.55993652]
[-206.72557068 489.18341064]
[-190.51571655 486.69894409]
[-179.12744141 476.93640137]
[-167.73916626 467.17385864]
[-156.42251587 457.32836914]
[-145.17810059 447.40048218]
[-140.75839233 433.17672729]
[-125.29238892 429.84304810]
[-114.04797363 419.91513062]
[-102.80355835 409.98724365]
[-76.50006866 402.57913208]
[-58.73482513 412.99441528]
[-52.36797333 399.41268921]
[-46.00112152 385.83096313]
[-39.63427353 372.24923706]
[-33.26742172 358.66754150]
[-26.90057182 345.08581543]
[-20.53372192 331.50408936]
[-29.06514740 320.84164429]
[-32.18586349 307.47955322]
[-29.23147774 294.01196289]
[-20.72274971 283.07876587]
[-8.27484703 276.84820557]
[5.70901728 276.58682251]
[12.27363777 263.09957886]
[18.83825874 249.61233521]
[25.40287971 236.12509155]
[31.96750069 222.63784790]
[38.53211975 209.15060425]
[45.09674072 195.66336060]
[51.66136169 182.17611694]
[58.22598267 168.68887329]
[64.79060364 155.20162964]
[71.35522461 141.71438599]
[54.97671127 123.09796906]
[49.40869904 98.93552399]
[55.98812103 75.02867126]
[44.18296814 65.77456665]
[32.37781525 56.52046967]
[20.57266426 47.26636887]
[8.76751232 38.01226807]
[-3.03763986 28.75816536]
[-17.92306328 33.14037704]
[-32.53009796 27.90452385]
[-41.24204254 15.06389809]
[-40.70897293 -0.44401836]
[-31.13586617 -12.65611458]
[-16.20377922 -16.87658882]
[-1.65440357 -11.48258591]
[6.91772985 1.45179296]
[6.21646070 16.95301437]
[18.02161217 26.20711517]
[29.82676506 35.46121597]
[41.63191605 44.71531677]
[53.43706894 53.96941757]
[65.24222565 63.22351837]
[69.41974640 59.68299484]
[73.95539093 56.61462021]
[78.79604340 54.05432510]
[83.88501740 52.03209305]
[81.26830292 37.26209641]
[78.65158844 22.49209976]
[66.47985077 8.67248535]
[73.11121368 -7.57673264]
[70.27896881 -22.30691910]
[67.44671631 -37.03710556]
[64.61447144 -51.76729202]
[50.86582565 -59.21770477]
[45.17089844 -73.78141785]
[50.21866226 -88.58189392]
[63.62572098 -96.63079834]
[79.06166840 -94.12768555]
[89.23812103 -82.25444794]
[89.35006714 -66.61726379]
[79.34465790 -54.59953690]
[82.17690277 -39.86935043]
[85.00915527 -25.13916588]
[87.84140015 -10.40897942]
[97.67568207 -3.36855149]
[100.15721130 8.87797165]
[93.42158508 19.87538528]
[96.03829956 34.64538193]
[98.65501404 49.41537857]
[114.14859772 51.41574478]
[128.29367065 58.04668427]
[139.74208069 68.67620087]
[152.76882935 61.23956299]
[165.79559326 53.80292511]
[178.82234192 46.36628723]
[191.84910583 38.92964554]
[204.87585449 31.49300766]
[217.90261841 24.05636787]
[230.92936707 16.61973000]
[239.07817078 3.05847383]
[253.96714783 3.46806049]
[266.99389648 -3.96857858]
[252.01396179 -4.74397087]
[238.81336975 -11.86748505]
[229.94218445 -23.96302414]
[227.11410522 -38.69401169]
[230.87545776 -53.21476364]
[240.49963379 -64.72020721]
[254.12747192 -70.98776245]
[269.12637329 -70.80667877]
[282.59890747 -64.21193695]
[291.94250488 -52.47748947]
[295.35220337 -37.87016296]
[292.16931152 -23.21174622]
[283.00830078 -11.33358860]
[297.13259888 -16.38371277]
[311.25692749 -21.43383598]
[321.64651489 -33.36561203]
[336.23571777 -30.36495972]
[350.36004639 -35.41508102]
[364.48434448 -40.46520615]
[368.71673584 -55.39392471]
[380.93646240 -64.95729065]
[396.44479370 -65.47800446]
[409.27847290 -56.75582504]
[414.50268555 -42.14462280]
[410.10861206 -27.26269722]
[397.78585815 -17.83245087]
[382.27276611 -17.48000908]
[369.53448486 -26.34089088]
[355.41015625 -21.29076767]
[341.28585815 -16.24064445]
[331.90652466 -4.67008829]
[316.30703735 -7.30952120]
[302.18273926 -2.25939775]
[288.05841064 2.79072523]
[274.43054199 9.05817795]
[261.40377808 16.49481773]
[254.18675232 29.52415466]
[238.36601257 29.64648628]
[225.33926392 37.08312607]
[212.31250000 44.51976395]
[199.28573608 51.95640564]
[186.25898743 59.39304352]
[173.23222351 66.82968140]
[160.20547485 74.26631927]
[147.17871094 81.70295715]
[149.90791321 91.64463043]
[150.56556702 101.93310547]
[149.12434387 112.14134979]
[145.64407349 121.84562683]
[140.26922607 130.64314270]
[133.22288513 138.16873169]
[124.79754639 144.11003113]
[115.34291840 148.22041321]
[105.25143433 150.32926941]
[94.94197845 150.34907532]
[84.84246826 148.27900696]
[78.27784729 161.76625061]
[71.71322632 175.25349426]
[65.14860535 188.74073792]
[58.58398438 202.22798157]
[52.01936340 215.71522522]
[45.45474243 229.20246887]
[38.89012146 242.68971252]
[32.32550430 256.17694092]
[25.76088142 269.66418457]
[19.19626045 283.15145874]
[28.59453011 296.75701904]
[29.84101295 313.15179443]
[22.68987465 327.85296631]
[9.17848587 336.88864136]
[-6.95199776 337.87094116]
[-13.31884861 351.45266724]
[-19.68569946 365.03436279]
[-26.05254936 378.61608887]
[-32.41939926 392.19781494]
[-38.78625107 405.77954102]
[-45.15309906 419.36126709]
[-34.17290878 409.14190674]
[-20.18257523 403.73168945]
[-5.18357229 403.90457153]
[8.67832470 409.63589478]
[19.42001534 420.10565186]
[25.50478172 433.81607056]
[26.06212997 448.80572510]
[21.01232147 462.93014526]
[11.07779312 474.16870117]
[-2.32021332 480.91357422]
[-17.26496124 482.19985962]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[18 40]
[19 39]
[20 38]
[22 36]
[23 35]
[25 34]
[26 33]
[27 32]
[42 203]
[43 202]
[44 201]
[45 200]
[46 199]
[47 198]
[48 197]
[54 192]
[55 191]
[56 190]
[57 189]
[58 188]
[59 187]
[60 186]
[61 185]
[62 184]
[63 183]
[64 182]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[90 113]
[91 112]
[92 111]
[94 108]
[95 107]
[96 106]
[97 105]
[116 171]
[117 170]
[118 169]
[119 168]
[120 167]
[121 166]
[122 165]
[123 164]
[125 162]
[126 161]
[139 160]
[140 159]
[141 158]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
