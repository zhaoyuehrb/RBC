%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGAAUGCGGCAAGGGUCUGGAGGCUGAGGACCAGGCAGACAGACAUUCAGAGUUGCUGGAACGCGACAGAGACAGGGAGUCAGACUGGUCAUGCAAGGCCAGCUCUGGGGUCUCAGCAGGUGGUCCGCAACAUGACCUCUGAGUUCUUCGCUGCCCAGCUCCGGUCCCAGAUCUCUGACCACACCACUCACCCGAUCUCCUACUACAAGCCCGAGUUCUACACGCCGGAUG\
) } def
/len { sequence length } bind def

/coor [
[101.74814606 276.87646484]
[86.79527283 281.45309448]
[72.41916656 275.29992676]
[65.40779114 261.32226562]
[69.07170105 246.11997986]
[81.68090820 236.87109375]
[82.48606110 221.89271545]
[75.44306946 208.76847839]
[83.90996552 195.40351868]
[84.71511078 180.42514038]
[85.52026367 165.44676208]
[86.32540894 150.46838379]
[63.37754440 134.18974304]
[53.00215530 109.32740021]
[57.19109344 83.92471313]
[73.42710876 65.50822449]
[66.45626068 52.22638321]
[59.48541260 38.94454193]
[52.51456451 25.66270256]
[45.76649475 19.53058815]
[45.54064560 12.15542793]
[38.74873734 -1.21880054]
[31.95682716 -14.59302902]
[25.16492081 -27.96725655]
[18.37301254 -41.34148407]
[11.49147987 -54.66981888]
[4.52063179 -67.95166016]
[-2.45021558 -81.23349762]
[-9.19828415 -87.36561584]
[-9.42413616 -94.74077606]
[-16.21604538 -108.11500549]
[-23.00795174 -121.48923492]
[-29.79986000 -134.86346436]
[-36.59176636 -148.23768616]
[-43.25690460 -154.45983887]
[-43.38372421 -161.83737183]
[-49.99546814 -175.30157471]
[-47.14599228 -160.57472229]
[-54.90745926 -147.73884583]
[-69.27261353 -143.42115784]
[-82.82468414 -149.85087585]
[-88.56671143 -163.70832825]
[-83.53407288 -177.83888245]
[-70.32310486 -184.94715881]
[-84.93411255 -181.55328369]
[-99.54512024 -178.15939331]
[-106.46392059 -164.13569641]
[-120.79903412 -157.88758850]
[-135.78184509 -162.36526489]
[-144.33792114 -175.45446777]
[-142.42736816 -190.97489929]
[-130.95227051 -201.59828186]
[-115.33082581 -202.30857849]
[-102.93900299 -192.77040100]
[-88.32799530 -196.16429138]
[-73.71698761 -199.55816650]
[-65.69999695 -212.23602295]
[-68.89742279 -226.89128113]
[-72.09484863 -241.54652405]
[-75.29226685 -256.20178223]
[-78.48969269 -270.85702515]
[-92.54273224 -277.16720581]
[-100.09722900 -290.38775635]
[-98.43803406 -305.34472656]
[-88.40975952 -316.32525635]
[-91.60718536 -330.98049927]
[-94.80460358 -345.63574219]
[-98.00202942 -360.29101562]
[-105.12680054 -347.09109497]
[-118.60424042 -340.50637817]
[-133.39576721 -342.99853516]
[-143.97151184 -353.63589478]
[-146.37771606 -368.44165039]
[-139.71479797 -381.88061523]
[-126.47371674 -388.92858887]
[-111.60469818 -386.95065308]
[-100.66651154 -376.68621826]
[-102.27449036 -391.59976196]
[-103.88246155 -406.51333618]
[-105.49044037 -421.42691040]
[-114.66251373 -434.31811523]
[-108.33414459 -447.80148315]
[-109.94212341 -462.71505737]
[-111.55010223 -477.62863159]
[-113.15807343 -492.54217529]
[-114.76605225 -507.45574951]
[-118.33769226 -512.98883057]
[-118.55793762 -518.64752197]
[-116.21146393 -522.79052734]
[-117.41846466 -537.74188232]
[-118.62545776 -552.69323730]
[-119.83245850 -567.64459229]
[-121.03945923 -582.59594727]
[-122.24645233 -597.54730225]
[-123.45345306 -612.49871826]
[-138.01647949 -621.11682129]
[-144.50320435 -636.56591797]
[-140.53733826 -652.67431641]
[-127.87604523 -663.13415527]
[-129.28366089 -678.06799316]
[-130.79148865 -692.99200439]
[-132.39945984 -707.90557861]
[-134.00744629 -722.81915283]
[-143.17951965 -735.71032715]
[-136.85115051 -749.19372559]
[-138.45912170 -764.10729980]
[-140.16717529 -779.00970459]
[-141.97521973 -793.90032959]
[-143.78327942 -808.79095459]
[-145.59132385 -823.68164062]
[-155.87019348 -836.45959473]
[-149.69207764 -851.65051270]
[-133.41249084 -853.62719727]
[-123.77848816 -840.35626221]
[-130.70069885 -825.48968506]
[-128.89263916 -810.59906006]
[-127.08459473 -795.70837402]
[-125.27654266 -780.81774902]
[-121.35641479 -774.56665039]
[-123.54555511 -765.71527100]
[-121.93758392 -750.80169678]
[-112.88052368 -738.97717285]
[-119.09387970 -724.42712402]
[-117.48590088 -709.51354980]
[-115.87792206 -694.59997559]
[-112.04207611 -688.29681396]
[-114.34985352 -679.47558594]
[-112.94223785 -664.54180908]
[-100.87841034 -658.84350586]
[-93.14018250 -647.84240723]
[-91.83386993 -634.34716797]
[-97.40663147 -621.86853027]
[-108.50209808 -613.70568848]
[-107.29509735 -598.75433350]
[-106.08809662 -583.80297852]
[-104.88109589 -568.85162354]
[-103.67410278 -553.90026855]
[-102.46710205 -538.94891357]
[-101.26010132 -523.99755859]
[-99.85248566 -509.06372070]
[-98.24451447 -494.15014648]
[-96.63653564 -479.23660278]
[-95.02855682 -464.32302856]
[-93.42057800 -449.40945435]
[-84.36351776 -437.58496094]
[-90.57687378 -423.03488159]
[-88.96890259 -408.12130737]
[-87.36092377 -393.20776367]
[-85.75294495 -378.29418945]
[-83.34677887 -363.48843384]
[-80.14935303 -348.83319092]
[-76.95192719 -334.17791748]
[-73.75450897 -319.52267456]
[-60.06389999 -313.71704102]
[-52.32553482 -300.81039429]
[-53.68681717 -285.64462280]
[-63.83443832 -274.05447388]
[-60.63701630 -259.39920044]
[-57.43959045 -244.74395752]
[-54.24216843 -230.08869934]
[-51.04474640 -215.43344116]
[-32.81759644 -202.87452698]
[-36.53126144 -181.91333008]
[-29.91951752 -168.44911194]
[-23.21753883 -155.02960205]
[-16.42563248 -141.65536499]
[-9.63372421 -128.28114319]
[-2.84181595 -114.90691376]
[3.95009184 -101.53268433]
[10.83162498 -88.20434570]
[17.80247307 -74.92250824]
[24.77331924 -61.64066696]
[30.65538216 -57.18585968]
[31.74724007 -48.13339233]
[38.53915024 -34.75916672]
[45.33105469 -21.38493729]
[52.12296295 -8.01070881]
[58.91487122 5.36352015]
[65.79640198 18.69185448]
[72.76725006 31.97369576]
[79.73809814 45.25553513]
[86.70894623 58.53737640]
[94.33682251 56.19897461]
[102.37485504 55.27257919]
[110.56016541 55.82957458]
[118.61760712 57.89215469]
[126.26901245 61.43125153]
[133.24278259 66.36623383]
[139.28349304 72.56635284]
[144.16110229 79.85403442]
[147.67961121 88.00982666]
[149.68461609 96.77897644]
[150.06973267 105.87932587]
[148.78134155 115.01044464]
[145.82179260 123.86348724]
[141.25054932 132.13168335]
[150.89236450 143.62234497]
[165.69004822 149.22045898]
[167.94387817 163.94355774]
[177.58569336 175.43421936]
[187.22749329 186.92488098]
[201.85478210 182.68667603]
[216.94042969 184.77076721]
[229.87072754 192.81607056]
[238.40547180 205.42869568]
[241.06591797 220.42341614]
[237.39115906 235.20233154]
[228.01786804 247.20487976]
[214.57000732 254.35154724]
[199.37751770 255.40415955]
[185.07257080 250.18031311]
[174.13360596 239.58508301]
[168.45584106 225.45416260]
[169.02301025 210.23580933]
[175.73683167 196.56669617]
[166.09501648 185.07603455]
[156.45320129 173.58535767]
[142.34515381 168.80914307]
[139.40168762 153.26416016]
[129.75987244 141.77349854]
[122.64585876 144.14851379]
[131.56008911 156.21235657]
[122.84130096 168.41821289]
[108.53859711 163.89796448]
[108.41780853 148.89852905]
[101.30378723 151.27354431]
[100.49863434 166.25190735]
[99.69348907 181.23028564]
[98.88833618 196.20866394]
[105.87373352 210.40425110]
[97.46443176 222.69786072]
[96.65928650 237.67623901]
[108.20436859 248.22351074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 232]
[7 231]
[9 229]
[10 228]
[11 227]
[12 226]
[16 182]
[17 181]
[18 180]
[19 179]
[21 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 172]
[27 171]
[28 170]
[30 169]
[31 168]
[32 167]
[33 166]
[34 165]
[36 164]
[37 163]
[44 56]
[45 55]
[46 54]
[57 161]
[58 160]
[59 159]
[60 158]
[61 157]
[65 153]
[66 152]
[67 151]
[68 150]
[77 149]
[78 148]
[79 147]
[80 146]
[82 144]
[83 143]
[84 142]
[85 141]
[86 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[99 128]
[100 127]
[101 125]
[102 124]
[103 123]
[105 121]
[106 120]
[107 118]
[108 117]
[109 116]
[110 115]
[196 220]
[197 219]
[199 217]
[200 216]
[201 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
