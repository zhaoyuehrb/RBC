%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAGAGGAUAAAUAGCAGCGUGGCUUCCCUGGCUCCUCUCUGCAUCCUUCCCGACCUUCCCAGCAAUAUGCAUCUUGCACGUCUGGUCGGCUCCUGCUCCCUCCUUCUGCUACUGGGGGCCCUGUCUGGAUGGGCGGCCAGCGAUGACCCCAUUGAGAAGGUCAUUG\
) } def
/len { sequence length } bind def

/coor [
[-27.94459343 204.29466248]
[-40.79500198 212.03204346]
[-53.64540863 219.76942444]
[-66.49581909 227.50680542]
[-69.05407715 232.14399719]
[-72.77457428 235.02404785]
[-76.78279877 235.99902344]
[-80.27419281 235.29388428]
[-93.53131866 242.31161499]
[-106.78845215 249.32934570]
[-120.04557800 256.34707642]
[-133.30270386 263.36480713]
[-120.05421448 270.39883423]
[-117.10819244 285.10668945]
[-126.62541199 296.70074463]
[-141.62539673 296.67724609]
[-151.10626221 285.05343628]
[-148.11373901 270.35427856]
[-161.95870972 276.12634277]
[-175.80368042 281.89840698]
[-189.64865112 287.67047119]
[-193.28904724 305.40075684]
[-206.70661926 317.31436157]
[-224.43067932 318.80490112]
[-239.38357544 309.46557617]
[-253.00717163 315.74234009]
[-266.63076782 322.01910400]
[-280.25433350 328.29586792]
[-287.13708496 342.78750610]
[-302.79061890 346.30126953]
[-315.20687866 336.14172363]
[-314.86117554 320.10241699]
[-302.01870728 310.48730469]
[-286.53112793 314.67227173]
[-272.90753174 308.39550781]
[-259.28393555 302.11874390]
[-245.66033936 295.84197998]
[-245.07296753 283.67361450]
[-239.32052612 272.85278320]
[-229.44625854 265.47320557]
[-217.29743958 262.99249268]
[-205.17999268 265.94439697]
[-195.42071533 273.82550049]
[-181.57574463 268.05343628]
[-167.73077393 262.28137207]
[-153.88578796 256.50930786]
[-140.32043457 250.10766602]
[-127.06330872 243.08993530]
[-113.80617523 236.07220459]
[-100.54904938 229.05448914]
[-87.29192352 222.03675842]
[-74.23319244 214.65640259]
[-61.38278580 206.91902161]
[-48.53237915 199.18164062]
[-35.68197250 191.44425964]
[-23.20036697 183.12503052]
[-11.11389065 174.24150085]
[0.97258633 165.35797119]
[13.05906296 156.47444153]
[25.14554024 147.59091187]
[37.23201752 138.70738220]
[49.31849289 129.82386780]
[54.99138260 116.05187225]
[70.69338226 114.11337280]
[82.77986145 105.22984314]
[86.46214294 90.68884277]
[80.06049347 77.12348175]
[73.65884399 63.55812454]
[67.25720215 49.99276733]
[51.98726654 47.23437881]
[41.27931213 36.00409317]
[39.25076294 20.62018394]
[46.68164062 6.99808121]
[60.71461868 0.37575918]
[75.95372772 3.29963613]
[86.53923035 14.64542198]
[88.40077209 30.05043030]
[80.82255554 43.59112167]
[87.22420502 57.15647888]
[93.62585449 70.72183228]
[100.02749634 84.28719330]
[105.85797119 81.56505585]
[113.22857666 81.21707916]
[126.35454559 73.95698547]
[132.37799072 67.03822327]
[139.78901672 66.68661499]
[153.04614258 59.66888809]
[166.30326843 52.65115738]
[179.56040955 45.63343048]
[192.81753540 38.61569977]
[206.07466125 31.59796906]
[219.33178711 24.58024025]
[227.90861511 11.28555584]
[242.77697754 12.16941166]
[256.03411865 5.15168285]
[255.75923157 -10.69899273]
[264.82275391 -24.88843727]
[281.11529541 -32.11114120]
[299.65969849 -28.98060799]
[311.74618530 -37.86413574]
[323.83267212 -46.74766541]
[335.91912842 -55.63119507]
[348.00561523 -64.51472473]
[360.09210205 -73.39825439]
[356.80255127 -88.26764679]
[359.85168457 -103.18818665]
[368.71124268 -115.57480621]
[381.84622192 -123.28144836]
[396.98092651 -124.97288513]
[411.49313354 -120.35606384]
[422.86859131 -110.23088837]
[429.13638306 -96.35159302]
[429.21057129 -81.12286377]
[423.07830811 -67.18315125]
[411.80209351 -56.94761276]
[397.33551025 -52.18960571]
[382.18505859 -53.73348999]
[368.97561646 -61.31177521]
[356.88912964 -52.42824554]
[344.80267334 -43.54471970]
[332.71618652 -34.66119003]
[320.62969971 -25.77766037]
[308.54324341 -16.89413261]
[313.28320312 -2.66273260]
[328.28256226 -2.80051970]
[340.50283813 -13.19498062]
[356.22052002 -9.98034191]
[363.37835693 4.37739944]
[356.48547363 18.86421394]
[340.82949829 22.36705780]
[328.42034912 12.19884777]
[313.42098999 12.33663464]
[297.93508911 26.88481712]
[278.24935913 28.53805161]
[263.05181885 18.40881157]
[249.79470825 25.42654037]
[242.16612244 38.21926880]
[226.34951782 37.83736801]
[213.09239197 44.85509872]
[199.83526611 51.87282944]
[186.57814026 58.89055634]
[173.32099915 65.90828705]
[160.06387329 72.92601776]
[146.80674744 79.94374847]
[133.61463928 87.08295441]
[120.48867035 94.34304810]
[117.88394928 109.11516571]
[127.73522949 120.42676544]
[137.58650208 131.73835754]
[153.26434326 136.54849243]
[156.67337036 152.58938599]
[144.30667114 163.35957336]
[128.88603210 157.77957153]
[126.27490997 141.58964539]
[116.42362976 130.27804565]
[106.57234955 118.96644592]
[91.66338348 117.31632233]
[79.57691193 126.19985199]
[73.03951263 140.60723877]
[58.20202255 141.91033936]
[46.11554337 150.79386902]
[34.02906799 159.67739868]
[21.94259262 168.56092834]
[9.85611534 177.44445801]
[-2.23036146 186.32798767]
[-14.31683826 195.21151733]
[-0.18107675 200.22950745]
[4.88710260 214.34735107]
[-2.82960296 227.21017456]
[-17.67130470 229.38363647]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 55]
[2 54]
[3 53]
[4 52]
[8 51]
[9 50]
[10 49]
[11 48]
[12 47]
[18 46]
[19 45]
[20 44]
[21 43]
[25 37]
[26 36]
[27 35]
[28 34]
[56 166]
[57 165]
[58 164]
[59 163]
[60 162]
[61 161]
[62 160]
[64 158]
[65 157]
[66 81]
[67 80]
[68 79]
[69 78]
[83 146]
[84 145]
[86 144]
[87 143]
[88 142]
[89 141]
[90 140]
[91 139]
[92 138]
[94 136]
[95 135]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[104 118]
[124 132]
[125 131]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
