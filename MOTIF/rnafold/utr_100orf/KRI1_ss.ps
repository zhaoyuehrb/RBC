%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGCGCAAUGGGCCACAGAACCGCCAUGCCGGAACCGCGCGGGUCGUCGCAGCUGCGGGUGAACGCGGCGUUUGCCGCGCGGUACAACCGCUACCGGGAGCGCGAGG\
) } def
/len { sequence length } bind def

/coor [
[77.89177704 216.31849670]
[87.45372009 203.43638611]
[86.59738922 188.46084595]
[85.74105835 173.48530579]
[84.88471985 158.50976562]
[84.02838898 143.53424072]
[70.96720123 136.15823364]
[57.70070648 143.15824890]
[44.43421173 150.15826416]
[41.76672363 160.89678955]
[33.73521042 168.18202209]
[23.22638512 169.72813416]
[13.83693981 165.25503540]
[0.19245955 171.48625183]
[-13.45202065 177.71748352]
[-15.54573250 193.00210571]
[-25.58792877 204.71354675]
[-40.37417984 209.11473083]
[-55.18624496 204.80123901]
[-65.29765320 193.14949036]
[-67.48188782 177.87753296]
[-61.04196548 163.85859680]
[-48.03284454 155.56604004]
[-32.60569000 155.64602661]
[-19.68324471 164.07299805]
[-6.03876543 157.84178162]
[7.60571432 151.61054993]
[17.45790100 135.07563782]
[37.43420029 136.89176941]
[50.70069504 129.89175415]
[63.96718979 122.89174652]
[58.59771347 104.81993103]
[61.57587814 86.65893555]
[71.91957855 71.98333740]
[87.23694611 63.50855255]
[104.26883698 62.59136200]
[108.90409088 48.32551575]
[113.53934479 34.05966568]
[118.17459869 19.79381943]
[122.80985260 5.52797079]
[127.44511414 -8.73787689]
[132.08036804 -23.00372505]
[136.71562195 -37.26957321]
[141.35087585 -51.53541946]
[132.93107605 -59.68341827]
[128.24826050 -70.36714935]
[127.96512604 -81.97679901]
[132.08465576 -92.77922821]
[139.95547485 -101.17666626]
[150.37458801 -105.94306946]
[161.77105713 -106.40298462]
[167.61010742 -120.21984100]
[168.09169006 -129.49499512]
[173.81823730 -134.34408569]
[180.04945374 -147.98855591]
[186.28068542 -161.63304138]
[192.51191711 -175.27751160]
[198.74313354 -188.92199707]
[204.97436523 -202.56648254]
[199.21719360 -217.28485107]
[205.63017273 -231.72955322]
[220.40858459 -237.33078003]
[234.78468323 -230.76544189]
[240.22935486 -215.92863464]
[233.51239014 -201.62275696]
[218.61883545 -196.33525085]
[212.38761902 -182.69078064]
[206.15638733 -169.04629517]
[199.92517090 -155.40180969]
[193.69393921 -141.75733948]
[187.46270752 -128.11285400]
[181.42695618 -114.38078308]
[175.58790588 -100.56393433]
[186.16001892 -85.33869171]
[185.59092712 -66.66434479]
[173.92906189 -51.87998581]
[155.61672974 -46.90016556]
[150.98147583 -32.63431549]
[146.34620667 -18.36846924]
[141.71095276 -4.10262203]
[137.07569885 10.16322613]
[132.44044495 24.42907333]
[127.80519104 38.69491959]
[123.16993713 52.96076965]
[118.53468323 67.22661591]
[127.60296631 74.39324951]
[134.07000732 83.97301483]
[137.32635498 95.06312561]
[137.06513977 106.61847687]
[133.31100464 117.55011749]
[144.92312622 127.04530334]
[156.53524780 136.54049683]
[172.79847717 138.64750671]
[178.85473633 153.88737488]
[168.47387695 166.58262634]
[152.33482361 163.67349243]
[147.04005432 148.15261841]
[135.42793274 138.65742493]
[123.81581116 129.16224670]
[117.06391907 135.43632507]
[108.65791321 140.08583069]
[99.00392914 142.67790222]
[99.86026001 157.65344238]
[100.71659088 172.62896729]
[101.57292175 187.60450745]
[102.42925262 202.58004761]
[113.39731598 214.28820801]
[110.93949127 230.14187622]
[96.94121552 237.97946167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 106]
[3 105]
[4 104]
[5 103]
[6 102]
[7 31]
[8 30]
[9 29]
[13 27]
[14 26]
[15 25]
[36 85]
[37 84]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[43 78]
[44 77]
[51 73]
[52 72]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[90 99]
[91 98]
[92 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
