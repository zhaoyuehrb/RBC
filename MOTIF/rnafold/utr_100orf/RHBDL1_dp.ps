%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RHBDL1)
} def

/sequence { (\
CUUGGACCUUGGCCCUCGCUUUCCAGGAUGGGUAGGGUGGAAGACGGGGGAACAACUGAGGAGCUGGAGGACUGGGACCCAGGCACCAGUGCCCUGCCAGCUCCUGGGAUCAAGCAGGGUCCCAGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 60 0.023375971 ubox
1 125 0.463637092 ubox
1 126 0.863754143 ubox
1 127 0.060881440 ubox
2 59 0.023552153 ubox
2 124 0.458072650 ubox
2 125 0.866315833 ubox
2 126 0.061029903 ubox
2 127 0.004542324 ubox
3 58 0.023491647 ubox
3 124 0.861936082 ubox
3 125 0.046319413 ubox
3 126 0.007122593 ubox
4 57 0.023539279 ubox
4 122 0.707053442 ubox
4 123 0.705244113 ubox
5 56 0.023600537 ubox
5 121 0.865109609 ubox
5 122 0.499446294 ubox
6 120 0.998047831 ubox
7 61 0.034095871 ubox
7 118 0.005661144 ubox
7 119 0.998938981 ubox
7 126 0.011569759 ubox
7 127 0.009924579 ubox
8 60 0.034362369 ubox
8 114 0.007548507 ubox
8 117 0.007002282 ubox
8 118 0.998897421 ubox
8 125 0.011583229 ubox
8 126 0.010036990 ubox
9 55 0.036884956 ubox
9 59 0.034283470 ubox
9 113 0.015287925 ubox
9 116 0.006817880 ubox
9 117 0.997190821 ubox
9 124 0.009735944 ubox
9 125 0.009632230 ubox
10 54 0.064912345 ubox
10 58 0.033923454 ubox
10 112 0.028157561 ubox
10 116 0.994210112 ubox
10 117 0.003225015 ubox
10 124 0.008370065 ubox
11 53 0.077182418 ubox
11 57 0.033732878 ubox
11 111 0.030155745 ubox
11 115 0.990108474 ubox
11 121 0.004667544 ubox
11 123 0.006542701 ubox
12 38 0.004726813 ubox
12 56 0.034090677 ubox
12 110 0.025429854 ubox
12 115 0.063272677 ubox
12 120 0.004842395 ubox
12 122 0.005502976 ubox
13 37 0.004910298 ubox
13 48 0.006515218 ubox
13 49 0.042874991 ubox
13 50 0.993402833 ubox
13 114 0.065238613 ubox
13 119 0.006637538 ubox
14 36 0.004915836 ubox
14 47 0.006549781 ubox
14 48 0.042961163 ubox
14 49 0.998911593 ubox
14 50 0.011360596 ubox
14 118 0.006647038 ubox
15 35 0.004914917 ubox
15 46 0.006536591 ubox
15 47 0.042849398 ubox
15 48 0.998946231 ubox
15 49 0.010324917 ubox
15 117 0.006646834 ubox
16 34 0.004861254 ubox
16 40 0.008160277 ubox
16 46 0.014633755 ubox
16 47 0.998317615 ubox
16 48 0.009085328 ubox
16 116 0.006605003 ubox
17 39 0.012132453 ubox
17 46 0.999609275 ubox
17 47 0.008105462 ubox
18 33 0.003907722 ubox
18 38 0.013677963 ubox
18 45 0.998782400 ubox
18 115 0.006672708 ubox
19 32 0.003944474 ubox
19 35 0.010539661 ubox
19 36 0.010766960 ubox
19 37 0.015764509 ubox
19 40 0.007772850 ubox
19 43 0.438921645 ubox
19 114 0.006674276 ubox
20 31 0.003777026 ubox
20 34 0.010554772 ubox
20 35 0.010828701 ubox
20 36 0.015695729 ubox
20 39 0.007776710 ubox
20 41 0.005800461 ubox
20 42 0.362289305 ubox
20 43 0.826162352 ubox
20 44 0.064904034 ubox
20 113 0.006623662 ubox
21 30 0.003640891 ubox
21 34 0.010069124 ubox
21 35 0.015183700 ubox
21 39 0.003316013 ubox
21 40 0.007483032 ubox
21 41 0.265633471 ubox
21 42 0.924611636 ubox
21 43 0.054304943 ubox
21 109 0.005289544 ubox
21 112 0.003969439 ubox
22 32 0.028697450 ubox
22 34 0.013469846 ubox
22 37 0.026724957 ubox
22 39 0.007059361 ubox
22 40 0.096685337 ubox
22 41 0.961834156 ubox
22 42 0.038265084 ubox
22 108 0.006542773 ubox
23 31 0.042942864 ubox
23 32 0.027668489 ubox
23 36 0.041921367 ubox
23 37 0.041623115 ubox
23 39 0.070140008 ubox
23 40 0.994084115 ubox
23 107 0.006641325 ubox
24 30 0.044293045 ubox
24 31 0.028728979 ubox
24 35 0.043378102 ubox
24 36 0.043611150 ubox
24 39 0.994322425 ubox
24 106 0.006666956 ubox
25 29 0.035989370 ubox
25 38 0.971416373 ubox
25 105 0.006690391 ubox
26 104 0.006694042 ubox
27 103 0.006693188 ubox
28 38 0.051693643 ubox
28 102 0.006419860 ubox
29 37 0.077006291 ubox
30 38 0.008651223 ubox
31 98 0.006596021 ubox
32 38 0.003295178 ubox
32 97 0.006646328 ubox
33 37 0.008225098 ubox
33 96 0.006689111 ubox
34 95 0.006690889 ubox
35 94 0.006694086 ubox
36 93 0.006692144 ubox
37 45 0.003795349 ubox
37 92 0.006688192 ubox
38 44 0.003907282 ubox
38 91 0.006506024 ubox
39 45 0.003256257 ubox
45 58 0.006979656 ubox
46 57 0.007087535 ubox
47 56 0.007103231 ubox
50 111 0.026886192 ubox
51 110 0.029131190 ubox
53 106 0.005596493 ubox
54 105 0.003950130 ubox
56 107 0.097880388 ubox
56 108 0.984748860 ubox
56 114 0.009624355 ubox
57 106 0.092510443 ubox
57 107 0.988163183 ubox
57 112 0.015564028 ubox
57 113 0.006674836 ubox
58 105 0.030357587 ubox
58 111 0.017675802 ubox
59 105 0.996235587 ubox
59 110 0.013886152 ubox
60 104 0.999084590 ubox
61 103 0.999215384 ubox
62 102 0.999708908 ubox
63 90 0.005910933 ubox
63 101 0.999967098 ubox
64 89 0.006367855 ubox
64 100 0.999967813 ubox
65 88 0.006372110 ubox
65 99 0.999732339 ubox
66 87 0.006374664 ubox
66 95 0.003473193 ubox
66 98 0.999955564 ubox
67 86 0.006365509 ubox
67 94 0.008342365 ubox
67 97 0.998931910 ubox
68 95 0.932846185 ubox
69 79 0.003299856 ubox
69 80 0.004967880 ubox
69 93 0.385744447 ubox
69 94 0.919031056 ubox
69 95 0.060672798 ubox
70 78 0.003309186 ubox
70 79 0.005007166 ubox
70 92 0.425557559 ubox
70 93 0.898313663 ubox
70 94 0.065920353 ubox
71 90 0.941804920 ubox
72 82 0.107613479 ubox
72 89 0.993813691 ubox
73 81 0.108893428 ubox
73 88 0.993706449 ubox
74 80 0.109135101 ubox
74 87 0.993818040 ubox
74 93 0.003353848 ubox
75 79 0.107374064 ubox
75 86 0.993367942 ubox
75 87 0.017120476 ubox
75 92 0.003631822 ubox
76 86 0.023298762 ubox
77 90 0.003934729 ubox
78 89 0.003936559 ubox
80 96 0.004269055 ubox
81 95 0.004455430 ubox
82 93 0.017518221 ubox
82 94 0.003674979 ubox
83 90 0.013767034 ubox
83 92 0.107799611 ubox
84 89 0.014184709 ubox
84 91 0.108051359 ubox
85 90 0.089911549 ubox
102 127 0.008985133 ubox
103 126 0.038747283 ubox
104 125 0.041856020 ubox
105 112 0.010507411 ubox
105 124 0.042208395 ubox
106 111 0.021645181 ubox
106 115 0.004421512 ubox
106 123 0.044502535 ubox
107 122 0.044626587 ubox
108 121 0.044821659 ubox
109 120 0.044851909 ubox
110 119 0.044794597 ubox
111 117 0.008876077 ubox
111 118 0.044562692 ubox
1 126 0.9500000 lbox
2 125 0.9500000 lbox
3 124 0.9500000 lbox
4 123 0.9500000 lbox
5 122 0.9500000 lbox
6 120 0.9500000 lbox
7 119 0.9500000 lbox
8 118 0.9500000 lbox
9 117 0.9500000 lbox
10 116 0.9500000 lbox
11 115 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
56 108 0.9500000 lbox
57 107 0.9500000 lbox
59 105 0.9500000 lbox
60 104 0.9500000 lbox
61 103 0.9500000 lbox
62 102 0.9500000 lbox
63 101 0.9500000 lbox
64 100 0.9500000 lbox
65 99 0.9500000 lbox
66 98 0.9500000 lbox
67 97 0.9500000 lbox
68 95 0.9500000 lbox
69 94 0.9500000 lbox
70 93 0.9500000 lbox
71 90 0.9500000 lbox
72 89 0.9500000 lbox
73 88 0.9500000 lbox
74 87 0.9500000 lbox
75 86 0.9500000 lbox
showpage
end
%%EOF
