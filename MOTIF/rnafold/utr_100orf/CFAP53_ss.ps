%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCCGCGAGGCGCACCAUGGCAACCAGACUUCUGCGUCGCGGAAGCGGGUCCCGCAGGUCGCCACGGUUGGGGGAAACGCGGCGGACGCCGCCCCCGUCCCGAAGGGGACUCGAAAAUGUACAGCCAGCGGUUUGGCACCGUACAGCGGGAGGUUAAGGGCCCCACCCCCAAAGUGGUGAUCGUGAGAUCCAAGCCUCCUAAAGGCCAAGGAGCUG\
) } def
/len { sequence length } bind def

/coor [
[-47.69410706 565.36267090]
[-62.49040604 562.89904785]
[-67.75485992 548.85321045]
[-58.22356796 537.27142334]
[-65.62174225 536.03979492]
[-75.31838989 547.48419189]
[-85.01504517 558.92864990]
[-94.71169281 570.37304688]
[-104.40834045 581.81750488]
[-114.10498810 593.26190186]
[-117.12274933 608.79266357]
[-131.25347900 613.50134277]
[-140.95011902 624.94580078]
[-150.64677429 636.39019775]
[-143.90620422 651.20202637]
[-144.29978943 667.41247559]
[-151.69798279 681.77618408]
[-164.57391357 691.43969727]
[-180.31832886 694.50811768]
[-195.76820374 690.41674805]
[-205.29968262 701.99908447]
[-214.83117676 713.58148193]
[-220.22714233 729.65380859]
[-237.16511536 728.91796875]
[-241.14694214 712.43823242]
[-226.41351318 704.04998779]
[-216.88203430 692.46765137]
[-207.35055542 680.88525391]
[-213.78836060 668.59960938]
[-215.06250000 654.74456787]
[-210.94776917 641.40808105]
[-202.03366089 630.61267090]
[-189.64001465 624.00848389]
[-175.62173462 622.62139893]
[-162.09120178 626.69354248]
[-152.39456177 615.24914551]
[-142.69790649 603.80468750]
[-140.37371826 589.09252930]
[-125.54942322 583.56524658]
[-115.85276794 572.12084961]
[-106.15612030 560.67639160]
[-96.45947266 549.23199463]
[-86.76282501 537.78753662]
[-77.06617737 526.34313965]
[-80.50777435 510.71014404]
[-77.08742523 496.06265259]
[-68.27185059 485.08761597]
[-56.43629074 479.43911743]
[-44.28283691 479.50418091]
[-39.42305756 465.31326294]
[-34.56327820 451.12231445]
[-29.70350075 436.93139648]
[-24.84372139 422.74047852]
[-28.04023933 408.19290161]
[-16.24921989 397.64385986]
[-11.38944054 383.45291138]
[-6.52966166 369.26199341]
[-7.33591032 361.91995239]
[-1.49705076 354.90322876]
[3.56579280 340.78344727]
[8.62863636 326.66369629]
[13.69147968 312.54394531]
[18.75432396 298.42416382]
[23.81716728 284.30441284]
[28.88001060 270.18466187]
[33.94285202 256.06491089]
[39.00569534 241.94512939]
[34.12694168 230.88014221]
[38.22472000 219.07772827]
[49.61840820 213.04063416]
[54.88327408 198.99496460]
[60.14813995 184.94927979]
[65.41300964 170.90359497]
[70.67787170 156.85791016]
[75.94274139 142.81222534]
[81.20760345 128.76654053]
[66.57719421 124.10951996]
[53.52572632 112.24868774]
[45.41744232 93.99840546]
[45.12460709 71.65914917]
[54.40573502 48.72852707]
[45.55417633 36.61861801]
[36.70261765 24.50870705]
[27.85105896 12.39879704]
[18.99949837 0.28888813]
[3.78856468 -5.83969307]
[1.75882709 -22.11274529]
[14.99830627 -31.78994560]
[29.88736153 -24.91622162]
[31.10940933 -8.56267071]
[39.96096802 3.54723859]
[48.81252670 15.65714836]
[57.66408539 27.76705742]
[66.51564789 39.87696838]
[73.50000000 37.14406586]
[68.03443146 23.17525864]
[82.00332642 17.70991707]
[87.46871185 31.67825890]
[94.45307159 28.94535637]
[92.73542786 14.04402447]
[91.01778412 -0.85730767]
[89.30014038 -15.75863934]
[87.58249664 -30.65997124]
[77.38137054 -43.50010681]
[83.65156555 -58.65321732]
[99.94284058 -60.53107834]
[109.49613190 -47.20190811]
[102.48382568 -32.37761688]
[104.20146942 -17.47628403]
[105.91911316 -2.57495213]
[107.63675690 12.32637978]
[109.35440826 27.22771263]
[116.54784393 29.35008812]
[120.79259491 14.96321774]
[120.38399506 -0.03121621]
[134.51834106 -5.05317640]
[143.66212463 6.83763504]
[135.17945862 19.20797157]
[130.93470764 33.59484100]
[138.12814331 35.71722031]
[147.65963745 24.13487053]
[157.19111633 12.55252266]
[166.72259521 0.97017354]
[176.25408936 -10.61217499]
[178.67008972 -30.62919998]
[197.06149292 -36.61050034]
[206.25679016 -48.46150589]
[215.45210266 -60.31251144]
[224.64739990 -72.16352081]
[233.84271240 -84.01452637]
[235.53338623 -100.32628632]
[250.61349487 -106.77007294]
[263.56991577 -96.71705627]
[261.07418823 -80.50893402]
[245.69372559 -74.81922150]
[236.49841309 -62.96821213]
[227.30310059 -51.11720657]
[218.10780334 -39.26620102]
[208.91249084 -27.41519356]
[211.09785461 -17.44078064]
[207.35662842 -7.70432568]
[198.69769287 -1.50391877]
[187.83644104 -1.08069074]
[178.30494690 10.50165844]
[168.77346802 22.08400726]
[159.24197388 33.66635513]
[149.71049500 45.24870300]
[153.46049500 51.74389648]
[168.46049500 51.74386597]
[160.96049500 64.73427582]
[164.71049500 71.22946930]
[179.50685120 68.76613617]
[187.45246887 64.27236176]
[194.53298950 66.37517548]
[209.36314392 64.12434387]
[224.19331360 61.87351608]
[239.02348328 59.62268448]
[253.77598572 51.26805496]
[265.88800049 63.13124084]
[257.84140015 78.05397797]
[241.27430725 74.45285034]
[226.44415283 76.70368195]
[211.61398315 78.95451355]
[196.78381348 81.20533752]
[181.97018433 83.56248474]
[167.17382812 86.02581787]
[137.59687805 135.17562866]
[95.25328827 134.03141785]
[89.98841858 148.07708740]
[84.72355652 162.12277222]
[79.45868683 176.16845703]
[74.19382477 190.21414185]
[68.92895508 204.25982666]
[63.66408920 218.30551147]
[67.10683441 236.39776611]
[53.12545776 247.00798035]
[48.06261444 261.12774658]
[42.99977112 275.24749756]
[37.93692780 289.36724854]
[32.87408447 303.48703003]
[27.81123924 317.60678101]
[22.74839592 331.72653198]
[17.68555260 345.84631348]
[12.62270927 359.96606445]
[7.66127014 374.12176514]
[2.80149102 388.31271362]
[-2.05828834 402.50363159]
[0.79062587 418.06622314]
[-10.65278912 427.60025024]
[-15.51256847 441.79116821]
[-20.37234879 455.98211670]
[-25.23212624 470.17303467]
[-30.09190559 484.36398315]
[-13.35121250 505.10922241]
[-22.06032944 535.50061035]
[-16.59452438 549.46936035]
[-11.12871933 563.43804932]
[-5.09097767 570.28442383]
[-5.68627739 577.64654541]
[-0.42141145 591.69226074]
[4.84345436 605.73791504]
[10.10832024 619.78363037]
[25.09982681 623.78790283]
[34.84837723 635.86041260]
[35.60545731 651.35900879]
[27.07994843 664.32415771]
[12.55008793 669.77050781]
[-2.39709759 665.60382080]
[-12.01411057 653.42626953]
[-12.60301399 637.92041016]
[-3.93736148 625.04846191]
[-9.20222759 611.00280762]
[-14.46709347 596.95709229]
[-19.73196030 582.91143799]
[-25.09743309 568.90386963]
[-30.56323814 554.93511963]
[-36.02904510 540.96643066]
[-43.42721939 539.73474121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 44]
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[12 37]
[13 36]
[14 35]
[20 28]
[21 27]
[22 26]
[49 193]
[50 192]
[51 191]
[52 190]
[53 189]
[55 187]
[56 186]
[57 185]
[59 184]
[60 183]
[61 182]
[62 181]
[63 180]
[64 179]
[65 178]
[66 177]
[67 176]
[70 174]
[71 173]
[72 172]
[73 171]
[74 170]
[75 169]
[76 168]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[151 166]
[152 165]
[154 164]
[155 163]
[156 162]
[157 161]
[195 217]
[196 216]
[197 215]
[199 214]
[200 213]
[201 212]
[202 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
