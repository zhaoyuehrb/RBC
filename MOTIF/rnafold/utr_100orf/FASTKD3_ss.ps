%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCCACGACGCCCAGGCGCUUCCGCGACCACCCGGAGUGAUUGCCCGGCAGAGCGCGAUACUCGUUUGUAGUUUCAUAAACAUUGAUGUUGGGUCAAUCAUGUUCUCAAUGUAUUUAACCAUGUGUUUUUAAAUUUUUUAAUUUAGUUAUCAAAUUGAGAAUCUGAUGGUAUGGCAUUAAUCACCUUGAGGAAGAACCUUUAUCGUUUAUCUGAUUUUCAGAUGCAUAGAGCUCUGGCUGCUUUAAAAAAUAA\
ACCUCUAAAUCAUGUUC\
) } def
/len { sequence length } bind def

/coor [
[72.46053314 265.48559570]
[74.89940643 250.68350220]
[66.88242340 263.36135864]
[58.86543655 276.03921509]
[58.92655563 296.22146606]
[41.37332916 304.38168335]
[33.65022278 317.24069214]
[25.92711830 330.09967041]
[29.53449631 345.25305176]
[21.51898956 358.18386841]
[7.05033684 361.52957153]
[-0.67276835 374.38854980]
[5.63812590 386.61914062]
[5.09551620 400.26303101]
[-2.05263162 411.77011108]
[-13.85352039 418.19897461]
[-27.18183136 417.96853638]
[-35.05239868 430.73779297]
[-42.84936142 443.55212402]
[-50.57246780 456.41113281]
[-58.29557419 469.27011108]
[-58.03747559 485.66723633]
[-72.24578857 493.85598755]
[-86.30422211 485.41250610]
[-85.75066376 469.02270508]
[-71.15456390 461.54699707]
[-63.43145752 448.68801880]
[-55.70835495 435.82901001]
[-54.96126556 428.50415039]
[-47.82166290 422.86721802]
[-39.95109558 410.09796143]
[-46.67657089 395.10464478]
[-43.09097672 378.89746094]
[-30.41699600 367.92236328]
[-13.53175926 366.66543579]
[-5.80865431 353.80645752]
[-9.65270138 339.46215820]
[-2.00355577 326.31130981]
[13.06812763 322.37655640]
[20.79123306 309.51757812]
[28.51433754 296.65856934]
[25.16762733 287.05169678]
[27.69538307 276.97155762]
[35.50132370 269.78353882]
[46.18758392 268.02221680]
[54.20457077 255.34437561]
[62.22155762 242.66651917]
[67.78192139 228.73518372]
[70.69770050 214.02130127]
[73.61347198 199.30741882]
[76.52924347 184.59353638]
[79.36030579 169.86312866]
[82.10656738 155.11666870]
[84.85282898 140.37020874]
[87.59909058 125.62374878]
[90.34535217 110.87728882]
[91.03556824 95.89317322]
[89.65660095 80.95669556]
[88.27762604 66.02021790]
[86.89865875 51.08373642]
[85.51969147 36.14725494]
[84.14071655 21.21077538]
[70.96603394 13.22742844]
[65.08711243 -0.81862772]
[68.56515503 -15.45991135]
[79.86243439 -25.12994194]
[78.48346710 -40.06642151]
[77.10449982 -55.00290298]
[75.72552490 -69.93938446]
[65.31450653 -75.58750153]
[58.97301483 -85.44937134]
[58.17060089 -97.02677155]
[62.99060440 -107.45199585]
[72.13790894 -114.19817352]
[71.10304260 -129.16242981]
[70.06816864 -144.12669373]
[69.03330231 -159.09095764]
[67.99843597 -174.05520630]
[53.88976288 -179.77418518]
[43.70475388 -191.00595093]
[39.42386627 -205.48677063]
[41.84482193 -220.32928467]
[50.43457794 -232.59815979]
[63.44552612 -239.89068604]
[62.41065979 -254.85493469]
[61.37578964 -269.81918335]
[60.34092331 -284.78344727]
[59.30605698 -299.74771118]
[58.27119064 -314.71197510]
[57.23632050 -329.67623901]
[56.20145416 -344.64050293]
[55.16658783 -359.60473633]
[54.13172150 -374.56900024]
[41.27959061 -380.03924561]
[32.07607651 -390.45819092]
[28.27005386 -403.76007080]
[30.54770660 -417.33996582]
[38.40958405 -428.56387329]
[50.27873611 -435.27963257]
[49.41613770 -450.25482178]
[48.55353928 -465.23001099]
[47.69094086 -480.20516968]
[39.17284393 -493.53756714]
[46.16543579 -506.68872070]
[45.30283737 -521.66387939]
[44.44023895 -536.63909912]
[43.57764053 -551.61425781]
[42.71504211 -566.58941650]
[41.85244370 -581.56457520]
[40.98984528 -596.53979492]
[40.12724686 -611.51495361]
[39.26464844 -626.49011230]
[26.47631645 -632.10791016]
[17.39330482 -642.63208008]
[13.74060631 -655.97686768]
[16.17437744 -669.52966309]
[24.16489029 -680.66235352]
[36.11053848 -687.24108887]
[35.42032242 -702.22521973]
[34.73010635 -717.20928955]
[34.03989029 -732.19342041]
[26.06411171 -719.48962402]
[12.84099102 -712.40802002]
[-2.15361881 -712.81011963]
[-14.97820759 -720.59020996]
[-22.26168060 -733.70318604]
[-22.08949089 -748.70220947]
[-14.50690174 -761.64459229]
[-1.50708532 -769.12817383]
[13.49280357 -769.18597412]
[26.54986763 -761.80267334]
[34.23235321 -748.91748047]
[35.26722336 -763.88177490]
[36.30208969 -778.84600830]
[37.33695602 -793.81030273]
[38.37182236 -808.77453613]
[39.40669250 -823.73883057]
[31.72425079 -838.22717285]
[40.65842056 -851.97894287]
[57.01849365 -850.84759521]
[63.97462845 -835.99682617]
[54.37094879 -822.70391846]
[53.33608246 -807.73968506]
[52.30121613 -792.77539062]
[51.26634979 -777.81115723]
[50.23147964 -762.84692383]
[49.19661331 -747.88262939]
[49.02400208 -732.88360596]
[49.71421814 -717.89953613]
[50.40443420 -702.91540527]
[51.09465027 -687.93127441]
[65.63545990 -680.84436035]
[74.66127014 -667.30749512]
[75.62358856 -650.97186279]
[68.16436005 -636.30126953]
[54.23982239 -627.35272217]
[55.10242081 -612.37756348]
[55.96502304 -597.40240479]
[56.82762146 -582.42718506]
[57.69021988 -567.45202637]
[58.55281830 -552.47686768]
[59.41541672 -537.50164795]
[60.27801514 -522.52648926]
[61.14061356 -507.55133057]
[69.59701538 -495.29003906]
[62.66611481 -481.06777954]
[63.52871704 -466.09259033]
[64.39131165 -451.11743164]
[65.25391388 -436.14224243]
[79.87531281 -429.22308350]
[89.05629730 -415.79101562]
[90.20653534 -399.46752930]
[82.91661835 -384.71209717]
[69.09597778 -375.60388184]
[70.13084412 -360.63961792]
[71.16571045 -345.67535400]
[72.20058441 -330.71109009]
[73.23545074 -315.74685669]
[74.27031708 -300.78259277]
[75.30518341 -285.81832886]
[76.34004974 -270.85406494]
[77.37491608 -255.88980103]
[78.40978241 -240.92555237]
[92.30071259 -235.49345398]
[102.49755096 -224.52377319]
[106.93858337 -210.15582275]
[104.69178772 -195.22357178]
[96.14982605 -182.69671631]
[82.96269989 -175.09007263]
[83.99756622 -160.12582397]
[85.03243256 -145.16156006]
[86.06729889 -130.19729614]
[87.10216522 -115.23303986]
[101.61291504 -104.02928925]
[103.31797028 -85.45426178]
[90.66201019 -71.31835175]
[92.04097748 -56.38187408]
[93.41994476 -41.44539261]
[94.79891968 -26.50891113]
[107.67566681 -19.07068443]
[113.77551270 -5.31365252]
[110.56757355 9.57132339]
[99.07719421 19.83180428]
[100.45616913 34.76828384]
[101.83513641 49.70476532]
[103.21411133 64.64124298]
[104.59307861 79.57772827]
[105.97204590 94.51420593]
[119.55455780 87.02765656]
[135.31352234 83.86942291]
[149.62142944 88.37315369]
[163.92935181 92.87687683]
[178.23725891 97.38060760]
[192.54518127 101.88433075]
[206.85310364 106.38806152]
[221.16101074 110.89178467]
[238.08474731 109.88009644]
[243.74185181 125.86238098]
[229.95021057 135.72274780]
[216.65728760 125.19969940]
[202.34936523 120.69597626]
[188.04145813 116.19224548]
[173.73353577 111.68852234]
[159.42562866 107.18479156]
[145.11770630 102.68106842]
[130.80979919 98.17733765]
[124.38029480 102.03889465]
[137.49813843 109.31364441]
[137.75683594 124.31141663]
[124.89767456 132.03424072]
[111.77999115 124.75920105]
[111.52130890 109.76199341]
[105.09181213 113.62355042]
[102.34555054 128.37001038]
[99.59928894 143.11647034]
[96.85302734 157.86293030]
[94.10676575 172.60939026]
[95.60971069 181.58102417]
[91.24312592 187.50930786]
[88.32734680 202.22319031]
[85.41157532 216.93707275]
[82.49580383 231.65095520]
[90.91830444 219.23880005]
[101.45702362 208.56474304]
[113.76070404 199.98457336]
[127.41925049 193.78424072]
[141.97741699 190.17042542]
[156.94998169 189.26358032]
[171.83789062 191.09393311]
[186.14492798 195.60046387]
[199.39422607 202.63296509]
[211.14418030 211.95706177]
[221.00314331 223.26194763]
[228.64254761 236.17085266]
[233.80772400 250.25349426]
[236.32655334 265.04049683]
[236.11505127 280.03900146]
[233.18028259 294.74911499]
[227.62005615 308.68051147]
[219.61970520 321.36886597]
[209.44587708 332.39126587]
[197.43768311 341.38034058]
[183.99536133 348.03643799]
[169.56694031 352.13775635]
[154.63334656 353.54757690]
[139.69230652 352.21890259]
[125.24182129 348.19604492]
[111.76354218 341.61303711]
[99.70668793 332.68936157]
[89.47313690 321.72238159]
[81.40397644 309.07766724]
[75.76815033 295.17669678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[6 41]
[7 40]
[8 39]
[11 36]
[12 35]
[17 31]
[18 30]
[19 28]
[20 27]
[21 26]
[48 242]
[49 241]
[50 240]
[51 239]
[52 237]
[53 236]
[54 235]
[55 234]
[56 233]
[57 208]
[58 207]
[59 206]
[60 205]
[61 204]
[62 203]
[66 199]
[67 198]
[68 197]
[69 196]
[74 193]
[75 192]
[76 191]
[77 190]
[78 189]
[84 183]
[85 182]
[86 181]
[87 180]
[88 179]
[89 178]
[90 177]
[91 176]
[92 175]
[93 174]
[99 169]
[100 168]
[101 167]
[102 166]
[104 164]
[105 163]
[106 162]
[107 161]
[108 160]
[109 159]
[110 158]
[111 157]
[112 156]
[118 151]
[119 150]
[120 149]
[121 148]
[132 147]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[210 226]
[211 225]
[212 224]
[213 223]
[214 222]
[215 221]
[216 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
