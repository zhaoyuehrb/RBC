%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGGUCAAAUGCGCGCCUCGGACCCUAGUGCGCGUGCGCGCUGGUGGCUCCGCCCCUUUGGAGCUACUUCCUCAUGCUGCCCGCUCGCCUACCGUUCAGGCUGCUGAGCCUUUUCCUUCGUGGAUCCGCUCCCACGGCAGCGCGCCAUGGCCUCCGGGAGCCGCUCCUGGAGA\
) } def
/len { sequence length } bind def

/coor [
[114.23896790 319.10586548]
[113.91077423 304.10946655]
[123.18106842 292.31701660]
[137.83097839 289.09524536]
[151.19369507 295.91064453]
[146.71148682 281.59594727]
[142.22927856 267.28128052]
[137.74707031 252.96661377]
[133.26486206 238.65194702]
[121.10784149 234.32525635]
[113.55812073 223.62103271]
[113.56227112 210.32743835]
[121.34331512 199.30964661]
[117.11732483 184.91725159]
[112.89133453 170.52485657]
[108.66534424 156.13246155]
[104.43936157 141.74006653]
[100.21337128 127.34766388]
[79.64685059 123.17235565]
[65.91851807 104.16347504]
[68.92858124 78.42394257]
[90.36586761 59.81760788]
[77.89382172 51.48405457]
[65.42177582 43.15050125]
[52.94972992 34.81694794]
[37.64018631 37.69020462]
[25.11047554 29.06112671]
[22.46561050 14.44810867]
[9.99356747 6.11455488]
[-2.47847700 -2.21899867]
[-11.38382626 -4.39586353]
[-15.09693432 -10.81426430]
[-27.41824722 -19.36910439]
[-39.73955917 -27.92394257]
[-55.48806381 -29.43891525]
[-61.52975082 -43.05314636]
[-73.85106659 -51.60798645]
[-86.17237854 -60.16282272]
[-101.92088318 -61.67779541]
[-107.96257019 -75.29202271]
[-120.28388214 -83.84686279]
[-132.68104553 -92.29139709]
[-145.15309143 -100.62495422]
[-157.69902039 -108.84686279]
[-170.31782532 -116.95647430]
[-183.28582764 -124.49508667]
[-196.57723999 -131.44769287]
[-209.86863708 -138.40029907]
[-223.16003418 -145.35290527]
[-236.45143127 -152.30551147]
[-249.74282837 -159.25810242]
[-263.03424072 -166.21070862]
[-276.32562256 -173.16331482]
[-289.61703491 -180.11592102]
[-304.62246704 -175.15480042]
[-318.70318604 -182.33172607]
[-323.50540161 -197.38876343]
[-316.17999268 -211.39283752]
[-301.07302856 -216.03558350]
[-287.14718628 -208.56253052]
[-282.66442871 -193.40731812]
[-269.37301636 -186.45471191]
[-256.08163452 -179.50210571]
[-242.79022217 -172.54951477]
[-229.49882507 -165.59690857]
[-216.20742798 -158.64430237]
[-202.91603088 -151.69169617]
[-189.62463379 -144.73908997]
[-176.33323669 -137.78648376]
[-178.07092285 -152.68550110]
[-167.63677979 -163.46180725]
[-152.68948364 -162.20561218]
[-144.20031738 -149.83895874]
[-148.40032959 -135.43896484]
[-162.20820618 -129.57527161]
[-149.58940125 -121.46566772]
[-142.23863220 -120.49141693]
[-136.81954956 -113.09700012]
[-124.34749603 -104.76344299]
[-117.01528168 -103.65814209]
[-111.72904205 -96.16817474]
[-99.40773010 -87.61333466]
[-84.54052734 -86.71026611]
[-77.61753845 -72.48413849]
[-65.29622650 -63.92929459]
[-52.97491074 -55.37445831]
[-38.10770798 -54.47138596]
[-31.18471909 -40.24525452]
[-18.86340714 -31.69041443]
[-6.54209518 -23.13557625]
[5.85507631 -14.69104290]
[18.32711983 -6.35748959]
[30.79916573 1.97606409]
[45.31197739 -1.17255998]
[58.07912064 7.10117912]
[61.28328323 22.34490204]
[73.75533295 30.67845535]
[86.22737122 39.01200867]
[98.69941711 47.34556198]
[113.50627136 44.94617081]
[122.70833588 33.10041046]
[131.91040039 21.25465393]
[141.11247253 9.40889645]
[150.31452942 -2.43686199]
[152.01451111 -18.74765968]
[167.09829712 -25.18283653]
[180.04898071 -15.12243366]
[177.54402161 1.08426821]
[162.16029358 6.76520395]
[152.95822144 18.61096191]
[143.75616455 30.45672035]
[134.55409241 42.30247879]
[125.35202789 54.14823532]
[128.94639587 60.73082733]
[142.11158752 53.54209518]
[155.27688599 46.35357666]
[162.46517944 59.51900101]
[149.30032349 66.70727539]
[136.13513184 73.89601135]
[139.72949219 80.47860718]
[154.66979980 79.14163208]
[169.61009216 77.80466461]
[184.55039978 76.46769714]
[199.49069214 75.13072205]
[214.43098450 73.79375458]
[222.28060913 60.40857315]
[236.51214600 54.22448730]
[251.65328979 57.61940765]
[261.88195801 69.28791046]
[263.26501465 84.74323273]
[255.27064514 98.04247284]
[240.97286987 104.07180786]
[225.86944580 100.51283264]
[215.76795959 88.73405457]
[200.82766724 90.07102203]
[185.88735962 91.40798950]
[170.94706726 92.74496460]
[156.00675964 94.08193207]
[141.06646729 95.41890717]
[135.41493225 109.48704529]
[125.77536774 118.97415924]
[114.60576630 123.12168121]
[118.83175659 137.51406860]
[123.05773926 151.90646362]
[127.28372955 166.29885864]
[131.50971985 180.69125366]
[135.73570251 195.08364868]
[151.23074341 203.16957092]
[156.00538635 219.63172913]
[147.57954407 234.16973877]
[152.06173706 248.48440552]
[156.54394531 262.79907227]
[161.02615356 277.11373901]
[165.50836182 291.42843628]
[170.87554932 305.43533325]
[177.10676575 319.07980347]
[183.33799744 332.72427368]
[189.56921387 346.36877441]
[195.80044556 360.01324463]
[202.03167725 373.65771484]
[208.26289368 387.30221558]
[214.49412537 400.94668579]
[226.57388306 412.84274292]
[218.48675537 427.74356079]
[201.92950439 424.09744263]
[200.84963989 407.17791748]
[194.61842346 393.53344727]
[188.38719177 379.88894653]
[182.15596008 366.24447632]
[175.92474365 352.60000610]
[169.69351196 338.95550537]
[163.46229553 325.31103516]
[157.23106384 311.66656494]
[151.84461975 325.66604614]
[138.79313660 333.05923462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[13 147]
[14 146]
[15 145]
[16 144]
[17 143]
[18 142]
[22 99]
[23 98]
[24 97]
[25 96]
[28 93]
[29 92]
[30 91]
[32 90]
[33 89]
[34 88]
[36 86]
[37 85]
[38 84]
[40 82]
[41 81]
[42 79]
[43 78]
[44 76]
[45 75]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[100 113]
[101 112]
[102 111]
[103 110]
[104 109]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[155 173]
[156 172]
[157 171]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
