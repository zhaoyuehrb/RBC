%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAGUGACCCGGAAGUAGAAGUGGCCCUUGCAGGCAAGAGUGCUGGAGGGCGGCAGCGGCGACCGGAGCGGUAGGAGCAGCAAUUUAUCCGUGUGCAGCCCCAAACUGGAAAGAAGAUGCUAAUUAAAGUGAAGACGCUGACCGGAAAGGAGAUUGAGAUUGACAUUGAACCUACAGACAAGGUGGAGCGAAUCAAGGAGCGUGUGGAGGAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[150.50291443 207.75289917]
[150.74661255 200.55815125]
[152.75630188 193.62261963]
[156.41918945 187.37429810]
[147.39482117 175.39260864]
[138.37046814 163.41091919]
[129.34609985 151.42922974]
[120.32173920 139.44754028]
[99.82198334 144.37397766]
[79.36241913 139.28321838]
[63.56167603 125.32448578]
[49.97464752 131.68000793]
[36.38761902 138.03552246]
[22.80058861 144.39105225]
[17.33222008 158.97647095]
[3.46250367 165.22833252]
[-10.40877247 159.92518616]
[-23.99580193 166.28070068]
[-25.41293144 181.51025391]
[-34.20472717 193.90383911]
[-47.92837143 200.19096375]
[-62.85648727 198.77418518]
[-74.98937988 190.13365173]
[-88.57640839 196.48918152]
[-97.79832458 209.34478760]
[-112.60501862 207.72889709]
[-126.19204712 214.08441162]
[-139.77906799 220.43994141]
[-153.36610413 226.79545593]
[-166.95312500 233.15097046]
[-180.54016113 239.50650024]
[-183.64819336 249.92216492]
[-191.80522156 256.76943970]
[-202.16584778 257.97473145]
[-211.28474426 253.38011169]
[-225.04849243 259.34326172]
[-238.81225586 265.30639648]
[-252.57600403 271.26953125]
[-261.90805054 284.75451660]
[-278.22811890 283.14572144]
[-284.74746704 268.09811401]
[-274.75958252 255.09141541]
[-258.53915405 257.50579834]
[-244.77539062 251.54264832]
[-231.01164246 245.57949829]
[-217.24787903 239.61636353]
[-206.88542175 223.28727722]
[-186.89567566 225.91946411]
[-173.30865479 219.56394958]
[-159.72161865 213.20843506]
[-146.13459778 206.85290527]
[-132.54756165 200.49739075]
[-118.96054077 194.14186096]
[-110.71045685 181.74084473]
[-94.93193054 182.90214539]
[-81.34489441 176.54663086]
[-80.20055389 161.69549561]
[-71.71981049 149.32888794]
[-58.09771729 142.82467651]
[-42.94951630 144.02000427]
[-30.35132217 152.69367981]
[-16.76429367 146.33816528]
[-11.94401836 132.29179382]
[1.74462450 125.65283203]
[16.44506836 130.80401611]
[30.03209686 124.44850159]
[43.61912537 118.09297943]
[57.20615387 111.73745728]
[55.73976517 96.81993866]
[59.32370377 82.26528931]
[46.78482056 74.03263855]
[31.86079216 78.70247650]
[17.44657707 72.63911438]
[10.34812546 58.70548248]
[13.91711235 43.48062515]
[26.46836853 34.15324783]
[42.07557678 35.12745285]
[53.36948776 45.94325638]
[55.01746750 61.49375916]
[67.55635071 69.72640228]
[78.80103302 61.01686096]
[92.22366333 56.31236267]
[106.44520569 56.09623718]
[111.10092163 41.83705139]
[115.75663757 27.57786942]
[120.41235352 13.31868553]
[125.06806946 -0.94049811]
[129.72378540 -15.19968224]
[124.03992462 -35.86533737]
[139.98733521 -48.97157288]
[144.02528381 -63.41785049]
[148.06321716 -77.86413574]
[152.10116577 -92.31041718]
[151.39726257 -101.41158295]
[156.30203247 -106.93417358]
[160.54678345 -121.32104492]
[159.97351074 -130.43138123]
[164.95698547 -135.88304138]
[169.40768433 -150.20753479]
[173.85836792 -164.53204346]
[178.30906677 -178.85653687]
[166.31427002 -189.85424805]
[160.33903503 -204.92842102]
[161.53289795 -221.04129028]
[169.60610962 -234.96951294]
[182.89784241 -243.94902039]
[198.71760559 -246.22346497]
[202.96235657 -260.61032104]
[207.20710754 -274.99719238]
[194.50273132 -283.16882324]
[184.61622620 -294.58959961]
[178.34904480 -308.33364868]
[176.20924377 -323.28683472]
[178.37028503 -338.23696899]
[184.65699768 -351.97210693]
[194.55972290 -363.37881470]
[207.27569580 -371.53237915]
[221.77409363 -375.77182007]
[236.87960815 -375.75350952]
[251.36767578 -371.47891235]
[264.06384277 -363.29452515]
[273.93887329 -351.86383057]
[280.19223022 -338.11349487]
[282.31701660 -323.15814209]
[280.14096069 -308.21020508]
[273.84045410 -294.48138428]
[263.92626953 -283.08462524]
[251.20211792 -274.94384766]
[236.69946289 -270.71896362]
[221.59397888 -270.75244141]
[217.34922791 -256.36557007]
[213.10447693 -241.97871399]
[223.83299255 -233.18772888]
[230.42236328 -220.93351746]
[231.84904480 -207.04980469]
[227.86488342 -193.62857056]
[219.03953552 -182.70468140]
[206.67924500 -175.94754028]
[192.63356018 -174.40585327]
[188.18287659 -160.08134460]
[183.73217773 -145.75685120]
[179.28147888 -131.43234253]
[174.93365479 -117.07628632]
[170.68890381 -102.68941498]
[166.54743958 -88.27246857]
[162.50950623 -73.82618713]
[158.47155762 -59.37990952]
[154.43360901 -44.93362808]
[159.98602295 -38.01839066]
[161.76416016 -29.18969727]
[159.24594116 -20.39983177]
[152.87385559 -13.65199852]
[143.98297119 -10.54396725]
[139.32725525 3.71521664]
[134.67153931 17.97439957]
[130.01582336 32.23358536]
[125.36010742 46.49276733]
[120.70439148 60.75195312]
[129.11019897 66.50855255]
[135.98152161 74.03057861]
[140.95616150 82.92153931]
[143.77188110 92.71274567]
[144.28024292 102.88809204]
[142.45446777 112.91120148]
[138.39079285 122.25371552]
[132.30343628 130.42317200]
[141.32778931 142.40486145]
[150.35215759 154.38655090]
[159.37651062 166.36824036]
[168.40087891 178.34992981]
[191.97067261 179.35385132]
[206.90458679 197.27497864]
[203.71397400 220.11775208]
[214.05099487 230.98725891]
[224.38801575 241.85675049]
[239.50489807 246.52478027]
[242.66899109 261.07943726]
[253.00601196 271.94891357]
[268.12289429 276.61694336]
[271.28698730 291.17160034]
[281.62399292 302.04110718]
[296.59341431 296.16622925]
[312.63265991 296.48611450]
[327.28533936 302.92214966]
[338.31884766 314.46136475]
[344.06436157 329.31570435]
[343.66940308 345.19903564]
[337.22406006 359.67901611]
[347.71594238 370.39910889]
[363.67803955 372.00878906]
[372.25027466 385.56964111]
[366.85678101 400.67889404]
[351.63497925 405.74606323]
[338.26171875 396.88400269]
[336.99581909 380.89099121]
[326.50396729 370.17086792]
[313.69320679 375.89263916]
[299.66906738 376.90103149]
[286.11401367 373.05462646]
[274.66125488 364.79565430]
[266.69787598 353.09930420]
[263.19686890 339.35852051]
[264.59841919 325.21813965]
[270.75451660 312.37811279]
[260.41748047 301.50860596]
[246.03997803 297.61804199]
[242.13650513 282.28594971]
[231.79948425 271.41644287]
[217.42198181 267.52587891]
[213.51850891 252.19377136]
[203.18148804 241.32427979]
[192.84446716 230.45477295]
[186.32438660 233.06513977]
[179.34109497 233.99682617]
[172.32110596 233.18200684]
[165.69583130 230.65992737]
[159.87510681 226.57504272]
[155.22184753 221.16885376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[11 68]
[12 67]
[13 66]
[14 65]
[17 62]
[18 61]
[23 56]
[24 55]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[35 46]
[36 45]
[37 44]
[38 43]
[70 80]
[71 79]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[90 148]
[91 147]
[92 146]
[93 145]
[95 144]
[96 143]
[98 142]
[99 141]
[100 140]
[101 139]
[107 132]
[108 131]
[109 130]
[173 212]
[174 211]
[175 210]
[177 208]
[178 207]
[180 205]
[181 204]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
