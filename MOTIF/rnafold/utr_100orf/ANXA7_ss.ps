%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCACCCUGGGCCCGCCCCCGGCUCCAUCUUGCGGGAGACCGGGUUGGGCUGUGACGCUGCUGCUGGGGUCAGAAUGUCAUACCCAGGCUAUCCCCCAACAGGCUACCCACCUUUCCCUGGAUAUCCUCCUGCAGGUCAGGAGUCAUCUUUUCCCCCUUCUGGUCAGUAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[178.10415649 172.29446411]
[174.39456177 186.82852173]
[170.68496704 201.36257935]
[166.97535706 215.89663696]
[163.26576233 230.43069458]
[165.20716858 247.27313232]
[149.56039429 253.80110168]
[138.95606995 240.57293701]
[148.73170471 226.72109985]
[152.44129944 212.18704224]
[156.15090942 197.65298462]
[159.86050415 183.11892700]
[163.57009888 168.58486938]
[147.62417603 157.08485413]
[138.00291443 139.83747864]
[136.58181763 120.04974365]
[122.34941864 115.31275177]
[108.11703491 110.57575226]
[93.13853455 111.37861633]
[79.49405670 117.60984039]
[65.84957123 123.84107208]
[52.20509338 130.07229614]
[38.56061554 136.30351257]
[24.97229195 142.65626526]
[11.44120598 149.13005066]
[-2.08987880 155.60382080]
[-15.62096405 162.07759094]
[-18.29802322 177.36199951]
[-29.47114372 188.12957764]
[-44.84403610 190.24000549]
[-58.50550461 182.88174438]
[-65.20243835 168.88423157]
[-62.35972977 153.62976074]
[-51.07046127 142.98400879]
[-35.67557907 141.04048157]
[-22.09473610 148.54650879]
[-8.56365204 142.07273865]
[4.96743345 135.59895325]
[18.49851799 129.12518311]
[23.19050026 123.38337708]
[32.32939148 122.65904236]
[45.97386932 116.42781067]
[59.61835098 110.19658661]
[73.26283264 103.96536255]
[86.90731049 97.73413849]
[88.37048340 90.37825012]
[92.76001740 68.31057739]
[82.53874969 57.33216095]
[72.31748199 46.35374451]
[62.09621048 35.37532806]
[53.93017197 31.20882225]
[51.79264069 24.10854149]
[41.76895142 12.94943237]
[31.74526596 1.79032385]
[21.72157860 -9.36878490]
[11.69789219 -20.52789307]
[1.67420566 -31.68700218]
[-8.34948158 -42.84611130]
[-18.57075119 -53.82452774]
[-28.98634529 -64.61875916]
[-39.40193939 -75.41298676]
[-49.91345596 -86.11383057]
[-60.52005768 -96.72042847]
[-76.49854279 -98.15830231]
[-85.21619415 -111.62612152]
[-79.98556519 -126.79253387]
[-64.81915283 -132.02316284]
[-51.35132599 -123.30551910]
[-49.91345596 -107.32703400]
[-39.30685425 -96.72042847]
[-32.33116150 -94.20592499]
[-28.60770988 -85.82858276]
[-18.19211578 -75.03435516]
[-7.77652073 -64.24011993]
[-3.07166815 -63.26266098]
[1.05784881 -59.29920197]
[2.80962729 -52.86979675]
[12.83331394 -41.71068954]
[22.85700035 -30.55158043]
[32.88068771 -19.39247131]
[42.90437317 -8.23336315]
[52.92806244 2.92574549]
[62.95174789 14.08485413]
[73.07463074 25.15405846]
[83.29589844 36.13247681]
[93.51716614 47.11089325]
[103.73843384 58.08930969]
[112.85402679 96.34336853]
[127.08641815 101.08036041]
[141.31880188 105.81735229]
[147.16354370 97.33297729]
[154.74748230 90.37659454]
[163.68377686 85.29603577]
[173.51814270 82.34362030]
[183.75199890 81.66362762]
[193.86769104 83.28528595]
[203.35470581 87.12151337]
[211.73542786 92.97360229]
[218.58917236 100.54149628]
[223.57334900 109.43918610]
[226.44050598 119.21437836]
[227.05068970 129.37150574]
[241.70788574 132.55998230]
[256.36508179 135.74845886]
[271.49456787 131.12141418]
[282.28628540 141.38726807]
[296.94351196 144.57574463]
[311.60070801 147.76423645]
[324.79519653 139.48516846]
[339.61428833 142.92753601]
[347.42578125 155.55749512]
[362.08297729 158.74597168]
[376.74017334 161.93446350]
[384.87023926 149.16232300]
[396.85702515 139.95964050]
[411.24200439 135.42179871]
[426.28326416 136.07810974]
[440.16622925 141.83004761]
[451.22271729 151.96557617]
[458.13128662 165.24716187]
[460.07528687 180.06289673]
[474.73248291 183.25137329]
[489.38967896 186.43984985]
[501.65432739 171.68194580]
[519.62542725 165.19015503]
[538.33020020 168.67324829]
[552.63714600 181.09193420]
[558.66369629 198.96699524]
[573.51098633 201.10171509]
[588.35833740 203.23645020]
[603.20562744 205.37117004]
[618.05297852 207.50588989]
[632.90026855 209.64060974]
[646.55340576 201.21614075]
[661.60321045 206.77339172]
[666.50476074 222.04933167]
[657.49804688 235.32556152]
[641.49218750 236.41769409]
[630.76556396 224.48793030]
[615.91821289 222.35321045]
[601.07092285 220.21849060]
[586.22357178 218.08377075]
[571.37628174 215.94905090]
[556.52893066 213.81431580]
[551.18804932 223.56642151]
[543.10180664 231.23684692]
[533.03350830 236.07908630]
[521.94042969 237.61466980]
[510.88284302 235.68038940]
[500.92260742 230.44541931]
[493.02130127 222.39675903]
[487.94732666 212.29386902]
[486.20120239 201.09706116]
[471.54400635 197.90858459]
[456.88681030 194.72010803]
[448.96380615 207.38940430]
[437.16217041 216.60083008]
[422.89440918 221.22740173]
[407.87655640 220.69236755]
[393.92193604 215.04100037]
[382.72195435 204.93748474]
[375.64132690 191.58695984]
[373.55169678 176.59165955]
[358.89450073 173.40318298]
[344.23730469 170.21470642]
[331.88504028 178.45829773]
[316.97512817 175.43353271]
[308.41223145 162.42143250]
[293.75503540 159.23295593]
[279.09780884 156.04447937]
[265.01672363 160.89958191]
[253.17660522 150.40565491]
[238.51940918 147.21717834]
[223.86219788 144.02870178]
[213.21310425 159.83067322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[5 9]
[16 90]
[17 89]
[18 88]
[19 45]
[20 44]
[21 43]
[22 42]
[23 41]
[24 39]
[25 38]
[26 37]
[27 36]
[47 87]
[48 86]
[49 85]
[50 84]
[52 83]
[53 82]
[54 81]
[55 80]
[56 79]
[57 78]
[58 77]
[59 74]
[60 73]
[61 72]
[62 70]
[63 69]
[102 174]
[103 173]
[104 172]
[106 170]
[107 169]
[108 168]
[111 165]
[112 164]
[113 163]
[121 155]
[122 154]
[123 153]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
