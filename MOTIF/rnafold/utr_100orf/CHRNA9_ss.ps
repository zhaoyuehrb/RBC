%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAAUGCAAGCCUGAGCUCUCCCGCCAUAAGGCUGCAGCGGUGUGGGCUCCUUGUGCCCAGAUCCUUUGUAUUCAUAGGGGGAAGUGGAAGACCACGCUGCCUGACUGAGACUUUAUUAUAGAGGCUCAGGAAAAAGAUGAACUGGUCCCAUUCCUGCAUCUCCUUUUGCUGGAUCUACUUUGCUGCUUCCAGACUGAGAGCUGCAGAGACGGCAGAUGGAAAAUAUGCUCAGAAGU\
) } def
/len { sequence length } bind def

/coor [
[2.88914633 304.80551147]
[-7.79743433 307.88970947]
[-10.14395142 322.70501709]
[-12.49046803 337.52035522]
[-8.99635506 354.11035156]
[-23.97072792 362.06045532]
[-35.75547791 349.87210083]
[-27.30579376 335.17382812]
[-24.95927620 320.35852051]
[-22.61275864 305.54318237]
[-36.57491684 293.09008789]
[-40.21664429 274.58560181]
[-31.88254738 257.49981689]
[-14.78944588 248.84225464]
[-13.02638435 233.94622803]
[-11.26332378 219.05020142]
[-9.50026226 204.15417480]
[-7.73720169 189.25814819]
[-5.97414064 174.36212158]
[-16.98897934 164.18011475]
[-31.70075798 167.10647583]
[-46.41253662 170.03282166]
[-61.12431717 172.95918274]
[-75.83609772 175.88552856]
[-90.54787445 178.81188965]
[-103.82268524 185.79611206]
[-114.56721497 196.26296997]
[-125.31174469 206.72982788]
[-129.23994446 222.65155029]
[-145.06573486 226.94995117]
[-156.50891113 215.20321655]
[-151.79769897 199.49536133]
[-135.77861023 195.98529053]
[-125.03407288 185.51843262]
[-114.28954315 175.05157471]
[-120.92387390 161.59848022]
[-135.76864624 163.75086975]
[-150.61341858 165.90325928]
[-165.45819092 168.05564880]
[-180.30296326 170.20803833]
[-194.50781250 181.93994141]
[-210.53991699 174.78231812]
[-225.35523987 177.12882996]
[-240.17056274 179.47534180]
[-252.59045410 189.27621460]
[-266.37139893 183.62515259]
[-281.18673706 185.97166443]
[-296.00204468 188.31819153]
[-310.81738281 190.66470337]
[-325.63272095 193.01121521]
[-333.53103638 206.50753784]
[-348.27407837 211.72065735]
[-362.90063477 206.18910217]
[-370.50448608 192.52471924]
[-367.49533081 177.17939758]
[-355.29397583 167.39872742]
[-339.66156006 167.80085754]
[-327.97921753 178.19589233]
[-313.16390991 175.84938049]
[-298.34857178 173.50285339]
[-283.53326416 171.15634155]
[-268.71792603 168.80982971]
[-257.35772705 159.17680359]
[-242.51707458 164.66001892]
[-227.70175171 162.31350708]
[-212.88642883 159.96697998]
[-205.53520203 150.37594604]
[-193.22587585 148.29029846]
[-182.45535278 155.36326599]
[-167.61058044 153.21087646]
[-152.76580811 151.05848694]
[-137.92103577 148.90609741]
[-123.07626343 146.75370789]
[-116.68408966 146.24516296]
[-110.66392517 147.08905029]
[-105.28446960 149.11190796]
[-100.75949860 152.09034729]
[-97.23941803 155.76611328]
[-94.80652618 159.86233521]
[-93.47422791 164.10011292]
[-78.76245117 161.17375183]
[-64.05067444 158.24740601]
[-49.33889008 155.32104492]
[-34.62711334 152.39468384]
[-19.91533279 149.46833801]
[-30.90970039 131.88595581]
[-26.29881859 113.86982727]
[-36.18900681 102.59223175]
[-46.07919312 91.31463623]
[-55.96937943 80.03704071]
[-71.66369629 75.28094482]
[-75.12796021 59.25187683]
[-62.79842377 48.43917084]
[-47.35866928 53.96600342]
[-44.69178391 70.14685059]
[-34.80159378 81.42444611]
[-24.91140747 92.70204163]
[-15.02122116 103.97964478]
[14.22812462 110.85129547]
[13.21502018 144.38569641]
[26.00462151 136.54821777]
[38.79422379 128.71073914]
[51.58382797 120.87326050]
[64.37342834 113.03578186]
[53.71448898 94.87935638]
[53.56160355 70.15994263]
[67.25323486 45.20960617]
[94.37146759 27.75707054]
[94.37146759 12.75707150]
[94.37146759 -2.24292850]
[94.37146759 -17.24292946]
[94.37146759 -32.24292755]
[86.63416290 -46.04310226]
[94.37146759 -58.77037430]
[94.37146759 -73.77037048]
[94.37146759 -88.77037048]
[94.37146759 -103.77037048]
[94.37146759 -118.77037048]
[88.32512665 -134.60951233]
[101.87146759 -144.80426025]
[115.41780090 -134.60951233]
[109.37146759 -118.77037048]
[109.37146759 -103.77037048]
[109.37146759 -88.77037048]
[109.37146759 -73.77037048]
[109.37146759 -58.77037430]
[117.10876465 -46.04310226]
[109.37146759 -32.24292755]
[109.37146759 -17.24292946]
[109.37146759 -2.24292850]
[109.37146759 12.75707150]
[109.37146759 27.75707054]
[116.48906708 30.12133408]
[121.21759033 15.88612938]
[125.94635010 1.65100276]
[140.18139648 6.37999964]
[135.45278931 20.61465454]
[130.72427368 34.84985733]
[137.84187317 37.21411896]
[146.81674194 25.19531441]
[155.79161072 13.17650604]
[153.27606201 -2.42629910]
[162.59774780 -15.18881321]
[178.22627258 -17.53926277]
[190.88951111 -8.08316898]
[193.07460022 7.56933737]
[183.48515320 20.13190079]
[167.81042480 22.15137482]
[158.83555603 34.17018127]
[149.86068726 46.18899155]
[154.42639160 52.13914108]
[166.32684326 43.00791550]
[175.45787048 54.90851974]
[163.55781555 64.03943634]
[168.12351990 69.98959351]
[182.05566406 64.43122864]
[195.98780823 58.87286758]
[205.93843079 46.57263184]
[220.62675476 49.04292679]
[234.55889893 43.48456192]
[248.49104309 37.92620087]
[252.17994690 22.85399055]
[264.04528809 12.85432529]
[279.52459717 11.77228069]
[292.66574097 20.02392387]
[298.41571045 34.43633270]
[294.56350708 49.46763992]
[282.59039307 59.33800125]
[267.10028076 60.25205994]
[254.04940796 51.85834503]
[240.11726379 57.41670609]
[226.18511963 62.97506714]
[217.23101807 74.87773132]
[201.54617310 72.80500793]
[187.61402893 78.36337280]
[173.68188477 83.92173004]
[173.53463745 91.42028809]
[188.53173828 91.71504211]
[188.23674011 106.71214294]
[173.24012756 106.41739655]
[173.09288025 113.91594696]
[186.79605103 120.01699829]
[200.49923706 126.11804962]
[214.20242310 132.21910095]
[227.90560913 138.32014465]
[241.60877991 144.42120361]
[257.36291504 142.96586609]
[265.84280396 155.21087646]
[279.54598999 161.31193542]
[293.24917603 167.41297913]
[306.95236206 173.51403809]
[322.70648193 172.05868530]
[331.18637085 184.30371094]
[344.88955688 190.40476990]
[361.81860352 191.32351685]
[365.62219238 207.84529114]
[350.79901123 216.07391357]
[338.78851318 204.10794067]
[325.08532715 198.00689697]
[310.31134033 199.89862061]
[300.85131836 187.21720886]
[287.14813232 181.11616516]
[273.44494629 175.01512146]
[259.74176025 168.91406250]
[244.96777344 170.80578613]
[235.50773621 158.12437439]
[221.80455017 152.02333069]
[208.10136414 145.92228699]
[194.39819336 139.82122803]
[180.69500732 133.72018433]
[166.99182129 127.61913300]
[129.88890076 153.12225342]
[92.37865448 148.85411072]
[72.21090698 125.82538605]
[59.42130661 133.66285706]
[46.63170242 141.50033569]
[33.84210205 149.33781433]
[21.05249786 157.17529297]
[34.77178192 151.11053467]
[49.75408936 151.83889771]
[62.82039642 159.20582581]
[71.19824219 171.64816284]
[73.10996246 186.52583313]
[68.14992523 200.68203735]
[57.37057114 211.11302185]
[43.05912018 215.60551453]
[28.25224495 213.20625305]
[16.09174156 204.42433167]
[9.15788174 191.12313843]
[8.92188644 176.12518311]
[7.15882492 191.02120972]
[5.39576435 205.91723633]
[3.63270307 220.81326294]
[1.86964226 235.70928955]
[0.10658124 250.60531616]
[9.72286701 256.78399658]
[16.31691551 266.05755615]
[18.97127151 277.06985474]
[17.34120178 288.22787476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[4 8]
[14 235]
[15 234]
[16 233]
[17 232]
[18 231]
[19 230]
[20 85]
[21 84]
[22 83]
[23 82]
[24 81]
[25 80]
[26 35]
[27 34]
[28 33]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[42 66]
[43 65]
[44 64]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[87 98]
[88 97]
[89 96]
[90 95]
[100 218]
[101 217]
[102 216]
[103 215]
[104 214]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[114 126]
[115 125]
[116 124]
[117 123]
[118 122]
[139 150]
[140 149]
[141 148]
[155 176]
[156 175]
[157 174]
[159 172]
[160 171]
[161 170]
[181 211]
[182 210]
[183 209]
[184 208]
[185 207]
[186 206]
[188 204]
[189 203]
[190 202]
[191 201]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
