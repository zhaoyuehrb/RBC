%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUGUGCGUCAUGUACCAGCGCCGGAAGUUGGUCUCGACACCUGGACUAGCCGGGUUGUAUUUGGAAACGCGGAGUGAGUUUUUCCGUGCUGUGUAGGGGCUAACAAUGGACACCCAGAAGGACGUUCAACCUCCAAAGCAGCAACCAAUGAUAUAUAUCUGUGGAGAGUGUCACACAGAAAAUGAAAUAAAAUCUAGGGAUCCAA\
) } def
/len { sequence length } bind def

/coor [
[-13.05845165 166.93927002]
[-21.62868118 157.17515564]
[-35.70252609 162.36427307]
[-49.77637100 167.55337524]
[-63.85021591 172.74249268]
[-74.12166595 184.77610779]
[-88.73976135 181.91941833]
[-102.81360626 187.10853577]
[-116.88745117 192.29763794]
[-130.96128845 197.48675537]
[-145.03514099 202.67585754]
[-158.98841858 208.18095398]
[-172.81404114 213.99923706]
[-182.53257751 226.48364258]
[-197.26458740 224.28883362]
[-211.09019470 230.10710144]
[-224.91581726 235.92538452]
[-238.74143982 241.74366760]
[-245.43862915 247.95771790]
[-252.81886292 247.54376221]
[-266.73037720 253.15356445]
[-280.64187622 258.76336670]
[-287.43173218 264.87606812]
[-294.80490112 264.35119629]
[-308.79913330 269.75128174]
[-322.79339600 275.15133667]
[-336.78765869 280.55142212]
[-340.06597900 284.61740112]
[-344.16635132 286.80001831]
[-348.23333740 287.10159302]
[-351.53646851 285.86380005]
[-365.75991821 290.62753296]
[-379.98336792 295.39126587]
[-394.20684814 300.15499878]
[-408.43029785 304.91873169]
[-422.65377808 309.68246460]
[-436.87722778 314.44616699]
[-441.41036987 329.28634644]
[-453.82080078 338.60086060]
[-469.33648682 338.80813599]
[-481.99133301 329.82846069]
[-486.91928101 315.11468506]
[-482.22543335 300.32458496]
[-469.71466064 291.14523315]
[-454.19763184 291.10629272]
[-441.64096069 300.22271729]
[-427.41751099 295.45898438]
[-413.19403076 290.69525146]
[-398.97058105 285.93151855]
[-384.74710083 281.16781616]
[-370.52365112 276.40408325]
[-356.30017090 271.64035034]
[-342.18774414 266.55715942]
[-328.19348145 261.15710449]
[-314.19921875 255.75701904]
[-300.20495605 250.35694885]
[-286.25167847 244.85185242]
[-272.34017944 239.24205017]
[-258.42864990 233.63224792]
[-244.55970764 227.91804504]
[-230.73410034 222.09976196]
[-216.90847778 216.28149414]
[-203.08285522 210.46321106]
[-194.35322571 198.39497375]
[-178.63230896 200.17361450]
[-164.80670166 194.35534668]
[-163.14427185 191.24423218]
[-159.89155579 188.78431702]
[-155.37129211 187.71464539]
[-150.22425842 188.60202026]
[-136.15040588 183.41290283]
[-122.07656097 178.22380066]
[-108.00271606 173.03468323]
[-93.92887115 167.84556580]
[-84.66407776 156.18312073]
[-69.03932953 158.66864014]
[-54.96548462 153.47953796]
[-40.89163971 148.29042053]
[-26.81779289 143.10131836]
[-25.69396591 126.24448395]
[-17.28804207 111.52613831]
[-3.24884486 101.93085480]
[13.62696743 99.42864227]
[29.95195580 104.57068634]
[42.42784882 116.36880493]
[56.33935928 110.75900269]
[70.25086975 105.14919281]
[84.16237640 99.53939056]
[84.38072205 85.65591431]
[96.97402191 73.60424805]
[102.89604187 59.82274628]
[108.81806183 46.04125214]
[114.74008179 32.25975418]
[120.66210175 18.47825623]
[126.58412170 4.69675875]
[118.82188416 -8.60939693]
[120.36507416 -23.75772858]
[130.41339111 -34.96019363]
[144.95730591 -38.06060028]
[150.87933350 -51.84209824]
[156.80134583 -65.62359619]
[162.72337341 -79.40509033]
[156.93930054 -86.19894409]
[153.69120789 -94.46263123]
[153.30503845 -103.28985596]
[155.79443359 -111.72229767]
[160.86245728 -118.85366058]
[167.93659973 -123.92707062]
[176.23339844 -126.41535950]
[184.84515381 -126.07576752]
[191.78527832 -139.37368774]
[198.72538757 -152.67161560]
[205.66549683 -165.96954346]
[212.60562134 -179.26747131]
[208.09829712 -194.17793274]
[215.32598877 -207.56504822]
[229.56861877 -211.77020264]
[236.50872803 -225.06813049]
[235.27029419 -241.42045593]
[248.96336365 -250.44442749]
[263.50167847 -242.85696411]
[263.92944336 -226.46339417]
[249.80665588 -218.12802124]
[242.86653137 -204.83009338]
[247.56170654 -190.74140930]
[240.71287537 -177.15655518]
[225.90353394 -172.32736206]
[218.96342468 -159.02943420]
[212.02331543 -145.73150635]
[205.08319092 -132.43357849]
[198.14308167 -119.13565826]
[206.37026978 -99.55112457]
[197.31248474 -80.02272797]
[176.50486755 -73.48307037]
[170.58283997 -59.70157242]
[164.66082764 -45.92007828]
[158.73880005 -32.13858032]
[166.49963379 -19.45364571]
[165.28857422 -4.45373392]
[155.36117554 7.09183693]
[140.36561584 10.61878014]
[134.44360352 24.40027809]
[128.52157593 38.18177414]
[122.59955597 51.96327209]
[116.67753601 65.74476624]
[110.75551605 79.52626801]
[122.55977631 70.27103424]
[134.36404419 61.01580048]
[141.77014160 47.97165298]
[154.13719177 39.48307419]
[168.97177124 37.26152039]
[183.28292847 41.75490952]
[194.18528748 52.05727768]
[199.48068237 66.09147644]
[198.10150146 81.02793121]
[190.32577515 93.85517883]
[177.72126770 101.98699188]
[162.82928467 103.78383636]
[148.64964294 98.88175964]
[133.67362976 99.72985077]
[118.69762421 100.57794189]
[132.24690247 107.01354980]
[145.79617310 113.44915771]
[159.34545898 119.88477325]
[172.89472961 126.32038116]
[186.44401550 132.75599670]
[200.04127502 139.08958435]
[213.68576050 145.32081604]
[229.15927124 141.08412170]
[242.03379822 150.65628052]
[242.43307495 166.69436646]
[230.05082703 176.89532471]
[214.38565063 173.43385315]
[207.45452881 158.96530151]
[193.81004333 152.73406982]
[186.41865540 152.81491089]
[180.00839233 146.30526733]
[166.45912170 139.86965942]
[152.90985107 133.43405151]
[139.36056519 126.99843597]
[125.81129456 120.56282806]
[112.26201630 114.12721252]
[121.06723022 126.27086639]
[132.85592651 135.54591370]
[140.95254517 148.17304993]
[144.46223450 162.75668335]
[142.99705505 177.68495178]
[136.71896362 191.30793762]
[126.32184601 202.11996460]
[112.95482635 208.92604065]
[98.09527588 210.97393799]
[83.38554382 208.03730774]
[70.45140839 200.44073486]
[60.72239304 189.02380371]
[55.27379990 175.04835510]
[54.70782471 160.05903625]
[59.08701706 145.71252441]
[67.92738342 133.59443665]
[80.25316620 125.04349518]
[89.77217865 113.45089722]
[75.86067200 119.06070709]
[61.94916534 124.67050934]
[48.03765488 130.28031921]
[48.11937332 143.49542236]
[43.71556473 155.92156982]
[35.37096024 166.08666992]
[24.09577370 172.79432678]
[11.24341869 175.26466370]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 79]
[3 78]
[4 77]
[5 76]
[7 74]
[8 73]
[9 72]
[10 71]
[11 70]
[12 66]
[13 65]
[15 63]
[16 62]
[17 61]
[18 60]
[20 59]
[21 58]
[22 57]
[24 56]
[25 55]
[26 54]
[27 53]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[85 203]
[86 202]
[87 201]
[88 200]
[90 146]
[91 145]
[92 144]
[93 143]
[94 142]
[95 141]
[99 137]
[100 136]
[101 135]
[102 134]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[117 124]
[118 123]
[161 182]
[162 181]
[163 180]
[164 179]
[165 178]
[166 177]
[167 175]
[168 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
