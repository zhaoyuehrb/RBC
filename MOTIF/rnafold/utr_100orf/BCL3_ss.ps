%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCGGCGAAACCACCCUCCCGUGCAGCCGAGCCCAGCCGCUCUCCGGCCGCCGUCCCCGGCGGCCCCAUGCCCCGAUGCCCCGCGGGGGCCAUGGACGAGGGGCCCGUGGACCUGCGCACCCGGCCCAAGGCCGCCGGACUCCCGGGCGCCGCGCUGCCGCUCCGCA\
) } def
/len { sequence length } bind def

/coor [
[7.53979063 320.94976807]
[-0.19528480 325.71081543]
[-9.11761379 326.34649658]
[-16.97270775 339.12527466]
[-17.60792732 354.93371582]
[-30.86441040 361.72451782]
[-38.71950531 374.50332642]
[-46.57460022 387.28210449]
[-48.41429901 396.26913452]
[-54.69320679 400.22164917]
[-62.78173065 412.85397339]
[-57.00267792 427.25473022]
[-60.82452774 442.29379272]
[-72.77769470 452.18829346]
[-88.26594543 453.13363647]
[-101.33373260 444.76626587]
[-106.95623016 430.30368042]
[-102.97145844 415.30694580]
[-90.91165924 405.54269409]
[-75.41406250 404.76544189]
[-67.32553864 392.13311768]
[-59.35338974 379.42700195]
[-51.49829483 366.64822388]
[-43.64320374 353.86941528]
[-43.56983185 338.97500610]
[-29.75149918 331.27017212]
[-21.89640427 318.49139404]
[-23.19178009 297.91354370]
[-4.27902031 287.89044189]
[2.86019087 274.69833374]
[2.11295009 259.82247925]
[15.48585892 251.36814880]
[22.62507057 238.17604065]
[29.76428032 224.98393250]
[36.90349197 211.79183960]
[35.45882034 194.31866455]
[51.18608856 184.77473450]
[58.08174515 171.45368958]
[64.97740173 158.13265991]
[71.87305450 144.81163025]
[72.15657043 137.39768982]
[79.01971436 131.31094360]
[86.15892792 118.11883545]
[75.22023773 128.38261414]
[60.26464844 127.22922516]
[51.02906036 115.40958405]
[53.52634430 100.61892700]
[66.13063812 92.48677826]
[80.63549805 96.30733490]
[68.07800293 88.10311127]
[55.52050781 79.89888763]
[42.96300888 71.69466400]
[30.40551186 63.49044418]
[17.84801483 55.28622055]
[5.29051828 47.08199692]
[-7.26697922 38.87777710]
[-23.66211700 38.51514053]
[-31.30729675 24.00709724]
[-22.33781242 10.27828121]
[-5.98070192 11.45171928]
[0.93724328 26.32028008]
[13.49474049 34.52450180]
[26.05223846 42.72872543]
[38.60973358 50.93294525]
[51.16723251 59.13716888]
[63.72472763 67.34139252]
[76.28222656 75.54561615]
[88.83972168 83.74983215]
[101.76066589 76.13082886]
[100.65933990 61.17131042]
[99.55802155 46.21179581]
[98.45669556 31.25227928]
[97.35537720 16.29276466]
[96.11668396 1.34399736]
[94.74073029 -13.59276104]
[93.36477661 -28.52952003]
[91.98882294 -43.46627808]
[88.45718384 -49.12814713]
[88.35897827 -54.85831451]
[90.84703827 -58.97542953]
[90.02072144 -73.95265198]
[89.19440460 -88.92987823]
[82.28470612 -104.41188049]
[95.24887085 -115.33738708]
[109.33624268 -105.90435028]
[104.17163086 -89.75619507]
[104.99794769 -74.77896881]
[105.82426453 -59.80174637]
[106.92558289 -44.84223175]
[108.30153656 -29.90547371]
[109.67749023 -14.96871567]
[111.05344391 -0.03195717]
[114.81253815 6.36461592]
[112.31489563 15.19144344]
[113.41621399 30.15095901]
[114.51753235 45.11047363]
[115.61885834 60.06998825]
[116.72017670 75.02950287]
[122.80693817 61.31996918]
[137.50836182 58.34202194]
[148.45045471 68.60216522]
[146.42341614 83.46456909]
[133.13328552 90.41975403]
[148.13265991 90.55754089]
[162.00331116 82.94733429]
[174.65898132 90.80121613]
[189.65834045 90.93900299]
[204.65771484 91.07679749]
[219.65707397 91.21458435]
[234.65644836 91.35237122]
[243.30453491 88.29269409]
[249.92944336 91.63299561]
[264.92373657 92.04631042]
[279.91806030 92.45962524]
[295.88171387 83.31657410]
[310.47262573 93.03786469]
[325.47198486 93.17565155]
[340.47137451 93.31343842]
[349.11944580 90.25376892]
[355.74435425 93.59406281]
[370.73867798 94.00737762]
[374.55258179 91.75609589]
[378.48800659 90.94194031]
[382.07113647 91.42307281]
[384.92495728 92.91636658]
[386.80746460 95.04205322]
[401.73092651 96.55516052]
[416.65441895 98.06826019]
[431.57791138 99.58136749]
[447.94616699 95.16361237]
[456.72247314 109.66923523]
[445.21322632 122.11810303]
[430.06481934 114.50485229]
[415.14132690 112.99175262]
[400.21783447 111.47864532]
[385.29434204 109.96554565]
[370.32534790 109.00168610]
[355.33105469 108.58837128]
[340.33358765 108.31280518]
[325.33419800 108.17501831]
[310.33483887 108.03723145]
[301.46429443 116.29660797]
[288.94259644 116.28180695]
[279.50473022 107.45392609]
[264.51043701 107.04061127]
[249.51612854 106.62729645]
[234.51866150 106.35173798]
[219.51928711 106.21395111]
[204.51992798 106.07616425]
[189.52055359 105.93837738]
[174.52119446 105.80059052]
[161.72338867 113.42064667]
[147.99487305 105.55690765]
[132.99549866 105.41912079]
[99.35102844 125.25804901]
[92.21182251 138.45014954]
[85.19409180 151.70729065]
[78.29843140 165.02832031]
[71.40277863 178.34934998]
[64.50712585 191.67037964]
[67.66410065 204.20187378]
[61.61648178 215.16633606]
[50.09559631 218.93104553]
[42.95638657 232.12315369]
[35.81717682 245.31526184]
[28.67796516 258.50735474]
[28.91456223 274.32681274]
[16.05229759 281.83755493]
[8.91308594 295.02966309]
[12.80923557 303.69039917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 27]
[4 26]
[6 24]
[7 23]
[8 22]
[10 21]
[11 20]
[29 169]
[30 168]
[32 166]
[33 165]
[34 164]
[35 163]
[37 160]
[38 159]
[39 158]
[40 157]
[42 156]
[43 155]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[74 92]
[75 91]
[76 90]
[77 89]
[80 88]
[81 87]
[82 86]
[103 154]
[104 153]
[106 151]
[107 150]
[108 149]
[109 148]
[110 147]
[112 146]
[113 145]
[114 144]
[116 141]
[117 140]
[118 139]
[120 138]
[121 137]
[126 136]
[127 135]
[128 134]
[129 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
