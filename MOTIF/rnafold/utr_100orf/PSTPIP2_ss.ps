%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:18:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGAGUCUGCGGAGCCGCGGGCAGUGGCAGUCAGGCCUCCCCGCUCUGUGCUACCUGCGGCCCGGCUCUCCUCCGCGCCCCCACUCGCGCUGCGAUGACGCGCUCACUGUUCAAGGGAAACUUUUGGAGUGCAGACAUCCUCAGCACCAUCGGCUAUGACAACAUUAUCCAACAUCUGAACAAUGGCCGCAAGA\
) } def
/len { sequence length } bind def

/coor [
[199.00027466 232.07513428]
[204.49134827 220.04273987]
[194.09826660 209.22683716]
[183.70518494 198.41091919]
[173.31211853 187.59501648]
[162.91903687 176.77909851]
[152.18634033 166.30010986]
[141.12493896 156.16870117]
[130.06352234 146.03730774]
[119.00212860 135.90589905]
[107.94071960 125.77449799]
[96.87931824 115.64308929]
[82.36495209 111.85716248]
[67.76419067 115.29484558]
[53.16342163 118.73252869]
[38.56265640 122.17021179]
[23.96189308 125.60789490]
[9.36112785 129.04557800]
[-5.23963737 132.48326111]
[-12.88624001 137.50158691]
[-20.10061646 135.85737610]
[-34.75434494 139.06179810]
[-49.35511017 142.49948120]
[-63.89920044 146.16955566]
[-78.44329071 149.83963013]
[-92.98738098 153.50970459]
[-107.50173950 157.29562378]
[-121.98545837 161.19717407]
[-136.46917725 165.09870911]
[-150.95288086 169.00024414]
[-165.43659973 172.90177917]
[-170.38183594 177.31803894]
[-175.97532654 178.40223694]
[-180.44454956 176.68890381]
[-195.04531860 180.12658691]
[-209.64607239 183.56427002]
[-224.21896362 187.11825562]
[-238.76306152 190.78834534]
[-246.64820862 204.48504639]
[-261.93038940 208.51371765]
[-275.54296875 200.48419189]
[-279.40985107 185.16024780]
[-271.23684692 171.63333130]
[-255.87289429 167.92869568]
[-242.43313599 176.24424744]
[-227.88903809 172.57417297]
[-222.16607666 167.88392639]
[-213.08375549 168.96350098]
[-198.48300171 165.52581787]
[-183.88223267 162.08813477]
[-169.33813477 158.41806030]
[-154.85443115 154.51652527]
[-140.37071228 150.61499023]
[-125.88699341 146.71345520]
[-111.40328217 142.81192017]
[-105.75583649 138.03100586]
[-96.65745544 138.96560669]
[-82.11336517 135.29553223]
[-67.56927490 131.62545776]
[-53.02518463 127.95538330]
[-49.84650803 124.37690735]
[-44.38189697 122.76428223]
[-37.95875931 124.40806580]
[-23.30503082 121.20365143]
[-8.67731953 117.88249207]
[5.92344522 114.44481659]
[20.52420998 111.00713348]
[35.12497711 107.56945038]
[49.72573853 104.13176727]
[64.32650757 100.69408417]
[78.92726898 97.25640106]
[82.84855652 90.86315918]
[68.26445007 87.35548401]
[67.09390259 72.40122986]
[80.95459747 66.66702271]
[90.69113922 78.07668304]
[94.61242676 71.68344879]
[91.05843353 57.11055756]
[87.50444031 42.53766632]
[83.95044708 27.96477509]
[71.70645142 22.33577919]
[65.04052734 10.84848881]
[66.19443512 -2.18715477]
[74.52317810 -12.02760601]
[71.20202637 -26.65531731]
[66.24482727 -34.34169006]
[67.94651031 -41.54272842]
[64.85903931 -56.22153854]
[61.77156830 -70.90035248]
[58.68409729 -85.57916260]
[49.50703430 -99.83461761]
[60.66491318 -112.59933472]
[76.01959229 -105.41114044]
[73.36290741 -88.66663361]
[76.45037842 -73.98782349]
[79.53784943 -59.30900955]
[82.62532043 -44.63019943]
[85.82973480 -29.97647095]
[89.15089417 -15.34875965]
[103.74794769 -7.00671768]
[107.88203430 9.63780499]
[98.52333832 24.41078377]
[102.07733154 38.98367310]
[105.63132477 53.55656433]
[109.18531799 68.12945557]
[116.47175598 69.90644836]
[120.02574921 55.33356094]
[123.57998657 40.76073074]
[138.15275574 44.31520462]
[134.59864807 58.88755417]
[131.04464722 73.46044159]
[138.33110046 75.23744202]
[148.19502258 63.93687057]
[158.05895996 52.63630295]
[167.92289734 41.33573532]
[177.78683472 30.03516960]
[187.65075684 18.73460197]
[197.51469421 7.43403482]
[207.37863159 -3.86653280]
[213.23922729 -19.77532387]
[230.14868164 -18.54774666]
[233.65007019 -1.95929956]
[218.67919922 5.99740028]
[208.81526184 17.29796791]
[198.95132446 28.59853554]
[189.08740234 39.89910126]
[179.22346497 51.19966888]
[169.35952759 62.50023651]
[159.49559021 73.80080414]
[149.63166809 85.10137177]
[137.33805847 99.94522858]
[121.91072083 106.50722504]
[107.01071930 104.58168793]
[118.07212067 114.71308899]
[129.13352966 124.84449768]
[140.19493103 134.97589111]
[151.25633240 145.10729980]
[162.31774902 155.23870850]
[166.61402893 156.02871704]
[170.08171082 157.95631409]
[172.46405029 160.61914062]
[173.66213989 163.57275391]
[173.73495483 166.38601685]
[184.12802124 177.20193481]
[194.52110291 188.01783752]
[204.91418457 198.83375549]
[215.30725098 209.64967346]
[231.51203918 203.99700928]
[248.50331116 205.98406982]
[262.87332153 215.16368103]
[271.76132202 229.65101624]
[273.42294312 246.51048279]
[267.57250977 262.35043335]
[278.30520630 272.82940674]
[289.03790283 283.30838013]
[299.77059937 293.78738403]
[310.50329590 304.26635742]
[321.23599243 314.74536133]
[331.96868896 325.22433472]
[344.69522095 317.15386963]
[358.94006348 312.23645020]
[373.93502808 310.73727417]
[388.87145996 312.73718262]
[402.94384766 318.12832642]
[415.39331055 326.61999512]
[425.54843140 337.75418091]
[432.86157227 350.93048096]
[436.93832397 365.43829346]
[437.55886841 380.49523926]
[434.68969727 395.28930664]
[428.48559570 409.02270508]
[419.28109741 420.95474243]
[407.57260132 430.44201660]
[393.99154663 436.97283936]
[379.27032471 440.19500732]
[364.20285034 439.93478394]
[349.60168457 436.20620728]
[336.25424194 429.21029663]
[324.88034058 419.32440186]
[316.09335327 407.08163452]
[310.36715698 393.14221191]
[308.01055908 378.25787354]
[309.15066528 363.23135376]
[313.72595215 348.87295532]
[321.48971558 335.95703125]
[310.75698853 325.47805786]
[300.02429199 314.99905396]
[289.29159546 304.52008057]
[278.55889893 294.04110718]
[267.82620239 283.56210327]
[257.09350586 273.08312988]
[245.27545166 278.50500488]
[232.28607178 279.58721924]
[219.67204285 276.17910767]
[208.94274902 268.66595459]
[201.38972473 257.92556763]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 138]
[8 137]
[9 136]
[10 135]
[11 134]
[12 133]
[13 71]
[14 70]
[15 69]
[16 68]
[17 67]
[18 66]
[19 65]
[21 64]
[22 63]
[23 60]
[24 59]
[25 58]
[26 57]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[34 50]
[35 49]
[36 48]
[37 46]
[38 45]
[77 105]
[78 104]
[79 103]
[80 102]
[84 99]
[85 98]
[87 97]
[88 96]
[89 95]
[90 94]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[119 123]
[153 191]
[154 190]
[155 189]
[156 188]
[157 187]
[158 186]
[159 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
