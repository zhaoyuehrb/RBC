%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCACACAGCUGCCUGGUAGGUGACUGGAGGCCUUGAUCGGUUCUUAUUGGGAUUUUGCUGCUGUGGCCCCAACCCUUCCUCCCUCCCCACCCUGCGAUGGCAGAAGAAACUCAACACAACAAAUUGGCUGCAGCCAAGAAAAAGUUAAAAGAAUAUUGGCAGAAAAACAGACCUAGAGUUCCAGCAGGAGUGAACA\
) } def
/len { sequence length } bind def

/coor [
[101.94023132 337.45477295]
[88.77017975 329.55255127]
[81.32972717 316.11621094]
[81.62032318 300.76007080]
[89.56379700 287.61486816]
[103.02339172 280.21655273]
[103.26018524 265.21841431]
[103.49697876 250.22029114]
[92.98031616 239.73529053]
[93.00680542 224.52166748]
[104.07575226 213.56192017]
[104.31254578 198.56379700]
[104.54933929 183.56565857]
[104.78613281 168.56753540]
[101.74537659 161.82327271]
[105.14691162 153.33500671]
[105.62043762 138.34246826]
[106.09396362 123.34995270]
[92.38826752 122.40390015]
[81.68591309 114.22766876]
[77.34772491 101.76301575]
[62.73900986 98.35927582]
[48.13029480 94.95553589]
[33.52157974 91.55179596]
[24.62259102 97.82758331]
[13.95805836 98.15739441]
[5.06248188 92.67379761]
[0.75128555 83.39631653]
[-13.74269676 79.53309631]
[-28.23667908 75.66987610]
[-42.73065948 71.80665588]
[-57.22464371 67.94343567]
[-67.25375366 77.40708923]
[-80.54455566 80.65117645]
[-93.59767914 76.93170166]
[-103.03055573 67.32380676]
[-106.45393372 54.41383362]
[-120.88512421 50.32228851]
[-134.56777954 57.76693726]
[-149.14477539 53.41194916]
[-156.15777588 40.32175064]
[-170.58897400 36.23020554]
[-185.02015686 32.13866043]
[-178.73287964 45.75739670]
[-183.77955627 59.88294220]
[-197.27316284 66.43448639]
[-211.49438477 61.66408157]
[-218.30769348 48.30073929]
[-213.81538391 33.98923492]
[-200.58802795 26.91682053]
[-214.56755066 21.47871590]
[-228.54707336 16.04061317]
[-242.52659607 10.60251045]
[-252.22459412 15.55492496]
[-262.82836914 14.37126732]
[-270.85778809 7.68326807]
[-273.81182861 -2.11120558]
[-287.61270142 -7.98791170]
[-301.41357422 -13.86461735]
[-315.21444702 -19.74132347]
[-331.41943359 -17.22528076]
[-341.48870850 -30.16909027]
[-335.06384277 -45.25727081]
[-318.75421143 -46.96839523]
[-309.33776855 -33.54220581]
[-295.53686523 -27.66549873]
[-281.73599243 -21.78879356]
[-267.93511963 -15.91208649]
[-248.97018433 -19.65367699]
[-237.08848572 -3.37701178]
[-223.10896301 2.06109142]
[-209.12944031 7.49919462]
[-195.14991760 12.93729782]
[-180.92861938 17.70746994]
[-166.49742126 21.79901695]
[-152.06623840 25.89056206]
[-139.22639465 18.42906570]
[-124.53282928 22.37289619]
[-116.79357910 35.89109802]
[-102.36238861 39.98264313]
[-89.79314423 29.43066406]
[-73.24556732 28.43635178]
[-59.22496414 37.58891296]
[-53.36142349 53.44945145]
[-38.86743927 57.31267548]
[-24.37345886 61.17589569]
[-9.87947559 65.03911591]
[4.61450672 68.90233612]
[22.85850525 62.51293182]
[36.92532349 76.94307709]
[51.53403473 80.34682465]
[66.14275360 83.75056458]
[80.75146484 87.15430450]
[92.50000000 77.82843018]
[92.50000000 62.82843018]
[92.50000000 47.82843018]
[92.50000000 32.82843018]
[83.83629608 18.90462685]
[91.80042267 4.56919193]
[108.19957733 4.56919193]
[116.16370392 18.90462685]
[107.50000000 32.82843018]
[107.50000000 47.82843018]
[107.50000000 62.82843018]
[107.50000000 77.82843018]
[113.06829834 82.85277557]
[123.11717224 71.71633911]
[134.25344849 81.76538849]
[124.20490265 92.90145874]
[129.77320862 97.92580414]
[144.69430542 96.38927460]
[159.61540222 94.85275269]
[174.53649902 93.31623077]
[189.45759583 91.77970886]
[191.12452698 73.90622711]
[196.50524902 56.78668213]
[205.35752869 41.18351746]
[217.28462219 27.79109764]
[231.75299072 17.20481110]
[248.11621094 9.89460945]
[265.64385986 6.18413830]
[283.55401611 6.23641109]
[301.04827881 10.04664898]
[317.34732056 17.44260406]
[331.72552490 28.09234238]
[343.54342651 41.51914215]
[356.49417114 33.95088577]
[369.44488525 26.38263130]
[382.39562988 18.81437492]
[395.34637451 11.24612045]
[402.99664307 -3.25922656]
[419.39190674 -3.61608720]
[427.66610718 10.54264641]
[419.30746460 24.65168190]
[402.91461182 24.19685364]
[389.96389771 31.76511002]
[377.01315308 39.33336639]
[364.06240845 46.90161896]
[351.11169434 54.46987534]
[353.49884033 60.04780579]
[355.48056030 65.78231049]
[357.04672241 71.64395905]
[358.18927002 77.60268402]
[358.90231323 83.62790680]
[359.18225098 89.68872070]
[359.02758789 95.75402069]
[373.85922241 97.99523163]
[388.69082642 100.23643494]
[403.52246094 102.47764587]
[418.35406494 104.71885681]
[429.96228027 94.24108124]
[445.59143066 93.72792053]
[457.86193848 103.42166138]
[460.98004150 118.74521637]
[453.47344971 132.46328735]
[438.88656616 138.09860229]
[424.10687256 132.99034119]
[416.11285400 119.55047607]
[401.28125000 117.30926514]
[386.44961548 115.06806183]
[371.61801147 112.82685089]
[356.78637695 110.58563995]
[352.24838257 124.19069672]
[345.47869873 136.83834839]
[336.67031860 148.16551208]
[326.07479858 157.84683228]
[313.99502563 165.60391235]
[300.77658081 171.21343994]
[286.79788208 174.51354980]
[272.45928955 175.40849304]
[258.17175293 173.87142944]
[244.34487915 169.94525146]
[231.37530518 163.74134827]
[219.63529968 155.43647766]
[209.46200562 145.26770020]
[201.14787292 133.52563477]
[194.93217468 120.54617310]
[190.99411011 106.70080566]
[176.07301331 108.23732758]
[161.15191650 109.77384949]
[146.23081970 111.31037140]
[131.30972290 112.84689331]
[121.08648682 123.82347870]
[120.61296082 138.81600952]
[120.13943481 153.80853271]
[119.78426361 168.80432129]
[119.54747009 183.80245972]
[119.31067657 198.80058289]
[119.07388306 213.79872131]
[129.79132080 225.10243225]
[129.33752441 240.30929565]
[118.49510956 250.45709229]
[118.25831604 265.45523071]
[118.02152252 280.45333862]
[131.24085999 288.27285767]
[138.76539612 301.66229248]
[138.57107544 317.01995850]
[130.71015930 330.21472168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[8 192]
[11 189]
[12 188]
[13 187]
[14 186]
[16 185]
[17 184]
[18 183]
[21 93]
[22 92]
[23 91]
[24 90]
[28 88]
[29 87]
[30 86]
[31 85]
[32 84]
[37 80]
[38 79]
[41 76]
[42 75]
[43 74]
[50 73]
[51 72]
[52 71]
[53 70]
[57 68]
[58 67]
[59 66]
[60 65]
[94 105]
[95 104]
[96 103]
[97 102]
[110 182]
[111 181]
[112 180]
[113 179]
[114 178]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
