%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCGACGGAGAUGCGCGCGGGGCCUGUUGGGUGAAGGAGCAGAGCGGCCGGAAGCGCGGAGGGAGCCGCGGGAUGGACCGCAGCCUGCCAGUUUUCUCCAUUCAAGAUAGUCCCUUUGGAGAUGCGCCCCUGGGUCGAAGCCACUACUGGCCAUCCCAGAGCCAGACCUGGU\
) } def
/len { sequence length } bind def

/coor [
[79.79513550 126.41358185]
[73.37390137 112.85719299]
[65.89864349 112.24849701]
[60.09589386 126.08064270]
[54.29314804 139.91278076]
[53.85377884 149.07209778]
[48.25875473 153.94076538]
[42.20722580 167.66587830]
[48.15716171 182.30738831]
[41.93440247 196.83505249]
[27.23080254 202.62985229]
[12.76974869 196.25384521]
[7.13072538 181.48980713]
[13.65926552 167.09696960]
[28.48210335 161.61434937]
[34.53363037 147.88923645]
[40.46100998 134.11003113]
[46.26375580 120.27789307]
[52.06649780 106.44575500]
[49.77349472 91.62205505]
[40.06270218 80.18962097]
[30.35190773 68.75718689]
[20.64111328 57.32476044]
[10.93031883 45.89233017]
[-5.89937401 47.40866852]
[-20.18165588 38.69245148]
[-26.40383911 23.33947945]
[-22.30255699 7.46065044]
[-32.21817017 -3.79459691]
[-42.13378525 -15.04984474]
[-52.04940033 -26.30509186]
[-61.96501541 -37.56033707]
[-71.88063049 -48.81558609]
[-81.79624176 -60.07083511]
[-96.72440338 -65.31111908]
[-99.33197021 -79.97570038]
[-109.24758148 -91.23094177]
[-119.16320038 -102.48619080]
[-129.07881165 -113.74143982]
[-139.49218750 -124.53780365]
[-150.38212585 -134.85330200]
[-161.27206421 -145.16879272]
[-172.16198730 -155.48428345]
[-191.94355774 -159.24443054]
[-196.72000122 -177.96064758]
[-207.97525024 -187.87626648]
[-219.23049927 -197.79188538]
[-230.48574829 -207.70748901]
[-241.83004761 -217.52110291]
[-253.26248169 -227.23188782]
[-264.69491577 -236.94268799]
[-277.82943726 -232.69834900]
[-291.23785400 -235.48500061]
[-301.43099976 -244.46801758]
[-305.81066895 -257.21478271]
[-303.33142090 -270.35275269]
[-314.58666992 -280.26837158]
[-325.84188843 -290.18399048]
[-337.09713745 -300.09957886]
[-348.35238647 -310.01519775]
[-364.10733032 -308.76715088]
[-376.07586670 -319.08847046]
[-377.15728760 -334.85571289]
[-366.70999146 -346.71444702]
[-350.93222046 -347.62911987]
[-339.18457031 -337.05703735]
[-338.43679810 -321.27044678]
[-327.18154907 -311.35482788]
[-315.92630005 -301.43920898]
[-304.67105103 -291.52362061]
[-293.41580200 -281.60800171]
[-277.53695679 -285.70928955]
[-262.18399048 -279.48709106]
[-253.46777344 -265.20480347]
[-254.98411560 -248.37512207]
[-243.55168152 -238.66432190]
[-232.11924744 -228.95353699]
[-224.96084595 -227.01306152]
[-220.57012939 -218.96273804]
[-209.31488037 -209.04713440]
[-198.05963135 -199.13151550]
[-186.80439758 -189.21589661]
[-176.66325378 -190.77648926]
[-167.14549255 -186.38865662]
[-161.51432800 -177.28968811]
[-161.84649658 -166.37420654]
[-150.95657349 -156.05871582]
[-140.06663513 -145.74322510]
[-129.17669678 -135.42773438]
[-126.77020264 -150.23344421]
[-113.78602600 -157.74417114]
[-99.75189209 -152.44860840]
[-94.96596527 -138.23260498]
[-102.94013977 -125.52777863]
[-117.82356262 -123.65705109]
[-107.90795135 -112.40180206]
[-97.99234009 -101.14656067]
[-88.07672119 -89.89131165]
[-73.85779572 -85.45607758]
[-70.54099274 -69.98645020]
[-60.62538147 -58.73120117]
[-50.70976639 -47.47595215]
[-40.79415131 -36.22070694]
[-30.87853813 -24.96545792]
[-20.96292496 -13.71021080]
[-11.04730988 -2.45496392]
[2.09064698 -4.93421078]
[14.83742332 -0.55454075]
[23.82043648 9.63859272]
[26.60708427 23.04699707]
[22.36275101 36.18153381]
[32.07354355 47.61396408]
[41.78433990 59.04639435]
[51.49513245 70.47882843]
[61.20592880 81.91125488]
[125.55152893 86.50081635]
[139.92996216 90.77402496]
[154.30841064 95.04723358]
[168.68685913 99.32044983]
[183.06530762 103.59365845]
[192.21842957 103.04016113]
[197.66348267 108.07599640]
[211.96243286 112.60810089]
[226.26138306 117.14020538]
[240.56033325 121.67230988]
[249.72195435 121.28415680]
[255.07521057 126.41747284]
[269.29000854 131.20698547]
[283.50479126 135.99652100]
[296.38516235 124.08454132]
[313.43310547 120.33521271]
[329.95379639 125.68914032]
[341.44387817 138.59254456]
[344.81915283 155.44682312]
[359.19760132 159.72003174]
[373.57604980 163.99324036]
[389.39102173 159.65516663]
[400.86358643 171.37316895]
[396.19180298 187.09278870]
[380.18154907 190.64302063]
[369.30282593 178.37168884]
[354.92437744 174.09848022]
[340.54595947 169.82527161]
[332.33404541 179.47596741]
[321.03509521 185.31491089]
[308.31942749 186.43899536]
[296.08193970 182.64508057]
[286.15991211 174.46559143]
[280.05694580 163.09413147]
[278.71527100 150.21131897]
[264.50048828 145.42178345]
[250.28567505 140.63226318]
[236.02822876 135.97126770]
[221.72927856 131.43916321]
[207.43032837 126.90705109]
[193.13137817 122.37494659]
[178.79208374 117.97210693]
[164.41365051 113.69889069]
[150.03520203 109.42568207]
[135.65675354 105.15246582]
[121.27831268 100.87925720]
[110.38838196 111.19474792]
[113.87689209 125.78345490]
[117.36540222 140.37216187]
[120.85391998 154.96086121]
[132.51828003 166.48797607]
[128.10649109 182.28254700]
[112.15699768 186.09645081]
[101.07729340 174.00628662]
[106.26521301 158.44937134]
[102.77670288 143.86067200]
[99.28818512 129.27197266]
[95.79967499 114.68325806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[7 16]
[8 15]
[20 115]
[21 114]
[22 113]
[23 112]
[24 111]
[28 106]
[29 105]
[30 104]
[31 103]
[32 102]
[33 101]
[34 100]
[36 98]
[37 97]
[38 96]
[39 95]
[40 89]
[41 88]
[42 87]
[43 86]
[45 82]
[46 81]
[47 80]
[48 79]
[49 77]
[50 76]
[51 75]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[116 161]
[117 160]
[118 159]
[119 158]
[120 157]
[122 156]
[123 155]
[124 154]
[125 153]
[127 152]
[128 151]
[129 150]
[134 143]
[135 142]
[136 141]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
