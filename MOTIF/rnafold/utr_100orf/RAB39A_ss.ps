%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGCGCCCGCGAGGUGCUGAAAGGACAGUUCCCGCCGCCGAACUUAGCCCGCGGGUGGGGCGGCCCGGGAGCCAGCGGGGCACGUGAGCGAUGGAGACCAUCUGGAUCUACCAGUUCCGCCUCAUCGUGAUCGGGGACUCCACCGUGGGCAAGUCCUGCCUCCUGCACCGCUUCACCCAGGGCCGCUUCC\
) } def
/len { sequence length } bind def

/coor [
[84.44124603 169.25434875]
[94.32093048 156.61428833]
[93.83769226 141.62207031]
[93.35445404 126.62985229]
[92.87121582 111.63764191]
[78.93348694 106.09330750]
[68.28424835 116.65710449]
[57.63501358 127.22090149]
[46.98577499 137.78469849]
[45.61052322 142.84776306]
[42.71446991 146.50416565]
[39.09168243 148.40951538]
[35.55755234 148.58601379]
[24.41038132 158.62298584]
[13.26320839 168.65994263]
[8.97214031 176.73919678]
[1.85466325 178.76702881]
[-9.45275879 188.62310791]
[-14.77175522 203.52340698]
[-29.44989204 206.05354309]
[-40.75731277 215.90960693]
[-52.06473541 225.76568604]
[-63.37215424 235.62176514]
[-64.20325470 251.40419006]
[-76.00651550 261.91412354]
[-91.77926636 260.91619873]
[-102.16381836 249.00247192]
[-100.99919891 233.24116516]
[-88.97635651 222.98313904]
[-73.22823334 224.31434631]
[-61.92081070 214.45826721]
[-50.61338806 204.60218811]
[-39.30596542 194.74610901]
[-34.79575348 180.55079651]
[-19.30883408 177.31568909]
[-8.00141239 167.45960999]
[3.22624922 157.51277161]
[14.37342167 147.47581482]
[25.52059364 137.43884277]
[36.42198181 127.13545990]
[47.07121658 116.57167053]
[57.72045135 106.00787354]
[68.36968994 95.44407654]
[57.83714294 84.76393127]
[55.21042633 69.99571228]
[61.41431427 56.33877945]
[74.26463318 48.60125732]
[89.23725128 49.50725555]
[101.06082916 58.73780441]
[105.57270813 73.04315186]
[101.18563080 87.38511658]
[110.76559448 75.84283447]
[120.34556580 64.30055237]
[129.92553711 52.75827408]
[129.51318359 39.85796738]
[137.74108887 30.43996048]
[149.78230286 29.19964027]
[159.54696655 17.81319237]
[169.31164551 6.42674351]
[179.07630920 -4.95970440]
[188.84098816 -16.34615326]
[198.60565186 -27.73260117]
[208.37031555 -39.11904907]
[218.13499451 -50.50549698]
[227.89965820 -61.89194489]
[237.66433716 -73.27839661]
[247.42900085 -84.66484070]
[246.40640259 -100.20807648]
[256.47137451 -111.61644745]
[271.29577637 -112.49555206]
[281.06045532 -123.88199615]
[290.82510376 -135.26844788]
[300.58978271 -146.65489197]
[310.35446167 -158.04135132]
[320.11914062 -169.42779541]
[321.08251953 -174.58509827]
[323.67495728 -178.46269226]
[327.13269043 -180.65336609]
[330.64114380 -181.11367798]
[340.94454956 -192.01506042]
[351.24792480 -202.91645813]
[361.55130005 -213.81784058]
[371.85470581 -224.71922302]
[382.15808105 -235.62062073]
[392.46145630 -246.52200317]
[392.19100952 -262.09649658]
[402.79541016 -273.00527954]
[417.64495850 -273.16711426]
[427.94833374 -284.06851196]
[427.67788696 -299.64300537]
[438.28228760 -310.55178833]
[453.13183594 -310.71365356]
[463.43524170 -321.61502075]
[473.73861694 -332.51641846]
[477.59469604 -347.86050415]
[491.96011353 -351.79547119]
[502.26348877 -362.69686890]
[512.56689453 -373.59826660]
[522.87030029 -384.49963379]
[533.17364502 -395.40103149]
[537.02972412 -410.74511719]
[551.39514160 -414.68008423]
[561.69854736 -425.58148193]
[549.78009033 -431.69912720]
[541.68133545 -445.55416870]
[541.22625732 -464.72518921]
[547.98223877 -478.11761475]
[554.73822021 -491.51000977]
[561.49420166 -504.90243530]
[557.86108398 -520.52868652]
[567.92559814 -533.02209473]
[583.96710205 -532.79876709]
[593.67993164 -520.03002930]
[589.61322021 -504.51095581]
[574.88659668 -498.14645386]
[568.13061523 -484.75405884]
[561.37463379 -471.36163330]
[554.61865234 -457.96920776]
[560.11071777 -452.86160278]
[571.09472656 -442.64636230]
[576.58673096 -437.53872681]
[589.45458984 -445.24703979]
[602.32250977 -452.95535278]
[606.21520996 -465.26123047]
[617.10260010 -471.41442871]
[628.87292480 -468.58786011]
[641.86328125 -476.08786011]
[654.85363770 -483.58786011]
[665.54760742 -496.74371338]
[681.14965820 -490.10961914]
[679.09393311 -473.28076172]
[662.35363770 -470.59747314]
[649.36328125 -463.09747314]
[636.37292480 -455.59747314]
[628.43829346 -439.95108032]
[610.03076172 -440.08746338]
[597.16290283 -432.37918091]
[584.29504395 -424.67086792]
[572.59991455 -415.27807617]
[562.29656982 -404.37670898]
[559.17742920 -389.81234741]
[544.07507324 -385.09762573]
[533.77166748 -374.19625854]
[523.46826172 -363.29486084]
[513.16485596 -352.39349365]
[502.86151123 -341.49209595]
[499.74240112 -326.92773438]
[484.64001465 -322.21304321]
[474.33660889 -311.31164551]
[464.03323364 -300.41024780]
[464.70852661 -285.57516479]
[454.41470337 -274.37283325]
[438.84973145 -273.76513672]
[428.54635620 -262.86373901]
[429.22161865 -248.02865601]
[418.92782593 -236.82632446]
[403.36285400 -236.21861267]
[393.05947876 -225.31723022]
[382.75607300 -214.41584778]
[372.45269775 -203.51445007]
[362.14932251 -192.61306763]
[351.84591675 -181.71168518]
[341.54254150 -170.81028748]
[331.50558472 -159.66311646]
[321.74090576 -148.27667236]
[311.97622681 -136.89022827]
[302.21157837 -125.50377655]
[292.44689941 -114.11733246]
[282.68222046 -102.73088074]
[284.07345581 -87.94574738]
[274.33288574 -76.25917053]
[258.81546021 -74.90016937]
[249.05078125 -63.51372147]
[239.28611755 -52.12727356]
[229.52143860 -40.74082565]
[219.75677490 -29.35437775]
[209.99209595 -17.96792984]
[200.22743225 -6.58148146]
[190.46275330 4.80496645]
[180.69808960 16.19141388]
[170.93341064 27.57786179]
[161.16874695 38.96430969]
[158.87709045 56.35729980]
[141.46780396 62.33824158]
[131.88784790 73.88052368]
[122.30787659 85.42279816]
[112.72790527 96.96508026]
[107.86343384 111.15440369]
[108.34667206 126.14661407]
[108.82991028 141.13882446]
[109.31314850 156.13104248]
[119.98632050 168.10864258]
[117.13457489 183.89620972]
[102.94551086 191.38285828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[5 188]
[6 43]
[7 42]
[8 41]
[9 40]
[13 39]
[14 38]
[15 37]
[17 36]
[18 35]
[20 33]
[21 32]
[22 31]
[23 30]
[51 187]
[52 186]
[53 185]
[54 184]
[57 182]
[58 181]
[59 180]
[60 179]
[61 178]
[62 177]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[70 169]
[71 168]
[72 167]
[73 166]
[74 165]
[75 164]
[79 163]
[80 162]
[81 161]
[82 160]
[83 159]
[84 158]
[85 157]
[88 154]
[89 153]
[92 150]
[93 149]
[94 148]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
[102 140]
[103 139]
[106 118]
[107 117]
[108 116]
[109 115]
[121 138]
[122 137]
[123 136]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
