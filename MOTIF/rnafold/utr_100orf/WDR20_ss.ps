%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACCAGGAACAGCGCCUGCGCGGUGGGCGUGAUCCGGGCACUUAGGGCAGGAUGAACGCUGCUUUCCAAGAUGGCGACGGAGGGAGGAGGGAAGGAGAUGAACGAGAUUAAGACCCAAUUCACCACCCGGGAAGGUCUGUACAAGCUGCUGCCGCACUCGGAGUACAGCC\
) } def
/len { sequence length } bind def

/coor [
[79.10658264 150.81930542]
[67.01293945 143.94302368]
[56.45459747 154.59767151]
[52.61820602 162.92771912]
[45.60647202 165.34774780]
[34.85639954 175.80891418]
[30.86937904 184.06791687]
[23.81485939 186.36022949]
[12.87660122 196.62445068]
[1.93834305 206.88868713]
[3.06058121 220.33233643]
[-3.67656326 231.79461670]
[-15.61323261 237.19335938]
[-28.28712273 234.75683594]
[-39.40996170 244.82075500]
[-50.53279877 254.88467407]
[-61.65563583 264.94860840]
[-72.77847290 275.01251221]
[-83.90131378 285.07644653]
[-95.02414703 295.14035034]
[-106.14698792 305.20428467]
[-113.83540344 320.31469727]
[-130.48365784 317.10971069]
[-132.01263428 300.22485352]
[-116.21090698 294.08145142]
[-105.08806610 284.01751709]
[-93.96523285 273.95361328]
[-82.84239197 263.88967896]
[-71.71955872 253.82575989]
[-60.59671783 243.76184082]
[-49.47388077 233.69792175]
[-38.35104370 223.63400269]
[-38.24077225 206.83265686]
[-25.77978516 195.06535339]
[-8.32589149 195.95043945]
[2.61236644 185.68620300]
[13.55062485 175.42196655]
[24.39523697 165.05883789]
[35.14530945 154.59767151]
[45.79995346 144.03933716]
[56.35829163 133.38468933]
[50.60861588 124.07544708]
[46.81750107 113.81152344]
[45.13528824 102.99990845]
[45.62867737 92.06934357]
[48.27810669 81.45325470]
[34.98168945 74.51025391]
[21.68527031 67.56725311]
[8.38885307 60.62424850]
[-4.90756464 53.68124771]
[-18.20398140 46.73824310]
[-31.50039864 39.79524231]
[-45.33542633 46.82173920]
[-60.65292358 44.34103394]
[-71.56300354 33.30700684]
[-73.87051392 17.96246147]
[-66.68817139 4.20769501]
[-52.77773666 -2.66830754]
[-37.48805237 -0.02158220]
[-26.69831467 11.13015175]
[-24.55739594 26.49882317]
[-11.26097965 33.44182587]
[2.03543806 40.38483047]
[15.33185577 47.32783127]
[28.62827301 54.27083206]
[41.92469025 61.21383667]
[55.22110748 68.15683746]
[70.06276703 53.92508316]
[89.09700775 46.14593124]
[109.65816498 45.90881729]
[128.86674500 53.24695587]
[138.41551208 41.67884445]
[147.96426392 30.11073685]
[157.51303101 18.54262733]
[151.21409607 4.68315887]
[151.55589294 -10.47501183]
[158.41709900 -23.92656136]
[170.38908386 -33.02779388]
[185.06488037 -36.01616287]
[199.52293396 -32.35143280]
[209.07170105 -43.91954041]
[218.62045288 -55.48765182]
[217.30566406 -71.00889587]
[227.15426636 -82.60458374]
[241.95950317 -83.76237488]
[251.50827026 -95.33049011]
[254.32617188 -110.89872742]
[268.39520264 -115.78864288]
[277.94396973 -127.35675812]
[287.49273682 -138.92486572]
[296.82986450 -150.66445923]
[305.95227051 -162.57167053]
[315.07467651 -174.47886658]
[309.04324341 -187.12117004]
[309.05499268 -201.06230164]
[315.05050659 -213.57495117]
[325.80532837 -222.23593140]
[339.17962646 -225.39535522]
[352.54382324 -222.49073792]
[361.88095093 -234.23033142]
[371.21807861 -245.96992493]
[367.92257690 -261.25631714]
[375.26965332 -275.06045532]
[389.79025269 -280.86447144]
[404.62817383 -275.92785645]
[412.77740479 -262.58154297]
[410.39013672 -247.12725830]
[398.59356689 -236.86203003]
[382.95767212 -236.63279724]
[373.62054443 -224.89320374]
[364.28341675 -213.15361023]
[370.57131958 -198.28605652]
[368.50173950 -182.18218994]
[358.54452515 -169.23901367]
[343.33609009 -163.03849792]
[326.98190308 -165.35646057]
[317.85949707 -153.44924927]
[308.73706055 -141.54203796]
[308.47198486 -136.74095154]
[305.16427612 -132.06442261]
[299.06085205 -129.37609863]
[289.51208496 -117.80799103]
[279.96331787 -106.23988342]
[277.82839966 -91.49907684]
[263.07638550 -85.78172302]
[253.52761841 -74.21361542]
[255.19670105 -59.45727158]
[245.67770386 -47.58953857]
[230.18856812 -45.93888855]
[220.63980103 -34.37078094]
[211.09104919 -22.80267143]
[217.42947388 -9.30119514]
[217.27664185 5.67498922]
[210.60929871 19.15488625]
[198.70187378 28.44108963]
[183.88320923 31.64949417]
[169.08113098 28.09138870]
[159.53237915 39.65949631]
[149.98361206 51.22760773]
[140.43486023 62.79571533]
[148.07855225 73.39945984]
[153.00128174 85.50863647]
[154.92445374 98.43794250]
[153.73922729 111.45565033]
[149.51266479 123.82503510]
[142.48397827 134.84605408]
[133.05093384 143.89500427]
[140.35350037 156.99739075]
[147.65606689 170.09977722]
[154.95863342 183.20216370]
[171.76145935 184.98680115]
[184.07644653 196.31283569]
[187.19561768 212.58190918]
[180.08671570 227.36039734]
[187.62599182 240.32801819]
[195.16528320 253.29563904]
[209.65348816 260.97833252]
[209.97369385 277.37435913]
[195.79649353 285.61688232]
[181.70617676 277.22671509]
[182.19766235 260.83493042]
[174.65837097 247.86730957]
[167.11909485 234.89968872]
[153.74917603 234.77835083]
[142.09620667 228.00434875]
[135.26564026 216.25892639]
[135.13885498 202.56394958]
[141.85624695 190.50473022]
[134.55368042 177.40234375]
[127.25112152 164.29995728]
[119.94855499 151.19757080]
[106.45083618 154.56668091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[5 39]
[6 38]
[8 37]
[9 36]
[10 35]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[71 140]
[72 139]
[73 138]
[74 137]
[80 131]
[81 130]
[82 129]
[85 126]
[86 125]
[88 123]
[89 122]
[90 121]
[91 118]
[92 117]
[93 116]
[99 111]
[100 110]
[101 109]
[147 171]
[148 170]
[149 169]
[150 168]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
