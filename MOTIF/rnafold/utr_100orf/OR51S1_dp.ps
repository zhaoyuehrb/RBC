%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR51S1)
} def

/sequence { (\
AUGUCAACAUUACCAACUCAGAUAGCCCCCAAUAGCAGCACUUCAAUGGCCCCCACCUUCUUGCUGGUGGGCAUGCCAGGCCUAUCAGGUGCACCCUCCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.187583051 ubox
1 23 0.020598859 ubox
1 33 0.010199549 ubox
2 9 0.220014070 ubox
2 12 0.031958414 ubox
2 15 0.061761091 ubox
2 20 0.069004327 ubox
2 22 0.021301017 ubox
2 24 0.549533892 ubox
2 31 0.017579993 ubox
2 32 0.010170756 ubox
2 34 0.010609973 ubox
2 37 0.053559917 ubox
2 93 0.023925070 ubox
3 8 0.228204981 ubox
3 10 0.028608792 ubox
3 11 0.035295741 ubox
3 13 0.068351418 ubox
3 14 0.067142577 ubox
3 17 0.066683415 ubox
3 19 0.076542071 ubox
3 23 0.601088399 ubox
3 26 0.022540027 ubox
3 30 0.019423925 ubox
3 33 0.011477000 ubox
3 36 0.059380308 ubox
3 92 0.026899930 ubox
3 94 0.037233007 ubox
4 9 0.028654514 ubox
4 12 0.066917659 ubox
4 16 0.064121727 ubox
4 22 0.604938669 ubox
4 25 0.021688786 ubox
4 32 0.011115278 ubox
4 35 0.057535342 ubox
4 91 0.024516477 ubox
4 93 0.035040420 ubox
5 21 0.605226998 ubox
5 91 0.010921959 ubox
6 90 0.009311440 ubox
7 90 0.007023161 ubox
8 89 0.007731966 ubox
8 91 0.011695717 ubox
9 23 0.054898190 ubox
9 33 0.019611960 ubox
9 90 0.011214707 ubox
10 16 0.089069785 ubox
10 21 0.015922160 ubox
10 22 0.057948431 ubox
10 25 0.013504054 ubox
10 32 0.020647126 ubox
10 35 0.007373347 ubox
10 89 0.010097699 ubox
11 15 0.080483617 ubox
11 20 0.029497674 ubox
11 21 0.057133187 ubox
11 24 0.022971873 ubox
11 31 0.019509962 ubox
11 34 0.010056318 ubox
11 88 0.006461591 ubox
11 91 0.056626215 ubox
12 23 0.022324100 ubox
12 33 0.009597083 ubox
12 90 0.063867845 ubox
13 89 0.064561666 ubox
14 88 0.063762472 ubox
14 91 0.045137334 ubox
15 90 0.036132556 ubox
16 90 0.091199933 ubox
17 25 0.063034961 ubox
17 35 0.023937080 ubox
17 88 0.036389410 ubox
17 89 0.096511241 ubox
18 24 0.061017379 ubox
18 34 0.022795243 ubox
18 37 0.007619200 ubox
18 87 0.036539089 ubox
18 88 0.078575623 ubox
18 89 0.034814282 ubox
19 88 0.068161924 ubox
19 91 0.006242272 ubox
20 83 0.004144406 ubox
20 90 0.006220717 ubox
20 97 0.067246763 ubox
20 100 0.045295049 ubox
21 44 0.003383040 ubox
21 82 0.004292546 ubox
21 86 0.241075849 ubox
21 96 0.071687996 ubox
21 98 0.064436538 ubox
21 99 0.049693006 ubox
22 33 0.031802461 ubox
22 43 0.003321172 ubox
22 85 0.241417090 ubox
22 97 0.061099859 ubox
23 32 0.032661696 ubox
23 34 0.050034540 ubox
23 84 0.241345418 ubox
24 33 0.053215199 ubox
24 83 0.240837078 ubox
24 97 0.008570385 ubox
24 100 0.006183453 ubox
25 36 0.767807633 ubox
25 39 0.006618574 ubox
25 81 0.137699912 ubox
25 82 0.198264097 ubox
25 90 0.005086517 ubox
25 92 0.143922225 ubox
25 96 0.007731488 ubox
25 99 0.006033697 ubox
26 35 0.768269351 ubox
26 38 0.006674101 ubox
26 80 0.193524059 ubox
26 89 0.005301500 ubox
26 91 0.143936791 ubox
27 79 0.193136626 ubox
27 80 0.135397405 ubox
27 88 0.005279938 ubox
27 89 0.038003767 ubox
28 71 0.003983573 ubox
28 79 0.135656199 ubox
28 80 0.031527023 ubox
28 88 0.037309913 ubox
28 89 0.138646728 ubox
29 49 0.003308660 ubox
29 70 0.003989982 ubox
29 79 0.032146370 ubox
29 80 0.035322991 ubox
29 88 0.138899998 ubox
29 89 0.011335964 ubox
30 48 0.003603226 ubox
30 69 0.003979634 ubox
30 79 0.035392259 ubox
30 88 0.011516886 ubox
31 43 0.009214943 ubox
31 47 0.003894906 ubox
31 68 0.003278437 ubox
32 42 0.008784161 ubox
32 47 0.006842515 ubox
32 85 0.141967006 ubox
33 46 0.007861131 ubox
33 84 0.144124335 ubox
34 42 0.063044283 ubox
34 43 0.014414785 ubox
34 83 0.144239653 ubox
34 97 0.110198822 ubox
34 100 0.019138445 ubox
35 41 0.067927790 ubox
35 42 0.014118785 ubox
35 76 0.004273575 ubox
35 81 0.017916751 ubox
35 82 0.141720406 ubox
35 92 0.014471716 ubox
35 96 0.118644514 ubox
35 99 0.021526824 ubox
36 66 0.003406367 ubox
36 75 0.004279058 ubox
36 80 0.024355490 ubox
36 91 0.014235138 ubox
37 43 0.010513482 ubox
37 47 0.004792010 ubox
37 65 0.003512052 ubox
37 74 0.004055136 ubox
37 83 0.003266294 ubox
37 90 0.011364597 ubox
37 97 0.017383496 ubox
37 100 0.004303211 ubox
38 42 0.008563738 ubox
38 50 0.003235307 ubox
38 64 0.003576090 ubox
38 81 0.137273569 ubox
38 82 0.003557411 ubox
38 90 0.004916046 ubox
38 92 0.958166236 ubox
38 96 0.008461161 ubox
39 48 0.003273252 ubox
39 49 0.003164479 ubox
39 63 0.003576176 ubox
39 80 0.137578651 ubox
39 89 0.008232752 ubox
39 91 0.959222302 ubox
40 47 0.004762240 ubox
40 62 0.003447886 ubox
40 90 0.959008521 ubox
41 79 0.128339032 ubox
41 80 0.014207984 ubox
41 88 0.017827894 ubox
41 89 0.959009889 ubox
42 78 0.091186692 ubox
42 79 0.017110694 ubox
42 87 0.022707693 ubox
42 88 0.950372944 ubox
42 89 0.003321252 ubox
43 78 0.009656085 ubox
43 79 0.009599775 ubox
43 80 0.024676133 ubox
43 87 0.843363073 ubox
43 88 0.021341597 ubox
44 75 0.005088539 ubox
44 79 0.036921835 ubox
44 88 0.008109529 ubox
45 74 0.003904026 ubox
46 74 0.016469963 ubox
46 85 0.207571055 ubox
47 55 0.004142211 ubox
47 73 0.016990173 ubox
47 78 0.290451502 ubox
47 84 0.211052828 ubox
47 87 0.003568387 ubox
48 54 0.004331902 ubox
48 72 0.016613860 ubox
48 77 0.309952761 ubox
48 82 0.948837581 ubox
48 83 0.045584830 ubox
49 53 0.004262606 ubox
49 72 0.005577278 ubox
49 76 0.310006830 ubox
49 81 0.949975579 ubox
49 82 0.032328767 ubox
50 71 0.006227746 ubox
50 75 0.309866478 ubox
50 80 0.950511789 ubox
51 70 0.005807770 ubox
51 71 0.012966994 ubox
51 79 0.949885131 ubox
51 80 0.004765336 ubox
52 69 0.005382734 ubox
52 70 0.011345105 ubox
52 71 0.999165962 ubox
52 79 0.004409977 ubox
53 67 0.003903402 ubox
53 69 0.008075971 ubox
53 70 0.999855836 ubox
54 66 0.003904257 ubox
54 69 0.999919978 ubox
55 65 0.003567847 ubox
55 68 0.999765756 ubox
56 67 0.999954759 ubox
57 66 0.999866357 ubox
57 67 0.004439362 ubox
58 66 0.006183083 ubox
60 66 0.004558502 ubox
70 77 0.008046383 ubox
71 76 0.009866048 ubox
79 86 0.024144293 ubox
80 85 0.016456630 ubox
80 90 0.014829126 ubox
80 92 0.004480441 ubox
81 89 0.016292215 ubox
81 91 0.004496302 ubox
82 88 0.016841041 ubox
82 89 0.004507890 ubox
83 87 0.015217748 ubox
83 88 0.004355669 ubox
87 97 0.097692268 ubox
87 100 0.145687210 ubox
88 95 0.043745050 ubox
88 96 0.104281963 ubox
88 97 0.009307721 ubox
88 98 0.004883602 ubox
88 99 0.161726534 ubox
89 94 0.043977737 ubox
89 95 0.103839404 ubox
89 96 0.010275821 ubox
89 97 0.003885771 ubox
89 98 0.161763920 ubox
89 99 0.003425183 ubox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
38 92 0.9500000 lbox
39 91 0.9500000 lbox
40 90 0.9500000 lbox
41 89 0.9500000 lbox
42 88 0.9500000 lbox
43 87 0.9500000 lbox
48 82 0.9500000 lbox
49 81 0.9500000 lbox
50 80 0.9500000 lbox
51 79 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
showpage
end
%%EOF
