%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGAAUGCUUCAUUCGCCUCACAAACAACCACAGAACCACAAGUGCGGUGCAAACUUUCUCCAGGAGGACAGCAAGAAGUCUCUGGUUUUUAAAUGGUUAAUCUCCGCAGGUCACUACCAGCCACCGAGACCAACAGAGUCAUUUAAGGCUGCAAGCAGUAUUUACAACAGAGGGUACAAGUUCUAUCUGAAAAAAAAAGGAGGGACUAUGGCAUCAAACAGCCUCUUCAGCACAGUGACACCAUGUCAGCAA\
AACUUCUUUUGGGAUCCGAGCACCAGCCGGCGCUUCAGCCCCCCCUCCAGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[-122.57463074 76.70777893]
[-138.12684631 82.20399475]
[-154.97958374 80.23343658]
[-158.28573608 94.86454773]
[-161.59188843 109.49565887]
[-164.89804077 124.12677002]
[-168.20419312 138.75787354]
[-171.51034546 153.38899231]
[-174.81649780 168.02009583]
[-172.40995789 184.80236816]
[-187.87017822 191.76066589]
[-198.83634949 178.83087158]
[-189.44760132 164.71394348]
[-186.14144897 150.08283997]
[-182.83529663 135.45172119]
[-179.52914429 120.82061768]
[-176.22299194 106.18950653]
[-172.91683960 91.55839539]
[-169.61068726 76.92728424]
[-178.64665222 64.95434570]
[-193.62351990 64.12139130]
[-208.60037231 63.28844070]
[-215.21612549 79.07679749]
[-226.93598938 91.51290894]
[-242.25061035 99.02602386]
[-259.19854736 100.67741394]
[-275.61737061 96.27761078]
[-289.41964722 86.40786743]
[-298.85827637 72.34346771]
[-313.36337280 76.16473389]
[-327.86846924 79.98600769]
[-342.37356567 83.80727386]
[-356.87869263 87.62854004]
[-371.23626709 103.58097839]
[-390.86248779 97.10934448]
[-405.24514771 101.36836243]
[-419.62780762 105.62738037]
[-434.01046753 109.88639832]
[-448.39312744 114.14542389]
[-462.77575684 118.40444183]
[-477.15841675 122.66345978]
[-483.96435547 133.57952881]
[-495.99157715 136.84956360]
[-506.67843628 131.25270081]
[-521.10339355 135.36621094]
[-528.45135498 140.70207214]
[-535.69482422 139.44763184]
[-550.16058350 143.41523743]
[-558.95056152 160.24322510]
[-576.95452881 165.16456604]
[-592.53717041 155.48626709]
[-606.91979980 159.74528503]
[-621.30242920 164.00430298]
[-626.56964111 178.48059082]
[-639.20324707 186.98028564]
[-654.24145508 186.41769409]
[-665.92492676 177.21798706]
[-680.30755615 181.47700500]
[-694.69024658 185.73602295]
[-709.07287598 189.99504089]
[-723.45550537 194.25407410]
[-734.34637451 206.51464844]
[-750.35308838 202.94862366]
[-755.00939941 187.22441101]
[-743.52520752 175.51773071]
[-727.71453857 179.87141418]
[-713.33190918 175.61239624]
[-698.94921875 171.35337830]
[-684.56658936 167.09436035]
[-670.18395996 162.83532715]
[-665.39349365 148.75735474]
[-653.08636475 140.09719849]
[-637.86169434 140.34742737]
[-625.56146240 149.62164307]
[-611.17883301 145.36262512]
[-596.79614258 141.10360718]
[-593.67858887 130.19227600]
[-585.61407471 122.03956604]
[-574.50811768 118.73534393]
[-563.06481934 121.20397186]
[-554.12817383 128.94947815]
[-539.66241455 124.98188019]
[-525.21691895 120.94126892]
[-510.79193115 116.82775116]
[-499.24685669 103.58179474]
[-481.41744995 108.28080750]
[-467.03479004 104.02178955]
[-452.65213013 99.76276398]
[-438.26947021 95.50374603]
[-423.88681030 91.24472809]
[-409.50418091 86.98571014]
[-395.12152100 82.72669220]
[-392.24700928 74.42212677]
[-385.79504395 68.25544739]
[-377.10635376 65.68119049]
[-368.06716919 67.38874817]
[-360.69995117 73.12344360]
[-346.19485474 69.30216980]
[-331.68975830 65.48090363]
[-317.18466187 61.65963745]
[-302.67953491 57.83837128]
[-302.36157227 45.97690201]
[-299.10757446 34.56607056]
[-293.12149048 24.32095337]
[-303.42938232 13.42383766]
[-313.73730469 2.52672148]
[-324.04519653 -8.37039471]
[-344.92831421 -13.32176018]
[-348.65881348 -33.64796066]
[-359.29217529 -44.22774506]
[-374.53222656 -48.47636795]
[-378.09719849 -62.93804932]
[-388.73056030 -73.51782990]
[-399.36392212 -84.09761047]
[-415.34503174 -87.77671814]
[-419.89004517 -103.53346252]
[-408.32342529 -115.15866089]
[-392.54391479 -110.69329834]
[-388.78414917 -94.73096466]
[-378.15078735 -84.15118408]
[-367.51742554 -73.57140350]
[-353.03793335 -70.07951355]
[-348.71237183 -54.86109924]
[-338.07904053 -44.28131485]
[-329.41302490 -45.74035645]
[-320.90792847 -43.03493881]
[-314.48303223 -36.64422989]
[-311.64770508 -27.89303398]
[-313.14807129 -18.67829704]
[-302.84017944 -7.78118134]
[-292.53228760 3.11593485]
[-282.22436523 14.01305103]
[-269.69131470 7.85089350]
[-255.88256836 5.60114527]
[-241.99252319 7.47303057]
[-229.22686768 13.31863785]
[-218.69793701 22.64449310]
[-211.32777405 34.65319824]
[-207.76741028 48.31158447]
[-192.79055786 49.14453506]
[-177.81370544 49.97748947]
[-176.86250305 37.52031326]
[-171.97001648 26.19208908]
[-163.76072693 17.18656731]
[-153.20243835 11.41695786]
[-141.49284363 9.42378426]
[-129.92393494 11.32552242]
[-119.73949432 16.81637383]
[-112.00134277 25.21024704]
[-107.47888947 35.52502060]
[-92.51120758 34.54082489]
[-77.54353333 33.55662537]
[-62.57585526 32.57242966]
[-47.60817719 31.58823204]
[-32.64050293 30.60403633]
[-46.24772263 24.29186249]
[-61.10112000 22.19984055]
[-74.14632416 14.79560280]
[-83.55762482 3.11538863]
[-88.01789856 -11.20613289]
[-86.90291595 -26.16463661]
[-80.36872101 -39.66664886]
[-69.32979584 -49.82253647]
[-55.33104706 -55.21096039]
[-40.33163834 -55.07780457]
[-26.43076324 -49.44170380]
[-15.57387638 -39.09143448]
[-9.28042126 -25.47554588]
[-8.43118095 -10.49960613]
[-13.14551067 3.74137998]
[-13.52470589 18.73658562]
[-6.00284624 5.75885057]
[1.51901352 -7.21888494]
[9.04087353 -20.19662094]
[9.26689529 -36.01621246]
[22.34325409 -43.14769745]
[29.86511421 -56.12543488]
[23.45474815 -70.25649261]
[26.60765266 -85.44987488]
[38.11147308 -95.86341095]
[53.54275131 -97.49288940]
[66.96784973 -89.71173859]
[73.22454834 -75.51197052]
[69.90701294 -60.35368347]
[58.29090118 -50.06555557]
[42.84284973 -48.60357285]
[35.32099152 -35.62583923]
[35.63298416 -20.73450089]
[22.01861000 -12.67476082]
[14.49674892 0.30297491]
[6.97488928 13.28071022]
[-0.54697067 26.25844574]
[1.87129700 33.35787964]
[14.69420815 25.57501793]
[24.52000046 14.24127197]
[39.51785278 13.98746204]
[49.72151184 24.98224831]
[48.35052872 39.91946411]
[36.31593323 48.87314987]
[21.61537170 45.89384079]
[6.70783234 47.55675125]
[9.12610054 54.65618896]
[23.00593758 60.34390259]
[36.88577652 66.03161621]
[50.76561356 71.71932983]
[64.64545441 77.40704346]
[78.52529144 83.09475708]
[81.37223053 73.96631622]
[87.82424164 65.38610077]
[97.70853424 58.68930435]
[110.38373566 55.13036346]
[124.77939606 55.72587204]
[139.48609924 61.11550903]
[153.91104126 57.00199509]
[168.33598328 52.88847733]
[173.53773499 38.26926041]
[186.35798645 29.52737045]
[201.86711121 30.02424049]
[214.10151672 39.56881714]
[218.35682678 54.49101257]
[212.99679565 69.05294037]
[200.08247375 77.65523529]
[184.57965088 76.99015045]
[172.44950867 67.31341553]
[158.02456665 71.42693329]
[143.59962463 75.54045105]
[143.90258789 83.03433228]
[158.89033508 82.42839813]
[173.87811279 81.82272339]
[174.48353577 96.81049347]
[159.49627686 97.41616058]
[144.50851440 98.02208710]
[144.81147766 105.51596832]
[159.52140808 108.45160675]
[163.47549438 106.96283722]
[167.31759644 106.79535675]
[170.65409851 107.75754547]
[173.19128418 109.55162811]
[174.76084900 111.81441498]
[189.34017944 115.34187317]
[203.91950989 118.86933136]
[218.49885559 122.39678955]
[233.07818604 125.92424774]
[249.89500427 123.77227020]
[256.61825562 139.33615112]
[243.52378845 150.10514832]
[229.55073547 140.50358582]
[214.97138977 136.97612000]
[200.39205933 133.44866943]
[185.81272888 129.92120361]
[171.23338318 126.39374542]
[156.58576965 123.16153717]
[141.87583923 120.22589874]
[137.76037598 126.49590302]
[150.30039978 134.72682190]
[162.84042358 142.95771790]
[175.38044739 151.18862915]
[187.92047119 159.41954041]
[200.46035767 167.65065002]
[192.22906494 180.19041443]
[179.68955994 171.95956421]
[167.14953613 163.72865295]
[154.60951233 155.49774170]
[142.06948853 147.26683044]
[129.52947998 139.03593445]
[125.41401672 145.30593872]
[133.95895386 157.63412476]
[142.50389099 169.96229553]
[156.23893738 169.23875427]
[168.44711304 175.33583069]
[175.99920654 186.57154846]
[177.01847839 199.96269226]
[171.34594727 212.01643372]
[179.76591492 224.43029785]
[188.18588257 236.84417725]
[196.60585022 249.25804138]
[210.75564575 256.33575439]
[211.49653625 271.21191406]
[219.91650391 283.62579346]
[234.90237427 290.28579712]
[236.35826111 306.62017822]
[222.78646851 315.82556152]
[208.14849854 308.43218994]
[207.50263977 292.04574585]
[199.08267212 279.63189697]
[185.53512573 273.44210815]
[184.19198608 257.67800903]
[175.77201843 245.26414490]
[167.35205078 232.85026550]
[158.93208313 220.43640137]
[142.49246216 220.42033386]
[129.17970276 210.49383545]
[124.37758636 194.42326355]
[130.17570496 178.50723267]
[121.63077545 166.17906189]
[113.08583832 153.85087585]
[72.66658020 131.05975342]
[72.83757782 96.97459412]
[58.95773697 91.28688049]
[45.07789993 85.59916687]
[31.19806290 79.91145325]
[17.31822395 74.22373962]
[3.43838596 68.53602600]
[-23.04327011 72.15509033]
[-31.65630531 45.57171249]
[-46.62398148 46.55590820]
[-61.59165955 47.54010773]
[-76.55933380 48.52430344]
[-91.52701569 49.50849915]
[-106.49468994 50.49269867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[20 141]
[21 140]
[22 139]
[29 101]
[30 100]
[31 99]
[32 98]
[33 97]
[35 92]
[36 91]
[37 90]
[38 89]
[39 88]
[40 87]
[41 86]
[44 84]
[45 83]
[47 82]
[48 81]
[51 76]
[52 75]
[53 74]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[104 132]
[105 131]
[106 130]
[107 129]
[109 124]
[110 123]
[112 121]
[113 120]
[114 119]
[150 310]
[151 309]
[152 308]
[153 307]
[154 306]
[155 305]
[171 192]
[172 191]
[173 190]
[174 189]
[176 187]
[177 186]
[202 303]
[203 302]
[204 301]
[205 300]
[206 299]
[207 298]
[213 226]
[214 225]
[215 224]
[233 253]
[234 252]
[239 251]
[240 250]
[241 249]
[242 248]
[243 247]
[266 296]
[267 295]
[268 294]
[273 290]
[274 289]
[275 288]
[276 287]
[278 285]
[279 284]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
