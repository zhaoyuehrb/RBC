%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUCAGAGAGAGAGAGACUAAGACGGAUAACGCGUCAUCUCGCCUUCCCAAAUUUUCCCCCCUCGCUAGACCGGGUCCAAAACCUCCAUCCGGAGCCGGCAGGAGAGGAGAACGAUGUUUAACUCGGUCAACCUGGGCAACUUCUGCUCUCCGUCGCGCAAGGAGAGGGGCGCAGAUUUCGGCGAGCGAGGGAGCUGCGCCUCCAACCUCUAUC\
) } def
/len { sequence length } bind def

/coor [
[97.12194061 197.71383667]
[82.91120911 202.51541138]
[68.89483643 197.17300415]
[61.48565292 184.13256836]
[57.62084961 198.62612915]
[53.75604630 213.11968994]
[60.51761627 227.66825867]
[53.23019791 241.96066284]
[37.48408127 245.03302002]
[25.35833549 234.52845764]
[26.15479469 218.50518799]
[39.26248550 209.25488281]
[43.12728882 194.76132202]
[46.99209213 180.26776123]
[50.11784744 165.59706116]
[52.49653244 150.78686523]
[54.87521744 135.97666931]
[57.25390244 121.16647339]
[50.77688217 117.38517761]
[47.58741379 132.04216003]
[32.66218948 133.53804016]
[26.62740517 119.80554199]
[37.82284546 109.82257080]
[31.34582710 106.04127502]
[19.61835480 115.39362335]
[7.89088345 124.74596405]
[-3.83658910 134.09831238]
[-4.04554367 149.73449707]
[-14.29545784 161.54438782]
[-29.74663544 163.95169067]
[-43.10350037 155.81977844]
[-48.05935287 140.98826599]
[-42.27418900 126.46015930]
[-28.47958755 119.09517670]
[-13.18893623 122.37084198]
[-1.46146381 113.01849365]
[10.26600838 103.66614532]
[21.99348068 94.31379700]
[51.67027664 74.52236938]
[80.63587952 75.72221375]
[98.07180023 92.77801514]
[101.51538849 78.17863464]
[104.95896912 63.57926178]
[108.40255737 48.97988892]
[111.84613800 34.38051224]
[110.31369019 27.95655632]
[111.99939728 22.53519249]
[115.60652924 19.41130257]
[119.47132874 4.91774225]
[123.23111725 -9.60341454]
[126.88569641 -24.15140724]
[130.43487549 -38.72547150]
[133.87844849 -53.32484436]
[137.32203674 -67.92421722]
[140.76562500 -82.52359772]
[144.20919800 -97.12297058]
[147.65278625 -111.72234344]
[137.70162964 -123.48162842]
[136.59574890 -138.66815186]
[144.55020142 -151.44276428]
[158.33657837 -157.01718140]
[161.78015137 -171.61656189]
[165.22373962 -186.21592712]
[168.66732788 -200.81530762]
[172.11090088 -215.41467285]
[175.55448914 -230.01405334]
[171.19197083 -245.22190857]
[181.64445496 -255.83299255]
[185.08804321 -270.43237305]
[176.48278809 -278.11138916]
[171.72993469 -288.50561523]
[171.55407715 -299.82958984]
[175.90133667 -310.17462158]
[166.13075256 -321.55599976]
[156.36016846 -332.93737793]
[146.58956909 -344.31875610]
[136.81898499 -355.70010376]
[127.04840088 -367.08148193]
[112.14676666 -363.58865356]
[97.33173370 -367.43225098]
[86.00767517 -377.72906494]
[80.77677917 -392.11294556]
[82.84107971 -407.27859497]
[91.72619629 -419.74108887]
[105.39041138 -426.63656616]
[120.69377899 -426.38055420]
[134.11970520 -419.03186035]
[142.58299255 -406.27917480]
[144.13885498 -391.05294800]
[138.42977905 -376.85208130]
[148.20036316 -365.47070312]
[157.97094727 -354.08932495]
[167.74153137 -342.70794678]
[177.51211548 -331.32659912]
[187.28271484 -319.94522095]
[197.06149292 -322.38064575]
[207.05621338 -321.09158325]
[215.44610596 -333.52578735]
[223.74577332 -346.02041626]
[231.95478821 -358.57476807]
[240.16378784 -371.12915039]
[248.37280273 -383.68353271]
[250.44856262 -392.57424927]
[256.79263306 -396.35903931]
[265.18252563 -408.79324341]
[273.57241821 -421.22744751]
[281.96231079 -433.66168213]
[290.35220337 -446.09588623]
[298.74209595 -458.53009033]
[300.04705811 -474.29739380]
[313.57958984 -480.51995850]
[321.96948242 -492.95416260]
[330.35937500 -505.38839722]
[338.74926758 -517.82263184]
[338.89889526 -522.15197754]
[340.27743530 -525.83929443]
[342.53286743 -528.57745361]
[345.24978638 -530.20507812]
[348.00204468 -530.71429443]
[357.09753418 -542.64208984]
[366.19302368 -554.56988525]
[364.12081909 -565.24188232]
[368.17813110 -575.09069824]
[376.80334473 -580.95910645]
[387.01498413 -581.11041260]
[396.45199585 -592.76989746]
[405.88897705 -604.42932129]
[415.32595825 -616.08880615]
[424.76296997 -627.74829102]
[424.51889038 -643.78948975]
[436.99923706 -653.87011719]
[452.63018799 -650.25726318]
[459.42102051 -635.72229004]
[452.16235352 -621.41528320]
[436.42242432 -618.31127930]
[426.98544312 -606.65179443]
[417.54843140 -594.99237061]
[408.11145020 -583.33288574]
[398.67446899 -571.67340088]
[397.05438232 -552.40264893]
[378.12081909 -545.47436523]
[369.02532959 -533.54663086]
[359.92984009 -521.61883545]
[351.18347168 -509.43270874]
[342.79357910 -496.99850464]
[334.40368652 -484.56427002]
[326.01379395 -472.13006592]
[325.30892944 -457.25213623]
[311.17630005 -450.14019775]
[302.78640747 -437.70599365]
[294.39651489 -425.27178955]
[286.00662231 -412.83755493]
[277.61672974 -400.40335083]
[269.22683716 -387.96914673]
[260.92715454 -375.47451782]
[252.71815491 -362.92013550]
[244.50915527 -350.36578369]
[236.30015564 -337.81140137]
[235.27093506 -330.49618530]
[227.88032532 -325.13589478]
[219.49043274 -312.70169067]
[226.16757202 -293.94314575]
[218.27865601 -275.39379883]
[199.68740845 -266.98876953]
[196.24383545 -252.38940430]
[200.85264587 -238.22579956]
[190.15386963 -226.57046509]
[186.71028137 -211.97109985]
[183.26669312 -197.37171936]
[179.82312012 -182.77235413]
[176.37953186 -168.17297363]
[172.93594360 -153.57359314]
[182.77803040 -142.42588806]
[184.18528748 -127.44310760]
[176.40939331 -114.35154724]
[162.25216675 -108.27876282]
[158.80857849 -93.67938232]
[155.36499023 -79.08000946]
[151.92141724 -64.48063660]
[148.47782898 -49.88126373]
[145.03424072 -35.28188705]
[146.55741882 -28.05335808]
[141.43368530 -20.49682999]
[137.77911377 -5.94883823]
[139.19747925 1.30098522]
[133.96488953 8.78254509]
[130.10008240 23.27610588]
[126.44551086 37.82409668]
[123.00193024 52.42347336]
[119.55834198 67.02285004]
[116.11476135 81.62222290]
[112.67118073 96.22159576]
[114.72770691 111.07994843]
[122.00724030 124.19514465]
[129.28677368 137.31034851]
[136.56629944 150.42555237]
[151.82783508 154.53173828]
[159.64335632 168.26829529]
[155.37605286 183.48558044]
[141.55761719 191.15542603]
[126.38630676 186.72746277]
[118.86298370 172.82872009]
[123.45109558 157.70507812]
[116.17156982 144.58987427]
[108.89203644 131.47467041]
[101.61251068 118.35948181]
[94.22540283 119.65589905]
[89.08379364 133.74716187]
[79.45119476 122.24874115]
[72.06409454 123.54515839]
[69.68540955 138.35536194]
[67.30672455 153.16554260]
[64.92803955 167.97573853]
[77.01100159 159.08743286]
[91.98768616 159.92355347]
[103.00621033 170.10157776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[15 213]
[16 212]
[17 211]
[18 210]
[24 38]
[25 37]
[26 36]
[27 35]
[41 192]
[42 191]
[43 190]
[44 189]
[45 188]
[48 187]
[49 186]
[50 184]
[51 183]
[52 181]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[68 165]
[69 164]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[97 161]
[98 160]
[99 158]
[100 157]
[101 156]
[102 155]
[104 154]
[105 153]
[106 152]
[107 151]
[108 150]
[109 149]
[111 147]
[112 146]
[113 145]
[114 144]
[119 143]
[120 142]
[121 141]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[193 206]
[194 205]
[195 204]
[196 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
