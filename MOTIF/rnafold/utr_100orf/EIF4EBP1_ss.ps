%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGAGGCGGAGCGAGGCUGGAGGCGCGGGAGGGCAGCGAGAGGUUCGCGGGUGCAGCGCACAGGAGACCAUGUCCGGGGGCAGCAGCUGCAGCCAGACCCCAAGCCGGGCCAUCCCCGCCACUCGCCGGGUGGUGCUCGGCGACGGCGUGCAGCUCCCGCCCGGGGACU\
) } def
/len { sequence length } bind def

/coor [
[104.58671570 375.08474731]
[116.64550018 365.46243286]
[115.01438141 350.55136108]
[113.38325500 335.64031982]
[111.75213623 320.72927856]
[110.12100983 305.81820679]
[107.98304749 303.95303345]
[106.46884155 301.11358643]
[105.95891571 297.53820801]
[106.73860168 293.60043335]
[108.95334625 289.77130127]
[108.40867615 274.78121948]
[107.86401367 259.79110718]
[107.31935120 244.80099487]
[106.77468109 229.81088257]
[91.69277954 220.67779541]
[85.02870941 204.18473816]
[89.61263275 186.83477783]
[103.79918671 175.59078979]
[102.71057892 160.63035583]
[101.62196350 145.66990662]
[100.53335571 130.70945740]
[80.11450195 120.22936249]
[73.98103333 99.99420929]
[83.41339111 83.11154175]
[76.83510590 69.63095856]
[70.25682068 56.15037155]
[63.67853165 42.66978836]
[57.07889175 36.30171967]
[57.10568237 28.88416100]
[50.77326965 15.28634739]
[44.44085312 1.68853474]
[38.10843658 -11.90927792]
[25.26851845 -21.15303612]
[26.90958405 -35.95695877]
[20.57716751 -49.55477142]
[14.24475288 -63.15258408]
[-2.76710224 -73.92364502]
[-0.32758656 -93.08439636]
[-7.14957619 -106.44330597]
[-22.41904449 -107.33245850]
[-35.10951233 -115.69001770]
[-41.86787796 -129.18782043]
[-40.96863174 -144.15603638]
[-32.75323486 -156.58071899]
[-39.57522583 -169.93963623]
[-46.39721680 -183.29853821]
[-53.21920395 -196.65745544]
[-63.78590012 -199.42048645]
[-70.92566681 -207.39263916]
[-72.44725037 -217.76351929]
[-68.08513641 -227.05215454]
[-74.41755676 -240.64996338]
[-87.25747681 -249.89372253]
[-85.61640930 -264.69763184]
[-91.94882202 -278.29544067]
[-98.28124237 -291.89328003]
[-104.61365509 -305.49108887]
[-110.94606781 -319.08889771]
[-117.27848816 -332.68670654]
[-124.10047913 -346.04562378]
[-131.40304565 -359.14801025]
[-148.20585632 -360.93264771]
[-160.52084351 -372.25866699]
[-163.64001465 -388.52774048]
[-156.53111267 -403.30624390]
[-164.07040405 -416.27386475]
[-171.60968018 -429.24148560]
[-187.04768372 -431.73184204]
[-197.23394775 -443.59667969]
[-197.35882568 -459.23376465]
[-187.36334229 -471.25973511]
[-171.96707153 -473.99633789]
[-158.43966675 -466.15139771]
[-153.16833496 -451.42904663]
[-158.64205933 -436.78076172]
[-151.10278320 -423.81314087]
[-143.56349182 -410.84552002]
[-130.19357300 -410.72418213]
[-118.54061127 -403.95019531]
[-111.71004486 -392.20477295]
[-111.58325958 -378.50979614]
[-118.30065918 -366.45056152]
[-110.99809265 -353.34817505]
[-108.30299377 -352.46148682]
[-105.80358124 -350.43460083]
[-103.94309998 -347.33911133]
[-103.12973022 -343.40814209]
[-103.68067169 -339.01913452]
[-97.34825897 -325.42129517]
[-91.01583862 -311.82348633]
[-84.68342590 -298.22567749]
[-78.35101318 -284.62786865]
[-72.01859283 -271.03005981]
[-59.63161469 -262.75891113]
[-60.81974030 -246.98237610]
[-54.48732758 -233.38456726]
[-37.88255310 -223.51708984]
[-39.86029434 -203.47944641]
[-33.03830719 -190.12052917]
[-26.21631622 -176.76162720]
[-19.39432716 -163.40270996]
[-4.51248646 -162.77308655]
[8.14024925 -154.72546387]
[15.11206436 -141.33665466]
[14.44176674 -126.15615845]
[6.20933294 -113.26529694]
[13.03132248 -99.90638733]
[23.03736115 -97.62916565]
[30.27601242 -90.04810333]
[32.16672897 -79.51451111]
[27.84256554 -69.48500061]
[34.17498016 -55.88718796]
[40.50739670 -42.28937531]
[52.89437866 -34.01822281]
[51.70624924 -18.24169350]
[58.03866577 -4.64388084]
[64.37107849 8.95393181]
[70.70349884 22.55174446]
[77.15911102 36.09149933]
[83.73740387 49.57208633]
[90.31568909 63.05266953]
[96.89397430 76.53324890]
[112.31654358 77.08080292]
[125.50565338 87.58541870]
[130.26234436 105.24839020]
[144.87756348 108.62413025]
[159.49276733 111.99987030]
[174.10798645 115.37561035]
[188.72319031 118.75135040]
[203.33840942 122.12709045]
[217.95361328 125.50283051]
[232.56881714 128.87857056]
[247.18403625 132.25431824]
[263.97756958 129.92767334]
[270.86221313 145.42082214]
[257.88037109 156.32534790]
[243.80828857 146.86952209]
[229.19308472 143.49378967]
[214.57786560 140.11804199]
[199.96266174 136.74230957]
[185.34745789 133.36656189]
[170.73223877 129.99082947]
[156.11703491 126.61508179]
[141.50181580 123.23934174]
[126.88661194 119.86360168]
[115.49379730 129.62084961]
[116.58241272 144.58129883]
[117.67102051 159.54173279]
[118.75963593 174.50218201]
[130.19155884 179.65972900]
[138.28797913 189.14279175]
[141.55134583 201.10241699]
[139.41860962 213.24102783]
[132.35729980 223.25379944]
[121.76479340 229.26622009]
[122.30945587 244.25631714]
[122.85411835 259.24642944]
[123.39878845 274.23654175]
[123.94345093 289.22665405]
[125.03206635 304.18710327]
[126.66318512 319.09814453]
[128.29431152 334.00918579]
[129.92543030 348.92025757]
[131.55654907 363.83129883]
[145.41044617 370.61901855]
[153.37579346 383.83102417]
[152.91088867 399.25137329]
[144.16407776 411.95950317]
[129.92643738 417.90032959]
[114.74114227 415.17810059]
[103.45377350 404.66149902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[4 163]
[5 162]
[6 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[19 150]
[20 149]
[21 148]
[22 147]
[25 123]
[26 122]
[27 121]
[28 120]
[30 119]
[31 118]
[32 117]
[33 116]
[35 114]
[36 113]
[37 112]
[39 108]
[40 107]
[45 102]
[46 101]
[47 100]
[48 99]
[52 97]
[53 96]
[55 94]
[56 93]
[57 92]
[58 91]
[59 90]
[60 89]
[61 84]
[62 83]
[66 78]
[67 77]
[68 76]
[126 146]
[127 145]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[134 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
