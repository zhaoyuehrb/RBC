%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAGAAAAAAAAUAUUUUAAAAGGGUAACCGUUAAACAGCUAGGACCUGCAACUUCAGUGCUUCUGGGAUAACUGGAACAUCAGAAGGACAGAUUUUAUUACAGCAUAAUCACACCUCAUUUCUUUCAUCAGCAGUUGUCACCAGACGCUGUUACUUCCUAAAAUGGCGGACAAUCUUCCCACAGAGUUUGAUGUGGUUAUAAUAGGGACAGGUUUGCCCGAAUCCAUCCUUGCAGCUGCAUGUUCAAGAAGUG\
GUCAGAGGG\
) } def
/len { sequence length } bind def

/coor [
[132.56753540 291.93283081]
[133.42489624 306.90832520]
[134.28225708 321.88378906]
[135.13960266 336.85928345]
[135.99696350 351.83474731]
[140.53196716 366.13278198]
[133.86445618 379.56945801]
[119.73529816 384.60604858]
[106.07177734 378.41668701]
[100.53990173 364.47399902]
[106.24447632 350.59954834]
[108.34019470 335.74667358]
[110.43592072 320.89376831]
[112.53164673 306.04089355]
[114.62737274 291.18801880]
[116.72309875 276.33514404]
[109.22955322 276.02404785]
[100.26953125 288.05392456]
[91.30951691 300.08380127]
[82.34949493 312.11367798]
[73.38947296 324.14358521]
[74.48297882 336.97354126]
[66.79983521 346.80322266]
[54.87602997 348.71298218]
[45.77402878 360.63577271]
[44.21144485 376.96032715]
[29.18237877 383.52227783]
[16.14744186 373.57125854]
[18.51586342 357.34405518]
[33.85121155 351.53378296]
[42.95321274 339.61096191]
[44.27636337 322.09783936]
[61.35959244 315.18356323]
[70.31961060 303.15365601]
[79.27963257 291.12377930]
[88.23965454 279.09390259]
[97.19967651 267.06402588]
[93.04319000 257.69714355]
[91.73646545 247.96112061]
[93.15406036 238.66918945]
[96.95197296 230.53617859]
[102.61207581 224.12348938]
[109.49916077 219.80082703]
[116.92507935 217.72714233]
[116.21404266 202.74401855]
[115.50300598 187.76087952]
[114.79196930 172.77774048]
[114.08093262 157.79460144]
[113.36989594 142.81146240]
[112.65885162 127.82832336]
[101.61412811 129.85459900]
[90.83795929 127.75081635]
[81.78749847 121.98665619]
[75.61857605 113.51371765]
[73.03898621 103.61286926]
[74.23043060 93.70221710]
[78.84732819 85.13429260]
[69.60462189 73.32022095]
[60.36191559 61.50614166]
[51.11920929 49.69206619]
[41.87650681 37.87799072]
[35.94617844 35.07800674]
[32.77310181 30.41349030]
[32.55869675 25.67248917]
[23.59867859 13.64260769]
[14.63865757 1.61272621]
[5.67863798 -10.41715527]
[-3.28138232 -22.44703674]
[-12.31255245 -34.42359543]
[-21.41455460 -46.34641266]
[-30.51655579 -58.26922989]
[-39.61855698 -70.19204712]
[-48.72056198 -82.11486053]
[-57.82256317 -94.03768158]
[-66.92456818 -105.96049500]
[-76.02656555 -117.88330841]
[-91.22366333 -113.04818726]
[-107.13059998 -113.71401978]
[-121.82080078 -119.78173065]
[-133.52137756 -130.49911499]
[-140.82707214 -144.55403137]
[-142.86906433 -160.23503113]
[-139.41818237 -175.63977051]
[-130.91053772 -188.90576172]
[-140.15324402 -200.71984863]
[-149.39595032 -212.53392029]
[-158.91613770 -224.12554932]
[-168.70846558 -235.48822021]
[-178.50079346 -246.85089111]
[-193.86286926 -245.70503235]
[-206.80278015 -253.73075867]
[-212.46861267 -267.67214966]
[-208.88169861 -282.10379028]
[-218.67402649 -293.46646118]
[-228.46635437 -304.82913208]
[-238.25869751 -316.19180298]
[-252.98548889 -312.18127441]
[-267.99240112 -314.96606445]
[-280.29980469 -323.99328613]
[-287.46408081 -337.47052002]
[-288.06268311 -352.72189331]
[-281.97683716 -366.71923828]
[-270.41485596 -376.68334961]
[-255.67239380 -380.63583374]
[-240.67654419 -377.79196167]
[-228.40478516 -368.71633911]
[-221.29367065 -355.21099854]
[-220.75509644 -339.95736694]
[-226.89602661 -325.98413086]
[-217.10369873 -314.62145996]
[-207.31135559 -303.25878906]
[-197.51902771 -291.89611816]
[-182.71597290 -293.31292725]
[-169.76391602 -285.65078735]
[-163.73667908 -271.66775513]
[-167.13813782 -256.64321899]
[-157.34579468 -245.28054810]
[-147.55346680 -233.91787720]
[-144.80451965 -233.56187439]
[-142.02830505 -232.11364746]
[-139.63496399 -229.55654907]
[-138.03352356 -226.02032471]
[-137.58186340 -221.77662659]
[-128.33915710 -209.96255493]
[-119.09645844 -198.14846802]
[-105.79100800 -202.93464661]
[-91.63658142 -203.38316345]
[-78.01364136 -199.43701172]
[-66.25492096 -191.46850586]
[-57.51498795 -180.24407959]
[-52.65694427 -166.85066223]
[-52.16716003 -152.59039307]
[-56.10663605 -138.85403442]
[-64.10375214 -126.98531342]
[-55.00174713 -115.06250000]
[-45.89974594 -103.13967896]
[-36.79774475 -91.21686554]
[-27.69574165 -79.29404449]
[-18.59374046 -67.37123108]
[-9.49173737 -55.44841385]
[-0.38973546 -43.52559662]
[6.14518595 -40.12728500]
[8.74849892 -31.40705681]
[17.70851898 -19.37717438]
[26.66853905 -7.34729385]
[35.62855911 4.68258715]
[44.58858109 16.71246910]
[53.69058228 28.63528442]
[62.93328476 40.44935989]
[72.17599487 52.26343918]
[81.41869354 64.07751465]
[90.66139984 75.89159393]
[100.59199524 73.20896149]
[111.15318298 74.59954071]
[120.68495178 80.12647247]
[127.58326721 89.18260193]
[130.56733704 100.54764557]
[144.59742737 95.24136353]
[158.62751770 89.93508148]
[172.65760803 84.62879944]
[186.68769836 79.32251740]
[200.71777344 74.01624298]
[207.27705383 59.88777161]
[221.58114624 54.70631027]
[235.01007080 61.04664993]
[249.04016113 55.74036789]
[263.07025146 50.43408585]
[277.10034180 45.12780380]
[291.13043213 39.82152557]
[304.59497070 33.21046066]
[317.37292480 25.35404015]
[330.15090942 17.49761772]
[333.57330322 2.06833696]
[346.94815063 -6.35121870]
[362.34039307 -2.76587677]
[370.61807251 10.69724274]
[366.87020874 26.05071068]
[353.32031250 34.18558502]
[338.00732422 30.27559090]
[325.22937012 38.13201523]
[312.45138550 45.98843765]
[318.08880615 59.88878250]
[332.72949219 56.62530899]
[347.37017822 53.36183929]
[362.01086426 50.09836960]
[368.05807495 35.80813599]
[381.36730957 27.83042336]
[396.82089233 29.23282051]
[408.47659302 39.47607803]
[411.85256958 54.62145615]
[405.65066528 68.84524536]
[392.25567627 76.67810822]
[376.81823730 75.10815430]
[365.27432251 64.73905945]
[350.63363647 68.00252533]
[335.99295044 71.26599884]
[321.35226440 74.52947235]
[296.43670654 53.85161209]
[282.40661621 59.15789413]
[268.37652588 64.46417236]
[254.34643555 69.77045441]
[240.31634521 75.07673645]
[234.44419861 88.71688080]
[220.29127502 94.29806519]
[206.02406311 88.04632568]
[191.99397278 93.35260773]
[177.96388245 98.65888977]
[163.93379211 103.96517181]
[149.90370178 109.27145386]
[135.87362671 114.57773590]
[127.64199066 127.11728668]
[128.35302734 142.10041809]
[129.06407166 157.08355713]
[129.77510071 172.06669617]
[130.48614502 187.04983521]
[131.19717407 202.03297424]
[131.90821838 217.01611328]
[156.41056824 234.23596191]
[151.93492126 269.33645630]
[159.86694336 282.06762695]
[167.79896545 294.79879761]
[184.33349609 294.07788086]
[198.88742065 301.75836182]
[207.52407837 315.65548706]
[207.96165466 331.91778564]
[200.17530823 346.09442139]
[208.25770569 358.73065186]
[216.34008789 371.36691284]
[224.42248535 384.00317383]
[240.97111511 392.11407471]
[241.04624939 409.67697144]
[249.27787781 422.21652222]
[257.50952148 434.75607300]
[265.74111938 447.29562378]
[273.04150391 452.72924805]
[273.99499512 460.03295898]
[282.07739258 472.66921997]
[290.15979004 485.30548096]
[305.45709229 490.13995361]
[311.08032227 505.16522217]
[302.71585083 518.85516357]
[286.78018188 520.70806885]
[275.49774170 509.30252075]
[277.52352905 493.38787842]
[269.44113159 480.75161743]
[261.35873413 468.11535645]
[253.20158386 455.52725220]
[244.96995544 442.98770142]
[236.73832703 430.44815063]
[228.50669861 417.90859985]
[216.74877930 415.15625000]
[209.78366089 404.80538940]
[211.78623962 392.08557129]
[203.70384216 379.44931030]
[195.62144470 366.81304932]
[187.53904724 354.17681885]
[173.98455811 355.69647217]
[161.03314209 351.21292114]
[151.22514343 341.54544067]
[146.51019287 328.53576660]
[147.85978699 314.69760132]
[155.06777954 302.73083496]
[147.13575745 289.99966431]
[139.20373535 277.26846313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[24 31]
[25 30]
[44 217]
[45 216]
[46 215]
[47 214]
[48 213]
[49 212]
[50 211]
[57 152]
[58 151]
[59 150]
[60 149]
[61 148]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[84 125]
[85 124]
[86 123]
[87 118]
[88 117]
[89 116]
[93 112]
[94 111]
[95 110]
[96 109]
[157 210]
[158 209]
[159 208]
[160 207]
[161 206]
[162 205]
[165 202]
[166 201]
[167 200]
[168 199]
[169 198]
[170 181]
[171 180]
[172 179]
[182 197]
[183 196]
[184 195]
[185 194]
[219 264]
[220 263]
[221 262]
[226 256]
[227 255]
[228 254]
[229 253]
[231 250]
[232 249]
[233 248]
[234 247]
[236 246]
[237 245]
[238 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
