%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUACUGAAAUUAAGCAGCAUCCAACACAGGCCUACUCUUACGACAUGUGACUUUACUGUUUUCCGUUUUUGUUGAAAGAGUCAUUAACAGUUAGGAGUUGAUGGCAGUUUCAAUAACAGGUCAUUGCCGAGAAAAGGAUAGCACUAUAAUAUGCAGAAAUCUACAAAUUCUGAUACUUCCGUGGAAACACUGAAUUCUACCCGCCAAGGCACAGGAGCUGUGCAAAUGAGAAUCAAAAAUGCCAACAGCC\
) } def
/len { sequence length } bind def

/coor [
[105.04264069 430.81701660]
[111.47326660 417.18823242]
[120.87404633 405.41021729]
[132.73800659 396.11810303]
[146.42532349 389.81301880]
[143.45312500 375.11044312]
[129.40994263 373.42929077]
[116.55136871 367.48779297]
[106.13799286 357.85382080]
[99.19513702 345.45794678]
[96.41197968 331.50360107]
[98.07313538 317.35012817]
[104.02960968 304.38046265]
[113.71206665 293.86596680]
[126.18521118 286.84188843]
[123.39653015 272.10339355]
[120.60785675 257.36489868]
[117.81918335 242.62638855]
[115.03050995 227.88789368]
[110.71044922 221.91589355]
[112.30014038 212.94834900]
[109.69541931 198.17623901]
[107.09069824 183.40411377]
[87.48107910 182.76351929]
[68.55925751 177.57579041]
[51.36484146 168.12596130]
[36.84249878 154.93318176]
[25.79011536 138.72230530]
[18.81491852 120.38398743]
[16.30013466 100.92573547]
[18.38393021 81.41662598]
[24.95182037 62.92851257]
[12.15245724 55.10698318]
[-0.64690608 47.28545761]
[-15.82750320 50.77647400]
[-28.69645691 42.66200256]
[-31.93105888 28.16810799]
[-44.73042297 20.34658051]
[-57.52978516 12.52505207]
[-64.07615662 11.98221397]
[-68.68807983 8.71866512]
[-70.54730988 4.34559679]
[-83.14770508 -3.79259706]
[-98.93804932 -4.78029633]
[-105.43144226 -18.18496323]
[-118.03182983 -26.32315636]
[-126.91270447 -28.34159660]
[-130.73770142 -34.64216614]
[-143.23565674 -42.93680954]
[-155.73361206 -51.23144913]
[-168.23156738 -59.52609253]
[-180.72952271 -67.82073212]
[-185.01045227 -67.93980408]
[-188.67170715 -69.26775360]
[-191.41201782 -71.46571350]
[-193.06941223 -74.13220215]
[-193.62947083 -76.85337067]
[-205.69842529 -85.76067352]
[-217.76739502 -94.66797638]
[-229.83636475 -103.57527924]
[-225.09747314 -89.34352112]
[-228.02801514 -74.63257599]
[-237.85890198 -63.30324173]
[-252.01005554 -58.32883072]
[-266.76760864 -61.01484680]
[-278.25851440 -70.65636444]
[-283.46710205 -84.72302246]
[-281.02633667 -99.52311707]
[-271.57684326 -111.17244720]
[-257.59857178 -116.61373138]
[-242.75860596 -114.41832733]
[-253.62634277 -124.75720215]
[-264.49407959 -135.09606934]
[-275.36181641 -145.43495178]
[-286.22955322 -155.77381897]
[-297.09729004 -166.11270142]
[-307.96502686 -176.45156860]
[-318.83273315 -186.79045105]
[-334.40802002 -186.57077026]
[-345.28216553 -197.21067810]
[-345.39562988 -212.06068420]
[-356.26336670 -222.39956665]
[-367.13110352 -232.73843384]
[-377.99884033 -243.07731628]
[-388.86654663 -253.41618347]
[-399.73428345 -263.75506592]
[-410.60202026 -274.09393311]
[-421.46975708 -284.43280029]
[-432.33749390 -294.77169800]
[-447.57330322 -291.83062744]
[-461.61373901 -298.43710327]
[-469.05999756 -312.05081177]
[-467.04879761 -327.43698120]
[-456.35354614 -338.67935181]
[-441.08673096 -341.45498657]
[-427.11877441 -334.69656372]
[-419.82064819 -321.00289917]
[-421.99862671 -305.63943481]
[-411.13088989 -295.30053711]
[-400.26315308 -284.96166992]
[-389.39541626 -274.62280273]
[-378.52767944 -264.28393555]
[-367.65994263 -253.94505310]
[-356.79220581 -243.60617065]
[-345.92446899 -233.26730347]
[-335.05673218 -222.92842102]
[-320.21954346 -223.55532837]
[-309.05084229 -213.22505188]
[-308.49386597 -197.65818787]
[-297.62612915 -187.31930542]
[-286.75839233 -176.98043823]
[-275.89065552 -166.64155579]
[-265.02291870 -156.30268860]
[-254.15519714 -145.96380615]
[-243.28746033 -135.62493896]
[-232.41972351 -125.28605652]
[-220.92906189 -115.64424896]
[-208.86009216 -106.73694611]
[-196.79112244 -97.82964325]
[-184.72216797 -88.92234039]
[-172.43487549 -80.31868744]
[-159.93692017 -72.02404785]
[-147.43896484 -63.72940826]
[-134.94100952 -55.43476486]
[-122.44305420 -47.14012146]
[-109.89363861 -38.92354584]
[-97.29325104 -30.78535271]
[-82.40416718 -30.37975121]
[-75.00950623 -16.39298630]
[-62.40911865 -8.25479221]
[-49.70825577 -0.27431089]
[-36.90889359 7.54721737]
[-24.10952950 15.36874485]
[-9.73616314 11.63485622]
[3.35563159 19.38466644]
[7.17462206 34.48609161]
[19.97398567 42.30762100]
[32.77334976 50.12915039]
[38.50261688 42.78846741]
[45.03331375 36.10569382]
[52.28992081 30.16830063]
[60.18736649 25.05509567]
[68.63202667 20.83517838]
[77.52285004 17.56700516]
[86.75254822 15.29760647]
[96.20888519 14.06191063]
[105.77605438 13.88223076]
[115.33610535 14.76790619]
[124.77037048 16.71509743]
[133.96096802 19.70674133]
[142.79225159 23.71268654]
[151.15226746 28.68997383]
[158.93420410 34.58328629]
[166.03768921 41.32556534]
[172.37016296 48.83875656]
[184.54922485 40.08260345]
[196.72830200 31.32644844]
[208.90736389 22.57029343]
[221.08644104 13.81413841]
[220.17985535 -1.58656478]
[227.76333618 -15.02137947]
[241.41703796 -22.20330429]
[256.78408813 -20.84061432]
[268.96096802 -11.36813927]
[274.06201172 3.19148993]
[270.45953369 18.19234848]
[259.30307007 28.84771538]
[244.15260315 31.75750160]
[229.84259033 25.99320793]
[217.66352844 34.74936295]
[205.48445129 43.50551987]
[193.30537415 52.26167297]
[181.12631226 61.01782990]
[183.20257568 68.22470856]
[197.61633301 64.07217407]
[212.03009033 59.91964340]
[226.44392395 55.76733398]
[230.59600830 70.18122101]
[216.18263245 74.33340454]
[201.76887512 78.48593903]
[187.35510254 82.63846588]
[189.43138123 89.84534454]
[204.40225220 90.77973938]
[219.37310791 91.71413422]
[234.34397888 92.64852905]
[249.31484985 93.58291626]
[264.28570557 94.51731110]
[274.06652832 82.47093201]
[289.06869507 78.50676727]
[303.52359009 84.14911652]
[311.87298584 97.22838593]
[310.90637207 112.71532440]
[300.99545288 124.65489197]
[285.95117188 128.45608521]
[271.55834961 122.65724945]
[263.35131836 109.48818207]
[248.38046265 108.55378723]
[233.40959167 107.61939240]
[218.43872070 106.68500519]
[203.46784973 105.75061035]
[188.49697876 104.81621552]
[185.87458801 113.86669159]
[182.34840393 122.42039490]
[177.99359131 130.38954163]
[191.42593384 137.06576538]
[207.75062561 135.50474548]
[217.04316711 149.01698303]
[209.74420166 163.70225525]
[193.36228943 164.45359802]
[184.74971008 150.49812317]
[171.31736755 143.82188416]
[161.82052612 156.43356323]
[150.12454224 167.03770447]
[136.64547729 175.25711060]
[121.86281586 180.79939270]
[124.46753693 195.57150269]
[127.07225800 210.34362793]
[129.76901245 225.09921265]
[132.55767822 239.83772278]
[135.34635925 254.57621765]
[138.13502502 269.31469727]
[140.92370605 284.05322266]
[156.67234802 286.54553223]
[170.58970642 294.27099609]
[180.99914551 306.27786255]
[186.65388489 321.09985352]
[186.88624573 336.93533325]
[181.68652344 351.86614990]
[171.70184326 364.09005737]
[158.15571594 372.13824463]
[161.12789917 386.84082031]
[176.18955994 387.33416748]
[190.73129272 391.28826904]
[203.96887207 398.48986816]
[215.18844604 408.55056763]
[223.78492737 420.92785645]
[229.29473877 434.95422363]
[231.42073059 449.87322998]
[230.04824829 464.88034058]
[225.25131226 479.16619873]
[217.28862000 491.96041870]
[206.58958435 502.57302856]
[193.73120117 510.43170166]
[179.40689087 515.11260986]
[164.38916016 516.36334229]
[149.48786926 514.11639404]
[135.50666809 508.49301147]
[123.19950867 499.79641724]
[113.23012543 488.49560547]
[106.13613892 475.20004272]
[102.30012512 460.62673950]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 231]
[6 230]
[15 222]
[16 221]
[17 220]
[18 219]
[19 218]
[21 217]
[22 216]
[23 215]
[32 138]
[33 137]
[34 136]
[37 133]
[38 132]
[39 131]
[42 130]
[43 129]
[45 127]
[46 126]
[48 125]
[49 124]
[50 123]
[51 122]
[52 121]
[57 120]
[58 119]
[59 118]
[60 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[155 173]
[156 172]
[157 171]
[158 170]
[159 169]
[182 201]
[183 200]
[184 199]
[185 198]
[186 197]
[187 196]
[204 211]
[205 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
