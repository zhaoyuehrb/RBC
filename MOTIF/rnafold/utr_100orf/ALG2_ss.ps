%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUACGAGCGCGGAGCUUGCGCAGAAGACCCCCAUCAGGGUGCGGGGUGCAGUUGCGGCUCCAGGGCCAUGGCGGAGGAGCAGGGCCGGGAACGGGACUCGGUUCCCAAGCCGUCGGUGCUGUUCCUCCACCCAGACCUGGGCGUGGGCGGCGCUGAGCGGCUGGUGU\
) } def
/len { sequence length } bind def

/coor [
[101.52537537 388.66110229]
[112.85953522 377.88748169]
[111.75820923 362.92797852]
[110.65689087 347.96847534]
[109.55556488 333.00894165]
[95.34352112 324.82827759]
[88.72915649 309.64190674]
[92.49373627 293.34069824]
[105.34991455 282.37707520]
[103.97396088 267.44033813]
[102.59800720 252.50357056]
[101.22205353 237.56681824]
[99.84609985 222.63005066]
[91.39807892 216.79946899]
[87.49105072 207.06983948]
[89.64888763 196.58474731]
[97.39212799 188.87789917]
[96.56581116 173.90068054]
[95.73949432 158.92346191]
[94.91317749 143.94624329]
[94.08686066 128.96900940]
[93.26054382 113.99179077]
[81.94894409 104.14051056]
[67.00017548 105.37920380]
[52.05141068 106.61788940]
[37.10264206 107.85658264]
[28.53804779 122.42125702]
[13.13820553 128.95932007]
[-2.96603394 125.08253479]
[-13.49031258 112.50695038]
[-28.41380119 114.02005768]
[-43.33729172 115.53315735]
[-58.26078033 117.04626465]
[-73.18426514 118.55936432]
[-88.09323120 120.20948792]
[-102.98640442 121.99649048]
[-117.87957764 123.78350067]
[-130.67207336 134.04429626]
[-145.85421753 127.84471130]
[-147.80790710 111.56235504]
[-134.52336121 101.94711304]
[-119.66658020 108.89032745]
[-104.77340698 107.10331726]
[-89.88023376 105.31631470]
[-83.58966827 101.38239288]
[-74.69737244 103.63587952]
[-59.77388000 102.12277222]
[-44.85039139 100.60967255]
[-29.92690468 99.09656525]
[-15.00341511 97.58346558]
[-9.37237358 85.45519257]
[1.60985208 77.63826752]
[15.12901592 76.26741028]
[27.65507889 81.80831909]
[35.86395264 92.90781403]
[50.81271744 91.66912842]
[65.76148224 90.43043518]
[80.71025085 89.19174194]
[92.07872009 86.03058624]
[100.28416443 89.99742889]
[109.05629730 77.82985687]
[111.55087280 69.00215912]
[118.10302734 65.52133179]
[127.09720612 53.51696777]
[136.09138489 41.51260376]
[145.08555603 29.50824165]
[154.07974243 17.50387573]
[147.91265869 4.92577028]
[147.77557373 -9.01594067]
[153.63816833 -21.59280205]
[164.30152893 -30.36811066]
[177.64291382 -33.66896820]
[191.03814697 -30.90498734]
[200.25134277 -42.74209595]
[202.62176514 -58.38471603]
[216.54483032 -63.67597580]
[225.75802612 -75.51308441]
[234.97122192 -87.35018921]
[244.18440247 -99.18730164]
[253.39759827 -111.02440643]
[262.61077881 -122.86151123]
[271.82397461 -134.69862366]
[281.03717041 -146.53572083]
[290.25036621 -158.37283325]
[299.46356201 -170.20994568]
[301.83398438 -185.85256958]
[315.75704956 -191.14382935]
[324.97024536 -202.98092651]
[334.18344116 -214.81803894]
[343.39660645 -226.65515137]
[352.39080811 -238.65951538]
[361.16293335 -250.82708740]
[356.47384644 -265.50082397]
[361.26821899 -279.95306396]
[373.50848389 -288.70748901]
[388.37863159 -288.57720947]
[397.15075684 -300.74478149]
[405.92288208 -312.91232300]
[414.69500732 -325.07989502]
[411.91827393 -340.63833618]
[421.02468872 -353.55532837]
[436.61163330 -356.16744995]
[449.43161011 -346.92495728]
[451.87878418 -331.31127930]
[442.50125122 -318.58972168]
[426.86257935 -316.30776978]
[418.09045410 -304.14019775]
[409.31832886 -291.97262573]
[400.54620361 -279.80505371]
[405.36874390 -265.73803711]
[400.93078613 -251.35858154]
[388.73410034 -242.24301147]
[373.33050537 -242.05494690]
[364.55838013 -229.88737488]
[364.43359375 -225.07847595]
[361.26098633 -220.30575562]
[355.23373413 -217.44195557]
[346.02053833 -205.60484314]
[336.80734253 -193.76774597]
[327.59414673 -181.93063354]
[325.88272095 -167.13467407]
[311.30065918 -160.99674988]
[302.08746338 -149.15965271]
[292.87426758 -137.32254028]
[283.66110229 -125.48542786]
[274.44790649 -113.64832306]
[265.23471069 -101.81121826]
[256.02151489 -89.97410583]
[246.80831909 -78.13700104]
[237.59513855 -66.29988861]
[228.38194275 -54.46278381]
[226.67051697 -39.66683197]
[212.08845520 -33.52890396]
[202.87525940 -21.69179535]
[209.31904602 -6.89230967]
[207.42007446 9.23148823]
[197.60153198 22.27880669]
[182.46105957 28.64069748]
[166.08410645 26.49805450]
[157.08992004 38.50241852]
[148.09574890 50.50678253]
[139.10157776 62.51114655]
[130.10739136 74.51551056]
[121.22386169 86.60198975]
[112.45173645 98.76955414]
[108.23776245 113.16547394]
[109.06407928 128.14270020]
[109.89039612 143.11991882]
[110.71671295 158.09713745]
[111.54302979 173.07437134]
[112.36934662 188.05158997]
[124.16181946 204.37013245]
[114.78285980 221.25410461]
[116.15881348 236.19085693]
[117.53476715 251.12762451]
[118.91072083 266.06436157]
[120.28667450 281.00112915]
[132.64300537 287.15789795]
[140.27485657 298.53149414]
[141.27239990 312.08331299]
[135.48127747 324.25607300]
[124.51508331 331.90762329]
[125.61640167 346.86715698]
[126.71772766 361.82666016]
[127.81904602 376.78616333]
[140.60876465 385.78378296]
[144.57272339 400.91061401]
[137.83924866 415.02426147]
[123.58769226 421.46063232]
[108.54719543 417.18072510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[4 163]
[5 162]
[9 157]
[10 156]
[11 155]
[12 154]
[13 153]
[17 151]
[18 150]
[19 149]
[20 148]
[21 147]
[22 146]
[23 58]
[24 57]
[25 56]
[26 55]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[35 44]
[36 43]
[37 42]
[60 145]
[61 144]
[63 143]
[64 142]
[65 141]
[66 140]
[67 139]
[73 134]
[74 133]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[87 120]
[88 119]
[89 118]
[90 117]
[91 114]
[92 113]
[96 109]
[97 108]
[98 107]
[99 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
