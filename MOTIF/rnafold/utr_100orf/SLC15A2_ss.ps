%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCUAUUGAAGCUGACACCCACAGAGUUAAACUGAGUUGCUGAAGCCACCAGCUCCCCCUCCCAGUCCUUCUUUUCAGAGUAGGCUGGCAGCUGUCCUAACUGCCUACUAAAGCCAAAUGCUUGAGGAGAGAGAGAGAGUAAGGAGCCAGCCAUGAAUCCUUUCCAGAAAAAUGAGUCCAAGGAAACUCUUUUUUCACCUGUCUCCAUUGAAGAGGUACCACCUCGACCACCUAGCCCUCCAAAGAAGCCAU\
) } def
/len { sequence length } bind def

/coor [
[-131.50907898 369.13998413]
[-152.85697937 369.60406494]
[-155.80607605 384.31130981]
[-158.75517273 399.01855469]
[-161.70426941 413.72579956]
[-154.04443359 427.82211304]
[-160.42202759 442.54306030]
[-175.94470215 446.59594727]
[-188.70480347 436.87179565]
[-188.91386414 420.83007812]
[-176.41151428 410.77670288]
[-173.46241760 396.06945801]
[-170.51332092 381.36221313]
[-167.56422424 366.65496826]
[-173.48127747 362.04644775]
[-182.69831848 373.88055420]
[-191.91535950 385.71466064]
[-201.13240051 397.54876709]
[-210.34945679 409.38287354]
[-219.56649780 421.21701050]
[-228.78353882 433.05111694]
[-238.00057983 444.88522339]
[-247.21762085 456.71932983]
[-256.43487549 468.55328369]
[-268.26867676 459.33584595]
[-259.05172729 447.50228882]
[-249.83468628 435.66818237]
[-240.61764526 423.83407593]
[-231.40060425 411.99993896]
[-222.18356323 400.16583252]
[-212.96652222 388.33172607]
[-203.74946594 376.49761963]
[-194.53242493 364.66351318]
[-185.31538391 352.82940674]
[-191.23243713 348.22088623]
[-204.76988220 354.68133545]
[-218.30734253 361.14181519]
[-231.84478760 367.60226440]
[-245.38223267 374.06271362]
[-258.91967773 380.52316284]
[-268.04183960 393.44976807]
[-282.86059570 391.94848633]
[-296.39804077 398.40893555]
[-305.23281860 412.22482300]
[-321.60061646 411.21145630]
[-328.66366577 396.41128540]
[-319.15612793 383.04946899]
[-302.85852051 384.87149048]
[-289.32107544 378.41101074]
[-281.16717529 365.94653320]
[-265.38012695 366.98571777]
[-251.84268188 360.52526855]
[-238.30523682 354.06481934]
[-224.76779175 347.60437012]
[-211.23034668 341.14389038]
[-197.69290161 334.68344116]
[-201.46853638 322.43325806]
[-202.65507507 309.76913452]
[-201.24282837 297.22805786]
[-197.33145142 285.33355713]
[-191.12409973 274.57382202]
[-182.91717529 265.38177490]
[-173.08648682 258.11752319]
[-162.07006836 253.05451965]
[-150.34880066 250.36918640]
[-138.42538452 250.13523865]
[-126.80284119 252.32206726]
[-115.96327209 256.79779053]
[-106.34785461 263.33651733]
[-95.67586517 252.79571533]
[-85.00386810 242.25491333]
[-74.33187866 231.71411133]
[-63.65988541 221.17329407]
[-52.98789215 210.63249207]
[-42.31589890 200.09169006]
[-43.17386246 189.94326782]
[-38.21276474 180.79846191]
[-28.85144424 175.77699280]
[-18.05207062 176.74072266]
[-7.12262297 166.46711731]
[3.80682492 156.19349670]
[4.84846687 151.55816650]
[8.79628944 147.51835632]
[15.13597965 145.80506897]
[26.31619644 135.80493164]
[37.49641037 125.80479431]
[48.67662811 115.80465698]
[49.41843414 100.82301331]
[39.28078079 89.76733398]
[29.14312935 78.71165466]
[19.00547791 67.65598297]
[8.86782551 56.60030365]
[-6.31694126 59.32544327]
[-20.55572319 53.38737869]
[-29.30497742 40.68091965]
[-29.77284813 25.26065254]
[-21.81003952 12.04712868]
[-7.95745420 5.25673485]
[7.36459684 7.05626154]
[19.26690292 16.87148666]
[23.95148277 31.57040596]
[19.92350388 46.46265030]
[30.06115532 57.51832962]
[40.19880676 68.57400513]
[50.33646011 79.62968445]
[60.47411346 90.68536377]
[67.11834717 87.20626068]
[60.16013718 73.91779327]
[60.77807617 58.93052292]
[73.44860077 66.95957947]
[80.40681458 80.24804688]
[87.05104828 76.76894379]
[83.73907471 62.13915253]
[80.42710876 47.50935745]
[77.11513519 32.87956619]
[64.36795044 23.13847923]
[64.18016815 7.09652472]
[76.69583893 -2.94028282]
[92.31401062 0.72743648]
[99.05376434 15.28612137]
[91.74492645 29.56759644]
[95.05690002 44.19738770]
[98.36886597 58.82718277]
[101.68083954 73.45697784]
[108.63626099 76.26270294]
[122.54710388 81.87415314]
[129.50253296 84.67988586]
[142.03862000 76.44298553]
[154.57470703 68.20609283]
[167.11080933 59.96920395]
[179.64689636 51.73231125]
[186.93148804 37.68790817]
[201.81692505 37.16539764]
[214.35301208 28.92850304]
[211.21554565 20.46011925]
[210.48896790 11.10731411]
[212.41622925 1.56874681]
[217.03523254 -7.39278936]
[224.16288757 -15.01096725]
[233.39707947 -20.58015633]
[244.13723755 -23.51798439]
[255.62280273 -23.42085457]
[264.46957397 -35.53426361]
[273.31634521 -47.64767075]
[282.16311646 -59.76107788]
[291.00988770 -71.87448883]
[288.77801514 -87.29059601]
[297.92245483 -99.44928741]
[312.63311768 -101.48202515]
[321.47988892 -113.59543610]
[322.69546509 -129.94946289]
[337.58181763 -136.82907104]
[350.82510376 -127.15711212]
[348.80181885 -110.88326263]
[333.59329224 -104.74866486]
[324.74652100 -92.63525391]
[327.28677368 -78.00369263]
[318.48745728 -65.59294891]
[303.12329102 -63.02771378]
[294.27651978 -50.91430664]
[285.42974854 -38.80089951]
[276.58297729 -26.68749237]
[267.73620605 -14.57408333]
[271.77682495 -8.25557995]
[284.41394043 -16.33659935]
[292.49478149 -3.69934106]
[279.85803223 4.38142824]
[283.89865112 10.69993210]
[298.60586548 7.75083590]
[313.31311035 4.80173922]
[328.02035522 1.85264254]
[342.72760010 -1.09645402]
[357.43481445 -4.04555082]
[369.44445801 -14.34504128]
[383.44451904 -9.26101685]
[398.15176392 -12.21011353]
[412.85897827 -15.15921021]
[427.56622314 -18.10830688]
[433.91818237 -32.26572037]
[447.39526367 -39.95649719]
[462.81524658 -38.22338486]
[474.24884033 -27.73279190]
[477.29959106 -12.51857185]
[470.79443359 1.56910026]
[457.23471069 9.11322689]
[441.83444214 7.21293640]
[430.51531982 -3.40106964]
[415.80807495 -0.45197296]
[401.10086060 2.49712372]
[386.39361572 5.44622040]
[375.43594360 15.53477097]
[360.38391113 10.66168690]
[345.67669678 13.61078358]
[330.96945190 16.55987930]
[316.26220703 19.50897598]
[301.55496216 22.45807266]
[286.84774780 25.40716934]
[269.39382935 48.51739120]
[243.36894226 53.70653534]
[222.58990479 41.46459579]
[210.05381775 49.70148849]
[203.66589355 63.15673447]
[187.88378906 64.26840210]
[175.34770203 72.50529480]
[162.81159973 80.74218750]
[150.27551270 88.97908020]
[137.73942566 97.21597290]
[137.18334961 104.69532776]
[150.69400024 98.17903137]
[163.09266663 106.62138367]
[161.98080444 121.58011627]
[148.47026062 128.09666443]
[136.07121277 119.65404510]
[135.51513672 127.13339996]
[146.69535828 137.13354492]
[157.87556458 147.13368225]
[169.05578613 157.13381958]
[180.23600769 167.13395691]
[196.07261658 173.18690491]
[194.64022827 190.08023071]
[178.01057434 193.38037109]
[170.23587036 178.31417847]
[159.05564880 168.31404114]
[147.87542725 158.31388855]
[136.69522095 148.31375122]
[125.51499939 138.31361389]
[124.75653076 153.29443359]
[117.92841339 166.65020752]
[106.22879028 176.03736877]
[91.71063232 179.80871582]
[76.92148590 177.30249023]
[64.45645142 168.95846558]
[56.50279617 156.24078369]
[54.45618439 141.38105774]
[58.67676544 126.98487854]
[47.49655151 136.98501587]
[36.31633377 146.98515320]
[25.13611794 156.98529053]
[14.08044052 167.12294006]
[3.15099216 177.39656067]
[-7.77845573 187.67016602]
[-12.74953651 207.22448730]
[-31.77509499 210.76368713]
[-42.44708633 221.30448914]
[-53.11907959 231.84529114]
[-63.79107285 242.38609314]
[-74.46306610 252.92689514]
[-85.13505554 263.46771240]
[-95.80704498 274.00851440]
[-86.12501526 290.94143677]
[-82.68276215 310.45355225]
[-86.09002686 330.28424072]
[-96.15053558 348.06454468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[5 11]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[42 49]
[43 48]
[69 249]
[70 248]
[71 247]
[72 246]
[73 245]
[74 244]
[75 243]
[79 241]
[80 240]
[81 239]
[84 238]
[85 237]
[86 236]
[87 235]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[112 124]
[113 123]
[114 122]
[115 121]
[127 207]
[128 206]
[129 205]
[130 204]
[131 203]
[133 201]
[134 200]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[149 156]
[150 155]
[168 197]
[169 196]
[170 195]
[171 194]
[172 193]
[173 192]
[175 190]
[176 189]
[177 188]
[178 187]
[214 226]
[215 225]
[216 224]
[217 223]
[218 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
