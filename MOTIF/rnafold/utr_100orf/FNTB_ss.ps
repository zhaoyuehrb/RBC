%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCAGUAACUCACUCGAAAGACGGGUAGGCGGGAGGAGACAUUCGCGUUCAAAAUCUUUUUGCCUCUAUCCGCUCGCCGUAGCGCUUUAGCCCGCUCGAGUUUCAAUGCGCGUUGUUGCUUAACGAAGCAGAGUCCUACACACUGUCUGCUGCUCUCCUGAUCAUGGCUUCUCCGAGUUCUUUCACCUACUAUUGCCCUCCAUCUUCCUCCCCCGUCUGGUCAGAGCCGCUGUACAGUCUGAGGCCCGAGCAC\
GCGCGAGAGC\
) } def
/len { sequence length } bind def

/coor [
[84.79887390 181.59315491]
[93.29752350 167.56800842]
[93.12036896 152.56904602]
[92.94322205 137.57009888]
[92.76606750 122.57114410]
[86.95796204 117.82604218]
[79.92255402 131.07379150]
[75.35825348 145.36250305]
[60.97739410 149.62757874]
[49.36086273 140.13778687]
[50.67121506 125.19513702]
[63.76322556 117.87195587]
[75.34176636 108.33584595]
[69.53366089 103.59074402]
[54.80068588 106.40842438]
[40.06770706 109.22610474]
[25.33472633 112.04378510]
[10.60174656 114.86146545]
[5.40053225 118.85468292]
[-0.19805734 119.54392242]
[-4.51224375 117.56739044]
[-19.30766296 120.03630829]
[-27.22550774 124.52165222]
[-34.29231262 122.44594574]
[-49.11585999 124.73995209]
[-63.93940735 127.03395844]
[-78.76295471 129.32797241]
[-93.58650208 131.62197876]
[-114.55273438 172.89836121]
[-128.14318848 179.24655151]
[-141.73364258 185.59475708]
[-155.32409668 191.94294739]
[-168.91455078 198.29113770]
[-182.50500488 204.63932800]
[-196.09545898 210.98751831]
[-209.68591309 217.33570862]
[-223.27636719 223.68389893]
[-236.86682129 230.03210449]
[-250.45727539 236.38029480]
[-263.85440063 243.12693787]
[-277.04650879 250.26614380]
[-290.23861694 257.40536499]
[-294.50735474 272.62222290]
[-308.32650757 280.29077148]
[-323.49740601 275.86135864]
[-331.01940918 261.96191406]
[-326.42987061 246.83869934]
[-312.45166016 239.46406555]
[-297.37780762 244.21324158]
[-284.18569946 237.07403564]
[-270.99362183 229.93482971]
[-284.49169922 223.39250183]
[-287.91098022 208.78742981]
[-278.71984863 196.93318176]
[-263.72341919 196.60664368]
[-254.02500916 208.04957581]
[-256.80548096 222.78984070]
[-243.21501160 216.44165039]
[-229.62455750 210.09344482]
[-216.03410339 203.74525452]
[-202.44364929 197.39706421]
[-188.85319519 191.04887390]
[-175.26274109 184.70068359]
[-161.67228699 178.35249329]
[-148.08183289 172.00430298]
[-134.49137878 165.65609741]
[-120.90092468 159.30790710]
[-121.38776398 151.82373047]
[-135.32264709 157.37521362]
[-144.90852356 145.83782959]
[-136.89799500 133.15589905]
[-122.36145020 136.85536194]
[-122.84828949 129.37118530]
[-137.14662170 124.83713531]
[-151.44496155 120.30308533]
[-165.74330139 115.76903534]
[-179.65669250 123.26522827]
[-194.77136230 118.64761353]
[-202.12004089 104.65573883]
[-197.34288025 89.59073639]
[-183.27409363 82.39040375]
[-168.26043701 87.32657623]
[-161.20924377 101.47070312]
[-146.91091919 106.00475311]
[-132.61257935 110.53879547]
[-118.31423950 115.07284546]
[-124.55078125 101.43079376]
[-118.68523407 87.62516785]
[-104.53639221 82.64418030]
[-91.31591797 89.73072815]
[-87.63107300 104.27108002]
[-95.88050842 116.79843140]
[-81.05696106 114.50442505]
[-66.23341370 112.21041870]
[-51.40987015 109.91640472]
[-36.58632278 107.62239838]
[-21.77658272 105.24089050]
[-6.98116255 102.77197266]
[7.78406620 100.12848663]
[22.51704597 97.31080627]
[37.25002670 94.49312592]
[51.98300552 91.67544556]
[66.71598053 88.85776520]
[75.21345520 80.13113403]
[85.32221985 75.64660645]
[95.26607513 75.34831238]
[103.53182220 78.51876068]
[109.09114838 83.96002960]
[111.52854156 90.24063873]
[111.05932617 95.96550751]
[125.12759399 90.76128387]
[139.19586182 85.55706787]
[153.26412964 80.35284424]
[167.33239746 75.14862823]
[181.40065002 69.94440460]
[188.33500671 64.05157471]
[195.66592407 64.76287079]
[209.79466248 59.72516632]
[223.92341614 54.68745804]
[231.44897461 41.71186829]
[228.80548096 26.94663811]
[226.16200256 12.18140793]
[223.51852417 -2.58382082]
[212.53659058 -14.76287365]
[217.84970093 -30.27747536]
[233.99218750 -33.16753387]
[244.35803223 -20.46000481]
[238.28375244 -5.22730494]
[240.92723083 9.53792477]
[243.57070923 24.30315399]
[246.21420288 39.06838226]
[252.39431763 43.31764603]
[256.65756226 28.93624306]
[271.65249634 28.54691315]
[276.65628052 42.68770981]
[264.75451660 51.81617355]
[270.93463135 56.06543732]
[285.66763306 53.24775696]
[300.40060425 50.43007660]
[308.21029663 45.75897217]
[315.32415771 47.66719437]
[330.08938599 45.02371216]
[342.30999756 34.97547531]
[356.20162964 40.34872055]
[370.96685791 37.70523834]
[385.73208618 35.06175232]
[400.49731445 32.41827011]
[415.26254272 29.77478600]
[425.01095581 15.23004436]
[441.93200684 12.30999947]
[455.44793701 22.34329414]
[470.18093872 19.52561378]
[482.28201294 9.33374977]
[496.23614502 14.54255581]
[510.96911621 11.72487640]
[525.70208740 8.90719604]
[540.43505859 6.08951569]
[555.16809082 3.27183557]
[559.06848145 -0.09594356]
[563.43231201 -1.51201463]
[567.44671631 -1.12323678]
[570.47229004 0.62502265]
[585.29583740 -1.66898680]
[600.11938477 -3.96299624]
[614.94293213 -6.25700569]
[629.76647949 -8.55101490]
[637.73675537 -12.94253635]
[644.77856445 -10.78350735]
[659.62817383 -12.90228748]
[674.47778320 -15.02106762]
[678.11584473 -27.37358475]
[686.11718750 -37.40353775]
[697.27117920 -43.64980316]
[709.91131592 -45.21948624]
[722.16424561 -41.91540527]
[732.22735596 -34.26010132]
[738.63391113 -23.41353798]
[753.52941895 -25.18099785]
[768.42492676 -26.94845581]
[769.59674072 -41.95222855]
[773.67333984 -56.43901825]
[780.49816895 -69.85199738]
[789.80883789 -81.67560577]
[801.24749756 -91.45536804]
[814.37445068 -98.81539154]
[828.68511963 -103.47276306]
[843.62945557 -105.24846649]
[858.63299561 -104.07425690]
[873.11914062 -99.99525452]
[886.53100586 -93.16825867]
[898.35308838 -83.85568237]
[908.13104248 -72.41545868]
[915.48895264 -59.28733826]
[920.14398193 -44.97591782]
[921.91729736 -30.03129768]
[920.74060059 -15.02790642]
[916.65930176 -0.54243463]
[909.83013916 12.86833382]
[900.51562500 24.68892670]
[889.07379150 34.46498871]
[875.94451904 41.82075882]
[861.63232422 46.47349548]
[846.68743896 48.24436188]
[831.68420410 47.06529617]
[817.19940186 42.98160934]
[803.78973389 36.15027237]
[791.97064209 26.83386230]
[782.19647217 15.39047909]
[774.84283447 2.25997424]
[770.19238281 -12.05295086]
[755.29687500 -10.28549099]
[740.40136719 -8.51803207]
[734.16668701 7.56034756]
[720.56481934 18.30571938]
[703.30303955 20.67386818]
[687.14508057 13.91976452]
[676.59655762 -0.17146230]
[661.74694824 1.94731772]
[646.89733887 4.06609774]
[632.06048584 6.27253103]
[617.23693848 8.56654072]
[602.41339111 10.86054993]
[587.58984375 13.15455914]
[572.76629639 15.44856834]
[557.98571777 18.00481415]
[543.25274658 20.82249451]
[528.51977539 23.64017487]
[513.78680420 26.45785522]
[499.05383301 29.27553558]
[488.00653076 39.26586151]
[472.99859619 34.25859070]
[458.26562500 37.07627106]
[452.60357666 48.62908936]
[441.15536499 54.91436768]
[427.98233032 53.44733810]
[417.90603638 44.54001617]
[403.14080811 47.18349838]
[388.37557983 49.82698059]
[373.61035156 52.47046661]
[358.84512329 55.11394882]
[347.68060303 64.97310638]
[332.73287964 59.78894043]
[317.96765137 62.43242645]
[303.21829224 65.16305542]
[288.48529053 67.98073578]
[273.75231934 70.79841614]
[265.02981567 77.99557495]
[254.66085815 81.27222443]
[244.25224304 80.45809937]
[235.29716492 75.99263000]
[228.96112061 68.81620789]
[214.83238220 73.85391235]
[200.70362854 78.89162445]
[186.60487366 84.01267242]
[172.53660583 89.21689606]
[158.46833801 94.42111206]
[144.40007019 99.62532806]
[130.33181763 104.82955170]
[116.26354980 110.03376770]
[107.76502228 122.39398956]
[107.94216919 137.39294434]
[108.11932373 152.39189148]
[108.29647827 167.39085388]
[117.12402344 181.21136475]
[109.32975006 195.63986206]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 263]
[3 262]
[4 261]
[5 260]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[21 98]
[22 97]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[39 57]
[40 51]
[41 50]
[42 49]
[73 86]
[74 85]
[75 84]
[76 83]
[110 259]
[111 258]
[112 257]
[113 256]
[114 255]
[115 254]
[117 253]
[118 252]
[119 251]
[120 131]
[121 130]
[122 129]
[123 128]
[137 246]
[138 245]
[139 244]
[141 243]
[142 242]
[144 240]
[145 239]
[146 238]
[147 237]
[148 236]
[151 232]
[152 231]
[154 229]
[155 228]
[156 227]
[157 226]
[158 225]
[162 224]
[163 223]
[164 222]
[165 221]
[166 220]
[168 219]
[169 218]
[170 217]
[177 212]
[178 211]
[179 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
