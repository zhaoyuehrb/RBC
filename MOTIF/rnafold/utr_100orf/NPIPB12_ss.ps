%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUAUGAUCUCGUGAAACCUUGAGAGAAACUGAAUGACGAAUGAAACUAUUGUUCCUGUUUCACACAGAAGAAAACUGAGGUUGGCACUCAUCAUGAGCCCCUGUUCUCAUUCUGCAAAUGGUGAAGCUCUCUAUUGUCCUGACCCCACAGUUCCUGUCCCAUGACCAGGGCCAGCUCACCAAGGAGCUGCAGCAGCAUGUAAAGUCAGUGACAUGCC\
) } def
/len { sequence length } bind def

/coor [
[99.66090393 256.06918335]
[102.12651062 236.84497070]
[102.34070587 221.84649658]
[102.55490112 206.84802246]
[102.76908875 191.84954834]
[102.98328400 176.85108948]
[95.72968292 174.94444275]
[81.22248077 171.13116455]
[73.96887970 169.22453308]
[66.78014374 182.38970947]
[59.59140778 195.55490112]
[52.40267181 208.72009277]
[45.21393967 221.88526917]
[51.98229218 235.84840393]
[49.21755219 251.11718750]
[37.98281479 261.82046509]
[22.59806252 263.84262085]
[8.97905159 256.40606689]
[2.36256790 242.37034607]
[5.29278374 227.13244629]
[16.64297104 216.55166626]
[32.04875183 214.69653320]
[39.23748779 201.53135681]
[46.42622375 188.36616516]
[53.61495590 175.20098877]
[60.80369186 162.03579712]
[56.35209274 155.99980164]
[44.28009796 164.90299988]
[32.20810318 173.80619812]
[20.13611031 182.70939636]
[8.06411552 191.61259460]
[-0.66594625 203.81037903]
[-14.96441269 199.27674866]
[-15.07094955 184.27713013]
[-0.83908361 179.54060364]
[11.23291111 170.63740540]
[23.30490494 161.73420715]
[35.37689972 152.83100891]
[47.44889450 143.92781067]
[42.99729538 137.89181519]
[28.29605675 140.87066650]
[13.59481812 143.84951782]
[-1.10642040 146.82838440]
[-15.80765915 149.80723572]
[-30.50889778 152.78608704]
[-40.53697205 165.30876160]
[-56.57905579 165.13217163]
[-66.32902527 152.39176941]
[-62.30754852 136.86093140]
[-47.59955215 130.45355225]
[-33.48775482 138.08485413]
[-18.78651619 135.10600281]
[-4.08527756 132.12713623]
[10.61596107 129.14828491]
[25.31719971 126.16942596]
[40.01843643 123.19056702]
[43.69850540 96.42347717]
[57.32124329 76.91645050]
[75.65174103 67.47642517]
[69.03342438 54.01544952]
[62.41511154 40.55447388]
[55.79679489 27.09349632]
[49.17847824 13.63252068]
[42.56016159 0.17154436]
[35.94184494 -13.28943253]
[29.35154724 -19.60460854]
[29.32667351 -26.99020958]
[22.90124702 -40.54431915]
[3.64286137 -46.29241562]
[-5.03553820 -64.08062744]
[2.06473279 -82.22772217]
[-4.93527699 -95.49421692]
[-11.93528652 -108.76071167]
[-18.93529701 -122.02720642]
[-23.34256363 -124.79937744]
[-25.98570442 -128.60285950]
[-26.76711655 -132.59472656]
[-25.93717194 -136.01516724]
[-32.36259842 -149.56927490]
[-38.78802490 -163.12338257]
[-45.21344757 -176.67749023]
[-51.63887405 -190.23161316]
[-68.22224426 -195.81034851]
[-75.49382782 -211.35206604]
[-69.39449310 -227.02809143]
[-76.01280975 -240.48905945]
[-90.70173645 -245.67300415]
[-97.22189331 -259.41864014]
[-92.18927765 -273.39031982]
[-98.80759430 -286.85128784]
[-105.42591095 -300.31228638]
[-112.04422760 -313.77325439]
[-124.45876312 -325.31948853]
[-116.80043793 -340.44519043]
[-100.14583588 -337.27334595]
[-98.58325195 -320.39157104]
[-91.96493530 -306.93060303]
[-85.34661865 -293.46960449]
[-78.72830200 -280.00863647]
[-64.59091949 -275.46218872]
[-57.68725204 -261.90512085]
[-62.55183792 -247.10737610]
[-55.93352127 -233.64640808]
[-43.27909851 -231.23901367]
[-34.18453598 -221.84385681]
[-32.12937164 -208.73347473]
[-38.08476639 -196.65702820]
[-31.65933800 -183.10292053]
[-25.23391342 -169.54881287]
[-18.80848694 -155.99470520]
[-12.38306141 -142.44059753]
[-5.66880274 -129.02722168]
[1.33120704 -115.76071930]
[8.33121681 -102.49422455]
[15.33122635 -89.22772980]
[25.58109093 -88.95036316]
[34.86510086 -84.41101837]
[41.48122025 -76.36736298]
[44.18579483 -66.22602844]
[42.42688370 -55.79681778]
[36.45535660 -46.96974564]
[42.88078308 -33.41563797]
[49.40282059 -19.90774918]
[56.02113724 -6.44677210]
[62.63945389 7.01420450]
[69.25777435 20.47518158]
[75.87608337 33.93615723]
[82.49440002 47.39713287]
[89.11271667 60.85810852]
[101.91810608 56.78352356]
[116.16596985 57.05150986]
[130.34539795 62.13862228]
[142.80114746 71.98840332]
[151.92239380 85.97285461]
[156.33934021 102.92036438]
[155.10494995 121.21073151]
[147.83891296 138.92988586]
[134.81491089 154.06951904]
[149.08074951 158.70477295]
[163.34660339 163.34002686]
[177.64518738 167.87330627]
[191.97576904 172.30438232]
[206.30635071 176.73545837]
[220.63693237 181.16653442]
[234.96751404 185.59759521]
[247.37797546 176.47145081]
[262.60455322 176.40368652]
[274.80703735 185.21070862]
[279.42840576 199.34509277]
[293.75900269 203.77616882]
[308.08956909 208.20724487]
[322.45144653 212.53587341]
[336.84384155 216.76187134]
[351.23623657 220.98785400]
[366.65725708 217.45193481]
[376.68911743 228.46150208]
[391.08151245 232.68748474]
[405.47390747 236.91348267]
[408.36013794 216.08970642]
[430.55670166 199.92784119]
[445.55059814 200.35618591]
[460.54446411 200.78453064]
[470.79818726 188.97793579]
[486.25012207 186.57557678]
[499.60437012 194.71177673]
[504.55548096 209.54487610]
[498.76565552 224.07112122]
[484.96868896 231.43168640]
[469.67907715 228.15110779]
[460.11611938 215.77841187]
[445.12225342 215.35006714]
[430.12835693 214.92172241]
[428.16998291 222.16152954]
[422.29486084 243.88093567]
[435.46002197 251.06967163]
[448.62521362 258.25842285]
[461.79040527 265.44714355]
[474.95559692 272.63586426]
[488.12075806 279.82461548]
[503.21237183 275.13211060]
[517.16278076 282.55923462]
[521.69543457 297.69958496]
[514.12127686 311.57067871]
[498.93380737 315.94302368]
[485.14358521 308.22259521]
[480.93203735 292.98980713]
[467.76684570 285.80105591]
[454.60165405 278.61233521]
[441.43649292 271.42358398]
[428.27130127 264.23486328]
[415.10610962 257.04611206]
[401.24792480 251.30587769]
[386.85552979 247.07987976]
[372.46313477 242.85389709]
[358.07156372 246.69209290]
[347.01022339 235.38024902]
[332.61782837 231.15426636]
[318.22543335 226.92826843]
[310.92687988 228.05906677]
[303.65850830 222.53782654]
[289.32791138 218.10675049]
[274.99734497 213.67567444]
[263.20446777 222.73469543]
[248.16059875 223.11705017]
[235.62973022 214.46656799]
[230.53643799 199.92817688]
[216.20585632 195.49711609]
[201.87527466 191.06604004]
[187.54469299 186.63496399]
[173.21411133 182.20388794]
[165.90014648 183.23034668]
[158.71134949 177.60588074]
[144.44549561 172.97062683]
[130.17965698 168.33535767]
[117.98175049 177.06527710]
[117.76756287 192.06375122]
[117.55336761 207.06221008]
[117.33917999 222.06068420]
[117.12498474 237.05915833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 219]
[3 218]
[4 217]
[5 216]
[6 215]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
[64 124]
[65 123]
[67 122]
[68 121]
[71 115]
[72 114]
[73 113]
[74 112]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[85 103]
[86 102]
[89 99]
[90 98]
[91 97]
[92 96]
[138 214]
[139 213]
[140 212]
[141 210]
[142 209]
[143 208]
[144 207]
[145 206]
[149 202]
[150 201]
[151 200]
[152 198]
[153 197]
[154 196]
[156 194]
[157 193]
[158 192]
[160 172]
[161 171]
[162 170]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
[179 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
