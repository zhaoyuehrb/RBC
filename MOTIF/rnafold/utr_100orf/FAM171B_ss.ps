%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUUGCGCGAGGGGGAGCGAGCGAGCGGGCGCUGCCAGGAGCCCGCAGCCCUGGCGCCCGCCGCCGCCCGGAGCCCCGCAAUAUGCCGCCGCGGCCCUCUGGCUCUAGGCCAUGGCGAGGCUCUGCCGGCGUGUCCCCUGCACCCUGCUUCUCGGCCUGGCCGUGGUGCUGCUGAAAGCGCGGCUGGUCCCCGCGGCCGCCAGAGCGGAAC\
) } def
/len { sequence length } bind def

/coor [
[56.67314529 246.32423401]
[53.48987579 231.66589355]
[57.75000763 217.28356934]
[68.40307617 206.72363281]
[82.82225800 202.58998108]
[97.45207977 205.90184021]
[108.68442535 215.84161377]
[106.48004913 201.00447083]
[104.27567291 186.16732788]
[102.07129669 171.33018494]
[97.97961426 165.17689514]
[99.94550323 156.25813293]
[97.96018982 141.39009094]
[95.97488403 126.52204895]
[83.26982117 118.54826355]
[69.01770782 123.22557831]
[61.84107971 128.87405396]
[54.52077866 127.86509705]
[40.20123291 132.33171082]
[25.88168716 136.79830933]
[18.62253189 142.34033203]
[11.31790924 141.22352600]
[-3.06595659 145.47843933]
[-17.44982338 149.73336792]
[-24.78992462 155.16772461]
[-32.07728195 153.94329834]
[-46.52233887 157.98562622]
[-60.96739578 162.02793884]
[-75.41245270 166.07025146]
[-89.85750580 170.11257935]
[-104.30256653 174.15489197]
[-107.94924164 177.88545227]
[-112.23363495 179.66705322]
[-116.30696869 179.58302307]
[-119.47641754 178.04133606]
[-134.08613586 181.44075012]
[-148.69586182 184.84016418]
[-163.30558777 188.23957825]
[-177.91531372 191.63897705]
[-192.52503967 195.03839111]
[-200.17279053 200.03050232]
[-207.37527466 198.37852478]
[-222.03353882 201.56208801]
[-231.88603210 214.22337341]
[-247.92901611 214.27049255]
[-257.85568237 201.66729736]
[-254.05117798 186.08187866]
[-239.43394470 179.47004700]
[-225.21711731 186.90380859]
[-210.55883789 183.72024536]
[-195.92443848 180.42866516]
[-181.31472778 177.02926636]
[-166.70500183 173.62985229]
[-152.09527588 170.23043823]
[-137.48554993 166.83102417]
[-122.87583160 163.43162537]
[-108.34488678 159.70983887]
[-93.89982605 155.66752625]
[-79.45477295 151.62519836]
[-65.00971222 147.58288574]
[-50.56465912 143.54055786]
[-36.11960220 139.49824524]
[-21.70475006 135.34950256]
[-7.32088327 131.09457397]
[7.06298256 126.83965302]
[21.41507912 122.47876740]
[35.73462677 118.01216125]
[50.05417252 113.54555511]
[64.34039307 108.97346497]
[78.59250641 104.29615021]
[83.99899292 90.30436707]
[76.59499359 77.25903320]
[69.19099426 64.21369171]
[61.78699875 51.16835785]
[54.38299942 38.12302017]
[46.97900391 25.07768440]
[39.00521088 12.37261868]
[30.47723961 0.03269671]
[21.94926643 -12.30722523]
[13.42129421 -24.64714813]
[-1.76371479 -22.73035812]
[-16.09608459 -28.10081100]
[-26.28234100 -39.52441788]
[-29.98175621 -54.37611389]
[-26.34423447 -69.24308777]
[-16.20564842 -80.70902252]
[-1.89577246 -86.13912964]
[13.29708862 -84.28560638]
[25.88172722 -75.57437897]
[32.96628571 -62.00722885]
[32.92278290 -46.70178223]
[25.76121712 -33.17512131]
[34.28918839 -20.83519745]
[42.81716156 -8.49527645]
[51.34513474 3.84464622]
[55.08920288 -10.68057156]
[67.93757629 -18.42132568]
[82.52857971 -14.94242954]
[90.50205994 -2.23717022]
[87.28948975 12.41477108]
[74.73155975 20.61833191]
[60.02433777 17.67368698]
[67.42833710 30.71902275]
[74.83233643 43.76435852]
[82.23633575 56.80969620]
[89.64032745 69.85503387]
[97.04432678 82.90036774]
[104.11833954 73.12696838]
[116.94058228 67.08308411]
[133.56272888 67.30696869]
[145.83943176 58.68822479]
[158.11613464 50.06948090]
[170.39282227 41.45074081]
[182.66952515 32.83199692]
[194.94621277 24.21325493]
[207.22291565 15.59451199]
[219.49960327 6.97576952]
[226.34858704 -7.28613853]
[241.21090698 -8.26644421]
[253.48759460 -16.88518715]
[265.76428223 -25.50392914]
[278.04098511 -34.12267303]
[290.31768799 -42.74141312]
[292.73025513 -62.68923950]
[308.78884888 -74.25115967]
[327.87347412 -70.33436584]
[339.75692749 -79.48771667]
[345.96835327 -94.03862000]
[360.77273560 -95.67536926]
[372.65618896 -104.82872009]
[377.54421997 -112.54341125]
[384.78308105 -114.02788544]
[396.80023193 -123.00497437]
[408.81738281 -131.98205566]
[420.83453369 -140.95913696]
[424.54742432 -156.56663513]
[439.12557983 -163.26422119]
[453.38583374 -155.91407776]
[456.38897705 -140.15461731]
[445.83123779 -128.07513428]
[429.81161499 -128.94198608]
[417.79446411 -119.96490479]
[405.77731323 -110.98782349]
[393.76016235 -102.01073456]
[381.80953979 -92.94527435]
[369.92608643 -83.79193115]
[364.56463623 -69.89573669]
[348.91024780 -67.60427094]
[337.02682495 -58.45092392]
[338.49649048 -48.29428864]
[335.59570312 -38.36622238]
[328.78341675 -30.47632217]
[319.23764038 -26.09153557]
[308.65228271 -26.06365585]
[298.93643188 -30.46471786]
[286.65972900 -21.84597588]
[274.38302612 -13.22723293]
[262.10635376 -4.60849047]
[249.82965088 4.01025200]
[243.85877991 17.65568924]
[228.11834717 19.25246620]
[215.84165955 27.87120819]
[203.56495667 36.48995209]
[191.28826904 45.10869217]
[179.01156616 53.72743607]
[166.73486328 62.34617615]
[154.45817566 70.96492004]
[142.18147278 79.58366394]
[142.95547485 94.56368256]
[156.05505371 101.87127686]
[169.15463257 109.17886353]
[182.25422668 116.48645782]
[195.35380554 123.79405212]
[209.90248108 118.06082153]
[224.71618652 123.06962585]
[232.80033875 136.45545959]
[230.33786011 151.89793396]
[218.49143982 162.10559082]
[202.85459900 162.25869751]
[190.81059265 152.28494263]
[188.04620361 136.89363098]
[174.94662476 129.58604431]
[161.84704590 122.27845001]
[148.74746704 114.97085571]
[135.64787292 107.66326141]
[129.44664001 111.88163757]
[137.88317871 124.28424072]
[125.48044586 132.72059631]
[117.04415894 120.31837463]
[110.84292603 124.53674316]
[112.82823181 139.40478516]
[114.81353760 154.27281189]
[116.90843964 169.12580872]
[119.11281586 183.96295166]
[121.31719208 198.80009460]
[123.52156830 213.63723755]
[130.62217712 223.33808899]
[127.87462616 233.68028259]
[132.02336121 248.09513855]
[136.17210388 262.50997925]
[140.32083130 276.92483521]
[152.49765015 287.90924072]
[148.80912781 303.88818359]
[133.04971313 308.42391968]
[121.43132782 296.85043335]
[125.90598297 281.07357788]
[121.75724792 266.65872192]
[117.60851288 252.24386597]
[113.45977783 237.82901001]
[107.36164856 251.53349304]
[95.42324829 260.61505127]
[80.58832550 262.83432007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 196]
[8 195]
[9 194]
[10 193]
[12 192]
[13 191]
[14 190]
[15 70]
[16 69]
[18 68]
[19 67]
[20 66]
[22 65]
[23 64]
[24 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[42 50]
[43 49]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 95]
[78 94]
[79 93]
[80 92]
[110 168]
[111 167]
[112 166]
[113 165]
[114 164]
[115 163]
[116 162]
[117 161]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[126 149]
[127 148]
[129 146]
[130 145]
[132 144]
[133 143]
[134 142]
[135 141]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
[198 209]
[199 208]
[200 207]
[201 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
