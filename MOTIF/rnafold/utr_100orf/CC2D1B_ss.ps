%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGGGUCACGUGUUGCGCGCGAGCCACCUCCCCUGCUGGCGCUUCCUGUCGCUACCGCUGCGGCCCAGGGCCCGCGGGAGCCCAGGGCGGUGCCGGGUGAGACAAGGCCGGGGUUUGGCUCGGAUUCACCGCGAGGUAUCUAGGCUGCCAUGAUGCCAGGGCCAAGACCUCGGAAGGGCCCUCAGGCCAGAGGCCAAGGGGUGGCCGCUGCCAAGCAGAUGGGGCUCUUUAUGGAGUUUGGCCCUGAGG\
) } def
/len { sequence length } bind def

/coor [
[93.57696533 142.98185730]
[75.67079926 137.80078125]
[70.01704407 151.69448853]
[64.36328125 165.58819580]
[58.70952606 179.48190308]
[62.98889160 191.63111877]
[58.01384735 203.07705688]
[46.94474792 207.91445923]
[41.11822510 221.73658752]
[42.88749695 237.45855713]
[30.81404495 246.18099976]
[24.98752213 260.00314331]
[19.16100121 273.82528687]
[13.33447838 287.64743042]
[12.75356674 304.59143066]
[-3.68906069 308.72378540]
[-12.21169281 294.06768799]
[-0.48766470 281.82092285]
[5.33885717 267.99877930]
[11.16537952 254.17662048]
[16.99190140 240.35447693]
[14.80587864 225.62117004]
[27.29608345 215.91007996]
[33.12260437 202.08793640]
[30.01566315 184.80476379]
[44.81582260 173.82814026]
[50.46957779 159.93443298]
[56.12333679 146.04074097]
[61.77709579 132.14703369]
[53.95556641 119.34766388]
[39.01264572 118.04032898]
[24.06972694 116.73299408]
[9.11894703 115.51882935]
[-5.83910990 114.39787292]
[-20.79716682 113.27692413]
[-24.58920479 115.26715851]
[-28.43210030 115.89988708]
[-31.89734459 115.32331085]
[-34.64725494 113.80835724]
[-36.46683121 111.70893860]
[-51.35042191 109.84378052]
[-66.23400879 107.97863007]
[-81.11759949 106.11347198]
[-96.00118256 104.24831390]
[-110.88477325 102.38316345]
[-125.77970123 100.61081696]
[-140.68537903 98.93135071]
[-155.59106445 97.25187683]
[-170.49674988 95.57241058]
[-185.40243530 93.89294434]
[-195.93853760 101.30286407]
[-208.30410767 99.61379242]
[-215.95866394 90.26856995]
[-230.84225464 88.40341949]
[-245.72584534 86.53826141]
[-260.38101196 92.49954987]
[-272.04742432 83.23973846]
[-286.93099976 81.37458801]
[-301.81460571 79.50942993]
[-316.69818115 77.64427185]
[-324.85903931 84.78465271]
[-335.38330078 86.23983765]
[-344.77941895 81.76988983]
[-350.06253052 73.06115723]
[-364.89498901 70.82552338]
[-379.72744751 68.58988953]
[-394.55993652 66.35425568]
[-411.12329102 69.97235870]
[-419.18521118 55.05787277]
[-407.08535767 43.18228531]
[-392.32427979 51.52179337]
[-377.49182129 53.75742722]
[-362.65936279 55.99306107]
[-347.82690430 58.22869492]
[-330.36645508 49.88562012]
[-314.83303833 62.76068497]
[-299.94943237 64.62583923]
[-285.06585693 66.49099731]
[-270.18225098 68.35615540]
[-256.59167480 62.26145554]
[-243.86068726 71.65467072]
[-228.97709656 73.51982880]
[-214.09352112 75.38498688]
[-198.29780579 67.71318817]
[-183.72296143 78.98726654]
[-168.81727600 80.66673279]
[-153.91159058 82.34619904]
[-139.00592041 84.02566528]
[-124.10022736 85.70513153]
[-117.12018585 83.33727264]
[-109.01961517 87.49957275]
[-94.13603210 89.36473083]
[-79.25244141 91.22988129]
[-64.36885071 93.09503937]
[-49.48526382 94.96019745]
[-34.60167694 96.82534790]
[-19.67621613 98.31887054]
[-4.71815872 99.43981934]
[10.23989868 100.56076813]
[17.12652206 97.93357086]
[25.37706184 101.79007721]
[40.31998444 103.09741211]
[55.26290512 104.40474701]
[56.34405136 92.39732361]
[60.54281998 81.28031158]
[67.46571350 71.83460999]
[76.53170013 64.69700623]
[87.02011871 60.31751633]
[98.12757874 58.93170547]
[109.02929688 60.54956436]
[115.02767944 46.80112839]
[121.02606201 33.05269623]
[127.02443695 19.30426216]
[133.02282715 5.55582857]
[139.02119446 -8.19260502]
[145.01957703 -21.94104004]
[151.01795959 -35.68947220]
[157.01634216 -49.43790817]
[162.92890930 -63.22346497]
[168.75543213 -77.04560852]
[174.58195496 -90.86775208]
[180.40847778 -104.68989563]
[186.23500061 -118.51203918]
[191.97525024 -132.37022400]
[197.62899780 -146.26393127]
[191.73422241 -160.68229675]
[197.66586304 -174.69195557]
[211.44789124 -180.22286987]
[217.10165405 -194.11657715]
[222.75541687 -208.01028442]
[216.86062622 -222.42864990]
[222.79226685 -236.43829346]
[236.57431030 -241.96920776]
[242.22805786 -255.86291504]
[241.70748901 -262.41110229]
[244.18409729 -267.48919678]
[248.19985962 -270.02969360]
[254.19824219 -283.77810669]
[260.19662476 -297.52655029]
[254.19007874 -312.14492798]
[260.35659790 -326.69656372]
[275.03765869 -332.54821777]
[289.52325439 -326.22817993]
[295.21936035 -311.48608398]
[288.74655151 -297.06808472]
[273.94503784 -291.52816772]
[267.94668579 -277.77972412]
[261.94830322 -264.03131104]
[256.12176514 -250.20916748]
[250.46801758 -236.31546021]
[256.47222900 -222.73292542]
[250.93643188 -208.56219482]
[236.64912415 -202.35652161]
[230.99536133 -188.46281433]
[225.34159851 -174.56910706]
[231.34580994 -160.98658752]
[225.81002808 -146.81585693]
[211.52270508 -140.61016846]
[205.86895752 -126.71646881]
[206.25782776 -119.35600281]
[200.05714417 -112.68551636]
[194.23062134 -98.86337280]
[188.40409851 -85.04122925]
[182.57757568 -71.21908569]
[176.75105286 -57.39694214]
[177.04814148 -50.03219604]
[170.76477051 -43.43952560]
[164.76638794 -29.69109344]
[158.76802063 -15.94265842]
[152.76963806 -2.19422507]
[146.77125549 11.55420876]
[140.77287292 25.30264282]
[134.77449036 39.05107498]
[128.77610779 52.79951096]
[122.77773285 66.54794312]
[129.25979614 72.04057312]
[134.45228577 78.76547241]
[138.12634277 86.42624664]
[140.12005615 94.68525696]
[140.34553528 103.17850494]
[138.79286194 111.53166962]
[135.53044128 119.37659454]
[147.14041138 128.87442017]
[158.75039673 138.37223816]
[170.36036682 147.87005615]
[181.97033691 157.36787415]
[193.58030701 166.86569214]
[205.19027710 176.36351013]
[216.85922241 185.78877258]
[228.58670044 195.14112854]
[240.31416321 204.49346924]
[252.04164124 213.84580994]
[263.76910400 223.19816589]
[279.26599121 221.62184143]
[291.02609253 231.27351379]
[292.43334961 246.05712891]
[304.16082764 255.40948486]
[315.88830566 264.76184082]
[327.73144531 273.96725464]
[339.68844604 283.02432251]
[351.64541626 292.08139038]
[363.60241699 301.13845825]
[375.55938721 310.19552612]
[387.51638794 319.25256348]
[400.35922241 318.26348877]
[410.12750244 326.03143311]
[411.93518066 337.97537231]
[423.77832031 347.18078613]
[435.62145996 356.38619995]
[447.52175903 365.51763916]
[459.47875977 374.57470703]
[471.43576050 383.63177490]
[483.39273071 392.68884277]
[499.66943359 397.43283081]
[499.61666870 414.38668823]
[483.31076050 419.02929688]
[474.33566284 404.64581299]
[462.37869263 395.58874512]
[450.42169189 386.53167725]
[438.46472168 377.47460938]
[431.25439453 375.94522095]
[426.41604614 368.22937012]
[414.57290649 359.02392578]
[402.72973633 349.81851196]
[385.23135376 348.34637451]
[378.45932007 331.20956421]
[366.50231934 322.15249634]
[354.54534912 313.09542847]
[342.58834839 304.03836060]
[330.63137817 294.98129272]
[318.67437744 285.92422485]
[313.92913818 285.67279053]
[309.28503418 282.45520020]
[306.53594971 276.48928833]
[294.80847168 267.13696289]
[283.08099365 257.78460693]
[268.35488892 259.70227051]
[256.32833862 250.38473511]
[254.41676331 234.92562866]
[242.68930054 225.57328796]
[230.96182251 216.22094727]
[219.23434448 206.86859131]
[207.50688171 197.51625061]
[200.33692932 195.80757141]
[195.69245911 187.97348022]
[184.08248901 178.47566223]
[172.47251892 168.97784424]
[160.86254883 159.48002625]
[149.25257874 149.98220825]
[137.64259338 140.48439026]
[126.03263092 130.98657227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 29]
[3 28]
[4 27]
[5 26]
[8 24]
[9 23]
[11 21]
[12 20]
[13 19]
[14 18]
[30 103]
[31 102]
[32 101]
[33 99]
[34 98]
[35 97]
[40 96]
[41 95]
[42 94]
[43 93]
[44 92]
[45 91]
[46 89]
[47 88]
[48 87]
[49 86]
[50 85]
[53 83]
[54 82]
[55 81]
[57 79]
[58 78]
[59 77]
[60 76]
[64 74]
[65 73]
[66 72]
[67 71]
[110 175]
[111 174]
[112 173]
[113 172]
[114 171]
[115 170]
[116 169]
[117 168]
[118 167]
[119 165]
[120 164]
[121 163]
[122 162]
[123 161]
[124 159]
[125 158]
[128 155]
[129 154]
[130 153]
[133 150]
[134 149]
[137 148]
[138 147]
[139 146]
[182 251]
[183 250]
[184 249]
[185 248]
[186 247]
[187 246]
[188 245]
[189 243]
[190 242]
[191 241]
[192 240]
[193 239]
[196 236]
[197 235]
[198 234]
[199 231]
[200 230]
[201 229]
[202 228]
[203 227]
[204 226]
[207 224]
[208 223]
[209 222]
[210 220]
[211 219]
[212 218]
[213 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
