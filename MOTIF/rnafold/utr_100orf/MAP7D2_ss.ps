%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGCACGUGCACGCCCUGCGCGCGUGCUGCGUGAGGACGCGUGCGCAUGCGGACGCGCGCGGGUUCGGUGCGGCGCGGCGGGCUUGGCAGUGCGCCUGUGCGGCCGGCGCAUCCCGAUGGAGCGCGGCGGCGGCGGCUCCGGGACGGGAUCCCGGCCUGAGGGGACUGCGCGGGGAACCUCUCUCCCAGGGAAGAUCGCAGAACCGGGCGCGGUGC\
) } def
/len { sequence length } bind def

/coor [
[71.79465485 108.26262665]
[69.83682251 99.23590088]
[70.77213287 89.80465698]
[55.78614807 90.45294952]
[40.80016327 91.10124207]
[25.81417847 91.74953461]
[10.82819462 92.39782715]
[-4.14689112 93.26200867]
[-19.10796928 94.34189606]
[-34.06904602 95.42178345]
[-49.03012466 96.50167084]
[-63.99119949 97.58155823]
[-78.95227814 98.66144562]
[-93.90518951 99.84910583]
[-108.84915161 101.14447784]
[-123.79311371 102.43984985]
[-133.94381714 114.25514221]
[-149.11756897 115.35594940]
[-160.31907654 105.60599518]
[-175.26304626 106.90136719]
[-188.34349060 115.80152130]
[-201.69139099 109.19223022]
[-216.63534546 110.48760223]
[-231.57931519 111.78297424]
[-246.51354980 113.18598938]
[-261.43728638 114.69657898]
[-276.36105347 116.20716858]
[-291.28479004 117.71775055]
[-306.20852661 119.22834015]
[-321.13226318 120.73892975]
[-336.05603027 122.24951172]
[-350.97976685 123.76010132]
[-358.23626709 135.10353088]
[-370.52102661 140.12477112]
[-383.26623535 137.19876099]
[-391.87075806 127.61159515]
[-406.81472778 128.90696716]
[-421.75866699 130.20234680]
[-436.70263672 131.49771118]
[-449.78308105 140.39785767]
[-463.13098145 133.78857422]
[-478.07495117 135.08393860]
[-493.01889038 136.37931824]
[-507.96286011 137.67469788]
[-522.90686035 138.97006226]
[-537.85076904 140.26544189]
[-552.79473877 141.56080627]
[-560.68157959 154.92408752]
[-574.93029785 161.06852722]
[-590.06195068 157.63146973]
[-600.25805664 145.93452454]
[-601.59808350 130.47541809]
[-593.56677246 117.19849396]
[-579.25225830 111.20898438]
[-564.15875244 114.80998993]
[-554.09014893 126.61684418]
[-539.14617920 125.32147217]
[-524.20220947 124.02610016]
[-509.25823975 122.73072815]
[-494.31427002 121.43535614]
[-479.37030029 120.13998413]
[-464.42636108 118.84461212]
[-452.41479492 110.03710938]
[-437.99801636 116.55374908]
[-423.05404663 115.25837708]
[-408.11007690 113.96300507]
[-393.16613770 112.66763306]
[-382.90286255 99.34159851]
[-365.84091187 97.52842712]
[-352.49035645 108.83635712]
[-337.56658936 107.32576752]
[-322.64285278 105.81518555]
[-307.71911621 104.30459595]
[-292.79537964 102.79400635]
[-277.87164307 101.28342438]
[-262.94787598 99.77283478]
[-248.02413940 98.26224518]
[-241.68920898 94.46324921]
[-232.87467957 96.83901215]
[-217.93072510 95.54364014]
[-202.98675537 94.24826813]
[-190.97521973 85.44076538]
[-176.55842590 91.95740509]
[-161.61445618 90.66203308]
[-152.25770569 79.13005066]
[-137.12084961 77.60346985]
[-125.08848572 87.49588776]
[-110.14452362 86.20051575]
[-95.20056152 84.90514374]
[-88.81154633 81.19783020]
[-80.03216553 83.70037079]
[-65.07109070 82.62048340]
[-50.11001205 81.54059601]
[-35.14893341 80.46070099]
[-20.18785667 79.38081360]
[-5.22677898 78.30092621]
[-1.48259223 75.34375763]
[4.15770435 74.70383453]
[10.17990303 77.41184235]
[25.16588593 76.76354980]
[40.15187073 76.11525726]
[55.13785553 75.46696472]
[70.12384033 74.81867218]
[81.81270599 65.41812134]
[85.66017914 50.91994858]
[89.50765228 36.42177963]
[93.35512543 21.92360878]
[89.41640472 6.60052204]
[100.15937042 -3.71635056]
[104.00685120 -18.21452141]
[107.85432434 -32.71269226]
[102.63593292 -50.37447739]
[115.49660492 -62.31800079]
[119.13475800 -76.87010956]
[122.77290344 -91.42221832]
[117.74501801 -107.03158569]
[128.94830322 -119.00733185]
[144.85778809 -115.02982330]
[149.10714722 -99.19079590]
[137.32501221 -87.78407288]
[133.68685913 -73.23196411]
[130.04872131 -58.67985153]
[136.00047302 -48.15255737]
[133.09237671 -36.00170898]
[122.35249329 -28.86521721]
[118.50502014 -14.36704636]
[114.65754700 0.13112402]
[118.87146759 14.41720581]
[107.85330200 25.77108383]
[104.00582123 40.26925278]
[100.15834808 54.76742554]
[96.31087494 69.26559448]
[116.88455963 76.90543365]
[125.79563904 95.07272339]
[140.71939087 96.58331299]
[155.64312744 98.09389496]
[170.56687927 99.60448456]
[185.50111389 101.00749969]
[200.44506836 102.30287170]
[215.39797974 103.49053192]
[230.35905457 104.57041931]
[245.33415222 105.43460083]
[260.32012939 106.08289337]
[275.30612183 106.73118591]
[290.29208374 107.37947845]
[307.73605347 97.26966858]
[323.57696533 108.36327362]
[338.57540894 108.57942963]
[353.57385254 108.79558563]
[367.48410034 101.25795746]
[380.09854126 109.17785645]
[395.09698486 109.39401245]
[410.09542847 109.61017609]
[425.09387207 109.82633209]
[439.00411987 102.28870392]
[451.61856079 110.20860291]
[466.61700439 110.42475891]
[475.13021851 99.99136353]
[487.91104126 96.41660309]
[500.23504639 100.78931427]
[507.67959595 111.30262756]
[522.67340088 111.73490143]
[536.84106445 103.47605133]
[550.94104004 111.84999084]
[550.46844482 128.24232483]
[535.90948486 135.79002380]
[522.24108887 126.72866821]
[507.24734497 126.29640198]
[495.51928711 138.35336304]
[478.36199951 138.19181824]
[466.40084839 125.42320251]
[451.40240479 125.20704651]
[438.56497192 132.76013184]
[424.87771606 124.82477570]
[409.87927246 124.60861206]
[394.88082886 124.39245605]
[379.88238525 124.17630005]
[367.04495239 131.72938538]
[353.35769653 123.79402924]
[338.35925293 123.57787323]
[323.36080933 123.36171722]
[316.70706177 131.10833740]
[306.67779541 133.97668457]
[296.51522827 130.78858948]
[289.64379883 122.36546326]
[274.65783691 121.71717072]
[259.67184448 121.06887817]
[244.68585205 120.42058563]
[240.62635803 122.92742157]
[234.94989014 122.91428375]
[229.27917480 119.53150177]
[214.31809998 118.45161438]
[207.42396545 121.10388947]
[199.14970398 117.24683380]
[184.20573425 115.95146179]
[177.27410889 118.50411987]
[169.05628967 114.52822876]
[154.13253784 113.01763916]
[139.20880127 111.50705719]
[124.28505707 109.99646759]
[122.36264038 113.76972961]
[119.85876465 117.18495178]
[116.83852386 120.15334320]
[113.38045502 122.59770966]
[117.01860809 137.14982605]
[120.65675354 151.70193481]
[124.29490662 166.25404358]
[136.07704163 177.66076660]
[131.82768250 193.49978638]
[115.91819763 197.47729492]
[104.71491241 185.50155640]
[109.74279785 169.89218140]
[106.10464478 155.34007263]
[102.46649933 140.78796387]
[98.82834625 126.23586273]
[90.60153961 125.35855865]
[82.82453918 121.89312744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 103]
[4 102]
[5 101]
[6 100]
[7 99]
[8 96]
[9 95]
[10 94]
[11 93]
[12 92]
[13 91]
[14 89]
[15 88]
[16 87]
[19 84]
[20 83]
[22 81]
[23 80]
[24 79]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[36 67]
[37 66]
[38 65]
[39 64]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[104 132]
[105 131]
[106 130]
[107 129]
[109 127]
[110 126]
[111 125]
[113 122]
[114 121]
[115 120]
[134 200]
[135 199]
[136 198]
[137 197]
[138 195]
[139 194]
[140 192]
[141 191]
[142 188]
[143 187]
[144 186]
[145 185]
[147 181]
[148 180]
[149 179]
[151 177]
[152 176]
[153 175]
[154 174]
[156 172]
[157 171]
[161 168]
[162 167]
[204 215]
[205 214]
[206 213]
[207 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
