%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAGACUGAAGAAGAGAGCAAGGUGGGAGGGGCGCGCUGGGGAGCUUCGGCGCAUGCGCGCUGAGGCCUGCCUGACCGACCUUCAGCAGGGCUGUGGCUACCAUGUUCUCUCGCGCGGGUGUCGCUGGGCUGUCGGCCUGGACCUUGCAGCCGCAAUGGAUUCAAGUUCGAAAUAUGGCAACUUUGAAAGAUAUCACCAGGA\
) } def
/len { sequence length } bind def

/coor [
[111.35535431 226.07008362]
[97.51227570 232.72328186]
[82.19845581 231.54756165]
[69.53321838 222.85922241]
[62.92345810 208.99536133]
[64.14716339 193.68528748]
[72.87516785 181.04734802]
[86.75968170 174.48107910]
[87.90792084 159.52508545]
[89.05615997 144.56910706]
[75.92974091 139.07423401]
[65.11753845 129.82258606]
[57.65909195 117.70367432]
[54.27147675 103.88265228]
[55.28040314 89.68833923]
[41.41123962 83.97464752]
[27.54207420 78.26094818]
[13.67291164 72.54725647]
[-0.19625215 66.83356476]
[-14.06541538 61.11986923]
[-27.93457985 55.40617371]
[-41.80374146 49.69248199]
[-57.51076889 51.58980942]
[-66.33130646 39.58783340]
[-80.20046997 33.87413788]
[-94.06963348 28.16044617]
[-107.93879700 22.44675064]
[-121.80796051 16.73305702]
[-158.35005188 17.98078728]
[-173.07568359 15.12491989]
[-187.80130005 12.26905346]
[-202.52693176 9.41318703]
[-217.25254822 6.55732059]
[-232.27340698 11.52566242]
[-243.29476929 1.50673079]
[-258.02038574 -1.34913576]
[-267.37164307 8.78098488]
[-280.40420532 12.93354893]
[-293.68035889 10.12546921]
[-303.75332642 1.19513512]
[-308.06207275 -11.44397736]
[-322.74218750 -14.52516747]
[-337.42233276 -17.60635757]
[-352.51754761 -12.86878204]
[-363.38409424 -23.05543137]
[-378.06420898 -26.13662148]
[-392.76751709 -29.10523796]
[-407.49316406 -31.96110344]
[-422.21878052 -34.81697083]
[-436.94439697 -37.67283630]
[-451.67004395 -40.52870560]
[-466.39566040 -43.38457108]
[-481.12127686 -46.24043655]
[-495.84689331 -49.09630203]
[-510.57254028 -51.95217133]
[-525.89111328 -46.09790802]
[-538.44805908 -56.64570236]
[-535.32580566 -72.74488068]
[-519.73626709 -77.83399200]
[-507.71667480 -66.67779541]
[-492.99102783 -63.82192993]
[-478.26541138 -60.96606064]
[-463.53979492 -58.11019516]
[-448.81417847 -55.25432968]
[-434.08853149 -52.39846039]
[-419.36291504 -49.54259491]
[-404.63729858 -46.68672943]
[-389.91165161 -43.83086395]
[-382.74325562 -45.64435577]
[-374.98303223 -40.81675339]
[-360.30288696 -37.73556137]
[-346.25769043 -42.69352722]
[-334.34115601 -32.28648758]
[-319.66101074 -29.20529938]
[-304.98086548 -26.12410927]
[-293.17102051 -37.52294159]
[-276.72949219 -39.65947723]
[-262.10836792 -31.49559975]
[-255.16452026 -16.07476044]
[-240.43890381 -13.21889400]
[-226.47131348 -18.39150620]
[-214.39668274 -8.16830444]
[-199.67106628 -5.31243801]
[-184.94543457 -2.45657110]
[-170.21981812 0.39929548]
[-155.49418640 3.25516200]
[-145.77433777 -8.16956806]
[-150.95260620 -22.24740410]
[-156.13088989 -36.32524109]
[-167.27346802 -49.10331345]
[-158.07934570 -63.34776306]
[-141.84637451 -58.45620346]
[-142.05305481 -41.50351334]
[-136.87477112 -27.42567825]
[-131.69650269 -13.34784222]
[-124.91466522 -26.72718048]
[-110.07986450 -28.94725418]
[-99.67835236 -18.13945580]
[-102.46493530 -3.40056419]
[-116.09426880 2.86389375]
[-102.22510529 8.57758808]
[-88.35594177 14.29128170]
[-74.48677826 20.00497627]
[-60.61761475 25.71866989]
[-45.90259933 23.41266060]
[-36.09004974 35.82331848]
[-22.22088432 41.53701019]
[-8.35172176 47.25070572]
[5.51744175 52.96440125]
[19.38660622 58.67809296]
[33.25576782 64.39178467]
[47.12493134 70.10548401]
[60.99409485 75.81917572]
[76.31002808 60.69404602]
[96.83763885 54.21602631]
[118.06095123 57.81025314]
[135.31094360 70.68601227]
[148.26284790 63.11975098]
[161.21475220 55.55349350]
[174.16664124 47.98723221]
[182.17971802 34.34533691]
[197.07203674 34.60632706]
[210.02392578 27.04006767]
[222.97583008 19.47380829]
[227.03353882 -0.19946498]
[243.98587036 -10.39532471]
[262.68038940 -4.92958593]
[275.27087402 -13.08309937]
[287.86132812 -21.23661232]
[300.45181274 -29.39012527]
[313.04229736 -37.54364014]
[325.63278198 -45.69715118]
[338.22326660 -53.85066605]
[348.23150635 -67.53539276]
[364.15197754 -61.70660019]
[362.95819092 -44.79473495]
[346.37677002 -41.26018524]
[333.78628540 -33.10667038]
[321.19583130 -24.95315742]
[308.60534668 -16.79964447]
[296.01486206 -8.64613152]
[283.42437744 -0.49261793]
[270.83389282 7.66089535]
[271.47003174 17.91438675]
[267.76132202 27.58137894]
[260.31515503 34.89155579]
[250.42955017 38.47652054]
[239.86743164 37.62562561]
[230.54208374 32.42570877]
[217.59019470 39.99196625]
[204.63829041 47.55822754]
[197.55163574 60.65893555]
[181.73291016 60.93913269]
[168.78100586 68.50539398]
[155.82910156 76.07165527]
[142.87721252 83.63791656]
[145.23391724 92.24977875]
[145.87852478 101.15498352]
[144.78663635 110.01647949]
[141.99958801 118.49884796]
[137.62286377 126.28103638]
[148.35066223 136.76502991]
[159.07847595 147.24902344]
[172.33581543 142.77932739]
[186.15950012 144.45077515]
[197.85777283 151.88043213]
[205.17752075 163.56977844]
[206.73812866 177.20661926]
[202.29159546 190.12229919]
[212.85748291 200.76947021]
[223.42337036 211.41662598]
[233.98925781 222.06378174]
[244.55514526 232.71093750]
[255.12103271 243.35810852]
[269.95104980 239.36227417]
[284.78796387 243.33227539]
[295.64077759 254.20021057]
[299.59011841 269.04266357]
[295.57360840 283.86709595]
[284.67172241 294.68576050]
[269.81695557 298.58856201]
[255.00520325 294.52560425]
[244.22073364 283.58984375]
[240.36453247 268.72293091]
[244.47387695 253.92399597]
[233.90798950 243.27682495]
[223.34210205 232.62966919]
[212.77621460 221.98251343]
[202.21032715 211.33535767]
[191.64443970 200.68818665]
[176.12792969 205.19148254]
[160.36656189 201.23376465]
[148.68391418 189.80310059]
[144.33381653 173.95069885]
[148.59448242 157.97683716]
[137.86666870 147.49284363]
[127.13886261 137.00885010]
[120.00320435 141.30429077]
[112.20872498 144.23934937]
[104.01214600 145.71734619]
[102.86390686 160.67332458]
[101.71566772 175.62931824]
[114.43511963 184.23809814]
[121.13166046 198.06024170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 202]
[9 201]
[10 200]
[15 113]
[16 112]
[17 111]
[18 110]
[19 109]
[20 108]
[21 107]
[22 106]
[24 104]
[25 103]
[26 102]
[27 101]
[28 100]
[29 86]
[30 85]
[31 84]
[32 83]
[33 82]
[35 80]
[36 79]
[41 75]
[42 74]
[43 73]
[45 71]
[46 70]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[87 95]
[88 94]
[89 93]
[117 156]
[118 155]
[119 154]
[120 153]
[122 151]
[123 150]
[124 149]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[161 197]
[162 196]
[163 195]
[169 190]
[170 189]
[171 188]
[172 187]
[173 186]
[174 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
