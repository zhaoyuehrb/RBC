%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAGGGCCUGGGCGGCCGCACUGAGAGCUUUACGCCCGGAGGCGUCGGCGCUGCCACUGGCCCGCGACGGGAACGGGGCGAAAAGGCGGCGGCACCAUGUUCUCCCUCAAGCCGCCCAAACCCACCUUCAGGUCCUACCUCCUGCCACCGCCCCAGACUGACGAUAAGAUCAAUUCGGAACCGAAGAUUAAAAAAC\
) } def
/len { sequence length } bind def

/coor [
[57.16129303 129.77685547]
[52.73637772 120.92244720]
[50.09887695 111.47723389]
[49.31127930 101.79460144]
[50.36754608 92.23007965]
[53.19454956 83.12827301]
[40.01135254 75.97262573]
[26.82815361 68.81697845]
[11.84630203 73.08100128]
[-1.42140079 65.63636017]
[-5.39416647 51.32717896]
[-18.57736397 44.17153168]
[-31.76056290 37.01588440]
[-44.94375992 29.86023712]
[-58.12696075 22.70458984]
[-71.31015778 15.54894161]
[-84.49335480 8.39329529]
[-97.67655182 1.23764777]
[-109.50981903 10.73762417]
[-124.03955841 14.97196007]
[-139.04296875 13.32530689]
[-152.23715210 6.07954311]
[-161.62651062 -5.63389587]
[-165.80456543 -20.01058769]
[-164.16453552 -34.85105896]
[-177.34773254 -42.00670624]
[-190.53094482 -49.16235352]
[-203.71414185 -56.31800079]
[-216.89733887 -63.47364807]
[-230.08053589 -70.62929535]
[-240.48098755 -64.19214630]
[-252.52925110 -62.90990448]
[-263.83471680 -66.93672180]
[-272.19754028 -75.38320923]
[-286.56234741 -71.06436157]
[-300.92715454 -66.74550629]
[-315.29196167 -62.42665863]
[-329.65673828 -58.10781097]
[-340.49645996 -45.80199814]
[-356.51788330 -49.30136871]
[-361.23959351 -65.00606537]
[-349.80426025 -76.76045227]
[-333.97561646 -72.47261047]
[-319.61080933 -76.79145813]
[-305.24600220 -81.11031342]
[-290.88119507 -85.42916107]
[-276.51638794 -89.74800873]
[-275.82257080 -95.95970917]
[-273.69940186 -101.83838654]
[-284.67599487 -112.06162262]
[-300.04794312 -115.80517578]
[-304.08804321 -130.14138794]
[-315.06463623 -140.36462402]
[-326.04119873 -150.58786011]
[-337.01779175 -160.81109619]
[-347.99438477 -171.03433228]
[-358.97094727 -181.25756836]
[-374.34289551 -185.00112915]
[-378.38299561 -199.33734131]
[-389.35958862 -209.56057739]
[-404.01361084 -205.17794800]
[-418.79617310 -208.69543457]
[-429.76040649 -219.07095337]
[-434.03060913 -233.44528198]
[-430.55587769 -247.92948914]
[-441.53247070 -258.15270996]
[-452.50906372 -268.37594604]
[-468.08114624 -267.99139404]
[-479.06732178 -278.51559448]
[-479.33798218 -293.36355591]
[-490.31457520 -303.58679199]
[-506.40835571 -306.73669434]
[-511.47067261 -322.33493042]
[-500.29385376 -334.33535767]
[-484.37564087 -330.39300537]
[-480.09133911 -314.56338501]
[-469.11474609 -304.34014893]
[-454.28500366 -305.12411499]
[-443.00756836 -294.91265869]
[-442.28582764 -279.35253906]
[-431.30923462 -269.12930298]
[-420.33264160 -258.90606689]
[-406.13162231 -263.40011597]
[-391.49044800 -260.16101074]
[-380.36285400 -249.96087646]
[-375.80493164 -235.46528625]
[-379.13635254 -220.53715515]
[-368.15975952 -210.31391907]
[-353.57296753 -207.30160522]
[-348.74771118 -192.23416138]
[-337.77114868 -182.01092529]
[-326.79455566 -171.78768921]
[-315.81796265 -161.56443787]
[-304.84140015 -151.34120178]
[-293.86480713 -141.11796570]
[-279.27798462 -138.10565186]
[-274.45275879 -123.03820801]
[-263.47616577 -112.81497192]
[-243.46330261 -116.10506439]
[-226.66670227 -104.27764893]
[-222.92488098 -83.81249237]
[-209.74168396 -76.65684509]
[-196.55848694 -69.50119781]
[-183.37528992 -62.34555054]
[-170.19209290 -55.18990326]
[-157.00889587 -48.03425598]
[-145.45834351 -57.49544144]
[-131.12663269 -61.82530975]
[-116.18871307 -60.33425140]
[-102.92396545 -53.21849442]
[-93.36845398 -41.53492355]
[-89.00238800 -27.04421997]
[-90.52090454 -11.94555092]
[-77.33770752 -4.78990316]
[-64.15451050 2.36574388]
[-50.97131348 9.52139091]
[-37.78811264 16.67703819]
[-24.60491562 23.83268547]
[-11.42171764 30.98833275]
[1.76148057 38.14397812]
[15.92471981 33.67875290]
[29.39629364 40.74779892]
[33.98379898 55.63378143]
[47.16699982 62.78942871]
[60.35019684 69.94507599]
[74.05152893 56.23221207]
[92.32406616 48.55969238]
[112.57446289 48.37116623]
[131.79216003 56.02175140]
[146.99696350 70.67709351]
[155.70022583 90.39279175]
[169.84445190 85.39871216]
[183.98867798 80.40463257]
[198.13290405 75.41055298]
[202.42443848 60.49873352]
[214.68199158 50.98389435]
[230.19226074 50.52468109]
[242.99125671 59.29767227]
[248.15748596 73.92947388]
[243.70443726 88.79386139]
[231.34440613 98.17517090]
[215.83004761 98.46610260]
[203.12698364 89.55477905]
[188.98275757 94.54885864]
[174.83853149 99.54293823]
[160.69430542 104.53701782]
[158.30921936 111.64766693]
[173.11622620 114.04605865]
[187.92324829 116.44444275]
[202.73027039 118.84282684]
[217.53727722 121.24121857]
[232.34429932 123.63960266]
[247.15132141 126.03799438]
[261.70999146 122.42616272]
[276.30865479 125.87273407]
[287.71469116 135.61450195]
[293.40243530 149.49433899]
[292.11239624 164.43876648]
[284.13027954 177.13858032]
[271.22354126 184.78164673]
[256.25021362 185.67552185]
[242.52584839 179.62226868]
[233.08914185 167.96151733]
[219.83079529 160.94609070]
[206.57243347 153.93066406]
[193.31408691 146.91525269]
[180.05574036 139.89982605]
[166.79739380 132.88439941]
[153.53904724 125.86897278]
[151.15396118 132.97962952]
[159.42587280 145.49263000]
[167.69779968 158.00563049]
[175.96972656 170.51864624]
[181.71820068 173.81654358]
[184.51170349 178.77978516]
[184.29797363 183.55981445]
[192.17076111 196.32771301]
[200.04354858 209.09561157]
[207.91632080 221.86351013]
[222.59875488 229.16819763]
[223.34371948 245.55041504]
[209.38487244 254.15754700]
[195.08187866 246.13529968]
[195.14842224 229.73629761]
[187.27563477 216.96839905]
[179.40286255 204.20048523]
[171.53007507 191.43258667]
[163.45672607 178.79055786]
[155.18479919 166.27755737]
[146.91287231 153.76455688]
[138.64094543 141.25154114]
[129.86474609 147.41819763]
[120.16107178 151.76834106]
[109.89737701 154.17546082]
[99.45521545 154.58589172]
[89.21607208 153.01950073]
[79.54742432 149.56779480]
[70.78956604 144.38923645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 125]
[7 124]
[8 123]
[11 120]
[12 119]
[13 118]
[14 117]
[15 116]
[16 115]
[17 114]
[18 113]
[25 106]
[26 105]
[27 104]
[28 103]
[29 102]
[30 101]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[49 98]
[50 97]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[57 90]
[59 88]
[60 87]
[65 82]
[66 81]
[67 80]
[70 77]
[71 76]
[131 146]
[132 145]
[133 144]
[134 143]
[170 191]
[171 190]
[172 189]
[173 188]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
