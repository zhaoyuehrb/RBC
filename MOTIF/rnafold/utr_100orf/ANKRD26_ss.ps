%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGUGUCUAGCGGGAUCGCUUGCUUGGUAACCCGGAGGGAGAGAUUGGAAACCGCGGAGUUUCCUUUGGGAGGCUGCGGCCAGCCGGGGCUGACUUGUUAUGUUGGGCUCCGGAGGCCGUUAAGAGCCGAGAGAGACAUGAGGUGUCUCUGAAGCCCGGUCGCCUGGGCCAUGAAGAAGAUUUUUAGUAAGAAGGGCGAGUCGCCCUUGGGCUCCUUCGCGCGGCGGCAGAGGAGCAGCGCGGGAGGCGGGGG\
CGAGCCGGGGGAGGGCG\
) } def
/len { sequence length } bind def

/coor [
[233.25321960 330.70632935]
[225.75372314 330.62002563]
[222.66882324 345.29937744]
[219.58392334 359.97872925]
[216.49902344 374.65808105]
[213.41412354 389.33743286]
[220.94335938 403.50393677]
[214.42999268 418.16531372]
[198.87051392 422.07458496]
[186.20083618 412.23287964]
[186.14004517 396.18994141]
[198.73477173 386.25253296]
[201.81967163 371.57318115]
[204.90457153 356.89382935]
[207.98947144 342.21447754]
[211.07437134 327.53512573]
[212.52128601 299.61184692]
[228.43113708 285.71249390]
[219.69836426 273.51666260]
[210.96557617 261.32083130]
[202.23280334 249.12498474]
[193.50001526 236.92913818]
[184.76724243 224.73330688]
[168.40950012 218.33477783]
[166.80848694 199.97326660]
[157.93592834 187.87872314]
[149.06338501 175.78417969]
[140.19084167 163.68963623]
[126.42401886 158.00424194]
[124.49978638 142.30047607]
[115.62724304 130.20593262]
[106.75469208 118.11139679]
[92.37117767 113.85530090]
[78.34593201 119.17437744]
[64.32068634 124.49345398]
[50.29544449 129.81253052]
[36.27019882 135.13159180]
[22.24495697 140.45066833]
[8.21971226 145.76974487]
[-5.80553102 151.08882141]
[-19.83077431 156.40789795]
[-33.85601807 161.72695923]
[-47.88126373 167.04603577]
[-50.37373352 183.40931702]
[-60.72731018 196.20265198]
[-76.03543091 201.98544312]
[-92.07621002 199.26434326]
[-104.47670746 188.87744141]
[-118.43981171 194.35755920]
[-132.40292358 199.83767700]
[-144.93817139 211.25274658]
[-159.37724304 202.36737061]
[-154.83624268 186.03288269]
[-137.88304138 185.87457275]
[-123.91992950 180.39445496]
[-109.95682526 174.91433716]
[-108.82121277 161.32431030]
[-101.91463470 149.48858643]
[-90.53236389 141.73970032]
[-76.85801697 139.63305664]
[-63.54471970 143.63491821]
[-53.20033646 153.02079773]
[-39.17509079 147.70172119]
[-25.14984703 142.38264465]
[-11.12460423 137.06356812]
[2.90063930 131.74450684]
[16.92588234 126.42543030]
[30.95112610 121.10635376]
[44.97637177 115.78727722]
[59.00161362 110.46820831]
[73.02685547 105.14913177]
[87.05210114 99.83006287]
[55.47083282 95.20996094]
[24.92247581 84.68773651]
[14.22472763 74.17307281]
[3.52697873 63.65840530]
[-7.17076969 53.14374161]
[-18.10766220 42.87805176]
[-29.27790451 32.86677551]
[-40.44814682 22.85549736]
[-51.61839294 12.84422016]
[-62.78863525 2.83294320]
[-73.95887756 -7.17833376]
[-86.83268738 -7.24912596]
[-95.92687225 -15.78660202]
[-96.75376129 -27.83163834]
[-107.80805969 -37.97079086]
[-118.86236572 -48.10994720]
[-129.91665649 -58.24910355]
[-140.97096252 -68.38825989]
[-152.02526855 -78.52741241]
[-163.07955933 -88.66656494]
[-174.13386536 -98.80571747]
[-192.21107483 -102.40051270]
[-196.78669739 -119.35871124]
[-207.95693970 -129.36999512]
[-223.41065979 -126.97906494]
[-236.75889587 -135.12513733]
[-241.69902039 -149.96188354]
[-235.89846802 -164.48385620]
[-222.09606934 -171.83421326]
[-206.80889893 -168.54234314]
[-197.25508118 -156.16256714]
[-197.94566345 -140.54023743]
[-186.77542114 -130.52896118]
[-174.70719910 -130.88232422]
[-165.32240295 -122.66537476]
[-163.99470520 -109.86002350]
[-152.94041443 -99.72086334]
[-141.88610840 -89.58171082]
[-130.83180237 -79.44255829]
[-119.77751160 -69.30339813]
[-108.72320557 -59.16424561]
[-97.66890717 -49.02509308]
[-86.61460876 -38.88593674]
[-69.29061890 -35.98831940]
[-63.94760132 -18.34857750]
[-52.77735901 -8.33730030]
[-41.60711670 1.67397690]
[-30.43687248 11.68525410]
[-19.26662827 21.69653130]
[-8.09638500 31.70780754]
[-5.32806635 31.70996094]
[-2.39343834 32.78844452]
[0.30486852 35.01203537]
[2.34666467 38.30518341]
[3.34389520 42.44599152]
[14.04164410 52.96065521]
[24.73939133 63.47532272]
[35.43714142 73.98999023]
[42.55116272 71.61497498]
[45.55152130 56.91810989]
[56.77920914 66.86495972]
[63.89323425 64.48994446]
[66.12886810 49.65748596]
[68.36450195 34.82502365]
[70.60013580 19.99255943]
[72.83576965 5.16009760]
[75.07140350 -9.67236519]
[77.30703735 -24.50482750]
[79.54267120 -39.33728790]
[75.92456818 -55.90067291]
[90.83905029 -63.96258163]
[102.71463776 -51.86271667]
[94.37513733 -37.10165405]
[92.13950348 -22.26919365]
[89.90386963 -7.43673086]
[87.66823578 7.39573145]
[85.43260193 22.22819328]
[83.19696045 37.06065750]
[80.96132660 51.89311981]
[78.72569275 66.72557831]
[85.67525482 69.54579926]
[97.50955200 60.32899857]
[99.57437897 75.18622589]
[106.52393341 78.00644684]
[115.25671387 65.81060028]
[123.98949432 53.61476135]
[132.72227478 41.41891861]
[141.45506287 29.22307777]
[150.18783569 17.02723694]
[151.25000000 0.66252321]
[166.07115173 -6.35639000]
[179.40458679 3.19095325]
[177.53398132 19.48306465]
[162.38368225 25.76001740]
[153.65089417 37.95586014]
[144.91812134 50.15169907]
[136.18533325 62.34754181]
[127.45256042 74.54338074]
[118.71977997 86.73922729]
[132.23051453 80.22308350]
[141.82942200 68.69656372]
[155.20645142 61.91017151]
[170.17709351 60.97214890]
[184.29661560 66.03567505]
[195.25924683 76.27386475]
[201.27479553 90.01480103]
[201.36088562 105.01455688]
[195.50346375 118.82363129]
[184.65907288 129.18698120]
[170.59860229 134.41224670]
[155.61817932 133.64611816]
[142.16413879 127.01373291]
[132.43406677 115.59909058]
[118.84923553 109.23885345]
[127.72177887 121.33339691]
[136.59432983 133.42793274]
[150.99577332 139.97842407]
[152.28538513 154.81709290]
[161.15792847 166.91163635]
[170.03047180 179.00617981]
[178.90301514 191.10072327]
[191.48707581 193.81762695]
[198.63104248 204.04290771]
[196.96307373 216.00051880]
[205.69586182 228.19636536]
[214.42863464 240.39219666]
[223.16142273 252.58804321]
[231.89419556 264.78387451]
[240.62698364 276.97973633]
[269.61856079 273.24206543]
[291.41412354 307.54235840]
[303.85614014 315.92071533]
[316.29812622 324.29907227]
[328.74011230 332.67739868]
[341.18209839 341.05575562]
[353.62411499 349.43411255]
[366.06610107 357.81246948]
[378.50808716 366.19082642]
[390.95010376 374.56915283]
[403.71109009 372.86715698]
[413.89392090 380.07150269]
[416.37097168 391.88806152]
[428.71572876 400.40902710]
[441.06048584 408.92999268]
[453.40524292 417.45098877]
[459.89465332 418.35461426]
[464.31195068 421.85601807]
[465.93298340 426.31280518]
[478.07836914 435.11560059]
[490.22375488 443.91842651]
[502.36914062 452.72122192]
[514.51452637 461.52404785]
[530.22912598 463.35787964]
[535.99365234 477.09176636]
[548.13903809 485.89459229]
[562.47106934 480.18521118]
[577.61022949 483.15310669]
[588.72576904 493.85119629]
[592.27062988 508.86575317]
[587.11376953 523.40570068]
[574.90069580 532.83142090]
[559.52850342 534.13513184]
[545.90246582 526.90087891]
[538.37054443 513.43707275]
[539.33624268 498.03997803]
[527.19079590 489.23715210]
[512.34497070 488.03295898]
[505.71173096 473.66943359]
[493.56634521 464.86660767]
[481.42095947 456.06381226]
[469.27557373 447.26101685]
[457.13015747 438.45819092]
[444.88427734 429.79574585]
[432.53952026 421.27474976]
[420.19476318 412.75378418]
[407.85000610 404.23281860]
[390.29208374 403.74749756]
[382.57174683 387.01116943]
[370.12973022 378.63281250]
[357.68774414 370.25445557]
[345.24575806 361.87609863]
[332.80377197 353.49777222]
[320.36175537 345.11941528]
[307.91976929 336.74105835]
[295.47778320 328.36270142]
[283.03576660 319.98434448]
[270.49819946 328.21896362]
[273.24444580 342.96542358]
[275.99072266 357.71188354]
[289.69567871 365.24240112]
[295.30554199 379.83908081]
[290.17150879 394.60986328]
[276.71771240 402.58041382]
[261.29663086 399.98727417]
[251.18962097 388.05487061]
[251.16889954 372.41729736]
[261.24426270 360.45816040]
[258.49798584 345.71170044]
[255.75173950 330.96524048]
[248.25222778 330.87893677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[18 201]
[19 200]
[20 199]
[21 198]
[22 197]
[23 196]
[25 193]
[26 192]
[27 191]
[28 190]
[30 188]
[31 187]
[32 186]
[33 72]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[48 56]
[49 55]
[50 54]
[74 130]
[75 129]
[76 128]
[77 127]
[78 122]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[93 108]
[95 105]
[96 104]
[134 152]
[135 151]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
[141 145]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
[161 166]
[203 258]
[204 257]
[205 256]
[206 255]
[207 254]
[208 253]
[209 252]
[210 251]
[211 250]
[214 248]
[215 247]
[216 246]
[217 245]
[220 244]
[221 243]
[222 242]
[223 241]
[224 240]
[226 238]
[227 237]
[259 271]
[260 270]
[261 269]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
