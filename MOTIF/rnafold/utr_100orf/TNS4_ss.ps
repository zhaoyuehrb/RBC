%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUCUGAGUCGUCUUGGUCCCAGGAGCCAGUAGUGAAGGCAACAGUCUGCCCACCUGUGGACACCAGAUCCUGGGAGCUCCUGGUUAGCAAGUGAGAUCUCUGGGAUGUCAGUGAGGCUGGUUGAAGACCAGAGGUAAACUGCAGAGGUCACCACCCCCACCAUGUCCCAGGUGAUGUCCAGCCCACUGCUGGCAGGAGGCCAUGCUGUCAGCUUGGCGCCUUGUGAUGAGCCCAGGAGGACCCUGCACCCAG\
CACCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[97.37357330 137.24241638]
[93.33406830 151.68826294]
[89.29455566 166.13410950]
[85.25505066 180.57995605]
[81.21554565 195.02578735]
[88.70945740 208.68151855]
[84.40703583 223.27412415]
[71.34220123 230.33425903]
[67.30269623 244.78010559]
[71.89664459 260.52264404]
[60.36619949 272.18374634]
[44.57289886 267.76742554]
[40.76353455 251.81686401]
[52.85685349 240.74060059]
[56.89635849 226.29475403]
[49.38863373 213.48188782]
[53.27947998 198.77420044]
[66.76970673 190.98628235]
[70.80921173 176.54043579]
[74.84871674 162.09460449]
[78.88822174 147.64875793]
[82.92772675 133.20291138]
[73.09686279 125.88661957]
[66.16445923 115.78138733]
[62.87739182 103.97591400]
[63.58979797 91.74209595]
[68.22492218 80.39794922]
[76.28339386 71.16567230]
[69.27623749 57.90295029]
[62.26908112 44.64023209]
[55.26192093 31.37751198]
[48.25476456 18.11479187]
[41.24760818 4.85207129]
[34.24044800 -8.41064835]
[27.23329163 -21.67336845]
[20.22613335 -34.93608856]
[13.21897602 -48.19880676]
[-0.06739815 -47.42385101]
[-12.57849312 -51.65007401]
[-22.51655769 -60.18851089]
[-35.90177917 -53.41829300]
[-49.28700256 -46.64807510]
[-62.67222214 -39.87786102]
[-67.36178589 -24.78536034]
[-81.38851166 -17.50342369]
[-96.43058777 -22.35229301]
[-103.56381226 -36.45522308]
[-98.55618286 -51.44519043]
[-84.37862396 -58.42891693]
[-69.44243622 -53.26308060]
[-56.05721664 -60.03329849]
[-42.67199707 -66.80351257]
[-29.28677368 -73.57373047]
[-30.27204132 -80.01663208]
[-30.01712990 -86.52944183]
[-28.53129959 -92.87561798]
[-25.86851311 -98.82467651]
[-22.12548256 -104.16053772]
[-17.43815613 -108.68940735]
[-11.97677612 -112.24679565]
[-15.84474564 -126.73950958]
[-19.71271515 -141.23222351]
[-23.58068657 -155.72494507]
[-27.44865608 -170.21766663]
[-31.31662560 -184.71037292]
[-42.35083389 -196.04866028]
[-38.15711594 -210.34068298]
[-42.02508545 -224.83340454]
[-45.66486740 -228.48263550]
[-47.39059448 -232.73439026]
[-47.29048157 -236.76698303]
[-45.76311111 -239.91038513]
[-49.11330795 -254.53146362]
[-52.46350479 -269.15255737]
[-55.81369781 -283.77365112]
[-59.16389465 -298.39474487]
[-62.51409149 -313.01580811]
[-65.86428833 -327.63690186]
[-75.97628784 -330.85263062]
[-83.79337311 -337.90835571]
[-87.96061707 -347.49133301]
[-87.79301453 -357.85928345]
[-83.38717651 -367.15692139]
[-75.59215546 -373.74810791]
[-78.42034149 -388.47909546]
[-81.24852753 -403.21005249]
[-84.07671356 -417.94100952]
[-96.58993530 -420.98297119]
[-106.99221802 -428.49481201]
[-113.76593781 -439.33718872]
[-115.93927765 -451.88818359]
[-113.22553253 -464.28576660]
[-106.06038666 -474.70419312]
[-95.53237915 -481.62277222]
[-98.01052856 -496.41665649]
[-100.48867798 -511.21054077]
[-112.52962494 -525.16259766]
[-105.70977020 -541.34747314]
[-108.36312866 -556.11090088]
[-111.01647949 -570.87438965]
[-113.66983032 -585.63781738]
[-116.32318878 -600.40130615]
[-118.97653961 -615.16473389]
[-121.62989807 -629.92822266]
[-124.28324890 -644.69165039]
[-133.54069519 -632.88909912]
[-148.41873169 -630.98022461]
[-160.35585022 -640.06347656]
[-162.48286438 -654.91192627]
[-153.57579041 -666.98101807]
[-138.76017761 -669.32574463]
[-126.56121063 -660.59606934]
[-128.15861511 -675.51080322]
[-129.75601196 -690.42547607]
[-131.35340881 -705.34020996]
[-147.60536194 -712.09991455]
[-158.12509155 -726.10058594]
[-160.07460022 -743.41424561]
[-153.00457764 -759.24066162]
[-138.95382690 -769.23803711]
[-140.90437317 -784.11065674]
[-142.85491943 -798.98333740]
[-144.80546570 -813.85595703]
[-146.75601196 -828.72857666]
[-148.70655823 -843.60125732]
[-156.76123047 -858.51965332]
[-144.65559387 -870.38934326]
[-129.89859009 -862.04266357]
[-133.83392334 -845.55175781]
[-131.88337708 -830.67913818]
[-129.93283081 -815.80651855]
[-127.98228455 -800.93383789]
[-126.03173828 -786.06121826]
[-124.08119202 -771.18859863]
[-111.99156952 -767.64642334]
[-102.09603882 -759.77484131]
[-95.87981415 -748.71038818]
[-94.29280090 -736.07183838]
[-97.60459900 -723.72387695]
[-105.35947418 -713.50146484]
[-116.43871307 -706.93756104]
[-114.84130859 -692.02288818]
[-113.24391174 -677.10815430]
[-111.64651489 -662.19348145]
[-109.51979065 -647.34503174]
[-106.86643982 -632.58154297]
[-104.21308136 -617.81811523]
[-101.55973053 -603.05462646]
[-98.90637207 -588.29119873]
[-96.25302124 -573.52770996]
[-93.59967041 -558.76428223]
[-90.94631195 -544.00079346]
[-81.21025848 -536.85705566]
[-78.86341858 -524.60363770]
[-85.69480133 -513.68865967]
[-83.21665192 -498.89480591]
[-80.73850250 -484.10092163]
[-64.38053894 -478.64300537]
[-52.99655914 -465.57150269]
[-49.80449295 -448.44329834]
[-55.77658081 -431.98068237]
[-69.34574127 -420.76919556]
[-66.51755524 -406.03823853]
[-63.68937302 -391.30728149]
[-60.86118698 -376.57629395]
[-43.97177124 -366.81237793]
[-39.69336319 -347.46441650]
[-51.24320221 -330.98709106]
[-47.89300537 -316.36602783]
[-44.54280853 -301.74493408]
[-41.19261169 -287.12384033]
[-37.84241486 -272.50274658]
[-34.49222183 -257.88165283]
[-31.14202309 -243.26057434]
[-27.53236961 -228.70137024]
[-23.66440010 -214.20866394]
[-12.90685368 -203.90698242]
[-16.82390976 -188.57833862]
[-12.95594025 -174.08563232]
[-9.08796978 -159.59291077]
[-5.22000027 -145.10020447]
[-1.35203028 -130.60748291]
[2.51593971 -116.11476898]
[22.73141098 -110.71630859]
[36.12818527 -94.48250580]
[37.60995483 -73.36269379]
[26.48169518 -55.20596695]
[33.48885345 -41.94324493]
[40.49600983 -28.68052673]
[47.50317001 -15.41780663]
[54.51032639 -2.15508628]
[61.51748276 11.10763359]
[68.52464294 24.37035370]
[75.53179932 37.63307190]
[82.53895569 50.89579391]
[89.54611206 64.15851593]
[107.66275787 63.45991135]
[123.97241974 71.37799835]
[134.62902832 86.04556274]
[137.11961365 104.00379181]
[130.85685730 121.01786041]
[141.30511475 131.78047180]
[151.75338745 142.54307556]
[170.71937561 142.12211609]
[183.72187805 155.49256897]
[182.80381775 173.79949951]
[193.50431824 184.31138611]
[204.20480347 194.82325745]
[214.90528870 205.33514404]
[225.60577393 215.84701538]
[240.82000732 213.43174744]
[254.38063049 220.35725403]
[261.18258667 233.78102112]
[258.80422974 248.46031189]
[269.50473022 258.97219849]
[282.36425781 259.63256836]
[291.05853271 268.58038330]
[291.32995605 280.65310669]
[301.90509033 291.29110718]
[317.48043823 291.50595093]
[328.05355835 302.44503784]
[327.75274658 317.29241943]
[338.32788086 327.93041992]
[348.90298462 338.56842041]
[359.47811890 349.20639038]
[374.69464111 353.53860474]
[378.18017578 368.01965332]
[388.75527954 378.65765381]
[404.32104492 377.16070557]
[417.17797852 386.06204224]
[421.25540161 401.15866089]
[414.62811279 415.32244873]
[400.42529297 421.86569214]
[385.35308838 417.69885254]
[376.52813721 404.78939819]
[378.11730957 389.23275757]
[367.54217529 378.59475708]
[353.08206177 375.02346802]
[348.84011841 359.78152466]
[338.26498413 349.14352417]
[327.68988037 338.50555420]
[317.11474609 327.86755371]
[302.26583862 328.08035278]
[291.38961792 317.44256592]
[291.26708984 301.86621094]
[280.69198608 291.22824097]
[263.52117920 287.53710938]
[258.99285889 269.67266846]
[248.29237366 259.16079712]
[233.65768433 261.79977417]
[220.11509705 255.23760986]
[212.94953918 241.80227661]
[215.09390259 226.54750061]
[204.39341736 216.03562927]
[193.69291687 205.52374268]
[182.99243164 195.01187134]
[172.29194641 184.50000000]
[161.21540833 187.06811523]
[150.15588379 183.95251465]
[141.87808228 175.81236267]
[138.50868225 164.57742310]
[140.99076843 152.99134827]
[130.54251099 142.22874451]
[120.09424591 131.46612549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[8 15]
[9 14]
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[40 53]
[41 52]
[42 51]
[43 50]
[60 183]
[61 182]
[62 181]
[63 180]
[64 179]
[65 178]
[67 176]
[68 175]
[72 174]
[73 173]
[74 172]
[75 171]
[76 170]
[77 169]
[78 168]
[84 165]
[85 164]
[86 163]
[87 162]
[94 157]
[95 156]
[96 155]
[98 152]
[99 151]
[100 150]
[101 149]
[102 148]
[103 147]
[104 146]
[105 145]
[112 144]
[113 143]
[114 142]
[115 141]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[201 264]
[202 263]
[203 262]
[206 257]
[207 256]
[208 255]
[209 254]
[210 253]
[214 249]
[215 248]
[218 246]
[219 245]
[222 242]
[223 241]
[224 240]
[225 239]
[227 237]
[228 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
