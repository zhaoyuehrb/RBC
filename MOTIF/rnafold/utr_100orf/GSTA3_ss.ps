%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACACAUCAGGAGGUGGCCUUGAGAAGCUGAGCGGAGACCGGCUAGACUUUACUCAAAGAAACCAAGAGACUGUUACCAUGGCAGGGAAGCCCAAGCUUCACUACUUCAAUGGACGGGGCAGAAUGGAGCCCAUCCGGUGGCUCUUGGCUGCAGCUGGAGUGGAGUUUGAAGAGAAAU\
) } def
/len { sequence length } bind def

/coor [
[-4.01724863 484.26324463]
[-17.52236366 490.79101562]
[-32.34817505 493.07034302]
[-47.19043350 490.90066528]
[-60.74343109 484.47290039]
[-71.81488800 474.35247803]
[-79.43050385 461.43054199]
[-78.03136444 446.49594116]
[-86.41925812 458.93148804]
[-83.61282349 474.25344849]
[-92.29649353 486.74536133]
[-106.92091370 489.32644653]
[-115.30879974 501.76202393]
[-123.69669342 514.19757080]
[-132.08459473 526.63311768]
[-135.92907715 543.14544678]
[-152.86033630 544.02227783]
[-158.38992310 527.99542236]
[-144.52015686 518.24523926]
[-136.13226318 505.80969238]
[-127.74436951 493.37411499]
[-119.35647583 480.93856812]
[-122.44174194 466.41213989]
[-114.11237335 453.68121338]
[-98.85482025 450.54360962]
[-90.46692657 438.10803223]
[-99.49414825 426.12850952]
[-113.75999451 430.76376343]
[-128.02584839 435.39901733]
[-142.29168701 440.03427124]
[-156.55754089 444.66952515]
[-160.37992859 459.61587524]
[-171.69166565 470.10623169]
[-186.88322449 472.79321289]
[-201.10704041 466.81939697]
[-209.82434082 454.09100342]
[-210.25346375 438.66961670]
[-202.25749207 425.47613525]
[-188.38787842 418.72055054]
[-173.07040405 420.55859375]
[-161.19279480 430.40368652]
[-146.92694092 425.76843262]
[-132.66110229 421.13317871]
[-118.39525604 416.49792480]
[-104.12940216 411.86267090]
[-92.07154846 402.94030762]
[-83.46790314 390.65304565]
[-74.86425781 378.36575317]
[-66.26061249 366.07849121]
[-57.65696716 353.79119873]
[-49.05331802 341.50390625]
[-40.44967270 329.21664429]
[-31.84602547 316.92935181]
[-23.24238014 304.64208984]
[-14.63873291 292.35479736]
[-6.03508615 280.06750488]
[-7.82385159 268.08621216]
[-0.73261297 257.77374268]
[11.87839699 254.98127747]
[20.69517517 242.84602356]
[13.89001751 225.46975708]
[18.94097137 207.34963989]
[33.99110794 195.81729126]
[53.10051346 195.65087891]
[61.27009964 183.07081604]
[69.43968201 170.49075317]
[77.60926819 157.91070557]
[85.77885437 145.33064270]
[93.94844055 132.75057983]
[102.11802673 120.17052460]
[78.26661682 116.10277557]
[68.85430145 86.82868958]
[63.23519897 72.92092896]
[57.61610031 59.01317215]
[51.99700165 45.10541534]
[46.37790298 31.19765663]
[40.75880432 17.28989792]
[29.21929359 4.86910915]
[37.96021652 -9.65785122]
[54.33918762 -5.27998734]
[54.66656113 11.67079926]
[60.28565979 25.57855606]
[65.90476227 39.48631668]
[71.52385712 53.39407349]
[77.14295959 67.30183411]
[82.76205444 81.20958710]
[97.66629791 79.51145935]
[112.56921387 77.81349182]
[114.91573334 62.99816513]
[117.26224518 48.18284225]
[119.60876465 33.36751556]
[121.95528412 18.55219078]
[115.57640839 3.44451165]
[125.68503571 -9.46856594]
[141.88227844 -6.90317392]
[147.50581360 8.50163174]
[136.77059937 20.89870834]
[134.42408752 35.71403503]
[132.07757568 50.52935791]
[129.73104858 65.34468079]
[127.38453674 80.16001129]
[126.55507660 94.85534668]
[119.67945862 104.90460968]
[133.27407837 98.56533813]
[146.86868286 92.22605896]
[160.46330261 85.88678741]
[174.05792236 79.54751587]
[161.15197754 71.90313721]
[158.90451050 57.07246399]
[168.96612549 45.94754028]
[183.94729614 46.69881821]
[192.84544373 58.77453232]
[189.12509155 73.30648804]
[203.22047424 68.17618561]
[217.31587219 63.04588318]
[223.47624207 51.69311523]
[235.34381104 47.71907425]
[246.36793518 52.74104309]
[260.55072021 47.85752106]
[274.73348999 42.97399902]
[288.91625977 38.09047699]
[293.32406616 23.21261024]
[305.65551758 13.79373741]
[321.16891479 13.45560646]
[333.89901733 22.32823563]
[338.95089722 36.99991989]
[334.38195801 51.82909393]
[321.94906616 61.11363983]
[306.43292236 61.28346252]
[293.79977417 52.27325439]
[279.61700439 57.15677643]
[265.43423462 62.04030228]
[251.25144958 66.92382050]
[240.48643494 80.76805878]
[222.44616699 77.14127350]
[208.35078430 82.27157593]
[194.25538635 87.40187836]
[180.39720154 93.14212799]
[166.80258179 99.48140717]
[153.20796204 105.82067871]
[139.61334229 112.15995026]
[126.01873016 118.49922180]
[114.69808197 128.34011841]
[106.52849579 140.92016602]
[98.35891724 153.50022888]
[90.18933105 166.08029175]
[82.01974487 178.66033936]
[73.85015869 191.24040222]
[65.68057251 203.82046509]
[71.60998535 213.68707275]
[73.40773010 225.00498962]
[70.85050201 236.12307739]
[64.34748840 245.43392944]
[54.87548065 251.60621643]
[43.83226395 253.77499390]
[32.83042908 251.66279602]
[24.01365089 263.79806519]
[22.52737236 282.13916016]
[6.25219440 288.67117310]
[-2.35145211 300.95843506]
[-10.95509911 313.24572754]
[-19.55874443 325.53298950]
[-28.16239166 337.82028198]
[-36.76603699 350.10757446]
[-45.36968613 362.39483643]
[-53.97333145 374.68212891]
[-62.57697678 386.96939087]
[-71.18062592 399.25668335]
[-79.78427124 411.54397583]
[-66.34302521 404.88568115]
[-53.82358170 396.62350464]
[-39.43135071 392.39694214]
[-24.43243980 392.57785034]
[-10.14633656 397.15029907]
[2.17018580 405.71203613]
[11.43361950 417.50985718]
[16.82904243 431.50592041]
[17.88180923 446.46893311]
[14.49930573 461.08258057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 26]
[9 25]
[12 22]
[13 21]
[14 20]
[15 19]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 160]
[56 159]
[59 157]
[60 156]
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[70 143]
[72 86]
[73 85]
[74 84]
[75 83]
[76 82]
[77 81]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[103 142]
[104 141]
[105 140]
[106 139]
[107 138]
[113 137]
[114 136]
[115 135]
[118 133]
[119 132]
[120 131]
[121 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
