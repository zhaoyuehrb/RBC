%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUUCCUCCAACGGGCAGGUCUCAGCGCUCCUCCCCCUGCUCCGCUCCUCUGCAGGGCCCAGGCGCCCUUGGCCUUAGGACCCAACUUCUCUUACCGCCAUGGAGUUCGACCUGGGAGCAGCCCUGGAGCCCACCUCCCAGAAGCCCGGUGUGGGGGCGGGCCACGGGGGAGAUCCCAAGCUCAGUCCCCACAAAGUUC\
) } def
/len { sequence length } bind def

/coor [
[107.96340179 280.10192871]
[93.52190399 276.04690552]
[80.75699615 268.16928101]
[70.65713501 257.07907104]
[64.00441742 243.63505554]
[61.31401443 228.87831116]
[62.79425430 213.95152283]
[68.33051300 200.01057434]
[77.49407959 188.13502502]
[89.57537079 179.24443054]
[103.63884735 174.02728271]
[118.59548950 172.88757324]
[133.28709412 175.91354370]
[146.57206726 182.86804199]
[138.21427917 170.41221619]
[129.85649109 157.95640564]
[121.49871063 145.50057983]
[113.14092255 133.04475403]
[103.56679535 136.64904785]
[93.01499176 137.43655396]
[82.32461548 135.14906311]
[72.39986420 129.78044128]
[64.13388824 121.59185028]
[58.32973862 111.10388947]
[55.62509537 99.06533813]
[56.42789078 86.40026855]
[60.86881638 74.13718414]
[45.93407440 75.53487396]
[30.99933624 76.93256378]
[16.06459618 78.33025360]
[1.12985539 79.72794342]
[-4.03938723 92.72994232]
[-14.25864029 102.18997955]
[-27.49385834 106.30284882]
[-41.14394379 104.31996918]
[-52.55191422 96.68495178]
[-59.52207947 84.93592834]
[-74.47674561 86.10118866]
[-89.43141937 87.26644135]
[-104.38609314 88.43170166]
[-119.34075928 89.59696198]
[-134.29542542 90.76221466]
[-140.27529907 104.85121155]
[-152.12504578 114.53843689]
[-167.12165833 117.59783936]
[-181.81904602 113.32638550]
[-192.83985901 102.70563507]
[-197.65158081 88.17615509]
[-195.14852905 73.07670593]
[-185.90586853 60.87703705]
[-172.04751587 54.38054657]
[-156.75799561 55.08007050]
[-143.55075073 62.81487274]
[-135.46069336 75.80754852]
[-120.50601959 74.64228821]
[-105.55134583 73.47702789]
[-90.59667969 72.31177521]
[-75.64200592 71.14651489]
[-60.68733597 69.98125458]
[-54.08032990 55.23838425]
[-40.86507797 45.78301620]
[-24.59172249 44.27162552]
[-9.69098663 51.21076584]
[-0.26783368 64.79320526]
[14.66690636 63.39551163]
[29.60164642 61.99782562]
[44.53638840 60.60013580]
[59.47112656 59.20244598]
[66.93743134 46.19266891]
[60.60990524 32.59257889]
[47.77331161 23.34420586]
[49.41970062 8.54087257]
[43.09217453 -5.05921650]
[36.76464844 -18.65930557]
[30.43712234 -32.25939560]
[15.86298752 -37.75778961]
[9.63971615 -51.64035034]
[14.97141075 -65.50067902]
[8.64388466 -79.10076904]
[2.31635952 -92.70085907]
[-4.01116610 -106.30094147]
[-10.33869171 -119.90103149]
[-25.63774109 -121.88664246]
[-37.41987991 -131.84579468]
[-41.92547226 -146.60057068]
[-37.71679688 -161.44274902]
[-26.13682938 -171.63627625]
[-10.88069439 -173.92842102]
[3.18343043 -167.58775330]
[11.56773472 -154.63758850]
[11.59681702 -139.21025085]
[3.26139760 -126.22856140]
[9.58892345 -112.62847137]
[15.91644859 -99.02838135]
[22.24397469 -85.42829132]
[28.57149887 -71.82820129]
[42.60791397 -66.97901154]
[49.21866226 -53.27672195]
[44.03721237 -38.58692169]
[50.36473846 -24.98683167]
[56.69226456 -11.38674164]
[63.01978683 2.21334696]
[75.40379333 10.48895168]
[74.20999146 26.26505470]
[80.53752136 39.86514282]
[87.87281799 41.42828369]
[88.84011841 26.45950508]
[85.80648041 11.76947308]
[96.44672394 1.19661880]
[111.11718750 4.32352543]
[116.52146912 18.31615829]
[107.76267242 30.49187088]
[102.54341125 44.55456543]
[109.87870789 46.11770630]
[121.20105743 36.27877808]
[132.52339172 26.43984795]
[143.84574890 16.60091782]
[155.16809082 6.76198912]
[166.49043274 -3.07693982]
[177.81277466 -12.91586876]
[178.41064453 -31.84582901]
[192.41026306 -44.12268066]
[210.62091064 -42.30695724]
[221.63179016 -52.49325180]
[221.99560547 -68.29335022]
[233.48275757 -79.14788055]
[249.27812195 -78.61704254]
[260.01058960 -67.01576996]
[259.31280518 -51.22689438]
[247.59869385 -40.61767197]
[231.81808472 -41.48237228]
[220.80720520 -31.29607964]
[222.84561157 -20.06201935]
[219.16668701 -9.12687778]
[210.57569885 -1.24728084]
[199.13102722 1.53172469]
[187.65170288 -1.59352469]
[176.32936096 8.24540424]
[165.00701904 18.08433342]
[153.68467712 27.92326164]
[142.36231995 37.76219177]
[131.03997803 47.60112000]
[119.71763611 57.44004822]
[137.79969788 79.24211121]
[138.99790955 105.19992828]
[125.59674072 124.68697357]
[133.95452881 137.14279175]
[142.31231689 149.59861755]
[150.67008972 162.05444336]
[159.02787781 174.51025391]
[168.25727844 179.18154907]
[171.20465088 187.87982178]
[182.82751465 197.36186218]
[194.45036316 206.84390259]
[206.07322693 216.32595825]
[217.69607544 225.80799866]
[229.31893921 235.29005432]
[240.94178772 244.77209473]
[252.56465149 254.25413513]
[264.18750000 263.73617554]
[275.88372803 273.12756348]
[287.65264893 282.42770386]
[299.42156982 291.72784424]
[311.19049072 301.02798462]
[324.30303955 297.93078613]
[336.62451172 302.88107300]
[343.73779297 313.86264038]
[343.23257446 326.74218750]
[354.85543823 336.22424316]
[366.47830200 345.70626831]
[378.10116577 355.18832397]
[394.36676025 357.27694702]
[400.44024658 372.50994873]
[390.07376099 385.21694946]
[373.93142700 382.32604980]
[368.61911011 366.81118774]
[356.99624634 357.32913208]
[345.37338257 347.84707642]
[333.75054932 338.36505127]
[317.10992432 340.77734375]
[303.60534668 330.20257568]
[301.89035034 312.79690552]
[290.12142944 303.49676514]
[278.35250854 294.19662476]
[266.58358765 284.89648438]
[259.38122559 283.21463013]
[254.70545959 275.35903931]
[243.08259583 265.87698364]
[231.45974731 256.39495850]
[219.83688354 246.91290283]
[208.21403503 237.43086243]
[196.59117126 227.94880676]
[184.96832275 218.46676636]
[173.34545898 208.98472595]
[161.72261047 199.50267029]
[167.41017151 213.38256836]
[169.05267334 228.29237366]
[166.52291870 243.07751465]
[160.01683044 256.59307861]
[150.03819275 267.79251099]
[137.35971069 275.80850220]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 150]
[15 149]
[16 148]
[17 147]
[18 146]
[27 68]
[28 67]
[29 66]
[30 65]
[31 64]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[69 105]
[70 104]
[72 102]
[73 101]
[74 100]
[75 99]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[114 143]
[115 142]
[116 141]
[117 140]
[118 139]
[119 138]
[120 137]
[123 132]
[124 131]
[152 195]
[153 194]
[154 193]
[155 192]
[156 191]
[157 190]
[158 189]
[159 188]
[160 187]
[161 185]
[162 184]
[163 183]
[164 182]
[168 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
