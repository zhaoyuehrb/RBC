%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGGCCGCCAUGCGCCUCUCCUCCUCCCCACCUCGUGGCCCGCAGCAGCUCUCCAGCUUUGGCUCCGUGGACUGGCUCUCCCAGAGCAGCUGCUCAGGGCCGACCCACA\
) } def
/len { sequence length } bind def

/coor [
[-6.08052540 294.51446533]
[-23.13775253 297.77319336]
[-40.49300766 297.36196899]
[-57.36587143 293.30166626]
[-72.99812317 285.77716064]
[-82.01787567 297.76232910]
[-91.03763580 309.74749756]
[-93.75509644 318.62271118]
[-100.48227692 321.93756104]
[-109.83462524 333.66503906]
[-114.98294067 349.81838989]
[-131.93022156 349.34295654]
[-136.16485596 332.92639160]
[-121.56209564 324.31268311]
[-112.20974731 312.58520508]
[-103.02278900 300.72772217]
[-94.00303650 288.74258423]
[-84.98327637 276.75741577]
[-93.82894135 267.38116455]
[-101.09347534 256.72961426]
[-106.59581757 245.06671143]
[-110.19857788 232.68168640]
[-111.81150055 219.88180542]
[-111.39368439 206.98477173]
[-108.95465088 194.31080627]
[-104.55413818 182.17477417]
[-98.30059814 170.87828064]
[-90.34855652 160.70220947]
[-80.89479065 151.89974976]
[-70.17343140 144.69006348]
[-58.45021057 139.25286865]
[-46.01584625 135.72393799]
[-33.17882919 134.19169617]
[-20.25779152 134.69505310]
[-7.57357502 137.22233582]
[4.55872011 141.71163940]
[15.83757114 148.05230713]
[25.98252106 156.08761597]
[37.16715240 146.09242249]
[48.35178757 136.09722900]
[59.53641891 126.10202026]
[70.72105408 116.10682678]
[81.90568542 106.11162567]
[82.82289124 91.65116119]
[93.62688446 81.99612427]
[108.09912109 82.70374298]
[119.28375244 72.70854187]
[130.46838379 62.71334457]
[141.65301514 52.71814728]
[152.83764648 42.72294617]
[164.02227783 32.72774887]
[175.20690918 22.73254967]
[160.81719971 18.49746132]
[154.89170837 4.71745157]
[161.71653748 -8.64001179]
[176.35507202 -11.91310120]
[188.21887207 -2.73430085]
[188.72604370 12.25818253]
[201.19808960 3.92462921]
[213.67012024 -4.40892410]
[226.14216614 -12.74247742]
[238.61421204 -21.07603073]
[251.08625793 -29.40958405]
[263.55831909 -37.74313736]
[262.66043091 -53.01209641]
[269.48077393 -66.59073639]
[282.09820557 -74.87730408]
[297.06912231 -75.73001862]
[310.36721802 -69.01985931]
[322.83926392 -77.35340881]
[325.67633057 -92.90097046]
[338.72354126 -101.81980896]
[354.24023438 -98.81852722]
[363.02062988 -85.67774200]
[359.85546875 -70.19364166]
[346.62258911 -61.55267334]
[331.17282104 -64.88137054]
[318.70077515 -56.54781342]
[319.81118774 -41.69410706]
[313.29425049 -28.18909073]
[300.80999756 -19.70324707]
[285.65493774 -18.59838295]
[271.89184570 -25.27109337]
[259.41979980 -16.93754005]
[246.94776917 -8.60398674]
[234.47572327 -0.27043355]
[222.00367737 8.06311989]
[209.53163147 16.39667320]
[197.05958557 24.73022652]
[185.20211792 33.91718292]
[174.01747131 43.91238022]
[162.83283997 53.90758133]
[151.64820862 63.90277863]
[140.46357727 73.89797974]
[129.27894592 83.89317322]
[118.09431458 93.88837433]
[117.17710876 108.34883881]
[106.37311554 118.00387573]
[91.90087891 117.29625702]
[80.71624756 127.29145813]
[69.53161621 137.28665161]
[58.34698486 147.28186035]
[47.16235352 157.27705383]
[35.97771835 167.27224731]
[44.78404236 182.29786682]
[50.22220993 198.83726501]
[52.04990387 216.14593506]
[50.18728256 233.44525146]
[44.72045517 249.95751953]
[35.89751053 264.94091797]
[24.11724854 277.72280884]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 18]
[6 17]
[7 16]
[9 15]
[10 14]
[38 104]
[39 103]
[40 102]
[41 101]
[42 100]
[43 99]
[46 96]
[47 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[58 89]
[59 88]
[60 87]
[61 86]
[62 85]
[63 84]
[64 83]
[69 78]
[70 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
