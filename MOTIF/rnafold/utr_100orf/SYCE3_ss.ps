%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAGGGCGGGGCAUCCCUCUCGAGGAGCGGCCUUGUUCCUCAAGCGGCCGCUGGGGGCGCCAGAGCAGGACCGGAGCGCGGGCCAAGCUGGAGAUGGAUGAUGCUGACCCUGAGGAAAGAAACUAUGACAACAUGCUGAAAAUGCUGUCAGAUCUGAAUAAGGACUUGGAAAAGCUAUUAGAAGAGAUGGAGA\
) } def
/len { sequence length } bind def

/coor [
[47.95952606 141.88166809]
[40.03191376 129.42980957]
[35.03257370 115.54088593]
[33.20563126 100.89308167]
[34.64029312 86.20167542]
[20.40445518 81.47505188]
[6.16861916 76.74842834]
[-8.06721687 72.02180481]
[-22.34047508 67.40942383]
[-36.65024185 62.91157532]
[-50.96000671 58.41372681]
[-66.31198120 66.78797913]
[-82.65090179 61.57679367]
[-90.02294922 46.46709061]
[-104.40296936 42.19917679]
[-118.78298187 37.93126297]
[-133.16300964 33.66334915]
[-147.54301453 29.39543343]
[-162.97427368 32.88640594]
[-172.97402954 21.84764481]
[-187.35404968 17.57973099]
[-201.73406982 13.31181717]
[-216.11407471 9.04390335]
[-231.54533386 12.53487492]
[-241.54508972 1.49611354]
[-255.92510986 -2.77180028]
[-266.21679688 6.40785599]
[-279.59494019 9.27756310]
[-292.53961182 5.19173813]
[-301.69885254 -4.67937469]
[-304.75656128 -17.68230820]
[-319.06631470 -22.18015480]
[-333.37609863 -26.67800140]
[-347.68585205 -31.17584801]
[-361.99560547 -35.67369461]
[-376.34097290 -40.05671692]
[-390.72097778 -44.32463074]
[-405.10101318 -48.59254456]
[-419.48101807 -52.86045837]
[-433.86105347 -57.12837219]
[-448.24105835 -61.39628220]
[-462.86495972 -64.73410034]
[-477.67269897 -67.12809753]
[-490.40188599 -58.15003586]
[-505.38491821 -60.78883362]
[-513.86566162 -72.97949982]
[-528.67340088 -75.37349701]
[-543.48114014 -77.76749420]
[-558.33929443 -72.33187866]
[-569.66857910 -82.00127411]
[-584.47625732 -84.39527130]
[-598.27459717 -76.21080017]
[-613.22491455 -82.03035736]
[-617.85864258 -97.38965607]
[-608.62115479 -110.50637817]
[-592.59869385 -111.31848145]
[-582.08227539 -99.20299530]
[-567.27453613 -96.80899811]
[-553.47552490 -102.41584778]
[-541.08715820 -92.57521820]
[-526.27941895 -90.18122101]
[-511.47167969 -87.78722382]
[-499.58160400 -96.68448639]
[-484.53036499 -94.46757507]
[-475.27871704 -81.93582153]
[-460.47097778 -79.54182434]
[-469.96124268 -91.15797424]
[-470.93508911 -106.12632751]
[-463.02993774 -118.87421417]
[-449.18887329 -124.65563202]
[-434.56484985 -121.31817627]
[-424.60241699 -110.10437012]
[-423.01049805 -95.18907928]
[-430.38177490 -82.12522888]
[-443.97314453 -75.77629852]
[-429.59313965 -71.50838470]
[-415.21310425 -67.24047089]
[-400.83309937 -62.97256088]
[-386.45306396 -58.70464706]
[-372.07305908 -54.43673325]
[-364.75704956 -55.54883957]
[-357.49777222 -49.98345947]
[-343.18798828 -45.48561478]
[-328.87823486 -40.98776627]
[-314.56848145 -36.48992157]
[-300.25869751 -31.99207497]
[-287.39752197 -42.18423080]
[-270.82971191 -42.71188354]
[-257.07299805 -33.16944122]
[-251.65719604 -17.15181732]
[-237.27717590 -12.88390446]
[-222.87448120 -16.68014526]
[-211.84616089 -5.33611441]
[-197.46615601 -1.06820083]
[-183.08613586 3.19971299]
[-168.70611572 7.46762657]
[-154.30340576 3.67138577]
[-143.27510071 15.01541615]
[-128.89509583 19.28333092]
[-114.51506805 23.55124474]
[-100.13505554 27.81915855]
[-85.75503540 32.08707047]
[-75.39194489 24.41751099]
[-62.30827332 24.11646271]
[-51.28004456 31.51811981]
[-46.46215820 44.10396194]
[-32.15239334 48.60181046]
[-17.84263039 53.09965515]
[-10.50974941 52.10494995]
[-3.34059358 57.78596878]
[10.89524269 62.51259232]
[25.13107872 67.23921204]
[39.36691666 71.96583557]
[44.53712082 62.76890564]
[51.09088898 54.50072479]
[58.86472321 47.36755753]
[67.66470337 41.54733658]
[77.27130890 37.18525696]
[87.44489288 34.39013290]
[97.93167877 33.23168945]
[108.47005463 33.73882294]
[118.79714966 35.89888763]
[128.65531921 39.65799332]
[137.79867554 44.92237473]
[145.99913025 51.56069946]
[153.05209351 59.40737534]
[158.78163147 68.26665497]
[163.04483032 77.91754913]
[177.66874695 74.57973480]
[192.29266357 71.24192047]
[206.91658020 67.90411377]
[221.54051208 64.56629944]
[233.27296448 53.95215988]
[247.40284729 58.66338348]
[262.02676392 55.32556915]
[276.65069580 51.98775482]
[283.62322998 37.99069977]
[297.98220825 31.79763603]
[312.94772339 36.33274078]
[321.45355225 49.45467377]
[319.48345947 64.96765900]
[307.96771240 75.54694366]
[292.34365845 76.19731140]
[279.98849487 66.61167145]
[265.36459351 69.94948578]
[250.74066162 73.28730011]
[240.05419922 83.66269684]
[224.87832642 79.19021606]
[210.25439453 82.52803040]
[195.63047791 85.86584473]
[181.00656128 89.20365906]
[166.38264465 92.54147339]
[164.03933716 119.00653839]
[151.56561279 142.46495056]
[162.00085449 153.24018860]
[172.43609619 164.01544189]
[182.87133789 174.79067993]
[199.57756042 172.18356323]
[214.40089417 179.96650696]
[221.59631348 194.89956665]
[218.50875854 211.01655579]
[229.11535645 221.62315369]
[239.72195435 232.22976685]
[250.41322327 242.75102234]
[261.18847656 253.18626404]
[269.54125977 256.91473389]
[272.05108643 263.87615967]
[282.65768433 274.48275757]
[293.26428223 285.08935547]
[309.23608398 288.80880737]
[313.74127197 304.57699585]
[302.14532471 316.17294312]
[286.37713623 311.66772461]
[282.65768433 295.69595337]
[272.05108643 285.08935547]
[261.44448853 274.48275757]
[250.75321960 263.96148682]
[239.97798157 253.52626038]
[232.97723389 251.12832642]
[229.11535645 242.83636475]
[218.50875854 232.22976685]
[207.90214539 221.62315369]
[194.95945740 224.92655945]
[181.97123718 221.37174988]
[172.36134338 211.78486633]
[168.71771240 198.59646606]
[172.09608459 185.22590637]
[161.66085815 174.45066833]
[151.22561646 163.67543030]
[140.79037476 152.90019226]
[128.17634583 160.56713867]
[114.18645477 165.27656555]
[99.50382996 166.79849243]
[84.84543610 165.05862427]
[70.92704773 160.14190674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 113]
[6 112]
[7 111]
[8 110]
[9 108]
[10 107]
[11 106]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[20 96]
[21 95]
[22 94]
[23 93]
[25 91]
[26 90]
[31 86]
[32 85]
[33 84]
[34 83]
[35 82]
[36 80]
[37 79]
[38 78]
[39 77]
[40 76]
[41 75]
[42 66]
[43 65]
[46 62]
[47 61]
[48 60]
[50 58]
[51 57]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[134 146]
[135 145]
[136 144]
[154 190]
[155 189]
[156 188]
[157 187]
[161 182]
[162 181]
[163 180]
[164 178]
[165 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
