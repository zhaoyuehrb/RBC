%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5AC2)
} def

/sequence { (\
AUGGAUAUAUCAGAGGGAAAUAAGACUCUUGUGACAGAGUUUGUUCUCACAGGACUUACAGAUCGACCAUGGCUGCACGUCCUCUUCUUUGUUGUGUUUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 12 0.004220445 ubox
2 96 0.003203090 ubox
3 11 0.004775939 ubox
3 88 0.003684001 ubox
3 98 0.023772946 ubox
3 99 0.765635004 ubox
3 100 0.049109578 ubox
4 10 0.003501254 ubox
4 11 0.005054592 ubox
4 87 0.003982089 ubox
4 93 0.009043313 ubox
4 97 0.003963483 ubox
4 98 0.972047945 ubox
4 99 0.056619303 ubox
4 100 0.014714219 ubox
5 10 0.004513059 ubox
5 86 0.003778077 ubox
5 92 0.009540456 ubox
5 95 0.011470762 ubox
5 97 0.995738336 ubox
5 98 0.042116788 ubox
5 99 0.013349366 ubox
6 91 0.009525369 ubox
6 94 0.011632823 ubox
6 96 0.998299733 ubox
7 90 0.009203785 ubox
7 92 0.005848225 ubox
7 93 0.010919497 ubox
7 95 0.998742028 ubox
7 97 0.016524711 ubox
8 91 0.006815519 ubox
8 94 0.997712051 ubox
8 96 0.017232504 ubox
9 90 0.007199917 ubox
9 92 0.028334704 ubox
9 93 0.942879501 ubox
9 95 0.017246823 ubox
10 91 0.021456572 ubox
10 94 0.015687389 ubox
11 91 0.991960124 ubox
11 94 0.005526811 ubox
12 85 0.018218706 ubox
12 88 0.101039747 ubox
12 89 0.015069752 ubox
12 90 0.990770966 ubox
12 93 0.005537335 ubox
13 28 0.003488073 ubox
13 30 0.004291006 ubox
13 48 0.021463845 ubox
13 84 0.023295895 ubox
13 86 0.018554237 ubox
13 87 0.127119359 ubox
13 88 0.009227024 ubox
13 89 0.984490464 ubox
13 90 0.042012912 ubox
13 92 0.004639643 ubox
14 27 0.003498826 ubox
14 29 0.005716894 ubox
14 47 0.021434644 ubox
14 83 0.022210245 ubox
14 85 0.022565878 ubox
14 86 0.125613087 ubox
14 88 0.977200140 ubox
14 89 0.050910066 ubox
14 90 0.018521780 ubox
15 26 0.003506610 ubox
15 28 0.006633710 ubox
15 46 0.021268906 ubox
15 47 0.010501994 ubox
15 48 0.384313133 ubox
15 82 0.020684013 ubox
15 83 0.014053379 ubox
15 84 0.023067670 ubox
15 85 0.106707124 ubox
15 86 0.030416949 ubox
15 87 0.910712076 ubox
15 88 0.053716063 ubox
15 89 0.024818382 ubox
16 26 0.003717540 ubox
16 27 0.008880657 ubox
16 29 0.024868119 ubox
16 45 0.018172094 ubox
16 46 0.041696388 ubox
16 47 0.587534724 ubox
16 48 0.247705803 ubox
16 64 0.004706758 ubox
16 81 0.020574587 ubox
16 82 0.034101403 ubox
16 83 0.012670283 ubox
16 84 0.111150495 ubox
16 85 0.223105179 ubox
16 86 0.644036999 ubox
16 87 0.065544647 ubox
16 88 0.032194107 ubox
17 26 0.010040435 ubox
17 28 0.029504048 ubox
17 44 0.011632946 ubox
17 45 0.039414755 ubox
17 46 0.667920607 ubox
17 47 0.189272578 ubox
17 48 0.409598689 ubox
17 63 0.004399288 ubox
17 64 0.013163915 ubox
17 80 0.015958334 ubox
17 81 0.034466749 ubox
17 82 0.012506220 ubox
17 83 0.032600297 ubox
17 84 0.314824602 ubox
17 85 0.371759620 ubox
17 86 0.069302994 ubox
17 87 0.035462041 ubox
18 27 0.029287193 ubox
18 42 0.005871112 ubox
18 44 0.033924477 ubox
18 45 0.621419042 ubox
18 47 0.405340626 ubox
18 63 0.012935127 ubox
18 80 0.032210308 ubox
18 83 0.243880003 ubox
18 85 0.073235546 ubox
18 86 0.036634761 ubox
19 30 0.004309142 ubox
19 41 0.004163735 ubox
19 42 0.009038449 ubox
19 44 0.528844070 ubox
19 45 0.532684297 ubox
19 85 0.033661062 ubox
19 86 0.006443997 ubox
20 29 0.004728370 ubox
20 32 0.052242188 ubox
20 41 0.006047153 ubox
20 44 0.610341089 ubox
20 80 0.005546096 ubox
20 85 0.008329959 ubox
21 31 0.053454790 ubox
21 43 0.647264016 ubox
21 58 0.076515782 ubox
21 79 0.005422376 ubox
22 30 0.055662990 ubox
22 41 0.031386762 ubox
22 42 0.549625103 ubox
22 45 0.019539346 ubox
22 57 0.082583042 ubox
22 86 0.009230356 ubox
23 29 0.056525971 ubox
23 30 0.004445036 ubox
23 40 0.014845717 ubox
23 41 0.433069617 ubox
23 42 0.742717193 ubox
23 44 0.016689958 ubox
23 45 0.005668831 ubox
23 47 0.011923276 ubox
23 56 0.083695024 ubox
23 57 0.004255537 ubox
23 74 0.004223740 ubox
23 83 0.005182766 ubox
23 85 0.013695816 ubox
24 28 0.055426276 ubox
24 29 0.004346927 ubox
24 40 0.305249906 ubox
24 41 0.878627139 ubox
24 42 0.014642640 ubox
24 44 0.003324874 ubox
24 45 0.003610421 ubox
24 46 0.012347570 ubox
24 48 0.003661400 ubox
24 55 0.083224633 ubox
24 56 0.004085570 ubox
24 57 0.028237493 ubox
24 64 0.003330556 ubox
24 73 0.004242792 ubox
24 81 0.032932292 ubox
24 82 0.004769311 ubox
24 84 0.014291250 ubox
25 32 0.019351645 ubox
25 40 0.939547274 ubox
25 41 0.011715673 ubox
25 44 0.004225859 ubox
25 45 0.009410190 ubox
25 56 0.028983763 ubox
25 63 0.003298059 ubox
25 80 0.033189527 ubox
25 83 0.010788765 ubox
26 31 0.019880598 ubox
26 37 0.004462225 ubox
26 39 0.990062992 ubox
26 43 0.004618501 ubox
26 53 0.003809501 ubox
26 79 0.033142682 ubox
27 34 0.015269250 ubox
27 36 0.004135230 ubox
27 38 0.989961064 ubox
27 54 0.097404308 ubox
28 33 0.016806022 ubox
28 37 0.989686653 ubox
28 39 0.008485962 ubox
28 52 0.004408085 ubox
28 53 0.102806274 ubox
29 36 0.915528548 ubox
29 37 0.025883756 ubox
29 38 0.008643558 ubox
29 51 0.003880232 ubox
29 52 0.102890190 ubox
30 36 0.212144129 ubox
30 37 0.008748259 ubox
30 49 0.008254141 ubox
30 51 0.115137051 ubox
31 35 0.294916077 ubox
31 48 0.009418795 ubox
31 50 0.124540890 ubox
31 78 0.003730474 ubox
32 49 0.124528985 ubox
32 51 0.003914719 ubox
32 77 0.003732338 ubox
33 45 0.020995369 ubox
33 46 0.010547065 ubox
33 48 0.123569883 ubox
33 50 0.010920884 ubox
33 76 0.003732590 ubox
34 40 0.003262046 ubox
34 44 0.036452909 ubox
34 45 0.007742873 ubox
34 47 0.100291469 ubox
35 39 0.003466917 ubox
35 43 0.049883028 ubox
35 75 0.003574150 ubox
36 42 0.048563373 ubox
36 45 0.039577435 ubox
36 47 0.061634335 ubox
36 74 0.003565926 ubox
37 41 0.032958795 ubox
37 44 0.034762623 ubox
37 45 0.020636163 ubox
37 46 0.101249101 ubox
37 48 0.057344900 ubox
37 73 0.003531479 ubox
38 44 0.021692436 ubox
38 45 0.099297264 ubox
38 47 0.057900132 ubox
39 44 0.070275214 ubox
39 46 0.058586120 ubox
39 59 0.004662411 ubox
40 58 0.004729987 ubox
41 52 0.004598995 ubox
42 49 0.080809907 ubox
42 51 0.101191894 ubox
43 48 0.127207267 ubox
43 50 0.215274189 ubox
43 55 0.045476685 ubox
43 59 0.003485685 ubox
44 49 0.196957811 ubox
44 54 0.045524645 ubox
44 58 0.003415960 ubox
45 51 0.006671335 ubox
45 53 0.045480771 ubox
45 54 0.005255879 ubox
46 52 0.045925495 ubox
46 53 0.006122654 ubox
47 51 0.041995715 ubox
47 52 0.005686203 ubox
48 53 0.003390270 ubox
49 92 0.003567238 ubox
49 97 0.007426796 ubox
50 91 0.003817650 ubox
50 96 0.007939949 ubox
51 83 0.899878797 ubox
51 85 0.011810360 ubox
51 86 0.006224562 ubox
51 95 0.007886223 ubox
52 82 0.993014374 ubox
52 83 0.004515230 ubox
52 84 0.006679829 ubox
53 64 0.004333910 ubox
53 81 0.993514818 ubox
53 82 0.003999308 ubox
53 93 0.007785430 ubox
54 63 0.004323257 ubox
54 80 0.993296057 ubox
54 92 0.007837417 ubox
55 61 0.007151560 ubox
55 79 0.990683339 ubox
55 91 0.007822514 ubox
56 60 0.006534246 ubox
57 75 0.006765488 ubox
58 74 0.005220799 ubox
59 71 0.011779698 ubox
59 75 0.992948285 ubox
60 70 0.011627595 ubox
60 74 0.995918378 ubox
60 83 0.013051614 ubox
60 85 0.028591739 ubox
60 88 0.005587460 ubox
61 73 0.995875047 ubox
61 81 0.016976431 ubox
61 82 0.015062239 ubox
61 84 0.033376884 ubox
61 87 0.005850226 ubox
62 70 0.030839500 ubox
62 80 0.016910985 ubox
62 83 0.032772291 ubox
62 86 0.005842539 ubox
63 69 0.032995460 ubox
63 72 0.963320220 ubox
63 79 0.006463590 ubox
64 71 0.968624076 ubox
64 79 0.022692991 ubox
65 70 0.537437755 ubox
65 78 0.023108775 ubox
65 81 0.061455538 ubox
65 84 0.022926414 ubox
66 80 0.061553794 ubox
66 83 0.022744798 ubox
67 79 0.061351003 ubox
68 75 0.024060933 ubox
69 74 0.020969867 ubox
69 80 0.026786775 ubox
70 77 0.055159680 ubox
70 79 0.027736701 ubox
71 76 0.056920051 ubox
71 78 0.031223044 ubox
71 81 0.022333977 ubox
71 82 0.016006287 ubox
72 80 0.022935421 ubox
72 81 0.015969316 ubox
73 79 0.026199801 ubox
3 99 0.9500000 lbox
4 98 0.9500000 lbox
5 97 0.9500000 lbox
6 96 0.9500000 lbox
7 95 0.9500000 lbox
8 94 0.9500000 lbox
9 93 0.9500000 lbox
11 91 0.9500000 lbox
12 90 0.9500000 lbox
13 89 0.9500000 lbox
14 88 0.9500000 lbox
15 87 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
19 44 0.9500000 lbox
23 42 0.9500000 lbox
24 41 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
51 83 0.9500000 lbox
52 82 0.9500000 lbox
53 81 0.9500000 lbox
54 80 0.9500000 lbox
55 79 0.9500000 lbox
59 75 0.9500000 lbox
60 74 0.9500000 lbox
61 73 0.9500000 lbox
63 72 0.9500000 lbox
64 71 0.9500000 lbox
showpage
end
%%EOF
