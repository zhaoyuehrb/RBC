%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCACGACCGCGUCCGGGCGCGCCACGUGUGCGUAGGAGCGCACCGGAAGCGCCCGGCUGGAGGCGCGGCGGCAGGGCUGGGCGGCGGCGGCGGCGGCGGUCAUGGAACGCCAAGAGGAGUCUCUGUCCGCGCGGCCGGCCCUGGAGACCGAGGGGCUGCGCUUCCUGCACACCACGGUGGGCUCCCUGCUGGCCACCUAUG\
) } def
/len { sequence length } bind def

/coor [
[50.36308289 161.70889282]
[53.47978592 147.03625488]
[64.56742859 136.93615723]
[71.36337280 123.56397247]
[78.15930939 110.19179535]
[70.84552002 108.53092957]
[58.47055435 117.00798035]
[55.44266510 132.28768921]
[42.77193451 140.70832825]
[28.22372246 137.72753906]
[15.84876060 146.20458984]
[3.47379851 154.68162537]
[-3.53867865 168.86386108]
[-18.41127586 169.67326355]
[-30.78623772 178.15029907]
[-43.16120148 186.62734985]
[-55.53616333 195.10440063]
[-67.91112518 203.58143616]
[-80.22044373 212.15351868]
[-92.46340179 220.82012939]
[-104.70635223 229.48674011]
[-116.94931030 238.15335083]
[-123.74255371 252.44187927]
[-138.60092163 253.48020935]
[-150.84388733 262.14682007]
[-163.01974487 270.90744019]
[-175.12777710 279.76153564]
[-187.23582458 288.61566162]
[-193.36119080 303.82788086]
[-209.63381958 305.86105347]
[-219.31381226 292.62362671]
[-212.44322205 277.73312378]
[-196.08993530 276.50762939]
[-183.98188782 267.65350342]
[-171.87385559 258.79940796]
[-168.32824707 252.30996704]
[-159.51048279 249.90386963]
[-147.26753235 241.23725891]
[-141.34999084 227.56860352]
[-125.61591339 225.91038513]
[-113.37296295 217.24378967]
[-101.13000488 208.57717896]
[-88.88705444 199.91056824]
[-85.24193573 193.47651672]
[-76.38816833 191.20648193]
[-64.01320648 182.72943115]
[-51.63824463 174.25238037]
[-39.26328278 165.77534485]
[-26.88832283 157.29829407]
[-20.76098442 143.72239685]
[-5.00324774 142.30667114]
[7.37171412 133.82962036]
[19.74667740 125.35257721]
[22.22258759 110.70998383]
[34.65180206 101.93676758]
[49.99350739 104.63301849]
[62.36846924 96.15596771]
[97.37319183 79.82242584]
[102.79181671 65.83534241]
[100.56219482 50.17203140]
[112.37463379 41.09923935]
[117.79325867 27.11215401]
[123.21188354 13.12507057]
[128.63050842 -0.86201274]
[134.04913330 -14.84909630]
[139.46775818 -28.83617973]
[144.88638306 -42.82326126]
[150.30500793 -56.81034470]
[155.72363281 -70.79743195]
[161.14225769 -84.78451538]
[166.56088257 -98.77159882]
[154.57400513 -119.63057709]
[161.79577637 -142.31048584]
[183.17196655 -152.18327332]
[186.60621643 -166.78483582]
[190.04048157 -181.38641357]
[193.47474670 -195.98797607]
[196.90899658 -210.58955383]
[200.34326172 -225.19111633]
[203.77751160 -239.79269409]
[207.21177673 -254.39425659]
[210.64602661 -268.99581909]
[206.27380371 -284.20089722]
[216.71949768 -294.81866455]
[220.15376282 -309.42022705]
[223.47549438 -324.04782104]
[226.68447876 -338.70053101]
[229.89347839 -353.35327148]
[233.10247803 -368.00598145]
[236.19854736 -382.68298340]
[239.18153381 -397.38339233]
[242.16450500 -412.08380127]
[237.32611084 -427.14700317]
[247.43988037 -438.08139038]
[250.42285156 -452.78179932]
[253.40582275 -467.48220825]
[255.59249878 -482.32196045]
[256.97653198 -497.25796509]
[258.36053467 -512.19396973]
[259.74456787 -527.13000488]
[247.52812195 -536.55133057]
[242.36608887 -551.08947754]
[245.90565491 -566.10528564]
[257.01736450 -576.80731201]
[272.15548706 -579.78057861]
[286.48956299 -574.07635498]
[295.44555664 -561.51477051]
[296.16571045 -546.10418701]
[288.42019653 -532.76214600]
[274.68057251 -525.74597168]
[273.29656982 -510.80996704]
[271.91253662 -495.87396240]
[270.52850342 -480.93792725]
[282.03912354 -490.55590820]
[297.03881836 -490.65481567]
[308.67526245 -481.18945312]
[311.63262939 -466.48388672]
[304.55990601 -453.25601196]
[290.68811035 -447.54870605]
[276.35427856 -451.96923828]
[268.10623169 -464.49923706]
[265.12326050 -449.79882812]
[262.14028931 -435.09841919]
[267.19204712 -421.08666992]
[256.86489868 -409.10083008]
[253.88192749 -394.40042114]
[250.89895630 -379.70001221]
[252.65061951 -372.51559448]
[247.75520325 -364.79699707]
[244.54620361 -350.14425659]
[241.33720398 -335.49154663]
[238.12821960 -320.83880615]
[239.76902771 -313.62829590]
[234.75534058 -305.98596191]
[231.32107544 -291.38439941]
[235.93893433 -277.22372437]
[225.24760437 -265.56158447]
[221.81333923 -250.96000671]
[218.37908936 -236.35842896]
[214.94482422 -221.75686646]
[211.51057434 -207.15528870]
[208.07630920 -192.55372620]
[204.64205933 -177.95214844]
[201.20779419 -163.35058594]
[197.77352905 -148.74900818]
[203.31246948 -144.99504089]
[207.85931396 -140.06120300]
[211.16731262 -134.20294189]
[213.05413818 -127.72621918]
[213.41191101 -120.97146606]
[212.21336365 -114.29572296]
[209.51370239 -108.05377197]
[205.44816589 -102.57926941]
[200.22521973 -98.16692352]
[194.11587524 -95.05661774]
[187.43966675 -93.42040253]
[180.54797363 -93.35297394]
[175.12934875 -79.36589050]
[169.71072388 -65.37880707]
[164.29209900 -51.39171982]
[158.87347412 -37.40463638]
[153.45484924 -23.41755486]
[148.03622437 -9.43047142]
[142.61759949 4.55661201]
[137.19897461 18.54369545]
[131.78034973 32.53078079]
[126.36171722 46.51786423]
[128.97891235 61.18072510]
[116.77890015 71.25396729]
[111.36027527 85.24105072]
[121.68257904 74.35757446]
[136.50711060 72.06995392]
[149.63005066 79.33552551]
[155.55966187 93.11376190]
[151.81448364 107.63869476]
[139.96182251 116.83187866]
[124.96183777 116.84610748]
[113.09106445 107.67438507]
[120.59106445 120.66476440]
[128.09106445 133.65515137]
[141.69184875 141.73779297]
[141.35478210 156.62858582]
[148.85478210 169.61897278]
[156.35478210 182.60934448]
[171.41667175 188.13375854]
[176.35153198 203.39897156]
[167.37377930 216.69480896]
[151.37036133 217.82185364]
[140.61773682 205.91552734]
[143.36439514 190.10934448]
[135.86439514 177.11897278]
[128.36439514 164.12858582]
[115.30006409 156.97509766]
[115.10067749 141.15515137]
[107.60067749 128.16476440]
[100.10067749 115.17438507]
[92.78688812 113.51351929]
[93.14083862 128.50933838]
[93.49478912 143.50517273]
[99.13286591 157.40524292]
[95.60568237 171.98464966]
[84.23731232 181.77035522]
[69.29537964 183.08889771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 57]
[7 56]
[10 53]
[11 52]
[12 51]
[14 49]
[15 48]
[16 47]
[17 46]
[18 45]
[19 43]
[20 42]
[21 41]
[22 40]
[24 38]
[25 37]
[26 35]
[27 34]
[28 33]
[58 170]
[59 169]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[84 135]
[85 134]
[86 132]
[87 131]
[88 130]
[89 129]
[90 127]
[91 126]
[92 125]
[94 123]
[95 122]
[96 121]
[97 113]
[98 112]
[99 111]
[100 110]
[178 196]
[179 195]
[180 194]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
