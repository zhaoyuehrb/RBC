%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUACCAAGGUCUGCGGCAGGAGGAGACCGGCUCACAGGAGCAGCAGCAUUGGAAGAGGCACCCAGCAGCCUCCCAGGCAUCCUGGAGGGUCUGCUCCCUGUCUUUCCAAGGAUGAGUCUCCAGGAGAUGUUCCGCUUCCCUAUGGGGCUCCUGCUUGGCUCUGUGCUCCUGGUGGCUUCGGCCCCAGCCACUCUGGAGCCUCCCGGCUGCA\
) } def
/len { sequence length } bind def

/coor [
[191.25523376 501.78430176]
[188.45996094 503.92990112]
[184.96897888 518.51800537]
[186.01521301 527.58996582]
[181.31820679 533.29388428]
[177.61346436 547.82922363]
[182.56980896 563.46142578]
[171.31179810 575.38574219]
[155.42070007 571.33544922]
[151.24391174 555.47711182]
[163.07815552 544.12445068]
[166.78291321 529.58917236]
[170.38087463 515.02703857]
[173.87184143 500.43893433]
[177.04075623 485.77749634]
[179.88607788 471.04983521]
[182.73139954 456.32217407]
[185.57672119 441.59448242]
[188.42204285 426.86682129]
[181.80490112 410.61215210]
[193.98796082 396.80297852]
[196.61677551 382.03512573]
[199.24559021 367.26730347]
[201.87440491 352.49945068]
[200.33569336 337.57858276]
[194.74836731 323.65802002]
[189.16104126 309.73745728]
[183.75354004 304.70205688]
[183.59552002 295.57131958]
[178.21315002 281.57025146]
[172.83078003 267.56918335]
[167.44841003 253.56809998]
[158.86000061 251.33157349]
[152.16088867 245.30291748]
[148.93736267 236.73963928]
[150.03034973 227.51670837]
[155.32040405 219.71632385]
[150.55967712 205.49186707]
[145.79893494 191.26739502]
[141.03820801 177.04292297]
[136.27748108 162.81846619]
[131.51675415 148.59399414]
[126.75601959 134.36952209]
[112.58740234 139.20744324]
[98.44149780 138.76933289]
[86.11853790 133.67385864]
[76.99771118 125.09898376]
[71.88404846 114.57072449]
[70.94759369 103.71851349]
[73.75792694 94.03446198]
[79.40287018 86.67089844]
[69.03238678 75.83332825]
[58.66189957 64.99575043]
[48.29141235 54.15817642]
[37.92092514 43.32060242]
[29.72884369 39.28513718]
[27.47919846 32.24699020]
[17.26892281 21.25834656]
[7.05864716 10.26970387]
[-3.15162802 -0.71893919]
[-13.36190319 -11.70758247]
[-23.57217789 -22.69622612]
[-38.88067245 -20.97687149]
[-52.11156845 -28.51323509]
[-58.29463959 -42.23306274]
[-55.24975204 -56.78870010]
[-65.46002960 -67.77734375]
[-75.67030334 -78.76599121]
[-85.88057709 -89.75463104]
[-96.09085846 -100.74327087]
[-106.38151550 -111.65667725]
[-116.75199890 -122.49424744]
[-127.12248230 -133.33181763]
[-142.25369263 -137.95321655]
[-145.46264648 -152.49803162]
[-155.83314514 -163.33560181]
[-166.20362854 -174.17318726]
[-176.57411194 -185.01075745]
[-186.94459534 -195.84832764]
[-202.26374817 -203.11195374]
[-199.52474976 -219.84318542]
[-182.68914795 -221.84289551]
[-176.10702515 -206.21881104]
[-165.73654175 -195.38124084]
[-155.36605835 -184.54367065]
[-144.99555969 -173.70610046]
[-134.62507629 -162.86851501]
[-120.23564148 -159.02230835]
[-116.28491211 -143.70231628]
[-105.91442871 -132.86473083]
[-95.54393768 -122.02716064]
[-88.64994812 -119.36833954]
[-85.10221100 -110.95355225]
[-74.89193726 -99.96490479]
[-64.68166351 -88.97626495]
[-54.47138596 -77.98761749]
[-44.26111221 -66.99897766]
[-29.52136421 -68.96821594]
[-16.29192162 -61.79563904]
[-9.74615097 -48.04768372]
[-12.58353519 -32.90650177]
[-2.37326026 -21.91785812]
[7.83701515 -10.92921448]
[18.04729080 0.05942862]
[28.25756645 11.04807186]
[38.46784210 22.03671455]
[48.75849915 32.95011902]
[59.12898636 43.78769302]
[69.49947357 54.62526703]
[79.86995697 65.46283722]
[90.24044800 76.30041504]
[105.09480286 74.21524048]
[112.08065033 60.94128036]
[119.06649017 47.66732025]
[113.62000275 35.35011292]
[116.22323608 22.33482361]
[125.70630646 13.32824039]
[138.45339966 11.45553684]
[145.63334656 -1.71444178]
[152.81329346 -14.88442039]
[159.99324036 -28.05439949]
[167.17318726 -41.22437668]
[169.44612122 -58.02527618]
[186.21963501 -60.49211884]
[193.23345947 -45.05700684]
[180.34317017 -34.04442978]
[173.16322327 -20.87445068]
[165.98327637 -7.70447254]
[158.80332947 5.46550655]
[151.62336731 18.63548470]
[157.05697632 34.55243301]
[149.14065552 49.77357483]
[132.34045410 54.65316391]
[125.35460663 67.92712402]
[118.36876678 81.20108032]
[123.67206573 86.50437927]
[134.27883911 75.89795685]
[144.88510132 86.50491333]
[134.27867126 97.11098480]
[139.58197021 102.41428375]
[152.85592651 95.42844391]
[166.12988281 88.44260406]
[177.33050537 75.71536255]
[192.66099548 82.95500946]
[189.94818115 99.69050598]
[173.11573792 101.71656036]
[159.84176636 108.70240021]
[146.56781006 115.68824768]
[140.98048401 129.60879517]
[145.74121094 143.83326721]
[150.50195312 158.05773926]
[155.26268005 172.28219604]
[160.02340698 186.50666809]
[164.78413391 200.73112488]
[169.54486084 214.95559692]
[186.42823792 228.15510559]
[181.44947815 248.18572998]
[186.83184814 262.18679810]
[192.21421814 276.18786621]
[197.59660339 290.18896484]
[203.08158875 304.15014648]
[208.66891479 318.07070923]
[214.25624084 331.99124146]
[220.10108948 330.28533936]
[226.87451172 330.58798218]
[233.87019348 333.25195312]
[240.26861572 338.38308716]
[251.83753967 347.93084717]
[263.40646362 357.47863770]
[274.97537231 367.02642822]
[286.54428101 376.57418823]
[304.77096558 379.20263672]
[310.25912476 395.87240601]
[321.96694946 405.24932861]
[333.67477417 414.62625122]
[345.38262939 424.00317383]
[357.09045410 433.38009644]
[368.79827881 442.75701904]
[380.50613403 452.13394165]
[395.43652344 447.90747070]
[409.98803711 453.29562378]
[418.56536865 466.22656250]
[417.87033081 481.72805786]
[408.17016602 493.83947754]
[393.19479370 497.90374756]
[378.70257568 492.35803223]
[370.26602173 479.33480835]
[371.12921143 463.84176636]
[359.42135620 454.46484375]
[347.71353149 445.08792114]
[336.00570679 435.71099854]
[324.29788208 426.33407593]
[312.59002686 416.95715332]
[300.88220215 407.58023071]
[288.82992554 408.59759521]
[278.99951172 400.88330078]
[276.99652100 388.14312744]
[265.42758179 378.59533691]
[253.85867310 369.04754639]
[242.28974915 359.49978638]
[230.72084045 349.95199585]
[216.64225769 355.12826538]
[214.01344299 369.89611816]
[211.38462830 384.66394043]
[208.75581360 399.43179321]
[215.48258972 410.43521118]
[212.99053955 422.68008423]
[203.14970398 429.71215820]
[200.30438232 444.43981934]
[197.45906067 459.16748047]
[194.61373901 473.89514160]
[191.76841736 488.62280273]
[193.47344971 493.55157471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[5 12]
[6 11]
[15 212]
[16 211]
[17 210]
[18 209]
[19 208]
[21 205]
[22 204]
[23 203]
[24 202]
[25 163]
[26 162]
[27 161]
[29 160]
[30 159]
[31 158]
[32 157]
[37 155]
[38 154]
[39 153]
[40 152]
[41 151]
[42 150]
[43 149]
[51 111]
[52 110]
[53 109]
[54 108]
[55 107]
[57 106]
[58 105]
[59 104]
[60 103]
[61 102]
[62 101]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[71 91]
[72 90]
[73 89]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[112 135]
[113 134]
[114 133]
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[140 148]
[141 147]
[142 146]
[167 201]
[168 200]
[169 199]
[170 198]
[171 197]
[173 194]
[174 193]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
