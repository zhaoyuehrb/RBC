%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:44:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCGGCCCGGAAGUGCCCGGCUGAAGCGGCCGGGCGCCGAUUGGUGUCUUUGAGUCUAGUCUUUGUUCGGGGCUGUCCAAAGGACGCUAGCUGUUGCACCUGUUCCUCCCUGCGCGUAAGAUAGAGGAUAAAUCUCCUGGCAAAGCCCAGAAUGACCACAGCCCUGGAACCUGAGGACCAAAAAGGACUUCUGAUAAUUAAGGCAGAGGACCAUUACUGGGGACAGGAUUCCAGCUCACAAAAGUGCAGUC\
) } def
/len { sequence length } bind def

/coor [
[-54.79811478 174.80363464]
[-68.10448456 175.31265259]
[-80.76271820 171.29499817]
[-91.28343201 163.24867249]
[-104.01942444 171.17297363]
[-116.75541687 179.09727478]
[-129.49140930 187.02156067]
[-142.22740173 194.94586182]
[-154.96339417 202.87016296]
[-167.69937134 210.79446411]
[-175.32911682 224.65438843]
[-190.22293091 224.80856323]
[-202.95892334 232.73286438]
[-215.69491577 240.65716553]
[-226.87513733 250.65730286]
[-236.16517639 262.43417358]
[-245.45523071 274.21105957]
[-254.74528503 285.98794556]
[-264.03533936 297.76483154]
[-273.32537842 309.54171753]
[-282.61544800 321.31860352]
[-291.90548706 333.09545898]
[-301.19552612 344.87234497]
[-310.48559570 356.64923096]
[-319.77563477 368.42611694]
[-324.83825684 384.60653687]
[-341.78781128 384.22094727]
[-346.10940552 367.82705688]
[-331.55252075 359.13607788]
[-322.26248169 347.35919189]
[-312.97241211 335.58230591]
[-303.68237305 323.80541992]
[-294.39233398 312.02853394]
[-285.10226440 300.25164795]
[-275.81222534 288.47476196]
[-266.52215576 276.69790649]
[-257.23211670 264.92102051]
[-247.94206238 253.14413452]
[-238.65200806 241.36724854]
[-242.84767151 235.15061951]
[-255.43463135 216.50073242]
[-269.83175659 220.71054077]
[-284.22891235 224.92033386]
[-298.62603760 229.13014221]
[-313.02319336 233.33995056]
[-327.42031860 237.54974365]
[-335.04840088 251.13098145]
[-349.70910645 255.19523621]
[-362.60974121 247.83932495]
[-377.00689697 252.04913330]
[-390.51251221 262.29776001]
[-404.09933472 252.15705872]
[-398.11614990 236.29397583]
[-381.21667480 237.65199280]
[-366.81954956 233.44219971]
[-359.91415405 220.29490662]
[-345.37338257 215.82046509]
[-331.63012695 223.15260315]
[-317.23297119 218.94281006]
[-302.83584595 214.73300171]
[-288.43872070 210.52319336]
[-274.04156494 206.31340027]
[-259.64443970 202.10359192]
[-247.55108643 202.90763855]
[-237.35295105 206.79113770]
[-229.74380493 212.91426086]
[-225.13214111 220.30021667]
[-223.61921692 227.92117310]
[-210.88322449 219.99687195]
[-198.14723206 212.07257080]
[-191.42845154 198.77944946]
[-175.62367249 198.05847168]
[-162.88768005 190.13417053]
[-150.15170288 182.20986938]
[-137.41571045 174.28558350]
[-124.67971039 166.36128235]
[-111.94372559 158.43698120]
[-99.20773315 150.51268005]
[-101.14500427 143.33296204]
[-101.66463470 135.91465759]
[-100.74720001 128.53497314]
[-98.42697906 121.46971130]
[-94.79069519 114.98290253]
[-105.19869995 104.18135071]
[-115.60670471 93.37980652]
[-126.01470947 82.57826233]
[-136.48931885 71.84128571]
[-147.03012085 61.16929245]
[-162.27902222 63.35493851]
[-175.73371887 56.22578430]
[-182.33251953 42.70100021]
[-179.73316956 28.05923271]
[-190.27398682 17.38724136]
[-206.22245789 13.56908607]
[-210.63005066 -2.22664571]
[-198.96260071 -13.75066090]
[-183.22259521 -9.14803982]
[-179.60198975 6.84643507]
[-169.06118774 17.51842690]
[-154.38838196 15.10036850]
[-140.94625854 21.86594963]
[-133.98405457 35.40777969]
[-136.35812378 50.62848663]
[-125.81732178 61.30047989]
[-118.90013885 63.84377289]
[-115.21316528 72.17025757]
[-104.80516052 82.97180176]
[-94.39715576 93.77334595]
[-83.98914337 104.57489014]
[-63.02490234 98.23918152]
[-41.85760498 104.37155914]
[-27.34746170 121.13980103]
[-12.71766853 117.82782745]
[1.91212463 114.51586151]
[16.54191780 111.20388794]
[31.17171097 107.89192200]
[45.80150604 104.57995605]
[44.72412491 94.30677795]
[45.61758804 83.79692841]
[48.53083801 73.43250275]
[53.43808746 63.60517120]
[60.23707962 54.70139694]
[68.75025940 47.08748627]
[78.72888947 41.09485626]
[89.86004639 37.00617218]
[101.77632141 35.04294205]
[114.06789398 35.35503387]
[116.46936798 20.54851723]
[118.87084198 5.74200058]
[121.27231598 -9.06451607]
[111.82814026 -21.73665810]
[114.19330597 -37.36296844]
[126.96458435 -46.67263412]
[142.56501770 -44.14239502]
[151.73913574 -31.27339745]
[149.04409790 -15.70059013]
[136.07882690 -6.66304207]
[133.67735291 8.14347458]
[131.27587891 22.94999123]
[128.87440491 37.75650787]
[143.19096375 42.23267746]
[149.65142822 28.69522858]
[156.11187744 15.15777969]
[157.47695923 -1.74112296]
[174.09332275 -5.10748339]
[181.92799377 9.92761707]
[169.64933777 21.61823654]
[163.18887329 35.15568542]
[156.72842407 48.69313431]
[159.87467957 55.50128937]
[172.03446960 46.71837234]
[184.19424438 37.93545151]
[196.35403442 29.15253067]
[203.26078796 15.83724785]
[216.16674805 8.19289112]
[231.16284180 8.53484821]
[243.70693970 16.75954437]
[249.99957275 30.37581444]
[248.13476562 45.25944901]
[238.67736816 56.90236282]
[224.49188232 61.77805328]
[209.87461853 58.40953445]
[195.30548096 61.97889328]
[180.73634338 65.54824829]
[166.16720581 69.11760712]
[169.31347656 75.92576599]
[183.81033325 79.77817535]
[198.30718994 83.63058472]
[212.80406189 87.48299408]
[227.30091858 91.33540344]
[241.79777527 95.18781281]
[256.31817627 98.95050049]
[270.86157227 102.62331390]
[285.40496826 106.29612732]
[299.94836426 109.96894836]
[309.83474731 100.38661957]
[323.05816650 96.96083832]
[336.14471436 100.48130035]
[345.71066284 109.92717743]
[349.33728027 122.76007843]
[363.83413696 126.61248779]
[378.33102417 130.46490479]
[391.88873291 122.79507446]
[406.53570557 126.90847778]
[413.76419067 139.88095093]
[428.26104736 143.73335266]
[442.78143311 147.49603271]
[457.32482910 151.16885376]
[472.59945679 147.04611206]
[483.04479980 157.66421509]
[497.58819580 161.33703613]
[512.13159180 165.00984192]
[526.67498779 168.68266296]
[541.21838379 172.35548401]
[555.76177979 176.02828979]
[566.40661621 164.95657349]
[581.16564941 160.70602417]
[596.06872559 164.42002869]
[607.10699463 175.09951782]
[611.31127930 189.87178040]
[607.55059814 204.76315308]
[596.83654785 215.76791382]
[582.05114746 219.92585754]
[567.17169189 216.11849976]
[556.20056152 205.37002563]
[552.08898926 190.57170105]
[537.54559326 186.89888000]
[523.00213623 183.22605896]
[508.45877075 179.55325317]
[493.91537476 175.88043213]
[479.37197876 172.20761108]
[465.13760376 176.59306335]
[453.65203857 165.71224976]
[439.10864258 162.03944397]
[431.87396240 163.44490051]
[424.40863037 158.23020935]
[409.91177368 154.37780762]
[397.19702148 162.05055237]
[382.44027710 158.35017395]
[374.47860718 144.96176147]
[359.98175049 141.10934448]
[345.48489380 137.25694275]
[333.07363892 148.02037048]
[316.52584839 149.26766968]
[302.36013794 140.30847168]
[296.27557373 124.51234436]
[281.73214722 120.83953094]
[267.18875122 117.16670990]
[252.64537048 113.49389648]
[245.41069031 114.89936066]
[237.94535828 109.68467712]
[223.44850159 105.83226776]
[208.95164490 101.97985840]
[194.45478821 98.12744141]
[179.95793152 94.27503204]
[165.46105957 90.42262268]
[164.27751160 109.53813171]
[157.72998047 127.17149353]
[146.56443787 141.88113403]
[131.89482117 152.52619934]
[115.09429932 158.35421753]
[97.66790009 159.05215454]
[81.11795044 154.75741577]
[66.81466675 146.02955627]
[55.88273621 133.78611755]
[49.11347580 119.20974731]
[34.48368073 122.52171326]
[19.85388756 125.83368683]
[5.22409391 129.14566040]
[-9.40569973 132.45762634]
[-24.03549385 135.76959229]
[-26.05026436 149.07633972]
[-32.43647003 160.88264465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 78]
[5 77]
[6 76]
[7 75]
[8 74]
[9 73]
[10 72]
[12 70]
[13 69]
[14 68]
[15 39]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[49 55]
[50 54]
[83 109]
[84 108]
[85 107]
[86 106]
[87 104]
[88 103]
[92 99]
[93 98]
[112 251]
[113 250]
[114 249]
[115 248]
[116 247]
[117 246]
[127 140]
[128 139]
[129 138]
[130 137]
[141 149]
[142 148]
[143 147]
[166 236]
[167 235]
[168 234]
[169 233]
[170 232]
[171 231]
[172 229]
[173 228]
[174 227]
[175 226]
[180 222]
[181 221]
[182 220]
[185 217]
[186 216]
[187 214]
[188 213]
[190 211]
[191 210]
[192 209]
[193 208]
[194 207]
[195 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
