%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCGCGCUUGCGCACUUUAGCCAGCGCAGGGCGCACCCCGCCCCCUCCCACUCUCCCUGCCCCUCGGACCCCAUACUCUACCUCAUCCUUCUGGCCAGGCGAAGCCCACGACGUUGACAUGCCGGAGAUCCGCCUCCGCCAUGUCGUGUCCUGCAGCAGCCAGGACUCGACUCACUGUGCAGAAAAUCUUCUCAAGGCAGACACUUACCGAAAAUGGC\
) } def
/len { sequence length } bind def

/coor [
[102.00676727 170.57666016]
[114.28987122 161.24237061]
[113.01203918 146.29689026]
[111.73420715 131.35142517]
[102.19395447 129.97045898]
[94.39769745 126.02984619]
[87.23875427 139.21125793]
[80.07981110 152.39266968]
[72.92087555 165.57408142]
[65.76193237 178.75547791]
[65.97485352 194.57525635]
[53.10136414 202.06675720]
[45.94242096 215.24816895]
[52.74234009 229.19595337]
[50.01213455 244.47094727]
[38.80163193 255.19961548]
[23.42149162 257.25656128]
[9.78569794 249.85083008]
[3.13748884 235.83009338]
[6.03323650 220.58561707]
[17.35946655 209.97918701]
[32.76101303 208.08921814]
[39.91995621 194.90780640]
[39.19497681 180.03086853]
[52.58052063 171.59654236]
[59.73946381 158.41513062]
[66.89840698 145.23371887]
[74.05735016 132.05230713]
[81.21629333 118.87090302]
[76.07051849 121.86985016]
[70.60902405 124.41605377]
[57.37706375 131.48112488]
[44.14510345 138.54620361]
[30.91314507 145.61128235]
[17.68118668 152.67634583]
[11.66031361 167.54673767]
[-3.76015496 171.97265625]
[-16.75095558 162.55891418]
[-17.34665680 146.52691650]
[-5.09028816 136.17506409]
[10.61611271 139.44439697]
[23.84807205 132.37931824]
[37.08002853 125.31423950]
[50.31198883 118.24916840]
[63.54394913 111.18409729]
[64.34204865 103.72667694]
[49.34273529 103.58312988]
[34.34342194 103.43957520]
[19.88887978 107.44783783]
[8.44969368 97.74500275]
[10.04591656 82.83017731]
[23.27935219 75.76786804]
[36.55825806 82.74420166]
[51.24825287 85.77803040]
[65.93824768 88.81185150]
[66.73634338 81.35443878]
[55.29915619 71.64924622]
[43.79327393 62.02559280]
[32.21928406 52.48396301]
[20.64529037 42.94233322]
[9.07129955 33.40070343]
[-2.57021880 23.94157791]
[-14.27867413 14.56543350]
[-28.56501579 20.02873993]
[-43.56874084 17.62351799]
[-55.27626038 8.09459877]
[-60.60658264 -5.92123652]
[-58.22176361 -20.62423706]
[-69.93022156 -30.00038147]
[-81.63867188 -39.37652588]
[-94.41706085 -31.25300407]
[-109.14136505 -27.72120094]
[-124.21440125 -29.16421700]
[-138.00115967 -35.42552185]
[-149.00616455 -45.82594299]
[-156.03565979 -59.23731232]
[-158.32714844 -74.20487213]
[-155.63206482 -89.10504913]
[-148.24275208 -102.32157898]
[-136.96075439 -112.42084503]
[-123.00984192 -118.30734253]
[-107.90332031 -119.34255219]
[-93.27982330 -115.41418457]
[-80.72560120 -106.94835663]
[-71.60244751 -94.86337280]
[-66.89996338 -80.47013092]
[-67.12824249 -65.32990265]
[-72.26252747 -51.08498001]
[-60.55407715 -41.70883560]
[-48.84561920 -32.33269119]
[-35.01931000 -37.87333298]
[-20.17733192 -35.73517227]
[-8.31999874 -26.39333344]
[-2.69372272 -12.27802849]
[-4.90253115 2.85697818]
[6.80592489 12.23312187]
[13.98646641 13.95930195]
[18.61293030 21.82671165]
[30.18692207 31.36834145]
[41.76091385 40.90997314]
[53.33490372 50.45160294]
[60.49018478 52.27967834]
[65.00434875 60.21205902]
[76.44153595 69.91724396]
[114.23433685 67.10518646]
[133.34100342 97.00313568]
[147.36624146 91.68405914]
[161.39147949 86.36499023]
[160.48075867 79.75926971]
[161.77685547 72.66123199]
[165.46598816 65.82764435]
[171.47303772 60.07291031]
[180.08152771 47.78902817]
[188.69003296 35.50514603]
[187.22758484 22.69499588]
[194.64448547 12.64235020]
[206.52842712 10.40927982]
[215.31066895 -1.75099313]
[224.09291077 -13.91126537]
[232.87515259 -26.07153893]
[241.65739441 -38.23181152]
[250.43963623 -50.39208221]
[259.22189331 -62.55235672]
[261.02914429 -78.27000427]
[274.75323486 -84.05775452]
[283.53549194 -96.21802521]
[292.31771851 -108.37829590]
[301.09997559 -120.53857422]
[309.88220215 -132.69883728]
[307.11837769 -148.25958252]
[316.23556519 -161.16900635]
[331.82464600 -163.76815796]
[344.63696289 -154.51501465]
[347.07113647 -138.89930725]
[337.68304443 -126.18555450]
[322.04248047 -123.91660309]
[313.26025391 -111.75633240]
[304.47799683 -99.59605408]
[295.69577026 -87.43578339]
[286.91351318 -75.27551270]
[285.73443604 -60.42764664]
[271.38217163 -53.77011490]
[262.59991455 -41.60984039]
[253.81767273 -29.44956970]
[245.03543091 -17.28929710]
[236.25318909 -5.12902403]
[227.47094727 7.03124857]
[218.68870544 19.19152069]
[217.84367371 36.72328186]
[200.97390747 44.11364365]
[192.36541748 56.39752579]
[183.75691223 68.68140411]
[190.15518188 82.24835968]
[205.10935974 83.41992950]
[220.06353760 84.59150696]
[235.01771545 85.76307678]
[249.97189331 86.93464661]
[258.76428223 84.48634338]
[265.12982178 88.23064423]
[280.06582642 89.61466980]
[295.00183105 90.99869537]
[307.09268188 81.17784882]
[322.22021484 82.79421997]
[331.50839233 94.38152313]
[346.44439697 95.76554871]
[357.43041992 84.63716125]
[373.00415039 83.22547913]
[385.81216431 92.19706726]
[389.80685425 107.31580353]
[383.10211182 121.44309235]
[368.86367798 127.90846252]
[353.81451416 123.65914917]
[345.06036377 110.70156097]
[330.12435913 109.31753540]
[318.86517334 119.00085449]
[303.69821167 117.81002045]
[293.61779785 105.93470764]
[278.68179321 104.55068207]
[263.74578857 103.16665649]
[248.80030823 101.88882446]
[233.84613037 100.71725464]
[218.89195251 99.54568481]
[203.93778992 98.37410736]
[188.98361206 97.20253754]
[202.98571777 102.58221436]
[213.73524475 113.04393005]
[219.49287415 126.89492035]
[219.32696533 141.89399719]
[213.26437378 155.61424255]
[202.28607178 165.83561707]
[188.16839600 170.90426636]
[173.19566345 170.00004578]
[159.79057312 163.26924133]
[150.12214661 151.80096436]
[145.75477600 137.45085144]
[147.39512634 122.54080963]
[154.77780151 109.48339081]
[166.71055603 100.39022827]
[152.68531799 105.70930481]
[138.66006470 111.02838135]
[153.51847839 113.08451080]
[168.49415588 112.23068237]
[181.72653198 119.29499817]
[189.34960938 132.21353149]
[189.13623047 147.21202087]
[181.14875793 159.90847778]
[167.72079468 166.59353638]
[152.77546692 165.31405640]
[140.67919922 156.44386292]
[134.96632385 142.57685852]
[126.67967987 130.07359314]
[127.95751190 145.01905823]
[129.23533630 159.96453857]
[142.92472839 167.07818604]
[150.57522583 180.47496033]
[149.74555969 195.88000488]
[140.70048523 208.37760925]
[126.32626343 213.97984314]
[111.20964050 210.89906311]
[100.17427826 200.11831665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 213]
[3 212]
[4 211]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[12 23]
[13 22]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[56 104]
[57 103]
[58 101]
[59 100]
[60 99]
[61 98]
[62 96]
[63 95]
[68 90]
[69 89]
[70 88]
[106 200]
[107 199]
[108 198]
[112 152]
[113 151]
[114 150]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[122 143]
[123 142]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[153 184]
[154 183]
[155 182]
[156 181]
[157 180]
[159 179]
[160 178]
[161 177]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
