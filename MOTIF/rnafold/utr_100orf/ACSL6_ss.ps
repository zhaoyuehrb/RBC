%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCAGCGGCGGCGGCGGCGCGGCUACUGCUGGGGCUGCUGGGCUGCGGGGCUGCGGGGCUGCGGGUCGGGGAGGCCGGGCCGGGCCGGGCCGGGCCCCGCUGACCGCCAUGCUGACCUUCUUCCUCGUGUCGGGGGGCUCCCUCUGGCUAUUCGUAGAGUUUGUCCUCUCACUUCUGGAGAAGAUGCAGACACAGGAGAUCCUGAGGA\
) } def
/len { sequence length } bind def

/coor [
[73.30551147 106.30870819]
[58.32061768 105.63573456]
[43.33572006 104.96276093]
[28.34621048 104.40189362]
[13.35292435 103.95316315]
[-1.64036226 103.50443268]
[-16.63364792 103.05570221]
[-31.62693596 102.60697174]
[-46.62022018 102.15823364]
[-55.29241943 105.02969360]
[-61.83397293 101.58897400]
[-76.81887054 100.91600800]
[-91.80376434 100.24303436]
[-101.83370209 108.35328674]
[-114.30126190 107.48381805]
[-122.56028748 98.64488220]
[-137.53344727 97.74781799]
[-152.50659180 96.85075378]
[-167.47975159 95.95369720]
[-181.71794128 102.85183716]
[-193.95971680 94.36724091]
[-208.93286133 93.47018433]
[-223.90602112 92.57312012]
[-238.87916565 91.67605591]
[-253.85231018 90.77899170]
[-262.83346558 100.81723022]
[-275.76748657 103.80615234]
[-287.88177490 98.87282562]
[-294.83782959 88.02597046]
[-309.79589844 86.90502167]
[-324.75396729 85.78407288]
[-339.09375000 92.46844482]
[-351.20721436 83.80167389]
[-366.16528320 82.68071747]
[-380.50506592 89.36509705]
[-392.61856079 80.69831848]
[-407.57659912 79.57736969]
[-421.91641235 86.26174927]
[-434.02987671 77.59497070]
[-448.98794556 76.47402191]
[-463.32772827 83.15839386]
[-475.44119263 74.49162292]
[-490.39926147 73.37067413]
[-505.35729980 72.24971771]
[-520.31536865 71.12876892]
[-529.10766602 73.60825348]
[-535.48828125 69.87751770]
[-550.42785645 68.53292847]
[-564.86608887 75.00204468]
[-576.84851074 66.15502930]
[-591.78814697 64.81044006]
[-606.72778320 63.46585083]
[-621.66735840 62.12126160]
[-636.31170654 69.50196838]
[-649.87554932 60.28487778]
[-648.40557861 43.95174789]
[-633.41394043 37.30469894]
[-620.32281494 47.18164444]
[-605.38317871 48.52623367]
[-590.44354248 49.87082672]
[-575.50396729 51.21541595]
[-562.13433838 44.65012741]
[-549.08331299 53.59331512]
[-534.14367676 54.93790436]
[-519.19439697 56.17071152]
[-504.23635864 57.29166412]
[-489.27832031 58.41261292]
[-474.32025146 59.53356552]
[-461.05035400 52.76900864]
[-447.86697388 61.51596451]
[-432.90893555 62.63691330]
[-419.63903809 55.87236023]
[-406.45565796 64.61931610]
[-391.49758911 65.74026489]
[-378.22769165 58.97570801]
[-365.04434204 67.72266388]
[-350.08627319 68.84361267]
[-336.81637573 62.07905960]
[-323.63299561 70.82601166]
[-308.67495728 71.94696808]
[-293.71688843 73.06791687]
[-281.45025635 61.56327820]
[-264.32104492 62.50828934]
[-252.95526123 75.80583954]
[-237.98210144 76.70290375]
[-223.00895691 77.59996796]
[-208.03579712 78.49703217]
[-193.06265259 79.39408875]
[-179.89543152 72.43178558]
[-166.58268738 80.98054504]
[-151.60952759 81.87760162]
[-136.63638306 82.77466583]
[-121.66323090 83.67173004]
[-106.41407776 74.98732758]
[-91.13079071 85.25813293]
[-76.14589691 85.93110657]
[-61.16099930 86.60408020]
[-46.17148972 87.16494751]
[-31.17820358 87.61367798]
[-16.18491745 88.06241608]
[-1.19163036 88.51114655]
[13.80165577 88.95987701]
[28.79494286 89.40860748]
[35.57532883 86.46636963]
[44.00869370 89.97786713]
[58.99359131 90.65084076]
[73.97848511 91.32381439]
[84.69609833 75.48970032]
[104.01562500 69.90506744]
[123.34547424 78.36708069]
[133.24029541 98.11875916]
[148.03765869 95.66148376]
[162.81622314 93.09360504]
[177.57516479 90.41525269]
[192.33410645 87.73690033]
[202.03096008 73.17745209]
[218.92480469 70.19406891]
[232.47727966 80.15185547]
[247.19450378 77.25301361]
[261.91174316 74.35417175]
[276.62896729 71.45533752]
[291.34619141 68.55649567]
[306.06341553 65.65766144]
[320.78063965 62.75881958]
[327.68096924 47.31637573]
[342.28094482 39.11092377]
[358.73001099 41.20338440]
[370.57083130 52.57266235]
[385.24307251 49.45398712]
[399.91528320 46.33531189]
[405.07681274 42.20170975]
[410.70599365 41.41412354]
[415.07281494 43.34974289]
[429.83175659 40.67138672]
[444.59069824 37.99303436]
[459.34963989 35.31468201]
[474.10858154 32.63632965]
[488.86755371 29.95797348]
[503.62649536 27.27962112]
[510.42855835 13.45796871]
[523.90740967 6.37464094]
[538.79650879 8.56052399]
[549.41638184 18.96997833]
[564.17535400 16.29162407]
[578.93426514 13.61327171]
[593.69323730 10.93491745]
[608.45214844 8.25656414]
[615.06317139 -5.78174019]
[628.67932129 -13.22357941]
[644.06481934 -11.20741558]
[655.30377197 -0.50850385]
[658.07440186 14.75920582]
[651.31152344 28.72496796]
[637.61547852 36.01866150]
[622.25268555 33.83571243]
[611.13049316 23.01550865]
[596.37158203 25.69386101]
[581.61260986 28.37221527]
[566.85369873 31.05056763]
[552.09472656 33.72892380]
[545.80969238 47.20616531]
[532.63806152 54.48432541]
[517.52972412 52.58880234]
[506.30484009 42.03856659]
[491.54589844 44.71691895]
[476.78695679 47.39527130]
[462.02801514 50.07362366]
[447.26907349 52.75197983]
[432.51013184 55.43033218]
[417.75115967 58.10868454]
[403.03393555 61.00752258]
[388.36172485 64.12619781]
[373.68951416 67.24487305]
[369.41421509 79.89301300]
[359.36672974 88.84867096]
[346.10049438 91.69263458]
[333.05841064 87.57744598]
[323.67947388 77.47604370]
[308.96224976 80.37488556]
[294.24502563 83.27371979]
[279.52780151 86.17256165]
[264.81057739 89.07140350]
[250.09333801 91.97023773]
[235.37611389 94.86907959]
[229.76486206 106.46885681]
[218.32623291 112.81327057]
[205.12786865 111.38997650]
[195.01246643 102.49584198]
[180.25350952 105.17419434]
[165.49456787 107.85254669]
[159.47407532 112.14022064]
[150.49491882 110.45884705]
[135.69757080 112.91611481]
[127.90797424 125.73493958]
[132.54322815 140.00079346]
[137.17848206 154.26663208]
[141.81373596 168.53248596]
[154.35609436 179.09757996]
[151.21165466 195.19242859]
[135.61514282 200.26005554]
[123.61090851 189.08729553]
[127.54788971 173.16773987]
[122.91263580 158.90188599]
[118.27738190 144.63604736]
[113.64212799 130.37019348]
[104.14759827 132.04895020]
[94.85913849 130.91439819]
[86.56807709 127.22891235]
[79.93276978 121.46504211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[3 105]
[4 103]
[5 102]
[6 101]
[7 100]
[8 99]
[9 98]
[11 97]
[12 96]
[13 95]
[16 93]
[17 92]
[18 91]
[19 90]
[21 88]
[22 87]
[23 86]
[24 85]
[25 84]
[29 81]
[30 80]
[31 79]
[33 77]
[34 76]
[36 74]
[37 73]
[39 71]
[40 70]
[42 68]
[43 67]
[44 66]
[45 65]
[47 64]
[48 63]
[50 61]
[51 60]
[52 59]
[53 58]
[111 193]
[112 192]
[113 190]
[114 189]
[115 188]
[118 184]
[119 183]
[120 182]
[121 181]
[122 180]
[123 179]
[124 178]
[128 173]
[129 172]
[130 171]
[133 170]
[134 169]
[135 168]
[136 167]
[137 166]
[138 165]
[139 164]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[194 205]
[195 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
