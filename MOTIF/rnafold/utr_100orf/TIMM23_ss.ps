%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUGCCGCAAAGCGGAAGUGUGGCGCUUAACGGGAACCGGCGCCCGGAAGGUCAGCGUGUGAAGUAGGCGCUGGCAACGCGGGGUUACCCGCUGUUAUUGAGGAGUAACGGCCCAGCGGACCACCCAGGCUUGAGGCAGCGGCGGGAACCACUCGGUUUGCUGCGAUACCAUGGAAGGAGGCGGGGGAAGCGGCAACAAAACCACAGGGGGAUUGGCCGGCUUUUUCGGAGCCGGCGGAGCAGGUUACUCGCA\
CGCGGAUUUGGCUGGCG\
) } def
/len { sequence length } bind def

/coor [
[120.61148071 146.08300781]
[116.52118683 160.51455688]
[112.43089294 174.94610596]
[108.34060669 189.37765503]
[104.25031281 203.80920410]
[107.93127441 219.19624329]
[97.01663971 229.33132935]
[92.92634583 243.76287842]
[88.83605194 258.19442749]
[84.74575806 272.62597656]
[86.24385071 289.51361084]
[70.43090820 295.62811279]
[60.17790222 282.12579346]
[70.31421661 268.53567505]
[74.40451050 254.10412598]
[78.49480438 239.67257690]
[82.58509827 225.24104309]
[78.61156464 210.88623047]
[89.81876373 199.71890259]
[93.90905762 185.28735352]
[97.99935150 170.85581970]
[102.08964539 156.42427063]
[106.17993927 141.99272156]
[93.32094574 134.26962280]
[82.50290680 144.66047668]
[71.68487549 155.05134583]
[60.86683655 165.44221497]
[50.04880142 175.83308411]
[49.00398636 179.96214294]
[46.92443085 183.23156738]
[44.20071411 185.42396545]
[41.25386810 186.46861267]
[38.48571014 186.43890381]
[27.20100021 196.32098389]
[15.91629314 206.20304871]
[7.98365307 221.18669128]
[-8.61039639 217.71194458]
[-9.86513615 200.80448914]
[6.03422022 194.91835022]
[17.31892776 185.03627014]
[28.60363579 175.15419006]
[39.65793610 165.01504517]
[50.47597122 154.62417603]
[61.29400635 144.23330688]
[72.11204529 133.84245300]
[82.93008423 123.45158386]
[76.65606689 109.82672119]
[61.72776413 111.29161072]
[56.13964462 121.73496246]
[46.31442642 128.13308716]
[34.74183273 129.00210571]
[24.28904724 124.24216461]
[17.49034691 115.13382721]
[2.53229070 116.25478363]
[-12.42576599 117.37573242]
[-27.38382339 118.49668121]
[-42.34188080 119.61763763]
[-57.29993820 120.73858643]
[-72.25799561 121.85953522]
[-87.21604919 122.98049164]
[-100.39942932 131.72744751]
[-113.66931915 124.96289062]
[-128.62738037 126.08383942]
[-143.97038269 133.29693604]
[-155.14894104 120.55032349]
[-145.99501038 106.28000641]
[-129.74832153 111.12578583]
[-114.79026794 110.00482941]
[-102.67679596 101.33805847]
[-88.33700562 108.02243042]
[-73.37894440 106.90148163]
[-58.42088699 105.78053284]
[-43.46283340 104.65957642]
[-28.50477409 103.53862762]
[-13.54671764 102.41767883]
[1.41133928 101.29672241]
[16.36939621 100.17577362]
[27.48947525 85.60079956]
[46.05438614 83.78889465]
[60.26287842 96.36331177]
[75.19117737 94.89842224]
[76.47937012 87.50988007]
[80.34394836 65.34425354]
[66.79219055 58.91386795]
[53.24043274 52.48347855]
[36.94690323 54.34167480]
[27.40971184 41.00098419]
[34.43990326 26.18516731]
[50.80541992 25.13546562]
[59.67082214 38.93172073]
[73.22257996 45.36211014]
[86.77433777 51.79249954]
[95.57714081 39.64710617]
[85.24869537 28.76946068]
[74.92024994 17.89181709]
[64.59179688 7.01417208]
[54.26335144 -3.86347246]
[43.93490219 -14.74111652]
[33.60645294 -25.61876106]
[23.27800560 -36.49640656]
[12.94955635 -47.37405014]
[-2.92057443 -51.50575638]
[-7.01603031 -67.38527679]
[4.87624311 -78.67713165]
[20.52249336 -73.76522064]
[23.82719994 -57.70249939]
[34.15565109 -46.82485580]
[44.48409653 -35.94720840]
[54.81254578 -25.06956482]
[65.14099121 -14.19192123]
[75.46944427 -3.31427622]
[85.79788971 7.56336832]
[96.12634277 18.44101334]
[106.45478821 29.31865692]
[120.93244934 33.24261093]
[135.34022522 29.06934929]
[149.74798584 24.89608574]
[164.15576172 20.72282410]
[178.56353760 16.54956245]
[189.66619873 5.27829647]
[204.04362488 9.16916466]
[218.45140076 4.99590254]
[232.81019592 0.65712065]
[247.11810303 -3.84660649]
[232.12068176 -3.56894898]
[220.80865479 -13.41975212]
[219.02247620 -28.31302452]
[227.68434143 -40.55933762]
[242.32211304 -43.83588791]
[255.37826538 -36.45099258]
[260.11178589 -22.21543503]
[259.59405518 -37.20649719]
[259.07632446 -52.19755936]
[252.48687744 -67.81855774]
[265.67324829 -78.47480774]
[279.56341553 -68.75369263]
[274.06738281 -52.71530151]
[274.58511353 -37.72423935]
[275.10287476 -22.73317719]
[286.50103760 -12.98118877]
[297.89822388 -3.23005509]
[312.78884888 -5.03810549]
[327.67947388 -6.84615564]
[342.55947876 -8.73985386]
[357.42831421 -10.71913624]
[372.29714966 -12.69841957]
[387.16598511 -14.67770290]
[402.03482056 -16.65698624]
[416.89202881 -18.72178841]
[431.73712158 -20.87204361]
[446.58218384 -23.02229691]
[461.42727661 -25.17255020]
[475.64468384 -36.90174103]
[491.67440796 -29.72090149]
[506.49377441 -32.04184341]
[521.31311035 -34.36278152]
[523.30017090 -49.51272202]
[534.25775146 -62.94153595]
[552.55120850 -69.39437866]
[573.58270264 -65.05758667]
[586.02471924 -73.43593597]
[598.46673584 -81.81428528]
[610.90869141 -90.19263458]
[623.35070801 -98.57098389]
[635.79266357 -106.94934082]
[648.23468018 -115.32769012]
[647.69714355 -129.07998657]
[653.96667480 -141.21022034]
[665.31530762 -148.60736084]
[678.72833252 -149.43376160]
[690.70483398 -143.58062744]
[703.24243164 -151.81524658]
[710.52960205 -165.85832214]
[725.41510010 -166.37814331]
[737.95269775 -174.61276245]
[738.54998779 -190.11833191]
[748.17358398 -202.29067993]
[763.12304688 -206.44926453]
[777.64996338 -200.99504089]
[786.16845703 -188.02525330]
[785.40295410 -172.52706909]
[775.64788818 -160.45985413]
[760.65417480 -156.46368408]
[746.18731689 -162.07518005]
[733.64971924 -153.84056091]
[727.25933838 -140.38647461]
[711.47705078 -139.27766418]
[698.93945312 -131.04304504]
[698.68261719 -114.61241150]
[688.57092285 -101.44874573]
[672.44171143 -96.87365723]
[656.61303711 -102.88569641]
[644.17102051 -94.50733948]
[631.72906494 -86.12899017]
[619.28704834 -77.75064087]
[606.84503174 -69.37229156]
[594.40307617 -60.99393845]
[581.96105957 -52.61558914]
[585.80163574 -38.11559296]
[600.75970459 -36.99464035]
[615.71777344 -35.87369156]
[627.63391113 -45.90579987]
[642.78753662 -44.55591202]
[652.27819824 -33.13386536]
[667.23626709 -32.01291275]
[680.28540039 -41.34561539]
[695.67803955 -36.82379532]
[701.60620117 -21.91621017]
[693.52233887 -8.05868149]
[677.62774658 -5.88151932]
[666.11529541 -17.05485725]
[651.15722656 -18.17580795]
[640.07025146 -8.29584312]
[624.88464355 -9.21956348]
[614.59680176 -20.91563225]
[599.63873291 -22.03658485]
[584.68072510 -23.15753555]
[580.17700195 -8.84961987]
[593.08020020 -1.20063114]
[605.98339844 6.44835806]
[618.88659668 14.09734726]
[631.78985596 21.74633598]
[644.69305420 29.39532471]
[657.59625244 37.04431534]
[670.49951172 44.69330215]
[683.40270996 52.34229279]
[700.11096191 55.21803284]
[701.97290039 72.06942749]
[686.29553223 78.52354431]
[675.75372314 65.24550629]
[662.85046387 57.59651947]
[649.94726562 49.94752884]
[637.04406738 42.29854202]
[624.14086914 34.64955139]
[611.23760986 27.00056267]
[598.33441162 19.35157394]
[585.43121338 11.70258427]
[572.52801514 4.05359507]
[538.86407471 2.71178842]
[523.63403320 -19.54342842]
[508.81469727 -17.22248840]
[493.99536133 -14.90154839]
[486.63659668 -5.32996273]
[474.33633423 -3.25722575]
[463.57754517 -10.32747078]
[448.73245239 -8.17721653]
[433.88735962 -6.02696228]
[419.04229736 -3.87670851]
[412.89593506 0.17716779]
[404.01412964 -1.78814495]
[389.14526367 0.19113824]
[374.27642822 2.17042136]
[359.40759277 4.14970446]
[344.53875732 6.12898779]
[338.34613037 10.11186695]
[329.48754883 8.04447746]
[314.59689331 9.85252762]
[299.70626831 11.66057777]
[251.62182617 10.46130848]
[237.31391907 14.96503639]
[234.36500549 18.67912292]
[229.06623840 20.60151672]
[222.62466431 19.40367317]
[208.21688843 23.57693672]
[198.14476013 34.54970169]
[182.73680115 30.95733452]
[168.32902527 35.13059616]
[153.92124939 39.30385971]
[139.51347351 43.47711945]
[125.10570526 47.65038300]
[147.72941589 70.39686584]
[154.26562500 100.72167969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[7 17]
[8 16]
[9 15]
[10 14]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[33 41]
[34 40]
[35 39]
[47 81]
[48 80]
[53 77]
[54 76]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[62 68]
[63 67]
[83 92]
[84 91]
[85 90]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[115 270]
[116 269]
[117 268]
[118 267]
[119 266]
[121 264]
[122 263]
[123 260]
[124 259]
[131 139]
[132 138]
[133 137]
[141 258]
[142 257]
[143 256]
[144 254]
[145 253]
[146 252]
[147 251]
[148 250]
[149 248]
[150 247]
[151 246]
[152 245]
[154 242]
[155 241]
[156 240]
[160 198]
[161 197]
[162 196]
[163 195]
[164 194]
[165 193]
[166 192]
[171 188]
[172 187]
[174 185]
[175 184]
[199 217]
[200 216]
[201 215]
[204 212]
[205 211]
[218 238]
[219 237]
[220 236]
[221 235]
[222 234]
[223 233]
[224 232]
[225 231]
[226 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
