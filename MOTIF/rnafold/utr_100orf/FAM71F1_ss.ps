%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGACUGGUGGUCCCAGGGCUUGGCCAGCUGCCCAAGGCCAGGAGGGGAGACAGAGAUCCCAGGACAAAUGUGCAGCAGGCCCCUGAGCAUGUGUAGAAAUGUUGUCAUCAUUUCCACAUAGAAAGACUUGGAGGAAAUCAAAGAAGACAGUAAAAGUCACAAGAUCCUAUCCAACCUUCCCUUCCCUGAAUGCCUGGG\
) } def
/len { sequence length } bind def

/coor [
[-86.11777496 570.26342773]
[-87.79970551 581.51312256]
[-93.53544617 591.27624512]
[-102.46184540 598.15942383]
[-113.26361084 601.19671631]
[-124.36708069 599.98553467]
[-132.16954041 612.79656982]
[-139.97201538 625.60754395]
[-147.77447510 638.41851807]
[-155.57695007 651.22949219]
[-163.17823792 664.16088867]
[-170.57649231 677.20947266]
[-177.97474670 690.25805664]
[-185.37300110 703.30670166]
[-184.70384216 719.69213867]
[-198.70236206 728.23461914]
[-212.96809387 720.14630127]
[-212.82565308 703.74774170]
[-198.42158508 695.90844727]
[-191.02333069 682.85980225]
[-183.62509155 669.81121826]
[-176.22683716 656.76263428]
[-176.61552429 651.99523926]
[-174.00788879 646.93426514]
[-168.38793945 643.42706299]
[-160.58546448 630.61608887]
[-152.78300476 617.80505371]
[-144.98054504 604.99407959]
[-137.17807007 592.18310547]
[-145.36587524 575.39166260]
[-141.75964355 556.90887451]
[-127.63703918 544.22650146]
[-108.57532501 542.59588623]
[-101.38191223 529.43328857]
[-94.18850708 516.27062988]
[-86.99509430 503.10800171]
[-86.54566193 495.72491455]
[-79.58500671 489.79714966]
[-72.18675232 476.74856567]
[-64.78849792 463.69995117]
[-57.69816971 450.48150635]
[-50.91966248 437.10049438]
[-44.14115906 423.71945190]
[-37.36265564 410.33843994]
[-30.68892670 396.90484619]
[-24.12038422 383.41952515]
[-17.55184364 369.93417358]
[-10.98330021 356.44885254]
[-4.41475821 342.96350098]
[2.15378404 329.47817993]
[8.08301830 315.69976807]
[13.35991192 301.65859985]
[10.59455967 287.02297974]
[22.69207764 276.82684326]
[27.96897125 262.78567505]
[27.37881851 255.41252136]
[33.43962097 248.56738281]
[38.93532181 234.61039734]
[44.43102264 220.65342712]
[49.92672348 206.69644165]
[40.54627609 195.12609863]
[38.20115280 180.31541443]
[43.62007141 166.22634888]
[55.44117355 156.67866516]
[70.55267334 154.31440735]
[76.04837799 140.35742188]
[81.54407501 126.40044403]
[66.22513580 110.37852478]
[64.07043457 86.29373932]
[78.48866272 64.42070007]
[70.28960419 51.85983276]
[62.09054565 39.29896164]
[53.89149094 26.73809052]
[45.69243240 14.17721939]
[37.49337769 1.61634874]
[25.04959297 -1.79709077]
[18.48020935 -12.43459511]
[20.84507370 -24.30290222]
[12.84333515 -36.99038315]
[4.84159613 -49.67786407]
[-9.91408348 -56.83341599]
[-10.82499504 -73.20724487]
[3.04592919 -81.95536041]
[17.42947197 -74.07844543]
[17.52907753 -57.67960358]
[25.53081703 -44.99212265]
[33.53255463 -32.30464172]
[49.47796631 -24.98411560]
[50.05424881 -6.58270788]
[58.25330353 5.97816277]
[66.45236206 18.53903389]
[74.65142059 31.09990311]
[82.85047150 43.66077423]
[91.04953003 56.22164536]
[98.47544861 57.27318192]
[97.30210114 42.31914520]
[91.64871216 28.42529106]
[98.21006775 14.93645668]
[112.63047028 10.80707264]
[125.33708954 18.77838898]
[127.89475250 33.55872726]
[118.60634613 45.33589935]
[113.32728577 59.37625504]
[120.75320435 60.42779160]
[132.11732483 50.63713455]
[143.48143005 40.84647751]
[154.84555054 31.05582237]
[166.20965576 21.26516724]
[171.61454773 6.39581347]
[186.30705261 3.95042706]
[197.67115784 -5.84022903]
[208.72370911 -15.98128223]
[219.45391846 -26.46282387]
[230.18412781 -36.94436646]
[240.91433716 -47.42590714]
[251.64453125 -57.90744781]
[262.37472534 -68.38899231]
[266.93176270 -86.22651672]
[284.08605957 -89.91112518]
[294.65115356 -100.55908966]
[290.54064941 -115.35772705]
[294.39575195 -130.22492981]
[305.17935181 -141.16152954]
[319.99081421 -145.22560120]
[334.84585571 -141.32394409]
[345.74859619 -130.50608826]
[349.76623535 -115.68196869]
[345.81802368 -100.83921814]
[334.96603394 -89.97045135]
[320.12942505 -85.99931335]
[305.29910278 -89.99401855]
[294.73403931 -79.34605408]
[294.46618652 -67.24739075]
[285.74432373 -58.28959274]
[272.85629272 -57.65878296]
[262.12606812 -47.17724228]
[251.39587402 -36.69570160]
[240.66566467 -26.21416092]
[229.93545532 -15.73261929]
[219.20526123 -5.25107765]
[219.04167175 -2.44492769]
[217.75213623 0.46514058]
[215.29159546 3.04826951]
[211.77224731 4.86532784]
[207.46180725 5.52388334]
[196.09770203 15.31453991]
[191.50564575 29.48359871]
[176.00030518 32.62928009]
[164.63619995 42.41993332]
[153.27207947 52.21059036]
[141.90797424 62.00124741]
[130.54386902 71.79190063]
[137.77520752 86.79745483]
[138.35212708 102.81235504]
[132.68014526 117.12300873]
[122.18270874 127.50241852]
[108.98562622 132.55537415]
[95.50105286 131.89614868]
[90.00535583 145.85311890]
[84.50965881 159.81010437]
[93.95221710 171.84277344]
[96.09004211 186.88693237]
[90.44811249 200.88818359]
[78.63454437 210.12373352]
[63.88370132 212.19213867]
[58.38800049 226.14912415]
[52.89229965 240.10610962]
[47.39659882 254.06307983]
[42.01013947 268.06259155]
[36.73324585 282.10375977]
[39.12115860 297.74371338]
[27.40107918 306.93551636]
[22.12418747 320.97668457]
[36.21448517 315.83239746]
[49.87578201 322.02667236]
[55.29100037 336.01507568]
[49.36151505 349.79336548]
[35.48021698 355.47750854]
[21.59007072 349.81503296]
[15.63911915 336.04672241]
[9.07057667 349.53204346]
[2.50203419 363.01739502]
[-4.06650829 376.50271606]
[-10.63505077 389.98806763]
[-17.20359230 403.47338867]
[-18.14981461 412.56701660]
[-23.98162842 417.11694336]
[-30.76013374 430.49795532]
[-37.53863907 443.87899780]
[-44.31714249 457.26000977]
[-44.02825165 462.48806763]
[-45.61925125 466.86355591]
[-48.44866943 469.81213379]
[-51.73990250 471.09820557]
[-59.13815308 484.14682007]
[-66.53640747 497.19540405]
[-73.83246613 510.30142212]
[-81.02587128 523.46405029]
[-88.21928406 536.62670898]
[-95.41269684 549.78930664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 22]
[12 21]
[13 20]
[14 19]
[33 200]
[34 199]
[35 198]
[36 197]
[38 196]
[39 195]
[40 194]
[41 190]
[42 189]
[43 188]
[44 187]
[45 185]
[46 184]
[47 183]
[48 182]
[49 181]
[50 180]
[51 173]
[52 172]
[54 170]
[55 169]
[57 168]
[58 167]
[59 166]
[60 165]
[65 160]
[66 159]
[67 158]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[78 87]
[79 86]
[80 85]
[104 152]
[105 151]
[106 150]
[107 149]
[108 148]
[110 146]
[111 145]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[119 132]
[120 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
