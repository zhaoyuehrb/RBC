%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGCCGCGCCCGCUGGGCCACAGAGGCCGCUGAGGCCGCGGCGCCCGCCAGCCUGUCCCGCGCCAUGGCCCCGCGCGCCCGGCGGCGCCGCCCGCUGUUCGCGCUGCUGCUGCUCUGCGCGCUGCUCGCCCGGCUGCAGGUGGCUUUGCAGAUCGCUCCUCCAU\
) } def
/len { sequence length } bind def

/coor [
[78.71597290 128.37545776]
[66.93840790 137.66462708]
[55.16083527 146.95381165]
[50.33383942 154.76031494]
[43.07322311 156.30445862]
[31.12300110 165.37043762]
[19.17277908 174.43643188]
[7.22255516 183.50242615]
[-4.72766781 192.56840515]
[-16.67789078 201.63439941]
[-22.99581528 216.13937378]
[-37.81181717 217.66757202]
[-49.76203918 226.73355103]
[-47.52079391 243.09501648]
[-53.78891754 258.27209473]
[-66.77318573 268.17013550]
[-82.88248444 270.17037964]
[-97.72077942 263.82211304]
[-109.49835205 273.11129761]
[-121.27591705 282.40048218]
[-133.05348206 291.68963623]
[-136.35577393 307.38916016]
[-150.75321960 314.46679688]
[-165.20135498 307.49319458]
[-168.61679077 291.81790161]
[-158.37951660 279.46569824]
[-142.34266663 279.91207886]
[-130.56509399 270.62289429]
[-118.78752899 261.33370972]
[-107.00995636 252.04454041]
[-109.86016083 238.66477966]
[-106.64316559 225.30027771]
[-97.93305969 214.58026123]
[-85.39030457 208.63899231]
[-71.44541931 208.69102478]
[-58.82802963 214.78334045]
[-46.87780762 205.71734619]
[-41.41464233 191.86082458]
[-25.74388123 189.68417358]
[-13.79365730 180.61817932]
[-1.84343433 171.55220032]
[10.10678864 162.48620605]
[22.05701256 153.42021179]
[34.00723648 144.35423279]
[45.87165833 135.17623901]
[57.64922714 125.88706207]
[69.42679596 116.59787750]
[76.85071564 83.10870361]
[104.19422913 77.86865234]
[111.73491669 64.90184784]
[119.27561188 51.93504715]
[126.81629944 38.96824265]
[128.43736267 29.93421364]
[134.62277222 25.83035851]
[142.40603638 13.00769806]
[150.18931580 0.18503636]
[157.97257996 -12.63762474]
[165.75585938 -25.46028709]
[165.71430969 -43.85457993]
[181.38050842 -51.72203445]
[188.92118835 -64.68883514]
[196.46188354 -77.65563965]
[196.71087646 -93.47488403]
[209.79757690 -100.58737946]
[217.33825684 -113.55418396]
[213.94035339 -123.94358063]
[216.78642273 -134.26936340]
[224.69563293 -141.16133118]
[234.87731934 -142.50985718]
[242.90042114 -155.18383789]
[250.92352295 -167.85781860]
[247.91880798 -178.36769104]
[251.15126038 -188.57910156]
[259.31411743 -195.16868591]
[269.53930664 -196.13328552]
[278.03347778 -208.49650574]
[286.52761841 -220.85972595]
[295.02178955 -233.22296143]
[303.51593018 -245.58618164]
[312.01010132 -257.94940186]
[309.33508301 -273.29483032]
[318.12548828 -285.71188354]
[332.77148438 -288.16754150]
[341.26562500 -300.53076172]
[349.75979614 -312.89401245]
[358.25393677 -325.25723267]
[366.74810791 -337.62045288]
[375.24224854 -349.98367310]
[383.61975098 -362.42623901]
[391.87985229 -374.94705200]
[393.02072144 -390.72708130]
[406.48779297 -397.09008789]
[414.74786377 -409.61090088]
[415.88876343 -425.39093018]
[429.35580444 -431.75393677]
[437.61590576 -444.27474976]
[435.81515503 -460.21640015]
[447.25753784 -471.46145630]
[463.16546631 -469.38363647]
[471.33572388 -455.57687378]
[465.50079346 -440.63253784]
[450.13671875 -436.01464844]
[441.87661743 -423.49383545]
[441.32656860 -408.60940552]
[427.26867676 -401.35079956]
[419.00860596 -388.82998657]
[418.45852661 -373.94555664]
[404.40066528 -366.68698120]
[396.14056396 -354.16616821]
[395.07748413 -346.81967163]
[387.60546875 -341.48950195]
[379.11132812 -329.12628174]
[370.61715698 -316.76306152]
[362.12301636 -304.39984131]
[353.62884521 -292.03662109]
[345.13470459 -279.67340088]
[348.09536743 -265.12106323]
[339.65719604 -252.46200562]
[324.37332153 -249.45524597]
[315.87918091 -237.09202576]
[307.38500977 -224.72880554]
[298.89086914 -212.36557007]
[290.39669800 -200.00234985]
[281.90255737 -187.63912964]
[281.84838867 -168.32795715]
[263.59750366 -159.83471680]
[255.57440186 -147.16073608]
[247.55130005 -134.48675537]
[248.22355652 -115.18721008]
[230.30506897 -106.01348877]
[222.76437378 -93.04668427]
[223.05474854 -78.15491486]
[209.42868042 -70.11494446]
[201.88800049 -57.14814377]
[194.34730530 -44.18133926]
[197.13615417 -32.38307571]
[190.92414856 -21.50736809]
[178.57852173 -17.67701149]
[170.79524231 -4.85435104]
[163.01197815 7.96831036]
[155.22869873 20.79097176]
[147.44541931 33.61363220]
[139.78311157 46.50893402]
[132.24241638 59.47573853]
[124.70172119 72.44254303]
[117.16102600 85.40933990]
[124.44300842 92.42124176]
[128.50390625 102.95509338]
[127.72774506 115.41043091]
[121.31722260 127.49156952]
[128.36483765 140.73283386]
[143.22727966 146.77333069]
[147.63284302 162.19961548]
[138.20195007 175.17799377]
[122.16919708 175.75253296]
[111.83351135 163.48251343]
[115.12356567 147.78044128]
[108.07595825 134.53918457]
[100.73596191 132.99824524]
[100.57261658 147.99736023]
[105.50440216 162.16342163]
[98.18090820 175.25411987]
[83.52834320 178.46386719]
[71.40290833 169.63359070]
[69.96088409 154.70306396]
[80.17365265 143.71487427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 47]
[2 46]
[3 45]
[5 44]
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[12 37]
[13 36]
[18 30]
[19 29]
[20 28]
[21 27]
[49 146]
[50 145]
[51 144]
[52 143]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[60 135]
[61 134]
[62 133]
[64 131]
[65 130]
[69 128]
[70 127]
[71 126]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
[89 109]
[90 108]
[92 106]
[93 105]
[95 103]
[96 102]
[150 158]
[151 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
