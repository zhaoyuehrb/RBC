%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCCGCCCCGCCCCGGCUCGGGCGGCCGGAGGACCCGGAGCUAAGGCGCCCGAACCCGCGGCGGCGGUGGGGACGAUGUGGUUCUUUGCCCGGGACCCGGUCCGGGACUUUCCGUUCGAGCUCAUCCCGGAGCCCCCAGAGGGCGGCCUGCCCGGGCCCUGGGCCCUGCACCGCG\
) } def
/len { sequence length } bind def

/coor [
[-237.83206177 186.42477417]
[-249.68553162 175.08810425]
[-264.35037231 178.24130249]
[-279.01519775 181.39450073]
[-293.68002319 184.54769897]
[-308.34484863 187.70088196]
[-323.00970459 190.85408020]
[-337.67453003 194.00727844]
[-352.33935547 197.16047668]
[-366.97579956 200.44294739]
[-381.58270264 203.85446167]
[-396.18960571 207.26597595]
[-410.79650879 210.67749023]
[-425.40341187 214.08900452]
[-437.08218384 224.76217651]
[-451.23565674 220.12226868]
[-465.84255981 223.53378296]
[-480.44946289 226.94529724]
[-493.56982422 239.84585571]
[-510.15277100 234.14300537]
[-524.69720459 237.81178284]
[-539.24157715 241.48056030]
[-553.78601074 245.14932251]
[-568.33044434 248.81809998]
[-582.87487793 252.48687744]
[-597.41925049 256.15563965]
[-605.00219727 261.30368042]
[-612.25274658 259.75842285]
[-626.85968018 263.16992188]
[-635.22320557 276.31103516]
[-650.08532715 279.56271362]
[-662.56176758 271.50833130]
[-677.16870117 274.91986084]
[-682.24206543 289.48916626]
[-694.40087891 298.98474121]
[-709.76531982 300.37664795]
[-723.43267822 293.22070312]
[-731.04168701 279.80032349]
[-730.16436768 264.39791870]
[-721.08068848 251.92834473]
[-706.68920898 246.37059021]
[-691.58215332 249.49812317]
[-680.58020020 260.31295776]
[-665.97332764 256.90142822]
[-658.35522461 244.15388489]
[-643.59033203 240.48603821]
[-630.27117920 248.56301880]
[-615.66424561 245.15150452]
[-601.08801270 241.61122131]
[-586.54364014 237.94245911]
[-571.99920654 234.27368164]
[-557.45477295 230.60490417]
[-542.91033936 226.93614197]
[-528.36596680 223.26736450]
[-513.82153320 219.59858704]
[-507.33813477 209.36387634]
[-495.22772217 206.20088196]
[-483.86096191 212.33839417]
[-469.25408936 208.92687988]
[-454.64718628 205.51536560]
[-444.01315308 195.08621216]
[-428.81491089 199.48211670]
[-414.20800781 196.07060242]
[-399.60113525 192.65907288]
[-384.99423218 189.24755859]
[-370.38732910 185.83604431]
[-364.57131958 181.23902893]
[-355.49255371 182.49563599]
[-340.82772827 179.34243774]
[-326.16290283 176.18923950]
[-311.49804688 173.03605652]
[-296.83322144 169.88285828]
[-282.16839600 166.72966003]
[-267.50354004 163.57647705]
[-252.83871460 160.42327881]
[-248.58485413 147.75079346]
[-238.53904724 138.76873779]
[-225.25958252 135.90818787]
[-212.19996643 140.02268982]
[-202.81095886 150.13742065]
[-188.09275818 147.24353027]
[-173.37455750 144.34962463]
[-158.65635681 141.45573425]
[-143.93815613 138.56184387]
[-140.28170776 124.10169983]
[-130.67002869 112.61584473]
[-116.96846008 106.41680145]
[-101.87255859 106.78292847]
[-88.37781525 113.69515228]
[-79.18523407 125.83013916]
[-64.46703339 122.93624878]
[-49.74883652 120.04235077]
[-35.03063965 117.14846039]
[-20.31243896 114.25457001]
[-5.59423923 111.36067963]
[9.12396049 108.46678925]
[20.11940193 98.41942596]
[35.15304184 103.34895325]
[49.87124252 100.45506287]
[64.58943939 97.56117249]
[79.30764008 94.66728210]
[94.02584076 91.77339172]
[108.00728607 86.34024811]
[120.81759644 78.53665924]
[133.62789917 70.73306274]
[146.43820190 62.92947388]
[159.24851990 55.12588120]
[172.05882263 47.32228851]
[184.86912537 39.51869583]
[188.61080933 20.97081947]
[204.43402100 11.18842506]
[222.08337402 15.96517563]
[234.61030579 7.71435070]
[247.13722229 -0.53647441]
[251.76647949 -15.89712334]
[266.71511841 -21.72101021]
[280.51583862 -13.54054642]
[282.58187866 2.36891580]
[271.32839966 13.80299854]
[255.38806152 11.99045181]
[242.86112976 20.24127769]
[230.33419800 28.49210167]
[230.50689697 39.93500137]
[225.06594849 50.13933563]
[215.26695251 56.50352478]
[203.49237061 57.34176254]
[192.67271423 52.32900238]
[179.86241150 60.13259506]
[167.05210876 67.93618774]
[154.24180603 75.73977661]
[141.43148804 83.54337311]
[128.62118530 91.34696198]
[115.81088257 99.15055084]
[117.79064178 114.01933289]
[132.19653320 118.19911194]
[146.60240173 122.37889862]
[161.04461670 126.43138885]
[175.52201843 130.35627747]
[189.99942017 134.28115845]
[206.86880493 132.58993530]
[213.16384888 148.33187866]
[199.77975464 158.73870850]
[186.07453918 148.75857544]
[171.59712219 144.83367920]
[157.11972046 140.90879822]
[149.81913757 142.19720459]
[142.42262268 136.78477478]
[128.01673889 132.60499573]
[113.61086273 128.42521667]
[107.07356262 125.69383240]
[101.97360992 121.69404602]
[98.52670288 116.85325623]
[96.84223175 111.63036346]
[96.91973114 106.49159241]
[82.20153046 109.38548279]
[67.48332977 112.27937317]
[52.76513290 115.17326355]
[38.04693222 118.06715393]
[25.99874687 128.32150269]
[12.01785088 123.18498993]
[-2.70034838 126.07888031]
[-17.41854858 128.97277832]
[-32.13674545 131.86666870]
[-46.85494614 134.76055908]
[-61.57314682 137.65444946]
[-76.29134369 140.54833984]
[-80.20527649 155.26031494]
[-90.07846832 166.76715088]
[-103.91200256 172.82136536]
[-118.94058228 172.27125549]
[-132.18534851 165.27941895]
[-141.04426575 153.28004456]
[-155.76246643 156.17393494]
[-170.48066711 159.06782532]
[-185.19886780 161.96171570]
[-199.91706848 164.85560608]
[-206.81135559 180.28540039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 75]
[3 74]
[4 73]
[5 72]
[6 71]
[7 70]
[8 69]
[9 68]
[10 66]
[11 65]
[12 64]
[13 63]
[14 62]
[16 60]
[17 59]
[18 58]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[25 50]
[26 49]
[28 48]
[29 47]
[32 44]
[33 43]
[80 176]
[81 175]
[82 174]
[83 173]
[84 172]
[90 166]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
[98 158]
[99 157]
[100 156]
[101 155]
[102 154]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[108 128]
[109 127]
[112 122]
[113 121]
[114 120]
[134 149]
[135 148]
[136 147]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
