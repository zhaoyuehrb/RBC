%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAAGAGCGGCCGGCGGUACGGGGGUGGUGCCGCGCUCCUGGCCCCGCGCGGGCGGACGGCGGAGGCGCCUCCCAGCCUGCUAUGGGAUGGAUGAAGAAGAGAACCACUAUGUCUCGCAGCUCAGGGAAGUCUACAGCAGCUGCGACACCACGGGGACUGGCUUUCUGGACCGCCAGGAGCUGACCC\
) } def
/len { sequence length } bind def

/coor [
[136.96932983 255.82141113]
[137.21087646 270.81945801]
[133.45654297 285.34204102]
[125.97655487 298.34396362]
[115.30921173 308.88946533]
[102.22224426 316.21963501]
[87.65750885 319.80688477]
[72.66321564 319.39309692]
[58.31849289 315.00799561]
[45.65571976 306.96722412]
[35.58621979 295.84942627]
[28.83469200 282.45477295]
[25.88703346 267.74725342]
[26.95538521 252.78535461]
[31.96161842 238.64828491]
[20.88142586 248.75912476]
[9.80123425 258.86999512]
[-1.27895772 268.98083496]
[-12.35914993 279.09167480]
[-23.43934250 289.20254517]
[-34.51953506 299.31338501]
[-33.68916321 314.92892456]
[-43.13178253 327.39370728]
[-58.38887787 330.82226562]
[-72.25651550 323.59573364]
[-78.18682098 309.12628174]
[-73.37968445 294.24591064]
[-60.10488892 285.98068237]
[-44.63038635 288.23321533]
[-33.55019379 278.12234497]
[-22.47000313 268.01150513]
[-11.38981056 257.90063477]
[-0.30961850 247.78979492]
[10.77057362 237.67893982]
[21.85076523 227.56808472]
[31.00689316 215.68678284]
[37.96075439 202.39604187]
[44.91461182 189.10530090]
[51.86847305 175.81455994]
[58.82233047 162.52381897]
[65.77619171 149.23307800]
[72.73004913 135.94232178]
[79.68390656 122.65158844]
[86.63777161 109.36083984]
[83.29995728 94.73692322]
[71.26810455 85.77954865]
[59.23625946 76.82216644]
[47.20441055 67.86478424]
[28.87802505 66.16094208]
[22.54402733 49.80353928]
[10.36495781 41.04738235]
[-1.81411207 32.29122925]
[-13.99318218 23.53507233]
[-26.17225266 14.77891731]
[-38.35132217 6.02276230]
[-50.67424774 -2.52974963]
[-63.13763046 -10.87625599]
[-75.60100555 -19.22276115]
[-84.49108887 -21.40423012]
[-88.20059967 -27.81301498]
[-100.52352142 -36.36552811]
[-112.84645081 -44.91803741]
[-125.16938019 -53.47055054]
[-141.54794312 -54.29197311]
[-148.78402710 -69.00833130]
[-139.43376160 -82.48069763]
[-123.11590576 -80.84985352]
[-116.61686707 -65.79347992]
[-104.29393768 -57.24096680]
[-91.97101593 -48.68845367]
[-79.64808655 -40.13594437]
[-67.25450134 -31.68614197]
[-54.79112244 -23.33963585]
[-42.32774353 -14.99312973]
[-37.53478622 -15.02962589]
[-32.67195129 -12.04276562]
[-29.59516716 -6.15630770]
[-17.41609764 2.59984732]
[-5.23702717 11.35600281]
[6.94204283 20.11215782]
[19.12111282 28.86831284]
[31.30018234 37.62446594]
[43.29701233 35.98439407]
[53.51864243 43.19585037]
[56.16178894 55.83293915]
[68.19363403 64.79032135]
[80.22548676 73.74769592]
[92.25733185 82.70507812]
[99.29486084 84.02568054]
[104.25579834 87.68376923]
[106.56134796 92.35881042]
[120.78025818 87.58151245]
[123.92304230 74.14986420]
[133.22209167 64.10808563]
[146.16665649 60.00988007]
[159.33868408 62.82507324]
[169.31530762 71.71262360]
[183.61164856 67.17232513]
[197.90800476 62.63202286]
[212.20436096 58.09172058]
[226.50070190 53.55141830]
[240.67942810 48.65610886]
[254.73168945 43.40884018]
[261.35028076 29.30806160]
[275.67602539 24.18676186]
[289.07818604 30.58347893]
[303.13043213 25.33620644]
[304.72866821 11.42950058]
[312.13098145 -0.37336689]
[323.84252930 -7.79636145]
[337.54428101 -9.43718624]
[350.55197144 -5.03188372]
[360.34216309 4.50465584]
[374.47970581 -0.50832230]
[384.90060425 -12.41274643]
[399.48190308 -9.37375546]
[413.61944580 -14.38673401]
[427.75695801 -19.39971161]
[441.89450073 -24.41269112]
[456.03204346 -29.42566872]
[470.16958618 -34.43864822]
[484.30712891 -39.45162582]
[498.44467163 -44.46460342]
[503.05374146 -61.98450089]
[517.12445068 -73.14426422]
[534.91973877 -73.63394165]
[549.32647705 -63.44614029]
[563.28955078 -68.92625427]
[573.08569336 -82.07800293]
[589.33978271 -79.90172577]
[595.33105469 -64.63619232]
[584.89617920 -51.98527145]
[568.76971436 -54.96315002]
[554.80657959 -49.48303223]
[553.52301025 -37.38987732]
[547.17578125 -26.93203354]
[536.92004395 -20.13148117]
[524.67346191 -18.33358765]
[512.75756836 -21.94133377]
[503.45764160 -30.32706261]
[489.32009888 -25.31408501]
[475.18258667 -20.30110741]
[461.04504395 -15.28812790]
[446.90750122 -10.27515030]
[432.76995850 -5.26217175]
[418.63241577 -0.24919349]
[404.49487305 4.76378489]
[395.08517456 16.30964661]
[379.49267578 13.62921810]
[365.35513306 18.64219666]
[362.81082153 34.59079361]
[352.51565552 47.15584564]
[337.20294189 52.85223007]
[321.01385498 50.03849411]
[308.37771606 39.38847351]
[294.32543945 44.63574219]
[288.39602661 58.25108337]
[274.21978760 63.77274323]
[259.97897339 57.46110535]
[245.92669678 62.70837402]
[244.13638306 65.76670074]
[240.76631165 68.10258484]
[236.17562866 68.97872925]
[231.04101562 67.84777069]
[216.74465942 72.38806915]
[202.44830322 76.92837524]
[188.15196228 81.46867371]
[173.85560608 86.00897217]
[169.18716431 101.73789215]
[155.93475342 111.68997955]
[139.19578552 111.78987885]
[125.55755615 101.80042267]
[111.33864594 106.57772064]
[99.92851257 116.31470490]
[92.97465515 129.60543823]
[86.02079010 142.89619446]
[79.06693268 156.18693542]
[72.11307526 169.47767639]
[65.15921021 182.76841736]
[58.20535278 196.05915833]
[51.25149536 209.34989929]
[44.29763412 222.64064026]
[56.69491577 214.19627380]
[70.89099121 209.35153198]
[85.86418152 208.45510864]
[100.53688049 211.57150269]
[113.85310364 218.47644043]
[124.85449982 228.67297363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[45 88]
[46 87]
[47 86]
[48 85]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 74]
[57 73]
[58 72]
[60 71]
[61 70]
[62 69]
[63 68]
[91 173]
[92 172]
[97 168]
[98 167]
[99 166]
[100 165]
[101 164]
[102 160]
[103 159]
[106 156]
[107 155]
[113 150]
[114 149]
[116 147]
[117 146]
[118 145]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
