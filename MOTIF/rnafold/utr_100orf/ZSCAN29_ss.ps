%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCUUCUGAUAGUGCCAUCUUUCUCUGCCCUAGGAAGAAACACCUCUUACAGUCAUCUGCAGGGGAUUCUCCAAGGACAUGGGAAGAUAGAUGUAAGCCCUGGAACCCAGACUCCUAAGCGAAGGGAAGCUGCAUUCUGCUAUUAAUGAUGGCCAAAUCAGCUCUAAGAGAGAAUGGCACUAACUCUGAGACCUUCCGACAGCGUUUCAGGAGAUUCCAUUACCAGGAGGUGGCUGGGCCGCGGG\
) } def
/len { sequence length } bind def

/coor [
[231.12600708 445.03692627]
[237.23042297 431.33523560]
[250.17333984 423.75363159]
[265.11004639 425.12997437]
[276.44885254 434.94790649]
[274.17742920 420.12088013]
[271.90600586 405.29385376]
[269.63461304 390.46685791]
[267.36318970 375.63983154]
[265.09176636 360.81280518]
[246.17912292 337.29666138]
[254.00862122 314.02963257]
[244.82702637 302.16799927]
[235.64544678 290.30636597]
[226.46385193 278.44473267]
[217.28225708 266.58309937]
[208.10067749 254.72145081]
[198.91908264 242.85981750]
[189.73748779 230.99818420]
[180.55590820 219.13655090]
[173.99235535 215.77919006]
[171.33427429 207.06599426]
[162.30368042 195.08900452]
[153.27307129 183.11201477]
[144.24247742 171.13502502]
[135.21188354 159.15803528]
[126.18128204 147.18104553]
[117.15068817 135.20405579]
[87.81087494 150.35488892]
[48.39297485 138.62184143]
[22.98182487 96.27181244]
[8.25180531 99.10492706]
[-6.47821426 101.93804169]
[-18.56862450 112.14257812]
[-32.52819824 106.94839478]
[-47.25821686 109.78150940]
[-61.98823547 112.61462402]
[-69.80175018 117.29798889]
[-76.92272186 115.38909149]
[-91.68744659 118.03538513]
[-106.45217133 120.68167877]
[-112.12142944 129.92852783]
[-121.73962402 134.44808960]
[-132.04234314 132.97230530]
[-139.67623901 126.22459412]
[-154.50326538 128.49601746]
[-169.33029175 130.76742554]
[-184.15731812 133.03884888]
[-198.98434448 135.31025696]
[-207.22088623 145.21545410]
[-219.59999084 146.81324768]
[-229.42935181 139.78883362]
[-244.28396606 141.87225342]
[-259.13858032 143.95565796]
[-271.72409058 154.46932983]
[-287.02673340 148.57350159]
[-289.30447388 132.33331299]
[-276.21417236 122.45526886]
[-261.22198486 129.10105896]
[-246.36738586 127.01763916]
[-231.51277161 124.93422699]
[-218.26774597 113.40611267]
[-201.25575256 120.48323822]
[-186.42872620 118.21182251]
[-171.60169983 115.94040680]
[-156.77467346 113.66899109]
[-141.94764709 111.39757538]
[-127.75630188 98.24344635]
[-109.09847260 105.91695404]
[-94.33374786 103.27066040]
[-79.56901550 100.62436676]
[-64.82135010 97.88460541]
[-50.09133148 95.05149078]
[-35.36131287 92.21837616]
[-24.32449341 82.21648407]
[-9.31132889 87.20802307]
[5.41869068 84.37490845]
[20.14871025 81.54179382]
[23.53943062 66.93005371]
[11.56243992 57.89945221]
[-0.41455132 48.86885452]
[-12.39154243 39.83826065]
[-26.49964333 45.90926361]
[-41.75123215 44.09692001]
[-54.04370880 34.88874054]
[-60.07046127 20.76167870]
[-58.21031952 5.51584530]
[-48.96365738 -6.74770927]
[-34.81777191 -12.73014927]
[-19.57784462 -10.82222939]
[-7.34333515 -1.53716969]
[-1.40526450 12.62739468]
[-3.36094499 27.86126709]
[8.61604595 36.89186478]
[20.59303665 45.92246246]
[32.57002640 54.95306015]
[38.41254807 50.25040436]
[29.00724030 38.56536484]
[26.70449448 23.74317360]
[40.69227982 29.16005707]
[50.09758759 40.84509659]
[55.94010925 36.14244461]
[49.67747498 22.51235199]
[43.41484070 8.88225937]
[37.15220261 -4.74783278]
[25.04508018 -16.61602020]
[33.09786987 -31.53543472]
[49.66345978 -27.92745781]
[50.78229523 -11.01046753]
[57.04492950 2.61962438]
[63.30756760 16.24971581]
[69.57019806 29.87980843]
[76.85401154 28.09203720]
[91.42163086 24.51649666]
[98.70543671 22.72872543]
[97.94570160 7.74797773]
[97.18595886 -7.23276997]
[96.42622375 -22.21351814]
[83.84511566 -31.50058556]
[80.22731018 -46.71391678]
[87.28102112 -60.67024612]
[101.67572021 -66.77981567]
[116.61464691 -62.15787888]
[125.04411316 -48.98677063]
[122.98397827 -33.48548508]
[111.40697479 -22.97325516]
[112.16670990 -7.99250746]
[112.92644501 6.98824024]
[113.68618774 21.96898842]
[128.13328552 26.00400543]
[136.54566956 13.58499432]
[144.95805359 1.16598356]
[153.37042236 -11.25302696]
[161.78280640 -23.67203903]
[163.99617004 -32.50866699]
[170.38124084 -36.19416046]
[178.95027161 -48.50561142]
[187.51928711 -60.81706238]
[184.93743896 -76.17843628]
[193.80302429 -88.54193115]
[208.46366882 -90.90866089]
[217.03268433 -103.22011566]
[225.60171509 -115.53156281]
[234.17073059 -127.84301758]
[242.73976135 -140.15446472]
[251.30877686 -152.46592712]
[255.39456177 -168.92018127]
[272.33682251 -169.54907227]
[277.63122559 -153.44299316]
[263.62023926 -143.89689636]
[255.05120850 -131.58544922]
[246.48217773 -119.27399445]
[237.91316223 -106.96253967]
[229.34413147 -94.65109253]
[220.77511597 -82.33963776]
[223.64741516 -67.76962280]
[215.13259888 -55.16198730]
[199.83073425 -52.24803925]
[191.26171875 -39.93658829]
[182.69268799 -27.62513542]
[174.20182800 -15.25965595]
[165.78944397 -2.84064531]
[157.37705994 9.57836533]
[148.96467590 21.99737549]
[140.55229187 34.41638565]
[156.57186890 62.95618820]
[157.54479980 91.74449921]
[146.54858398 114.13281250]
[129.12768555 126.17345428]
[138.15827942 138.15045166]
[147.18887329 150.12744141]
[156.21946716 162.10443115]
[165.25006104 174.08142090]
[174.28067017 186.05841064]
[183.31126404 198.03540039]
[192.41754150 209.95495605]
[201.59913635 221.81658936]
[210.78071594 233.67822266]
[219.96231079 245.53987122]
[229.14390564 257.40148926]
[238.32548523 269.26312256]
[247.50708008 281.12478638]
[256.68865967 292.98641968]
[265.87026978 304.84805298]
[281.06057739 300.70513916]
[297.90237427 307.65304565]
[308.37884521 325.51684570]
[322.44512939 330.72640991]
[336.51141357 335.93600464]
[350.57769775 341.14556885]
[364.64398193 346.35516357]
[378.71023560 351.56472778]
[392.77651978 356.77429199]
[406.84280396 361.98388672]
[420.94180298 367.10427856]
[435.07296753 372.13525391]
[449.23983765 365.12988281]
[464.18389893 370.27291870]
[471.03909302 384.51306152]
[465.73834229 399.40188599]
[451.42651367 406.10617065]
[436.59454346 400.64831543]
[430.04196167 386.26638794]
[415.91082764 381.23541260]
[408.57327271 381.95108032]
[401.63323975 376.05017090]
[387.56695557 370.84057617]
[373.50067139 365.63101196]
[359.43438721 360.42141724]
[345.36810303 355.21185303]
[331.30181885 350.00225830]
[317.23553467 344.79269409]
[303.16925049 339.58312988]
[297.35662842 344.32269287]
[307.20336914 355.63824463]
[317.05007935 366.95382690]
[326.89678955 378.26937866]
[340.49087524 384.60983276]
[342.34317017 399.49502563]
[330.71762085 408.97375488]
[316.51031494 404.16204834]
[313.03683472 389.57070923]
[303.93502808 377.64773560]
[294.83322144 365.72476196]
[285.73141479 353.80181885]
[279.91879272 358.54138184]
[282.19021606 373.36840820]
[284.46160889 388.19543457]
[286.73303223 403.02246094]
[289.00445557 417.84948730]
[291.27587891 432.67651367]
[294.29534912 447.36944580]
[298.05514526 461.89059448]
[301.81494141 476.41177368]
[305.57470703 490.93292236]
[309.33450317 505.45407104]
[319.15795898 519.27203369]
[308.59939575 532.53680420]
[292.93014526 526.06292725]
[294.81335449 509.21386719]
[291.05355835 494.69271851]
[287.29376221 480.17153931]
[283.53399658 465.65039062]
[279.77420044 451.12924194]
[273.22512817 464.62402344]
[260.04125977 471.77847290]
[245.15751648 469.91455078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 231]
[6 230]
[7 229]
[8 228]
[9 227]
[10 226]
[12 184]
[13 183]
[14 182]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[28 169]
[31 78]
[32 77]
[33 76]
[35 74]
[36 73]
[37 72]
[39 71]
[40 70]
[41 69]
[45 67]
[46 66]
[47 65]
[48 64]
[49 63]
[52 61]
[53 60]
[54 59]
[79 96]
[80 95]
[81 94]
[82 93]
[102 112]
[103 111]
[104 110]
[105 109]
[115 129]
[116 128]
[117 127]
[118 126]
[130 165]
[131 164]
[132 163]
[133 162]
[134 161]
[136 160]
[137 159]
[138 158]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[146 150]
[187 213]
[188 212]
[189 211]
[190 210]
[191 209]
[192 208]
[193 207]
[194 206]
[195 204]
[196 203]
[232 244]
[233 243]
[234 242]
[235 241]
[236 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
