%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCUUUGUCUGAAGGUGCUGCGGGAUGCCGUUCCUUCGCGCGUGAGGCUGCGGCUCUGACGCCCCAUAGGCUCCUUCAAUUUCCGUGAUCCUCGGAGUCCCCAGGAGACCAGGUGAUGGCAGCAGCCAGACUCCUGCCAGUGCCGGCAGGACCCCAGCCCCUGUCGUUCCAGGCCAAGCUGACCUUCGAGGAUGUGGCUGUGCUCCUCUCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[65.24341583 213.27746582]
[60.56706238 227.52989197]
[55.89070892 241.78231812]
[51.31717300 256.06808472]
[46.84669113 270.38641357]
[42.37620926 284.70474243]
[37.90572739 299.02310181]
[33.43524170 313.34143066]
[37.55548859 329.21453857]
[25.68086243 340.52493286]
[10.02696133 335.63748169]
[6.69717646 319.57992554]
[19.11690521 308.87094116]
[23.58738899 294.55261230]
[28.05787086 280.23425293]
[32.52835464 265.91592407]
[36.99883652 251.59759521]
[35.99232483 244.27976990]
[41.63828278 237.10597229]
[46.31463242 222.85354614]
[50.99098587 208.60110474]
[41.76013947 192.78829956]
[47.11601257 174.94529724]
[64.10212708 166.54649353]
[68.36581421 152.16522217]
[72.62950134 137.78395081]
[76.89318085 123.40267944]
[65.06953430 114.17114258]
[53.24694824 104.94040680]
[40.32921982 112.56486511]
[27.46676445 120.28219604]
[14.66024971 128.09201050]
[11.18165016 143.50872803]
[-2.22378850 151.87948608]
[-17.60285759 148.23808289]
[-25.83142662 134.74490356]
[-22.02763367 119.40518951]
[-8.44820023 111.31974030]
[6.85043621 115.28549957]
[19.65695000 107.47568512]
[23.72889328 101.31265259]
[32.70476532 99.64713287]
[45.62249374 92.02268219]
[48.94525146 77.39533234]
[40.58924484 64.93832397]
[25.33977509 61.76162338]
[17.04305077 49.00940704]
[20.16552734 34.49094391]
[11.80951977 22.03393173]
[3.45351315 9.57692051]
[-4.90249348 -2.88009191]
[-13.25850010 -15.33710384]
[-21.61450768 -27.79411697]
[-35.72770691 -34.94451523]
[-36.39207458 -49.82429504]
[-44.74808121 -62.28130722]
[-53.10408783 -74.73831940]
[-64.98635864 -74.72171021]
[-75.29686737 -80.38284302]
[-81.53194427 -90.21514893]
[-82.24147797 -101.71606445]
[-77.36471558 -112.02355957]
[-85.35826874 -124.71620178]
[-93.35181427 -137.40884399]
[-101.34536743 -150.10148621]
[-109.67580414 -150.40980530]
[-117.12277985 -153.94212341]
[-122.50782013 -160.05744934]
[-125.01135254 -167.71298218]
[-124.29691315 -175.64144897]
[-120.55441284 -182.56089783]
[-127.80343628 -195.69297791]
[-135.14689636 -208.77249146]
[-142.58441162 -221.79875183]
[-150.02192688 -234.82501221]
[-157.45942688 -247.85127258]
[-164.89694214 -260.87753296]
[-180.08886719 -259.89419556]
[-194.14393616 -265.58120728]
[-204.29449463 -276.76092529]
[-208.56690979 -291.17990112]
[-206.16513062 -305.96304321]
[-197.61837769 -318.18673706]
[-205.05589294 -331.21298218]
[-212.49340820 -344.23925781]
[-219.93092346 -357.26550293]
[-227.36843872 -370.29177856]
[-242.78646851 -372.90292358]
[-252.87951660 -384.84716797]
[-252.88194275 -400.48474121]
[-242.79260254 -412.43209839]
[-227.37538147 -415.04803467]
[-213.90980530 -407.09741211]
[-208.75392151 -392.33425903]
[-214.34217834 -377.72927856]
[-206.90466309 -364.70303345]
[-199.46714783 -351.67675781]
[-192.02963257 -338.65051270]
[-184.59213257 -325.62423706]
[-169.72102356 -326.77127075]
[-155.76924133 -321.32543945]
[-145.52351379 -310.31698608]
[-141.05525208 -295.89288330]
[-143.30184937 -280.89822388]
[-151.87068176 -268.31503296]
[-144.43316650 -255.28877258]
[-136.99566650 -242.26252747]
[-129.55815125 -229.23626709]
[-122.12063599 -216.21000671]
[-116.07751465 -211.96214294]
[-114.67134857 -202.94200134]
[-107.42232513 -189.80992126]
[-87.88516998 -180.49284363]
[-88.65272522 -158.09503174]
[-80.65917206 -145.40238953]
[-72.66562653 -132.70974731]
[-64.67207336 -120.01711273]
[-46.60584641 -117.03972626]
[-36.28046799 -101.53343201]
[-40.64707565 -83.09432983]
[-32.29106903 -70.63731384]
[-23.93506241 -58.18030167]
[-10.41954136 -51.92091370]
[-9.15749454 -36.15012360]
[-0.80148828 -23.69311142]
[7.55451870 -11.23609924]
[15.91052532 1.22091341]
[24.26653290 13.67792511]
[32.62253952 26.13493729]
[47.24029541 28.75347328]
[55.89192963 41.26762009]
[53.04625702 56.58231735]
[61.40226364 69.03932953]
[125.44258881 37.33356857]
[138.01872253 29.15794182]
[150.59484863 20.98231506]
[163.17098999 12.80668640]
[175.74711609 4.63105869]
[188.32325745 -3.54456878]
[200.89938354 -11.72019672]
[203.93226624 -27.23074722]
[217.09091187 -35.98435593]
[232.56852722 -32.78766251]
[241.18252563 -19.53720665]
[237.82237244 -4.09425020]
[224.48158264 4.37917519]
[209.07501221 0.85593635]
[196.49888611 9.03156376]
[183.92274475 17.20719147]
[171.34661865 25.38282013]
[158.77047729 33.55844498]
[146.19435120 41.73407364]
[133.61820984 49.90970230]
[135.06814575 57.26821518]
[149.26348877 62.11509323]
[137.96798706 71.98524475]
[139.41790771 79.34375763]
[154.15545654 82.13748932]
[168.89299011 84.93122101]
[183.63053894 87.72494507]
[203.39860535 79.44371033]
[218.43853760 93.58154297]
[233.28305054 95.73571777]
[248.12756348 97.88988495]
[262.97207642 100.04405975]
[275.48492432 90.38983917]
[291.14852905 92.49402618]
[300.66989136 105.10825348]
[298.40023804 120.74871826]
[285.68603516 130.13621521]
[270.07043457 127.70130157]
[260.81790161 114.88857269]
[245.97338867 112.73439789]
[231.12887573 110.58023071]
[216.28436279 108.42605591]
[210.13641357 114.81938171]
[201.60687256 117.71370697]
[192.56573486 116.34106445]
[185.05703735 110.88398743]
[180.83680725 102.46248627]
[166.09925842 99.66875458]
[151.36172485 96.87502289]
[136.62419128 94.08129120]
[132.26841736 100.18681335]
[144.47946167 108.89833832]
[156.69035339 117.61006165]
[147.97842407 129.82080078]
[135.76792908 121.10936737]
[123.55690002 112.39785004]
[119.20114136 118.50336456]
[126.63864899 131.52961731]
[134.07617188 144.55587769]
[141.51367188 157.58213806]
[148.95118713 170.60839844]
[155.92016602 176.50531006]
[156.40046692 183.87640381]
[163.64950562 197.00848389]
[170.89852905 210.14056396]
[185.21229553 218.14356995]
[185.16778564 234.54266357]
[170.81077576 242.46784973]
[156.91053772 233.76638794]
[157.76643372 217.38958740]
[150.51741028 204.25750732]
[143.26838684 191.12542725]
[135.92492676 178.04591370]
[128.48741150 165.01965332]
[121.04990387 151.99339294]
[113.61239624 138.96713257]
[106.17488098 125.94087982]
[91.27445221 127.66636658]
[87.01077271 142.04763794]
[82.74708557 156.42890930]
[78.48340607 170.81018066]
[86.07551575 179.95066833]
[88.29236603 191.50231934]
[84.69720459 202.57594299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[24 214]
[25 213]
[26 212]
[27 211]
[29 43]
[30 42]
[31 40]
[32 39]
[44 133]
[45 132]
[48 129]
[49 128]
[50 127]
[51 126]
[52 125]
[53 124]
[55 122]
[56 121]
[57 120]
[62 117]
[63 116]
[64 115]
[65 114]
[71 112]
[72 111]
[73 109]
[74 108]
[75 107]
[76 106]
[77 105]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[157 183]
[158 182]
[159 181]
[160 180]
[162 175]
[163 174]
[164 173]
[165 172]
[190 210]
[191 209]
[192 208]
[193 207]
[194 206]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
