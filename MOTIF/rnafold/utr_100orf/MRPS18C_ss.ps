%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGAAAAACCUCACCUACUCUCGCGGGUCCUCAGCGUUCUCCUGCGGAACCUUUGAACGGGGUACUCGAGCCCACAGGGGAAGAGCAGCGGAAGGGGCCUUUCGGAACGAUUUGGAACGAAAGGAAGUGGAAGAAACGCGGAACCAUGGCCGCUGUGGUUGCUGUUUGCGGUGGUCUAGGGAGGAAGAAGUUGACACACUUGGUAACGGCUGCUGUCAGCCUUACACAUCCCGGGACUCACACGG\
) } def
/len { sequence length } bind def

/coor [
[115.93978882 150.23677063]
[106.43095398 152.31111145]
[96.70281982 152.60169983]
[87.08712006 151.09860229]
[77.91174316 147.85310364]
[69.48954773 142.97583008]
[62.10773849 136.63313293]
[56.01802444 129.04127502]
[51.42805481 120.45913696]
[48.49435043 111.17935181]
[47.31694031 101.51836395]
[47.93598175 91.80560303]
[33.60105133 87.38861847]
[19.75347328 94.52180481]
[5.27873755 89.83814240]
[-1.43632734 76.59263611]
[-15.77125740 72.17565155]
[-30.10618782 67.75866699]
[-44.44112015 63.34167862]
[-58.77605057 58.92469025]
[-73.16600037 54.69038391]
[-87.60863495 50.63943863]
[-101.27030182 58.12253189]
[-115.85948181 53.80855560]
[-122.90927887 40.73813248]
[-137.35191345 36.68718719]
[-148.94285583 42.30974197]
[-160.87805176 38.65519714]
[-166.93147278 28.19942284]
[-181.32141113 23.96511459]
[-195.71136475 19.73080635]
[-206.85778809 30.20480156]
[-221.65258789 33.67040634]
[-236.09962463 29.29438400]
[-246.34797668 18.34781456]
[-249.71838379 3.83899236]
[-264.10833740 -0.39531615]
[-278.49829102 -4.62962437]
[-292.88824463 -8.86393261]
[-307.27819824 -13.09824181]
[-312.30441284 -4.47205162]
[-322.57742310 1.30315745]
[-336.20462036 1.29537010]
[-351.11703491 -0.32314506]
[-366.02944946 -1.94166017]
[-380.94189453 -3.56017542]
[-390.05682373 8.72253323]
[-404.00387573 14.75389194]
[-418.99755859 13.00601482]
[-431.02279663 4.04778385]
[-436.90982056 -9.63463593]
[-451.82223511 -11.25315094]
[-466.73468018 -12.87166595]
[-481.64709473 -14.49018097]
[-496.55950928 -16.10869598]
[-511.47192383 -17.72721100]
[-517.93847656 -10.92294884]
[-526.67608643 -7.88844776]
[-535.69622803 -9.18109512]
[-543.00616455 -14.38817024]
[-547.04968262 -22.24650574]
[-561.88952637 -24.43271637]
[-576.72937012 -26.61892891]
[-591.56921387 -28.80514145]
[-604.10284424 -19.17795181]
[-619.76184082 -21.31595039]
[-629.25598145 -33.95069885]
[-626.95257568 -49.58622742]
[-614.21813965 -58.94625473]
[-598.60784912 -56.47763824]
[-589.38299561 -43.64496994]
[-574.54315186 -41.45875549]
[-559.70330811 -39.27254486]
[-544.86346436 -37.08633041]
[-526.38238525 -46.30165482]
[-509.85342407 -32.63963699]
[-494.94100952 -31.02112198]
[-480.02856445 -29.40260696]
[-465.11614990 -27.78409004]
[-450.20373535 -26.16557503]
[-435.29129028 -24.54706001]
[-426.60589600 -36.64786911]
[-412.93878174 -42.81758881]
[-397.91921997 -41.30798340]
[-385.59091187 -32.42484283]
[-379.32336426 -18.47259903]
[-364.41094971 -16.85408401]
[-349.49853516 -15.23556995]
[-334.58609009 -13.61705494]
[-327.27969360 -26.71729279]
[-336.49285889 -38.55440140]
[-345.70605469 -50.39150620]
[-354.91925049 -62.22861481]
[-364.13244629 -74.06571960]
[-373.34564209 -85.90283203]
[-388.73468018 -91.56931305]
[-391.25488281 -107.77365112]
[-378.31365967 -117.84621429]
[-363.22381592 -111.42521667]
[-361.50851440 -95.11602020]
[-352.29534912 -83.27891541]
[-343.08215332 -71.44180298]
[-333.86895752 -59.60469818]
[-324.65576172 -47.76758957]
[-315.44256592 -35.93048477]
[-303.04388428 -27.48818970]
[-288.65393066 -23.25388145]
[-274.26397705 -19.01957321]
[-259.87402344 -14.78526497]
[-245.48408508 -10.55095673]
[-234.79264832 -20.92201614]
[-220.24879456 -24.57336998]
[-205.73410034 -20.42727089]
[-195.17419434 -9.50092411]
[-191.47705078 5.34085655]
[-177.08711243 9.57516479]
[-162.69715881 13.80947304]
[-145.87481689 8.77671337]
[-133.30097961 22.24454880]
[-118.85833740 26.29549408]
[-106.03952026 18.79791832]
[-91.33492279 22.70041084]
[-83.55769348 36.19679642]
[-69.11505127 40.24774170]
[-64.60504150 38.74308395]
[-59.10227966 40.03895950]
[-54.35906219 44.58975983]
[-40.02413177 49.00674820]
[-25.68920135 53.42373276]
[-11.35427094 57.84072113]
[2.98065948 62.25770569]
[15.98602772 55.08860779]
[30.58660698 59.36385345]
[38.01803970 73.05368805]
[52.35297012 77.47067261]
[66.12294769 59.62481689]
[86.08935547 49.16394806]
[108.60014343 48.00146484]
[129.53788757 56.34999466]
[139.62672424 45.24975204]
[149.71556091 34.14950943]
[159.80439758 23.04926491]
[169.82243347 11.88508797]
[179.76928711 0.65742677]
[189.71612549 -10.57023430]
[199.66296387 -21.79789543]
[209.60980225 -33.02555847]
[219.55664062 -44.25321960]
[229.50347900 -55.48088074]
[239.45031738 -66.70854187]
[245.42785645 -82.57376862]
[262.32781982 -81.22176361]
[265.70703125 -64.60799408]
[250.67797852 -56.76169968]
[240.73114014 -45.53403854]
[230.78430176 -34.30637741]
[220.83746338 -23.07871628]
[210.89062500 -11.85105610]
[200.94378662 -0.62339455]
[190.99694824 10.60426712]
[181.05009460 21.83192825]
[178.97206116 28.90582657]
[170.90464783 33.13810349]
[160.81581116 44.23834610]
[150.72697449 55.33858871]
[140.63813782 66.43882751]
[148.29618835 78.89813232]
[152.23562622 92.98218536]
[152.15313721 107.60659027]
[148.05508423 121.64530945]
[160.71591187 129.68916321]
[173.42762756 137.65232849]
[186.18974304 145.53448486]
[198.95185852 153.41665649]
[211.76383972 161.21749878]
[224.62516785 168.93670654]
[237.48649597 176.65591431]
[250.34782410 184.37512207]
[266.16210938 184.84275818]
[273.09304810 198.02651978]
[285.95437622 205.74572754]
[298.81570435 213.46495056]
[311.67703247 221.18415833]
[324.44369507 212.89115906]
[339.48367310 210.97138977]
[353.80712891 215.75247192]
[364.59002686 226.23532104]
[369.73098755 240.30230713]
[368.26062012 255.14492798]
[381.12194824 262.86413574]
[393.98327637 270.58334351]
[406.89343262 278.22061157]
[419.85189819 285.77563477]
[432.81036377 293.33062744]
[445.76882935 300.88562012]
[458.72729492 308.44064331]
[471.68576050 315.99563599]
[484.69201660 323.46810913]
[497.74554443 330.85766602]
[513.56658936 330.92291260]
[520.83062744 343.92611694]
[533.88409424 351.31570435]
[546.93762207 358.70529175]
[563.32269287 358.02523804]
[571.87438965 372.01809692]
[563.79553223 386.28918457]
[547.39691162 386.15765381]
[539.54803467 371.75878906]
[526.49456787 364.36920166]
[513.44104004 356.97964478]
[498.55361938 357.44293213]
[490.35595703 343.91119385]
[477.30242920 336.52160645]
[469.95083618 335.96282959]
[464.13076782 328.95413208]
[451.17230225 321.39910889]
[438.21383667 313.84411621]
[425.25537109 306.28909302]
[412.29690552 298.73410034]
[399.33843994 291.17907715]
[391.99453735 290.52685547]
[386.26406860 283.44467163]
[373.40274048 275.72546387]
[360.54141235 268.00625610]
[348.13464355 276.28497314]
[333.30273438 278.36450195]
[318.98013306 273.77932739]
[308.02392578 263.38790894]
[302.64413452 249.21240234]
[303.95782471 234.04548645]
[291.09649658 226.32627869]
[278.23516846 218.60705566]
[265.37380981 210.88784790]
[250.47946167 210.97235107]
[242.62861633 197.23645020]
[229.76728821 189.51724243]
[216.90596008 181.79803467]
[204.04461670 174.07882690]
[196.70960999 173.33325195]
[191.06968689 166.17875671]
[178.30758667 158.29660034]
[165.54547119 150.41442871]
[158.22053528 149.57562256]
[152.67205811 142.34999084]
[140.01123047 134.30613708]
[133.02116394 141.07812500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 135]
[13 134]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[21 124]
[22 123]
[25 120]
[26 119]
[29 117]
[30 116]
[31 115]
[36 110]
[37 109]
[38 108]
[39 107]
[40 106]
[43 89]
[44 88]
[45 87]
[46 86]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[61 74]
[62 73]
[63 72]
[64 71]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[139 166]
[140 165]
[141 164]
[142 163]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
[170 245]
[171 244]
[172 242]
[173 241]
[174 240]
[175 238]
[176 237]
[177 236]
[178 235]
[180 233]
[181 232]
[182 231]
[183 230]
[189 224]
[190 223]
[191 222]
[192 220]
[193 219]
[194 218]
[195 217]
[196 216]
[197 215]
[198 213]
[199 212]
[201 210]
[202 209]
[203 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
