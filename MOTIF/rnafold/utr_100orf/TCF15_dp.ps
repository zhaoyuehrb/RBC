%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TCF15)
} def

/sequence { (\
CGGCGCACGGAGGGACGCGGCCGGCGCCCAUGGCGUUCGCGCUGCUGCGGCCCGUCGGCGCGCACGUGCUGUACCCGGACGUGCGGCUGCUGAGCGAGGACGAGGAGAACCGCAGCGAGAGCGACGCGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.092789097 ubox
1 23 0.027734652 ubox
1 26 0.004946900 ubox
1 32 0.085916704 ubox
1 39 0.006916987 ubox
1 126 0.011655702 ubox
1 128 0.027613259 ubox
2 8 0.093985332 ubox
2 22 0.028251473 ubox
2 25 0.005244730 ubox
2 28 0.982422087 ubox
2 29 0.088260561 ubox
2 31 0.012280698 ubox
2 37 0.038609281 ubox
2 38 0.007916430 ubox
2 125 0.012205149 ubox
2 127 0.012244021 ubox
3 21 0.028245169 ubox
3 27 0.986429644 ubox
3 28 0.062599966 ubox
3 36 0.079218478 ubox
3 37 0.005728871 ubox
3 127 0.008395682 ubox
3 129 0.020842369 ubox
4 19 0.013872934 ubox
4 20 0.024596484 ubox
4 23 0.005273582 ubox
4 26 0.988394418 ubox
4 35 0.081658456 ubox
4 126 0.008452151 ubox
4 128 0.022066442 ubox
5 18 0.019593992 ubox
5 21 0.004127372 ubox
5 22 0.004787074 ubox
5 25 0.988381844 ubox
5 27 0.005179694 ubox
5 34 0.082159297 ubox
5 125 0.006718648 ubox
5 127 0.020227706 ubox
5 129 0.007705112 ubox
6 17 0.019139518 ubox
6 20 0.004939988 ubox
6 24 0.987647626 ubox
6 26 0.005162505 ubox
6 32 0.008798176 ubox
6 33 0.082113086 ubox
6 126 0.020106514 ubox
6 128 0.008229193 ubox
7 31 0.008502802 ubox
7 36 0.015816798 ubox
7 129 0.005058480 ubox
8 17 0.022509352 ubox
8 19 0.023121169 ubox
8 23 0.984081891 ubox
8 32 0.091658097 ubox
8 35 0.016898020 ubox
8 128 0.005603833 ubox
9 16 0.024774702 ubox
9 18 0.023866418 ubox
9 22 0.987080082 ubox
9 31 0.090681955 ubox
9 34 0.016954629 ubox
10 21 0.984614540 ubox
12 22 0.037493358 ubox
12 29 0.148367545 ubox
13 21 0.040686164 ubox
13 22 0.020283847 ubox
13 28 0.148550643 ubox
13 29 0.007974387 ubox
14 21 0.022169033 ubox
14 27 0.148536392 ubox
14 28 0.007975956 ubox
15 129 0.003709008 ubox
16 26 0.148699711 ubox
16 128 0.004058446 ubox
17 25 0.148767794 ubox
17 127 0.004071593 ubox
18 24 0.148748580 ubox
18 126 0.004071545 ubox
19 125 0.004033586 ubox
23 37 0.003238518 ubox
24 36 0.023147613 ubox
25 35 0.023998458 ubox
26 34 0.024188835 ubox
27 33 0.024197759 ubox
28 32 0.024171498 ubox
30 129 0.148176673 ubox
31 128 0.151555584 ubox
32 125 0.003543906 ubox
32 127 0.114892096 ubox
33 127 0.971062576 ubox
33 129 0.174319617 ubox
34 123 0.005109324 ubox
34 126 0.978618106 ubox
34 128 0.184591514 ubox
35 122 0.005261274 ubox
35 125 0.978221248 ubox
35 127 0.185040979 ubox
36 121 0.005269765 ubox
36 124 0.696622108 ubox
36 126 0.182795055 ubox
37 120 0.005335961 ubox
37 123 0.125159058 ubox
37 124 0.712666892 ubox
38 119 0.005337075 ubox
38 123 0.991227444 ubox
38 126 0.017840137 ubox
38 128 0.008221545 ubox
39 122 0.999425425 ubox
39 125 0.019070916 ubox
39 127 0.008551589 ubox
40 117 0.004996367 ubox
40 121 0.997633488 ubox
40 123 0.028829926 ubox
40 126 0.008269863 ubox
41 116 0.004964630 ubox
41 122 0.030437489 ubox
41 125 0.006650451 ubox
42 115 0.004927535 ubox
42 119 0.945957941 ubox
42 121 0.030517343 ubox
43 114 0.004784061 ubox
43 117 0.544261217 ubox
43 118 0.822063612 ubox
43 120 0.026302260 ubox
44 113 0.004642164 ubox
44 116 0.998960700 ubox
45 112 0.004585957 ubox
45 115 0.999973565 ubox
46 114 0.999743399 ubox
47 113 0.999979079 ubox
48 112 0.999970316 ubox
49 101 0.004535119 ubox
49 111 0.999921915 ubox
50 110 0.999293704 ubox
51 99 0.147741663 ubox
51 105 0.987795654 ubox
52 98 0.147822411 ubox
52 104 0.988305495 ubox
52 105 0.021749148 ubox
53 92 0.003775348 ubox
53 96 0.148414566 ubox
53 102 0.988080302 ubox
53 104 0.019780757 ubox
54 91 0.003638529 ubox
54 95 0.147887510 ubox
54 101 0.988760549 ubox
55 93 0.126221470 ubox
55 94 0.081045630 ubox
55 99 0.009605772 ubox
55 100 0.988389021 ubox
55 103 0.004976269 ubox
56 89 0.037207619 ubox
56 92 0.148606223 ubox
56 98 0.017976415 ubox
56 99 0.987662744 ubox
56 102 0.005099145 ubox
57 88 0.097074550 ubox
57 91 0.153792874 ubox
57 95 0.003363166 ubox
57 101 0.004974003 ubox
58 87 0.103594808 ubox
58 90 0.154027746 ubox
58 95 0.015319329 ubox
59 86 0.103584433 ubox
59 89 0.153936406 ubox
59 94 0.015337038 ubox
59 96 0.979950726 ubox
60 87 0.118939320 ubox
60 88 0.080539236 ubox
60 95 0.979890630 ubox
61 85 0.176649055 ubox
61 86 0.086160379 ubox
61 92 0.011591800 ubox
61 94 0.977916572 ubox
61 96 0.027488708 ubox
62 84 0.199464861 ubox
62 90 0.126280278 ubox
62 91 0.005213342 ubox
62 95 0.027512569 ubox
63 83 0.199600564 ubox
63 89 0.126381430 ubox
63 92 0.945719608 ubox
63 94 0.027446641 ubox
64 82 0.199564596 ubox
64 88 0.124399164 ubox
64 91 0.938031396 ubox
65 81 0.199598521 ubox
65 85 0.004001850 ubox
65 89 0.534207108 ubox
65 92 0.035661306 ubox
66 80 0.199587546 ubox
66 84 0.004038014 ubox
66 87 0.006016375 ubox
66 88 0.500787621 ubox
66 90 0.668234811 ubox
66 91 0.021165620 ubox
67 79 0.198936796 ubox
67 83 0.004024942 ubox
67 85 0.004328389 ubox
67 86 0.003585907 ubox
67 89 0.645211087 ubox
68 82 0.003992200 ubox
68 84 0.004609575 ubox
68 87 0.976207974 ubox
68 88 0.077876704 ubox
69 78 0.197708332 ubox
69 81 0.003987697 ubox
69 83 0.004609954 ubox
69 86 0.979823170 ubox
70 77 0.197654068 ubox
70 81 0.004204949 ubox
70 85 0.979099457 ubox
71 76 0.193468458 ubox
71 80 0.005830546 ubox
71 84 0.979804829 ubox
71 90 0.003342763 ubox
72 79 0.005662429 ubox
72 83 0.979590885 ubox
72 89 0.003346311 ubox
73 82 0.979319807 ubox
73 88 0.003280947 ubox
74 81 0.977409789 ubox
75 86 0.003880655 ubox
76 85 0.003927180 ubox
77 84 0.003923482 ubox
85 91 0.006291857 ubox
86 90 0.006467446 ubox
86 95 0.064689002 ubox
87 94 0.065604024 ubox
87 98 0.004907810 ubox
88 93 0.065083238 ubox
88 96 0.026107242 ubox
88 97 0.005201413 ubox
89 95 0.065987811 ubox
90 94 0.065571031 ubox
90 98 0.051834749 ubox
90 99 0.006713164 ubox
91 97 0.051809510 ubox
91 98 0.007520225 ubox
95 102 0.006056315 ubox
96 101 0.006046406 ubox
104 111 0.006220180 ubox
105 110 0.006387792 ubox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
33 127 0.9500000 lbox
34 126 0.9500000 lbox
35 125 0.9500000 lbox
36 124 0.9500000 lbox
38 123 0.9500000 lbox
39 122 0.9500000 lbox
40 121 0.9500000 lbox
42 119 0.9500000 lbox
43 118 0.9500000 lbox
44 116 0.9500000 lbox
45 115 0.9500000 lbox
46 114 0.9500000 lbox
47 113 0.9500000 lbox
48 112 0.9500000 lbox
49 111 0.9500000 lbox
50 110 0.9500000 lbox
51 105 0.9500000 lbox
52 104 0.9500000 lbox
53 102 0.9500000 lbox
54 101 0.9500000 lbox
55 100 0.9500000 lbox
56 99 0.9500000 lbox
59 96 0.9500000 lbox
60 95 0.9500000 lbox
61 94 0.9500000 lbox
63 92 0.9500000 lbox
64 91 0.9500000 lbox
66 90 0.9500000 lbox
67 89 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
showpage
end
%%EOF
