%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGAAGACGGCGCUGCCCGGAGGAGCGGGGCGGGCGGGCGCGCGGGGGAGCGGGCGGCGGGCGGGAGCCAGGCCCGGGCGGGGGCGGGGGCGGCGGGGCCAGAAGAGGCGGCGGGCCGCGCUCCGGCCGGUCUGCGGCGUUGGCCUUGGCGGCGGCGGUGGAGAAGAUGCUGCAGUCCCUGGCCGGCAGCUCGUGCGUGCGCCUGGUGGAGCGGCACCGCUCGGCCUGGUGCUUCGGCUUCCUGGUGCUGGGC\
UACUUGCUCUACC\
) } def
/len { sequence length } bind def

/coor [
[205.90129089 1247.73059082]
[204.85105896 1232.76745605]
[203.80082703 1217.80419922]
[202.75061035 1202.84106445]
[201.70037842 1187.87780762]
[193.09095764 1175.72351074]
[199.84304810 1161.41552734]
[198.79281616 1146.45227051]
[188.21043396 1132.43444824]
[196.46247864 1115.95471191]
[195.23757935 1101.00476074]
[194.01266479 1086.05493164]
[192.78776550 1071.10498047]
[191.56285095 1056.15502930]
[190.33795166 1041.20520020]
[189.11303711 1026.25524902]
[187.45222473 1011.34753418]
[185.35691833 996.49456787]
[183.26161194 981.64166260]
[179.22970581 975.47918701]
[181.22961426 966.60308838]
[179.30790710 951.72674561]
[177.38621521 936.85034180]
[175.46450806 921.97393799]
[162.32556152 915.00933838]
[155.72903442 901.48339844]
[158.39308167 886.49151611]
[169.50238037 875.81964111]
[167.58068848 860.94323730]
[165.65898132 846.06683350]
[163.73727417 831.19049072]
[154.43319702 819.55932617]
[160.33874512 804.88159180]
[158.41705322 790.00524902]
[156.49534607 775.12884521]
[154.57363892 760.25244141]
[152.65193176 745.37603760]
[150.73023987 730.49963379]
[148.80853271 715.62329102]
[146.79998779 700.75836182]
[144.70468140 685.90539551]
[140.67277527 679.74291992]
[142.67268372 670.86688232]
[140.75099182 655.99047852]
[138.82928467 641.11407471]
[126.24256897 638.05639648]
[115.41152954 630.89465332]
[107.63115692 620.45928955]
[103.84048462 607.97363281]
[104.50924683 594.91046143]
[109.57980347 582.81835938]
[118.47140503 573.13818359]
[130.14665222 567.03131104]
[128.57292175 552.11413574]
[126.99918365 537.19689941]
[125.42545319 522.27966309]
[123.85171509 507.36248779]
[122.27798462 492.44525146]
[118.46441650 486.14532471]
[120.77402496 477.34478760]
[119.37460327 462.41021729]
[110.48366547 450.46029663]
[116.89974213 435.99847412]
[115.50032806 421.06387329]
[114.10091400 406.12930298]
[105.20997620 394.17938232]
[111.62605286 379.71755981]
[110.22663116 364.78298950]
[108.82721710 349.84838867]
[107.42780304 334.91381836]
[99.03724670 329.15728760]
[95.10015869 319.53720093]
[97.13092804 309.11962891]
[104.69902039 301.36892700]
[103.64878845 286.40573120]
[102.59855652 271.44256592]
[99.00801086 265.01290894]
[101.62447357 256.29867554]
[100.74906158 241.32423401]
[92.28218079 229.07020569]
[99.20090485 214.84199524]
[98.32549286 199.86756897]
[97.45008087 184.89314270]
[96.57466888 169.91870117]
[95.69925690 154.94427490]
[94.82384491 139.96983337]
[93.94843292 124.99539948]
[83.81776428 121.53966522]
[75.55397034 113.98706055]
[70.79897308 103.31137085]
[70.70054626 91.13322449]
[75.66427612 79.47544861]
[85.22385406 70.42718506]
[81.24295044 55.96508408]
[70.12063599 44.71321487]
[74.20274353 30.38891029]
[70.22183990 15.92680836]
[66.24093628 1.46470511]
[62.26003647 -12.99739742]
[58.27913284 -27.45950127]
[54.29823303 -41.92160416]
[50.31732941 -56.38370514]
[47.18167496 -59.27229309]
[45.29701614 -62.66187668]
[44.66833496 -66.10432434]
[45.15666962 -69.19483948]
[46.50516129 -71.61453247]
[43.20395279 -86.24676514]
[32.61921310 -98.00575256]
[37.36578369 -112.12380219]
[34.06457901 -126.75602722]
[23.47983551 -138.51501465]
[28.22640800 -152.63305664]
[24.92520142 -167.26528931]
[21.62399483 -181.89752197]
[18.32279015 -196.52973938]
[15.02158451 -211.16197205]
[11.72037792 -225.79418945]
[8.41917229 -240.42642212]
[5.11796665 -255.05863953]
[0.19294548 -262.70901489]
[1.86470449 -269.88101196]
[-1.26539350 -284.55078125]
[-12.64389324 -296.36016846]
[-7.84651184 -312.04193115]
[8.19161510 -315.46398926]
[18.97183800 -303.10604858]
[13.40438747 -287.68087769]
[16.53448677 -273.01110840]
[19.75019264 -258.35986328]
[23.05139923 -243.72763062]
[26.35260391 -229.09539795]
[29.65381050 -214.46318054]
[32.95501709 -199.83094788]
[36.25622177 -185.19871521]
[39.55742645 -170.56649780]
[42.85863495 -155.93426514]
[53.20725250 -145.22187805]
[48.69680405 -130.05723572]
[51.99800873 -115.42500305]
[62.34662628 -104.71261597]
[57.83618164 -89.54796600]
[61.13738632 -74.91574097]
[64.77943420 -60.36460876]
[68.76033783 -45.90250397]
[72.74123383 -31.44040298]
[76.72213745 -16.97830009]
[80.70304108 -2.51619697]
[84.68394470 11.94590569]
[88.66484833 26.40800858]
[99.50242615 36.62545395]
[95.70505524 51.98418427]
[99.68595886 66.44628906]
[114.33721161 69.66199493]
[124.00881195 58.19638824]
[133.68041992 46.73078537]
[143.35202026 35.26517868]
[153.02362061 23.79957390]
[162.69522095 12.33397007]
[157.40425110 -2.08480835]
[160.04733276 -17.21457100]
[169.91349792 -28.98548698]
[184.34878540 -34.23123932]
[199.47018433 -31.54074669]
[211.21012878 -21.63773918]
[216.41059875 -7.18607616]
[213.67272949 7.92681932]
[203.73297119 19.63565254]
[189.26507568 24.79080772]
[174.16082764 22.00557327]
[164.48922729 33.47117615]
[154.81762695 44.93678284]
[145.14602661 56.40238571]
[135.47442627 67.86798859]
[125.80281830 79.33359528]
[128.31890869 107.85518646]
[108.92286682 124.11998749]
[109.79827881 139.09442139]
[110.67369080 154.06886292]
[111.54910278 169.04328918]
[112.42451477 184.01773071]
[113.29992676 198.99215698]
[114.17533875 213.96659851]
[122.70483398 227.29168701]
[115.72349548 240.44882202]
[116.59890747 255.42324829]
[117.56174469 270.39233398]
[118.61197662 285.35549927]
[119.66220856 300.31869507]
[131.66680908 316.54113770]
[122.36238098 333.51440430]
[123.76179504 348.44897461]
[125.16120911 363.38357544]
[126.56063080 378.31814575]
[135.55166626 391.33627319]
[129.03549194 404.72988892]
[130.43490601 419.66445923]
[131.83432007 434.59902954]
[140.82534790 447.61718750]
[134.30918884 461.01080322]
[135.70860291 475.94537354]
[137.19520569 490.87152100]
[138.76893616 505.78872681]
[140.34266663 520.70593262]
[141.91639709 535.62316895]
[143.49014282 550.54040527]
[145.06387329 565.45758057]
[161.36289978 570.95922852]
[173.56549072 583.00561523]
[179.23973083 599.12768555]
[177.28475952 616.05108643]
[168.14398193 630.36126709]
[153.70567322 639.19238281]
[155.62738037 654.06878662]
[157.54908752 668.94519043]
[159.55761719 683.81011963]
[161.65292358 698.66302490]
[165.93676758 706.69000244]
[163.68492126 713.70153809]
[165.60662842 728.57794189]
[167.52833557 743.45434570]
[169.45002747 758.33074951]
[171.37173462 773.20715332]
[173.29344177 788.08349609]
[175.21514893 802.95989990]
[184.65667725 815.65509033]
[178.61366272 829.26873779]
[180.53536987 844.14514160]
[182.45707703 859.02154541]
[184.37878418 873.89794922]
[197.83531189 881.39648438]
[204.22157288 895.21923828]
[201.27873230 909.97741699]
[190.34089661 920.05224609]
[192.26260376 934.92864990]
[194.18431091 949.80499268]
[196.10600281 964.68139648]
[198.11454773 979.54632568]
[200.20985413 994.39929199]
[202.30516052 1009.25219727]
[213.13496399 998.87359619]
[228.01704407 1000.75073242]
[235.93046570 1013.49346924]
[231.01493835 1027.66516113]
[216.91065979 1032.77099609]
[204.06294250 1025.03039551]
[205.28784180 1039.98022461]
[206.51275635 1054.93017578]
[207.73765564 1069.88012695]
[208.96257019 1084.82995605]
[210.18746948 1099.77990723]
[211.41238403 1114.72973633]
[220.71080017 1123.63549805]
[221.44107056 1136.08898926]
[213.75599670 1145.40209961]
[214.80622864 1160.36523438]
[223.49076843 1173.58984375]
[216.66355896 1186.82763672]
[217.71379089 1201.79077148]
[218.76402283 1216.75402832]
[219.81425476 1231.71716309]
[220.86448669 1246.68041992]
[233.62339783 1255.72155762]
[237.53567505 1270.86193848]
[230.75404358 1284.95239258]
[216.48059082 1291.34008789]
[201.45480347 1287.00891113]
[192.77139282 1274.00378418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 262]
[2 261]
[3 260]
[4 259]
[5 258]
[7 256]
[8 255]
[10 252]
[11 251]
[12 250]
[13 249]
[14 248]
[15 247]
[16 246]
[17 240]
[18 239]
[19 238]
[21 237]
[22 236]
[23 235]
[24 234]
[28 230]
[29 229]
[30 228]
[31 227]
[33 225]
[34 224]
[35 223]
[36 222]
[37 221]
[38 220]
[39 219]
[40 217]
[41 216]
[43 215]
[44 214]
[45 213]
[53 207]
[54 206]
[55 205]
[56 204]
[57 203]
[58 202]
[60 201]
[61 200]
[63 198]
[64 197]
[65 196]
[67 194]
[68 193]
[69 192]
[70 191]
[74 189]
[75 188]
[76 187]
[78 186]
[79 185]
[81 183]
[82 182]
[83 181]
[84 180]
[85 179]
[86 178]
[87 177]
[93 153]
[94 152]
[96 150]
[97 149]
[98 148]
[99 147]
[100 146]
[101 145]
[102 144]
[107 143]
[108 142]
[110 140]
[111 139]
[113 137]
[114 136]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[120 130]
[122 129]
[123 128]
[154 175]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
