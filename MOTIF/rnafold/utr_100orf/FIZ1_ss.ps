%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGAAGUGACGCUGCCCCCGCUGCCCAAAAUGUCGGCGCCCAGAGGGAGGUAGAGAGCCCCCACAUACCACUGUAUUCCCCGCCACCAUGGAUGACGUCCCCGCCCCAACCCCUGCACCAGCACCGCCCGCCGCUGCCGCCCCCAGGGUCCCGUUUCACUGCAGUGAAUGUGGCAAGAGCUUCCGCU\
) } def
/len { sequence length } bind def

/coor [
[72.17906952 941.34930420]
[74.68634796 922.13049316]
[74.93305969 907.13250732]
[75.17977142 892.13452148]
[75.42648315 877.13653564]
[75.67319489 862.13861084]
[75.91990662 847.14062500]
[76.16661835 832.14263916]
[76.41333008 817.14465332]
[76.66003418 802.14672852]
[63.23488617 792.71343994]
[58.01977539 776.98120117]
[63.25547028 761.08087158]
[77.06885529 751.33349609]
[77.06885529 736.33349609]
[77.06885529 721.33349609]
[77.06885529 706.33349609]
[77.06885529 691.33349609]
[64.93044281 682.74298096]
[60.12112808 668.48345947]
[64.68387604 653.95642090]
[77.06885529 644.79571533]
[77.06885529 629.79571533]
[77.06885529 614.79571533]
[77.06885529 599.79571533]
[77.06885529 584.79571533]
[77.06885529 569.79571533]
[64.17648315 565.83935547]
[52.90853882 558.39935303]
[44.18449020 548.07147217]
[38.71941376 535.68750000]
[36.96540833 522.24841309]
[39.07419205 508.84335327]
[44.88404465 496.56146240]
[53.93214798 486.40328979]
[65.49146271 479.19934082]
[78.62912750 475.54217529]
[79.12248230 460.55029297]
[79.61583710 445.55841064]
[72.30133057 432.58352661]
[80.48833466 419.04531860]
[80.98168945 404.05343628]
[81.47504425 389.06155396]
[81.96839905 374.06967163]
[70.11909485 365.08456421]
[65.78138733 350.67456055]
[70.81947327 336.30545044]
[83.49904633 327.55706787]
[83.99240112 312.56515503]
[84.48575592 297.57327271]
[77.17124176 284.59841919]
[85.35825348 271.06018066]
[85.85160828 256.06829834]
[86.34496307 241.07643127]
[86.83831787 226.08453369]
[87.33167267 211.09265137]
[77.28940582 203.00332642]
[73.69129944 190.41772461]
[78.06832886 177.87500000]
[89.03226471 170.03399658]
[89.77213287 155.05224609]
[78.88654327 152.36085510]
[68.66897583 147.52168274]
[59.54215622 140.69448853]
[51.89155579 132.12196350]
[46.04922104 122.12123871]
[42.27943802 111.07222748]
[40.76696396 99.40322113]
[41.60830688 87.57427216]
[44.80643082 76.05908966]
[50.26920319 65.32604980]
[57.81166840 55.81916046]
[67.16212463 47.93973160]
[77.97179413 42.02948761]
[89.82781219 38.35584259]
[85.92567444 23.87228966]
[82.02352905 9.38873672]
[68.60787201 1.47306275]
[64.85687256 -13.27090645]
[72.48593140 -26.01190376]
[68.58378601 -40.49545670]
[64.68164825 -54.97900772]
[49.82020569 -58.85625839]
[38.89971924 -69.65618896]
[34.85774994 -84.47368622]
[38.78156281 -99.32289886]
[49.61567307 -110.20948029]
[64.44576263 -114.20498657]
[79.28260803 -110.23464203]
[90.13516998 -99.36646271]
[94.08417511 -84.52392578]
[90.06734467 -69.69959259]
[79.16519928 -58.88114929]
[83.06734467 -44.39759827]
[86.96948242 -29.91404533]
[99.96668243 -22.73015213]
[104.13033295 -8.09735775]
[96.50708008 5.48659515]
[100.40922546 19.97014809]
[104.31136322 34.45370102]
[111.48505402 36.64189911]
[115.00438690 22.06060028]
[118.52371979 7.47930050]
[122.04305267 -7.10199881]
[125.56238556 -21.68329811]
[129.08172607 -36.26459885]
[129.00091553 -51.26438141]
[141.03181458 -60.22304916]
[155.37921143 -55.84673309]
[160.36190796 -41.69849396]
[151.92298889 -29.29729271]
[146.70487976 -15.23417473]
[141.48677063 -1.17105663]
[136.26864624 12.89206219]
[131.05053711 26.95518112]
[125.83242798 41.01829910]
[133.00611877 43.20649719]
[144.32765198 33.36664581]
[155.64920044 23.52679634]
[160.47515869 7.85382128]
[176.51950073 4.46100044]
[187.27717590 16.83857727]
[181.68161011 32.25356293]
[165.48904419 34.84833908]
[154.16751099 44.68819046]
[142.84596252 54.52804184]
[154.41233826 71.22682190]
[159.87290955 90.47789001]
[158.82859802 110.15797424]
[151.58691406 128.16110229]
[139.10803223 142.62399292]
[122.88225555 152.11857605]
[104.75387573 155.79211426]
[104.01400757 170.77386475]
[115.99188232 183.51219177]
[115.07765961 200.63549805]
[102.32355499 211.58601379]
[101.83020020 226.57789612]
[101.33684540 241.56977844]
[100.84349060 256.56167603]
[100.35013580 271.55355835]
[107.62935638 285.60073853]
[99.47763824 298.06665039]
[98.98428345 313.05853271]
[98.49092865 328.05041504]
[110.56790924 337.61349487]
[114.65039062 352.28274536]
[109.37467957 366.37640381]
[96.96028900 374.56301880]
[96.46693420 389.55490112]
[95.97357941 404.54678345]
[95.48022461 419.53866577]
[102.75944519 433.58584595]
[94.60772705 446.05175781]
[94.11437225 461.04364014]
[93.62101746 476.03552246]
[109.12575531 482.03131104]
[121.62567902 492.95129395]
[129.62483215 507.46533203]
[132.17385864 523.81451416]
[128.98268127 540.02447510]
[120.45336151 554.14367676]
[107.62957001 564.47827148]
[92.06885529 569.79571533]
[92.06885529 584.79571533]
[92.06885529 599.79571533]
[92.06885529 614.79571533]
[92.06885529 629.79571533]
[92.06885529 644.79571533]
[104.45383453 653.95642090]
[109.01658630 668.48345947]
[104.20727539 682.74298096]
[92.06885529 691.33349609]
[92.06885529 706.33349609]
[92.06885529 721.33349609]
[92.06885529 736.33349609]
[92.06885529 751.33349609]
[103.79933167 758.58972168]
[110.35667419 770.60144043]
[110.11998749 784.17614746]
[103.25822449 795.76556396]
[91.65801239 802.39343262]
[91.41130066 817.39141846]
[91.16458893 832.38934326]
[90.91787720 847.38732910]
[90.67116547 862.38531494]
[90.42445374 877.38330078]
[90.17774200 892.38122559]
[89.93103027 907.37921143]
[89.68431854 922.37719727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 190]
[3 189]
[4 188]
[5 187]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[14 177]
[15 176]
[16 175]
[17 174]
[18 173]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[37 156]
[38 155]
[39 154]
[41 152]
[42 151]
[43 150]
[44 149]
[48 145]
[49 144]
[50 143]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[60 134]
[61 133]
[75 100]
[76 99]
[77 98]
[80 95]
[81 94]
[82 93]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
