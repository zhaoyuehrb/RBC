%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGAAAGUGUGCCCGCCCCCUCUGGGGCGGAGAGACUCAGCCCCUCCCCCUCAGCGGAUAACCUGGGACUGACCGUUCCCUGGGGAUCCGACGGGCCCCAGAGGACCCACGCCUGAGCCCCGUGCGACUCGUGGCCUUUGGGCUAGAAGCCAUGGACGCCUUCACCCGCUUCACCAACCAGACCCAGGGCCGGGACCGACUCUUCAGAGCCACUCAGUACACAUGCAUGUUGCUUAGAUAUUUGUUAGAGC\
) } def
/len { sequence length } bind def

/coor [
[339.53302002 185.17240906]
[332.58587646 171.87815857]
[329.27285767 157.24861145]
[329.81472778 142.25839233]
[334.17535400 127.90621948]
[342.06420898 115.14826202]
[352.95578003 104.83448029]
[366.12808228 97.65058899]
[351.16305542 98.67422485]
[336.19799805 99.69786072]
[321.23297119 100.72149658]
[306.26794434 101.74514008]
[302.85906982 111.44589233]
[296.40399170 119.49838257]
[287.61257935 124.97660065]
[277.46524048 127.23987579]
[267.10339355 126.00769043]
[257.70129395 121.39423370]
[250.33282471 113.89828491]
[245.84886169 104.34939575]
[230.85147095 104.62876892]
[215.85406494 104.90814209]
[200.85667419 105.18751526]
[185.85928345 105.46689606]
[170.86187744 105.74626923]
[155.86448669 106.02564240]
[140.86708069 106.30501556]
[125.86968231 106.58438873]
[110.87228394 106.86376190]
[96.58927155 111.44584656]
[84.22825623 119.94321442]
[71.86724091 128.44059753]
[59.50622940 136.93795776]
[61.38539124 152.12767029]
[55.97944260 166.44670105]
[44.53063583 176.60461426]
[29.66981697 180.26722717]
[14.81189728 176.59288025]
[3.37111783 166.42591858]
[-2.02351546 152.10263062]
[-0.13235499 136.91439819]
[8.61002445 124.35138702]
[22.19468880 117.30046844]
[37.49998093 117.38188934]
[51.00885773 124.57695007]
[63.36986923 116.07957458]
[75.73088074 107.58220673]
[88.09189606 99.08483124]
[85.31398773 84.34362030]
[82.53633881 69.60372162]
[67.93038940 66.18813324]
[59.27014160 74.28578186]
[47.89603806 77.18018341]
[36.65032578 74.26702118]
[28.28619576 66.37859344]
[24.79381180 55.55032730]
[10.27718353 51.77309036]
[-4.23944426 47.99585342]
[-18.75607300 44.21862030]
[-33.27270126 40.44138336]
[-46.79048157 48.18136978]
[-61.45859909 44.14392090]
[-68.75418854 31.20908165]
[-83.27081299 27.43184662]
[-98.57465363 31.44471550]
[-108.94341278 20.75182152]
[-123.46004486 16.97458649]
[-137.97666931 13.19735146]
[-152.49330139 9.42011642]
[-164.39532471 19.37608719]
[-179.87850952 20.40121078]
[-192.98922729 12.10130310]
[-198.68617249 -2.33214855]
[-194.77873230 -17.34918976]
[-182.76939392 -27.17546082]
[-167.27601624 -28.03256035]
[-154.25608826 -19.59091568]
[-148.71606445 -5.09651184]
[-134.19943237 -1.31927705]
[-119.68280792 2.45795798]
[-105.16618347 6.23519325]
[-90.90067291 1.95215213]
[-79.49357605 12.91521931]
[-64.97695160 16.69245338]
[-52.30214310 8.95392418]
[-37.52640915 12.57778358]
[-29.49546623 25.92475700]
[-14.97883797 29.70199203]
[-0.46220943 33.47922897]
[14.05441856 37.25646210]
[28.57104683 41.03369904]
[43.79780197 30.83704376]
[61.94766235 35.10861588]
[71.34597778 51.58218384]
[85.95192719 54.99777603]
[110.59291077 91.86637115]
[125.59030914 91.58699036]
[140.58770752 91.30761719]
[155.58509827 91.02824402]
[170.58250427 90.74887085]
[185.57989502 90.46949768]
[200.57730103 90.19011688]
[215.57469177 89.91074371]
[230.57209778 89.63137054]
[245.56948853 89.35199738]
[256.17886353 72.36814880]
[274.77307129 65.33418274]
[293.68899536 70.96102905]
[305.24432373 86.78010559]
[320.20935059 85.75646973]
[335.17437744 84.73283386]
[350.13940430 83.70919800]
[365.10443115 82.68556213]
[379.79071045 79.63372040]
[393.92462158 74.61052704]
[408.05853271 69.58733368]
[422.19244385 64.56414032]
[436.32635498 59.54094315]
[450.46026611 54.51774979]
[457.30221558 40.52397919]
[471.70758057 35.63109207]
[485.00631714 42.24007797]
[499.14022827 37.21688461]
[513.27416992 32.19369125]
[527.40808105 27.17049599]
[541.54199219 22.14730072]
[538.88745117 12.16731644]
[540.99523926 0.47622737]
[548.62536621 -10.62019348]
[561.44403076 -18.55768585]
[573.25396729 -27.80565071]
[579.34899902 -42.40569687]
[594.13983154 -44.16063690]
[605.94982910 -53.40859985]
[617.75976562 -62.65656281]
[629.56970215 -71.90452576]
[641.37969971 -81.15248871]
[653.18963623 -90.40045166]
[664.99963379 -99.64841461]
[669.80981445 -107.38119507]
[677.01409912 -108.93679810]
[688.93798828 -118.03740692]
[700.86187744 -127.13800812]
[712.72900391 -136.31246948]
[724.53900146 -145.56044006]
[731.46221924 -168.37753296]
[754.45013428 -170.76608276]
[765.53894043 -180.86747742]
[776.62774658 -190.96885681]
[787.71655273 -201.07023621]
[798.80541992 -211.17163086]
[799.30755615 -228.67071533]
[812.06799316 -240.15612793]
[828.84881592 -238.87139893]
[839.81134033 -249.10969543]
[850.77392578 -259.34799194]
[861.73645020 -269.58630371]
[865.99902344 -285.42178345]
[881.91180420 -289.38601685]
[893.10510254 -277.40090942]
[888.06420898 -261.79574585]
[871.97473145 -258.62374878]
[861.01220703 -248.38546753]
[850.04968262 -238.14715576]
[839.08709717 -227.90885925]
[840.45532227 -215.11224365]
[834.11596680 -203.68945312]
[822.18310547 -197.91076660]
[808.90679932 -200.08280945]
[797.81799316 -189.98141479]
[786.72912598 -179.88003540]
[775.64031982 -169.77865601]
[764.55151367 -159.67726135]
[766.04455566 -153.44529724]
[765.54980469 -147.00456238]
[763.08355713 -140.97859192]
[758.85449219 -135.96049500]
[753.24627686 -132.45449829]
[746.78314209 -130.82542419]
[740.08056641 -131.26092529]
[733.78692627 -133.75047302]
[721.97698975 -124.50251007]
[718.65734863 -117.92209625]
[709.96246338 -115.21412659]
[698.03857422 -106.11352539]
[686.11474609 -97.01291656]
[674.24755859 -87.83845520]
[662.43762207 -78.59049225]
[650.62762451 -69.34252930]
[638.81768799 -60.09456635]
[627.00775146 -50.84660339]
[615.19775391 -41.59864044]
[603.38781738 -32.35067749]
[598.13751221 -18.41210747]
[582.50195312 -15.99568844]
[570.69195557 -6.74772549]
[571.71319580 0.68241888]
[586.57354736 -1.35983431]
[588.61553955 13.50052261]
[573.75573730 15.54270840]
[574.77697754 22.97285271]
[588.64404297 28.69158745]
[602.51116943 34.41032028]
[618.68634033 31.70940208]
[628.90270996 44.53738785]
[622.65057373 59.69794846]
[606.36157227 61.59519577]
[596.79241943 48.27740860]
[582.92529297 42.55867386]
[569.05822754 36.83993912]
[582.39599609 43.70314407]
[592.47406006 54.81315994]
[598.00866699 68.75476837]
[598.29473877 83.75203705]
[593.29589844 97.89457703]
[583.64886475 109.38086700]
[570.58251953 116.74774933]
[555.76135254 119.05680847]
[541.07318115 116.01390839]
[528.38922119 108.00666809]
[519.32501221 96.05506897]
[515.03533936 81.68153381]
[516.06646729 66.71702576]
[522.28717041 53.06774902]
[532.90502930 42.47239685]
[546.56518555 36.28121567]
[532.43127441 41.30440903]
[518.29736328 46.32760239]
[504.16342163 51.35079575]
[490.02951050 56.37399292]
[483.88436890 69.89334106]
[469.62213135 75.18891907]
[455.48345947 68.65166473]
[441.34954834 73.67485809]
[427.21563721 78.69805145]
[413.08172607 83.72124481]
[398.94781494 88.74443817]
[384.81390381 93.76763153]
[399.75387573 95.10806274]
[413.85311890 100.22781372]
[426.17224121 108.78578186]
[435.89056396 120.21181488]
[442.36059570 133.74468994]
[445.15130615 148.48280334]
[444.07675171 163.44425964]
[439.20852661 177.63230896]
[430.87097168 190.10166931]
[419.61956787 200.02163696]
[406.20388794 206.73129272]
[391.51773071 209.78363037]
[376.53952026 208.97529602]
[362.26715088 204.36015320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 113]
[9 112]
[10 111]
[11 110]
[12 109]
[20 105]
[21 104]
[22 103]
[23 102]
[24 101]
[25 100]
[26 99]
[27 98]
[28 97]
[29 96]
[30 48]
[31 47]
[32 46]
[33 45]
[50 95]
[51 94]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[63 84]
[64 83]
[66 81]
[67 80]
[68 79]
[69 78]
[114 238]
[115 237]
[116 236]
[117 235]
[118 234]
[119 233]
[122 230]
[123 229]
[124 228]
[125 227]
[126 226]
[130 196]
[131 195]
[133 193]
[134 192]
[135 191]
[136 190]
[137 189]
[138 188]
[139 187]
[141 186]
[142 185]
[143 184]
[144 182]
[145 181]
[147 173]
[148 172]
[149 171]
[150 170]
[151 169]
[154 165]
[155 164]
[156 163]
[157 162]
[201 210]
[202 209]
[203 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
