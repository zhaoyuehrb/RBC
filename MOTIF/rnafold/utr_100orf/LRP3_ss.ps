%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCGCAGCCAGAGCCAGAGCCGGAGCCGCAGCCGGAACCGGAGCCGGAGCCGCGGGGCAGGAGGCGGCGCCCGCGGGCGGCCGGGCCCGGCAUGGAGAAGCGCGCGGCCGCGGGGCUGGAGGGCGCGCCGGGCGCCCGGGCGCAGCUGGCCGUCGUCUGUCUGGUGAACAUCUUUCUCACCGGGAGACUCA\
) } def
/len { sequence length } bind def

/coor [
[177.90019226 230.80947876]
[185.28184509 215.31823730]
[175.66072083 203.81024170]
[166.03959656 192.30224609]
[151.94015503 187.50065613]
[149.02467346 171.95039368]
[139.40354919 160.44239807]
[132.69172668 157.32276917]
[129.72163391 148.66926575]
[120.28812408 137.00698853]
[110.85460663 125.34469604]
[98.21202087 127.51325989]
[85.95643616 123.72666931]
[76.74053192 114.80451202]
[72.55906677 102.67797089]
[74.31710052 89.97179413]
[62.35545731 80.92087555]
[50.39381409 71.86995697]
[38.43217087 62.81903839]
[22.98042870 64.78915405]
[10.97855568 55.43983841]
[9.19557476 40.69681931]
[-2.76606727 31.64590263]
[-14.72770977 22.59498405]
[-30.17945290 24.56510162]
[-42.18132401 15.21578503]
[-43.96430588 0.47276771]
[-55.92594910 -8.57815075]
[-67.88758850 -17.62906837]
[-79.84923553 -26.67998695]
[-91.81087494 -35.73090363]
[-112.86376953 -36.27229691]
[-121.69958496 -54.57520294]
[-135.07569885 -61.36340714]
[-148.45179749 -68.15161133]
[-161.82791138 -74.93981934]
[-175.20401001 -81.72802734]
[-190.06217957 -77.05117035]
[-203.53074646 -84.12592316]
[-207.89784241 -98.31972504]
[-221.27395630 -105.10793304]
[-234.65005493 -111.89614105]
[-241.28450012 -111.92129517]
[-246.16958618 -114.86020660]
[-248.34407043 -119.12688446]
[-261.49334717 -126.34467316]
[-274.64263916 -133.56246948]
[-287.79190063 -140.78025818]
[-298.05920410 -137.13578796]
[-308.42214966 -139.69876099]
[-315.50888062 -147.38603210]
[-317.15142822 -157.48905945]
[-330.06005859 -165.12886047]
[-342.96871948 -172.76866150]
[-355.87738037 -180.40846252]
[-368.78604126 -188.04826355]
[-381.69470215 -195.68806458]
[-394.60336304 -203.32786560]
[-407.57345581 -210.86289978]
[-420.60412598 -218.29267883]
[-434.68942261 -211.78239441]
[-449.90475464 -214.82763672]
[-460.39950562 -226.25741577]
[-462.13821411 -241.67677307]
[-454.45233154 -255.15664673]
[-440.29721069 -261.51373291]
[-425.11581421 -258.30361938]
[-414.74569702 -246.76066589]
[-413.17434692 -231.32334900]
[-400.14367676 -223.89358521]
[-392.76525879 -223.31076050]
[-386.96356201 -216.23652649]
[-374.05490112 -208.59672546]
[-361.14624023 -200.95692444]
[-348.23757935 -193.31712341]
[-335.32891846 -185.67732239]
[-322.42025757 -178.03752136]
[-309.51159668 -170.39772034]
[-290.22229004 -171.61851501]
[-280.57412720 -153.92953491]
[-267.42483521 -146.71174622]
[-254.27557373 -139.49395752]
[-241.12628174 -132.27616882]
[-227.86186218 -125.27224731]
[-214.48574829 -118.48403931]
[-201.10963440 -111.69583893]
[-187.07534790 -116.55117035]
[-173.41337585 -109.85750580]
[-168.41581726 -95.10413361]
[-155.03970337 -88.31592560]
[-141.66358948 -81.52772522]
[-128.28749084 -74.73951721]
[-114.91137695 -67.95130920]
[-111.93324280 -70.00920105]
[-108.62134552 -71.47055054]
[-107.40814209 -86.42140961]
[-117.83267212 -98.30015564]
[-116.72103119 -114.06529999]
[-104.73273468 -124.36366272]
[-88.98022461 -123.08540344]
[-78.80918884 -110.98889923]
[-80.25391388 -95.25077820]
[-92.45728302 -85.20820618]
[-93.67049408 -70.25734711]
[-84.31481934 -61.13916397]
[-82.75995636 -47.69254684]
[-70.79831696 -38.64162827]
[-58.83667374 -29.59070969]
[-46.87503052 -20.53979301]
[-34.91338730 -11.48887444]
[-20.24084854 -13.78062630]
[-7.98110771 -4.77210665]
[-5.67679119 10.63334274]
[6.28485107 19.68426132]
[18.24649239 28.73517799]
[32.91903305 26.44342613]
[45.17877579 35.45194626]
[47.48308945 50.85739517]
[59.44473267 59.90831375]
[71.40637207 68.95922852]
[83.36801910 78.01014709]
[102.45241547 72.53798676]
[120.26521301 81.30514526]
[133.64131165 74.51693726]
[147.01742554 67.72873688]
[160.39353943 60.94052887]
[173.76963806 54.15232086]
[187.14575195 47.36411667]
[193.47474670 32.62222672]
[208.98397827 28.51815033]
[221.77607727 38.20018387]
[222.03804016 54.24109650]
[209.56892395 64.33567810]
[193.93395996 60.74022675]
[180.55784607 67.52842712]
[167.18173218 74.31663513]
[153.80563354 81.10484314]
[140.42951965 87.89304352]
[127.05341339 94.68125153]
[126.96259308 105.76150513]
[122.51689148 115.91118622]
[131.95040894 127.57347107]
[141.38391113 139.23574829]
[150.91154480 150.82127380]
[160.53266907 162.32926941]
[175.32026672 167.95399475]
[177.54759216 182.68112183]
[187.16871643 194.18911743]
[196.78984070 205.69711304]
[209.35099792 201.54693604]
[222.54289246 201.91595459]
[234.79292297 206.73841858]
[244.64820862 215.41900635]
[250.94781494 226.90620422]
[252.95956421 239.81965637]
[250.46501160 252.61602783]
[243.78298950 263.77346802]
[253.02641296 275.58697510]
[262.26983643 287.40048218]
[271.51327515 299.21398926]
[279.27774048 304.05319214]
[280.80886841 311.29446411]
[289.85980225 323.25613403]
[298.91070557 335.21777344]
[307.96163940 347.17941284]
[317.01254272 359.14105225]
[326.06347656 371.10269165]
[335.11437988 383.06433105]
[344.16528320 395.02597046]
[359.53927612 393.74362183]
[373.15524292 400.99682617]
[380.66839600 414.47109985]
[379.68133545 429.86685181]
[370.50900269 442.27136230]
[356.07827759 447.72637939]
[340.99392700 444.49124146]
[330.06933594 433.59829712]
[326.79049683 418.52337646]
[332.20364380 404.07690430]
[323.15274048 392.11523438]
[314.10180664 380.15359497]
[305.05090332 368.19195557]
[295.99996948 356.23031616]
[286.94906616 344.26867676]
[277.89816284 332.30703735]
[268.84722900 320.34539795]
[259.69976807 308.45742798]
[250.45632935 296.64392090]
[241.21290588 284.83041382]
[231.96948242 273.01690674]
[215.58749390 277.10165405]
[199.01234436 273.61026001]
[185.58264160 263.19659424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 149]
[3 148]
[4 147]
[6 145]
[7 144]
[9 143]
[10 142]
[11 141]
[16 121]
[17 120]
[18 119]
[19 118]
[22 115]
[23 114]
[24 113]
[27 110]
[28 109]
[29 108]
[30 107]
[31 106]
[33 93]
[34 92]
[35 91]
[36 90]
[37 89]
[40 86]
[41 85]
[42 84]
[45 83]
[46 82]
[47 81]
[48 80]
[52 78]
[53 77]
[54 76]
[55 75]
[56 74]
[57 73]
[58 72]
[59 70]
[60 69]
[95 104]
[96 103]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[157 190]
[158 189]
[159 188]
[160 187]
[162 186]
[163 185]
[164 184]
[165 183]
[166 182]
[167 181]
[168 180]
[169 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
