%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACUGCUGCCAUGAAUGCCUUCCUGCUCUCCGCACUGUGCCUCCUUGGGGCCUGGGCCGCCUUGGCAGGAGGGGUCACCGUGCAGGAUGGAAAUUUCUCCUUUUCUCUGG\
) } def
/len { sequence length } bind def

/coor [
[97.20413208 128.60606384]
[91.90005493 142.63697815]
[86.59598541 156.66790771]
[81.29190826 170.69883728]
[84.47236633 186.78660583]
[71.95368195 197.37974548]
[56.61400604 191.58093262]
[54.23347855 175.35548401]
[67.26098633 165.39476013]
[72.56506348 151.36383057]
[77.86913300 137.33291626]
[83.17321014 123.30198669]
[71.39360046 102.79238892]
[78.98457336 80.39195251]
[71.06724548 67.65162659]
[63.14991760 54.91130066]
[52.26022720 53.00971222]
[44.43083191 45.52260208]
[42.14052963 35.16094971]
[45.92394638 25.48385048]
[38.72689438 12.32321072]
[31.52984428 -0.83742893]
[24.33279228 -13.99806881]
[17.13574028 -27.15870857]
[9.93868828 -40.31934738]
[2.74163604 -53.47998810]
[-4.45541573 -66.64062500]
[-11.65246773 -79.80126953]
[-18.84951973 -92.96190643]
[-35.58963013 -94.85440826]
[-47.81773376 -106.20095825]
[-50.89353943 -122.42818451]
[-43.80901337 -137.16455078]
[-51.36912537 -150.12004089]
[-66.38992310 -154.24476624]
[-73.87239838 -167.49118042]
[-69.84751892 -181.78578186]
[-77.40763092 -194.74127197]
[-84.96774292 -207.69676208]
[-98.60583496 -215.71630859]
[-98.33777618 -230.60850525]
[-105.89788818 -243.56399536]
[-113.45800018 -256.51947021]
[-121.01811218 -269.47497559]
[-128.57821655 -282.43045044]
[-141.78347778 -293.06332397]
[-135.22175598 -308.69595337]
[-118.38355255 -306.71823120]
[-115.62273407 -289.99057007]
[-108.06262207 -277.03509521]
[-100.50251007 -264.07958984]
[-92.94239807 -251.12409973]
[-85.38228607 -238.16860962]
[-72.28494263 -231.07572937]
[-72.01225281 -215.25688171]
[-64.45214081 -202.30139160]
[-56.89203262 -189.34590149]
[-42.46678162 -185.81776428]
[-34.61519623 -172.78675842]
[-38.41363907 -157.68014526]
[-30.85352516 -144.72465515]
[-17.42551804 -144.61227417]
[-5.73086691 -137.79386902]
[1.09047079 -125.97523499]
[1.14525533 -112.22073364]
[-5.68887949 -100.15895844]
[1.50817215 -86.99832153]
[8.70522404 -73.83767700]
[15.90227604 -60.67704010]
[23.09932709 -47.51639938]
[30.29637909 -34.35576248]
[37.49343109 -21.19511986]
[44.69048309 -8.03448105]
[51.88753510 5.12615919]
[59.08458710 18.28679848]
[76.28624725 26.93353271]
[75.89024353 46.99397278]
[83.80757141 59.73429871]
[91.72489929 72.47462463]
[102.79007721 71.39337158]
[113.43778229 74.59233093]
[122.07489777 81.59286499]
[127.40909576 91.34753418]
[128.64225769 102.39680481]
[125.58988190 113.08745575]
[136.69976807 123.16567230]
[147.80966187 133.24388123]
[159.05856323 143.16668701]
[170.44432068 152.93217468]
[190.33100891 155.59628296]
[196.25680542 173.91424561]
[208.16766357 183.03187561]
[220.07853699 192.14950562]
[235.71025085 189.82029724]
[248.36064148 199.29359436]
[250.52444458 214.94905090]
[240.91793823 227.49858093]
[225.24047852 229.49674988]
[212.79322815 219.75808716]
[210.96090698 204.06037903]
[199.05003357 194.94274902]
[187.13917542 185.82511902]
[176.99871826 188.09043884]
[167.10681152 184.24862671]
[160.89958191 175.37019348]
[160.67883301 164.31791687]
[149.29309082 154.55244446]
[142.06561279 152.55848694]
[137.73144531 144.35377502]
[126.62155914 134.27555847]
[115.51166534 124.19734955]
[109.78983307 127.02374268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[14 79]
[15 78]
[16 77]
[20 75]
[21 74]
[22 73]
[23 72]
[24 71]
[25 70]
[26 69]
[27 68]
[28 67]
[29 66]
[33 61]
[34 60]
[37 57]
[38 56]
[39 55]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[85 111]
[86 110]
[87 109]
[88 107]
[89 106]
[91 102]
[92 101]
[93 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
