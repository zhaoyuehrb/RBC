%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACUGGGCCUCCACUUUGCCCUCUUUCCUUCUCUUCUCCUCACAGCAGUGCCUGGUCAAACCCAGCAACCCUUGGCCAGAACUUACUCACCCAUCCCACUGACACCAUGAAGCCUGUGCUGCCUCUCCAGUUCCUGGUGGUGUUCUGCCUAGCACUGCAGCUGGUGCCUGGGAGUCCCAAGCAGCGUGUUCUGAAGUAUAUCUUGG\
) } def
/len { sequence length } bind def

/coor [
[68.46544647 377.95678711]
[57.96189117 384.75393677]
[46.47123337 389.69381714]
[34.31878281 392.63787842]
[21.84837532 393.50402832]
[9.41263294 392.26895142]
[-2.63699698 388.96871948]
[-9.17425823 402.46926880]
[-15.71152020 415.96978760]
[-22.24878120 429.47030640]
[-14.11528397 442.57946777]
[-14.38313770 458.00448608]
[-22.96687317 470.82336426]
[-37.12744904 476.94558716]
[-52.34628296 474.41757202]
[-63.76709366 464.04605103]
[-67.74554443 449.14050293]
[-63.01212692 434.45724487]
[-51.07725525 424.68164062]
[-35.74930954 422.93304443]
[-29.21204758 409.43252563]
[-22.67478561 395.93200684]
[-16.13752365 382.43145752]
[-29.94740868 371.51229858]
[-40.80561447 357.64498901]
[-48.09991837 341.60568237]
[-51.41770554 324.29321289]
[-50.56930542 306.67868042]
[-45.59883881 289.75091553]
[-36.78192139 274.46105957]
[-24.61040688 261.66906738]
[-9.76492405 252.09533691]
[6.92316055 246.28021240]
[24.51831627 244.55339050]
[42.03328323 247.01528931]
[47.32802582 232.98085022]
[52.62276459 218.94639587]
[57.91750336 204.91194153]
[48.37189865 193.47747803]
[45.81436157 178.70199585]
[51.03043365 164.53657532]
[62.71323013 154.82014465]
[77.78923035 152.23916626]
[83.08396912 138.20471191]
[88.37870789 124.17026520]
[77.11833191 99.87314606]
[91.98045349 82.83598328]
[91.52957153 67.84276581]
[91.07869720 52.84954071]
[90.62781525 37.85631943]
[90.17694092 22.86309814]
[89.72605896 7.86987543]
[89.27517700 -7.12334681]
[79.88510895 -18.82063484]
[65.34410095 -22.50291634]
[50.80310059 -26.18519783]
[36.26209641 -29.86748123]
[22.81536102 -21.56321144]
[7.45451641 -25.28073883]
[-0.70712125 -38.81451797]
[3.17260242 -54.13520050]
[16.79191589 -62.15329742]
[32.07072449 -58.11180878]
[39.94437790 -44.40848541]
[54.48538208 -40.72620392]
[69.02638245 -37.04391861]
[83.56739044 -33.36163712]
[72.57183838 -43.56447220]
[60.02405548 -51.78354263]
[55.41455841 -66.05773163]
[60.78547668 -80.06320953]
[73.75735474 -87.59516907]
[88.58330536 -85.31675720]
[98.69504547 -74.23737335]
[99.61334991 -59.26735306]
[103.02471924 -44.66041946]
[107.03389740 -59.11470795]
[111.04307556 -73.56900024]
[110.32124329 -82.67646027]
[115.22267151 -88.20955658]
[119.44865417 -102.60195160]
[123.67464447 -116.99434662]
[127.90063477 -131.38673401]
[132.12661743 -145.77912903]
[130.94110107 -152.28599548]
[132.92312622 -157.61430359]
[136.70199585 -160.53709412]
[141.35868835 -174.79595947]
[141.04815674 -183.92669678]
[146.19401550 -189.23321533]
[151.06451416 -203.42047119]
[155.93501282 -217.60772705]
[160.80549622 -231.79498291]
[151.43600464 -240.68524170]
[146.14451599 -252.41636658]
[145.68507385 -265.23071289]
[150.09062195 -277.22296143]
[158.67338562 -286.62338257]
[170.13194275 -292.05895996]
[182.74851990 -292.75396729]
[188.04325867 -306.78842163]
[193.33799744 -320.82287598]
[198.63273621 -334.85733032]
[187.91430664 -343.26284790]
[180.00714111 -354.33340454]
[175.54379272 -367.16699219]
[174.87672424 -380.72137451]
[178.05049133 -393.89852905]
[184.79890442 -405.63366699]
[194.56730652 -414.98129272]
[206.55818176 -421.19134521]
[219.79621887 -423.76934814]
[233.20768738 -422.51589966]
[238.92189026 -436.38485718]
[244.63607788 -450.25381470]
[241.92988586 -466.42813110]
[254.75453186 -476.64871216]
[269.91714478 -470.40151978]
[271.81970215 -454.11309814]
[258.50503540 -444.53961182]
[252.79083252 -430.67065430]
[247.07662964 -416.80169678]
[259.44619751 -405.94610596]
[267.36456299 -391.48944092]
[269.85946655 -375.17016602]
[266.61203003 -358.95767212]
[257.99749756 -344.81445312]
[245.04176331 -334.45874023]
[229.29943848 -329.15563965]
[212.66719055 -329.56259155]
[207.37245178 -315.52813721]
[202.07769775 -301.49368286]
[196.78295898 -287.45922852]
[208.17103577 -274.54776001]
[211.46903992 -257.55978394]
[205.68002319 -241.15715027]
[192.31343079 -229.88774109]
[174.99275208 -226.92449951]
[170.12226868 -212.73724365]
[165.25177002 -198.54998779]
[160.38128662 -184.36271667]
[155.61755371 -170.13925171]
[150.96086121 -155.88040161]
[146.51901245 -141.55314636]
[142.29302979 -127.16075134]
[138.06704712 -112.76835632]
[133.84104919 -98.37596130]
[129.61506653 -83.98356628]
[125.49736023 -69.55982208]
[121.48818207 -55.10552979]
[117.47900391 -40.65124130]
[120.06937408 -26.65865326]
[114.78199005 -14.37308216]
[104.26840210 -7.57422543]
[104.71928406 7.41899681]
[105.17015839 22.41221809]
[105.62104034 37.40544128]
[106.07191467 52.39866257]
[106.52279663 67.39188385]
[106.97367096 82.38510895]
[121.30179596 91.64414215]
[124.19320679 111.57344818]
[137.10778809 119.20324707]
[150.02235413 126.83304596]
[162.93692017 134.46284485]
[172.28268433 129.31127930]
[182.84315491 128.51072693]
[192.70707703 132.13885498]
[200.11709595 139.47782898]
[203.78283691 149.15528870]
[203.10530090 159.40061951]
[215.66279602 167.60484314]
[228.22029114 175.80906677]
[240.77778625 184.01329041]
[257.34481812 187.61468506]
[258.47036743 204.53121948]
[242.52651978 210.29576111]
[232.57356262 196.57078552]
[220.01606750 188.36656189]
[207.45857239 180.16233826]
[194.90107727 171.95811462]
[176.18110657 177.34571838]
[159.27217102 167.07260132]
[155.30712891 147.37741089]
[142.39254761 139.74761963]
[129.47798157 132.11781311]
[116.56340790 124.48802185]
[102.41315460 129.46501160]
[97.11841583 143.49945068]
[91.82367706 157.53390503]
[101.43803406 169.42976379]
[103.79163361 184.44166565]
[98.35132599 198.52247620]
[86.67156982 207.92669678]
[71.95195007 210.20668030]
[66.65721130 224.24113464]
[61.36247253 238.27558899]
[56.06773376 252.31002808]
[66.78810883 258.84152222]
[76.25998688 267.07449341]
[84.21636963 276.77529907]
[90.43324280 287.66894531]
[94.73587036 299.44689941]
[97.00373840 311.77578735]
[97.17388153 324.30682373]
[95.24268341 336.68576050]
[91.26589966 348.56280518]
[85.35708618 359.60256958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 23]
[8 22]
[9 21]
[10 20]
[35 198]
[36 197]
[37 196]
[38 195]
[43 190]
[44 189]
[45 188]
[47 160]
[48 159]
[49 158]
[50 157]
[51 156]
[52 155]
[53 154]
[54 67]
[55 66]
[56 65]
[57 64]
[76 151]
[77 150]
[78 149]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[87 143]
[88 142]
[90 141]
[91 140]
[92 139]
[93 138]
[100 133]
[101 132]
[102 131]
[103 130]
[113 122]
[114 121]
[115 120]
[162 187]
[163 186]
[164 185]
[165 184]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
