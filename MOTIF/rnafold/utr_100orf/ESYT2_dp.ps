%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ESYT2)
} def

/sequence { (\
AGUAUCCACCCCGCCCGCUCCCGGUGACGUGCCAGCCCCAGGCCCACGCCGCUCCCGCCCCGCGUGAUGACGCCACCGUCCCGGGCGGAGGCGGGCGUGCGGCGGAGCCGCGUCCCCUCAGAGGGGCGCUGGCGCGGGGCUGAGCCGCCCGGGAUCAGCGCGAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.190834671 ubox
2 14 0.014435302 ubox
2 18 0.003767544 ubox
2 161 0.004713995 ubox
2 165 0.030499285 ubox
3 8 0.179105012 ubox
3 13 0.014147279 ubox
3 17 0.003675140 ubox
3 164 0.029188308 ubox
5 163 0.026424807 ubox
6 162 0.026765442 ubox
12 160 0.091299755 ubox
12 162 0.325278240 ubox
13 159 0.094484999 ubox
13 161 0.327600469 ubox
13 165 0.931039996 ubox
14 158 0.094382319 ubox
14 160 0.303445399 ubox
14 164 0.931361255 ubox
16 160 0.430284294 ubox
16 162 0.841539950 ubox
17 159 0.511527980 ubox
17 161 0.842246977 ubox
17 165 0.009862098 ubox
18 158 0.512189285 ubox
18 160 0.841945237 ubox
18 164 0.009870311 ubox
19 153 0.004528514 ubox
19 154 0.944048738 ubox
19 157 0.314861246 ubox
19 163 0.008275127 ubox
20 152 0.005489541 ubox
20 153 0.999863258 ubox
20 162 0.007219105 ubox
21 151 0.005363457 ubox
21 152 0.999948649 ubox
22 151 0.999930946 ubox
22 160 0.006624101 ubox
23 149 0.087657176 ubox
23 150 0.996090399 ubox
23 159 0.006630544 ubox
24 148 0.123841050 ubox
24 149 0.991716709 ubox
25 147 0.146795223 ubox
25 157 0.006623172 ubox
26 146 0.143770626 ubox
26 156 0.006631725 ubox
27 155 0.006476735 ubox
28 136 0.005114151 ubox
28 147 0.978684249 ubox
29 135 0.005169365 ubox
29 145 0.049695817 ubox
29 146 0.980773179 ubox
29 148 0.115246158 ubox
30 134 0.005170296 ubox
30 144 0.050834719 ubox
30 147 0.114755930 ubox
31 133 0.005181303 ubox
31 145 0.994651289 ubox
31 146 0.083123222 ubox
31 148 0.003360246 ubox
32 132 0.005181475 ubox
32 144 0.997812382 ubox
32 147 0.003354832 ubox
33 131 0.005181178 ubox
33 142 0.999668603 ubox
34 130 0.005056057 ubox
34 141 0.999723038 ubox
35 129 0.004241554 ubox
35 140 0.999976158 ubox
36 128 0.004060875 ubox
36 139 0.999958514 ubox
37 138 0.999934284 ubox
37 139 0.006557992 ubox
38 137 0.999897445 ubox
38 138 0.009270624 ubox
39 131 0.003663330 ubox
39 136 0.997979477 ubox
39 137 0.011342600 ubox
40 130 0.005372251 ubox
41 50 0.005145002 ubox
41 109 0.371418359 ubox
42 49 0.005260872 ubox
42 103 0.133383261 ubox
42 108 0.371934541 ubox
42 133 0.649781798 ubox
42 135 0.505465822 ubox
43 48 0.005268268 ubox
43 102 0.133502326 ubox
43 105 0.055283644 ubox
43 107 0.371605009 ubox
43 132 0.640569475 ubox
43 134 0.506808183 ubox
44 101 0.133444621 ubox
44 104 0.050676453 ubox
44 105 0.215099304 ubox
44 131 0.628961170 ubox
44 132 0.209295914 ubox
45 99 0.133842527 ubox
45 104 0.194186474 ubox
45 131 0.235677327 ubox
46 98 0.133888799 ubox
46 130 0.229883850 ubox
47 97 0.133914777 ubox
47 101 0.041793352 ubox
47 104 0.962031107 ubox
47 128 0.015279878 ubox
48 96 0.133777221 ubox
48 100 0.044192213 ubox
48 103 0.989599472 ubox
48 127 0.015255925 ubox
48 129 0.006805766 ubox
49 94 0.073974653 ubox
49 95 0.109652907 ubox
49 99 0.034392557 ubox
49 102 0.989794842 ubox
49 105 0.005936893 ubox
49 126 0.015109022 ubox
49 128 0.006747733 ubox
50 93 0.104449500 ubox
50 94 0.077880208 ubox
50 97 0.019964103 ubox
50 99 0.030168728 ubox
50 101 0.989727846 ubox
50 104 0.005983962 ubox
50 125 0.014136196 ubox
51 92 0.127872571 ubox
51 96 0.019868733 ubox
51 98 0.052326023 ubox
51 100 0.989228951 ubox
51 103 0.006108337 ubox
52 90 0.008858430 ubox
52 91 0.127709024 ubox
52 95 0.015376828 ubox
52 97 0.067727036 ubox
52 99 0.987906705 ubox
52 102 0.006107539 ubox
52 123 0.011293275 ubox
53 89 0.012101315 ubox
53 90 0.121984692 ubox
53 91 0.008382238 ubox
53 94 0.004292307 ubox
53 95 0.005916769 ubox
53 101 0.006069375 ubox
53 122 0.011230535 ubox
54 88 0.010432548 ubox
54 90 0.027470732 ubox
54 94 0.007838360 ubox
54 95 0.989562881 ubox
54 121 0.010790339 ubox
55 87 0.007408672 ubox
55 88 0.127824784 ubox
55 93 0.005740045 ubox
55 94 0.991370248 ubox
55 95 0.004415127 ubox
56 87 0.128194600 ubox
56 93 0.991646446 ubox
57 86 0.128405023 ubox
57 92 0.991695342 ubox
57 103 0.003427538 ubox
58 85 0.126079909 ubox
58 91 0.991708715 ubox
58 102 0.003417054 ubox
59 84 0.123654142 ubox
59 85 0.024350703 ubox
59 90 0.991585707 ubox
59 101 0.003401790 ubox
60 83 0.120641761 ubox
60 84 0.034416507 ubox
60 88 0.991569056 ubox
61 78 0.057156554 ubox
61 83 0.042124436 ubox
61 87 0.991674756 ubox
61 99 0.003368269 ubox
62 73 0.072193354 ubox
62 77 0.054620766 ubox
62 79 0.068660478 ubox
62 82 0.047003835 ubox
62 86 0.991662164 ubox
62 98 0.003377768 ubox
63 72 0.072896443 ubox
63 78 0.069240955 ubox
63 83 0.011730363 ubox
63 85 0.991608248 ubox
63 97 0.003379150 ubox
64 71 0.073275701 ubox
64 73 0.018463778 ubox
64 76 0.070688675 ubox
64 77 0.051657102 ubox
64 82 0.027287080 ubox
64 96 0.003373115 ubox
65 70 0.072549443 ubox
65 72 0.018790342 ubox
65 75 0.084150035 ubox
65 78 0.006510256 ubox
65 83 0.978324399 ubox
66 71 0.018501629 ubox
66 74 0.084186538 ubox
66 77 0.007308757 ubox
66 80 0.076573429 ubox
66 82 0.971990426 ubox
67 79 0.079037587 ubox
68 75 0.022053024 ubox
68 78 0.079301335 ubox
69 74 0.022381760 ubox
69 77 0.079063598 ubox
69 80 0.987777582 ubox
70 79 0.989649975 ubox
71 78 0.989772380 ubox
71 93 0.003399938 ubox
72 77 0.942402799 ubox
72 79 0.005872035 ubox
72 92 0.003618287 ubox
73 78 0.006400830 ubox
73 91 0.003625774 ubox
74 83 0.003244924 ubox
74 90 0.003641962 ubox
76 84 0.017939620 ubox
76 85 0.003188729 ubox
76 88 0.006526052 ubox
77 83 0.018332006 ubox
77 84 0.003562372 ubox
77 87 0.006559930 ubox
78 82 0.018575476 ubox
78 86 0.006645756 ubox
79 85 0.006633480 ubox
80 84 0.006406179 ubox
88 119 0.003807433 ubox
89 118 0.004815756 ubox
90 117 0.004924400 ubox
91 116 0.004923643 ubox
93 115 0.005132480 ubox
93 117 0.005671130 ubox
94 114 0.005172965 ubox
94 116 0.006005978 ubox
95 113 0.005342800 ubox
95 115 0.006311121 ubox
96 112 0.005331233 ubox
97 113 0.004519781 ubox
98 112 0.008867205 ubox
99 111 0.016738613 ubox
100 110 0.017326059 ubox
101 109 0.025501828 ubox
102 108 0.025880279 ubox
102 135 0.005273200 ubox
103 107 0.025695058 ubox
103 134 0.005289504 ubox
104 109 0.022234710 ubox
104 135 0.054737600 ubox
106 130 0.032767073 ubox
107 129 0.028352441 ubox
107 133 0.637302365 ubox
107 135 0.005824517 ubox
108 128 0.024676347 ubox
108 132 0.638256533 ubox
108 134 0.005085985 ubox
109 128 0.010481243 ubox
109 131 0.638234657 ubox
110 127 0.014531452 ubox
110 129 0.985847855 ubox
110 130 0.134553729 ubox
110 133 0.008251912 ubox
110 135 0.081205363 ubox
111 126 0.011949556 ubox
111 128 0.995815792 ubox
111 132 0.008056944 ubox
111 134 0.081285891 ubox
112 127 0.996053508 ubox
112 129 0.017236106 ubox
112 133 0.081210409 ubox
113 126 0.804594423 ubox
113 128 0.017203402 ubox
113 132 0.080888471 ubox
114 124 0.004180517 ubox
114 125 0.802190629 ubox
114 126 0.590768582 ubox
114 131 0.050574823 ubox
114 132 0.004376857 ubox
115 123 0.004442533 ubox
115 124 0.799525770 ubox
115 125 0.594969326 ubox
115 126 0.045892033 ubox
115 131 0.004281519 ubox
116 123 0.795238610 ubox
116 124 0.598621785 ubox
116 125 0.046099464 ubox
116 126 0.009597834 ubox
117 123 0.602041203 ubox
117 124 0.046161285 ubox
117 125 0.009638354 ubox
118 122 0.545587332 ubox
118 123 0.042542370 ubox
118 124 0.009586376 ubox
119 123 0.010794943 ubox
126 135 0.005169260 ubox
127 134 0.005319507 ubox
128 133 0.005235948 ubox
128 135 0.014100925 ubox
129 134 0.014409056 ubox
131 135 0.031729618 ubox
137 150 0.003487574 ubox
138 149 0.003521701 ubox
139 148 0.003535584 ubox
140 147 0.003531234 ubox
155 163 0.003680649 ubox
156 162 0.003979568 ubox
158 165 0.035273852 ubox
159 164 0.035298014 ubox
13 165 0.9500000 lbox
14 164 0.9500000 lbox
16 162 0.9500000 lbox
17 161 0.9500000 lbox
18 160 0.9500000 lbox
19 154 0.9500000 lbox
20 153 0.9500000 lbox
21 152 0.9500000 lbox
22 151 0.9500000 lbox
23 150 0.9500000 lbox
24 149 0.9500000 lbox
28 147 0.9500000 lbox
29 146 0.9500000 lbox
31 145 0.9500000 lbox
32 144 0.9500000 lbox
33 142 0.9500000 lbox
34 141 0.9500000 lbox
35 140 0.9500000 lbox
36 139 0.9500000 lbox
37 138 0.9500000 lbox
38 137 0.9500000 lbox
39 136 0.9500000 lbox
42 133 0.9500000 lbox
43 132 0.9500000 lbox
44 131 0.9500000 lbox
47 104 0.9500000 lbox
48 103 0.9500000 lbox
49 102 0.9500000 lbox
50 101 0.9500000 lbox
51 100 0.9500000 lbox
52 99 0.9500000 lbox
54 95 0.9500000 lbox
55 94 0.9500000 lbox
56 93 0.9500000 lbox
57 92 0.9500000 lbox
58 91 0.9500000 lbox
59 90 0.9500000 lbox
60 88 0.9500000 lbox
61 87 0.9500000 lbox
62 86 0.9500000 lbox
63 85 0.9500000 lbox
65 83 0.9500000 lbox
66 82 0.9500000 lbox
69 80 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
72 77 0.9500000 lbox
110 129 0.9500000 lbox
111 128 0.9500000 lbox
112 127 0.9500000 lbox
113 126 0.9500000 lbox
114 125 0.9500000 lbox
115 124 0.9500000 lbox
116 123 0.9500000 lbox
showpage
end
%%EOF
