%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAUCCAAUGGGAAGAAGAGAUCCAAUGGAUCCUCUAUCACGAAGAUAUUGAGAUAAGAACCAAUAUGGAUUUGCACCCACUGCAUUUGCAGCCUUGAGGUCAUAAGCAUCCUCAGGAAAAUGCACCAGGUGCUGCUGGCAAGAUGGAAACCAACUUCUCCACUCCUCUGAAUGAAUAUGAAGAAGUGUCCUAUGAGUCUGCUGGCUACACUGUUCUGCGGAUCCUCCCAUUGGUGGUGCUUG\
) } def
/len { sequence length } bind def

/coor [
[106.11383057 291.32437134]
[105.15587616 276.15365601]
[110.08115387 261.77276611]
[120.13858795 250.37467957]
[133.79450989 243.69752502]
[132.82952881 228.72860718]
[131.86453247 213.75967407]
[130.89955139 198.79074097]
[129.93457031 183.82182312]
[128.96957397 168.85289001]
[128.00459290 153.88395691]
[127.03960419 138.91503906]
[126.07461548 123.94610596]
[118.94467926 121.61929321]
[97.55487823 114.63887024]
[87.94598389 126.15707397]
[78.41143799 137.73690796]
[68.95162964 149.37786865]
[59.49182510 161.01882935]
[50.03202438 172.65980530]
[40.64735413 184.36141968]
[31.33821297 196.12322998]
[22.02906990 207.88502502]
[12.71992874 219.64682007]
[7.63106728 235.81901550]
[-9.31784725 235.40592957]
[-13.61283875 219.00503540]
[0.95813131 210.33767700]
[10.26727390 198.57588196]
[19.57641602 186.81408691]
[28.88555717 175.05227661]
[30.56851959 167.87280273]
[38.39105606 163.19999695]
[47.85086060 151.55903625]
[57.31066513 139.91806030]
[66.77046967 128.27709961]
[68.54573059 121.11988068]
[76.42778015 116.54817963]
[86.03667450 105.02996826]
[82.46930695 98.43270874]
[69.27478027 105.56745148]
[56.08013535 112.70197296]
[48.94583511 99.50720978]
[62.14003754 92.37292480]
[75.33456421 85.23818207]
[71.76719666 78.64092255]
[56.86779022 80.37521362]
[41.96838379 82.10949707]
[27.06898117 83.84378815]
[12.16957664 85.57807922]
[-2.72982740 87.31236267]
[-8.74615479 101.44387054]
[-21.03183556 110.66111755]
[-36.28208542 112.48471069]
[-50.39466095 106.42411804]
[-59.57334900 94.10960388]
[-61.34913254 78.85371399]
[-55.24433517 64.76020813]
[-42.90111160 55.62015915]
[-27.63973045 53.89220428]
[-13.56542683 60.04114914]
[-4.46411657 72.41296387]
[10.43528748 70.67867279]
[25.33469200 68.94438171]
[40.23409653 67.21009827]
[55.13349915 65.47580719]
[70.03290558 63.74151611]
[82.99097443 56.18583298]
[91.83897400 44.07332230]
[100.68697357 31.96081352]
[109.53497314 19.84830284]
[118.38297272 7.73579121]
[127.23097229 -4.37671947]
[136.07896423 -16.48923111]
[144.92697144 -28.60174179]
[153.77496338 -40.71425247]
[149.40153503 -47.31966782]
[146.66737366 -54.71446609]
[145.70108032 -62.50086594]
[146.53663635 -70.26420593]
[149.11251831 -77.59505463]
[137.23184204 -86.75199127]
[125.35115814 -95.90892792]
[113.47048187 -105.06586456]
[97.15333557 -106.70378113]
[90.66082764 -121.76297760]
[100.67189026 -134.75184631]
[116.88800049 -132.30854797]
[122.62741852 -116.94654846]
[134.50810242 -107.78960419]
[146.38877869 -98.63266754]
[158.26945496 -89.47573090]
[164.68415833 -97.05037689]
[173.67388916 -102.88199615]
[167.49061584 -116.54827118]
[161.30734253 -130.21455383]
[155.12406921 -143.88082886]
[148.94079590 -157.54710388]
[142.75752258 -171.21337891]
[136.57423401 -184.87965393]
[121.28241730 -186.31341553]
[108.76548767 -195.21409607]
[102.39043427 -209.18743896]
[103.87213135 -224.47470093]
[112.81199646 -236.96366882]
[126.80525208 -243.29487610]
[142.08778381 -241.76527405]
[154.54867554 -232.78631592]
[160.83599854 -218.77326965]
[159.25849915 -203.49560547]
[150.24052429 -191.06292725]
[156.42379761 -177.39665222]
[162.60707092 -163.73037720]
[168.79034424 -150.06410217]
[174.97361755 -136.39782715]
[181.15689087 -122.73154449]
[187.34016418 -109.06526947]
[188.46578979 -124.02297211]
[183.70429993 -138.24719238]
[186.52819824 -152.97897339]
[196.21211243 -164.43418884]
[210.26852417 -169.67033386]
[225.08677673 -167.34239197]
[236.86051941 -158.04835510]
[242.56541443 -144.17556763]
[240.73605347 -129.28753662]
[231.84236145 -117.20854950]
[218.16992188 -111.04151154]
[207.95729065 -100.05505371]
[222.18690491 -104.80037689]
[236.41651917 -109.54570007]
[250.64613342 -114.29102325]
[257.76092529 -128.14805603]
[272.25936890 -132.75778198]
[285.42611694 -125.88951874]
[299.65573120 -130.63484192]
[313.88534546 -135.38017273]
[328.11495972 -140.12548828]
[342.34457397 -144.87081909]
[356.57418823 -149.61613464]
[370.80380249 -154.36145020]
[377.93563843 -160.03279114]
[385.24725342 -159.07499695]
[399.53677368 -163.63671875]
[413.82632446 -168.19844055]
[413.84002686 -184.02696228]
[418.74169922 -199.05696106]
[428.03942871 -211.81880188]
[440.81207275 -221.06857300]
[455.80050659 -225.90930176]
[471.53176880 -225.87789917]
[486.46380615 -220.98948669]
[499.13659668 -211.73466492]
[508.31497192 -199.03039551]
[522.54461670 -203.77571106]
[536.77423096 -208.52104187]
[551.00384521 -213.26635742]
[565.23345947 -218.01168823]
[579.46307373 -222.75700378]
[590.10675049 -234.46267700]
[604.62805176 -231.14909363]
[618.85766602 -235.89440918]
[622.02136230 -249.29736328]
[631.31652832 -259.31130981]
[644.24090576 -263.39743042]
[657.39172363 -260.59191895]
[667.36163330 -251.73086548]
[681.65118408 -256.29257202]
[690.25628662 -269.83261108]
[706.22222900 -271.40362549]
[717.30133057 -259.80047607]
[714.99462891 -243.92410278]
[701.07165527 -235.95352173]
[686.21289062 -242.00305176]
[671.92340088 -237.44132996]
[667.26477051 -221.68998718]
[653.99774170 -211.72573853]
[637.23944092 -211.63992310]
[623.60302734 -221.66479492]
[609.37341309 -216.91947937]
[599.74749756 -205.55322266]
[584.20837402 -208.52738953]
[569.97875977 -203.78207397]
[555.74914551 -199.03674316]
[541.51953125 -194.29142761]
[527.28991699 -189.54609680]
[513.06030273 -184.80078125]
[513.52349854 -170.56488037]
[509.95434570 -156.75946045]
[502.63308716 -144.50457764]
[492.14486694 -134.79713440]
[479.33285522 -128.42970276]
[465.23043823 -125.92588806]
[450.97790527 -127.49725342]
[437.73031616 -133.02546692]
[426.56375122 -142.07116699]
[418.38803101 -153.90890503]
[404.09851074 -149.34718323]
[389.80899048 -144.78546143]
[375.54910278 -140.13183594]
[361.31948853 -135.38652039]
[347.08987427 -130.64120483]
[332.86026001 -125.89587402]
[318.63064575 -121.15055084]
[304.40103149 -116.40522766]
[290.17141724 -111.65990448]
[283.76260376 -98.26354980]
[269.39935303 -93.24840546]
[255.39146423 -100.06140900]
[241.16184998 -95.31608582]
[226.93223572 -90.57076263]
[212.70262146 -85.82543945]
[218.35963440 -66.56790161]
[213.88441467 -47.56043243]
[200.96881104 -33.64825439]
[183.38284302 -28.10397911]
[165.88748169 -31.86625290]
[157.03947449 -19.75374222]
[148.19148254 -7.64123154]
[139.34347534 4.47127914]
[130.49548340 16.58378983]
[121.64748383 28.69630051]
[112.79948425 40.80881119]
[103.95148468 52.92132187]
[95.10348511 65.03383636]
[141.04354858 122.98111725]
[142.00852966 137.95004272]
[142.97351074 152.91897583]
[143.93850708 167.88790894]
[144.90348816 182.85682678]
[145.86848450 197.82575989]
[146.83346558 212.79469299]
[147.79844666 227.76361084]
[148.76344299 242.73254395]
[163.16365051 247.60102844]
[174.60134888 257.61340332]
[181.33233643 271.24285889]
[182.33020020 286.41101074]
[177.44277954 300.80480957]
[167.41535950 312.22930908]
[153.77705383 318.94238281]
[138.60760498 319.92028809]
[124.22024536 315.01394653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 234]
[6 233]
[7 232]
[8 231]
[9 230]
[10 229]
[11 228]
[12 227]
[13 226]
[15 39]
[16 38]
[17 36]
[18 35]
[19 34]
[20 33]
[21 31]
[22 30]
[23 29]
[24 28]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[68 225]
[69 224]
[70 223]
[71 222]
[72 221]
[73 220]
[74 219]
[75 218]
[76 217]
[81 92]
[82 91]
[83 90]
[84 89]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[129 212]
[130 211]
[131 210]
[132 209]
[135 206]
[136 205]
[137 204]
[138 203]
[139 202]
[140 201]
[141 200]
[143 199]
[144 198]
[145 197]
[154 187]
[155 186]
[156 185]
[157 184]
[158 183]
[159 182]
[161 180]
[162 179]
[167 175]
[168 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
