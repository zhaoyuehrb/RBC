%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCUGGCUGGGGUGGGACAGGGUGGCCAGAUAAAAGCAGAGCAGGACCUGGAAAGCUGGUUUGUAUGGGCUGCAGCCUGCCGCUGAGCUGCAUCAUGGUGCGGUCUGUGGCCUGGGCAGGUUUCAUGGUCCUGCUGAUGAUCCCAUGGGGCUCUGCUGCAAAACUGGUCUGCUACUUCACCAACUGGGCCCAGU\
) } def
/len { sequence length } bind def

/coor [
[100.20298767 695.43829346]
[84.41678619 694.68243408]
[73.85066986 682.92944336]
[74.77334595 667.15216064]
[86.63739014 656.71087646]
[87.35474396 641.72802734]
[88.07209015 626.74517822]
[88.78944397 611.76239014]
[89.38729858 596.77429199]
[89.86563873 581.78192139]
[82.53813171 568.81439209]
[90.71157074 555.26794434]
[91.18990326 540.27557373]
[83.86239624 527.30804443]
[92.03583527 513.76165771]
[92.51416779 498.76925659]
[92.99250031 483.77688599]
[93.35128021 468.78118896]
[93.59047699 453.78308105]
[81.59059143 445.00012207]
[77.00927734 430.66567993]
[81.80310822 416.21325684]
[94.33258820 407.25122070]
[94.57178497 392.25311279]
[94.81098175 377.25503540]
[94.93058777 362.25552368]
[94.93058777 347.25552368]
[94.93058777 332.25552368]
[94.93058777 317.25552368]
[94.93058777 302.25552368]
[94.93058777 287.25552368]
[80.40740967 280.60281372]
[70.20008850 268.23944092]
[66.38970947 252.60639954]
[69.78781891 236.81909180]
[79.76419830 224.04646301]
[94.36302948 216.87489319]
[94.12383270 201.87680054]
[93.88463593 186.87870789]
[93.64543915 171.88061523]
[93.40623474 156.88252258]
[93.16703796 141.88442993]
[92.92784119 126.88634491]
[92.68864441 111.88825226]
[90.42485809 97.06005859]
[86.17800903 82.67380524]
[81.93115997 68.28755188]
[77.68431091 53.90130234]
[73.43746185 39.51504898]
[69.19061279 25.12879562]
[55.58977890 17.53569984]
[51.48780823 2.88549590]
[58.81047821 -10.03402615]
[54.56362915 -24.42027855]
[50.31678009 -38.80653000]
[46.06993103 -53.19278336]
[34.74206543 -64.23769379]
[38.55939484 -78.63481903]
[34.31254578 -93.02107239]
[30.06569672 -107.40732574]
[18.73782921 -118.45223236]
[22.55516052 -132.84936523]
[18.30831146 -147.23561096]
[8.90330315 -135.55032349]
[-6.09638691 -135.45387268]
[-15.65090084 -147.01722717]
[-12.72806263 -161.72970581]
[0.52090311 -168.76283264]
[14.34567547 -162.93908691]
[11.25820446 -177.61788940]
[8.17073345 -192.29670715]
[5.08326244 -206.97550964]
[1.99579144 -221.65432739]
[-1.09167957 -236.33314514]
[-4.17915058 -251.01194763]
[-7.26662159 -265.69076538]
[-10.35409260 -280.36956787]
[-13.55850697 -295.02331543]
[-16.87966156 -309.65100098]
[-20.31734276 -324.25177002]
[-23.87133598 -338.82467651]
[-27.42532730 -353.39755249]
[-30.97932053 -367.97045898]
[-34.53331375 -382.54333496]
[-39.61244965 -390.14968872]
[-38.02581787 -397.37695312]
[-41.34696960 -412.00466919]
[-44.66812515 -426.63235474]
[-58.17231750 -434.84286499]
[-61.83429718 -450.21704102]
[-53.48147964 -463.63369751]
[-38.06944275 -467.13290405]
[-24.74187088 -458.63870239]
[-21.40578079 -443.19055176]
[-30.04041290 -429.95352173]
[-26.71925926 -415.32580566]
[-23.39810562 -400.69808960]
[-19.96042252 -386.09732056]
[-16.40642929 -371.52444458]
[-12.85243797 -356.95156860]
[-9.29844475 -342.37866211]
[-5.74445295 -327.80578613]
[-1.09998989 -322.04559326]
[-2.25194955 -312.97216797]
[1.06920445 -298.34445190]
[5.62122202 -292.51095581]
[4.32471943 -283.45706177]
[7.41219044 -268.77822876]
[10.49966145 -254.09942627]
[13.58713245 -239.42060852]
[16.67460251 -224.74180603]
[19.76207352 -210.06298828]
[22.84954453 -195.38417053]
[25.93701553 -180.70536804]
[29.02448654 -166.02655029]
[32.69456482 -151.48246765]
[36.94141388 -137.09620667]
[47.96551895 -127.08029938]
[44.45195007 -111.65417480]
[48.69879913 -97.26792145]
[52.94564819 -82.88166809]
[63.96975327 -72.86576080]
[60.45618439 -57.43963242]
[64.70303345 -43.05338287]
[68.94988251 -28.66712761]
[73.19673157 -14.28087521]
[86.36175537 -7.40936041]
[90.87360382 7.11984777]
[83.57686615 20.88194656]
[87.82371521 35.26819992]
[92.07056427 49.65445328]
[96.31741333 64.04070282]
[100.56426239 78.42695618]
[104.81111145 92.81320953]
[109.64614868 88.58618927]
[115.43321228 85.40779114]
[130.29560852 83.38074493]
[142.92361450 73.84951782]
[156.57972717 79.79592896]
[171.44212341 77.76888275]
[186.30453491 75.74184418]
[198.92984009 65.27600098]
[214.21000671 71.22983551]
[216.42613220 87.47855377]
[203.29843140 97.30686951]
[188.33157349 90.60424805]
[173.46917725 92.63128662]
[158.60676575 94.65833282]
[147.04183960 104.04457855]
[132.32266235 98.24314880]
[117.46025085 100.27019501]
[107.68673706 111.64905548]
[107.92593384 126.64714813]
[108.16513062 141.64523315]
[108.40433502 156.64332581]
[108.64353180 171.64141846]
[108.88272858 186.63951111]
[109.12192535 201.63760376]
[109.36112213 216.63569641]
[122.41313171 222.07299805]
[132.37522888 232.04557800]
[137.76556396 245.02325439]
[137.80018616 259.03250122]
[132.50691223 271.95648193]
[122.71608734 281.85494995]
[109.93058777 287.25552368]
[109.93058777 302.25552368]
[109.93058777 317.25552368]
[109.93058777 332.25552368]
[109.93058777 347.25552368]
[109.93058777 362.25552368]
[113.06290436 370.84869385]
[109.80907440 377.49423218]
[109.56987762 392.49230957]
[109.33068085 407.49041748]
[121.56800079 416.84744263]
[125.89852142 431.44540405]
[120.86243439 445.62643433]
[108.58856964 454.02227783]
[108.34937286 469.02038574]
[111.34426117 477.66241455]
[107.98487091 484.25521851]
[107.50653839 499.24758911]
[107.02820587 514.23999023]
[114.32149506 528.27984619]
[106.18227386 540.75390625]
[105.70394135 555.74627686]
[112.99723053 569.78619385]
[104.85800934 582.26025391]
[104.37966919 597.25262451]
[107.23637390 605.94128418]
[103.77227783 612.47973633]
[103.05493164 627.46252441]
[102.33757782 642.44537354]
[101.62023163 657.42822266]
[112.43248749 668.95520020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 195]
[6 194]
[7 193]
[8 192]
[9 190]
[10 189]
[12 187]
[13 186]
[15 184]
[16 183]
[17 182]
[18 180]
[19 179]
[23 175]
[24 174]
[25 173]
[26 171]
[27 170]
[28 169]
[29 168]
[30 167]
[31 166]
[37 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[44 152]
[45 134]
[46 133]
[47 132]
[48 131]
[49 130]
[50 129]
[53 126]
[54 125]
[55 124]
[56 123]
[58 121]
[59 120]
[60 119]
[62 117]
[63 116]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[78 105]
[79 104]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[86 97]
[87 96]
[88 95]
[136 151]
[137 150]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
