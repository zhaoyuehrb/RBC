%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUGGCGUGGCAGUGAUCGCUUGGCUUGGCAUUUCUGGCUUAGCGGUCCUCCUUUCGCAGAUUGGAAACCGCGGGCUAUCCUGCUGGGAGGUUGUGGCCGAGGCAGUAGCUCGCUACUGAUGGCCUCCUGGGGUGGAGAAAAGCGGGGAGGGGCUGGGGGGUCUCCGAAGCCGGCAGUCUACGCCACGAGGAAGACCCCUAGUGUUGGGAGCCAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[20.32331467 271.13348389]
[13.73284626 284.60812378]
[7.14237690 298.08276367]
[8.02955437 313.87905884]
[-4.51284361 321.91259766]
[-11.10331249 335.38720703]
[-17.69378281 348.86184692]
[-12.79860973 363.64950562]
[-19.67423439 377.22082520]
[-33.80218124 381.79647827]
[-40.39265060 395.27111816]
[-46.98311996 408.74575806]
[-40.47359467 422.96405029]
[-44.67617416 438.02633667]
[-57.60652924 446.82064819]
[-73.15933990 445.19458008]
[-83.99104309 433.91592407]
[-84.98724365 418.31011963]
[-75.67756653 405.74572754]
[-60.45775223 402.15527344]
[-53.86728287 388.68066406]
[-47.27681351 375.20602417]
[-52.33831024 361.24475098]
[-45.84658813 347.48568726]
[-31.16841507 342.27139282]
[-24.57794571 328.79675293]
[-17.98747635 315.32211304]
[-19.34604836 300.48959351]
[-6.33225536 291.49227905]
[0.25821403 278.01763916]
[6.84868336 264.54302979]
[4.70528841 247.12226868]
[20.07563210 236.97538757]
[26.47389412 223.40843201]
[32.87215805 209.84147644]
[39.27042007 196.27453613]
[45.66868591 182.70758057]
[52.06694794 169.14062500]
[58.46520996 155.57366943]
[64.86347198 142.00671387]
[71.26173401 128.43975830]
[77.66000366 114.87281036]
[78.78708649 102.04103851]
[85.43478394 93.91864014]
[93.52015686 92.04940033]
[89.51786041 77.59320068]
[85.51556396 63.13700485]
[81.51326752 48.68080902]
[77.51097107 34.22461319]
[73.50867462 19.76841545]
[69.40373230 5.34103060]
[65.19634247 -9.05681324]
[60.98896027 -23.45465660]
[49.83227921 -33.48104858]
[35.06846619 -36.13242340]
[20.30465126 -38.78379440]
[5.54083776 -41.43516922]
[-5.56154537 -30.59465790]
[-20.92028809 -28.38363457]
[-34.62964249 -35.65228271]
[-41.41807938 -49.60565948]
[-38.67530823 -64.87841034]
[-27.45597839 -75.59784698]
[-12.07415390 -77.64212036]
[1.55554163 -70.22518158]
[8.19221210 -56.19898605]
[22.95602608 -53.54761124]
[37.71984100 -50.89623642]
[52.48365402 -48.24486160]
[63.71131516 -58.19170380]
[62.85885620 -73.16745758]
[62.00639343 -88.14321899]
[61.15393066 -103.11897278]
[44.62612534 -112.78667450]
[37.33044434 -130.32725525]
[42.05167770 -148.57334900]
[56.70387268 -160.18711853]
[55.21372223 -175.11291504]
[53.72357178 -190.03871155]
[52.23342133 -204.96450806]
[50.74327087 -219.89031982]
[49.25312424 -234.81611633]
[47.76297379 -249.74191284]
[44.72459412 -253.96832275]
[43.70782852 -258.48587036]
[44.48596573 -262.47744751]
[46.54144287 -265.33377075]
[45.68898010 -280.30953979]
[44.83651733 -295.28527832]
[43.98405838 -310.26104736]
[43.13159561 -325.23681641]
[42.27913284 -340.21255493]
[41.42667389 -355.18832397]
[40.57421112 -370.16406250]
[39.29637909 -385.10955811]
[37.59421158 -400.01266479]
[35.89204407 -414.91577148]
[34.18987656 -429.81887817]
[32.48770905 -444.72198486]
[28.40736198 -452.88598633]
[30.86882019 -459.84881592]
[29.37866974 -474.77462769]
[27.88852119 -489.70043945]
[14.86903954 -498.36224365]
[10.51287460 -513.38079834]
[16.87687302 -527.66485596]
[30.95615196 -534.46984863]
[46.10290146 -530.58270264]
[55.16529465 -517.83880615]
[53.86434555 -502.25543213]
[42.81431961 -491.19058228]
[44.30447006 -476.26477051]
[45.79461670 -461.33898926]
[47.39081573 -446.42413330]
[49.09298325 -431.52102661]
[50.79515076 -416.61791992]
[52.49732208 -401.71481323]
[54.19948959 -386.81170654]
[56.29938889 -384.96524048]
[57.79717255 -382.17871094]
[58.33227539 -378.67639160]
[57.63148880 -374.80825806]
[55.54996872 -371.01654053]
[56.40243149 -356.04077148]
[57.25489044 -341.06503296]
[58.10735321 -326.08926392]
[58.95981598 -311.11349487]
[59.81227493 -296.13775635]
[60.66473770 -281.16198730]
[61.51720047 -266.18624878]
[62.68877029 -251.23205566]
[64.17892456 -236.30625916]
[65.66906738 -221.38046265]
[67.15921783 -206.45466614]
[68.64936829 -191.52886963]
[70.13951874 -176.60307312]
[71.62966919 -161.67727661]
[82.13999939 -157.97482300]
[90.55030060 -150.58648682]
[95.62225342 -140.54922485]
[96.59015656 -129.29351807]
[93.27630615 -118.43961334]
[86.12210846 -109.56420135]
[76.12969208 -103.97143555]
[76.98214722 -88.99568176]
[77.83460999 -74.01992035]
[78.68707275 -59.04416275]
[75.38680267 -27.66204262]
[79.59419250 -13.26419830]
[83.80157471 1.13364506]
[88.69124603 6.66816998]
[87.96487427 15.76611805]
[91.96717072 30.22231483]
[95.96946716 44.67851257]
[99.97176361 59.13470840]
[103.97406006 73.59090424]
[107.97635651 88.04710388]
[117.92319489 99.27476501]
[131.79156494 104.99037933]
[145.65994263 110.70600128]
[159.52830505 116.42161560]
[173.39668274 122.13722992]
[187.26504517 127.85285187]
[201.13342285 133.56846619]
[215.00180054 139.28408813]
[228.91044617 144.90098572]
[242.85865784 150.41888428]
[252.16264343 141.47431946]
[264.11407471 136.72778320]
[276.92626953 136.85090637]
[288.69815063 141.79008484]
[297.69638062 150.77976990]
[302.61053467 162.46087646]
[302.74383545 175.08616638]
[316.52954102 180.99833679]
[330.31527710 186.91052246]
[344.19223022 179.70193481]
[359.44488525 183.15020752]
[368.87139893 195.62719727]
[368.02081299 211.24162292]
[357.29483032 222.62084961]
[341.75784302 224.39195251]
[328.74600220 215.71865845]
[324.40307617 200.69624329]
[310.61737061 194.78407288]
[296.83163452 188.87188721]
[283.41986084 199.67788696]
[266.29367065 202.21133423]
[250.16249084 195.68428040]
[239.50834656 181.81285095]
[237.34075928 164.36711121]
[223.39253235 158.84919739]
[216.02189636 159.31121826]
[209.28617859 153.15245056]
[195.41780090 147.43684387]
[181.54943848 141.72122192]
[167.68106079 136.00559998]
[153.81269836 130.28999329]
[139.94432068 124.57437134]
[126.07595062 118.85874939]
[112.20758057 113.14313507]
[121.63800812 124.80791473]
[132.67672729 134.96401978]
[134.93232727 149.79345703]
[127.41251373 162.77238464]
[113.42543793 168.19102478]
[99.12436676 163.66558838]
[90.80072021 151.18693542]
[92.11629486 136.24468994]
[91.22695160 121.27107239]
[84.82868958 134.83802795]
[78.43042755 148.40498352]
[72.03216553 161.97193909]
[65.63390350 175.53887939]
[59.23563766 189.10583496]
[52.83737564 202.67279053]
[46.43910980 216.23974609]
[40.04084778 229.80670166]
[33.64258575 243.37365723]
[37.25842285 255.74961853]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[5 27]
[6 26]
[7 25]
[10 22]
[11 21]
[12 20]
[33 219]
[34 218]
[35 217]
[36 216]
[37 215]
[38 214]
[39 213]
[40 212]
[41 211]
[42 210]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[50 152]
[51 150]
[52 149]
[53 148]
[54 69]
[55 68]
[56 67]
[57 66]
[70 147]
[71 146]
[72 145]
[73 144]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[101 113]
[102 112]
[103 111]
[158 201]
[159 200]
[160 199]
[161 198]
[162 197]
[163 196]
[164 195]
[165 194]
[166 192]
[167 191]
[174 186]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
