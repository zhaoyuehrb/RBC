%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGGGGCCAGGACGGCGGGACCGGCCGCUGGGUCCCAGCGAGGGCUGAGCCGGGCGGUGGGAGGAGGUCAGGAUGGUGGGGGAACGGCAUGCUGGGGACCUCAUGGUGCCCUUAGGGCCUCGGCUGCAGGCAUAUCCUGAAGAACUCAUUCGACAGAGGCCUGGGCAUGACG\
) } def
/len { sequence length } bind def

/coor [
[291.72985840 301.55151367]
[306.68716431 302.67996216]
[295.70877075 292.45867920]
[281.12139893 289.44897461]
[276.29345703 274.38241577]
[265.31503296 264.16113281]
[254.33662415 253.93986511]
[243.35821533 243.71859741]
[232.37979126 233.49732971]
[221.40138245 223.27606201]
[210.42295837 213.05479431]
[195.59336853 213.84141541]
[184.31408691 203.63198853]
[183.58955383 188.07200623]
[172.61112976 177.85073853]
[158.02377319 174.84103394]
[153.19584656 159.77445984]
[142.21742249 149.55319214]
[131.23901367 139.33192444]
[120.26058960 129.11065674]
[104.12570953 135.22640991]
[87.01432037 133.00445557]
[72.97650146 122.97068787]
[65.33486176 107.50000000]
[50.33486176 107.50000000]
[36.53468704 115.23729706]
[23.80741692 107.50000000]
[8.80741692 107.50000000]
[-6.19258356 107.50000000]
[-21.19258308 107.50000000]
[-36.19258499 107.50000000]
[-51.19258499 107.50000000]
[-64.99275208 115.23729706]
[-77.72002411 107.50000000]
[-92.72002411 107.50000000]
[-107.72002411 107.50000000]
[-117.39426422 116.06258392]
[-129.90805054 115.73556519]
[-138.54882812 107.24120331]
[-153.54643250 106.97346497]
[-168.54403687 106.70573425]
[-183.54165649 106.43799591]
[-197.61787415 114.85179138]
[-211.80886841 106.63305664]
[-211.51615906 90.23652649]
[-197.04086304 82.52953339]
[-183.27391052 91.44038391]
[-168.27630615 91.70812225]
[-153.27870178 91.97585297]
[-138.28108215 92.24359131]
[-123.42922211 82.92125702]
[-107.72002411 92.50000000]
[-92.72002411 92.50000000]
[-77.72002411 92.50000000]
[-64.99275208 84.76270294]
[-51.19258499 92.50000000]
[-36.19258499 92.50000000]
[-21.19258308 92.50000000]
[-6.19258356 92.50000000]
[8.80741692 92.50000000]
[23.80741692 92.50000000]
[36.53468704 84.76270294]
[50.33486176 92.50000000]
[65.33486176 92.50000000]
[70.15589142 80.83620453]
[78.75598145 71.59906006]
[90.04612732 65.95822906]
[88.97603607 50.99644470]
[87.90595245 36.03466415]
[86.83586121 21.07288170]
[85.76577759 6.11110067]
[84.69568634 -8.85068130]
[83.22543335 -23.77845192]
[81.35605621 -38.66151047]
[71.95923615 -51.38983536]
[78.05007935 -64.98214722]
[76.18070984 -79.86520386]
[74.31133270 -94.74826050]
[64.91451263 -107.47659302]
[71.00535583 -121.06890106]
[69.13598633 -135.95195007]
[56.50288010 -145.44828796]
[54.36759186 -161.10766602]
[63.99695206 -173.63966370]
[79.67803192 -175.60926819]
[92.10752106 -165.84794617]
[93.91122437 -150.14692688]
[84.01904297 -137.82133484]
[85.88841248 -122.93827057]
[95.15152740 -111.27448273]
[89.19439697 -96.61763763]
[91.06376648 -81.73458099]
[92.93313599 -66.85151672]
[102.19625092 -55.18772888]
[96.23912048 -40.53088379]
[98.10848999 -25.64782524]
[100.68537903 -23.19664764]
[102.18720245 -19.36255264]
[101.97119141 -14.67193794]
[99.65747070 -9.92076874]
[100.72755432 5.04101276]
[101.79764557 20.00279427]
[102.86772919 34.96457672]
[103.93782043 49.92635727]
[105.00791168 64.88813782]
[118.07720184 69.48546600]
[128.38815308 78.73889923]
[134.36746216 91.23648834]
[135.10276794 105.07126617]
[130.48185730 118.13224030]
[141.46028137 128.35350037]
[152.43869019 138.57478333]
[163.41711426 148.79605103]
[178.78971863 152.53684998]
[182.83239746 166.87232971]
[193.81082153 177.09359741]
[209.38284302 176.70623779]
[220.37091064 187.22845459]
[220.64422607 202.07637024]
[231.62265015 212.29763794]
[242.60105896 222.51892090]
[253.57948303 232.74018860]
[264.55789185 242.96145630]
[275.53631592 253.18272400]
[286.51473999 263.40399170]
[301.88732910 267.14477539]
[305.93002319 281.48025513]
[316.90844727 291.70153809]
[328.06979370 294.64810181]
[332.56542969 303.86425781]
[345.18423462 311.97387695]
[357.80303955 320.08346558]
[370.42184448 328.19308472]
[383.04064941 336.30270386]
[392.62240601 331.48394775]
[403.25967407 331.09777832]
[413.01611328 335.14700317]
[420.14373779 342.83319092]
[423.39614868 352.71310425]
[422.24606323 362.96936035]
[434.41271973 371.74276733]
[446.57934570 380.51614380]
[461.98168945 378.19116211]
[474.19543457 387.26196289]
[476.31704712 401.96005249]
[488.48370361 410.73345947]
[500.65036011 419.50686646]
[517.01141357 420.62359619]
[523.98089600 435.46807861]
[514.38916016 448.76959229]
[498.10336304 446.84466553]
[491.87695312 431.67352295]
[479.71029663 422.90011597]
[467.54364014 414.12670898]
[452.92770386 416.75534058]
[440.46398926 408.03118896]
[437.80596924 392.68280029]
[425.63931274 383.90942383]
[413.47265625 375.13601685]
[394.55792236 379.68380737]
[378.11538696 368.72882080]
[374.93103027 348.92150879]
[362.31222534 340.81188965]
[349.69342041 332.70227051]
[337.07461548 324.59265137]
[324.45581055 316.48306274]
[329.24826050 330.69686890]
[327.16088867 345.55093384]
[318.63662720 357.89340210]
[305.48419189 365.10543823]
[290.49432373 365.65673828]
[276.84765625 359.43029785]
[267.43978882 347.74731445]
[264.26693726 333.08670044]
[268.00234985 318.55926514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 128]
[3 127]
[5 125]
[6 124]
[7 123]
[8 122]
[9 121]
[10 120]
[11 119]
[14 116]
[15 115]
[17 113]
[18 112]
[19 111]
[20 110]
[24 64]
[25 63]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[34 54]
[35 53]
[36 52]
[39 50]
[40 49]
[41 48]
[42 47]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[73 96]
[74 95]
[76 93]
[77 92]
[78 91]
[80 89]
[81 88]
[130 166]
[131 165]
[132 164]
[133 163]
[134 162]
[140 159]
[141 158]
[142 157]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
