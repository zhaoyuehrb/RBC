%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGUAAAAAAGAGAGGGCGAAGGUAGGCUGGCAGAUACGUUCGUCAGCUUGCUCCUUUCUGCCCGUGGACGCCGCCGAAGAAGCAUCGUUAAAGUCUCUCUUCACCCUGCCGUCAUGUCUAAGUCAGAGUCUCCUAAAGAGCCCGAACAGCUGAGGAAGCUCUUCAUUGGAGGGUUGAGCUUUGAAACAACUGAUGAGAGCCUGAGGAGCCAUU\
) } def
/len { sequence length } bind def

/coor [
[-165.31202698 172.28407288]
[-179.07577515 178.24720764]
[-192.83952332 184.21035767]
[-206.60328674 190.17349243]
[-220.36703491 196.13664246]
[-229.95394897 208.72241211]
[-244.70819092 206.68243408]
[-258.47195435 212.64556885]
[-258.69567871 230.61123657]
[-266.73739624 246.61882019]
[-280.93280029 257.45880127]
[-298.38903809 260.98059082]
[-315.57424927 256.51892090]
[-329.03204346 245.01916504]
[-342.52648926 251.56893921]
[-356.02096558 258.11871338]
[-369.51541138 264.66848755]
[-383.00988770 271.21823120]
[-396.50433350 277.76800537]
[-409.99880981 284.31777954]
[-396.87957764 291.59005737]
[-394.24041748 306.35604858]
[-404.02828979 317.72256470]
[-419.02243042 317.30426025]
[-428.16137695 305.40972900]
[-424.70333862 290.81417847]
[-438.63250732 296.38003540]
[-452.56164551 301.94589233]
[-466.49081421 307.51174927]
[-480.41995239 313.07760620]
[-494.34912109 318.64346313]
[-508.27825928 324.20932007]
[-522.20739746 329.77517700]
[-536.13653564 335.34103394]
[-550.06573486 340.90689087]
[-563.99487305 346.47274780]
[-570.79772949 352.55941772]
[-578.16394043 352.01693726]
[-592.17150879 357.38241577]
[-599.99414062 371.38903809]
[-615.84521484 373.86380005]
[-627.56506348 362.90823364]
[-626.16326904 346.92654419]
[-612.71514893 338.17849731]
[-597.53698730 343.37484741]
[-583.52941895 338.00939941]
[-569.56072998 332.54357910]
[-555.63159180 326.97772217]
[-541.70239258 321.41186523]
[-527.77325439 315.84600830]
[-513.84411621 310.28015137]
[-499.91497803 304.71429443]
[-485.98580933 299.14843750]
[-472.05667114 293.58258057]
[-458.12750244 288.01672363]
[-444.19836426 282.45089722]
[-430.26919556 276.88504028]
[-416.54858398 270.82330322]
[-403.05410767 264.27355957]
[-389.55966187 257.72378540]
[-376.06518555 251.17401123]
[-362.57073975 244.62423706]
[-349.07626343 238.07447815]
[-335.58178711 231.52470398]
[-336.93154907 219.37553406]
[-334.48645020 207.37371826]
[-328.46731567 196.67832947]
[-319.44091797 188.32696533]
[-308.26651001 183.13505554]
[-296.01422119 181.61631775]
[-283.86236572 183.93190002]
[-272.98434448 189.87345886]
[-264.43508911 198.88182068]
[-250.67132568 192.91867065]
[-242.06890869 180.75941467]
[-226.33018494 182.37287903]
[-212.56642151 176.40974426]
[-198.80267334 170.44659424]
[-185.03892517 164.48345947]
[-171.27516174 158.52030945]
[-173.04806519 150.35891724]
[-173.65592957 142.02627563]
[-173.08583069 133.68794250]
[-171.34823608 125.50965118]
[-168.47685242 117.65411377]
[-164.52793884 110.27773285]
[-159.57920837 103.52748871]
[-153.72833252 97.53802490]
[-147.09095764 92.42897034]
[-139.79846191 88.30252838]
[-131.99536133 85.24143219]
[-123.83638763 83.30731201]
[-115.48350525 82.53943634]
[-107.10260773 82.95390320]
[-98.86029053 84.54334259]
[-90.92050934 87.27698517]
[-83.44131470 91.10133362]
[-76.57173920 95.94113159]
[-70.44877625 101.70091248]
[-65.19468689 108.26683044]
[-60.91454697 115.50893402]
[-57.69415283 123.28374481]
[-42.97455597 120.39697266]
[-28.25495911 117.51020050]
[-13.53536129 114.62342072]
[1.18423557 111.73664856]
[15.90383244 108.84987640]
[30.62343025 105.96310425]
[38.69268799 93.49623871]
[53.57932663 90.35895538]
[66.60101318 98.90726471]
[81.32061005 96.02048492]
[89.48983002 84.05344391]
[103.70848846 81.26491547]
[115.79261780 89.25991821]
[130.51222229 86.37313843]
[145.23181152 83.48636627]
[159.95141602 80.59959412]
[174.67100525 77.71282196]
[182.48445129 72.99296570]
[189.62237549 74.89179993]
[204.38186646 72.21647644]
[208.41203308 58.82505035]
[217.77317810 48.52478409]
[230.59703064 43.28662872]
[244.36045837 44.07965469]
[256.38189697 50.69226837]
[264.34371948 61.78459930]
[279.14007568 59.32126236]
[293.93643188 56.85792923]
[308.73275757 54.39459610]
[323.52911377 51.93126297]
[338.32546997 49.46792984]
[346.27108765 44.97415924]
[353.35162354 47.07697296]
[368.18176270 44.82614517]
[383.01193237 42.57531357]
[371.58203125 32.86154556]
[370.23614502 17.92204857]
[379.74588013 6.32184029]
[394.65917969 4.71148014]
[406.42605591 14.01420975]
[408.30038452 28.89664650]
[399.20840454 40.82600021]
[414.17715454 39.85837173]
[429.14593506 38.89074707]
[444.11468506 37.92311859]
[459.08343506 36.95549011]
[466.74679565 25.88337135]
[479.20529175 21.31142616]
[491.83557129 24.69774246]
[500.08654785 34.59025574]
[515.06762695 33.83744812]
[530.04876709 33.08464432]
[538.45666504 29.53028297]
[545.24981689 32.43005371]
[560.24017334 31.89222527]
[575.23052979 31.35439682]
[590.22088623 30.81656837]
[605.21124268 30.27873993]
[620.20159912 29.74090958]
[635.81378174 23.13054276]
[646.48767090 36.30263519]
[636.78515625 50.20580292]
[620.73944092 44.73126602]
[605.74908447 45.26909256]
[590.75872803 45.80692291]
[575.76837158 46.34474945]
[560.77801514 46.88257980]
[545.78765869 47.42041016]
[530.80157471 48.06574249]
[515.82043457 48.81854630]
[500.83935547 49.57135391]
[490.09939575 62.51669693]
[472.98254395 63.70963287]
[460.05105591 51.92424774]
[445.08230591 52.89187622]
[430.11355591 53.85950470]
[415.14480591 54.82712936]
[400.17602539 55.79475784]
[385.26275635 57.40547562]
[370.43261719 59.65630722]
[355.60244751 61.90713882]
[340.78878784 64.26428223]
[325.99246216 66.72761536]
[311.19610596 69.19094849]
[296.39974976 71.65428162]
[281.60339355 74.11761475]
[266.80703735 76.58094788]
[261.50512695 91.84824371]
[249.15505981 102.41805267]
[233.06735229 105.33238220]
[217.61779785 99.70226288]
[207.05720520 86.97596741]
[192.29769897 89.65129089]
[177.55778503 92.43241882]
[162.83818054 95.31919098]
[148.11859131 98.20596313]
[133.39898682 101.09273529]
[118.67938995 103.97951508]
[110.51016998 115.94655609]
[96.29151154 118.73508453]
[84.20738220 110.74008179]
[69.48778534 113.62686157]
[60.65945053 126.46034241]
[45.69056320 129.17825317]
[33.51020432 120.68270111]
[18.79060555 123.56947327]
[4.07100916 126.45624542]
[-10.64858818 129.34301758]
[-25.36818504 132.22979736]
[-40.08778000 135.11656189]
[-54.80738068 138.00334167]
[-57.65813446 160.47636414]
[-68.66704559 180.24516296]
[-86.23094177 194.47021484]
[-107.80666351 201.11637878]
[-130.27934265 199.24418640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[4 77]
[5 76]
[7 74]
[8 73]
[14 64]
[15 63]
[16 62]
[17 61]
[18 60]
[19 59]
[20 58]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[38 46]
[39 45]
[102 213]
[103 212]
[104 211]
[105 210]
[106 209]
[107 208]
[108 207]
[111 204]
[112 203]
[115 200]
[116 199]
[117 198]
[118 197]
[119 196]
[121 195]
[122 194]
[128 189]
[129 188]
[130 187]
[131 186]
[132 185]
[133 184]
[135 183]
[136 182]
[137 181]
[144 180]
[145 179]
[146 178]
[147 177]
[148 176]
[152 173]
[153 172]
[154 171]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
