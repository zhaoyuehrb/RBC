%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGCGACGGGAGCUUUCCGGAGCUGCUGGUACUCCCGAUUGGAGACGUAGAACCGUUACUUGUCGAGGGCCUUAGCGGCCGCCGUGACCCUCUCGGGGAUCCCACGAUGUUCUUCUACCUGAGCAAGAAAAUUUCCAUUCCCAAUAACGUGAAGCUGCAGUGUGUAUCCUGGAACAAGGAACAAGGGUUCAUAGCAUGCGGUGGUG\
) } def
/len { sequence length } bind def

/coor [
[116.66596222 120.98138428]
[109.60610962 126.36602020]
[100.80671692 129.31677246]
[91.12348938 129.27830505]
[84.58622742 142.77882385]
[78.04896545 156.27935791]
[83.00243378 171.04759216]
[76.18039703 184.64591980]
[62.07061386 189.27728271]
[55.53335190 202.77781677]
[48.99608994 216.27833557]
[42.45882797 229.77886963]
[35.92156982 243.27938843]
[34.46051407 260.17025757]
[17.82528305 263.44216919]
[10.07615376 248.36280823]
[22.42104149 236.74212646]
[28.95830345 223.24160767]
[35.49556351 209.74107361]
[42.03282547 196.24055481]
[48.57008743 182.74002075]
[43.45355225 168.79884338]
[49.89094543 155.01425171]
[64.54843903 149.74209595]
[71.08570099 136.24156189]
[77.62296295 122.74103546]
[69.70393372 110.00176239]
[54.70436096 109.88903046]
[39.70478439 109.77629852]
[24.70520782 109.66355896]
[9.70563221 109.55082703]
[-1.50905883 120.36139679]
[-16.71915627 120.03339386]
[-26.95627213 109.27527618]
[-41.95584869 109.16254425]
[-56.95542526 109.04980469]
[-70.81336212 116.68316650]
[-83.48211670 108.85043335]
[-98.48169708 108.73769379]
[-113.48126984 108.62496185]
[-128.48085022 108.51222229]
[-142.33877563 116.14559174]
[-155.00753784 108.31285095]
[-170.00712585 108.20011902]
[-183.86505127 115.83348083]
[-196.53381348 108.00074768]
[-211.53338623 107.88800812]
[-226.53297424 107.77527618]
[-241.53254700 107.66253662]
[-252.61424255 118.93070984]
[-268.41845703 118.97902679]
[-279.56881714 107.77881622]
[-279.45004272 91.97497559]
[-268.13256836 80.94363403]
[-252.33087158 81.22949982]
[-241.41981506 92.66296387]
[-226.42022705 92.77569580]
[-211.42065430 92.88843536]
[-196.42108154 93.00116730]
[-183.63601685 85.35974121]
[-169.89437866 93.20053864]
[-154.89480591 93.31327820]
[-142.10974121 85.67185211]
[-128.36811829 93.51264954]
[-113.36853790 93.62538147]
[-98.36895752 93.73812103]
[-83.36938477 93.85085297]
[-70.58432007 86.20942688]
[-56.84268951 94.05023193]
[-41.84311295 94.16296387]
[-26.84353638 94.27570343]
[-16.44587135 83.67267609]
[-1.23256290 83.57332611]
[9.81836700 94.55124664]
[24.81794357 94.66398621]
[39.81752014 94.77671814]
[54.81709671 94.88945770]
[69.81667328 95.00218964]
[92.51180267 74.27259064]
[117.12721252 84.65523529]
[130.95283508 78.83695984]
[144.77844238 73.01868439]
[158.60406494 67.20040131]
[172.42967224 61.38212967]
[186.25529480 55.56385040]
[200.08091736 49.74557495]
[213.90652466 43.92729950]
[227.35754395 37.28875732]
[240.38533020 29.85393906]
[253.41313171 22.41912079]
[266.44091797 14.98430443]
[279.46871948 7.54948664]
[292.49652100 0.11466880]
[298.94378662 -10.00056171]
[309.55059814 -11.21110535]
[321.45660400 -20.33507156]
[327.70394897 -34.87058640]
[342.51235962 -36.47077179]
[354.41836548 -45.59473801]
[366.32440186 -54.71870422]
[378.23040771 -63.84267044]
[390.13644409 -72.96663666]
[392.59896851 -85.62858582]
[402.70468140 -92.98274994]
[414.71432495 -91.52719116]
[426.75613403 -100.47116852]
[438.79794312 -109.41514587]
[450.83975220 -118.35912323]
[457.30487061 -132.79908752]
[472.13565063 -134.17651367]
[484.17745972 -143.12048340]
[496.21929932 -152.06446838]
[503.13653564 -169.12924194]
[520.63378906 -170.46722412]
[532.53979492 -179.59120178]
[544.44580078 -188.71516418]
[556.35180664 -197.83912659]
[561.26086426 -205.54421997]
[568.50604248 -207.00915527]
[580.54791260 -215.95312500]
[575.76934814 -230.29267883]
[575.65710449 -245.38671875]
[580.20959473 -259.75692749]
[588.96899414 -271.99981689]
[601.06719971 -280.92370605]
[615.31195068 -285.66476440]
[630.30426025 -285.77062988]
[644.57574463 -281.24353027]
[656.73260498 -272.53881836]
[668.77441406 -281.48281860]
[680.81622314 -290.42678833]
[680.51831055 -305.94100952]
[689.42395020 -318.64807129]
[704.10864258 -323.66189575]
[718.92590332 -319.05453491]
[728.17822266 -306.59762573]
[728.30780029 -291.08108521]
[719.26489258 -278.47137451]
[704.52667236 -273.61715698]
[689.76019287 -278.38497925]
[677.71838379 -269.44097900]
[665.67657471 -260.49700928]
[670.49749756 -246.34356689]
[670.70794678 -231.37274170]
[666.27478027 -217.05047607]
[657.62011719 -204.78314209]
[645.58123779 -195.77935791]
[631.32965088 -190.93096924]
[616.25695801 -190.72470093]
[601.83911133 -195.19335938]
[589.49188232 -203.91131592]
[577.45007324 -194.96734619]
[565.47576904 -185.93310547]
[553.56976318 -176.80914307]
[541.66375732 -167.68518066]
[529.75775146 -158.56121826]
[527.86059570 -146.61337280]
[518.01477051 -138.91471863]
[505.16326904 -140.02265930]
[493.12145996 -131.07867432]
[481.07962036 -122.13469696]
[475.47583008 -108.33446503]
[459.78372192 -106.31730652]
[447.74191284 -97.37333679]
[435.70010376 -88.42935944]
[423.65829468 -79.48538208]
[417.56848145 -63.02761841]
[399.26040649 -61.06061935]
[387.35437012 -51.93665314]
[375.44836426 -42.81268692]
[363.54235840 -33.68872070]
[351.63632202 -24.56475449]
[346.24057007 -10.68184662]
[330.58056641 -8.42905426]
[318.67456055 0.69491190]
[333.65847778 1.38915873]
[346.46109009 9.20536423]
[353.92553711 22.21621132]
[354.21124268 37.21348953]
[347.24771118 50.49917984]
[334.75207520 58.79729462]
[319.80545044 60.06169510]
[306.09341431 53.98060226]
[296.99703979 42.05348969]
[294.75930786 27.22134018]
[299.93133545 13.14246559]
[286.90353394 20.57728386]
[273.87576294 28.01210022]
[260.84796143 35.44691849]
[247.82015991 42.88173676]
[234.79235840 50.31655502]
[249.49069214 53.30968475]
[259.70800781 64.29177856]
[261.63424683 79.16758728]
[254.55110168 92.38987732]
[241.09988403 99.02803040]
[226.29661560 96.60665131]
[215.66145325 86.02868652]
[213.16027832 71.23867798]
[219.72480774 57.75291443]
[205.89918518 63.57119370]
[192.07357788 69.38946533]
[178.24795532 75.20774078]
[164.42233276 81.02602386]
[150.59672546 86.84429932]
[136.77110291 92.66257477]
[122.94548798 98.48085022]
[123.47288513 106.13806915]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 26]
[5 25]
[6 24]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[34 71]
[35 70]
[36 69]
[38 67]
[39 66]
[40 65]
[41 64]
[43 62]
[44 61]
[46 59]
[47 58]
[48 57]
[49 56]
[80 207]
[81 206]
[82 205]
[83 204]
[84 203]
[85 202]
[86 201]
[87 200]
[88 191]
[89 190]
[90 189]
[91 188]
[92 187]
[93 186]
[95 175]
[96 174]
[98 172]
[99 171]
[100 170]
[101 169]
[102 168]
[105 166]
[106 165]
[107 164]
[108 163]
[110 161]
[111 160]
[112 159]
[114 156]
[115 155]
[116 154]
[117 153]
[119 152]
[120 151]
[129 142]
[130 141]
[131 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
